{
    "functions": {
        "FUN_0800071c": {
            "renaming": {
                "FUN_0800071c": "FUNC_0800071c"
            },
            "code": "\nulonglong FUNC_0800071c(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_0800088a();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_0800083a;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_0800083a:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_0800088a"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800071c",
            "calling": [
                "FUN_08005838",
                "FUN_08004d78",
                "FUN_080059f0",
                "FUN_08004bd8",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800071c"
        },
        "FUN_080036a8": {
            "renaming": {
                "FUN_080036a8": "set_flag_if_array_equals_080036a8",
                "param_1": "array",
                "param_2": "value_to_compare",
                "*param_1": "array_ptr",
                "DAT_080036f4": "array_end",
                "0x11": "array_length",
                "0x8000": "flag_bit"
            },
            "code": "int set_flag_if_array_equals_080036a8(uint **array, int value_to_compare) {\n  int* array_ptr = *array;\n  int array_length = 0x11;\n  int flag_bit = 0x8000;\n  int* DAT_080036f4 = *(uint**)0x080036f4;\n  \n  FUN_080041ea(array_ptr, value_to_compare, 1);\n  if (array_ptr == DAT_080036f4) {\n    array_ptr[array_length] |= flag_bit;\n  }\n  *array_ptr |= 1;\n  return 0;\n}",
            "called": [
                "FUN_080041ea"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036a8",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "set_flag_if_array_equals_080036a8"
        },
        "FUN_080088ec": {
            "renaming": {
                "FUN_080088ec": "FUNC_080088ec"
            },
            "code": "\nvoid FUNC_080088ec(undefined4 param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined *puVar7;\n  undefined *puVar8;\n  undefined *puVar9;\n  uint uVar10;\n  int iVar11;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  FUN_080090a8();\n  puVar8 = PTR_DAT_08008ac4;\n  uVar10 = *(uint *)(param_2 + -4);\n  iVar2 = param_2 + -8;\n  uVar5 = uVar10 & 0xfffffffe;\n  puVar3 = (uint *)(iVar2 + uVar5);\n  uVar6 = puVar3[1] & 0xfffffffc;\n  if (*(uint **)(PTR_DAT_08008ac4 + 8) == puVar3) {\n    uVar5 = uVar5 + uVar6;\n    if ((uVar10 & 1) == 0) {\n      iVar2 = iVar2 - *(int *)(param_2 + -8);\n      iVar11 = *(int *)(iVar2 + 8);\n      iVar1 = *(int *)(iVar2 + 0xc);\n      uVar5 = uVar5 + *(int *)(param_2 + -8);\n      *(int *)(iVar11 + 0xc) = iVar1;\n      *(int *)(iVar1 + 8) = iVar11;\n    }\n    uVar6 = *(uint *)PTR_DAT_08008acc;\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(int *)(puVar8 + 8) = iVar2;\n    if (uVar6 <= uVar5) {\n      FUN_0800884c(param_1,*(undefined4 *)PTR_DAT_08008ad0);\n    }\nLAB_080089f0:\n    FUN_080090b4(param_1);\n    return;\n  }\n  puVar3[1] = uVar6;\n  if ((uVar10 & 1) == 0) {\n    iVar2 = iVar2 - *(int *)(param_2 + -8);\n    puVar9 = *(undefined **)(iVar2 + 8);\n    uVar5 = uVar5 + *(int *)(param_2 + -8);\n    uVar10 = *(uint *)((int)puVar3 + uVar6 + 4) & 1;\n    if (puVar9 == puVar8 + 8) {\n      if (uVar10 == 0) {\n        uVar10 = puVar3[2];\n        uVar4 = puVar3[3];\n        uVar5 = uVar5 + uVar6;\n        *(uint *)(uVar10 + 0xc) = uVar4;\n        *(uint *)(uVar4 + 8) = uVar10;\n        *(uint *)(iVar2 + 4) = uVar5 | 1;\n        *(uint *)(iVar2 + uVar5) = uVar5;\n      }\n      else {\n        *(uint *)(iVar2 + 4) = uVar5 | 1;\n        *puVar3 = uVar5;\n      }\n      goto LAB_080089f0;\n    }\n    iVar11 = *(int *)(iVar2 + 0xc);\n    *(int *)(puVar9 + 0xc) = iVar11;\n    *(undefined **)(iVar11 + 8) = puVar9;\n  }\n  else {\n    uVar10 = *(uint *)((int)puVar3 + uVar6 + 4) & 1;\n  }\n  if (uVar10 == 0) {\n    puVar9 = (undefined *)puVar3[2];\n    uVar5 = uVar5 + uVar6;\n    if (puVar9 == PTR_PTR_DAT_08008ac8) {\n      *(int *)(puVar8 + 0x10) = iVar2;\n      *(int *)(puVar8 + 0x14) = iVar2;\n      *(undefined **)(iVar2 + 8) = puVar9;\n      *(undefined **)(iVar2 + 0xc) = puVar9;\n      *(uint *)(iVar2 + 4) = uVar5 | 1;\n      *(uint *)(iVar2 + uVar5) = uVar5;\n      goto LAB_080089f0;\n    }\n    uVar6 = puVar3[3];\n    *(uint *)(puVar9 + 0xc) = uVar6;\n    *(undefined **)(uVar6 + 8) = puVar9;\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(uint *)(iVar2 + uVar5) = uVar5;\n  }\n  else {\n    *(uint *)(iVar2 + 4) = uVar5 | 1;\n    *(uint *)(iVar2 + uVar5) = uVar5;\n  }\n  if (uVar5 < 0x200) {\n    iVar11 = (uVar5 >> 3) + 1;\n    uVar5 = 1 << ((int)(uVar5 >> 3) >> 2 & 0xffU) | *(uint *)(puVar8 + 4);\n    iVar1 = *(int *)(puVar8 + iVar11 * 8);\n    *(int *)(iVar2 + 8) = iVar1;\n    *(undefined **)(iVar2 + 0xc) = puVar8 + iVar11 * 8 + -8;\n    *(uint *)(puVar8 + 4) = uVar5;\n    *(int *)(puVar8 + iVar11 * 8) = iVar2;\n    *(int *)(iVar1 + 0xc) = iVar2;\n    FUN_080090b4(param_1,iVar2,uVar5,param_4);\n    return;\n  }\n  uVar6 = uVar5 >> 9;\n  if (uVar6 < 5) {\n    iVar11 = ((uVar5 >> 6) + 0x39) * 8;\n    iVar1 = (uVar5 >> 6) + 0x38;\n  }\n  else if (uVar6 < 0x15) {\n    iVar11 = (uVar6 + 0x5c) * 8;\n    iVar1 = uVar6 + 0x5b;\n  }\n  else if (uVar6 < 0x55) {\n    iVar11 = ((uVar5 >> 0xc) + 0x6f) * 8;\n    iVar1 = (uVar5 >> 0xc) + 0x6e;\n  }\n  else if (uVar6 < 0x155) {\n    iVar11 = ((uVar5 >> 0xf) + 0x78) * 8;\n    iVar1 = (uVar5 >> 0xf) + 0x77;\n  }\n  else if (uVar6 < 0x555) {\n    iVar11 = ((uVar5 >> 0x12) + 0x7d) * 8;\n    iVar1 = (uVar5 >> 0x12) + 0x7c;\n  }\n  else {\n    iVar11 = 0x3f8;\n    iVar1 = 0x7e;\n  }\n  puVar9 = *(undefined **)(puVar8 + iVar11);\n  puVar7 = puVar8 + iVar11 + -8;\n  if (puVar7 == puVar9) {\n    puVar9 = (undefined *)(1 << (iVar1 >> 2 & 0xffU) | *(uint *)(puVar8 + 4));\n    *(undefined **)(puVar8 + 4) = puVar9;\n    puVar8 = puVar7;\n  }\n  else {\n    do {\n      puVar8 = puVar9;\n      if ((*(uint *)(puVar9 + 4) & 0xfffffffc) <= uVar5) break;\n      puVar9 = *(undefined **)(puVar9 + 8);\n      puVar8 = puVar7;\n    } while (puVar7 != puVar9);\n    puVar7 = *(undefined **)(puVar8 + 0xc);\n  }\n  *(undefined **)(iVar2 + 8) = puVar8;\n  *(undefined **)(iVar2 + 0xc) = puVar7;\n  *(int *)(puVar7 + 8) = iVar2;\n  *(int *)(puVar8 + 0xc) = iVar2;\n  FUN_080090b4(param_1,iVar2,puVar9,param_4);\n  return;\n}\n\n",
            "called": [
                "FUN_080090a8",
                "FUN_080090b4",
                "FUN_0800884c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080088ec",
            "calling": [
                "FUN_08009adc",
                "FUN_08005e9c",
                "FUN_08008af8",
                "FUN_080097cc"
            ],
            "imported": false,
            "current_name": "FUNC_080088ec"
        },
        "FUN_08005224": {
            "renaming": {
                "FUN_08005224": "run_program_08005224",
                "FUN_080014f0": "initialize_memory",
                "FUN_080052a0": "setup_input_output",
                "FUN_080055f4": "setup_interrupts",
                "FUN_08005348": "setup_memory",
                "FUN_08005598": "setup_registers",
                "FUN_08005500": "setup_timer",
                "FUN_080053b0": "setup_network",
                "PTR_FUN_08004ea4_1_08005280": "function_1",
                "PTR_FUN_08004ee8_1_08005288": "function_2",
                "PTR_FUN_08004f2c_1_08005290": "function_3",
                "PTR_DAT_0800527c": "function_pointer_1",
                "PTR_DAT_08005284": "function_pointer_2",
                "PTR_DAT_0800528c": "function_pointer_3",
                "PTR_DAT_08005294": "memory_pointer",
                "PTR_DAT_08005298": "graphics_pointer",
                "PTR_DAT_0800529c": "audio_pointer"
            },
            "code": "void run_program_08005224(void)\n{\n  initialize_memory();\n  setup_input_output();\n  setup_interrupts();\n  setup_memory();\n  setup_registers();\n  setup_timer();\n  setup_network();\n  PTR_DAT_0800527c = PTR_FUN_08004ea4_1_08005280;\n  PTR_DAT_08005284 = PTR_FUN_08004ee8_1_08005288;\n  PTR_DAT_0800528c = PTR_FUN_08004f2c_1_08005290;\n  initialize_data(PTR_DAT_08005294,0);\n  initialize_data(PTR_DAT_08005294,0xc);\n  setup_graphics(PTR_DAT_08005298);\n  initialize_audio(PTR_DAT_0800529c);\n  setup_debugging(0);\n  do {\n    /* WARNING: Do nothing block with infinite loop */\n  } while(true);\n}",
            "called": [
                "FUN_08005348",
                "FUN_08005598",
                "FUN_08004e74",
                "FUN_080055f4",
                "FUN_080052a0",
                "FUN_0800360c",
                "FUN_080053b0",
                "FUN_08005500",
                "FUN_080036a8",
                "FUN_080014f0",
                "FUN_0800491c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005224",
            "calling": [
                "FUN_080057e8"
            ],
            "imported": false,
            "current_name": "run_program_08005224"
        },
        "FUN_08003440": {
            "renaming": {
                "FUN_08003440": "calculate_value_08003440",
                "local_30": "e",
                "local_2c": "a",
                "uStack_28": "b",
                "uStack_24": "c",
                "uStack_20": "d",
                "local_1c": "divisor",
                "local_18": "temp",
                "local_14": "flags",
                "local_10": "value",
                "local_c": "divisor_index",
                "PTR_DAT_080034f0": "ptr",
                "PTR_DAT_080034f4": "ptr2",
                "DAT_080034f8": "flags_address",
                "DAT_080034fc": "multiplier",
                "DAT_08003500": "divisor_multiplier",
                "*(undefined4 *)PTR_DAT_080034f0": "a",
                "*(undefined4 *)(PTR_DAT_080034f0 + 4)": "b",
                "*(undefined4 *)(PTR_DAT_080034f0 + 8)": "c",
                "*(undefined4 *)(PTR_DAT_080034f0 + 0xc)": "d",
                "*(undefined2 *)PTR_DAT_080034f4": "e"
            },
            "code": "calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440ucalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440_calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440(calculate_value_08003440vcalculate_value_08003440ocalculate_value_08003440icalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440)calculate_value_08003440\ncalculate_value_08003440{calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440/calculate_value_08003440/calculate_value_08003440Icalculate_value_08003440ncalculate_value_08003440icalculate_value_08003440tcalculate_value_08003440icalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440icalculate_value_08003440zcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440rcalculate_value_08003440icalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440scalculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440fcalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440gcalculate_value_08003440scalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034408calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440mcalculate_value_08003440pcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440icalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440scalculate_value_08003440hcalculate_value_08003440icalculate_value_08003440fcalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_080034401calculate_value_080034402calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440_calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440/calculate_value_08003440/calculate_value_08003440Gcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440tcalculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440scalculate_value_08003440 calculate_value_08003440fcalculate_value_08003440rcalculate_value_08003440ocalculate_value_08003440mcalculate_value_08003440 calculate_value_08003440mcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440mcalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440ycalculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440*calculate_value_08003440 calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_080034402calculate_value_08003440*calculate_value_08003440 calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_080034402calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034401calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034402calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034403calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440/calculate_value_08003440/calculate_value_08003440Ccalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440ucalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440icalculate_value_08003440fcalculate_value_08003440 calculate_value_08003440(calculate_value_08003440(calculate_value_08003440fcalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440gcalculate_value_08003440scalculate_value_08003440 calculate_value_08003440&calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440=calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440 calculate_value_08003440{calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440}calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440lcalculate_value_08003440scalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440icalculate_value_08003440fcalculate_value_08003440 calculate_value_08003440(calculate_value_08003440(calculate_value_08003440fcalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440gcalculate_value_08003440scalculate_value_08003440 calculate_value_08003440&calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440)calculate_value_08003440 calculate_value_08003440=calculate_value_08003440=calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440 calculate_value_08003440{calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440(calculate_value_08003440fcalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440gcalculate_value_08003440scalculate_value_08003440 calculate_value_08003440>calculate_value_08003440>calculate_value_08003440 calculate_value_08003440scalculate_value_08003440hcalculate_value_08003440icalculate_value_08003440fcalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440 calculate_value_08003440&calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440fcalculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440icalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440(calculate_value_08003440fcalculate_value_08003440lcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440gcalculate_value_08003440scalculate_value_08003440 calculate_value_08003440>calculate_value_08003440>calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_080034401calculate_value_080034401calculate_value_08003440)calculate_value_08003440 calculate_value_08003440&calculate_value_08003440 calculate_value_080034401calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440_calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440ycalculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440(calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440&calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440icalculate_value_08003440tcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440 calculate_value_08003440?calculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034405calculate_value_080034400calculate_value_080034400calculate_value_08003440 calculate_value_08003440:calculate_value_08003440 calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440ycalculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440(calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440&calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034404calculate_value_08003440)calculate_value_08003440icalculate_value_08003440tcalculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440mcalculate_value_08003440pcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440 calculate_value_08003440*calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440_calculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440xcalculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440 calculate_value_08003440=calculate_value_08003440=calculate_value_08003440 calculate_value_080034400calculate_value_08003440 calculate_value_08003440?calculate_value_08003440 calculate_value_080034400calculate_value_08003440 calculate_value_08003440:calculate_value_08003440 calculate_value_08003440tcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440mcalculate_value_08003440pcalculate_value_08003440 calculate_value_08003440/calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440icalculate_value_08003440vcalculate_value_08003440icalculate_value_08003440scalculate_value_08003440ocalculate_value_08003440rcalculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440}calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440lcalculate_value_08003440scalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440{calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440 calculate_value_08003440=calculate_value_08003440 calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034408calculate_value_08003440)calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440}calculate_value_08003440\ncalculate_value_08003440 calculate_value_08003440 calculate_value_08003440rcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440tcalculate_value_08003440ucalculate_value_08003440rcalculate_value_08003440ncalculate_value_08003440 calculate_value_08003440vcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440dcalculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440(calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440 calculate_value_08003440+calculate_value_08003440 calculate_value_080034400calculate_value_08003440xcalculate_value_08003440ccalculate_value_08003440)calculate_value_080034404calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034400calculate_value_08003440lcalculate_value_08003440ucalculate_value_08003440*calculate_value_08003440(calculate_value_08003440ucalculate_value_08003440ncalculate_value_08003440dcalculate_value_08003440ecalculate_value_08003440fcalculate_value_08003440icalculate_value_08003440ncalculate_value_08003440ecalculate_value_08003440dcalculate_value_080034402calculate_value_08003440 calculate_value_08003440*calculate_value_08003440)calculate_value_08003440Pcalculate_value_08003440Tcalculate_value_08003440Rcalculate_value_08003440_calculate_value_08003440Dcalculate_value_08003440Acalculate_value_08003440Tcalculate_value_08003440_calculate_value_080034400calculate_value_080034408calculate_value_080034400calculate_value_080034400calculate_value_080034403calculate_value_080034404calculate_value_08003440fcalculate_value_080034404calculate_value_08003440;calculate_value_08003440\ncalculate_value_08003440}calculate_value_08003440",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003440",
            "calling": [
                "FUN_08003260"
            ],
            "imported": false,
            "current_name": "calculate_value_08003440"
        },
        "FUN_080035fa": {
            "renaming": {
                "FUN_080035fa": "do_nothing_080035fa"
            },
            "code": "\nvoid do_nothing_080035fa(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035fa",
            "calling": [
                "FUN_080035a4"
            ],
            "imported": false,
            "current_name": "do_nothing_080035fa"
        },
        "FUN_08004f2c": {
            "renaming": {
                "FUN_08004f2c": "get_result_08004f2c",
                "uVar1": "result",
                "FUN_080015a0": "get_value"
            },
            "code": "int get_result_08004f2c(void)\n{\n  int result;\n  result = get_value();\n  return result;\n}",
            "called": [
                "FUN_080015a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f2c",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08004f2c"
        },
        "FUN_08005348": {
            "renaming": {
                "FUN_08005348": "initialize_data_buffer_08005348",
                "PTR_DAT_080053a0": "data_buffer",
                "DAT_080053a4": "INITIAL_VALUE_1",
                "DAT_080053a8": "INITIAL_VALUE_2",
                "PTR_s____src_main_c_080053ac": "SOURCE_FILE_NAME",
                "FUN_08001ab0": "initialize_buffer",
                "iVar1": "result",
                "FUN_08005674": "print_error_message"
            },
            "code": "void initialize_data_buffer_08005348(void)\n{\n  int result = 0;\n  PTR_DAT_080053a0[0] = DAT_080053a4;\n  PTR_DAT_080053a0[1] = DAT_080053a8;\n  PTR_DAT_080053a0[2] = 0;\n  PTR_DAT_080053a0[3] = 0;\n  PTR_DAT_080053a0[4] = BUFFER_SIZE;\n  PTR_DAT_080053a0[5] = 0;\n  PTR_DAT_080053a0[6] = 0;\n  PTR_DAT_080053a0[7] = 0;\n  PTR_DAT_080053a0[8] = 0;\n  result = initialize_buffer(PTR_DAT_080053a0);\n  if (result != 0) {\n    print_error_message(PTR_s____src_main_c_080053ac, ERROR_MESSAGE_LENGTH);\n  }\n  return;\n}",
            "called": [
                "FUN_08001ab0",
                "FUN_08005674"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005348",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "initialize_data_buffer_08005348"
        },
        "FUN_08004378": {
            "renaming": {
                "FUN_08004378": "do_nothing_08004378"
            },
            "code": "\nvoid do_nothing_08004378(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004378",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08004378"
        },
        "FUN_080046ec": {
            "renaming": {
                "FUN_080046ec": "calculate_values_080046ec",
                "param_1": "param_array",
                "PTR_DAT_08004914": "PTR_CONSTANT_1",
                "PTR_DAT_08004918": "PTR_CONSTANT_2",
                "iVar3": "temp_value2",
                "iVar4": "temp_value3",
                "iVar5": "temp_value4",
                "uVar6": "temp_value",
                "lVar1": "first_value",
                "lVar2": "second_value",
                "ptr1": "pointer1",
                "ptr2": "pointer2",
                "ptr3": "pointer3"
            },
            "code": "void calculate_values_080046ec(int *param_array)\n{\n  longlong first_value;\n  longlong second_value;\n  int divisor = param_array[1] << 2;\n  int temp_value;\n  int temp_value2;\n  int temp_value3;\n  int temp_value4;\n  uint *ptr1 = (uint *)(*param_array + 0xc);\n  uint *ptr2 = (uint *)(*param_array + 0x10);\n  uint *ptr3 = (uint *)(*param_array + 0x14);\n  *ptr2 = (*ptr2 & 0xffffcfff) | param_array[3];\n  *ptr1 = (*ptr1 & 0xffffe9f3) | param_array[2] | param_array[4] | param_array[5];\n  *ptr3 = (*ptr3 & 0xfffffcff) | param_array[6];\n  if (*param_array == PTR_DAT_08004914)\n  {\n    temp_value = FUN_08003540();\n    first_value = (ulonglong)PTR_DAT_08004918 * ((ulonglong)temp_value * 0x19 / divisor);\n    temp_value2 = FUN_08003540(temp_value, (int)(first_value >> 0x20), (int)first_value);\n    temp_value3 = param_array[1];\n    temp_value4 = FUN_08003540();\n    *ptr1 = ((PTR_DAT_08004918 * (((temp_value2 * 0x19) / (temp_value3 << 2)) + ((PTR_DAT_08004918 * ((ulonglong)temp_value4 * 0x19 / divisor)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xf) + ((uint)(first_value >> 0x25) << 4) + ((uint)((ulonglong)PTR_DAT_08004918 * ((ulonglong)temp_value2 * 0x19 / (temp_value3 << 2) + (PTR_DAT_08004918 * ((ulonglong)temp_value4 * 0x19 / divisor)) >> 0x25) * -100 + 0x32) >> 0x25 & 0xf0);\n  }\n  else\n  {\n    temp_value = FUN_08003518();\n    first_value = (ulonglong)PTR_DAT_08004918 * ((ulonglong)temp_value * 0x19 / divisor);\n    temp_value2 = FUN_08003518(temp_value, (int)(first_value >> 0x20), (int)first_value);\n    temp_value3 = param_array[1];\n    temp_value4 = FUN_08003518();\n    *ptr1 = ((PTR_DAT_08004918 * (((temp_value2 * 0x19) / (temp_value3 << 2)) + ((PTR_DAT_08004918 * ((ulonglong)temp_value4 * 0x19 / divisor)) >> 0x25) * -100 + 0x32)) >> 0x25 & 0xf) + ((uint)(first_value >> 0x25) << 4) + ((uint)((ulonglong)PTR_DAT_08004918 * ((ulonglong)temp_value2 * 0x19 / (temp_value3 << 2) + (PTR_DAT_08004918 * ((ulonglong)temp_value4 * 0x19 / divisor)) >> 0x25) * -100 + 0x32) >> 0x25 & 0xf0);\n  }\n}",
            "called": [
                "FUN_08003518",
                "FUN_08003540"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046ec",
            "calling": [
                "FUN_0800438a"
            ],
            "imported": false,
            "current_name": "calculate_values_080046ec"
        },
        "FUN_08005500": {
            "renaming": {
                "FUN_08005500": "initialize_memory_08005500",
                "iVar1": "status",
                "local_20": "allocation_size",
                "local_1c": "zero",
                "local_18": "values",
                "PTR_DAT_08005590": "memory_address",
                "PTR_DAT_08005590 + 4": "memory_size",
                "PTR_DAT_08005590 + 8": "memory_flags",
                "PTR_DAT_08005590 + 0xc": "memory_pages",
                "PTR_DAT_08005590 + 0x10": "memory_alignment",
                "PTR_DAT_08005590 + 0x18": "memory_reserved",
                "FUN_080035a4": "initialize_memory_helper",
                "FUN_08005674": "print_error",
                "PTR_s____src_main_c_08005594": "error_message"
            },
            "code": "void initialize_memory_08005500(void)\n{\n  int status;\n  int initial_size = 0x1000;\n  int zero = 0;\n  int values[4] = {0x40000000, 36000, 0, 0x14};\n  status = initialize_memory_08005500_helper(values);\n  if (status != 0) {\n    print_error(\"Error initializing memory values\",0x1d0);\n  }\n  status = initialize_memory_08005500_helper(values, initial_size);\n  if (status != 0) {\n    print_error(\"Error initializing memory size\",0x1d5);\n  }\n  int allocation_size = 0x20;\n  status = allocate_memory(allocation_size, &zero);\n  if (status != 0) {\n    print_error(\"Error allocating memory\",0x1dc);\n  }\n  return;\n}",
            "called": [
                "FUN_08003a94",
                "FUN_080042de",
                "FUN_08005674",
                "FUN_080035a4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005500",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "initialize_memory_08005500"
        },
        "FUN_08002c2e": {
            "renaming": {
                "FUN_08002c2e": "check_if_flag_is_set_08002c2e",
                "param_1": "flag_ptr",
                "param_2": "flag_mask",
                "param_3": "param_3",
                "iVar1": "flag_value",
                "result": "result"
            },
            "code": "int check_if_flag_is_set_08002c2e(int *flag_ptr, uint flag_mask, int param_3) {\n  int result = 1;\n  while (true) {\n    if ((*((uint *)(*flag_ptr + 0x14)) & 4) == 4) {\n      return 0;\n    }\n    int flag_value = FUN_08002d3c(flag_ptr);\n    if (flag_value != 0) {\n      break;\n    }\n    if ((flag_mask != 0xffffffff) && ((flag_mask == 0 || (flag_value = FUN_080015a0(), flag_mask < (uint)(flag_value - param_3))))) {\n      flag_ptr[0x10] |= 0x20;\n      flag_ptr[0xc] = 0;\n      *(undefined *)((int)flag_ptr + 0x3d) = 0x20;\n      *(undefined *)(flag_ptr + 0xf) = 0;\n      result = 3;\n      break;\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080015a0",
                "FUN_08002d3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c2e",
            "calling": [
                "FUN_08001ccc"
            ],
            "imported": false,
            "current_name": "check_if_flag_is_set_08002c2e"
        },
        "FUN_08003568": {
            "renaming": {
                "FUN_08003568": "calculate_and_decrement_08003568",
                "param_1": "input_num",
                "local_c": "multiplier",
                "DAT_080035a0": "global_constant",
                "PTR_DAT_0800359c": "global_pointer"
            },
            "code": "void calculate_and_decrement_08003568(int input_num)\n{\n  int multiplier = input_num * (uint)((ulonglong)DAT_080035a0 * (ulonglong)*(uint *)PTR_DAT_0800359c >> 0x29);\n  do {\n    multiplier--;\n  } while (multiplier != 0);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003568",
            "calling": [
                "FUN_08002d98"
            ],
            "imported": false,
            "current_name": "calculate_and_decrement_08003568"
        },
        "FUN_080049cc": {
            "renaming": {
                "FUN_080049cc": "calculate_values_080049cc",
                "param_1": "input",
                "local_20": "i",
                "local_c": "val1",
                "local_10": "val2",
                "local_14": "sum1",
                "local_18": "sum2",
                "local_24": "func_ptr",
                "local_1c": "count",
                "local_28": "temp1",
                "local_2c": "temp2",
                "FUN_08004ae0": "calculate",
                "FUN_08004d78": "get_values",
                "FUNC_08000aa8": "sum",
                "FUN_08000c10": "calculate_result",
                "FUNC_08000e20": "calculate_average",
                "PTR_DAT_08004adc": "func_ptr"
            },
            "code": "void calculate_values_080049cc(int input)\n{\n  int i = 1;\n  int sum1 = 0;\n  int sum2 = 0;\n  int sum3 = 0;\n  int sum4 = 0;\n  int count = 0;\n  int val1 = 0;\n  int val2 = 0;\n  int (*PTR_DAT_08004adc)() = *(int (*)())PTR_DAT_08004adc;\n  while(i <= count)\n  {\n    int temp1 = 0;\n    int temp2 = 0;\n    calculate(input);\n    get_values(input, &temp1, &temp2);\n    sum3 = sum(temp1, sum3);\n    sum4 = sum(temp2, sum4);\n    val1 = sum(val1, *(int *)(input + 0x10));\n    val2 = sum(val2, *(int *)(input + 0x14));\n    PTR_DAT_08004adc = *(int (*)())PTR_DAT_08004adc;\n    count++;\n  }\n  int size = i;\n  int res1 = calculate_result(val1, size);\n  *(int *)(input + 0x1c) = res1;\n  int res2 = calculate_result(val2, size);\n  *(int *)(input + 0x20) = res2;\n  int res3 = calculate_result(sum3, size);\n  *(int *)(input + 0x24) = res3;\n  int res4 = calculate_result(sum4, size);\n  *(int *)(input + 0x28) = res4;\n  return;\n}",
            "called": [
                "FUN_08004ae0",
                "FUN_08000e20",
                "FUN_08000aa8",
                "FUN_08004d78",
                "FUN_08000c10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080049cc",
            "calling": [
                "FUN_0800491c"
            ],
            "imported": false,
            "current_name": "calculate_values_080049cc"
        },
        "FUN_08003c94": {
            "renaming": {
                "FUN_08003c94": "update_params_08003c94",
                "param_1": "param_list",
                "param_2": "new_params",
                "local_c": "old_value",
                "DAT_08003d54": "dat_1",
                "DAT_08003d58": "dat_2",
                "DAT_08003d5c": "dat_3"
            },
            "code": "void update_params_08003c94(uint *param_list, uint *new_params) {\n  uint old_value = *param_list;\n  bool is_dat_08003d54 = (param_list == DAT_08003d54);\n  bool is_0x40000000 = (param_list == (uint *)0x40000000);\n  bool is_dat_08003d58 = (param_list == DAT_08003d58);\n  bool is_dat_08003d5c = (param_list == DAT_08003d5c);\n\n  if (is_dat_08003d54 || is_0x40000000 || is_dat_08003d58 || is_dat_08003d5c) {\n    old_value = new_params[1] | (old_value & 0xffffff8f);\n  }\n  if (is_dat_08003d54 || is_0x40000000 || is_dat_08003d58 || is_dat_08003d5c) {\n    old_value = new_params[3] | (old_value & 0xfffffcff);\n  }\n  *param_list = new_params[5] | (old_value & 0xffffff7f);\n  param_list[0xb] = new_params[2];\n  param_list[10] = *new_params;\n  if (is_dat_08003d54) {\n    param_list[0xc] = new_params[4];\n  }\n  param_list[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c94",
            "calling": [
                "FUN_08003640",
                "FUN_080035a4"
            ],
            "imported": false,
            "current_name": "update_params_08003c94"
        },
        "FUN_08000978": {
            "renaming": {
                "FUN_08000978": "swap_args_and_call_func_08000978",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "FUN_08000988": "call_func_with_swapped_args"
            },
            "code": "void swap_args_and_call_func_08000978(void* arg1, void* arg2, void* arg3, void* arg4)\n{\n  call_func_with_swapped_args(arg3, arg4, arg1, arg2);\n  return;\n}",
            "called": [
                "FUN_08000988"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000978",
            "calling": [
                "FUN_080009d4",
                "FUN_080009e8"
            ],
            "imported": false,
            "current_name": "swap_args_and_call_func_08000978"
        },
        "FUN_0800884c": {
            "renaming": {
                "FUN_0800884c": "allocate_memory_and_set_flag_0800884c",
                "param_1": "num_bytes_to_allocate",
                "param_2": "flag_value",
                "puVar1": "memory_pointer",
                "puVar2": "ptr_memory_pointer",
                "iVar3": "initial_address",
                "iVar4": "num_bytes_to_move",
                "uVar5": "flags",
                "PTR_DAT_080088e0": "memory_pointer",
                "PTR_DAT_080088e4": "ptr_memory_pointer",
                "PTR_DAT_080088e8": "initial_address"
            },
            "code": "int allocate_memory_and_set_flag_0800884c(int num_bytes_to_allocate, int flag_value) {\n  undefined *PTR_DAT_080088e0 = PTR_DAT_080088e0;\n  initialize_memory();\n  uint32_t flags = *(uint32_t *)(*(int *)(PTR_DAT_080088e0 + 8) + 4) & 0xfffffffc;\n  int num_bytes_to_move = ((0xfef - flag_value) + flags & 0xfffff000) - 0x1000;\n  if (0xfff < num_bytes_to_move) {\n    int initial_allocation_address = FUN_08009744(num_bytes_to_allocate, 0);\n    if (initial_allocation_address == *(int *)(PTR_DAT_080088e0 + 8) + flags) {\n      int new_allocation_address = FUN_08009744(num_bytes_to_allocate, -num_bytes_to_move);\n      undefined *PTR_DAT_080088e4 = PTR_DAT_080088e4;\n      if (new_allocation_address != -1) {\n        int PTR_DAT_080088e8 = *(int *)PTR_DAT_080088e4;\n        *(uint32_t *)(*(int *)(PTR_DAT_080088e0 + 8) + 4) = flags - num_bytes_to_move | 1;\n        *(int *)PTR_DAT_080088e4 = PTR_DAT_080088e8 - num_bytes_to_move;\n        finalize_memory();\n        return 1;\n      }\n      num_bytes_to_move = FUN_08009744(num_bytes_to_allocate, 0);\n      undefined *PTR_DAT_080088e4_2 = PTR_DAT_080088e4;\n      flags = num_bytes_to_move - *(int *)(PTR_DAT_080088e0 + 8);\n      if (0xf < (int)flags) {\n        int PTR_DAT_080088e8 = *(int *)PTR_DAT_080088e8;\n        *(uint32_t *)(*(int *)(PTR_DAT_080088e0 + 8) + 4) = flags | 1;\n        *(int *)PTR_DAT_080088e4_2 = num_bytes_to_move - PTR_DAT_080088e8;\n      }\n    }\n  }\n  finalize_memory();\n  return 0;\n}",
            "called": [
                "FUN_08009744",
                "FUN_080090a8",
                "FUN_080090b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800884c",
            "calling": [
                "FUN_080088ec"
            ],
            "imported": false,
            "current_name": "allocate_memory_and_set_flag_0800884c"
        },
        "FUN_0800901c": {
            "renaming": {
                "FUN_0800901c": "find_byte_in_uint_array_0800901c",
                "param_1": "array",
                "param_2": "array_size",
                "param_3": "byte_to_find",
                "puVar1": "current_element",
                "uVar2": "byte_value_2",
                "uVar3": "byte_value_3",
                "puVar4": "array_end",
                "uVar5": "byte_value_1",
                "bVar6": "found"
            },
            "code": "uint * find_byte_in_uint_array_0800901c(uint *array, uint array_size, uint *byte_to_find) {\n  uint *current_element;\n  uint byte_value_1;\n  uint byte_value_2;\n  uint *array_end;\n  uint byte_value_3;\n  bool found;\n  byte_value_1 = array_size & 0xff;\n  current_element = array;\n  if (((uint)array & 3) == 0) {\n    do {\n      byte_value_2 = (array_size & 0xff) << 8 | byte_value_1;\n      array_end = current_element + 4;\n      do {\n        byte_value_3 = *current_element ^ (byte_value_2 | byte_value_2 << 0x10);\n        current_element++;\n        found = (byte_value_3 + 0xfefefeff & ~byte_value_3 & 0x80808080) == 0;\n      } while (found && current_element != array_end);\n      array_size = (uint *)(array_end - current_element);\n    } while (found && array_size > (uint *)3);\n    array_end = current_element;\n    if (current_element != array_end) {\n      do {\n        current_element++;\n      } while (*current_element != *byte_to_find && current_element != array_end);\n      if (current_element == array_end) {\n        current_element = (uint *)0x0;\n      }\n    }\n  }\n  else {\n    array_end = (uint *)((int)byte_to_find - 1);\n    if (byte_to_find == (uint *)0x0) {\n      current_element = (uint *)0x0;\n    }\n    else if (*array != byte_value_1) {\n      do {\n        current_element = array + 1;\n        array = current_element;\n        byte_to_find = array_end;\n        if (((uint)current_element & 3) == 0) {\n          do {\n            byte_value_2 = (array_size & 0xff) << 8 | byte_value_1;\n            array_end = current_element + 4;\n            do {\n              byte_value_3 = *current_element ^ (byte_value_2 | byte_value_2 << 0x10);\n              current_element++;\n              found = (byte_value_3 + 0xfefefeff & ~byte_value_3 & 0x80808080) == 0;\n            } while (found && current_element != array_end);\n            array_size = (uint *)(array_end - current_element);\n          } while (found && array_size > (uint *)3);\n          array_end = current_element;\n        }\n        else {\n          array_end = (uint *)((int)byte_to_find - 1);\n        }\n      } while (*array != byte_value_1 && byte_to_find != (uint *)0x0);\n      if (byte_to_find != (uint *)0x0 && current_element != array_end) {\n        do {\n          current_element++;\n        } while (*current_element != *byte_to_find && current_element != array_end);\n        if (current_element == array_end) {\n          current_element = (uint *)0x0;\n        }\n      }\n    }\n    else {\n      current_element = array;\n    }\n  }\n  return current_element;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800901c",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "find_byte_in_uint_array_0800901c"
        },
        "FUN_0800177c": {
            "renaming": {
                "FUN_0800177c": "set_flag_if_four_0800177c",
                "param_1": "input",
                "*DAT_080017b0": "*flag_pointer"
            },
            "code": "void set_flag_if_four_0800177c(int input){\n  if (input == 4) {\n    *DAT_080017b0 = *DAT_080017b0 | 4;\n  }\n  else {\n    *DAT_080017b0 = *DAT_080017b0 & 0xfffffffb;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800177c",
            "calling": [
                "FUN_080052a0"
            ],
            "imported": false,
            "current_name": "set_flag_if_four_0800177c"
        },
        "FUN_080017b4": {
            "renaming": {
                "FUN_080017b4": "execute_function_080017b4",
                "FUN_08004f78": "call_another_function"
            },
            "code": "void execute_function_080017b4(void)\n{\n  call_another_function(0);\n  return;\n}",
            "called": [
                "FUN_08004f78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080017b4",
            "calling": [
                "FUN_08005704"
            ],
            "imported": false,
            "current_name": "execute_function_080017b4"
        },
        "FUN_08005598": {
            "renaming": {
                "FUN_08005598": "initialize_data_08005598",
                "iVar1": "status",
                "PTR_DAT_080055e8": "ptr_data",
                "DAT_080055ec": "data_value"
            },
            "code": "void initialize_data_08005598() {\n    int status;\n    int* PTR_DAT_080055e8 = (int*) PTR_DAT_080055e8;\n    *PTR_DAT_080055e8 = DAT_080055ec;\n    *(PTR_DAT_080055e8 + 1) = 0x1c200;\n    *(PTR_DAT_080055e8 + 2) = 0;\n    *(PTR_DAT_080055e8 + 3) = 0;\n    *(PTR_DAT_080055e8 + 4) = 0;\n    *(PTR_DAT_080055e8 + 5) = 0xc;\n    *(PTR_DAT_080055e8 + 6) = 0;\n    *(PTR_DAT_080055e8 + 7) = 0;\n    status = FUN_0800438a(PTR_DAT_080055e8);\n    if (status != 0) {\n        FUN_08005674(PTR_s____src_main_c_080055f0, 0x1ed);\n    }\n}",
            "called": [
                "FUN_0800438a",
                "FUN_08005674"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005598",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "initialize_data_08005598"
        },
        "FUN_08001030": {
            "renaming": {
                "FUN_08001030": "is_string_terminated_08001030",
                "in_CY": "current_char",
                "FUN_08000fc8": "execute_preceding_function"
            },
            "code": "bool is_string_terminated_08001030(void)\n{\n  char current_char;\n  execute_preceding_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000fc8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001030",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "is_string_terminated_08001030"
        },
        "FUN_080011ec": {
            "renaming": {
                "FUN_080011ec": "get_values_080011ec",
                "param_1": "val1",
                "param_2": "val2",
                "param_3": "val3",
                "param_4": "val4",
                "uVar1": "result",
                "FUNC_0800121c": "get_other_values"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t get_values_080011ec(uint64_t val1, uint64_t val2, uint64_t val3, uint64_t val4)\n{\n    if ((val4 == 0) && (val3 == 0)) {\n        if (val2 != 0 || val1 != 0) {\n            val2 = -1;\n            val1 = -1;\n        }\n        return ((uint64_t)val2 << 32) | val1;\n    }\n    uint64_t result = get_other_values();\n    return result;\n}",
            "called": [
                "FUN_0800121c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011ec",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "get_values_080011ec"
        },
        "FUN_08004424": {
            "renaming": {
                "FUN_08004424": "do_nothing_08004424"
            },
            "code": "\nvoid do_nothing_08004424(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004424",
            "calling": [
                "FUN_0800438a"
            ],
            "imported": false,
            "current_name": "do_nothing_08004424"
        },
        "FUN_08004f3c": {
            "renaming": {
                "FUN_08004f3c": "print_message_08004f3c",
                "param_1": "data",
                "param_2": "param2",
                "PTR_DAT_08004f5c": "data_ptr"
            },
            "code": "void print_message_08004f3c(void* data, int param1, short param2)\n{\n  send_message(data, param1, param2, 50);\n  return;\n}",
            "called": [
                "FUN_08004436"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f3c",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "print_message_08004f3c"
        },
        "FUN_08009adc": {
            "renaming": {
                "FUN_08009adc": "FUNC_08009adc"
            },
            "code": "\nint * FUNC_08009adc(undefined4 *param_1,int *param_2,uint param_3)\n\n{\n  undefined *puVar1;\n  int *piVar2;\n  int iVar3;\n  int *piVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  int *piVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  int iVar12;\n  \n  if (param_2 == (int *)0x0) {\n    piVar4 = (int *)FUNC_08008af8(param_1,param_3);\n    return piVar4;\n  }\n  FUN_080090a8();\n  puVar1 = PTR_DAT_08009e38;\n  uVar7 = param_2[-1];\n  uVar10 = uVar7 & 0xfffffffc;\n  piVar4 = param_2 + -2;\n  if (param_3 + 0xb < 0x17) {\n    uVar9 = 0x10;\n  }\n  else {\n    uVar9 = param_3 + 0xb & 0xfffffff8;\n    if ((int)uVar9 < 0) goto LAB_08009b8e;\n  }\n  if (uVar9 < param_3) {\nLAB_08009b8e:\n    *param_1 = 0xc;\n    return (int *)0x0;\n  }\n  iVar12 = (int)piVar4 + uVar10;\n  uVar11 = uVar10;\n  if ((int)uVar10 < (int)uVar9) {\n    if (*(int *)(PTR_DAT_08009e38 + 8) == iVar12) {\n      iVar12 = (*(uint *)(*(int *)(PTR_DAT_08009e38 + 8) + 4) & 0xfffffffc) + uVar10;\n      if ((int)(uVar9 + 0x10) <= iVar12) {\n        *(uint *)(PTR_DAT_08009e38 + 8) = (int)piVar4 + uVar9;\n        *(uint *)((int)piVar4 + uVar9 + 4) = iVar12 - uVar9 | 1;\n        param_2[-1] = uVar9 | param_2[-1] & 1U;\n        FUN_080090b4(param_1);\n        return param_2;\n      }\n      if (-1 < (int)(uVar7 << 0x1f)) {\n        piVar2 = (int *)((int)piVar4 - param_2[-2]);\n        uVar7 = piVar2[1] & 0xfffffffc;\n        if ((int)(uVar9 + 0x10) <= (int)(iVar12 + uVar7)) {\n          iVar6 = piVar2[3];\n          piVar4 = piVar2 + 2;\n          iVar3 = *piVar4;\n          uVar10 = uVar10 - 4;\n          *(int *)(iVar3 + 0xc) = iVar6;\n          *(int *)(iVar6 + 8) = iVar3;\n          if (uVar10 < 0x25) {\n            iVar3 = *param_2;\n            piVar8 = piVar4;\n            if (0x13 < uVar10) {\n              piVar2[2] = iVar3;\n              piVar2[3] = param_2[1];\n              iVar3 = param_2[2];\n              if (uVar10 < 0x1c) {\n                param_2 = param_2 + 2;\n                piVar8 = piVar2 + 4;\n              }\n              else {\n                piVar2[4] = iVar3;\n                piVar2[5] = param_2[3];\n                iVar3 = param_2[4];\n                if (uVar10 == 0x24) {\n                  piVar2[6] = iVar3;\n                  piVar2[7] = param_2[5];\n                  iVar3 = param_2[6];\n                  param_2 = param_2 + 6;\n                  piVar8 = piVar2 + 8;\n                }\n                else {\n                  param_2 = param_2 + 4;\n                  piVar8 = piVar2 + 6;\n                }\n              }\n            }\n            *piVar8 = iVar3;\n            piVar8[1] = param_2[1];\n            piVar8[2] = param_2[2];\n          }\n          else {\n            FUN_08009a18(piVar4,param_2);\n          }\n          *(uint *)(puVar1 + 8) = (int)piVar2 + uVar9;\n          *(uint *)((int)piVar2 + uVar9 + 4) = (iVar12 + uVar7) - uVar9 | 1;\n          piVar2[1] = uVar9 | piVar2[1] & 1U;\n          FUN_080090b4(param_1);\n          return piVar4;\n        }\nLAB_08009bb0:\n        uVar11 = uVar10 + uVar7;\n        if ((int)uVar9 <= (int)uVar11) {\n          iVar6 = piVar2[3];\n          piVar8 = piVar2 + 2;\n          iVar3 = *piVar8;\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar12 = (int)piVar2 + uVar11;\n          *(int *)(iVar6 + 8) = iVar3;\n          piVar4 = piVar2;\n          if (uVar10 - 4 < 0x25) goto LAB_08009bd0;\nLAB_08009d4c:\n          FUN_08009a18(piVar8,param_2);\n          param_2 = piVar8;\n          goto LAB_08009c00;\n        }\n      }\n    }\n    else {\n      if (-1 < *(int *)((*(uint *)(iVar12 + 4) & 0xfffffffe) + iVar12 + 4) << 0x1f) {\n        uVar5 = *(uint *)(iVar12 + 4) & 0xfffffffc;\n        uVar11 = uVar10 + uVar5;\n        if ((int)uVar11 < (int)uVar9) {\n          if ((int)(uVar7 << 0x1f) < 0) goto LAB_08009b36;\n          piVar2 = (int *)((int)piVar4 - param_2[-2]);\n          uVar7 = piVar2[1] & 0xfffffffc;\n          uVar11 = uVar5 + uVar7 + uVar10;\n          if ((int)uVar11 < (int)uVar9) goto LAB_08009bb0;\n          iVar3 = *(int *)(iVar12 + 8);\n          iVar12 = *(int *)(iVar12 + 0xc);\n          *(int *)(iVar3 + 0xc) = iVar12;\n          *(int *)(iVar12 + 8) = iVar3;\n          piVar8 = piVar2 + 2;\n          iVar3 = *piVar8;\n          iVar6 = piVar2[3];\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar12 = (int)piVar2 + uVar11;\n          *(int *)(iVar6 + 8) = iVar3;\n          piVar4 = piVar2;\n          if (0x24 < uVar10 - 4) goto LAB_08009d4c;\nLAB_08009bd0:\n          uVar10 = uVar10 - 4;\n          iVar3 = *param_2;\n          piVar2 = piVar8;\n          if (0x13 < uVar10) {\n            piVar4[2] = iVar3;\n            piVar4[3] = param_2[1];\n            iVar3 = param_2[2];\n            if (uVar10 < 0x1c) {\n              param_2 = param_2 + 2;\n              piVar2 = piVar4 + 4;\n            }\n            else {\n              piVar4[4] = iVar3;\n              piVar4[5] = param_2[3];\n              iVar3 = param_2[4];\n              if (uVar10 == 0x24) {\n                piVar4[6] = iVar3;\n                piVar4[7] = param_2[5];\n                iVar3 = param_2[6];\n                param_2 = param_2 + 6;\n                piVar2 = piVar4 + 8;\n              }\n              else {\n                param_2 = param_2 + 4;\n                piVar2 = piVar4 + 6;\n              }\n            }\n          }\n          *piVar2 = iVar3;\n          piVar2[1] = param_2[1];\n          piVar2[2] = param_2[2];\n          param_2 = piVar8;\n        }\n        else {\n          iVar3 = *(int *)(iVar12 + 8);\n          iVar6 = *(int *)(iVar12 + 0xc);\n          *(int *)(iVar3 + 0xc) = iVar6;\n          iVar12 = (int)piVar4 + uVar11;\n          *(int *)(iVar6 + 8) = iVar3;\n        }\n        goto LAB_08009c00;\n      }\n      if (-1 < (int)(uVar7 << 0x1f)) {\n        piVar2 = (int *)((int)piVar4 - param_2[-2]);\n        uVar7 = piVar2[1] & 0xfffffffc;\n        goto LAB_08009bb0;\n      }\n    }\nLAB_08009b36:\n    piVar2 = (int *)FUNC_08008af8(param_1,param_3);\n    if (piVar2 != (int *)0x0) {\n      if ((int *)((param_2[-1] & 0xfffffffeU) + (int)piVar4) == piVar2 + -2) {\n        uVar11 = uVar10 + (piVar2[-1] & 0xfffffffcU);\n        iVar12 = (int)piVar4 + uVar11;\n        goto LAB_08009c00;\n      }\n      uVar10 = uVar10 - 4;\n      if (uVar10 < 0x25) {\n        iVar12 = *param_2;\n        piVar4 = param_2;\n        piVar8 = piVar2;\n        if (0x13 < uVar10) {\n          *piVar2 = iVar12;\n          piVar2[1] = param_2[1];\n          if (uVar10 < 0x1c) {\n            iVar12 = param_2[2];\n            piVar4 = param_2 + 2;\n            piVar8 = piVar2 + 2;\n          }\n          else {\n            piVar2[2] = param_2[2];\n            piVar2[3] = param_2[3];\n            if (uVar10 == 0x24) {\n              piVar2[4] = param_2[4];\n              piVar2[5] = param_2[5];\n              iVar12 = param_2[6];\n              piVar4 = param_2 + 6;\n              piVar8 = piVar2 + 6;\n            }\n            else {\n              iVar12 = param_2[4];\n              piVar4 = param_2 + 4;\n              piVar8 = piVar2 + 4;\n            }\n          }\n        }\n        *piVar8 = iVar12;\n        piVar8[1] = piVar4[1];\n        piVar8[2] = piVar4[2];\n      }\n      else {\n        FUN_08009a18(piVar2,param_2);\n      }\n      FUNC_080088ec(param_1,param_2);\n    }\n    FUN_080090b4(param_1);\n    param_2 = piVar2;\n  }\n  else {\nLAB_08009c00:\n    if (uVar11 - uVar9 < 0x10) {\n      piVar4[1] = piVar4[1] & 1U | uVar11;\n      *(uint *)(iVar12 + 4) = *(uint *)(iVar12 + 4) | 1;\n    }\n    else {\n      piVar4[1] = piVar4[1] & 1U | uVar9;\n      *(uint *)((int)piVar4 + uVar9 + 4) = uVar11 - uVar9 | 1;\n      *(uint *)(iVar12 + 4) = *(uint *)(iVar12 + 4) | 1;\n      FUNC_080088ec(param_1,(int)piVar4 + uVar9 + 8);\n    }\n    FUN_080090b4(param_1);\n  }\n  return param_2;\n}\n\n",
            "called": [
                "FUN_08009a18",
                "FUN_080088ec",
                "FUN_08008af8",
                "FUN_080090a8",
                "FUN_080090b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009adc",
            "calling": [
                "FUN_080097cc"
            ],
            "imported": false,
            "current_name": "FUNC_08009adc"
        },
        "FUN_08003696": {
            "renaming": {
                "FUN_08003696": "do_nothing_08003696"
            },
            "code": "\nvoid do_nothing_08003696(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003696",
            "calling": [
                "FUN_08003640"
            ],
            "imported": false,
            "current_name": "do_nothing_08003696"
        },
        "FUN_08002640": {
            "renaming": {
                "FUN_08002640": "send_data_08002640",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "code",
                "param_4": "value",
                "param_5": "timeout",
                "param_6": "retries",
                "iVar1": "result"
            },
            "code": "uint32_t send_data_08002640(uint32_t **data, uint8_t flag, uint16_t code, uint16_t value, uint32_t timeout, int retries)\n{\n    uint32_t result = 3;\n    **data |= 0x100;\n    while (((~(*data)[5]) & 1) != 0)\n    {\n        if ((timeout != 0xffffffff) && ((uint32_t)(FUN_080015a0() - retries) > timeout))\n        {\n            *data[12] = NULL;\n            *((uint8_t*)data + 0x3d) = 0x20;\n            *((uint8_t*)data + 0x3e) = 0;\n            data[15] = NULL;\n            result = 3;\n            goto LAB_0800275E;\n        }\n    }\n    *data[12] = NULL;\n    *((uint8_t*)data + 0x3d) = 0x20;\n    *((uint8_t*)data + 0x3e) = 0;\n    data[15] = NULL;\n    if (flag == 1)\n    {\n        (*data)[4] = (uint32_t)code;\n    }\n    else\n    {\n        (*data)[4] = (uint32_t)(code >> 8);\n        if (FUN_08002bb4(data, timeout, retries, (*data)[6]) != 0)\n        {\n            if (*data[16] == 4)\n            {\n                **data |= 0x200;\n                result = 1;\n                goto LAB_0800275E;\n            }\n            result = 3;\n            goto LAB_0800275E;\n        }\n        (*data)[4] = (uint32_t)code;\n    }\n    if (FUN_08002ad8(data, DAT_080027f0, timeout, retries) != 0)\n    {\n        if (*data[16] == 4)\n        {\n            result = 1;\n            goto LAB_0800275E;\n        }\n        result = 3;\n        goto LAB_0800275E;\n    }\n    if (FUN_08002bb4(data, timeout, retries, (*data)[6]) != 0)\n    {\n        if (*data[16] == 4)\n        {\n            **data |= 0x200;\n            result = 1;\n            goto LAB_0800275E;\n        }\n        result = 3;\n        goto LAB_0800275E;\n    }\n    result = 0;\nLAB_0800275E:\n    return result;\n}",
            "called": [
                "FUN_080015a0",
                "FUN_08002ad8",
                "FUN_08002bb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002640",
            "calling": [
                "FUN_08001ccc"
            ],
            "imported": false,
            "current_name": "send_data_08002640"
        },
        "FUN_080008fc": {
            "renaming": {
                "FUN_080008fc": "CheckParams_080008fc",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "difference",
                "bVar2": "is_zero",
                "bVar3": "is_second_greater_or_equal_to_fourth"
            },
            "code": "uint CheckParams_080008fc(uint first_param,uint second_param,uint third_param,uint fourth_param)\n{\n  uint result;\n  bool is_first_param_zero = (first_param | second_param << 1) == 0;\n  bool is_third_param_zero = (third_param | fourth_param << 1) == 0;\n  bool are_second_and_fourth_equal = second_param == fourth_param;\n  bool are_first_and_third_equal = first_param == third_param;\n  bool is_second_xor_fourth_zero = (second_param ^ fourth_param) == 0;\n  bool is_second_greater_or_equal_to_fourth = fourth_param <= second_param;\n  bool is_third_greater_or_equal_to_first = third_param <= first_param;\n  bool is_second_shifted_left_1_bit_negative = (int)(second_param << 1) >> 0x15 == -1;\n  bool is_fourth_shifted_left_1_bit_negative = (int)(fourth_param << 1) >> 0x15 == -1;\n  if ((is_second_shifted_left_1_bit_negative || is_fourth_shifted_left_1_bit_negative) && ((is_second_shifted_left_1_bit_negative && !is_first_param_zero) || (is_fourth_shifted_left_1_bit_negative && !is_third_param_zero))) {\n    result = 1;\n  } else if (!is_first_param_zero && !is_third_param_zero && !are_second_and_fourth_equal && !are_first_and_third_equal) {\n    if (!is_second_xor_fourth_zero) {\n      if (is_second_xor_fourth_zero || is_second_greater_or_equal_to_fourth) {\n        result = is_third_greater_or_equal_to_first ? 0 : -2;\n      } else {\n        result = -2;\n      }\n    } else {\n      result = is_third_greater_or_equal_to_first ? -2 : -1;\n    }\n  } else {\n    result = 0;\n  }\n  return result | 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080008fc",
            "calling": [
                "FUN_08000988"
            ],
            "imported": false,
            "current_name": "CheckParams_080008fc"
        },
        "FUN_08000988": {
            "renaming": {
                "FUN_08000988": "perform_action_08000988",
                "param_1": "action_param",
                "FUN_080008fc": "initialize_system"
            },
            "code": "undefined4 perform_action_08000988(undefined4 action_param)\n{\n  initialize_system();\n  return action_param;\n}",
            "called": [
                "FUN_080008fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000988",
            "calling": [
                "FUN_08000998",
                "FUN_08000978",
                "FUN_080009ac",
                "FUN_080009c0"
            ],
            "imported": false,
            "current_name": "perform_action_08000988"
        },
        "FUN_08001714": {
            "renaming": {
                "FUN_08001714": "print_message_on_screen_08001714",
                "param_1": "message",
                "FUN_080015b4": "display_message"
            },
            "code": "void print_message_on_screen_08001714(undefined4 message)\n{\n  display_message(message);\n  return;\n}",
            "called": [
                "FUN_080015b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001714",
            "calling": [
                "FUN_080014f0"
            ],
            "imported": false,
            "current_name": "print_message_on_screen_08001714"
        },
        "FUN_08005dfc": {
            "renaming": {
                "FUN_08005dfc": "clear_string_and_set_limits_08005dfc",
                "param_1": "string",
                "param_2": "limit1",
                "param_3": "limit2",
                "param_4": "filler_value",
                "local_80": "string_ptr",
                "local_78": "limit1_ptr",
                "uStack_74": "limit2_ptr",
                "local_70": "string_copy_ptr",
                "local_6c": "filler_value_ptr",
                "uStack_8": "unused_variable",
                "uStack_4": "unused_variable"
            },
            "code": "void clear_string_and_set_limits_08005dfc(char *string, int limit1, int limit2, int filler_value)\n{\n  char *string_ptr[2];\n  int limit1_ptr;\n  int limit2_ptr;\n  char *string_copy_ptr;\n  int filler_value_ptr;\n  \n  limit1_ptr = INT_MAX;\n  limit2_ptr = INT_MAX;\n  filler_value_ptr = filler_value;\n  string_ptr[0] = string;\n  string_copy_ptr = string;\n  FUNC_08005e9c(*(int *)PTR_PTR_DAT_08005e38,string_ptr,limit1,&limit2_ptr);\n  *string_ptr[0] = 0;\n  return;\n}",
            "called": [
                "FUN_08005e9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005dfc",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "clear_string_and_set_limits_08005dfc"
        },
        "FUN_080078c0": {
            "renaming": {
                "FUN_080078c0": "divide_and_conquer_080078c0",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar1": "quotient",
                "puVar2": "current_numerator_digit",
                "iVar3": "num_zeros_numerator",
                "iVar4": "num_zeros_denominator",
                "iVar5": "last_denominator_digit",
                "uVar6": "quotient",
                "puVar7": "current_denominator_digit",
                "puVar8": "numerator",
                "puVar9": "last_numerator_digit",
                "puVar11": "current_denominator_digit_temp",
                "puVar12": "current_numerator_digit_temp",
                "uVar10": "product_high"
            },
            "code": "uint divide_and_conquer_080078c0(uint numerator[], uint denominator[], int num_digits_numerator, int num_digits_denominator)\\n\\\n    {\\n\\\n        uint quotient = 0;\\n\\\n        uint *current_numerator_digit = numerator + num_digits_numerator - 1;\\n\\\n        uint *current_denominator_digit = denominator + num_digits_denominator - 1;\\n\\\n        uint *last_numerator_digit = numerator + num_digits_numerator - 1;\\n\\\n        uint *last_denominator_digit = denominator + num_digits_denominator - 1;\\n\\\n        int num_zeros_numerator = 0;\\n\\\n        int num_zeros_denominator = 0;\\n\\\n        \\n\\\n        if (*current_denominator_digit == 0) return 0;\\n\\\n        if (num_digits_numerator < num_digits_denominator) return 0;\\n\\\n        if (num_digits_numerator == num_digits_denominator)\\n\\\n        {\\n\\\n            if (*current_numerator_digit < *current_denominator_digit) return 0;\\n\\\n        }\\n\\\n        \\n\\\n        while (*current_denominator_digit < 0x80000000)\\n\\\n        {\\n\\\n            num_zeros_denominator++;\\n\\\n            current_denominator_digit--;\\n\\\n        }\\n\\\n        while (*current_numerator_digit < 0x80000000)\\n\\\n        {\\n\\\n            num_zeros_numerator++;\\n\\\n            current_numerator_digit--;\\n\\\n        }\\n\\\n        \\n\\\n        while (current_numerator_digit >= numerator + num_zeros_numerator)\\n\\\n        {\\n\\\n            if (current_numerator_digit == last_numerator_digit)\\n\\\n            {\\n\\\n                quotient = *current_numerator_digit / (*current_denominator_digit + 1);\\n\\\n            }\\n\\\n            else\\n\\\n            {\\n\\\n                quotient = 0;\\n\\\n                uint *current_denominator_digit_temp = current_denominator_digit;\\n\\\n                uint *current_numerator_digit_temp = current_numerator_digit;\\n\\\n                while (current_denominator_digit_temp <= last_denominator_digit)\\n\\\n                {\\n\\\n                    uint product = quotient * (*current_denominator_digit_temp);\\n\\\n                    uint numerator_digit = *current_numerator_digit_temp;\\n\\\n                    uint numerator_digit_high = numerator_digit >> 16;\\n\\\n                    uint numerator_digit_low = numerator_digit & 0xFFFF;\\n\\\n                    uint product_high = product >> 16;\\n\\\n                    uint product_low = product & 0xFFFF;\\n\\\n                    uint difference_low = numerator_digit_low - product_low;\\n\\\n                    uint sum_high = numerator_digit_high - product_high;\\n\\\n                    uint sum_low = difference_low + 0x10000;\\n\\\n                    if (difference_low > numerator_digit_low) sum_high--;\\n\\\n                    if (sum_low > 0xFFFF) sum_high++;\\n\\\n                    *current_numerator_digit_temp = (sum_high << 16) | (sum_low & 0xFFFF);\\n\\\n                    quotient = quotient + 1;\\n\\\n                    current_denominator_digit_temp++;\\n\\\n                    current_numerator_digit_temp++;\\n\\\n                }\\n\\\n            }\\n\\\n            \\n\\\n            if (*last_numerator_digit == 0)\\n\\\n            {\\n\\\n                while (current_numerator_digit >= numerator + num_zeros_numerator)\\n\\\n                {\\n\\\n                    if (*current_numerator_digit != 0) break;\\n\\\n                    current_numerator_digit--;\\n\\\n                }\\n\\\n                num_digits_numerator = current_numerator_digit - numerator + 1;\\n\\\n            }\\n\\\n            \\n\\\n            if (divide_and_conquer_080078c0_helper() >= 0)\\n\\\n            {\\n\\\n                quotient++;\\n\\\n                uint *current_denominator_digit_temp = current_denominator_digit;\\n\\\n                uint *current_numerator_digit_temp = current_numerator_digit;\\n\\\n                while (current_denominator_digit_temp <= last_denominator_digit)\\n\\\n                {\\n\\\n                    uint numerator_digit = *current_numerator_digit_temp;\\n\\\n                    uint difference_low = numerator_digit - *current_denominator_digit_temp;\\n\\\n                    uint sum_high = numerator_digit >> 16;\\n\\\n                    uint sum_low = difference_low & 0xFFFF;\\n\\\n                    if (difference_low > numerator_digit) sum_high--;\\n\\\n                    *current_numerator_digit_temp = (sum_high << 16) | sum_low;\\n\\\n                    current_denominator_digit_temp++;\\n\\\n                    current_numerator_digit_temp++;\\n\\\n                }\\n\\\n                if (*last_numerator_digit == 0)\\n\\\n                {\\n\\\n                    while (current_numerator_digit >= numerator + num_zeros_numerator)\\n\\\n                    {\\n\\\n                        if (*current_numerator_digit != 0) break;\\n\\\n                        current_numerator_digit--;\\n\\\n                    }\\n\\\n                    num_digits_numerator = current_numerator_digit - numerator + 1;\\n\\\n                }\\n\\\n            }\\n\\\n        }\\n\\\n        return quotient;\\n\\\n    }",
            "called": [
                "FUN_080094f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078c0",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "divide_and_conquer_080078c0"
        },
        "thunk_FUN_08005838": {
            "renaming": {
                "thunk_FUN_08005838": "calculate_result_thunk_08005838",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "code": "uint calculate_result_thunk_08005838(uint input1, uint input2, uint input3, uint input4)\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  temp6 = CONCAT44(DAT_080059bc, DAT_080059b8);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_080059e8 < (temp4 | (-input3 | input3) >> 0x1f)) || (temp5 = input2 & 0x7fffffff, DAT_080059e8 < (temp5 | (-input1 | input1) >> 0x1f)))\n  {\n    temp4 = FUNC_0800015c(input3, input4, input1, input2);\n    return temp4;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0)\n  {\n    temp4 = FUNC_080059f0();\n    return temp4;\n  }\n  temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((temp5 | input1) == 0)\n  {\n    if (temp3 == 2)\n    {\n      return DAT_080059b0;\n    }\n    temp4 = DAT_080059a0;\n    if (temp3 != 3)\n    {\n      return input1;\n    }\n  }\n  else\n  {\n    if ((temp4 | input3) != 0)\n    {\n      if (temp4 == DAT_080059e8)\n      {\n        if (temp5 == temp4)\n        {\n          if (temp3 == 2)\n          {\n            return DAT_080059e0;\n          }\n          if (temp3 == 3)\n          {\n            return DAT_080059d8;\n          }\n          if (temp3 == 1)\n          {\n            return DAT_080059d0;\n          }\n          return DAT_080059c8;\n        }\n        if (temp3 == 2)\n        {\n          return DAT_080059b0;\n        }\n        if (temp3 == 3)\n        {\n          return DAT_080059a0;\n        }\n        if (temp3 == 1)\n        {\n          return 0;\n        }\n        return 0;\n      }\n      if (temp5 != DAT_080059e8)\n      {\n        temp1 = (int)(temp5 - temp4) >> 0x14;\n        if (temp1 < 0x3d)\n        {\n          if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c)))\n          {\n            temp6 = 0;\n          }\n          else\n          {\n            FUNC_0800071c(input1, input2, input3, input4, input4);\n            do_nothing_08005d0c();\n            temp6 = FUNC_080059f0();\n          }\n        }\n        temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n        temp4 = (uint)temp6;\n        if (temp3 == 1)\n        {\n          return temp4;\n        }\n        if (temp3 == 2)\n        {\n          temp6 = FUNC_08000158(temp4, temp2, DAT_080059a8, DAT_080059ac);\n          temp4 = FUNC_08000158(DAT_080059b0, DAT_080059b4, (int)temp6, (int)((ulonglong)temp6 >> 0x20));\n          return temp4;\n        }\n        if (temp3 == 0)\n        {\n          return temp4;\n        }\n        temp6 = FUNC_08000158(temp4, temp2, DAT_080059a8, DAT_080059ac);\n        temp4 = FUNC_08000158((int)temp6, (int)((ulonglong)temp6 >> 0x20), DAT_080059b0, DAT_080059b4);\n        return temp4;\n      }\n    }\n    temp4 = DAT_080059c0;\n    if (-1 < (int)input2)\n    {\n      temp4 = DAT_080059b8;\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_08005838"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005834",
            "calling": [
                "FUN_08004d78",
                "FUN_08004bd8"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08005838"
        },
        "FUN_080003f4": {
            "renaming": {
                "FUN_080003f4": "get_concatenated_value_080003f4",
                "param_1": "value",
                "uVar1": "leading_zeroes_count",
                "uVar2": "value_abs",
                "uVar3": "shift_count",
                "iVar4": "shift_diff",
                "uVar5": "shift_count_2",
                "uVar6": "sign_bit",
                "bVar7": "is_negative_shift_count_2",
                "bVar8": "is_zero_shift_count_2",
                "bVar9": "is_overflow_shift_count_2",
                "in_r12": "remaining_shift",
                "high_bits": "high_bits",
                "low_bits": "low_bits"
            },
            "code": "ulonglong get_concatenated_value_080003f4(uint value)\n{\n  uint leading_zeroes_count;\n  uint shift_count;\n  uint high_bits;\n  uint low_bits;\n  uint sign_bit = value & 0x80000000;\n  if (value == 0) {\n    return 0;\n  }\n  if ((int)sign_bit < 0) {\n    value = -value;\n  }\n  leading_zeroes_count = count_leading_zeroes(value);\n  shift_count = leading_zeroes_count + 21;\n  if (shift_count < 32) {\n    high_bits = value << (shift_count & 0xff);\n    low_bits = value >> ((0x1c - leading_zeroes_count) & 0xff);\n  }\n  else {\n    uint remaining_shift = ~(shift_count - 31);\n    if (remaining_shift > 30) {\n      return CONCAT44(value, value >> (remaining_shift - 31));\n    }\n    int shift_diff = remaining_shift - 19;\n    if (shift_diff == 0 || (shift_diff < 0) != SCARRY4(remaining_shift - 31, 0xc)) {\n      remaining_shift += 1;\n      high_bits = sign_bit | (value >> remaining_shift);\n      low_bits = value << (0x20 - remaining_shift);\n    }\n    else {\n      low_bits = (value << (shift_diff & 0xff)) | (0U >> ((~shift_diff + 1) & 0xff));\n      high_bits = sign_bit | (value >> ((0x20 - shift_diff) & 0xff));\n    }\n  }\n  return CONCAT44(high_bits, low_bits);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003f4",
            "calling": [
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "get_concatenated_value_080003f4"
        },
        "FUN_080079e8": {
            "renaming": {
                "FUN_080079e8": "FUNC_080079e8"
            },
            "code": "\nchar * FUNC_080079e8(int param_1,undefined4 param_2,uint param_3,uint param_4,uint param_5,\n                   uint param_6,int *param_7,uint *param_8,char **param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  int iVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  int iVar13;\n  char *pcVar14;\n  char *pcVar15;\n  undefined4 *puVar16;\n  undefined4 uVar17;\n  char *pcVar18;\n  int iVar19;\n  bool bVar20;\n  undefined8 uVar21;\n  undefined8 uVar22;\n  undefined8 uVar23;\n  uint local_80;\n  uint local_7c;\n  uint local_74;\n  int local_70;\n  uint local_68;\n  uint local_64;\n  int local_60;\n  int local_5c;\n  uint local_58;\n  int local_54;\n  uint local_48;\n  uint uStack_44;\n  uint local_38;\n  uint local_34;\n  int local_30;\n  int local_2c [2];\n  \n  iVar9 = *(int *)(param_1 + 0x40);\n  if (iVar9 != 0) {\n    uVar12 = *(uint *)(param_1 + 0x44);\n    *(uint *)(iVar9 + 4) = uVar12;\n    *(int *)(iVar9 + 8) = 1 << (uVar12 & 0xff);\n    FUN_0800910c(param_1,iVar9);\n    *(undefined4 *)(param_1 + 0x40) = 0;\n  }\n  bVar20 = (int)param_4 < 0;\n  uVar12 = param_4;\n  if (bVar20) {\n    uVar12 = param_4 & 0x7fffffff;\n  }\n  *param_8 = (uint)bVar20;\n  local_7c = param_4;\n  if (bVar20) {\n    local_7c = uVar12;\n  }\n  uVar4 = local_7c;\n  if ((DAT_08007bf8 & ~uVar12) == 0) {\n    *param_7 = 9999;\n    if ((param_3 == 0) && ((uVar12 & 0xfffff) == 0)) {\n      if (param_9 == (char **)0x0) {\n        return PTR_s_Infinity_08007c08;\n      }\n      pcVar15 = PTR_s_Infinity_08007c08 + 8;\n      pcVar18 = PTR_s_Infinity_08007c08;\n    }\n    else {\n      if (param_9 == (char **)0x0) {\n        return PTR_DAT_08007c0c;\n      }\n      pcVar15 = PTR_DAT_08007c0c + 3;\n      pcVar18 = PTR_DAT_08007c0c;\n    }\n    *param_9 = pcVar15;\n    return pcVar18;\n  }\n  uVar21 = FUN_08000998(param_3,local_7c,0,0);\n  local_60 = (int)uVar21;\n  if (local_60 != 0) {\n    *param_7 = 1;\n    if (param_9 != (char **)0x0) {\n      pcVar18 = PTR_DAT_08007bfc + -1;\n      *param_9 = PTR_DAT_08007bfc;\n      return pcVar18;\n    }\n    return PTR_DAT_08007c10;\n  }\n  uVar3 = FUN_08009630(param_1,(int)((ulonglong)uVar21 >> 0x20),param_3,local_7c,local_2c,&local_30)\n  ;\n  iVar9 = local_30;\n  if (uVar12 >> 0x14 == 0) {\n    iVar13 = local_2c[0] + local_30;\n    iVar10 = iVar13 + 0x432;\n    if (iVar10 < 0x21) {\n      uVar12 = param_3 << (0x20U - iVar10 & 0xff);\n    }\n    else {\n      uVar12 = param_3 >> (iVar13 + 0x412U & 0xff) | uVar12 << (0x40U - iVar10 & 0xff);\n    }\n    uVar21 = FUN_080003d4(uVar12);\n    iVar13 = iVar13 + -1;\n    local_60 = 1;\n    uVar5 = (int)((ulonglong)uVar21 >> 0x20) + 0xfe100000;\n    uVar12 = (uint)uVar21;\n  }\n  else {\n    iVar13 = (uVar12 >> 0x14) - 0x3ff;\n    uVar5 = local_7c & 0xfffff | 0x3ff00000;\n    uVar12 = param_3;\n  }\n  uVar21 = FUNC_08000158(uVar12,uVar5,0,DAT_08007c00);\n  uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),DAT_08007be0,DAT_08007be4);\n  uVar21 = FUNC_0800015c((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),DAT_08007be8,DAT_08007bec);\n  uVar22 = FUN_080003f4(iVar13);\n  uVar22 = FUNC_080004c8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08007bf0,DAT_08007bf4);\n  uVar21 = FUNC_0800015c((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar22,\n                        (int)((ulonglong)uVar22 >> 0x20));\n  uVar8 = (undefined4)((ulonglong)uVar21 >> 0x20);\n  local_74 = FUN_0800119c();\n  iVar10 = FUN_080009ac((int)uVar21,uVar8,0,0);\n  if (iVar10 != 0) {\n    uVar22 = FUN_080003f4(local_74);\n    iVar10 = FUN_08000998((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,uVar8);\n    if (iVar10 == 0) {\n      local_74 = local_74 - 1;\n    }\n  }\n  if (local_74 < 0x17) {\n    local_54 = FUN_080009e8(*(undefined4 *)(PTR_DAT_08007c04 + local_74 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007c04 + local_74 * 8) + 4),param_3,\n                            local_7c);\n    if (local_54 != 0) {\n      local_74 = local_74 - 1;\n      local_54 = 0;\n    }\n  }\n  else {\n    local_54 = 1;\n  }\n  iVar10 = (iVar9 - iVar13) + -1;\n  if (iVar10 < 0) {\n    local_70 = 1 - (iVar9 - iVar13);\n    iVar10 = 0;\n  }\n  else {\n    local_70 = 0;\n  }\n  if ((int)local_74 < 0) {\n    local_58 = 0;\n    local_70 = local_70 - local_74;\n    local_5c = -local_74;\n  }\n  else {\n    iVar10 = iVar10 + local_74;\n    local_58 = local_74;\n    local_5c = 0;\n  }\n  if (9 < param_5) {\n    local_38 = 0xffffffff;\n    bVar20 = true;\n    local_68 = 0xffffffff;\n    local_64 = 1;\n    param_5 = 0;\n    param_6 = 0;\n    goto LAB_08007c24;\n  }\n  bVar20 = (int)param_5 < 6;\n  if (!bVar20) {\n    param_5 = param_5 - 4;\n  }\n  switch(param_5) {\n  case 2:\n    local_64 = 0;\n    break;\n  case 3:\n    local_64 = 0;\n    goto LAB_08008300;\n  case 4:\n    local_64 = 1;\n    break;\n  case 5:\n    local_64 = 1;\nLAB_08008300:\n    local_38 = local_74 + param_6;\n    local_68 = local_38 + 1;\n    uVar12 = local_68;\n    if ((int)local_68 < 1) {\n      uVar12 = 1;\n    }\n    goto LAB_08008314;\n  default:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    pcVar18 = (char *)FUN_080090c0(param_1,0);\n    local_38 = 0xffffffff;\n    local_68 = 0xffffffff;\n    param_6 = 0;\n    *(char **)(param_1 + 0x40) = pcVar18;\n    local_64 = 1;\n    goto LAB_08007e36;\n  }\n  if ((int)param_6 < 1) {\n    local_38 = 1;\n    param_6 = 1;\n    local_68 = 1;\nLAB_08007c24:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    uVar5 = local_38;\n  }\n  else {\n    local_38 = param_6;\n    local_68 = param_6;\n    uVar12 = param_6;\nLAB_08008314:\n    *(undefined4 *)(param_1 + 0x44) = 0;\n    uVar5 = local_68;\n    if (0x17 < (int)uVar12) {\n      iVar13 = 4;\n      iVar9 = 1;\n      do {\n        iVar19 = iVar9;\n        iVar13 = iVar13 * 2;\n        iVar9 = iVar19 + 1;\n      } while (iVar13 + 0x14U <= uVar12);\n      *(int *)(param_1 + 0x44) = iVar19;\n    }\n  }\n  pcVar18 = (char *)FUN_080090c0(param_1);\n  *(char **)(param_1 + 0x40) = pcVar18;\n  if ((uVar5 < 0xf) && (bVar20)) {\n    if ((int)local_74 < 1) {\n      if (local_74 == 0) {\n        iVar9 = 2;\n        local_80 = param_3;\n      }\n      else {\n        uVar21 = FUNC_080004c8(param_3,local_7c,\n                              *(undefined4 *)(PTR_DAT_080086cc + (-local_74 & 0xf) * 8),\n                              *(undefined4 *)((int)(PTR_DAT_080086cc + (-local_74 & 0xf) * 8) + 4));\n        local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n        local_80 = (uint)uVar21;\n        iVar13 = (int)-local_74 >> 4;\n        if (iVar13 == 0) {\n          iVar9 = 2;\n        }\n        else {\n          bVar20 = false;\n          iVar9 = 2;\n          puVar16 = (undefined4 *)PTR_DAT_080086d0;\n          do {\n            if (iVar13 << 0x1f < 0) {\n              uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),*puVar16,puVar16[1]\n                                   );\n              bVar20 = true;\n              iVar9 = iVar9 + 1;\n            }\n            iVar13 = iVar13 >> 1;\n            puVar16 = puVar16 + 2;\n          } while (iVar13 != 0);\n          if (bVar20) {\n            local_80 = (uint)uVar21;\n            local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n          }\n        }\n      }\n    }\n    else {\n      uVar12 = (int)local_74 >> 4;\n      uVar21 = *(undefined8 *)(PTR_DAT_08007ec4 + (local_74 & 0xf) * 8);\n      if ((int)(uVar12 << 0x1b) < 0) {\n        uVar22 = FUNC_0800071c(param_3,local_7c,*(undefined4 *)(PTR_DAT_08007ec8 + 0x20),\n                              *(undefined4 *)(PTR_DAT_08007ec8 + 0x24));\n        uStack_44 = (uint)((ulonglong)uVar22 >> 0x20);\n        local_48 = (uint)uVar22;\n        iVar9 = 3;\n        uVar12 = uVar12 & 0xf;\n        puVar16 = (undefined4 *)PTR_DAT_08007ec8;\n      }\n      else {\n        iVar9 = 2;\n        uStack_44 = local_7c;\n        puVar16 = (undefined4 *)PTR_DAT_08007ec8;\n        local_48 = param_3;\n      }\n      while( true ) {\n        uVar8 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        if (uVar12 == 0) break;\n        if ((int)(uVar12 << 0x1f) < 0) {\n          uVar21 = FUNC_080004c8((int)uVar21,uVar8,*puVar16,puVar16[1]);\n          iVar9 = iVar9 + 1;\n        }\n        uVar12 = (int)uVar12 >> 1;\n        puVar16 = puVar16 + 2;\n      }\n      uVar21 = FUNC_0800071c(local_48,uStack_44,(int)uVar21,uVar8);\n      local_80 = (uint)uVar21;\n      local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n    }\n    uVar21 = CONCAT44(local_7c,local_80);\n    if ((local_54 != 0) && (iVar13 = FUN_080009ac(local_80,local_7c,0,DAT_08007ecc), iVar13 != 0)) {\n      if (local_68 == 0) {\n        uVar21 = FUN_080003f4(iVar9);\n        uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),local_80,local_7c);\n        uVar21 = FUNC_0800015c((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080086d4);\n        uVar8 = (undefined4)uVar21;\n        iVar9 = (int)((ulonglong)uVar21 >> 0x20) + -0x3400000;\n        goto LAB_0800852e;\n      }\n      if (0 < (int)local_38) {\n        uVar21 = FUNC_080004c8(local_80,local_7c,0,DAT_0800880c);\n        uVar22 = FUN_080003f4(iVar9 + 1);\n        uVar22 = FUNC_080004c8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,\n                              (int)((ulonglong)uVar21 >> 0x20));\n        uVar22 = FUNC_0800015c((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08008810);\n        uVar8 = (undefined4)uVar22;\n        local_48 = local_38;\n        local_34 = local_74 - 1;\n        iVar9 = (int)((ulonglong)uVar22 >> 0x20) + -0x3400000;\n        goto LAB_08007cfa;\n      }\n      goto LAB_08007e36;\n    }\n    uVar22 = FUN_080003f4(iVar9);\n    uVar22 = FUNC_080004c8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),local_80,local_7c);\n    uVar22 = FUNC_0800015c((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08007ed0);\n    uVar8 = (undefined4)uVar22;\n    iVar9 = (int)((ulonglong)uVar22 >> 0x20) + -0x3400000;\n    if (local_68 != 0) {\n      local_34 = local_74;\n      local_48 = local_68;\nLAB_08007cfa:\n      local_7c = (uint)((ulonglong)uVar21 >> 0x20);\n      local_80 = (uint)uVar21;\n      cVar1 = FUN_0800119c(local_80,local_7c);\n      cVar1 = cVar1 + '0';\n      uVar11 = *(undefined4 *)(PTR_DAT_08007ec4 + local_48 * 8 + -8);\n      uVar7 = *(undefined4 *)(PTR_DAT_08007ec4 + local_48 * 8 + -4);\n      uVar21 = FUN_080003f4();\n      uVar21 = FUNC_08000158(local_80,local_7c,(int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n      uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n      pcVar15 = pcVar18 + 1;\n      if (local_64 == 0) {\n        uVar22 = FUNC_080004c8(uVar8,iVar9,uVar11,uVar7);\n        uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n        *pcVar18 = cVar1;\n        if (local_48 != 1) {\n          pcVar14 = pcVar15;\n          do {\n            uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080086d8);\n            cVar1 = FUN_0800119c();\n            uVar23 = FUN_080003f4();\n            uVar21 = FUNC_08000158((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar23,\n                                  (int)((ulonglong)uVar23 >> 0x20));\n            pcVar15 = pcVar14 + 1;\n            *pcVar14 = cVar1 + '0';\n            pcVar14 = pcVar15;\n          } while (pcVar15 != pcVar18 + local_48);\n        }\n        uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        uVar23 = FUNC_0800015c((int)uVar22,uVar8,0,DAT_080086dc);\n        iVar9 = FUN_080009ac((int)uVar23,(int)((ulonglong)uVar23 >> 0x20),(int)uVar21,uVar11);\n        if (iVar9 == 0) {\n          uVar22 = FUNC_08000158(0,DAT_08008814,(int)uVar22,uVar8);\n          iVar9 = FUN_080009e8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),(int)uVar21,uVar11);\n          pcVar14 = pcVar15;\n          if (iVar9 == 0) goto LAB_08007e36;\n          do {\n            pcVar15 = pcVar14;\n            pcVar14 = pcVar15 + -1;\n          } while (pcVar15[-1] == '0');\n          goto LAB_08008784;\n        }\n        local_74 = local_34;\n        cVar1 = pcVar15[-1];\n      }\n      else {\n        uVar22 = FUNC_0800071c(0,DAT_08007ed4,uVar11,uVar7);\n        uVar22 = FUNC_08000158((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),uVar8,iVar9);\n        uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n        *pcVar18 = cVar1;\n        iVar9 = FUN_080009e8((int)uVar22,uVar8,(int)uVar21,uVar17);\n        if (iVar9 != 0) {\nLAB_08008784:\n          local_74 = local_34;\n          goto LAB_08008294;\n        }\n        uVar23 = FUNC_08000158(0,DAT_08007ecc,(int)uVar21,uVar17);\n        iVar9 = FUN_080009e8((int)uVar22,uVar8,(int)uVar23,(int)((ulonglong)uVar23 >> 0x20));\n        if (iVar9 == 0) {\n          if (local_48 != 1) {\n            pcVar14 = pcVar15;\n            do {\n              uVar22 = FUNC_080004c8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),0,DAT_08007ed8);\n              uVar8 = (undefined4)((ulonglong)uVar22 >> 0x20);\n              uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_08007ed8);\n              cVar1 = FUN_0800119c();\n              uVar23 = FUN_080003f4();\n              uVar21 = FUNC_08000158((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar23,\n                                    (int)((ulonglong)uVar23 >> 0x20));\n              uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n              cVar1 = cVar1 + '0';\n              pcVar15 = pcVar14 + 1;\n              *pcVar14 = cVar1;\n              iVar9 = FUN_080009ac((int)uVar21,uVar11,(int)uVar22,uVar8);\n              if (iVar9 != 0) {\n                local_74 = local_34;\n                goto LAB_08008294;\n              }\n              uVar23 = FUNC_08000158(0,DAT_08007ecc,(int)uVar21,uVar11);\n              iVar9 = FUN_080009ac((int)uVar23,(int)((ulonglong)uVar23 >> 0x20),(int)uVar22,uVar8);\n              if (iVar9 != 0) goto LAB_08008798;\n              pcVar14 = pcVar15;\n            } while (pcVar15 != pcVar18 + local_48);\n          }\n          goto LAB_08007e36;\n        }\nLAB_08008798:\n        local_74 = local_34;\n      }\n      goto LAB_08007f7c;\n    }\nLAB_0800852e:\n    uVar21 = FUNC_08000158(local_80,local_7c,0,DAT_080086c8);\n    uVar11 = (undefined4)((ulonglong)uVar21 >> 0x20);\n    uVar12 = FUN_080009e8((int)uVar21,uVar11,uVar8,iVar9);\n    if (uVar12 == 0) {\n      iVar9 = FUN_080009ac((int)uVar21,uVar11,uVar8,iVar9 + -0x80000000);\n      uVar5 = uVar12;\n      pcVar15 = pcVar18;\n      if (iVar9 == 0) goto LAB_08007e36;\n      goto LAB_080084f0;\n    }\n    local_68 = 0;\n    uVar12 = 0;\nLAB_08008406:\n    *pcVar18 = '1';\n    local_74 = local_74 + 1;\n    pcVar15 = pcVar18 + 1;\n    uVar5 = local_68;\nLAB_08008416:\n    FUN_0800910c(param_1,uVar5);\n    if (uVar12 == 0) goto LAB_08008294;\n  }\n  else {\nLAB_08007e36:\n    pcVar15 = pcVar18;\n    if ((-1 < local_2c[0]) && ((int)local_74 < 0xf)) {\n      uVar8 = *(undefined4 *)(PTR_DAT_08007ec4 + local_74 * 8);\n      uVar11 = *(undefined4 *)((int)(PTR_DAT_08007ec4 + local_74 * 8) + 4);\n      if ((-1 < (int)param_6) || (0 < (int)local_68)) {\n        FUNC_0800071c(param_3,uVar4,uVar8,uVar11);\n        bVar2 = FUN_0800119c();\n        uVar21 = FUN_080003f4();\n        uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),uVar8,uVar11);\n        uVar21 = FUNC_08000158(param_3,uVar4,(int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n        *pcVar18 = bVar2 + 0x30;\n        pcVar15 = pcVar18 + 1;\n        if (local_68 != 1) {\n          uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_08007ed8);\n          iVar9 = FUN_08000998((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,0);\n          while (iVar9 == 0) {\n            uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n            FUNC_0800071c((int)uVar21,uVar17,uVar8,uVar11);\n            bVar2 = FUN_0800119c();\n            uVar22 = FUN_080003f4();\n            uVar22 = FUNC_080004c8((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),uVar8,uVar11);\n            uVar21 = FUNC_08000158((int)uVar21,uVar17,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n            pcVar14 = pcVar15 + 1;\n            *pcVar15 = bVar2 + 0x30;\n            pcVar15 = pcVar14;\n            if (local_68 == (int)pcVar14 - (int)pcVar18) goto LAB_08007f3a;\n            uVar21 = FUNC_080004c8((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,DAT_080081f8);\n            iVar9 = FUN_08000998((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),0,0);\n          }\n          goto LAB_08008294;\n        }\nLAB_08007f3a:\n        uVar21 = FUNC_0800015c((int)uVar21,(int)((ulonglong)uVar21 >> 0x20));\n        uVar17 = (undefined4)((ulonglong)uVar21 >> 0x20);\n        iVar9 = FUN_080009e8((int)uVar21,uVar17,uVar8,uVar11);\n        if ((iVar9 == 0) &&\n           ((iVar9 = FUN_08000998((int)uVar21,uVar17,uVar8,uVar11), iVar9 == 0 || ((bVar2 & 1) == 0)\n            ))) goto LAB_08008294;\n        cVar1 = pcVar15[-1];\nLAB_08007f7c:\n        while (pcVar14 = pcVar15 + -1, cVar1 == '9') {\n          if (pcVar18 == pcVar14) {\n            *pcVar18 = '0';\n            cVar1 = pcVar15[-1];\n            local_74 = local_74 + 1;\n            pcVar14 = pcVar18;\n            break;\n          }\n          cVar1 = pcVar15[-2];\n          pcVar15 = pcVar14;\n        }\n        *pcVar14 = cVar1 + '\\x01';\n        goto LAB_08008294;\n      }\n      if (local_68 == 0) {\n        uVar21 = FUNC_080004c8(uVar8,uVar11,0,DAT_080086c8);\n        iVar9 = FUN_080009d4((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),param_3,uVar4);\n        uVar12 = local_68;\n        uVar5 = local_68;\n        if (iVar9 == 0) goto LAB_08008406;\n      }\n      else {\n        uVar12 = 0;\n        uVar5 = 0;\n      }\nLAB_080084f0:\n      local_74 = ~param_6;\n      pcVar18 = pcVar15;\n      goto LAB_08008416;\n    }\n    iVar9 = local_5c;\n    if (local_64 == 0) {\n      local_60 = local_70;\n      uVar12 = local_64;\n    }\n    else {\n      if ((int)param_5 < 2) {\n        if (local_60 == 0) {\n          local_60 = local_70;\n          local_70 = local_70 + (0x36 - local_30);\n          iVar10 = iVar10 + (0x36 - local_30);\n        }\n        else {\n          local_60 = local_70;\n          local_70 = local_70 + local_2c[0] + 0x433;\n          iVar10 = iVar10 + local_2c[0] + 0x433;\n        }\n      }\n      else {\n        iVar13 = local_68 - 1;\n        if (local_5c < iVar13) {\n          local_58 = local_58 + (iVar13 - local_5c);\n          iVar9 = 0;\n          local_5c = iVar13;\n        }\n        else {\n          iVar9 = local_5c - iVar13;\n        }\n        if ((int)local_68 < 0) {\n          local_60 = local_70 - local_68;\n        }\n        else {\n          iVar10 = iVar10 + local_68;\n          local_60 = local_70;\n          local_70 = local_70 + local_68;\n        }\n      }\n      uVar12 = FUN_08009244(param_1,1);\n    }\n    if ((0 < local_60) && (0 < iVar10)) {\n      iVar13 = local_60;\n      if (iVar10 <= local_60) {\n        iVar13 = iVar10;\n      }\n      iVar10 = iVar10 - iVar13;\n      local_70 = local_70 - iVar13;\n      local_60 = local_60 - iVar13;\n    }\n    if (local_5c != 0) {\n      if (local_64 == 0) {\n        uVar3 = FUN_080093a4(param_1,uVar3,local_5c);\n      }\n      else {\n        uVar8 = uVar3;\n        if (iVar9 != 0) {\n          uVar12 = FUN_080093a4(param_1,uVar12,iVar9);\n          uVar8 = FUN_08009258(param_1,uVar12,uVar3);\n          FUN_0800910c(param_1,uVar3);\n          uVar3 = uVar8;\n          if (local_5c - iVar9 == 0) goto LAB_08008062;\n        }\n        uVar3 = FUN_080093a4(param_1,uVar8,local_5c - iVar9);\n      }\n    }\nLAB_08008062:\n    uVar5 = FUN_08009244(param_1,1);\n    if (local_58 == 0) {\n      if (((int)param_5 < 2) && (param_3 == 0)) {\nLAB_0800835a:\n        if ((uVar4 & 0xfffff) == 0) {\n          uVar4 = uVar4 & 0x7ff00000;\n          if (uVar4 != 0) {\n            iVar10 = iVar10 + 1;\n            local_70 = local_70 + 1;\n            uVar4 = 1;\n          }\n        }\n        else {\n          uVar4 = 0;\n        }\n        bVar20 = local_58 != 0;\n        uVar6 = param_3;\n        local_58 = uVar4;\n        if (bVar20) goto LAB_080082d4;\n      }\n      iVar9 = 1;\n    }\n    else {\n      uVar21 = FUN_080093a4(param_1,uVar5);\n      uVar5 = (uint)uVar21;\n      if (((int)param_5 < 2) && (param_3 == 0)) goto LAB_0800835a;\n      local_58 = 0;\n      uVar6 = (uint)((ulonglong)uVar21 >> 0x20);\nLAB_080082d4:\n      iVar9 = FUN_080091a4(*(undefined4 *)(uVar5 + *(int *)(uVar5 + 0x10) * 4 + 0x10),uVar6);\n      iVar9 = 0x20 - iVar9;\n    }\n    uVar4 = iVar9 + iVar10 & 0x1f;\n    if (uVar4 == 0) {\n      iVar9 = 0x1c;\nLAB_08008096:\n      iVar10 = iVar10 + iVar9;\n      local_70 = local_70 + iVar9;\n      local_60 = local_60 + iVar9;\n    }\n    else {\n      if (4 < (int)(0x20 - uVar4)) {\n        iVar9 = 0x1c - uVar4;\n        goto LAB_08008096;\n      }\n      if (0x20 - uVar4 != 4) {\n        iVar9 = 0x3c - uVar4;\n        goto LAB_08008096;\n      }\n    }\n    if (0 < local_70) {\n      uVar3 = FUN_08009444(param_1,uVar3,local_70);\n    }\n    if (0 < iVar10) {\n      uVar5 = FUN_08009444(param_1,uVar5,iVar10);\n    }\n    pcVar14 = pcVar18;\n    if ((local_54 != 0) && (iVar9 = FUN_080094f8(uVar3,uVar5), iVar9 < 0)) {\n      local_74 = local_74 - 1;\n      uVar3 = FUN_08009120(param_1,uVar3,10,0);\n      if (local_64 == 0) {\n        if ((0 < (int)local_38) || ((int)param_5 < 3)) {\n          local_68 = local_38;\n          goto LAB_0800820a;\n        }\n      }\n      else {\n        uVar12 = FUN_08009120(param_1,uVar12,10,0);\n        if ((0 < (int)local_38) || ((int)param_5 < 3)) {\n          local_68 = local_38;\n          goto LAB_080080de;\n        }\n      }\n      local_68 = local_38;\nLAB_080084e8:\n      if (local_68 == 0) {\n        local_68 = FUN_08009120(param_1,uVar5,5);\n        iVar9 = FUN_080094f8(uVar3,local_68);\n        uVar5 = local_68;\n        if (0 < iVar9) goto LAB_08008406;\n      }\n      goto LAB_080084f0;\n    }\n    if (((int)local_68 < 1) && (2 < (int)param_5)) goto LAB_080084e8;\n    if (local_64 == 0) {\nLAB_0800820a:\n      while( true ) {\n        iVar19 = FUN_080078c0(uVar3,uVar5);\n        iVar19 = iVar19 + 0x30;\n        pcVar15 = pcVar14 + 1;\n        *pcVar14 = (char)iVar19;\n        if ((int)local_68 <= (int)pcVar15 - (int)pcVar18) break;\n        uVar3 = FUN_08009120(param_1,uVar3,10,0);\n        pcVar14 = pcVar15;\n      }\n      local_80 = 0;\n    }\n    else {\nLAB_080080de:\n      local_80 = uVar12;\n      if (0 < local_60) {\n        local_80 = FUN_08009444(param_1,uVar12,local_60);\n      }\n      uVar12 = local_80;\n      if (local_58 != 0) {\n        iVar9 = FUN_080090c0(param_1,*(undefined4 *)(local_80 + 4));\n        FUN_08001084(iVar9 + 0xc,local_80 + 0xc,(*(int *)(local_80 + 0x10) + 2) * 4);\n        uVar12 = FUN_08009444(param_1,iVar9,1);\n      }\nLAB_08008108:\n      iVar9 = FUN_080078c0(uVar3,uVar5);\n      iVar13 = FUN_080094f8(uVar3,local_80);\n      iVar10 = FUN_08009530(param_1,uVar5,uVar12);\n      iVar19 = iVar9 + 0x30;\n      if (*(int *)(iVar10 + 0xc) == 0) {\n        uVar4 = FUN_080094f8(uVar3);\n        FUN_0800910c(param_1,iVar10);\n        if (((uVar4 != 0) || (param_5 != 0)) || (uVar4 = param_5, (param_3 & 1) != 0))\n        goto LAB_0800815a;\n        if (iVar19 != 0x39) {\n          if (0 < iVar13) {\nLAB_0800874c:\n            iVar19 = iVar9 + 0x31;\n          }\n          goto LAB_080085a4;\n        }\nLAB_08008752:\n        pcVar15 = pcVar14 + 1;\n        cVar1 = '9';\n        *pcVar14 = '9';\n        goto LAB_08008268;\n      }\n      FUN_0800910c(param_1,iVar10);\n      uVar4 = 1;\nLAB_0800815a:\n      if ((iVar13 < 0) || (((iVar13 == 0 && (param_5 == 0)) && ((param_3 & 1) == 0)))) {\n        if (0 < (int)uVar4) {\n          uVar3 = FUN_08009444(param_1,uVar3,1);\n          iVar13 = FUN_080094f8(uVar3,uVar5);\n          if ((0 < iVar13) || ((iVar13 == 0 && (iVar9 << 0x1f < 0)))) {\n            if (iVar19 != 0x39) goto LAB_0800874c;\n            goto LAB_08008752;\n          }\n        }\nLAB_080085a4:\n        pcVar15 = pcVar14 + 1;\n        *pcVar14 = (char)iVar19;\n        goto LAB_08008274;\n      }\n      pcVar15 = pcVar14 + 1;\n      if (0 < (int)uVar4) {\n        if (iVar19 == 0x39) goto LAB_08008752;\n        *pcVar14 = (char)iVar9 + '1';\n        goto LAB_08008274;\n      }\n      *pcVar14 = (char)iVar19;\n      if (pcVar18 + (local_68 - 1) != pcVar14) {\n        uVar3 = FUN_08009120(param_1,uVar3,10,0);\n        pcVar14 = pcVar15;\n        if (local_80 == uVar12) {\n          local_80 = FUN_08009120(param_1,local_80,10,0);\n          uVar12 = local_80;\n        }\n        else {\n          local_80 = FUN_08009120(param_1,local_80,10,0);\n          uVar12 = FUN_08009120(param_1,uVar12,10,0);\n        }\n        goto LAB_08008108;\n      }\n    }\n    uVar3 = FUN_08009444(param_1,uVar3,1);\n    iVar9 = FUN_080094f8(uVar3,uVar5);\n    cVar1 = pcVar15[-1];\n    if ((0 < iVar9) || ((iVar9 == 0 && (iVar19 << 0x1f < 0)))) {\nLAB_08008268:\n      do {\n        pcVar14 = pcVar15 + -1;\n        if (cVar1 != '9') goto code_r0x08008270;\n        if (pcVar18 == pcVar14) {\n          *pcVar18 = '1';\n          local_74 = local_74 + 1;\n          goto LAB_08008274;\n        }\n        cVar1 = pcVar15[-2];\n        pcVar15 = pcVar14;\n      } while( true );\n    }\n    while (cVar1 == '0') {\n      cVar1 = pcVar15[-2];\n      pcVar15 = pcVar15 + -1;\n    }\nLAB_08008274:\n    FUN_0800910c(param_1,uVar5);\n    if (uVar12 == 0) goto LAB_08008294;\n    if ((local_80 != 0) && (local_80 != uVar12)) {\n      FUN_0800910c(param_1);\n    }\n  }\n  FUN_0800910c(param_1,uVar12);\nLAB_08008294:\n  FUN_0800910c(param_1,uVar3);\n  *pcVar15 = '\\0';\n  *param_7 = local_74 + 1;\n  if (param_9 == (char **)0x0) {\n    return pcVar18;\n  }\n  *param_9 = pcVar15;\n  return pcVar18;\ncode_r0x08008270:\n  *pcVar14 = cVar1 + '\\x01';\n  goto LAB_08008274;\n}\n\n",
            "called": [
                "FUN_08009258",
                "FUN_080003f4",
                "FUN_0800910c",
                "FUN_08009120",
                "FUN_080004c8",
                "FUN_080009ac",
                "FUN_0800119c",
                "FUN_080078c0",
                "FUN_08009630",
                "FUN_080093a4",
                "FUN_08009444",
                "FUN_080003d4",
                "FUN_0800015c",
                "FUN_080009d4",
                "FUN_08009244",
                "FUN_08001084",
                "FUN_08000158",
                "FUN_08000998",
                "FUN_080094f8",
                "FUN_08009530",
                "FUN_080090c0",
                "FUN_0800071c",
                "FUN_080009e8",
                "FUN_080091a4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080079e8",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "FUNC_080079e8"
        },
        "FUN_0800166c": {
            "renaming": {
                "FUN_0800166c": "get_bits_0800166c",
                "param_1": "num_bits_to_get",
                "param_2": "value_to_get_bits_from",
                "param_3": "value_to_set_bits",
                "uVar1": "num_bits_remaining",
                "mask_to_set_bits": "mask_to_set_bits",
                "mask_to_get_bits": "mask_to_get_bits"
            },
            "code": "uint get_bits_0800166c(uint num_bits_to_get, uint value_to_get_bits_0800166c_from, uint value_to_set_bits_to)\n{\n  uint num_bits_to_set = 0;\n  uint num_bits_remaining = 7 - (num_bits_to_get & 7);\n  if (num_bits_remaining > 3) {\n    num_bits_remaining = 4;\n  }\n  if (num_bits_to_get + 4 < 7) {\n    num_bits_to_set = 0;\n  }\n  else {\n    num_bits_to_set = num_bits_to_get - 3;\n  }\n  uint mask_to_set_bits = ~(-1 << (num_bits_to_set & 0xff));\n  uint mask_to_get_bits_0800166c = ~(-1 << (num_bits_remaining & 0xff));\n  return value_to_set_bits & mask_to_set_bits | (value_to_get_bits_0800166c_from & mask_to_get_bits_0800166c) << (num_bits_to_set & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800166c",
            "calling": [
                "FUN_0800172a"
            ],
            "imported": false,
            "current_name": "get_bits_0800166c"
        },
        "FUN_0800360c": {
            "renaming": {
                "FUN_0800360c": "set_flags_on_0800360c",
                "param_1": "ptr_param",
                "PTR_": "ptr_",
                "DAT_": "data_",
                "*param_1": "*ptr_param",
                "(*param_1)[3]": "data_ptr[3]",
                "**param_1": "*data_ptr"
            },
            "code": "int set_flags_on_0800360c(uint **PTR_param) {\n  uint *DAT_ptr = *PTR_param;\n  DAT_ptr[3] |= 1;\n  *DAT_ptr |= 1;\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800360c",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "set_flags_on_0800360c"
        },
        "FUN_08005d68": {
            "renaming": {
                "FUN_08005d68": "fill_buffer_with_byte_08005d68",
                "param_1": "buffer",
                "param_2": "byte",
                "param_3": "buffer_size",
                "puVar1": "buffer_ptr",
                "puVar2": "buffer_end_ptr",
                "uVar3": "bytes_to_fill",
                "uVar4": "pattern",
                "bVar5": "is_done"
            },
            "code": "void fill_buffer_with_byte_08005d68(uint32_t* buffer, uint8_t byte, uint32_t buffer_size) {\n  uint32_t* buffer_ptr;\n  uint32_t* buffer_end_ptr;\n  uint32_t bytes_to_fill;\n  uint32_t pattern;\n\n  if (((uint32_t)buffer & 3) != 0) {\n    bytes_to_fill = buffer_size - 1;\n    buffer_ptr = buffer;\n    if (buffer_size == 0) {\n      return;\n    }\n    while( true ) {\n      buffer = (uint32_t*)((int)buffer_ptr + 1);\n      *(uint8_t*)buffer_ptr = byte;\n      buffer_size = bytes_to_fill;\n      if (((uint32_t)buffer & 3) == 0) break;\n      bool is_done = bytes_to_fill == 0;\n      bytes_to_fill = bytes_to_fill - 1;\n      buffer_ptr = buffer;\n      if (is_done) {\n        return;\n      }\n    }\n  }\n  if (3 < buffer_size) {\n    pattern = (byte << 24) | (byte << 16) | (byte << 8) | byte;\n    bytes_to_fill = buffer_size;\n    buffer_ptr = buffer;\n    if (0xf < buffer_size) {\n      bytes_to_fill = buffer_size - 0x10;\n      buffer_ptr = buffer + 4;\n      do {\n        buffer_ptr[-4] = pattern;\n        buffer_ptr[-3] = pattern;\n        buffer_ptr[-2] = pattern;\n        buffer_ptr[-1] = pattern;\n        buffer_ptr = buffer_ptr + 4;\n      } while (buffer_ptr != (uint32_t*)((int)buffer + (bytes_to_fill & 0xfffffff0) + 0x20));\n      buffer_size = buffer_size & 0xf;\n      buffer = buffer + ((bytes_to_fill >> 4) + 1) * 4;\n      bytes_to_fill = buffer_size;\n      buffer_ptr = buffer;\n      if (buffer_size < 4) goto LAB_08005de4;\n    }\n    do {\n      bytes_to_fill = bytes_to_fill - 4;\n      *buffer = pattern;\n      buffer = buffer + 1;\n    } while (3 < bytes_to_fill);\n    buffer = (uint32_t*)((int)buffer_ptr + (buffer_size - 4 & 0xfffffffc) + 4);\n    bytes_to_fill = buffer_size & 3;\n  }\nLAB_08005de4:\n  if (bytes_to_fill != 0) {\n    buffer_ptr = buffer;\n    do {\n      buffer_end_ptr = (uint32_t*)((int)buffer_ptr + 1);\n      *(uint8_t*)buffer_ptr = byte;\n      buffer_ptr = buffer_end_ptr;\n    } while ((uint32_t*)(bytes_to_fill + (int)buffer) != buffer_end_ptr);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d68",
            "calling": [
                "FUN_08004f60",
                "FUN_08009980"
            ],
            "imported": false,
            "current_name": "fill_buffer_with_byte_08005d68"
        },
        "FUN_080017c4": {
            "renaming": {
                "FUN_080017c4": "set_bits_080017c4",
                "param_1": "bit_array",
                "param_2": "mask",
                "uVar1": "mask_value",
                "uVar2": "mask_bit",
                "uVar3": "bit_array_index",
                "uVar4": "mask_bit",
                "uVar5": "bit_value",
                "puVar6": "bit_array_ptr",
                "iVar7": "index",
                "local_10": "bit_array_index",
                "local_c": "index"
            },
            "code": "void set_bits_080017c4(uint *bit_array, uint *mask)\n{\n  uint mask_bit;\n  uint mask_value;\n  uint *bit_array_ptr;\n  int index;\n  uint bit_value;\n  uint bit_array_index;\n  \n  bit_array_index = 0;\n  index = 0;\n  do {\n    if (index > 15) {\n      return;\n    }\n    mask_bit = 1 << (index & 0xff);\n    mask_value = *mask & mask_bit;\n    if (mask_value == mask_bit) {\n      bit_value = mask[1];\n      if (bit_value == 0x12) {\n        bit_array_index = mask[3] + 0xc;\n      }\n      else if (bit_value < 0x13) {\n        if (bit_value == 2) {\n          bit_array_index = mask[3] + 8;\n        }\n        else if (bit_value < 3) {\n          if (bit_value == 0) goto LAB_08001882;\n          if (bit_value == 1) {\n            bit_array_index = mask[3];\n          }\n        }\n        else if (bit_value == 3) {\n          bit_array_index = 0;\n        }\n        else if (bit_value == 0x11) {\n          bit_array_index = mask[3] + 4;\n        }\n      }\n      else if (((bit_value == DAT_08001a4c) || (((mask_value = DAT_08001a54, mask_bit = DAT_08001a50, DAT_08001a4c < bit_value && (mask_value = DAT_08001a60, mask_bit = DAT_08001a5c, bit_value == DAT_08001a58)) || (bit_value == mask_bit)))) || (bit_value == mask_value)) {\nLAB_08001882:\n        if (mask[2] == 0) {\n          bit_array_index = 4;\n        }\n        else if (mask[2] == 1) {\n          bit_array_index = 8;\n          bit_array[4] = mask_bit;\n        }\n        else {\n          bit_array_index = 8;\n          bit_array[5] = mask_bit;\n        }\n      }\n      if (mask_value < 0x100) {\n        bit_array_ptr = bit_array;\n        index *= 4;\n      }\n      else {\n        bit_array_ptr = bit_array + 1;\n        index = (index - 8) * 4;\n      }\n      *bit_array_ptr = *bit_array_ptr & ~(0xf << (index & 0xff)) | bit_array_index << (index & 0xff);\n      if ((mask[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_08001a64 + 0x18) = *(uint *)(DAT_08001a64 + 0x18) | 1;\n        if (bit_array == DAT_08001a6c) {\n          bit_array_index = 0;\n        }\n        else if (bit_array == DAT_08001a70) {\n          bit_array_index = 1;\n        }\n        else if (bit_array == DAT_08001a74) {\n          bit_array_index = 2;\n        }\n        else if (bit_array == DAT_08001a78) {\n          bit_array_index = 3;\n        }\n        else {\n          bit_array_index = 4;\n        }\n        *(uint *)(DAT_08001a68 + ((index >> 2) + 2) * 4) = bit_array_index << ((index & 3) << 2) | ~(0xf << ((index & 3) << 2)) & *(uint *)(DAT_08001a68 + ((index >> 2) + 2) * 4);\n        if ((mask[1] & 0x10000) == 0) {\n          *DAT_08001a7c = ~mask_value & *DAT_08001a7c;\n        }\n        else {\n          *DAT_08001a7c = mask_value | *DAT_08001a7c;\n        }\n        if ((mask[1] & 0x20000) == 0) {\n          DAT_08001a7c[1] = ~mask_value & DAT_08001a7c[1];\n        }\n        else {\n          DAT_08001a7c[1] = mask_value | DAT_08001a7c[1];\n        }\n        if ((mask[1] & 0x100000) == 0) {\n          DAT_08001a7c[2] = ~mask_value & DAT_08001a7c[2];\n        }\n        else {\n          DAT_08001a7c[2] = mask_value | DAT_08001a7c[2];\n        }\n        if ((mask[1] & 0x200000) == 0) {\n          DAT_08001a7c[3] = ~mask_value & DAT_08001a7c[3];\n        }\n        else {\n          DAT_08001a7c[3] = mask_value | DAT_08001a7c[3];\n        }\n      }\n    }\n    index++;\n  } while( true );\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080017c4",
            "calling": [
                "FUN_080055f4",
                "FUN_08005680"
            ],
            "imported": false,
            "current_name": "set_bits_080017c4"
        },
        "FUN_080035a4": {
            "renaming": {
                "FUN_080035a4": "validate_input_080035a4",
                "*param_1": "input_array",
                "uVar1": "return_value",
                "param_1": "input_array",
                "do_nothing_080035fa": "do_nothing",
                "*(char *)((int)param_1 + 0x3d)": "input_array[15]",
                "*(undefined *)((int)param_1 + 0x3d)": "input_array[15]",
                "*(undefined *)(param_1 + 0xf)": "input_array[13]",
                "FUN_08003c94": "perform_operation"
            },
            "code": "int validate_input_080035a4(int *input_array)\n{\n  int return_value;\n  if (input_array == NULL)\n  {\n    return_value = 1;\n  }\n  else\n  {\n    if (input_array[15] == 0)\n    {\n      input_array[13] = 0;\n      do_nothing(input_array);\n    }\n    input_array[15] = 2;\n    perform_operation(input_array[0], &input_array[1]);\n    input_array[15] = 1;\n    return_value = 0;\n  }\n  return return_value;\n}",
            "called": [
                "FUN_080035fa",
                "FUN_08003c94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035a4",
            "calling": [
                "FUN_080053b0",
                "FUN_08005500"
            ],
            "imported": false,
            "current_name": "validate_input_080035a4"
        },
        "FUN_080041ea": {
            "renaming": {
                "FUN_080041ea": "set_bit_in_uint_array_080041ea",
                "param_1": "array",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "*(uint *)(param_1 + 0x20)": "array[0]",
                "1 << (param_2 & 0xff)": "1 << (bit_index & 0xff)",
                "~(1 << (param_2 & 0xff))": "mask",
                "*(uint *)(param_1 + 0x20) & ~(1 << (param_2 & 0xff))": "masked_array_value",
                "param_3 << (param_2 & 0xff)": "shifted_bit_value",
                "*(uint *)(param_1 + 0x20) | param_3 << (param_2 & 0xff)": "array[0] = masked_array_value | shifted_bit_value"
            },
            "code": "void set_bit_in_uint_array_080041ea(uint* array, uint bit_index, uint bit_value) {\n    uint mask = ~(1 << (bit_index & 0xff));\n    uint masked_array_value = array[0] & mask;\n    uint shifted_bit_value = bit_value << (bit_index & 0xff);\n    array[0] = masked_array_value | shifted_bit_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ea",
            "calling": [
                "FUN_080036a8"
            ],
            "imported": false,
            "current_name": "set_bit_in_uint_array_080041ea"
        },
        "FUN_08004ae0": {
            "renaming": {
                "FUN_08004ae0": "decode_string_from_pointers_08004ae0",
                "*param_1": "*output",
                "local_2c": "byte1",
                "local_2b": "byte2",
                "local_2a": "byte3",
                "local_29": "byte4",
                "local_28": "byte5",
                "local_27": "byte6",
                "local_26": "byte7",
                "local_25": "byte8",
                "local_24": "byte9",
                "local_23": "byte10",
                "local_22": "byte11",
                "local_21": "byte12",
                "local_20": "byte13",
                "local_1f": "byte14",
                "local_1e": "short6",
                "local_1c": "short5",
                "local_1a": "short4",
                "local_18": "short3",
                "local_16": "short2",
                "local_14": "short1"
            },
            "code": "void decode_string_from_pointers_08004ae0(undefined4 *output)\n{\n  // Initialize local variables\n  char byte1;\n  char byte2;\n  char byte3;\n  char byte4;\n  char byte5;\n  char byte6;\n  short short1;\n  short short2;\n  short short3;\n  short short4;\n  short short5;\n  short short6;\n  \n  // Call function to get 14 bytes starting at address 0xd0 and store them in local variables\n  (**(code **)PTR_DAT_08004bd4)(0xd0, 0x3b, &byte1, 0xe);\n  \n  // Combine pairs of bytes into shorts\n  short1 = (byte2 << 8) | byte1;\n  short2 = (byte4 << 8) | byte3;\n  short3 = (byte6 << 8) | byte5;\n  short4 = (byte8 << 8) | byte7;\n  short5 = (byte10 << 8) | byte9;\n  short6 = (byte12 << 8) | byte11;\n  \n  // Call function to decode each short and store the result in output array\n  output[0] = FUN_08000c10((int)(byte1 | (byte2 << 8)));\n  output[1] = FUN_08000c10((int)short1);\n  output[2] = FUN_08000c10((int)short2);\n  output[3] = FUN_08000c10((int)short3);\n  output[4] = FUN_08000c10((int)short4);\n  output[5] = FUN_08000c10((int)short5);\n  output[6] = FUN_08000c10((int)short6);\n}\n",
            "called": [
                "FUN_08000c10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ae0",
            "calling": [
                "FUN_080049cc",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "decode_string_from_pointers_08004ae0"
        },
        "FUN_08001044": {
            "renaming": {
                "FUN_08001044": "decode_uint_08001044",
                "param_1": "encoded_value",
                "uVar1": "shift_amount",
                "is_valid": "is_valid",
                "is_negative": "is_negative",
                "decoded_value": "decoded_value"
            },
            "code": "uint decode_uint_08001044(uint encoded_value) {\n  uint decoded_value;\n  bool is_negative = (encoded_value & 0x80000000) != 0;\n  bool is_valid = (encoded_value << 1) < 0x7f000000;\n  if (is_negative || !is_valid) {\n    return 0;\n  }\n  uint shift_amount = 0x9e - ((encoded_value << 1) >> 0x18);\n  if (shift_amount < 0) {\n    return 0xffffffff;\n  }\n  if (shift_amount == 0x61 && (encoded_value & 0x7fffff) != 0) {\n    return 0;\n  }\n  decoded_value = (encoded_value << 8 | 0x80000000) >> (shift_amount & 0xff);\n  return decoded_value;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001044",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "decode_uint_08001044"
        },
        "FUN_08009444": {
            "renaming": {
                "FUN_08009444": "encode_data_08009444",
                "param_1": "data",
                "param_2": "buffer",
                "param_3": "buffer_len",
                "iVar1": "temp1",
                "iVar2": "num_words",
                "iVar3": "word_offset",
                "uVar4": "data_word",
                "iVar5": "buffer_offset",
                "iVar6": "temp2",
                "puVar7": "current_word_ptr",
                "puVar8": "words_to_encode_ptr",
                "puVar9": "current_word_to_encode_ptr",
                "puVar10": "next_word_to_encode_ptr",
                "puVar11": "end_words_to_encode_ptr",
                "iVar12": "num_words_per_block",
                "iVar13": "total_blocks",
                "uVar14": "carry"
            },
            "code": "void encode_data_08009444(int data, uint32_t *buffer, uint32_t buffer_len) {\n    int buffer_offset = buffer[4];\n    int num_words_per_block = (int)buffer_len >> 5;\n    int total_blocks = num_words_per_block + buffer_offset + 1;\n    int word_offset = buffer[1];\n    int num_words = buffer[2];\n    if (num_words < total_blocks) {\n        do {\n            num_words = num_words * 2;\n            word_offset = word_offset + 1;\n        } while (total_blocks != num_words && total_blocks + (num_words * -2) < 0 == SBORROW4(total_blocks,num_words));\n    }\n    int word_offset_ptr = calculate_word_offset_ptr(data, word_offset);\n    uint32_t *current_word_ptr = (uint32_t *)(word_offset_ptr + 0x14);\n    if (0 < num_words_per_block) {\n        uint32_t *end_word_ptr = current_word_ptr + num_words_per_block;\n        uint32_t *current_zero_word_ptr = current_word_ptr;\n        do {\n            uint32_t *next_word_ptr = current_zero_word_ptr + 1;\n            *current_zero_word_ptr = 0;\n            current_word_ptr = end_word_ptr;\n            current_zero_word_ptr = next_word_ptr;\n        } while (next_word_ptr != end_word_ptr);\n    }\n    buffer_offset = buffer[4];\n    uint32_t *words_to_encode_ptr = buffer + 5;\n    buffer_len = buffer_len & 0x1f;\n    if (buffer_len == 0) {\n        current_word_ptr = current_word_ptr + -1;\n        uint32_t *end_words_to_encode_ptr = words_to_encode_ptr;\n        do {\n            uint32_t *next_word_to_encode_ptr = end_words_to_encode_ptr + 1;\n            current_word_ptr = current_word_ptr + 1;\n            *current_word_ptr = *end_words_to_encode_ptr;\n            end_words_to_encode_ptr = next_word_to_encode_ptr;\n        } while (next_word_to_encode_ptr < words_to_encode_ptr + buffer_offset);\n    }\n    else {\n        uint32_t carry = 0;\n        uint32_t *end_words_to_encode_ptr = words_to_encode_ptr;\n        do {\n            uint32_t *current_word_to_encode_ptr = current_word_ptr;\n            *current_word_to_encode_ptr = *end_words_to_encode_ptr << buffer_len | carry;\n            uint32_t *next_word_to_encode_ptr = end_words_to_encode_ptr + 1;\n            carry = *end_words_to_encode_ptr >> (0x20 - buffer_len & 0xff);\n            current_word_ptr = current_word_to_encode_ptr + 1;\n            end_words_to_encode_ptr = next_word_to_encode_ptr;\n        } while (end_words_to_encode_ptr < words_to_encode_ptr + num_words_per_block);\n        current_word_ptr[1] = carry;\n        if (carry != 0) {\n            total_blocks = num_words_per_block + buffer_offset + 2;\n        }\n    }\n    int data_ptr = *(int *)(data + 0x4c);\n    int word_offset_ptr_2 = buffer[1];\n    uint32_t data_word = *(uint32_t *)(data_ptr + word_offset_ptr_2 * 4);\n    *(int *)(word_offset_ptr + 0x10) = total_blocks - 1;\n    *buffer = data_word;\n    *(uint32_t **)(data_ptr + word_offset_ptr_2 * 4) = buffer;\n}",
            "called": [
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009444",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "encode_data_08009444"
        },
        "FUN_080015fc": {
            "renaming": {
                "FUN_080015fc": "get_bits_from_uint_080015fc",
                "DAT_08001614": "DAT_ptr",
                "PTR_uint": "uint_ptr",
                "uint": "unsigned int",
                "bits": "original_bits",
                "shifted_bits": "bits_shifted",
                "masked_bits": "bits_masked"
            },
            "code": "uint get_bits_from_uint_080015fc(void)\n{\n    uint PTR_uint = DAT_08001614 + 0xc;\n    uint bits = *(uint *)PTR_uint;\n    uint shifted_bits = bits >> 8;\n    uint masked_bits = shifted_bits & 7;\n    return masked_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015fc",
            "calling": [
                "FUN_0800172a"
            ],
            "imported": false,
            "current_name": "get_bits_from_uint_080015fc"
        },
        "FUN_08004436": {
            "renaming": {
                "FUN_08004436": "decode_data_08004436",
                "param_1": "data",
                "param_2": "input_data",
                "param_3": "input_length",
                "param_4": "max_wait_time",
                "iVar1": "read_time_start",
                "iVar2": "read_time_end",
                "uVar3": "return_value",
                "local_58": "input_data_ptr"
            },
            "code": "uint decode_data_08004436(uint **data, ushort *input_data, short input_length, uint max_wait_time) {\n    int read_time_start;\n    int read_time_end;\n    uint return_value;\n    ushort *input_data_ptr;\n\n    if (*(char *)((int)data + 0x39) != ' ') {\n        return 2;\n    }\n\n    if (input_data == NULL || input_length == 0) {\n        return 1;\n    }\n\n    if (*(char *)(data + 0xe) == '\\x01') {\n        return 2;\n    }\n\n    *(undefined *)(data + 0xe) = 1;\n    data[0xf] = NULL;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    read_time_start = get_current_time();\n    data[9] = input_length;\n    *(short *)((int)data + 0x26) = input_length;\n    input_data_ptr = input_data;\n\n    while (*(short *)((int)data + 0x26) != 0) {\n        *(short *)((int)data + 0x26) = *(short *)((int)data + 0x26) - 1;\n\n        if (data[2] == (uint *)0x1000) {\n            while ((**data & 0x80) == 0x80) {\n                if (max_wait_time != 0 && get_current_time() - read_time_start > max_wait_time) {\n                    (*data)[3] &= 0xfffffe5f;\n                    (*data)[5] &= 0xfffffffe;\n                    *(undefined *)((int)data + 0x39) = 0x20;\n                    *(undefined *)((int)data + 0x3a) = 0x20;\n                    *(undefined *)(data + 0xe) = 0;\n                    return 3;\n                }\n            }\n\n            (*data)[3] &= 0xfffffe5f;\n            (*data)[5] &= 0xfffffffe;\n            *(undefined *)((int)data + 0x39) = 0x20;\n            *(undefined *)((int)data + 0x3a) = 0x20;\n            *(undefined *)(data + 0xe) = 0;\n\n            if ((**data & 0x80) == 0x80) {\n                return 3;\n            }\n\n            (*data)[1] = *input_data_ptr & 0x1ff;\n            input_data_ptr = (data[4] == NULL) ? input_data_ptr + 1 : (ushort *)((int)input_data_ptr + 1);\n        }\n        else {\n            while ((**data & 0x80) == 0x80) {\n                if (max_wait_time != 0 && get_current_time() - read_time_start > max_wait_time) {\n                    (*data)[3] &= 0xfffffe5f;\n                    (*data)[5] &= 0xfffffffe;\n                    *(undefined *)((int)data + 0x39) = 0x20;\n                    *(undefined *)((int)data + 0x3a) = 0x20;\n                    *(undefined *)(data + 0xe) = 0;\n                    return 3;\n                }\n            }\n\n            (*data)[3] &= 0xfffffe5f;\n            (*data)[5] &= 0xfffffffe;\n            *(undefined *)((int)data + 0x39) = 0x20;\n            *(undefined *)((int)data + 0x3a) = 0x20;\n            *(undefined *)(data + 0xe) = 0;\n\n            if ((**data & 0x80) == 0x80) {\n                return 3;\n            }\n\n            (*data)[1] = (uint)*(byte *)input_data_ptr;\n            input_data_ptr = (ushort *)((int)input_data_ptr + 1);\n        }\n    }\n\n    do {\n        if ((**data & 0x40) == 0x40) {\n            return_value = 0;\n            *(undefined *)((int)data + 0x39) = 0x20;\n            *(undefined *)(data + 0xe) = 0;\n            return return_value;\n        }\n    } while (max_wait_time == 0 || get_current_time() - read_time_start <= max_wait_time);\n\n    (*data)[3] &= 0xfffffe5f;\n    (*data)[5] &= 0xfffffffe;\n    *(undefined *)((int)data + 0x39) = 0x20;\n    *(undefined *)((int)data + 0x3a) = 0x20;\n    *(undefined *)(data + 0xe) = 0;\n    return_value = 3;\n\n    return return_value;\n}",
            "called": [
                "FUN_080015a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004436",
            "calling": [
                "FUN_08004f3c"
            ],
            "imported": false,
            "current_name": "decode_data_08004436"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "is_first_time_running_08000110",
                "param_1": "has_run_before",
                "*PTR_DAT_08000128": "has_run_before",
                "DAT_0800012c": "previous_run_count",
                "PTR_FUN_08000130": "default_return_value"
            },
            "code": "bool is_first_time_running_08000110(bool **PTR_DAT_08000128) {\n  if (**PTR_DAT_08000128 == false) {\n    if (DAT_0800012c != 0) {\n      return true;\n    }\n    **PTR_DAT_08000128 = true;\n  }\n  return false;\n}",
            "called": [
                "FUN_08009e68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "is_first_time_running_08000110"
        },
        "FUN_08003504": {
            "renaming": {
                "FUN_08003504": "get_value_from_ptr_dat_08003504",
                "PTR_DAT_08003514": "PTR_DAT_VALUE"
            },
            "code": "int get_value_from_ptr_dat_08003504() {\n    return *(int*)PTR_DAT_08003514;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003504",
            "calling": [
                "FUN_080052a0",
                "FUN_08003518",
                "FUN_08003540"
            ],
            "imported": false,
            "current_name": "get_value_from_ptr_dat_08003504"
        },
        "FUN_08000aa4": {
            "renaming": {
                "FUN_08000aa4": "FUNC_08000aa4"
            },
            "code": "\nuint FUNC_08000aa4(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000bde:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000bde;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000aa4",
            "calling": [
                "FUN_08004bd8",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "FUNC_08000aa4"
        },
        "FUN_08004ee8": {
            "renaming": {
                "FUN_08004ee8": "process_data_08004ee8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "length",
                "param_4": "data3",
                "FUNC_08001f6c": "call_function",
                "PTR_DAT_08004f28": "PTR_DATA_ARRAY",
                "PTR_DAT_08004f24": "PTR_DATA_POINTER"
            },
            "code": "void process_data_08004ee8(undefined data1, undefined data2, undefined4 length, undefined2 data3){\n    call_function(PTR_DAT_08004f28, data1, data2, 1, length, data3, *(undefined4 *)PTR_DAT_08004f24);\n    return;\n}",
            "called": [
                "FUN_08001f6c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ee8",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08004ee8"
        },
        "FUN_080094f8": {
            "renaming": {
                "FUN_080094f8": "compare_arrays_080094f8",
                "param_1": "array1",
                "param_2": "array2",
                "iVar1": "difference",
                "puVar2": "ptr1",
                "iVar3": "index",
                "puVar4": "ptr2"
            },
            "code": "int compare_arrays_080094f8(int* array1, int* array2, int length) {\n  int index = *(int *)(array2 + 0x10);\n  int difference = *(int *)(array1 + 0x10) - index;\n  if (difference == 0) {\n    uint *ptr1 = (uint *)(array2 + 0x14 + index * 4);\n    uint *ptr2 = (uint *)(array1 + 0x14) + index;\n    do {\n      ptr2 = ptr2 + -1;\n      ptr1 = ptr1 + -1;\n      if (*ptr2 != *ptr1) {\n        if (*ptr1 <= *ptr2) {\n          return 1;\n        }\n        return -1;\n      }\n    } while ((uint *)(array1 + 0x14) < ptr2);\n  }\n  return difference;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094f8",
            "calling": [
                "FUN_080078c0",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "compare_arrays_080094f8"
        },
        "FUN_08000998": {
            "renaming": {
                "FUN_08000998": "is_input_valid_08000998",
                "in_ZR": "input_char",
                "FUN_08000988": "execute_input_validation"
            },
            "code": "bool is_input_valid_08000998(void)\n{\n  char input_char;\n  execute_input_validation();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08000988"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000998",
            "calling": [
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "is_input_valid_08000998"
        },
        "FUN_08000aa8": {
            "renaming": {
                "FUN_08000aa8": "FUNC_08000aa8"
            },
            "code": "\nuint FUNC_08000aa8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000bde:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000bde;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000aa8",
            "calling": [
                "FUN_080049cc",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "FUNC_08000aa8"
        },
        "FUN_080009ac": {
            "renaming": {
                "FUN_080009ac": "is_end_of_input_080009ac",
                "in_CY": "current_char",
                "FUN_08000988": "call_function_to_get_next_char"
            },
            "code": "bool is_end_of_input_080009ac(void)\n{\n  char current_char;\n  call_function_to_get_next_char();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000988"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009ac",
            "calling": [
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "is_end_of_input_080009ac"
        },
        "FUN_08000fc8": {
            "renaming": {
                "FUN_08000fc8": "swap_pointers_08000fc8",
                "param_1": "pointer1",
                "param_2": "pointer2"
            },
            "code": "void swap_pointers_08000fc8(void* pointer1, void* pointer2)\n{\n   void* temp = pointer1;\n   pointer1 = pointer2;\n   pointer2 = temp;\n   return;\n}",
            "called": [
                "FUN_08000fd0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000fc8",
            "calling": [
                "FUN_08001030"
            ],
            "imported": false,
            "current_name": "swap_pointers_08000fc8"
        },
        "FUN_08001cb8": {
            "renaming": {
                "FUN_08001cb8": "do_nothing_08001cb8"
            },
            "code": "\nvoid do_nothing_08001cb8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001cb8",
            "calling": [
                "FUN_08001ab0"
            ],
            "imported": false,
            "current_name": "do_nothing_08001cb8"
        },
        "FUN_0800438a": {
            "renaming": {
                "FUN_0800438a": "check_parameter_validity_0800438a",
                "param_1": "param_array",
                "uVar1": "is_valid",
                "param_char": "param_char",
                "param_uint": "param_uint"
            },
            "code": "int check_parameter_validity_0800438a(int *param_array)\n{\n    int is_valid = 0;\n    if (param_array == NULL)\n    {\n        is_valid = 1;\n    }\n    else\n    {\n        char *param_char = (char *)(param_array + 0x39);\n        if (*param_char == 0)\n        {\n            *(undefined *)(param_array + 0xe) = 0;\n            do_nothing_08004424(param_array);\n        }\n        *param_char = 0x24;\n        uint *param_uint = (uint *)*param_array;\n        param_uint[3] &= 0xffffdfff;\n        FUN_080046ec(param_array);\n        param_uint[4] &= 0xffffb7ff;\n        param_uint[5] &= 0xffffffd5;\n        param_uint[3] |= 0x2000;\n        param_array[0xf] = 0;\n        *(undefined *)(param_array + 0x39) = 0x20;\n        *(undefined *)(param_array + 0x3a) = 0x20;\n        is_valid = 0;\n    }\n    return is_valid;\n}",
            "called": [
                "FUN_08004424",
                "FUN_080046ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800438a",
            "calling": [
                "FUN_08005598"
            ],
            "imported": false,
            "current_name": "check_parameter_validity_0800438a"
        },
        "FUN_080014f0": {
            "renaming": {
                "FUN_080014f0": "set_flag_and_call_functions_080014f0",
                "*DAT_08001518": "*PTR_FLAG",
                "FUN_08001714": "call_function_with_int_arg",
                "FUN_0800151c": "call_function_with_int_arg",
                "do_nothing_08002d8a": "do_nothing"
            },
            "code": "int set_flag_and_call_functions_080014f0() {\n    int* flag = PTR_FLAG;\n    *flag |= 0x10;\n    call_function_with_int_arg(FUN_A, 3);\n    call_function_with_int_arg(FUN_B, 0xf);\n    do_nothing();\n    return 0;\n}",
            "called": [
                "FUN_08002d8a",
                "FUN_0800151c",
                "FUN_08001714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014f0",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_080014f0"
        },
        "FUN_08003908": {
            "renaming": {
                "FUN_08003908": "set_param_08003908",
                "param_1": "param_array",
                "param_2": "param_size",
                "param_3": "param_type",
                "uVar1": "result",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int set_param_08003908(int *param_array, int param_size, int param_type) {\n  int result;\n  if (*(char *)(param_array + 0xf) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(param_array + 0xf) = 1;\n    *(undefined *)((int)param_array + 0x3d) = 2;\n    switch(param_type) {\n      case 0:\n        set_param_08003908_type_0(*param_array, param_size);\n        *(uint *)(*param_array + 0x18) &= 0xfffffff7;\n        *(uint *)(*param_array + 0x18) |= *(uint *)(param_size + 0x10);\n        break;\n      case 4:\n        set_param_08003908_type_4(*param_array, param_size);\n        *(uint *)(*param_array + 0x18) &= 0xfffffbff;\n        *(uint *)(*param_array + 0x18) |= *(int *)(param_size + 0x10) << 8;\n        break;\n      case 8:\n        set_param_08003908_type_8(*param_array, param_size);\n        *(uint *)(*param_array + 0x1c) &= 0xfffffffb;\n        *(uint *)(*param_array + 0x1c) |= *(uint *)(param_size + 0x10);\n        break;\n      case 0xc:\n        set_param_08003908_type_c(*param_array, param_size);\n        *(uint *)(*param_array + 0x1c) &= 0xfffffbff;\n        *(uint *)(*param_array + 0x1c) |= *(int *)(param_size + 0x10) << 8;\n    }\n    *(undefined *)((int)param_array + 0x3d) = 1;\n    *(undefined *)(param_array + 0xf) = 0;\n    result = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_08003f18",
                "FUN_08003d60",
                "FUN_08003ff8",
                "FUN_08003e38"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003908",
            "calling": [
                "FUN_080053b0"
            ],
            "imported": false,
            "current_name": "set_param_08003908"
        },
        "FUN_08004f60": {
            "renaming": {
                "FUN_08004f60": "initialize_buffer_08004f60",
                "PTR_DAT_08004f74": "buffer",
                "0x40": "BUFFER_SIZE",
                "FUN_08005d68": "memset"
            },
            "code": "void initialize_buffer_08004f60(void)\n{\n  memset(PTR_DAT_08004f74, 0, BUFFER_SIZE);\n  return;\n}",
            "called": [
                "FUN_08005d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "initialize_buffer_08004f60"
        },
        "FUN_080009c0": {
            "renaming": {
                "FUN_080009c0": "is_CY_false_or_ZR_true_080009c0",
                "in_CY": "is_CY_set",
                "in_ZR": "is_ZR_set"
            },
            "code": "bool is_CY_false_or_ZR_true_080009c0(void)\n{\n  bool is_CY_false = !is_CY_set();\n  bool is_ZR_true = is_ZR_set();\n  return is_CY_false || is_ZR_true;\n}",
            "called": [
                "FUN_08000988"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c0",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_080009c0"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "is_valid_input_08001170",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4"
            },
            "code": "int is_valid_input_08001170(uint32_t input_value_1, int input_value_2, uint32_t input_value_3, int input_value_4) {\n    int is_input_valid = 1;\n    int bit_shift = 0x15;\n    uint32_t mask = 0xFFF000;\n    if (((input_value_2 << 1) >> bit_shift != -1) || ((input_value_1 | (input_value_2 << 12)) == 0)) {\n        is_input_valid = 0;\n    }\n    if (((input_value_4 << 1) >> bit_shift != -1) || ((input_value_3 | (input_value_4 << 12)) == 0)) {\n        is_input_valid = 0;\n    }\n    return is_input_valid;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "is_valid_input_08001170"
        },
        "FUN_08003f18": {
            "renaming": {
                "FUN_08003f18": "process_data_08003f18",
                "param_1": "data_index",
                "param_2": "data_array",
                "local_10": "modified_value"
            },
            "code": "void process_data_08003f18(int data_index, uint *data_array)\n{\n  uint uVar1;\n  uint uVar2;\n  uint modified_value;\n  \n  modified_value = *(uint *)(data_index + 0x20) & 0xfffffeff;\n  uVar1 = *data_array;\n  uVar2 = data_array[2] << 8 | *(uint *)(data_index + 0x20) & 0xfffffdff;\n  if (data_index == DAT_08003ff4) {\n    uVar2 = (data_array[3] << 8 | uVar2 & 0xfffff7ff) & 0xfffffbff;\n    modified_value = data_array[6] << 4 | data_array[5] << 4 | modified_value & 0xffffcfff;\n  }\n  *(uint *)(data_index + 4) = modified_value;\n  *(uint *)(data_index + 0x1c) = uVar1 | *(uint *)(data_index + 0x1c) & 0xffffff8c;\n  *(uint *)(data_index + 0x3c) = data_array[1];\n  *(uint *)(data_index + 0x20) = uVar2;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f18",
            "calling": [
                "FUN_08003908"
            ],
            "imported": false,
            "current_name": "process_data_08003f18"
        },
        "FUN_080097cc": {
            "renaming": {
                "FUN_080097cc": "decompress_data_080097cc",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "param_3": "input_buffer_end",
                "iVar1": "uncompressed_size",
                "uVar2": "input_word_1",
                "iVar3": "output_buffer_remaining_size",
                "iVar4": "control_word_remaining_size",
                "uVar5": "input_buffer_remaining_size",
                "uVar6": "input_word_2",
                "puVar7": "current_input_word",
                "puVar8": "previous_input_word",
                "uVar9": "copy_size",
                "input_buffer_remaining": "input_buffer_remaining_size_copy",
                "input_word_1": "input_word_1",
                "input_word_2": "input_word_2",
                "current_input_word": "current_input_word",
                "previous_input_word": "previous_input_word",
                "output_buffer": "output_buffer",
                "current_output": "current_output",
                "input_buffer": "input_buffer",
                "input_buffer_end": "input_buffer_end"
            },
            "code": "int decompress_data_080097cc(uint32_t *output_buffer, int *input_buffer, int *input_buffer_end)\\n\\\n{\\n\\\n    int uncompressed_size = 0;\\n\\\n    uint32_t *current_output = output_buffer;\\n\\\n    int *current_input = input_buffer;\\n\\\n    int *input_buffer_remaining = input_buffer_end;\\n\\\n    uint32_t input_word_1 = 0;\\n\\\n    uint32_t input_word_2 = 0;\\n\\\n    uint32_t *current_input_word = &input_word_1;\\n\\\n    uint32_t *previous_input_word = &input_word_2;\\n\\\n\\\n    if (input_buffer_end[2] != 0) {\\n\\\n        uncompressed_size = *current_input;\\n\\\n        uint32_t input_buffer_remaining_size = input_buffer_end[2];\\n\\\n        uint32_t input_buffer_remaining_size_copy = input_buffer_remaining_size;\\n\\\n        uint32_t max_uncompressed_size = (input_buffer[5] * 3) / 2 + input_buffer[4] - input_buffer[1];\\n\\\n\\\n        if (max_uncompressed_size < uncompressed_size) {\\n\\\n            uncompressed_size = max_uncompressed_size;\\n\\\n        }\\n\\\n\\\n        if ((input_buffer[3] & 0x480) != 0) {\\n\\\n            int output_buffer_remaining_size = uncompressed_size;\\n\\\n            while (output_buffer_remaining_size > 0) {\\n\\\n                if (input_buffer_remaining_size < 8) {\\n\\\n                    if (input_buffer_remaining_size == 0) {\\n\\\n                        break;\\n\\\n                    }\\n\\\n\\\n                    *current_input_word = *current_input_word & ((1 << (input_buffer_remaining_size * 8)) - 1);\\n\\\n                    *current_output = *current_input_word;\\n\\\n                    current_output++;\\n\\\n                    output_buffer_remaining_size -= 4;\\n\\\n                    input_buffer_remaining_size = 0;\\n\\\n                    current_input_word = &input_word_1;\\n\\\n                    previous_input_word = &input_word_2;\\n\\\n                    continue;\\n\\\n                }\\n\\\n\\\n                uint32_t control_word = *current_input_word;\\n\\\n                uint32_t control_word_remaining_size = input_buffer_remaining_size - 4;\\n\\\n                if (control_word_remaining_size < 0) {\\n\\\n                    control_word = control_word & ((1 << (input_buffer_remaining_size * 8)) - 1);\\n\\\n                    control_word_remaining_size = 0;\\n\\\n                }\\n\\\n\\\n                if (control_word & 0x80000000) {\\n\\\n                    uint32_t copy_offset = control_word & 0x7FFFFFFF;\\n\\\n                    copy_offset += *current_input;\\n\\\n                    uint32_t copy_size = (*current_input_word >> 8) & 0xFF;\\n\\\n                    copy_size += 3;\\n\\\n                    uint32_t output_buffer_remaining_size_copy = output_buffer_remaining_size;\\n\\\n                    if (copy_offset > (input_buffer[5] * 3) / 2 + input_buffer[4] || copy_size > output_buffer_remaining_size_copy) {\\n\\\n                        return -1;\\n\\\n                    }\\n\\\n\\\n                    uint32_t *copy_source = &output_buffer[copy_offset / 4];\\n\\\n                    uint32_t *copy_destination = current_output;\\n\\\n                    output_buffer_remaining_size -= copy_size;\\n\\\n                    current_output += copy_size / 4;\\n\\\n                    if (copy_size % 4 != 0) {\\n\\\n                        uint32_t copy_word = *copy_source;\\n\\\n                        uint32_t copy_word_remaining_size = copy_size % 4;\\n\\\n                        while (copy_word_remaining_size > 0) {\\n\\\n                            *copy_destination = copy_word;\\n\\\n                            copy_destination++;\\n\\\n                            copy_word = copy_word >> 8;\\n\\\n                            copy_word_remaining_size--;\\n\\\n                        }\\n\\\n                    }\\n\\\n                    else {\\n\\\n                        while (copy_size > 0) {\\n\\\n                            *copy_destination = *copy_source;\\n\\\n                            copy_destination++;\\n\\\n                            copy_source++;\\n\\\n                            copy_size -= 4;\\n\\\n                        }\\n\\\n                    }\\n\\\n                }\\n\\\n                else {\\n\\\n                    if (control_word & 0x40000000) {\\n\\\n                        uint32_t copy_size = *current_input_word & 0xFF;\\n\\\n                        copy_size += 3;\\n\\\n                        output_buffer_remaining_size -= copy_size;\\n\\\n                        current_output += copy_size / 4;\\n\\\n                        if (copy_size % 4 != 0) {\\n\\\n                            *current_output = *current_input_word >> 8;\\n\\\n                            current_output++;\\n\\\n                        }\\n\\\n                    }\\n\\\n                    else {\\n\\\n                        *current_output = *current_input_word;\\n\\\n                        current_output++;\\n\\\n                        output_buffer_remaining_size -= 4;\\n\\\n                    }\\n\\\n                }\\n\\\n\\\n                input_buffer_remaining_size = control_word_remaining_size;\\n\\\n                uint32_t *temp = current_input_word;\\n\\\n                current_input_word = previous_input_word;\\n\\\n                previous_input_word = temp;\\n\\\n                *current_input_word = *previous_input_word;\\n\\\n                current_input_word = (uint32_t *)((char *)current_input_word + 4);\\n\\\n                previous_input_word = (uint32_t *)((char *)previous_input_word + 4);\\n\\\n            }\\n\\\n        }\\n\\\n        else {\\n\\\n            uint32_t *output_buffer_end = output_buffer + uncompressed_size / 4;\\n\\\n            while (current_output < output_buffer_end) {\\n\\\n                if (input_buffer_remaining_size < 4) {\\n\\\n                    if (input_buffer_remaining_size == 0) {\\n\\\n                        break;\\n\\\n                    }\\n\\\n\\\n                    *current_input_word = *current_input_word & ((1 << (input_buffer_remaining_size * 8)) - 1);\\n\\\n                    *current_output = *current_input_word;\\n\\\n                    current_output++;\\n\\\n                    input_buffer_remaining_size = 0;\\n\\\n                    current_input_word = &input_word_1;\\n\\\n                    previous_input_word = &input_word_2;\\n\\\n                    continue;\\n\\\n                }\\n\\\n\\\n                *current_output = *current_input_word;\\n\\\n                current_output++;\\n\\\n                input_buffer_remaining_size -= 4;\\n\\\n                uint32_t *temp = current_input_word;\\n\\\n                current_input_word = previous_input_word;\\n\\\n                previous_input_word = temp;\\n\\\n                *current_input_word = *previous_input_word;\\n\\\n                current_input_word = (uint32_t *)((char *)current_input_word + 4);\\n\\\n                previous_input_word = (uint32_t *)((char *)previous_input_word + 4);\\n\\\n            }\\n\\\n        }\\n\\\n\\\n        input_buffer_remaining_size_copy -= input_buffer_remaining_size;\\n\\\n        *current_input += input_buffer_remaining_size_copy;\\n\\\n        input_buffer_end[2] = input_buffer_remaining_size;\\n\\\n    }\\n\\\n\\\n    input_buffer_end[1] = 0;\\n\\\n    return 0;\\n\\\n}",
            "called": [
                "FUN_08009a18",
                "FUN_08001084",
                "FUN_08009adc",
                "FUN_080088ec",
                "FUN_08008af8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080097cc",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "decompress_data_080097cc"
        },
        "FUN_08001f6c": {
            "renaming": {
                "FUN_08001f6c": "FUNC_08001f6c"
            },
            "code": "\nundefined4\nFUNC_08001f6c(uint **param_1,undefined2 param_2,undefined2 param_3,undefined2 param_4,uint *param_5,\n            undefined2 param_6,uint param_7)\n\n{\n  int iVar1;\n  uint uVar2;\n  char cVar3;\n  uint uVar4;\n  int iVar5;\n  undefined4 uVar6;\n  uint *puVar7;\n  bool bVar8;\n  \n  iVar1 = FUN_080015a0();\n  uVar2 = DAT_080021e0;\n  if (*(char *)((int)param_1 + 0x3d) == ' ') {\n    do {\n      if ((uVar2 >> 0x10 & 0xff) == 1) {\n        uVar4 = uVar2 & ~(*param_1)[5] & 0xffff;\n        bVar8 = uVar4 == 0;\n        if (bVar8) {\n          uVar4 = 1;\n        }\n        cVar3 = (char)uVar4;\n        if (!bVar8) {\n          cVar3 = '\\0';\n        }\n      }\n      else {\n        uVar4 = uVar2 & ~(*param_1)[6] & 0xffff;\n        bVar8 = uVar4 == 0;\n        if (bVar8) {\n          uVar4 = 1;\n        }\n        cVar3 = (char)uVar4;\n        if (!bVar8) {\n          cVar3 = '\\0';\n        }\n      }\n      if (cVar3 != '\\x01') {\n        iVar5 = 0;\n        goto LAB_08002040;\n      }\n      iVar5 = FUN_080015a0();\n    } while ((uint)(iVar5 - iVar1) < 0x1a);\n    param_1[0xc] = (uint *)0x0;\n    *(undefined *)((int)param_1 + 0x3d) = 0x20;\n    *(undefined *)((int)param_1 + 0x3e) = 0;\n    *(undefined *)(param_1 + 0xf) = 0;\n    iVar5 = 3;\nLAB_08002040:\n    if (iVar5 == 0) {\n      if (*(char *)(param_1 + 0xf) == '\\x01') {\n        uVar6 = 2;\n      }\n      else {\n        *(undefined *)(param_1 + 0xf) = 1;\n        if ((**param_1 & 1) != 1) {\n          **param_1 = **param_1 | 1;\n        }\n        **param_1 = **param_1 & 0xfffff7ff;\n        *(undefined *)((int)param_1 + 0x3d) = 0x22;\n        *(undefined *)((int)param_1 + 0x3e) = 0x40;\n        param_1[0x10] = (uint *)0x0;\n        param_1[9] = param_5;\n        *(undefined2 *)((int)param_1 + 0x2a) = param_6;\n        param_1[0xb] = DAT_080021e4;\n        *(undefined2 *)(param_1 + 10) = *(undefined2 *)((int)param_1 + 0x2a);\n        iVar5 = FUN_080027f4(param_1,param_2,param_3,param_4,param_7,iVar1);\n        if (iVar5 == 0) {\n          if (*(short *)(param_1 + 10) == 0) {\n            **param_1 = **param_1 | 0x200;\n          }\n          else if (*(short *)(param_1 + 10) == 1) {\n            **param_1 = **param_1 & 0xfffffbff;\n            disableIRQinterrupts();\n            **param_1 = **param_1 | 0x200;\n            enableIRQinterrupts();\n          }\n          else if (*(short *)(param_1 + 10) == 2) {\n            **param_1 = **param_1 | 0x800;\n            disableIRQinterrupts();\n            **param_1 = **param_1 & 0xfffffbff;\n            enableIRQinterrupts();\n          }\n          else {\n            **param_1 = **param_1 | 0x400;\n          }\n          while (uVar2 = DAT_080024bc, *(short *)(param_1 + 10) != 0) {\n            if (*(ushort *)(param_1 + 10) < 4) {\n              if (*(short *)(param_1 + 10) == 1) {\n                iVar5 = FUN_08002ca8(param_1,param_7,iVar1);\n                if (iVar5 != 0) {\n                  if (param_1[0x10] == (uint *)0x20) {\n                    return 3;\n                  }\n                  return 1;\n                }\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n              }\n              else if (*(short *)(param_1 + 10) == 2) {\n                do {\n                  if ((uVar2 >> 0x10 & 0xff) == 1) {\n                    uVar4 = uVar2 & ~(*param_1)[5] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar4 = uVar2 & ~(*param_1)[6] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  if (cVar3 != '\\0') {\n                    iVar5 = 0;\n                    goto LAB_080022fa;\n                  }\n                } while ((param_7 == 0xffffffff) ||\n                        ((param_7 != 0 && (iVar5 = FUN_080015a0(), (uint)(iVar5 - iVar1) <= param_7)\n                         )));\n                param_1[0xc] = (uint *)0x0;\n                *(undefined *)((int)param_1 + 0x3d) = 0x20;\n                *(undefined *)((int)param_1 + 0x3e) = 0;\n                *(undefined *)(param_1 + 0xf) = 0;\n                iVar5 = 3;\nLAB_080022fa:\n                if (iVar5 != 0) {\n                  return 3;\n                }\n                disableIRQinterrupts();\n                **param_1 = **param_1 | 0x200;\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n                enableIRQinterrupts();\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n              }\n              else {\n                do {\n                  if ((uVar2 >> 0x10 & 0xff) == 1) {\n                    uVar4 = uVar2 & ~(*param_1)[5] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar4 = uVar2 & ~(*param_1)[6] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  if (cVar3 != '\\0') {\n                    iVar5 = 0;\n                    goto LAB_08002418;\n                  }\n                } while ((param_7 == 0xffffffff) ||\n                        ((param_7 != 0 && (iVar5 = FUN_080015a0(), (uint)(iVar5 - iVar1) <= param_7)\n                         )));\n                param_1[0xc] = (uint *)0x0;\n                *(undefined *)((int)param_1 + 0x3d) = 0x20;\n                *(undefined *)((int)param_1 + 0x3e) = 0;\n                *(undefined *)(param_1 + 0xf) = 0;\n                iVar5 = 3;\nLAB_08002418:\n                if (iVar5 != 0) {\n                  return 3;\n                }\n                **param_1 = **param_1 & 0xfffffbff;\n                disableIRQinterrupts();\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n                uVar2 = DAT_080024bc;\n                do {\n                  if ((uVar2 >> 0x10 & 0xff) == 1) {\n                    uVar4 = uVar2 & ~(*param_1)[5] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  else {\n                    uVar4 = uVar2 & ~(*param_1)[6] & 0xffff;\n                    bVar8 = uVar4 == 0;\n                    if (bVar8) {\n                      uVar4 = 1;\n                    }\n                    cVar3 = (char)uVar4;\n                    if (!bVar8) {\n                      cVar3 = '\\0';\n                    }\n                  }\n                  if (cVar3 != '\\0') {\n                    iVar5 = 0;\n                    goto LAB_0800250a;\n                  }\n                } while ((param_7 == 0xffffffff) ||\n                        ((param_7 != 0 && (iVar5 = FUN_080015a0(), (uint)(iVar5 - iVar1) <= param_7)\n                         )));\n                param_1[0xc] = (uint *)0x0;\n                *(undefined *)((int)param_1 + 0x3d) = 0x20;\n                *(undefined *)((int)param_1 + 0x3e) = 0;\n                *(undefined *)(param_1 + 0xf) = 0;\n                iVar5 = 3;\nLAB_0800250a:\n                if (iVar5 != 0) {\n                  return 3;\n                }\n                **param_1 = **param_1 | 0x200;\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n                enableIRQinterrupts();\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n              }\n            }\n            else {\n              iVar5 = FUN_08002ca8(param_1,param_7,iVar1);\n              if (iVar5 != 0) {\n                if (param_1[0x10] == (uint *)0x20) {\n                  return 3;\n                }\n                return 1;\n              }\n              uVar2 = (*param_1)[4];\n              puVar7 = param_1[9];\n              param_1[9] = (uint *)((int)puVar7 + 1);\n              *(char *)puVar7 = (char)uVar2;\n              *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n              *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n              if (((*param_1)[5] & 4) == 4) {\n                uVar2 = (*param_1)[4];\n                puVar7 = param_1[9];\n                param_1[9] = (uint *)((int)puVar7 + 1);\n                *(char *)puVar7 = (char)uVar2;\n                *(short *)(param_1 + 10) = *(short *)(param_1 + 10) + -1;\n                *(short *)((int)param_1 + 0x2a) = *(short *)((int)param_1 + 0x2a) + -1;\n              }\n            }\n          }\n          *(undefined *)((int)param_1 + 0x3d) = 0x20;\n          *(undefined *)((int)param_1 + 0x3e) = 0;\n          *(undefined *)(param_1 + 0xf) = 0;\n          uVar6 = 0;\n        }\n        else if (param_1[0x10] == (uint *)0x4) {\n          *(undefined *)(param_1 + 0xf) = 0;\n          uVar6 = 1;\n        }\n        else {\n          *(undefined *)(param_1 + 0xf) = 0;\n          uVar6 = 3;\n        }\n      }\n    }\n    else {\n      uVar6 = 2;\n    }\n  }\n  else {\n    uVar6 = 2;\n  }\n  return uVar6;\n}\n\n",
            "called": [
                "FUN_080015a0",
                "FUN_08002ca8",
                "FUN_080027f4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f6c",
            "calling": [
                "FUN_08004ee8"
            ],
            "imported": false,
            "current_name": "FUNC_08001f6c"
        },
        "FUN_08002ad8": {
            "renaming": {
                "FUN_08002ad8": "check_and_update_08002ad8",
                "param_1": "ptr_array",
                "param_2": "value",
                "param_3": "mask",
                "param_4": "param_4",
                "iVar1": "compare_result",
                "cVar2": "is_masked",
                "uVar3": "masked_value",
                "bVar4": "is_set",
                "*param_1": "*ptr_array",
                "(*param_1)[5]": "(*ptr_array)[5]",
                "(*param_1)[6]": "(*ptr_array)[6]",
                "*(undefined *)((int)param_1 + 0x3d)": "*(uint8_t *)((int)ptr_array + 0x3d)",
                "*(undefined *)(param_1 + 0xf)": "*(uint8_t *)(ptr_array + 0xf)"
            },
            "code": "uint8_t check_and_update_08002ad8(uint32_t **ptr_array, uint32_t value, uint32_t mask, int param_4)\n{\n    int compare_result;\n    bool is_masked;\n    uint32_t masked_value;\n    uint32_t *ptr;\n    uint8_t result = 0;\n    \n    do {\n        if (((value >> 0x10) & 0xff) == 1) {\n            masked_value = value & ~(*ptr_array)[5] & 0xffff;\n            is_masked = masked_value != 0;\n            if (is_masked) {\n                masked_value = 1;\n            }\n        }\n        else {\n            masked_value = value & ~(*ptr_array)[6] & 0xffff;\n            is_masked = masked_value != 0;\n            if (is_masked) {\n                masked_value = 1;\n            }\n        }\n        \n        if (!is_masked) {\n            return 0;\n        }\n        \n        if (((*ptr_array)[5] & 0x400) == 0x400) {\n            **ptr_array |= 0x200;\n            (*ptr_array)[5] = 0xfffffbff;\n            ptr_array[0x10] = (uint32_t *)0x4;\n            ptr_array[0xc] = (uint32_t *)0x0;\n            *(uint8_t *)((int)ptr_array + 0x3d) = 0x20;\n            *(uint8_t *)(ptr_array + 0xf) = 0;\n            return 1;\n        }\n        \n        compare_result = (param_4 - FUN_080015a0());\n        if (mask == 0xffffffff || (mask != 0 && (uint)compare_result <= mask)) {\n            ptr_array[0xc] = (uint32_t *)0x0;\n            *(uint8_t *)((int)ptr_array + 0x3d) = 0x20;\n            *(uint8_t *)(ptr_array + 0xf) = 0;\n            result = 3;\n        }\n    } while (mask == 0xffffffff || (mask != 0 && (uint)compare_result <= mask));\n    \n    return result;\n}",
            "called": [
                "FUN_080015a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad8",
            "calling": [
                "FUN_08002640",
                "FUN_080027f4"
            ],
            "imported": false,
            "current_name": "check_and_update_08002ad8"
        },
        "FUN_08000fd0": {
            "renaming": {
                "FUN_08000fd0": "concatenate_two_integers_08000fd0",
                "param_1": "first_integer",
                "param_2": "second_integer",
                "FUN_08000f68": "perform_initialization",
                "CONCAT44": "bitwise_concatenation",
                "unsigned8": "void",
                "undefined4": "unsigned int",
                "unsigned8 long long": "unsigned long long"
            },
            "code": "void concatenate_two_integers_08000fd0(unsigned int first_integer, unsigned int second_integer)\n{\n    perform_initialization();\n    unsigned long long result = ((unsigned long long)second_integer << 32) | first_integer;\n}",
            "called": [
                "FUN_08000f68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000fd0",
            "calling": [
                "FUN_08000ff4",
                "FUN_08000fc8"
            ],
            "imported": false,
            "current_name": "concatenate_two_integers_08000fd0"
        },
        "FUN_08003d60": {
            "renaming": {
                "FUN_08003d60": "update_values_08003d60",
                "param_1": "some_value",
                "param_2": "data_array",
                "uVar1": "first_data",
                "uVar2": "second_data",
                "local_10": "third_data"
            },
            "code": "void update_values_08003d60(int some_value, uint *data_array)\n{\n  uint first_data = *data_array;\n  uint second_data = data_array[2] | *(uint *)(some_value + 0x20) & 0xfffffffd;\n  uint third_data = *(uint *)(some_value + 4);\n  *(uint *)(some_value + 0x20) = *(uint *)(some_value + 0x20) & 0xfffffffe;\n  if (some_value == DAT_08003e34) {\n    second_data = (data_array[3] | second_data & 0xfffffff7) & 0xfffffffb;\n    third_data = data_array[6] | data_array[5] | third_data & 0xfffffcff;\n  }\n  *(uint *)(some_value + 4) = third_data;\n  *(uint *)(some_value + 0x18) = first_data | *(uint *)(some_value + 0x18) & 0xffffff8c;\n  *(uint *)(some_value + 0x34) = data_array[1];\n  *(uint *)(some_value + 0x20) = second_data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003d60",
            "calling": [
                "FUN_08003908"
            ],
            "imported": false,
            "current_name": "update_values_08003d60"
        },
        "FUN_08009e68": {
            "renaming": {
                "FUN_08009e68": "do_nothing_08009e68"
            },
            "code": "\nvoid do_nothing_08009e68(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009e68",
            "calling": [
                "FUN_08000110",
                "FUN_08000134",
                "FUN_08005d20"
            ],
            "imported": false,
            "current_name": "do_nothing_08009e68"
        },
        "FUN_08003518": {
            "renaming": {
                "FUN_08003518": "calculate_shifted_value_08003518",
                "uVar1": "shifted_value",
                "PTR_DAT_0800353c": "pointer_data",
                "DAT_08003538": "data",
                "index": "shift_index"
            },
            "code": "uint calculate_shifted_value_08003518(void)\n{\n  uint shifted_value;\n  uint index = *(uint *)(DAT_08003538 + 4) >> 8 & 7;\n  shifted_value = FUN_08003504() >> PTR_DAT_0800353c[index];\n  return shifted_value;\n}",
            "called": [
                "FUN_08003504"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003518",
            "calling": [
                "FUN_08001ab0",
                "FUN_080046ec"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08003518"
        },
        "FUN_08001618": {
            "renaming": {
                "FUN_08001618": "set_byte_in_memory_08001618",
                "param_1": "address",
                "param_2": "value",
                "DAT_08001664": "memory_start_address",
                "DAT_08001668": "memory_start_address"
            },
            "code": "void set_byte_in_memory_08001618(byte address, uint value) {\n  if (address < 0) {\n    *(char *)((address & 0xf) + DAT_08001664 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + DAT_08001664 + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001618",
            "calling": [
                "FUN_0800172a",
                "FUN_080016d0"
            ],
            "imported": false,
            "current_name": "set_byte_in_memory_08001618"
        },
        "FUN_080091a4": {
            "renaming": {
                "FUN_080091a4": "count_leading_zero_bits_080091a4",
                "param_1": "num",
                "iVar1": "count"
            },
            "code": "int count_leading_zero_bits_080091a4(uint32_t num) {\n  int count = 0;\n  if ((num & 0xffff0000) == 0) {\n    num <<= 0x10;\n    count = 0x10;\n  }\n  if ((num & 0xff000000) == 0) {\n    num <<= 8;\n    count += 8;\n  }\n  if ((num & 0xf0000000) == 0) {\n    num <<= 4;\n    count += 4;\n  }\n  if ((num & 0xc0000000) == 0) {\n    num <<= 2;\n    count += 2;\n  }\n  if ((int32_t)num >= 0) {\n    if ((int32_t)(num << 1) < 0) {\n      return count + 1;\n    }\n    count = 0x20;\n  }\n  return count;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091a4",
            "calling": [
                "FUN_08009630",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "count_leading_zero_bits_080091a4"
        },
        "FUN_08004f78": {
            "renaming": {
                "FUN_08004f78": "process_audio_data_08004f78",
                "uVar1": "result",
                "iVar2": "error",
                "uVar3": "temp",
                "uVar4": "mask",
                "uVar5": "pitch",
                "local_11": "audio_flag"
            },
            "code": "void process_audio_data_08004f78(void)\n{\n    // Initialize\n    initialize(PTR_DAT_080051e0);\n    initialize(PTR_DAT_080051e0, PTR_DAT_080051e4);\n    initialize_audio();\n\n    // Get pitch\n    uint64_t pitch = get_pitch(*(uint32_t *)PTR_DAT_080051e4);\n    set_pitch(PTR_DAT_080051ec, PTR_s_Pitch___f_080051e8, (int)pitch, (int)(pitch >> 0x20));\n\n    // Process audio\n    uint32_t processed_audio = process_audio(PTR_DAT_080051ec);\n\n    // Apply filters\n    uint32_t filtered_audio = apply_filter(PTR_DAT_080051ec, processed_audio);\n    uint32_t filtered_audio_2 = apply_filter(PTR_DAT_080051fc, filtered_audio);\n\n    // Check for errors\n    uint32_t error_check = check_error(PTR_DAT_08005208);\n    if (error_check == 0)\n    {\n        uint32_t error_check_2 = check_error(PTR_DAT_0800520c);\n        if (error_check_2 != 0)\n        {\n            filtered_audio_2 = apply_filter(PTR_DAT_0800520c);\n        }\n    }\n    else\n    {\n        filtered_audio_2 = apply_filter(PTR_DAT_08005208);\n    }\n\n    // Set audio data\n    set_audio_data(PTR_DAT_08005214, filtered_audio_2);\n    bool is_zero = check_zero(filtered_audio_2);\n    set_audio_flag(DAT_0800521c, 2, !is_zero);\n    set_audio_flag(DAT_0800521c, 4, is_zero);\n    set_audio_flag(DAT_0800521c, 8, !is_zero);\n    set_audio_flag(DAT_0800521c, 0x10, is_zero);\n    *(uint *)(*(int *)PTR_DAT_08005220 + 0x34) = (uint)filtered_audio_2;\n    *(uint *)(*(int *)PTR_DAT_08005220 + 0x40) = (uint)filtered_audio_2;\n}\n",
            "called": [
                "FUN_08004ae0",
                "FUN_08000418",
                "FUN_08004f60",
                "FUN_08000aa8",
                "FUN_08001a80",
                "FUN_08000ff4",
                "FUN_08001030",
                "FUN_08000cb8",
                "FUN_08001044",
                "FUN_08000aa4",
                "FUN_08005dfc",
                "FUN_08004bd8",
                "FUN_08000c10",
                "FUN_08000c08",
                "FUN_08005e40",
                "FUN_08004f3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f78",
            "calling": [
                "FUN_080036f8",
                "FUN_080017b4"
            ],
            "imported": false,
            "current_name": "process_audio_data_08004f78"
        },
        "FUN_080015a0": {
            "renaming": {
                "FUN_080015a0": "get_value_from_pointer_080015a0",
                "undefined4": "int",
                "PTR_DAT_080015b0": "value_pointer"
            },
            "code": "int get_value_from_pointer_080015a0() {\n    int* PTR_DAT_080015b0 = (int*)PTR_DAT_080015b0;\n    return *PTR_DAT_080015b0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015a0",
            "calling": [
                "FUN_08002d98",
                "FUN_08002640",
                "FUN_08004436",
                "FUN_08001ccc",
                "FUN_08002c2e",
                "FUN_08001f6c",
                "FUN_080027f4",
                "FUN_08002ca8",
                "FUN_08002ad8",
                "FUN_08004f2c",
                "FUN_08003260",
                "FUN_08002bb4"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_080015a0"
        },
        "FUN_08002d98": {
            "renaming": {
                "FUN_08002d98": "FUNC_08002d98"
            },
            "code": "\nundefined4 FUNC_08002d98(uint *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  bool bVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08002ffc[1] & 0xc) == 4) ||\n       (((DAT_08002ffc[1] & 0xc) == 8 && ((DAT_08002ffc[1] & 0x10000) == 0x10000)))) {\n      if (((*DAT_08002ffc & 0x20000) != 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[1] == 0x10000) {\n        *DAT_08002ffc = *DAT_08002ffc | 0x10000;\n      }\n      else if (param_1[1] == 0) {\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffeffff;\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffbffff;\n      }\n      else if (param_1[1] == 0x50000) {\n        *DAT_08002ffc = *DAT_08002ffc | 0x40000;\n        *DAT_08002ffc = *DAT_08002ffc | 0x10000;\n      }\n      else {\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffeffff;\n        *DAT_08002ffc = *DAT_08002ffc & 0xfffbffff;\n      }\n      if (param_1[1] == 0) {\n        iVar1 = FUN_080015a0();\n        while ((*DAT_08002ffc & 0x20000) != 0) {\n          iVar2 = FUN_080015a0();\n          if (100 < (uint)(iVar2 - iVar1)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_080015a0();\n        while ((*DAT_08002ffc & 0x20000) == 0) {\n          iVar2 = FUN_080015a0();\n          if (100 < (uint)(iVar2 - iVar1)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08002ffc[1] & 0xc) == 0) ||\n       (((DAT_08002ffc[1] & 0xc) == 8 && ((DAT_08002ffc[1] & 0x10000) == 0)))) {\n      if (((*DAT_08002ffc & 2) != 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n      *DAT_08002ffc = param_1[5] << 3 | *DAT_08002ffc & 0xffffff07;\n    }\n    else if (param_1[4] == 0) {\n      *DAT_08003000 = 0;\n      iVar1 = FUN_080015a0();\n      while ((*DAT_08002ffc & 2) != 0) {\n        iVar2 = FUN_080015a0();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08003000 = 1;\n      iVar1 = FUN_080015a0();\n      while ((*DAT_08002ffc & 2) == 0) {\n        iVar2 = FUN_080015a0();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n      *DAT_08002ffc = param_1[5] << 3 | *DAT_08002ffc & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[6] == 0) {\n      *DAT_08003004 = 0;\n      iVar1 = FUN_080015a0();\n      while ((DAT_08003254[9] & 2) != 0) {\n        iVar2 = FUN_080015a0();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08003004 = 1;\n      iVar1 = FUN_080015a0();\n      while ((DAT_08002ffc[9] & 2) == 0) {\n        iVar2 = FUN_080015a0();\n        if (2 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n      FUN_08003568(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    bVar4 = (DAT_08003254[7] & 0x10000000) == 0;\n    if (bVar4) {\n      DAT_08003254[7] = DAT_08003254[7] | 0x10000000;\n    }\n    if ((*DAT_08003258 & 0x100) == 0) {\n      *DAT_08003258 = *DAT_08003258 | 0x100;\n      iVar1 = FUN_080015a0();\n      while ((*DAT_08003258 & 0x100) == 0) {\n        iVar2 = FUN_080015a0();\n        if (100 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    if (param_1[3] == 1) {\n      DAT_08003254[8] = DAT_08003254[8] | 1;\n    }\n    else if (param_1[3] == 0) {\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffe;\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffb;\n    }\n    else if (param_1[3] == 5) {\n      DAT_08003254[8] = DAT_08003254[8] | 4;\n      DAT_08003254[8] = DAT_08003254[8] | 1;\n    }\n    else {\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffe;\n      DAT_08003254[8] = DAT_08003254[8] & 0xfffffffb;\n    }\n    if (param_1[3] == 0) {\n      iVar1 = FUN_080015a0();\n      while ((DAT_08003254[8] & 2) != 0) {\n        iVar2 = FUN_080015a0();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_080015a0();\n      while ((DAT_08003254[8] & 2) == 0) {\n        iVar2 = FUN_080015a0();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    if (bVar4) {\n      DAT_08003254[7] = DAT_08003254[7] & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\nLAB_0800324a:\n    uVar3 = 0;\n  }\n  else if ((DAT_08003254[1] & 0xc) == 8) {\n    uVar3 = 1;\n  }\n  else if (param_1[7] == 2) {\n    *DAT_0800325c = 0;\n    iVar1 = FUN_080015a0();\n    do {\n      if ((*DAT_08003254 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          DAT_08003254[1] = param_1[2] | DAT_08003254[1] & 0xfffdffff;\n        }\n        DAT_08003254[1] = param_1[9] | param_1[8] | DAT_08003254[1] & 0xffc2ffff;\n        *DAT_0800325c = 1;\n        iVar1 = FUN_080015a0();\n        while ((*DAT_08003254 & 0x2000000) == 0) {\n          iVar2 = FUN_080015a0();\n          if (2 < (uint)(iVar2 - iVar1)) {\n            return 3;\n          }\n        }\n        goto LAB_0800324a;\n      }\n      iVar2 = FUN_080015a0();\n    } while ((uint)(iVar2 - iVar1) < 3);\n    uVar3 = 3;\n  }\n  else {\n    *DAT_0800325c = 0;\n    iVar1 = FUN_080015a0();\n    do {\n      if ((*DAT_08003254 & 0x2000000) == 0) goto LAB_0800324a;\n      iVar2 = FUN_080015a0();\n    } while ((uint)(iVar2 - iVar1) < 3);\n    uVar3 = 3;\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_08003568",
                "FUN_080015a0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08002d98",
            "calling": [
                "FUN_080052a0"
            ],
            "imported": false,
            "current_name": "FUNC_08002d98"
        },
        "FUN_0800172a": {
            "renaming": {
                "FUN_0800172a": "print_result_to_stdout_0800172a",
                "param_1": "output_char",
                "param_2": "input_param_1",
                "param_3": "input_param_2",
                "uVar1": "result",
                "FUN_080015fc": "calculate_result",
                "FUN_0800166c": "modify_result",
                "FUN_08001618": "write_to_stdout"
            },
            "code": "void print_result_to_stdout_0800172a(char output_char, int input_param_1, int input_param_2)\n{\n  int result = calculate_result(input_param_1);\n  result = modify_result(result, input_param_1, input_param_2);\n  write_to_stdout((int)output_char, result);\n  return;\n}",
            "called": [
                "FUN_08001618",
                "FUN_080015fc",
                "FUN_0800166c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800172a",
            "calling": [
                "FUN_080052a0",
                "FUN_0800151c"
            ],
            "imported": false,
            "current_name": "print_result_to_stdout_0800172a"
        },
        "FUN_080009d4": {
            "renaming": {
                "FUN_080009d4": "should_run_080009d4",
                "in_CY": "PTR_CY",
                "in_ZR": "DAT_ZR",
                "!": "not",
                "||": "or",
                "(bool)": "cast_to_bool",
                "is_CY_zero": "is_CY_zero",
                "is_ZR_nonzero": "is_ZR_nonzero",
                "FUN_08000978": "run_some_function"
            },
            "code": "bool should_run_080009d4(void)\n{\n  bool is_CY_zero;\n  bool is_ZR_nonzero;\n  \n  run_some_function();\n  \n  is_CY_zero = (bool)in_CY;\n  is_ZR_nonzero = (bool)in_ZR;\n  \n  return !is_CY_zero || is_ZR_nonzero;\n}",
            "called": [
                "FUN_08000978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009d4",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "should_run_080009d4"
        },
        "FUN_08002d8a": {
            "renaming": {
                "FUN_08002d8a": "do_nothing_08002d8a"
            },
            "code": "\nvoid do_nothing_08002d8a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d8a",
            "calling": [
                "FUN_080014f0"
            ],
            "imported": false,
            "current_name": "do_nothing_08002d8a"
        },
        "FUN_08005780": {
            "renaming": {
                "FUN_08005780": "set_flags_and_values_08005780",
                "DAT_080057dc": "data_ptr_1",
                "DAT_080057e0": "data_ptr_3",
                "data_ptr_1": "data_ptr_1",
                "data_ptr_2": "data_ptr_2",
                "data_ptr_3": "data_ptr_3",
                "data_ptr_4": "data_ptr_4"
            },
            "code": "void set_flags_and_values_08005780(void)\n{\n  // Set bit 0 to 1\n  *DAT_080057dc = *DAT_080057dc | 0x1;\n  \n  // Set bits 16-23 of data_ptr_2 to bits 16-23 of DAT_080057e0\n  data_ptr_2[1] = DAT_080057e0[1] & data_ptr_2[1];\n  \n  // Clear bits 16 and 17 of DAT_080057dc\n  *DAT_080057dc = *DAT_080057dc & 0xfef6ffff;\n  \n  // Clear bits 18 and 19 of DAT_080057dc\n  *DAT_080057dc = *DAT_080057dc & 0xfffbffff;\n  \n  // Clear bits 20-23 of data_ptr_2\n  data_ptr_2[1] = data_ptr_2[1] & 0xff80ffff;\n  \n  // Set bits 16-23 of DAT_080057e0 to 0x9f0000\n  DAT_080057e0[2] = 0x9f0000;\n  \n  // Set bits 31-4 of data_ptr_4 to 0x8000000\n  *(unsigned int *)(data_ptr_4 + 8) = 0x8000000;\n  \n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005780",
            "calling": [
                "FUN_080057e8"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08005780"
        },
        "FUN_08009744": {
            "renaming": {
                "FUN_08009744": "check_and_set_value_08009744",
                "param_1": "result",
                "param_2": "input_value",
                "puVar1": "data_pointer",
                "iVar2": "function_result"
            },
            "code": "void check_and_set_value_08009744(int *result, undefined4 input_value){\n  undefined *data_pointer;\n  int function_result;\n\n  data_pointer = PTR_DAT_08009764;\n  *(undefined4 *)PTR_DAT_08009764 = 0;\n  function_result = check_input(input_value);\n  if ((function_result == -1) && (*(int *)data_pointer != 0)) {\n    *result = *(int *)data_pointer;\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08005728"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009744",
            "calling": [
                "FUN_08008af8",
                "FUN_0800884c"
            ],
            "imported": false,
            "current_name": "check_and_set_value_08009744"
        },
        "FUN_08003640": {
            "renaming": {
                "FUN_08003640": "check_parameter_validity_08003640",
                "*param_1": "parameter_array",
                "uVar1": "result",
                "*(char *)((int)param_1 + 0x3d)": "parameter_array[15]",
                "*(undefined *)(param_1 + 0xf)": "parameter_array[15] = 0",
                "do_nothing_08003696": "do_nothing_08003696",
                "*(undefined *)((int)param_1 + 0x3d)": "parameter_array[15] = 2",
                "FUN_08003c94": "FUN_08003c94"
            },
            "code": "int check_parameter_validity_08003640(int* parameter_array)\n{\n    int result = 0;\n\n    if (parameter_array == NULL)\n    {\n        result = 1;\n    }\n    else\n    {\n        int is_valid = parameter_array[15] == 0;\n        if (is_valid)\n        {\n            parameter_array[15] = 0;\n            do_nothing_08003696(parameter_array);\n        }\n        parameter_array[15] = 2;\n        FUN_08003c94(parameter_array[0], &parameter_array[1]);\n        parameter_array[15] = 1;\n    }\n    return result;\n}",
            "called": [
                "FUN_08003696",
                "FUN_08003c94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003640",
            "calling": [
                "FUN_080053b0"
            ],
            "imported": false,
            "current_name": "check_parameter_validity_08003640"
        },
        "FUN_08009980": {
            "renaming": {
                "FUN_08009980": "allocate_memory_and_initialize_to_zero_08009980",
                "param_1": "start_address",
                "param_2": "num_rows",
                "param_3": "num_cols",
                "puVar1": "allocated_memory",
                "uVar2": "size_in_words",
                "puVar3": "num_words_to_initialize",
                "FUNC_08008af8": "allocate_memory",
                "FUN_08005d68": "initialize_memory"
            },
            "code": "undefined4* allocate_memory_and_initialize_to_zero_08009980(undefined4 start_address, int num_rows, int num_cols) {\n    undefined4* allocated_memory;\n    uint32_t size_in_bytes = num_rows * num_cols * sizeof(undefined4);\n    allocated_memory = (undefined4*)allocate_memory(start_address, size_in_bytes);\n    if (allocated_memory == NULL) {\n        return NULL;\n    }\n    uint32_t size_in_words = (allocated_memory[-1] & 0xFFFFFFFC) - 4;\n    if (size_in_words >= 0x25) {\n        initialize_memory(allocated_memory, 0);\n        return allocated_memory;\n    }\n    uint32_t num_words_to_initialize = (size_in_words > 0x13) ? 2 : 0;\n    num_words_to_initialize = (size_in_words > 0x1B) ? 4 : num_words_to_initialize;\n    num_words_to_initialize = (size_in_words == 0x24) ? 6 : num_words_to_initialize;\n    initialize_memory(allocated_memory, 0, num_words_to_initialize);\n    return allocated_memory;\n}",
            "called": [
                "FUN_08005d68",
                "FUN_08008af8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009980",
            "calling": [
                "FUN_080090c0"
            ],
            "imported": false,
            "current_name": "allocate_memory_and_initialize_to_zero_08009980"
        },
        "FUN_08005e9c": {
            "renaming": {
                "FUN_08005e9c": "FUNC_08005e9c"
            },
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte * FUNC_08005e9c(undefined4 *param_1,int *param_2,int *param_3,int **param_4)\n\n{\n  byte bVar1;\n  int **ppiVar2;\n  int iVar3;\n  uint uVar4;\n  byte *pbVar5;\n  char cVar6;\n  byte bVar7;\n  int iVar8;\n  int *piVar9;\n  undefined4 uVar10;\n  int **ppiVar11;\n  undefined uVar12;\n  ushort uVar13;\n  int **ppiVar14;\n  byte **ppbVar15;\n  int *piVar16;\n  int **ppiVar17;\n  char *pcVar18;\n  uint uVar19;\n  undefined *puVar20;\n  int *piVar21;\n  int *piVar22;\n  int *piVar23;\n  int *piVar24;\n  int *piVar25;\n  byte *pbVar26;\n  int *piVar27;\n  int *piVar28;\n  undefined4 *puVar29;\n  byte *pbVar30;\n  bool bVar31;\n  longlong lVar32;\n  undefined8 uVar33;\n  undefined8 uVar34;\n  undefined4 local_188;\n  int *piStack_184;\n  int **local_180;\n  undefined *puStack_17c;\n  int **local_178;\n  undefined4 *local_16c;\n  int *local_168;\n  byte *local_164;\n  int *local_160;\n  int *local_15c;\n  int **local_158;\n  int **local_154;\n  undefined8 local_150;\n  int *local_148;\n  int *local_144;\n  int *local_140;\n  int **local_13c;\n  int *local_138;\n  int *local_134;\n  int *local_130;\n  uint local_12c;\n  undefined4 local_128;\n  undefined4 local_124;\n  undefined4 local_120;\n  undefined *local_11c;\n  int *local_118;\n  int *local_114;\n  int *local_110;\n  int *local_10c;\n  byte *local_108;\n  int *local_104;\n  int *local_100;\n  int *local_fc;\n  byte local_f5;\n  undefined2 local_f4;\n  int *local_f0;\n  undefined auStack_ec [4];\n  char local_e8;\n  undefined local_e7;\n  char local_e6 [6];\n  int *local_e0;\n  byte abStack_dc [4];\n  int **local_d8;\n  int *local_d4;\n  int *local_d0;\n  int *local_cc [16];\n  undefined local_8c;\n  byte bStack_2a;\n  undefined local_29;\n  int iStack_28;\n  \n  local_16c = param_1;\n  local_160 = param_2;\n  local_154 = param_4;\n  ppiVar2 = (int **)FUN_08008ad4();\n  local_114 = *ppiVar2;\n  local_118 = (int *)FUN_08005e40(local_114);\n  if (((int)((uint)*(ushort *)(param_2 + 3) << 0x18) < 0) && (param_2[4] == 0)) {\n    iVar3 = FUNC_08008af8(local_16c,0x40);\n    *local_160 = iVar3;\n    local_160[4] = iVar3;\n    if (iVar3 == 0) {\n      *local_16c = 0xc;\n      return (byte *)0xffffffff;\n    }\n    local_160[5] = 0x40;\n  }\n  local_128 = 0;\n  local_138 = (int *)0x0;\n  local_12c = 0;\n  local_d4 = (int *)0x0;\n  local_d0 = (int *)0x0;\n  local_11c = (undefined *)0x0;\n  local_10c = (int *)0x0;\n  local_108 = (byte *)0x0;\n  local_104 = (int *)0x0;\n  local_110 = (int *)0x0;\n  local_164 = (byte *)0x0;\n  local_124 = 0;\n  local_120 = 0;\n  ppiVar2 = local_cc;\n  bVar1 = *(byte *)param_3;\n  local_d8 = ppiVar2;\njoined_r0x08005ef2:\n  if (bVar1 != 0) {\n    piVar28 = param_3;\n    if (bVar1 != 0x25) {\n      do {\n        piVar28 = (int *)((int)piVar28 + 1);\n        if (*(byte *)piVar28 == 0) break;\n      } while (*(byte *)piVar28 != 0x25);\n      piVar27 = (int *)((int)piVar28 - (int)param_3);\n      if (piVar27 != (int *)0x0) {\n        local_d4 = (int *)((int)local_d4 + 1);\n        local_d0 = (int *)((int)local_d0 + (int)piVar27);\n        *ppiVar2 = param_3;\n        *(int **)((int)ppiVar2 + 4) = piVar27;\n        if ((int)local_d4 < 8) {\n          ppiVar2 = (int **)((int)ppiVar2 + 8);\n        }\n        else {\n          iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n          if (iVar3 != 0) goto LAB_0800604a;\n          ppiVar2 = local_cc;\n        }\n        local_164 = local_164 + (int)piVar27;\n      }\n      if (*(byte *)piVar28 == 0) goto LAB_08006216;\n    }\n    piVar27 = (int *)0xffffffff;\n    piVar25 = (int *)0x0;\n    piVar24 = (int *)(uint)*(byte *)((int)piVar28 + 1);\n    local_15c = (int *)0x0;\n    local_f5 = 0;\n    piVar28 = (int *)((int)piVar28 + 1);\nLAB_08005f4a:\n    puVar29 = local_16c;\n    piVar28 = (int *)((int)piVar28 + 1);\nLAB_08005f4e:\n    switch(piVar24) {\n    case (int *)0x20:\n      goto switchD_08005f58_caseD_20;\n    default:\n      if (piVar24 == (int *)0x0) goto LAB_08006216;\n      piVar16 = (int *)0x0;\n      local_168 = (int *)0x1;\n      local_f5 = 0;\n      local_148 = (int *)0x0;\n      local_13c = (int **)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      local_158 = (int **)0x1;\n      piVar23 = (int *)&local_8c;\n      piVar22 = piVar16;\n      local_8c = (char)piVar24;\n      goto LAB_08006298;\n    case (int *)0x23:\n      piVar25 = (int *)((uint)piVar25 | 1);\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case (int *)0x27:\n      iVar3 = FUN_08008ad4(local_16c);\n      local_110 = *(int **)(iVar3 + 4);\n      piVar24 = (int *)FUN_08005e40(local_110);\n      local_104 = piVar24;\n      iVar3 = FUN_08008ad4(puVar29);\n      local_108 = *(byte **)(iVar3 + 8);\n      if (piVar24 == (int *)0x0) goto switchD_08005f58_caseD_74;\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      if ((local_108 != (byte *)0x0) && (*local_108 != 0)) {\n        piVar25 = (int *)((uint)piVar25 | 0x400);\n      }\n      goto LAB_08005f4a;\n    case (int *)0x2a:\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      local_15c = *local_154;\n      local_154 = local_154 + 1;\n      if ((int)local_15c < 0) {\n        local_15c = (int *)-(int)local_15c;\n        goto LAB_08006602;\n      }\n      goto LAB_08005f4a;\n    case (int *)0x2b:\n      local_f5 = 0x2b;\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case (int *)0x2d:\n      piVar24 = (int *)(uint)*(byte *)piVar28;\nLAB_08006602:\n      piVar25 = (int *)((uint)piVar25 | 4);\n      goto LAB_08005f4a;\n    case (int *)0x2e:\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      if (piVar24 == (int *)0x2a) {\n        piVar24 = (int *)(uint)*(byte *)((int)piVar28 + 1);\n        piVar27 = (int *)((uint)*local_154 | (int)*local_154 >> 0x1f);\n        local_154 = local_154 + 1;\n        piVar28 = (int *)((int)piVar28 + 1);\n        goto LAB_08005f4a;\n      }\n      piVar27 = (int *)0x0;\n      piVar28 = (int *)((int)piVar28 + 1);\n      while (piVar24 + -0xc < (int *)0xa) {\n        piVar27 = (int *)((int)(piVar24 + -0xc) + (int)piVar27 * 10);\n        piVar24 = (int *)(uint)*(byte *)piVar28;\n        piVar28 = (int *)((int)piVar28 + 1);\n      }\n      goto LAB_08005f4e;\n    case (int *)0x30:\n      piVar25 = (int *)((uint)piVar25 | 0x80);\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case (int *)0x31:\n    case (int *)0x32:\n    case (int *)0x33:\n    case (int *)0x34:\n    case (int *)0x35:\n    case (int *)0x36:\n    case (int *)0x37:\n    case (int *)0x38:\n    case (int *)0x39:\n      goto switchD_08005f58_caseD_31;\n    case (int *)0x41:\n    case (int *)0x45:\n    case (int *)0x46:\n    case (int *)0x47:\n    case (int *)0x61:\n    case (int *)0x65:\n    case (int *)0x66:\n    case (int *)0x67:\n      puVar29 = (undefined4 *)((int)local_154 + 7U & 0xfffffff8);\n      uVar10 = *puVar29;\n      local_12c = puVar29[1];\n      local_168 = (int *)(local_12c & 0x7fffffff);\n      local_154 = (int **)(puVar29 + 2);\n      local_128 = uVar10;\n      iVar3 = FUN_08001170(uVar10,local_168,0xffffffff,DAT_08006724);\n      if ((iVar3 == 0) &&\n         (iVar3 = FUN_080009c0(uVar10,local_168,0xffffffff,DAT_08006724), iVar3 == 0)) {\n        iVar3 = FUN_080009ac(local_128,local_12c,local_124,local_120);\n        piVar23 = (int *)PTR_DAT_08006728;\n        piVar27 = (int *)PTR_DAT_0800672c;\n        if (iVar3 == 0) {\n          piVar16 = (int *)(uint)local_f5;\n        }\n        else {\n          piVar16 = (int *)0x2d;\n          local_f5 = 0x2d;\n        }\nLAB_08006524:\n        local_148 = (int *)0x0;\n        local_168 = (int *)0x3;\n        if (piVar24 < (int *)0x48) {\n          piVar23 = piVar27;\n        }\n        local_134 = (int *)0x0;\n        local_130 = (int *)0x0;\n        piVar25 = (int *)((uint)piVar25 & 0xffffff7f);\n        local_158 = (int **)0x3;\n        local_13c = (int **)0x0;\n        piVar22 = (int *)0x0;\n        goto LAB_08006538;\n      }\n      piVar22 = (int *)FUN_08001170(local_128,local_12c,local_128,local_12c);\n      if (piVar22 != (int *)0x0) {\n        piVar23 = (int *)PTR_DAT_08007898;\n        piVar27 = (int *)PTR_DAT_0800789c;\n        if ((int)local_12c < 0) {\n          piVar16 = (int *)0x2d;\n          local_f5 = 0x2d;\n        }\n        else {\n          piVar16 = (int *)(uint)local_f5;\n        }\n        goto LAB_08006524;\n      }\n      piVar16 = piVar27;\n      if (piVar24 == (int *)0x61) {\n        uVar12 = 0x78;\nLAB_08007224:\n        local_f4 = CONCAT11(uVar12,0x30);\n        if ((int)piVar27 < 100) {\n          local_140 = (int *)((uint)piVar25 | 0x102);\n          local_148 = (int *)0x0;\n          param_3 = (int *)&local_8c;\n          piVar25 = (int *)((uint)piVar25 | 2);\n        }\n        else {\n          param_3 = (int *)FUNC_08008af8(local_16c,(byte *)((int)piVar27 + 1));\n          if (param_3 == (int *)0x0) {\n            uVar13 = *(ushort *)(local_160 + 3) | 0x40;\n            *(ushort *)(local_160 + 3) = uVar13;\n            goto LAB_0800604e;\n          }\n          local_140 = (int *)((uint)piVar25 | 0x102);\n          piVar25 = (int *)((uint)piVar25 | 2);\n          local_148 = param_3;\n        }\nLAB_0800724a:\n        piVar27 = piVar16;\n        if ((int)local_12c < 0) {\nLAB_08007414:\n          local_144 = (int *)0x2d;\n          uVar19 = local_12c + 0x80000000;\n          piVar16 = piVar27;\n        }\n        else {\n          local_144 = (int *)0x0;\n          uVar19 = local_12c;\n        }\n        local_168 = (int *)((uint)piVar24 & 0xffffffdf);\n        local_158 = (int **)local_128;\n        if (piVar24 == (int *)0x61) {\n          uVar33 = FUN_080096e0(local_128,uVar19,&local_f0);\n          local_150 = FUNC_080004c8((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),0,0x3fc00000);\n          iVar3 = FUN_08000998((int)local_150,(int)((ulonglong)local_150 >> 0x20),local_124,\n                               local_120);\n          if (iVar3 != 0) {\n            local_f0 = (int *)0x1;\n          }\n          local_158 = (int **)PTR_s_0123456789abcdef_08007888;\n          local_13c = ppiVar2;\n          local_138 = piVar28;\n          local_134 = piVar24;\n          local_130 = piVar16;\n          local_100 = piVar25;\n          local_fc = param_3;\n          puVar20 = PTR_s_0123456789abcdef_08007888;\n          uVar33 = local_150;\n          goto LAB_080072ba;\n        }\n        piVar27 = piVar16;\n        if (piVar24 == (int *)0x41) {\n          uVar33 = FUN_080096e0(local_128,uVar19,&local_f0);\n          local_150 = FUNC_080004c8((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),0,0x3fc00000);\n          iVar3 = FUN_08000998((int)local_150,(int)((ulonglong)local_150 >> 0x20),local_124,\n                               local_120);\n          if (iVar3 == 0) {\n            local_158 = (int **)PTR_s_0123456789ABCDEF_0800739c;\n            local_13c = ppiVar2;\n            local_138 = piVar28;\n            local_134 = piVar24;\n            local_130 = piVar16;\n            local_100 = piVar25;\n            local_fc = param_3;\n            puVar20 = PTR_s_0123456789ABCDEF_0800739c;\n            uVar33 = local_150;\n          }\n          else {\n            local_f0 = (int *)0x1;\n            local_158 = (int **)PTR_s_0123456789ABCDEF_08007894;\n            local_13c = ppiVar2;\n            local_138 = piVar28;\n            local_134 = piVar24;\n            local_130 = piVar16;\n            local_100 = piVar25;\n            local_fc = param_3;\n            puVar20 = PTR_s_0123456789ABCDEF_08007894;\n            uVar33 = local_150;\n          }\n          goto LAB_080072ba;\n        }\n      }\n      else {\n        if (piVar24 == (int *)0x41) {\n          uVar12 = 0x58;\n          goto LAB_08007224;\n        }\n        local_140 = (int *)((uint)piVar25 | 0x100);\n        local_148 = piVar22;\n        if (piVar27 == (int *)0xffffffff) {\n          piVar16 = (int *)0x6;\n          goto LAB_0800724a;\n        }\n        if (((uint)piVar24 & 0xffffffdf) == 0x47) {\n          if (piVar27 == (int *)0x0) {\n            piVar16 = (int *)0x1;\n            local_148 = piVar27;\n          }\n          goto LAB_0800724a;\n        }\n        uVar19 = local_12c;\n        local_144 = piVar22;\n        if ((int)local_12c < 0) goto LAB_08007414;\n      }\n      local_168 = (int *)((uint)piVar24 & 0xffffffdf);\n      piStack_184 = piVar27;\n      local_158 = (int **)local_128;\n      if (piVar24 == (int *)0x66) {\n        local_178 = &local_e0;\n        local_188 = 3;\n        puStack_17c = auStack_ec;\n        local_180 = &local_f0;\n        piVar23 = (int *)FUNC_080079e8(local_16c,local_180,local_128,uVar19);\n        piVar22 = (int *)((int)piVar23 + (int)piVar27);\n        local_150._0_4_ = piVar27;\nLAB_0800764c:\n        if ((*(byte *)piVar23 == 0x30) &&\n           (iVar3 = FUN_08000998(local_158,uVar19,local_124,local_120), iVar3 == 0)) {\n          local_f0 = (int *)(1 - (int)(int *)local_150);\n        }\n        piVar22 = (int *)((int)piVar22 + (int)local_f0);\n      }\n      else if (piVar24 == (int *)0x46) {\n        local_178 = &local_e0;\n        local_188 = 3;\n        puStack_17c = auStack_ec;\n        local_180 = &local_f0;\n        piVar23 = (int *)FUNC_080079e8(local_16c,local_180,local_128,uVar19);\n        local_150._0_4_ = piVar27;\nLAB_08007760:\n        piVar22 = (int *)((int)piVar23 + (int)(int *)local_150);\n        if (piVar24 == (int *)0x46) goto LAB_0800764c;\n      }\n      else {\n        local_178 = &local_e0;\n        local_150._0_4_ = piVar27;\n        if (local_168 == (int *)0x45) {\n          local_150._0_4_ = (int *)((int)piVar27 + 1);\n        }\n        local_188 = 2;\n        piStack_184 = (int *)local_150;\n        local_180 = &local_f0;\n        puStack_17c = auStack_ec;\n        piVar23 = (int *)FUNC_080079e8(local_16c,local_180,local_128,uVar19);\n        piVar16 = local_e0;\n        if (piVar24 == (int *)0x67) {\n          if (((uint)piVar25 & 1) == 0) goto LAB_08006ca6;\n        }\n        else if (piVar24 == (int *)0x47) {\n          if (((uint)piVar25 & 1) != 0) goto LAB_08007760;\n          goto LAB_08006ca6;\n        }\n        piVar22 = (int *)((int)(int *)local_150 + (int)piVar23);\n      }\n      iVar3 = FUN_08000998(local_158,uVar19,local_124,local_120);\n      piVar16 = piVar22;\n      if (iVar3 == 0) {\n        for (; piVar16 = local_e0, local_e0 < piVar22; local_e0 = (int *)((int)local_e0 + 1)) {\n          *(byte *)local_e0 = 0x30;\n        }\n      }\nLAB_08006ca6:\n      local_138 = (int *)((int)piVar16 - (int)piVar23);\n      goto LAB_08006cb0;\n    case (int *)0x43:\n    case (int *)0x63:\n      piVar16 = (int *)0x0;\n      piVar27 = *local_154;\n      local_f5 = 0;\n      local_148 = (int *)0x0;\n      piVar22 = (int *)0x0;\n      local_13c = (int **)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      local_154 = local_154 + 1;\n      local_168 = (int *)0x1;\n      local_158 = (int **)0x1;\n      local_8c = SUB41(piVar27,0);\n      piVar23 = (int *)&local_8c;\n      goto LAB_08006298;\n    case (int *)0x44:\n      piVar25 = (int *)((uint)piVar25 | 0x10);\n      if (-1 < (int)piVar25 << 0x1a) goto LAB_080065a8;\nLAB_080060ec:\n      ppiVar14 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar22 = *ppiVar14;\n      piVar16 = ppiVar14[1];\n      local_154 = ppiVar14 + 2;\n      goto LAB_08006102;\n    case (int *)0x4c:\n      piVar25 = (int *)((uint)piVar25 | 8);\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case (int *)0x4f:\n      piVar25 = (int *)((uint)piVar25 | 0x10);\n    case (int *)0x6f:\n      if (((uint)piVar25 & 0x20) == 0) {\n        ppiVar14 = local_154 + 1;\n        if (((uint)piVar25 & 0x10) == 0) {\n          if (((uint)piVar25 & 0x40) == 0) {\n            if (((uint)piVar25 & 0x200) == 0) goto LAB_08006be2;\n            piVar22 = (int *)(uint)*(byte *)local_154;\n            piVar16 = (int *)0x0;\n            local_154 = ppiVar14;\n          }\n          else {\n            piVar22 = (int *)(uint)*(ushort *)local_154;\n            piVar16 = (int *)0x0;\n            local_154 = ppiVar14;\n          }\n        }\n        else {\nLAB_08006be2:\n          piVar22 = *local_154;\n          piVar16 = (int *)0x0;\n          local_154 = ppiVar14;\n        }\n      }\n      else {\n        ppiVar14 = (int **)((int)local_154 + 7U & 0xfffffff8);\n        piVar22 = *ppiVar14;\n        piVar16 = ppiVar14[1];\n        local_154 = ppiVar14 + 2;\n      }\n      iVar3 = 0;\n      piVar25 = (int *)((uint)piVar25 & 0xfffffbff);\n      break;\n    case (int *)0x53:\n    case (int *)0x73:\n      local_f5 = 0;\n      piVar22 = *local_154;\n      ppiVar14 = local_154 + 1;\n      if (piVar22 == (int *)0x0) {\n        piVar16 = piVar22;\n        piVar23 = (int *)PTR_s__null__08007084;\n        local_168 = piVar27;\n        local_158 = (int **)piVar27;\n        local_154 = ppiVar14;\n        local_148 = piVar22;\n        local_13c = (int **)piVar22;\n        local_134 = piVar22;\n        local_130 = piVar22;\n        if ((int *)0x5 < piVar27) {\n          local_158 = (int **)0x6;\n          local_168 = (int *)local_158;\n        }\n        goto LAB_08006538;\n      }\n      piVar23 = piVar22;\n      if (piVar27 == (int *)0xffffffff) {\n        local_158 = (int **)FUN_08005e40(piVar22);\n      }\n      else {\n        local_148 = (int *)FUN_0800901c(piVar22,0,piVar27);\n        if (local_148 == (int *)0x0) {\n          piVar16 = (int *)(uint)local_f5;\n          piVar22 = local_148;\n          local_168 = piVar27;\n          local_158 = (int **)piVar27;\n          local_154 = ppiVar14;\n          local_13c = (int **)local_148;\n          local_134 = local_148;\n          local_130 = local_148;\n          goto LAB_08006538;\n        }\n        local_158 = (int **)((int)local_148 - (int)piVar22);\n      }\n      local_148 = (int *)0x0;\n      local_13c = (int **)0x0;\n      local_134 = (int *)0x0;\n      local_130 = (int *)0x0;\n      piVar16 = (int *)(uint)local_f5;\n      piVar22 = (int *)0x0;\n      local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      local_154 = ppiVar14;\n      goto LAB_08006538;\n    case (int *)0x55:\n      piVar25 = (int *)((uint)piVar25 | 0x10);\n      if (-1 < (int)piVar25 << 0x1a) goto LAB_080066c0;\nLAB_0800618a:\n      ppiVar14 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar22 = *ppiVar14;\n      piVar16 = ppiVar14[1];\n      iVar3 = 1;\n      local_154 = ppiVar14 + 2;\n      break;\n    case (int *)0x58:\n      local_11c = PTR_s_0123456789ABCDEF_08006730;\n      if (((uint)piVar25 & 0x20) == 0) goto LAB_08006696;\nLAB_080061ac:\n      ppiVar14 = (int **)((int)local_154 + 7U & 0xfffffff8);\n      piVar22 = *ppiVar14;\n      piVar16 = ppiVar14[1];\n      local_154 = ppiVar14 + 2;\n      goto LAB_080061be;\n    case (int *)0x64:\n    case (int *)0x69:\n      if ((int)piVar25 << 0x1a < 0) goto LAB_080060ec;\nLAB_080065a8:\n      ppiVar14 = local_154 + 1;\n      if ((int)piVar25 << 0x1b < 0) {\nLAB_08006bcc:\n        piVar22 = *local_154;\n        piVar16 = (int *)((int)piVar22 >> 0x1f);\n        local_154 = ppiVar14;\n      }\n      else if ((int)piVar25 << 0x19 < 0) {\n        piVar22 = (int *)(int)*(short *)local_154;\n        piVar16 = (int *)((int)piVar22 >> 0x1f);\n        local_154 = ppiVar14;\n      }\n      else {\n        if (-1 < (int)piVar25 << 0x16) goto LAB_08006bcc;\n        piVar22 = (int *)(int)*(char *)local_154;\n        piVar16 = (int *)((int)piVar22 >> 0x1f);\n        local_154 = ppiVar14;\n      }\nLAB_08006102:\n      if ((int)piVar16 < 0) {\n        bVar31 = piVar22 != (int *)0x0;\n        piVar22 = (int *)-(int)piVar22;\n        piVar16 = (int *)(-(int)piVar16 - (uint)bVar31);\n        local_f5 = 0x2d;\n      }\n      if (piVar27 != (int *)0xffffffff) {\n        iVar3 = 1;\n        iVar8 = 1;\n        piVar21 = (int *)((uint)piVar25 & 0xffffff7f);\n        if (((uint)piVar22 | (uint)piVar16) == 0) goto LAB_080060a4;\n        goto LAB_08006130;\n      }\n      piVar21 = piVar25;\n      if (piVar16 != (int *)0x0 || (int *)0x9 < piVar22) goto LAB_08006f16;\n      goto LAB_0800698a;\n    case (int *)0x68:\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      if (piVar24 == (int *)0x68) {\n        piVar24 = (int *)(uint)*(byte *)((int)piVar28 + 1);\n        piVar25 = (int *)((uint)piVar25 | 0x200);\n        piVar28 = (int *)((int)piVar28 + 1);\n      }\n      else {\n        piVar25 = (int *)((uint)piVar25 | 0x40);\n      }\n      goto LAB_08005f4a;\n    case (int *)0x6a:\n    case (int *)0x71:\n      piVar25 = (int *)((uint)piVar25 | 0x20);\n    case (int *)0x74:\n    case (int *)0x7a:\nswitchD_08005f58_caseD_74:\n      piVar24 = (int *)(uint)*(byte *)piVar28;\n      goto LAB_08005f4a;\n    case (int *)0x6c:\n      goto switchD_08005f58_caseD_6c;\n    case (int *)0x6e:\n      ppiVar14 = local_154 + 1;\n      ppbVar15 = (byte **)*local_154;\n      local_154 = ppiVar14;\n      if (((uint)piVar25 & 0x20) != 0) {\n        *ppbVar15 = local_164;\n        ppbVar15[1] = (byte *)((int)local_164 >> 0x1f);\n        goto LAB_0800620e;\n      }\n      if (((uint)piVar25 & 0x10) == 0) {\n        if (((uint)piVar25 & 0x40) != 0) {\n          *(short *)ppbVar15 = (short)local_164;\n          goto LAB_0800620e;\n        }\n        if (((uint)piVar25 & 0x200) != 0) {\n          *(char *)ppbVar15 = (char)local_164;\n          goto LAB_0800620e;\n        }\n      }\n      *ppbVar15 = local_164;\n      goto LAB_0800620e;\n    case (int *)0x70:\n      local_f4 = 0x7830;\n      local_11c = PTR_s_0123456789abcdef_08006434;\n      piVar22 = *local_154;\n      piVar25 = (int *)((uint)piVar25 | 2);\n      piVar16 = (int *)0x0;\n      iVar3 = 2;\n      piVar24 = (int *)0x78;\n      local_154 = local_154 + 1;\n      break;\n    case (int *)0x75:\n      if ((int)piVar25 << 0x1a < 0) goto LAB_0800618a;\nLAB_080066c0:\n      ppiVar14 = local_154 + 1;\n      if ((int)piVar25 << 0x1b < 0) {\nLAB_08006bf2:\n        piVar22 = *local_154;\n        piVar16 = (int *)0x0;\n        iVar3 = 1;\n        local_154 = ppiVar14;\n      }\n      else if ((int)piVar25 << 0x19 < 0) {\n        piVar22 = (int *)(uint)*(ushort *)local_154;\n        piVar16 = (int *)0x0;\n        iVar3 = 1;\n        local_154 = ppiVar14;\n      }\n      else {\n        if (-1 < (int)piVar25 << 0x16) goto LAB_08006bf2;\n        piVar22 = (int *)(uint)*(byte *)local_154;\n        piVar16 = (int *)0x0;\n        iVar3 = 1;\n        local_154 = ppiVar14;\n      }\n      break;\n    case (int *)0x78:\n      local_11c = PTR_s_0123456789abcdef_08006434;\n      if (((uint)piVar25 & 0x20) != 0) goto LAB_080061ac;\nLAB_08006696:\n      ppiVar14 = local_154 + 1;\n      if (((uint)piVar25 & 0x10) == 0) {\n        if (((uint)piVar25 & 0x40) == 0) {\n          if (((uint)piVar25 & 0x200) == 0) goto LAB_08006bbc;\n          piVar22 = (int *)(uint)*(byte *)local_154;\n          piVar16 = (int *)0x0;\n          local_154 = ppiVar14;\n        }\n        else {\n          piVar22 = (int *)(uint)*(ushort *)local_154;\n          piVar16 = (int *)0x0;\n          local_154 = ppiVar14;\n        }\n      }\n      else {\nLAB_08006bbc:\n        piVar22 = *local_154;\n        piVar16 = (int *)0x0;\n        local_154 = ppiVar14;\n      }\nLAB_080061be:\n      if ((((uint)piVar25 & 1) != 0) && (((uint)piVar22 | (uint)piVar16) != 0)) {\n        piVar25 = (int *)((uint)piVar25 | 2);\n        local_f4 = CONCAT11((char)piVar24,0x30);\n      }\n      iVar3 = 2;\n      piVar25 = (int *)((uint)piVar25 & 0xfffffbff);\n    }\n    local_f5 = 0;\n    if (piVar27 == (int *)0xffffffff) {\n      if (iVar3 != 1) goto LAB_08006136;\nLAB_08006980:\n      piVar21 = piVar25;\n      if (piVar16 == (int *)0x0 && piVar22 < (int *)0xa) goto LAB_0800698a;\nLAB_08006f16:\n      lVar32 = CONCAT44(piVar16,piVar22);\n      piVar23 = (int *)(&bStack_2a + 2);\n      piVar22 = (int *)0x0;\n      pbVar26 = local_108;\n      local_168 = piVar23;\n      local_158 = ppiVar2;\n      local_150._0_4_ = piVar25;\n      local_148 = piVar24;\n      do {\n        iVar3 = (int)((ulonglong)lVar32 >> 0x20);\n        uVar19 = (uint)lVar32;\n        cVar6 = '\\n';\n        FUN_080011ec(uVar19,iVar3,10,0);\n        *(byte *)((int)piVar23 + -1) = cVar6 + 0x30;\n        piVar22 = (int *)((int)piVar22 + 1);\n        piVar23 = (int *)((int)piVar23 + -1);\n        if ((((((uint)piVar25 & 0x400) != 0) && (piVar22 == (int *)(uint)*pbVar26)) &&\n            (piVar22 != (int *)0xff)) && (iVar3 != 0 || 9 < uVar19)) {\n          piVar23 = (int *)((int)piVar23 - (int)local_104);\n          FUN_08009768(piVar23,local_110,local_104);\n          piVar22 = (int *)(uint)pbVar26[1];\n          if (piVar22 != (int *)0x0) {\n            pbVar26 = pbVar26 + 1;\n            piVar22 = (int *)0x0;\n          }\n        }\n        lVar32 = FUN_080011ec(uVar19,iVar3,10,0);\n      } while (lVar32 != 0);\n      piVar24 = local_148;\n      piVar25 = (int *)local_150;\n      ppiVar2 = local_158;\n      local_158 = (int **)((int)local_168 - (int)piVar23);\n      local_138 = piVar22;\n      local_108 = pbVar26;\n    }\n    else {\n      piVar21 = (int *)((uint)piVar25 & 0xffffff7f);\n      iVar8 = iVar3;\n      if (((uint)piVar22 | (uint)piVar16) == 0) {\nLAB_080060a4:\n        if (piVar27 == (int *)0x0) {\n          if (iVar3 == 0) {\n            local_158 = (int **)((uint)piVar25 & 1);\n            if (local_158 == (int **)0x0) {\n              piVar23 = (int *)(&bStack_2a + 2);\n              piVar25 = piVar21;\n            }\n            else {\n              piVar23 = (int *)(&bStack_2a + 1);\n              local_29 = '0';\n              piVar25 = piVar21;\n            }\n          }\n          else {\n            piVar23 = (int *)(&bStack_2a + 2);\n            piVar25 = piVar21;\n            local_158 = (int **)piVar27;\n          }\n        }\n        else {\n          piVar25 = piVar21;\n          if (iVar3 != 1) goto LAB_08006136;\nLAB_0800698a:\n          local_29 = (char)piVar22 + '0';\n          piVar23 = (int *)(&bStack_2a + 1);\n          local_158 = (int **)0x1;\n          piVar25 = piVar21;\n        }\n      }\n      else {\nLAB_08006130:\n        iVar3 = iVar8;\n        piVar25 = piVar21;\n        if (iVar8 == 1) goto LAB_08006980;\nLAB_08006136:\n        if (iVar3 == 2) {\n          piVar23 = (int *)(&bStack_2a + 2);\n          do {\n            piVar21 = (int *)((uint)piVar22 >> 4 | (int)piVar16 << 0x1c);\n            piVar16 = (int *)((uint)piVar16 >> 4);\n            piVar23 = (int *)((int)piVar23 + -1);\n            *(undefined *)piVar23 = local_11c[(uint)piVar22 & 0xf];\n            piVar22 = piVar21;\n          } while (((uint)piVar21 | (uint)piVar16) != 0);\n        }\n        else {\n          piVar23 = (int *)(&bStack_2a + 2);\n          do {\n            piVar21 = piVar23;\n            piVar9 = (int *)((uint)piVar22 >> 3 | (int)piVar16 << 0x1d);\n            piVar16 = (int *)((uint)piVar16 >> 3);\n            iVar3 = ((uint)piVar22 & 7) + 0x30;\n            *(byte *)((int)piVar21 + -1) = (byte)iVar3;\n            piVar23 = (int *)((int)piVar21 + -1);\n            piVar22 = piVar9;\n          } while (((uint)piVar9 | (uint)piVar16) != 0);\n          if ((((uint)piVar25 & 1) != 0) && (iVar3 != 0x30)) {\n            piVar23 = (int *)((int)piVar21 + -2);\n            *(byte *)((int)piVar21 + -2) = 0x30;\n            local_158 = (int **)(&bStack_2a + (2 - (int)piVar23));\n            goto LAB_0800675a;\n          }\n        }\n        local_158 = (int **)(&bStack_2a + (2 - (int)piVar23));\n      }\n    }\nLAB_0800675a:\n    local_148 = (int *)0x0;\n    local_13c = (int **)0x0;\n    local_134 = (int *)0x0;\n    local_130 = (int *)0x0;\n    piVar16 = (int *)(uint)local_f5;\n    piVar22 = piVar27;\n    local_168 = (int *)local_158;\n    if ((int)local_158 < (int)piVar27) {\n      local_168 = piVar27;\n    }\n    goto LAB_08006538;\n  }\nLAB_08006216:\n  piVar28 = local_160;\n  if (local_d0 == (int *)0x0) {\nLAB_0800604a:\n    uVar13 = *(ushort *)(local_160 + 3);\n  }\n  else {\n    FUN_080097cc(local_16c,local_160,&local_d8);\n    uVar13 = *(ushort *)(piVar28 + 3);\n  }\nLAB_0800604e:\n  if ((uVar13 & 0x40) != 0) {\n    local_164 = (byte *)0xffffffff;\n  }\n  return local_164;\nswitchD_08005f58_caseD_6c:\n  piVar24 = (int *)(uint)*(byte *)piVar28;\n  if (piVar24 == (int *)0x6c) {\n    piVar24 = (int *)(uint)*(byte *)((int)piVar28 + 1);\n    piVar25 = (int *)((uint)piVar25 | 0x20);\n    piVar28 = (int *)((int)piVar28 + 1);\n  }\n  else {\n    piVar25 = (int *)((uint)piVar25 | 0x10);\n  }\n  goto LAB_08005f4a;\n  while( true ) {\n    iVar8 = FUN_08000998((int)uVar33,uVar10,local_124,local_120);\n    if (iVar8 != 0) break;\nLAB_080072ba:\n    piVar22 = param_3;\n    piVar16 = (int *)((int)piVar16 + -1);\n    uVar33 = FUNC_080004c8((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),0,DAT_080073a0);\n    iVar3 = FUN_0800119c();\n    uVar34 = FUN_080003f4();\n    uVar33 = FUNC_08000158((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar34,\n                          (int)((ulonglong)uVar34 >> 0x20));\n    uVar10 = (undefined4)((ulonglong)uVar33 >> 0x20);\n    param_3 = (int *)((int)piVar22 + 1);\n    *(undefined *)piVar22 = puVar20[iVar3];\n    if (piVar16 == (int *)0xffffffff) break;\n  }\n  piVar23 = local_fc;\n  piVar25 = local_100;\n  piVar27 = local_130;\n  piVar24 = local_134;\n  piVar28 = local_138;\n  ppiVar2 = local_13c;\n  local_13c = (int **)piVar16;\n  local_134 = piVar22;\n  local_150 = uVar33;\n  iVar8 = FUN_080009e8((int)uVar33,uVar10,0,DAT_080073a4);\n  if (iVar8 == 0) {\n    iVar8 = FUN_08000998((int *)local_150,local_150._4_4_,0,DAT_080073a4);\n    if ((iVar8 != 0) && (iVar3 << 0x1f < 0)) goto LAB_0800748a;\n    if (-1 < (int)local_13c) {\n      piVar16 = (int *)((byte *)((int)local_13c + 1) + (int)param_3);\n      piVar22 = param_3;\n      do {\n        param_3 = (int *)((int)piVar22 + 1);\n        *(byte *)piVar22 = 0x30;\n        piVar22 = param_3;\n      } while (piVar16 != param_3);\n    }\n  }\n  else {\nLAB_0800748a:\n    bVar1 = *(byte *)((int)local_158 + 0xf);\n    bVar7 = *(byte *)piVar22;\n    piVar22 = param_3;\n    local_e0 = local_134;\n    while (bVar1 == bVar7) {\n      *(byte *)((int)piVar22 + -1) = 0x30;\n      bVar7 = *(byte *)((int)local_e0 + -1);\n      piVar22 = local_e0;\n      local_e0 = (int *)((int)local_e0 + -1);\n    }\n    if (bVar7 == 0x39) {\n      bVar7 = *(byte *)((int)local_158 + 10);\n    }\n    else {\n      bVar7 = bVar7 + 1;\n    }\n    *(byte *)((int)piVar22 + -1) = bVar7;\n  }\n  local_138 = (int *)((int)param_3 - (int)piVar23);\nLAB_08006cb0:\n  local_134 = local_f0;\n  if (local_168 == (int *)0x47) {\n    if (((int)((int)local_f0 + 3) < 0 == SCARRY4((int)local_f0,3)) &&\n       ((int)local_f0 <= (int)piVar27)) {\n      if ((int)local_f0 < (int)local_138) {\n        local_158 = (int **)((int)local_138 + (int)local_118);\n        if (0 < (int)local_f0) {\n          piVar24 = (int *)0x67;\n          goto LAB_080074f8;\n        }\n        local_158 = (int **)((int)local_158 + (1 - (int)local_f0));\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n        piVar24 = (int *)0x67;\n      }\n      else {\n        if ((int)piVar25 << 0x1f < 0) {\n          local_158 = (int **)((int)local_f0 + (int)local_118);\n        }\n        else {\n          local_158 = (int **)local_f0;\n        }\n        if (-1 < (int)piVar25 << 0x15) {\n          piVar24 = (int *)0x67;\n          goto LAB_0800754a;\n        }\n        if (0 < (int)local_f0) {\n          piVar24 = (int *)0x67;\n          goto LAB_080074fc;\n        }\n        piVar24 = (int *)0x67;\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      }\n      goto LAB_080073d6;\n    }\n    piVar24 = (int *)((int)piVar24 + -2);\n    local_168 = (int *)((uint)piVar24 & 0xffffffdf);\nLAB_08006cc4:\n    local_e8 = (char)piVar24;\n    if (local_168 == (int *)0x41) {\n      local_e8 = local_e8 + '\\x0f';\n    }\n    piVar27 = (int *)((int)local_f0 + -1);\n    if ((int)piVar27 < 0) {\n      local_e7 = 0x2d;\n      local_f0 = (int *)(1 - (int)local_f0);\n    }\n    else {\n      local_e7 = 0x2b;\n      local_f0 = piVar27;\n    }\n    if ((int)local_f0 < 10) {\n      if (local_168 == (int *)0x41) {\n        pcVar18 = (char *)((int)&local_e8 + 2);\n      }\n      else {\n        local_e6[0] = 0x30;\n        pcVar18 = (char *)((int)&local_e8 + 3);\n      }\n      *pcVar18 = (char)local_f0 + '0';\n      pcVar18 = pcVar18 + 1;\n    }\n    else {\n      pbVar30 = abStack_dc + 3;\n      pbVar26 = pbVar30;\n      do {\n        pbVar5 = pbVar26;\n        piVar22 = (int *)((ulonglong)DAT_08007890 * ZEXT48(local_f0) >> 0x23);\n        pbVar5[-1] = (char)local_f0 + (char)piVar22 * -10 + 0x30;\n        pbVar26 = pbVar5 + -1;\n        local_f0 = piVar22;\n      } while ((int *)0x9 < piVar22);\n      uVar19 = (uint)(piVar22 + 0xc) & 0xff;\n      pbVar5[-2] = (byte)uVar19;\n      if (pbVar5 + -2 < pbVar30) {\n        pbVar5 = pbVar26;\n        puVar20 = (undefined *)((int)&local_e8 + 2);\n        while( true ) {\n          *puVar20 = (char)uVar19;\n          if (pbVar30 == pbVar5) break;\n          uVar19 = (uint)*pbVar5;\n          pbVar5 = pbVar5 + 1;\n          puVar20 = puVar20 + 1;\n        }\n        pcVar18 = (char *)(((int)&local_188 * 2 - (int)pbVar26) + 0x152);\n      }\n      else {\n        pcVar18 = (char *)((int)&local_e8 + 2);\n      }\n    }\n    local_10c = (int *)(pcVar18 + -(int)&local_e8);\n    local_158 = (int **)((int)local_10c + (int)local_138);\n    if ((1 < (int)local_138) || ((int)piVar25 << 0x1f < 0)) {\n      local_158 = (int **)((int)local_158 + (int)local_118);\n    }\n    local_13c = (int **)0x0;\n    local_134 = (int *)0x0;\n    local_130 = (int *)0x0;\n    local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n    piVar25 = (int *)((uint)piVar25 & 0xfffffbff | 0x100);\n    local_f0 = piVar27;\n  }\n  else {\n    if (local_168 != (int *)0x46) goto LAB_08006cc4;\n    if ((int)local_f0 < 1) {\n      if ((piVar27 == (int *)0x0) && (-1 < (int)piVar25 << 0x1f)) {\n        piVar24 = (int *)0x66;\n        local_168 = (int *)0x1;\n        local_158 = (int **)0x1;\n      }\n      else {\n        piVar24 = (int *)0x66;\n        local_158 = (int **)((byte *)((int)local_118 + 1) + (int)piVar27);\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      }\nLAB_080073d6:\n      local_13c = (int **)0x0;\n      local_130 = (int *)0x0;\n      piVar25 = local_140;\n    }\n    else {\n      if ((piVar27 == (int *)0x0) && (-1 < (int)piVar25 << 0x1f)) {\n        piVar24 = (int *)0x66;\n        local_158 = (int **)local_f0;\n      }\n      else {\n        piVar24 = (int *)0x66;\n        local_158 = (int **)((byte *)((int)local_f0 + (int)local_118) + (int)piVar27);\n      }\nLAB_080074f8:\n      if (-1 < (int)piVar25 << 0x15) {\nLAB_0800754a:\n        local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n        goto LAB_080073d6;\n      }\nLAB_080074fc:\n      local_13c = (int **)0x0;\n      local_130 = (int *)0x0;\n      uVar19 = (uint)*local_108;\n      while (uVar19 != 0xff) {\n        while( true ) {\n          if ((int)local_134 <= (int)uVar19) goto LAB_08007524;\n          uVar4 = (uint)local_108[1];\n          local_134 = (int *)((int)local_134 - uVar19);\n          if (uVar4 == 0) break;\n          local_108 = local_108 + 1;\n          local_130 = (int *)((int)local_130 + 1);\n          uVar19 = uVar4;\n          if (uVar4 == 0xff) goto LAB_08007524;\n        }\n        local_13c = (int **)((int)local_13c + 1);\n      }\nLAB_08007524:\n      local_158 = (int **)((int)local_158 + (int)local_104 * (int)((int)local_130 + (int)local_13c))\n      ;\n      local_168 = (int *)((uint)local_158 & ~((int)local_158 >> 0x1f));\n      piVar25 = local_140;\n    }\n  }\n  if (local_144 == (int *)0x0) {\n    piVar16 = (int *)(uint)local_f5;\n    piVar22 = local_144;\nLAB_08006538:\n    if (piVar16 != (int *)0x0) goto LAB_0800653e;\n  }\n  else {\n    piVar16 = (int *)0x2d;\n    piVar22 = (int *)0x0;\n    local_f5 = 0x2d;\nLAB_0800653e:\n    local_168 = (int *)((int)local_168 + 1);\n  }\nLAB_08006298:\n  piVar27 = local_160;\n  puVar29 = local_16c;\n  local_150._0_4_ = (int *)((uint)piVar25 & 2);\n  if ((int *)local_150 != (int *)0x0) {\n    local_168 = (int *)((int)local_168 + 2);\n  }\n  local_144 = (int *)((uint)piVar25 & 0x84);\n  if ((local_144 == (int *)0x0) &&\n     (piVar21 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar21)) {\n    if (0x10 < (int)piVar21) {\n      piVar16 = (int *)0x10;\n      local_100 = piVar24;\n      do {\n        piVar9 = piVar21;\n        local_d4 = (int *)((int)local_d4 + 1);\n        local_d0 = local_d0 + 4;\n        *ppiVar2 = (int *)PTR_s__0000000000000000Infinity_08006438;\n        ppiVar2[1] = piVar16;\n        if ((int)local_d4 < 8) {\n          ppiVar2 = ppiVar2 + 2;\n          piVar24 = local_100;\n        }\n        else {\n          local_140 = piVar16;\n          iVar3 = FUN_080097cc(puVar29,piVar27,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          ppiVar2 = local_cc;\n          piVar16 = local_140;\n          piVar24 = local_100;\n        }\n        piVar21 = piVar9 + -4;\n        local_100 = piVar24;\n      } while (0x10 < (int)piVar21);\n      piVar21 = piVar9 + -4;\n    }\n    local_d4 = (int *)((int)local_d4 + 1);\n    local_d0 = (int *)((int)local_d0 + (int)piVar21);\n    *ppiVar2 = (int *)PTR_s__0000000000000000Infinity_08006438;\n    ppiVar2[1] = piVar21;\n    if ((int)local_d4 < 8) {\n      piVar16 = (int *)(uint)local_f5;\n      ppiVar2 = ppiVar2 + 2;\n    }\n    else {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n      piVar16 = (int *)(uint)local_f5;\n    }\n  }\n  if (piVar16 != (int *)0x0) {\n    local_d0 = (int *)((int)local_d0 + 1);\n    local_d4 = (int *)((int)local_d4 + 1);\n    *ppiVar2 = (int *)&local_f5;\n    ppiVar2[1] = (int *)0x1;\n    if ((int)local_d4 < 8) {\n      ppiVar2 = ppiVar2 + 2;\n    }\n    else {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n    }\n  }\n  if ((int *)local_150 != (int *)0x0) {\n    local_d0 = (int *)((int)local_d0 + 2);\n    local_d4 = (int *)((int)local_d4 + 1);\n    *ppiVar2 = (int *)&local_f4;\n    ppiVar2[1] = (int *)0x2;\n    if ((int)local_d4 < 8) {\n      ppiVar2 = ppiVar2 + 2;\n    }\n    else {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n    }\n  }\n  piVar27 = local_160;\n  puVar20 = PTR_s_0000000000000000Infinity_08006a54;\n  if ((local_144 == (int *)0x80) &&\n     (piVar16 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar16)) {\n    if (0x10 < (int)piVar16) {\n      do {\n        while( true ) {\n          piVar21 = piVar16;\n          local_d4 = (int *)((int)local_d4 + 1);\n          local_d0 = local_d0 + 4;\n          *ppiVar2 = (int *)puVar20;\n          ppiVar2[1] = (int *)0x10;\n          if ((int)local_d4 < 8) break;\n          iVar3 = FUN_080097cc(local_16c,piVar27,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          ppiVar2 = local_cc;\n          piVar16 = piVar21 + -4;\n          if ((int)(piVar21 + -4) < 0x11) goto LAB_08006882;\n        }\n        ppiVar2 = ppiVar2 + 2;\n        piVar16 = piVar21 + -4;\n      } while (0x10 < (int)(piVar21 + -4));\nLAB_08006882:\n      piVar16 = piVar21 + -4;\n    }\n    local_d4 = (int *)((int)local_d4 + 1);\n    local_d0 = (int *)((int)local_d0 + (int)piVar16);\n    *ppiVar2 = (int *)puVar20;\n    ppiVar2[1] = piVar16;\n    if ((int)local_d4 < 8) {\n      ppiVar2 = ppiVar2 + 2;\n    }\n    else {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n    }\n  }\n  piVar27 = local_160;\n  puVar20 = PTR_s_0000000000000000Infinity_0800643c;\n  piVar22 = (int *)((int)piVar22 - (int)local_158);\n  if (0 < (int)piVar22) {\n    piVar16 = (int *)PTR_s_0000000000000000Infinity_08007088;\n    if (0x10 < (int)piVar22) {\n      do {\n        while( true ) {\n          piVar16 = piVar22;\n          local_d4 = (int *)((int)local_d4 + 1);\n          local_d0 = local_d0 + 4;\n          *ppiVar2 = (int *)puVar20;\n          ppiVar2[1] = (int *)0x10;\n          if ((int)local_d4 < 8) break;\n          iVar3 = FUN_080097cc(local_16c,piVar27,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          ppiVar2 = local_cc;\n          piVar22 = piVar16 + -4;\n          if ((int)(piVar16 + -4) < 0x11) goto LAB_080063d2;\n        }\n        ppiVar2 = ppiVar2 + 2;\n        piVar22 = piVar16 + -4;\n      } while (0x10 < (int)(piVar16 + -4));\nLAB_080063d2:\n      piVar22 = piVar16 + -4;\n      piVar16 = (int *)puVar20;\n    }\n    local_d4 = (int *)((int)local_d4 + 1);\n    local_d0 = (int *)((int)local_d0 + (int)piVar22);\n    *ppiVar2 = piVar16;\n    ppiVar2[1] = piVar22;\n    if ((int)local_d4 < 8) {\n      ppiVar2 = ppiVar2 + 2;\n    }\n    else {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n    }\n  }\n  piVar27 = local_d0;\n  if (((uint)piVar25 & 0x100) == 0) {\n    local_d4 = (int *)((int)local_d4 + 1);\n    local_d0 = (int *)((int)local_d0 + (int)local_158);\n    *ppiVar2 = piVar23;\n    ppiVar2[1] = (int *)local_158;\n    if ((int)local_d4 < 8) {\nLAB_0800640e:\n      ppiVar2 = ppiVar2 + 2;\n      piVar27 = local_d0;\n    }\n    else {\nLAB_08006a20:\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n      piVar27 = local_d0;\n    }\n  }\n  else if ((int)piVar24 < 0x66) {\n    local_158 = (int **)((int)local_d0 + 1);\n    piVar27 = (int *)((int)local_d4 + 1);\n    ppiVar14 = ppiVar2 + 2;\n    local_d0 = (int *)local_158;\n    if (((int)local_138 < 2) && (((uint)piVar25 & 1) == 0)) {\n      *ppiVar2 = piVar23;\n      ppiVar2[1] = (int *)0x1;\n      if ((int)piVar27 < 8) {\n        local_150._0_4_ = (int *)((int)local_d4 + 2);\n        ppiVar2 = ppiVar2 + 4;\n      }\n      else {\n        local_d4 = piVar27;\n        iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n        if (iVar3 != 0) goto LAB_0800603e;\n        local_150._0_4_ = (int *)((int)local_d4 + 1);\n        ppiVar14 = local_cc;\n        local_158 = (int **)local_d0;\n        ppiVar2 = local_cc + 2;\n      }\n    }\n    else {\n      *ppiVar2 = piVar23;\n      ppiVar2[1] = (int *)0x1;\n      local_d4 = piVar27;\n      if (7 < (int)piVar27) {\n        iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n        if (iVar3 != 0) goto LAB_0800603e;\n        ppiVar14 = local_cc;\n        local_158 = (int **)local_d0;\n      }\n      local_d4 = (int *)((int)local_d4 + 1);\n      local_158 = (int **)((int)local_158 + (int)local_118);\n      *ppiVar14 = local_114;\n      ppiVar14[1] = local_118;\n      local_d0 = (int *)local_158;\n      if ((int)local_d4 < 8) {\n        ppiVar17 = ppiVar14 + 2;\n      }\n      else {\n        iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n        if (iVar3 != 0) goto LAB_0800603e;\n        ppiVar17 = local_cc;\n      }\n      piVar24 = local_d4;\n      local_150._0_4_ = (int *)((int)local_d4 + 1);\n      piVar22 = (int *)((int)local_138 + -1);\n      ppiVar11 = ppiVar17 + 2;\n      local_158 = (int **)local_d0;\n      local_144 = (int *)local_150;\n      iVar3 = FUN_08000998(local_128,local_12c,local_124,local_120);\n      piVar27 = local_160;\n      puVar29 = local_16c;\n      puVar20 = PTR_s_0000000000000000Infinity_08006d94;\n      if (iVar3 == 0) {\n        local_158 = (int **)((int)local_158 + (int)piVar22);\n        *ppiVar17 = (int *)((int)piVar23 + 1);\n        ppiVar17[1] = piVar22;\n        local_d0 = (int *)local_158;\n        if ((int)(int *)local_150 < 8) {\n          local_150._0_4_ = (int *)((int)piVar24 + 2);\n          ppiVar14 = ppiVar11;\n          ppiVar2 = ppiVar17 + 4;\n        }\n        else {\nLAB_08006d9c:\n          local_158 = (int **)local_d0;\n          local_d4 = (int *)local_150;\n          iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          local_150._0_4_ = (int *)((int)local_d4 + 1);\n          local_158 = (int **)local_d0;\n          ppiVar14 = local_cc;\n          ppiVar2 = local_cc + 2;\n        }\n      }\n      else {\n        ppiVar14 = ppiVar17;\n        ppiVar2 = ppiVar11;\n        if (0 < (int)piVar22) {\n          local_d0 = (int *)local_158;\n          piVar24 = (int *)PTR_s_0000000000000000Infinity_0800788c;\n          local_d4 = local_144;\n          if (0x10 < (int)piVar22) {\n            while( true ) {\n              local_d0 = local_d0 + 4;\n              *ppiVar17 = (int *)puVar20;\n              ppiVar17[1] = (int *)0x10;\n              if ((int)local_d4 < 8) {\n                ppiVar17 = ppiVar17 + 2;\n              }\n              else {\n                iVar3 = FUN_080097cc(puVar29,piVar27,&local_d8);\n                if (iVar3 != 0) goto LAB_0800603e;\n                ppiVar17 = local_cc;\n              }\n              piVar22 = piVar22 + -4;\n              if ((int)piVar22 < 0x11) break;\n              local_d4 = (int *)((int)local_d4 + 1);\n            }\n            local_150._0_4_ = (int *)((int)local_d4 + 1);\n            ppiVar11 = ppiVar17 + 2;\n            piVar24 = (int *)puVar20;\n            local_158 = (int **)local_d0;\n          }\n          *ppiVar17 = piVar24;\n          ppiVar17[1] = piVar22;\n          local_158 = (int **)((int)local_158 + (int)piVar22);\n          local_d0 = (int *)local_158;\n          if (7 < (int)(int *)local_150) goto LAB_08006d9c;\n          local_150._0_4_ = (int *)((int)(int *)local_150 + 1);\n          ppiVar2 = ppiVar11 + 2;\n          ppiVar14 = ppiVar11;\n        }\n      }\n    }\n    ppiVar14[1] = local_10c;\n    local_d0 = (int *)((int)local_158 + (int)local_10c);\n    local_d4 = (int *)local_150;\n    *ppiVar14 = (int *)&local_e8;\n    piVar27 = local_d0;\n    if (7 < (int)(int *)local_150) {\n      iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n      if (iVar3 != 0) goto LAB_0800603e;\n      ppiVar2 = local_cc;\n      piVar27 = local_d0;\n    }\n  }\n  else {\n    iVar3 = FUN_08000998(local_128,local_12c,local_124,local_120);\n    if (iVar3 == 0) {\n      if ((int)local_f0 < 1) {\n        local_d4 = (int *)((int)local_d4 + 1);\n        local_d0 = (int *)((int)piVar27 + 1);\n        *ppiVar2 = (int *)PTR_DAT_08006d98;\n        ppiVar2[1] = (int *)0x1;\n        if ((int)local_d4 < 8) {\n          ppiVar2 = ppiVar2 + 2;\n        }\n        else {\n          iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          ppiVar2 = local_cc;\n        }\n        if (((local_f0 != (int *)0x0) || (local_138 != (int *)0x0)) ||\n           (piVar27 = local_d0, ((uint)piVar25 & 1) != 0)) {\n          local_d4 = (int *)((int)local_d4 + 1);\n          local_d0 = (int *)((int)local_d0 + (int)local_118);\n          *ppiVar2 = local_114;\n          ppiVar2[1] = local_118;\n          if ((int)local_d4 < 8) {\n            ppiVar2 = ppiVar2 + 2;\n          }\n          else {\n            iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n            if (iVar3 != 0) goto LAB_0800603e;\n            ppiVar2 = local_cc;\n          }\n          puVar29 = local_16c;\n          puVar20 = PTR_s_0000000000000000Infinity_0800788c;\n          if ((int)local_f0 < 0) {\n            piVar27 = (int *)-(int)local_f0;\n            if ((int)(local_f0 + 4) < 0 != SCARRY4((int)local_f0,0x10)) {\n              do {\n                local_d4 = (int *)((int)local_d4 + 1);\n                local_d0 = local_d0 + 4;\n                *ppiVar2 = (int *)puVar20;\n                ppiVar2[1] = (int *)0x10;\n                if ((int)local_d4 < 8) {\n                  ppiVar2 = ppiVar2 + 2;\n                }\n                else {\n                  iVar3 = FUN_080097cc(puVar29,local_160,&local_d8);\n                  if (iVar3 != 0) goto LAB_0800603e;\n                  ppiVar2 = local_cc;\n                }\n                piVar27 = piVar27 + -4;\n              } while (0x10 < (int)piVar27);\n            }\n            local_d4 = (int *)((int)local_d4 + 1);\n            local_d0 = (int *)((int)local_d0 + (int)piVar27);\n            *ppiVar2 = (int *)puVar20;\n            ppiVar2[1] = piVar27;\n            if ((int)local_d4 < 8) {\n              ppiVar2 = ppiVar2 + 2;\n            }\n            else {\n              iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n              if (iVar3 != 0) goto LAB_0800603e;\n              ppiVar2 = local_cc;\n            }\n          }\n          local_d0 = (int *)((int)local_d0 + (int)local_138);\n          *ppiVar2 = piVar23;\n          ppiVar2[1] = local_138;\n          goto joined_r0x08006a1c;\n        }\n      }\n      else {\n        piVar24 = local_134;\n        if ((int)local_138 <= (int)local_134) {\n          piVar24 = local_138;\n        }\n        if (0 < (int)piVar24) {\n          local_d0 = (int *)((int)piVar27 + (int)piVar24);\n          local_d4 = (int *)((int)local_d4 + 1);\n          *ppiVar2 = piVar23;\n          ppiVar2[1] = piVar24;\n          if ((int)local_d4 < 8) {\n            ppiVar2 = ppiVar2 + 2;\n            piVar27 = local_d0;\n          }\n          else {\n            iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n            if (iVar3 != 0) goto LAB_0800603e;\n            ppiVar2 = local_cc;\n            piVar27 = local_d0;\n          }\n        }\n        piVar16 = local_160;\n        puVar29 = local_16c;\n        puVar20 = PTR_s_0000000000000000Infinity_08006d94;\n        piVar22 = local_134;\n        if (-1 < (int)piVar24) {\n          piVar22 = (int *)((int)local_134 - (int)piVar24);\n        }\n        piVar24 = (int *)PTR_s_0000000000000000Infinity_0800788c;\n        if (0 < (int)piVar22) {\n          for (; 0x10 < (int)piVar22; piVar22 = piVar22 + -4) {\n            local_d4 = (int *)((int)local_d4 + 1);\n            local_d0 = piVar27 + 4;\n            *ppiVar2 = (int *)puVar20;\n            ppiVar2[1] = (int *)0x10;\n            if ((int)local_d4 < 8) {\n              ppiVar2 = ppiVar2 + 2;\n            }\n            else {\n              iVar3 = FUN_080097cc(puVar29,piVar16,&local_d8);\n              if (iVar3 != 0) goto LAB_0800603e;\n              ppiVar2 = local_cc;\n            }\n            piVar27 = local_d0;\n            piVar24 = (int *)puVar20;\n          }\n          local_d4 = (int *)((int)local_d4 + 1);\n          piVar27 = (int *)((int)piVar27 + (int)piVar22);\n          *ppiVar2 = piVar24;\n          ppiVar2[1] = piVar22;\n          local_d0 = piVar27;\n          if ((int)local_d4 < 8) {\n            ppiVar2 = ppiVar2 + 2;\n          }\n          else {\n            iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n            if (iVar3 != 0) goto LAB_0800603e;\n            ppiVar2 = local_cc;\n            piVar27 = local_d0;\n          }\n        }\n        piVar22 = local_104;\n        piVar24 = local_160;\n        puVar29 = local_16c;\n        puVar20 = PTR_s_0000000000000000Infinity_08007398;\n        piVar16 = (int *)((int)local_134 + (int)piVar23);\n        if (((uint)piVar25 & 0x400) != 0) {\n          local_158 = (int **)((int)piVar23 + (int)local_138);\n          pbVar26 = local_108;\n          local_150._0_4_ = piVar28;\n          local_144 = piVar25;\n          local_140 = piVar23;\n          if (local_130 == (int *)0x0) goto LAB_08007176;\nLAB_080070ba:\n          if (local_13c != (int **)0x0) goto LAB_0800717e;\n          pbVar26 = pbVar26 + -1;\n          local_130 = (int *)((int)local_130 + -1);\n          do {\n            local_d4 = (int *)((int)local_d4 + 1);\n            local_d0 = (int *)((int)piVar27 + (int)piVar22);\n            *ppiVar2 = local_110;\n            ppiVar2[1] = piVar22;\n            if ((int)local_d4 < 8) {\n              ppiVar2 = ppiVar2 + 2;\n            }\n            else {\n              iVar3 = FUN_080097cc(puVar29,piVar24,&local_d8);\n              if (iVar3 != 0) goto LAB_0800603e;\n              ppiVar2 = local_cc;\n            }\n            piVar27 = (int *)(uint)*pbVar26;\n            piVar28 = (int *)((int)local_158 - (int)piVar16);\n            if ((int)piVar27 <= (int)(int *)((int)local_158 - (int)piVar16)) {\n              piVar28 = piVar27;\n            }\n            if (0 < (int)piVar28) {\n              local_d0 = (int *)((int)local_d0 + (int)piVar28);\n              local_d4 = (int *)((int)local_d4 + 1);\n              *ppiVar2 = piVar16;\n              ppiVar2[1] = piVar28;\n              if ((int)local_d4 < 8) {\n                piVar27 = (int *)(uint)*pbVar26;\n                ppiVar2 = ppiVar2 + 2;\n              }\n              else {\n                iVar3 = FUN_080097cc(puVar29,piVar24,&local_d8);\n                if (iVar3 != 0) goto LAB_0800603e;\n                ppiVar2 = local_cc;\n                piVar27 = (int *)(uint)*pbVar26;\n              }\n            }\n            piVar25 = piVar27;\n            if (-1 < (int)piVar28) {\n              piVar25 = (int *)((int)piVar27 - (int)piVar28);\n            }\n            if (0 < (int)piVar25) {\n              for (; 0x10 < (int)piVar25; piVar25 = piVar25 + -4) {\n                while( true ) {\n                  local_d4 = (int *)((int)local_d4 + 1);\n                  local_d0 = local_d0 + 4;\n                  *ppiVar2 = (int *)puVar20;\n                  ppiVar2[1] = (int *)0x10;\n                  if ((int)local_d4 < 8) break;\n                  iVar3 = FUN_080097cc(puVar29,piVar24,&local_d8);\n                  if (iVar3 != 0) goto LAB_0800603e;\n                  piVar25 = piVar25 + -4;\n                  ppiVar2 = local_cc;\n                  if ((int)piVar25 < 0x11) goto LAB_08007156;\n                }\n                ppiVar2 = ppiVar2 + 2;\n              }\nLAB_08007156:\n              local_d4 = (int *)((int)local_d4 + 1);\n              local_d0 = (int *)((int)local_d0 + (int)piVar25);\n              *ppiVar2 = (int *)puVar20;\n              ppiVar2[1] = piVar25;\n              if ((int)local_d4 < 8) {\n                piVar27 = (int *)(uint)*pbVar26;\n                ppiVar2 = ppiVar2 + 2;\n              }\n              else {\n                iVar3 = FUN_080097cc(puVar29,piVar24,&local_d8);\n                if (iVar3 != 0) goto LAB_0800603e;\n                piVar27 = (int *)(uint)*pbVar26;\n                ppiVar2 = local_cc;\n              }\n            }\n            piVar16 = (int *)((int)piVar16 + (int)piVar27);\n            piVar27 = local_d0;\n            if (local_130 != (int *)0x0) goto LAB_080070ba;\nLAB_08007176:\n            if (local_13c == (int **)0x0) {\n              piVar23 = local_140;\n              piVar25 = local_144;\n              piVar28 = (int *)local_150;\n              local_108 = pbVar26;\n              if ((int *)((int)local_140 + (int)local_138) <= piVar16) {\n                piVar16 = (int *)((int)local_140 + (int)local_138);\n              }\n              break;\n            }\nLAB_0800717e:\n            local_13c = (int **)((int)local_13c + -1);\n          } while( true );\n        }\n        if (((int)local_f0 < (int)local_138) || (((uint)piVar25 & 1) != 0)) {\n          local_d4 = (int *)((int)local_d4 + 1);\n          local_d0 = (int *)((int)piVar27 + (int)local_118);\n          *ppiVar2 = local_114;\n          ppiVar2[1] = local_118;\n          if ((int)local_d4 < 8) {\n            ppiVar2 = ppiVar2 + 2;\n            piVar27 = local_d0;\n          }\n          else {\n            iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n            if (iVar3 != 0) goto LAB_0800603e;\n            ppiVar2 = local_cc;\n            piVar27 = local_d0;\n          }\n        }\n        piVar24 = (int *)((int)local_138 - (int)local_f0);\n        piVar22 = (int *)((byte *)((int)piVar23 + (int)local_138) + -(int)piVar16);\n        if ((int)piVar24 <= (int)((byte *)((int)piVar23 + (int)local_138) + -(int)piVar16)) {\n          piVar22 = piVar24;\n        }\n        if (0 < (int)piVar22) {\n          local_d0 = (int *)((int)piVar27 + (int)piVar22);\n          local_d4 = (int *)((int)local_d4 + 1);\n          *ppiVar2 = piVar16;\n          ppiVar2[1] = piVar22;\n          if ((int)local_d4 < 8) {\n            ppiVar2 = ppiVar2 + 2;\n            piVar27 = local_d0;\n          }\n          else {\n            iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n            if (iVar3 != 0) goto LAB_0800603e;\n            ppiVar2 = local_cc;\n            piVar24 = (int *)((int)local_138 - (int)local_f0);\n            piVar27 = local_d0;\n          }\n        }\n        piVar16 = local_160;\n        puVar29 = local_16c;\n        puVar20 = PTR_s_0000000000000000Infinity_08007088;\n        if (-1 < (int)piVar22) {\n          piVar24 = (int *)((int)piVar24 - (int)piVar22);\n        }\n        piVar22 = (int *)PTR_s_0000000000000000Infinity_0800788c;\n        if (0 < (int)piVar24) {\n          for (; local_d0 = piVar27, 0x10 < (int)piVar24; piVar24 = piVar24 + -4) {\n            local_d4 = (int *)((int)local_d4 + 1);\n            local_d0 = local_d0 + 4;\n            *ppiVar2 = (int *)puVar20;\n            ppiVar2[1] = (int *)0x10;\n            if ((int)local_d4 < 8) {\n              ppiVar2 = ppiVar2 + 2;\n            }\n            else {\n              iVar3 = FUN_080097cc(puVar29,piVar16,&local_d8);\n              if (iVar3 != 0) goto LAB_0800603e;\n              ppiVar2 = local_cc;\n            }\n            piVar27 = local_d0;\n            piVar22 = (int *)puVar20;\n          }\n          goto LAB_08007014;\n        }\n      }\n    }\n    else {\n      local_d4 = (int *)((int)local_d4 + 1);\n      local_d0 = (int *)((int)piVar27 + 1);\n      *ppiVar2 = (int *)PTR_DAT_08006a50;\n      ppiVar2[1] = (int *)0x1;\n      if ((int)local_d4 < 8) {\n        ppiVar2 = ppiVar2 + 2;\n      }\n      else {\n        iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n        if (iVar3 != 0) goto LAB_0800603e;\n        ppiVar2 = local_cc;\n      }\n      if (((int)local_f0 < (int)local_138) || (piVar27 = local_d0, ((uint)piVar25 & 1) != 0)) {\n        local_d4 = (int *)((int)local_d4 + 1);\n        local_d0 = (int *)((int)local_d0 + (int)local_118);\n        *ppiVar2 = local_114;\n        ppiVar2[1] = local_118;\n        if ((int)local_d4 < 8) {\n          ppiVar2 = ppiVar2 + 2;\n        }\n        else {\n          iVar3 = FUN_080097cc(local_16c,local_160,&local_d8);\n          if (iVar3 != 0) goto LAB_0800603e;\n          ppiVar2 = local_cc;\n        }\n        piVar16 = local_160;\n        puVar29 = local_16c;\n        puVar20 = PTR_s_0000000000000000Infinity_08006a54;\n        piVar24 = (int *)((int)local_138 + -1);\n        piVar27 = local_d0;\n        piVar22 = (int *)PTR_s_0000000000000000Infinity_0800788c;\n        if (0 < (int)piVar24) {\n          for (; 0x10 < (int)piVar24; piVar24 = piVar24 + -4) {\n            local_d4 = (int *)((int)local_d4 + 1);\n            local_d0 = local_d0 + 4;\n            *ppiVar2 = (int *)puVar20;\n            ppiVar2[1] = (int *)0x10;\n            if ((int)local_d4 < 8) {\n              ppiVar2 = ppiVar2 + 2;\n            }\n            else {\n              iVar3 = FUN_080097cc(puVar29,piVar16,&local_d8);\n              if (iVar3 != 0) goto LAB_0800603e;\n              ppiVar2 = local_cc;\n            }\n            piVar22 = (int *)puVar20;\n          }\nLAB_08007014:\n          local_d0 = (int *)((int)local_d0 + (int)piVar24);\n          *ppiVar2 = piVar22;\n          ppiVar2[1] = piVar24;\njoined_r0x08006a1c:\n          local_d4 = (int *)((int)local_d4 + 1);\n          if (7 < (int)local_d4) goto LAB_08006a20;\n          goto LAB_0800640e;\n        }\n      }\n    }\n  }\n  piVar24 = local_160;\n  puVar29 = local_16c;\n  if ((((uint)piVar25 & 4) != 0) &&\n     (piVar25 = (int *)((int)local_15c - (int)local_168), 0 < (int)piVar25)) {\n    for (; local_d0 = piVar27, 0x10 < (int)piVar25; piVar25 = piVar25 + -4) {\n      while( true ) {\n        local_d4 = (int *)((int)local_d4 + 1);\n        local_d0 = local_d0 + 4;\n        *ppiVar2 = (int *)PTR_s__0000000000000000Infinity_08006720;\n        ppiVar2[1] = (int *)0x10;\n        if ((int)local_d4 < 8) break;\n        iVar3 = FUN_080097cc(puVar29,piVar24,&local_d8);\n        if (iVar3 != 0) goto LAB_0800603e;\n        piVar25 = piVar25 + -4;\n        ppiVar2 = local_cc;\n        if ((int)piVar25 < 0x11) goto LAB_0800647a;\n      }\n      ppiVar2 = ppiVar2 + 2;\n      piVar27 = local_d0;\n    }\nLAB_0800647a:\n    local_d4 = (int *)((int)local_d4 + 1);\n    local_d0 = (int *)((int)local_d0 + (int)piVar25);\n    *ppiVar2 = (int *)PTR_s__0000000000000000Infinity_08006720;\n    ppiVar2[1] = piVar25;\n    piVar27 = local_d0;\n    if ((7 < (int)local_d4) &&\n       (iVar3 = FUN_080097cc(local_16c,local_160,&local_d8), piVar27 = local_d0, iVar3 != 0))\n    goto LAB_0800603e;\n  }\n  piVar24 = local_15c;\n  if ((int)local_15c < (int)local_168) {\n    piVar24 = local_168;\n  }\n  local_164 = local_164 + (int)piVar24;\n  if ((piVar27 == (int *)0x0) || (iVar3 = FUN_080097cc(local_16c,local_160,&local_d8), iVar3 == 0))\n  {\n    local_d4 = (int *)0x0;\n    if (local_148 != (int *)0x0) {\n      FUNC_080088ec(local_16c,local_148);\n    }\n    ppiVar2 = local_cc;\nLAB_0800620e:\n    bVar1 = *(byte *)piVar28;\n    param_3 = piVar28;\n    goto joined_r0x08005ef2;\n  }\nLAB_0800603e:\n  if (local_148 != (int *)0x0) {\n    FUNC_080088ec(local_16c,local_148);\n  }\n  goto LAB_0800604a;\nswitchD_08005f58_caseD_31:\n  local_15c = (int *)0x0;\n  piVar16 = piVar24 + -0xc;\n  piVar22 = piVar28;\n  do {\n    piVar28 = (int *)((int)piVar22 + 1);\n    piVar24 = (int *)(uint)*(byte *)piVar22;\n    local_15c = (int *)((int)piVar16 + (int)local_15c * 10);\n    piVar16 = piVar24 + -0xc;\n    piVar22 = piVar28;\n  } while (piVar16 < (int *)0xa);\n  goto LAB_08005f4e;\nswitchD_08005f58_caseD_20:\n  piVar24 = (int *)(uint)*(byte *)piVar28;\n  if (local_f5 == 0) {\n    local_f5 = 0x20;\n  }\n  goto LAB_08005f4a;\n}\n\n",
            "called": [
                "FUN_080096e0",
                "FUN_080003f4",
                "FUN_080004c8",
                "FUN_080009ac",
                "FUN_0800119c",
                "FUN_080009c0",
                "FUN_0800901c",
                "FUN_080088ec",
                "FUN_08008af8",
                "FUN_080097cc",
                "FUN_08009768",
                "FUN_08000158",
                "FUN_08000998",
                "FUN_08008ad4",
                "FUN_080011ec",
                "FUN_08001170",
                "FUN_08005e40",
                "FUN_080009e8",
                "FUN_080079e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005e9c",
            "calling": [
                "FUN_08005dfc"
            ],
            "imported": false,
            "current_name": "FUNC_08005e9c"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concatenate_08000134",
                "param_1": "x",
                "param_2": "y",
                "DAT_08000144": "global_variable",
                "PTR_FUN_0800014c": "PTR_function",
                "PTR_DAT_08000148": "PTR_data"
            },
            "code": "typedef unsigned long long uint64_t; \n\nuint64_t concatenate_08000134(uint64_t x, uint64_t y){\n  if (DAT_08000144 != 0) {\n    x = PTR_FUN_0800014c;\n    y = PTR_DAT_08000148;\n  }\n  return ((uint64_t)y << 32) | x;\n}",
            "called": [
                "FUN_08009e68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08005d20"
            ],
            "imported": false,
            "current_name": "concatenate_08000134"
        },
        "FUN_08005704": {
            "renaming": {
                "FUN_08005704": "run_program_08005704",
                "FUN_0800157c": "initialize_data",
                "FUN_080017b4": "execute_operations"
            },
            "code": "void run_program_08005704(void)\n{\n  initialize_data();\n  execute_operations();\n  return;\n}",
            "called": [
                "FUN_080017b4",
                "FUN_0800157c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005704",
            "calling": [],
            "imported": false,
            "current_name": "run_program_08005704"
        },
        "FUN_08000418": {
            "renaming": {
                "FUN_08000418": "convert_to_64bit_08000418",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "msb_of_input1",
                "uVar2": "right_shifted_input1_copy",
                "uVar3": "input1_with_msb",
                "uVar4": "right_shifted_input1",
                "uVar5": "left_shifted_input1",
                "uVar7": "shift_amount",
                "iVar6": "leading_zeroes_count",
                "bVar8": "is_shift_amount_zero",
                "bVar9": "is_left_shifted_input1_zero",
                "bVar10": "is_shift_amount_overflow",
                "in_r12": "unused_register"
            },
            "code": "uint64_t convert_to_64bit_08000418(uint32_t input1, uint32_t input2, uint32_t input3, uint32_t input4) {\n    uint32_t left_shifted_input1 = input1 << 1;\n    bool is_left_shifted_input1_zero = left_shifted_input1 == 0;\n    uint32_t msb_of_input1 = (uint32_t)((input1 & 0x80000000) != 0) << 0x1f;\n    uint32_t right_shifted_input1 = (uint32_t)((int)left_shifted_input1 >> 3) >> 1;\n    uint32_t input1_with_msb = msb_of_input1 | right_shifted_input1;\n    input1 = input1 << 0x1d;\n    if (!is_left_shifted_input1_zero) {\n        uint32_t input1_upper_byte = left_shifted_input1 & 0xff000000;\n        is_left_shifted_input1_zero = input1_upper_byte == 0;\n    }\n    if (!is_left_shifted_input1_zero) {\n        is_left_shifted_input1_zero = input1_upper_byte == 0xff000000;\n    }\n    if (!is_left_shifted_input1_zero) {\n        return ((uint64_t)input1_with_msb << 32) | input1) ^ 0x3800000000000000;\n    }\n    if ((left_shifted_input1 & 0xffffff) == 0) {\n        return ((uint64_t)input1_with_msb << 32) | input1;\n    }\n    if (input1_upper_byte == 0xff000000) {\n        return ((uint64_t)input1_with_msb << 32) | input1 | 0x8000000000000;\n    }\n    uint32_t right_shifted_input1_copy = right_shifted_input1;\n    uint32_t input1_copy = input1;\n    if (right_shifted_input1 == 0) {\n        input1_copy = 0;\n        right_shifted_input1_copy = input1;\n    }\n    int leading_zeroes_count = count_leading_zeroes(right_shifted_input1_copy);\n    if (right_shifted_input1 == 0) {\n        leading_zeroes_count += 0x20;\n    }\n    uint32_t shift_amount = leading_zeroes_count - 0xb;\n    bool is_shift_amount_negative = shift_amount < 0;\n    bool is_shift_amount_zero = shift_amount == 0;\n    bool is_shift_amount_overflow = SBORROW4(shift_amount, 0x20);\n    if (leading_zeroes_count < 0x20) {\n        is_shift_amount_overflow = SCARRY4(shift_amount, 0xc);\n        leading_zeroes_count += -0x1f;\n        is_shift_amount_negative = leading_zeroes_count < 0;\n        is_shift_amount_zero = leading_zeroes_count == 0;\n        shift_amount = leading_zeroes_count;\n        if (!is_shift_amount_zero && is_shift_amount_negative == is_shift_amount_overflow) {\n            right_shifted_input1_copy = right_shifted_input1 << (shift_amount & 0xff);\n            right_shifted_input1 = right_shifted_input1 >> (0xcU - leading_zeroes_count & 0xff);\n            goto RETURN_VALUE;\n        }\n    }\n    if (is_shift_amount_zero || is_shift_amount_negative != is_shift_amount_overflow) {\n        uint32_t shift_amount2 = 0x20 - shift_amount;\n        right_shifted_input1_copy = right_shifted_input1 << (shift_amount & 0xff);\n        if (is_shift_amount_zero || is_shift_amount_negative != is_shift_amount_overflow) {\n            right_shifted_input1_copy = right_shifted_input1_copy | input1 >> (shift_amount2 & 0xff);\n        }\n        if (is_shift_amount_zero || is_shift_amount_negative != is_shift_amount_overflow) {\n            input1_copy = input1_copy << (shift_amount & 0xff);\n        }\n    }\n    RETURN_VALUE:\n    if (leading_zeroes_count < 0x381) {\n        return ((uint64_t)right_shifted_input1_copy + (0x380 - leading_zeroes_count) * 0x100000 | msb_of_input1) << 32 | input1_copy;\n    }\n    uint32_t shift_amount3 = ~(0x380 - leading_zeroes_count);\n    if (0x1e < shift_amount3) {\n        return (((uint64_t)input1_with_msb << 32) | right_shifted_input1_copy >> (shift_amount3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n    }\n    int shift_amount4 = shift_amount3 - 0x13;\n    if (shift_amount4 == 0 || shift_amount4 < 0 != SCARRY4(shift_amount3 - 0x1f,0xc)) {\n        shift_amount3 = shift_amount3 + 1;\n        return ((uint64_t)msb_of_input1 | right_shifted_input1_copy >> (shift_amount3 & 0xff)) << 32 | input1_copy >> (shift_amount3 & 0xff) | right_shifted_input1_copy << (0x20 - shift_amount3 & 0xff);\n    }\n    return (((uint64_t)input1_with_msb << 32) | input1_copy >> (0x20 - (0xcU - shift_amount4) & 0xff) | right_shifted_input1_copy << (0xcU - shift_amount4 & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000418",
            "calling": [
                "FUN_08004d78",
                "FUN_08004bd8",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "convert_to_64bit_08000418"
        },
        "FUN_08002ca8": {
            "renaming": {
                "FUN_08002ca8": "check_for_flagged_08002ca8",
                "param_1": "data",
                "param_2": "data_size",
                "param_3": "param_3",
                "iVar1": "random_number",
                "PTR_": "data_",
                "DAT_": "data_"
            },
            "code": "int check_for_flagged_08002ca8(uint *data, uint PTR_size, int param_3)\n{\n    int i;\n    while (true)\n    {\n        if ((data[*data + 0x14] & 0x40) == 0x40)\n        {\n            return 0;\n        }\n        if ((data[*data + 0x14] & 0x10) == 0x10)\n        {\n            break;\n        }\n        if ((PTR_size == 0) || (i = get_random_number(), PTR_size < (uint)(i - param_3)))\n        {\n            data[0x10] |= 0x20;\n            *(undefined *)((int)data + 0x3d) = 0x20;\n            *(undefined *)(data + 0xf) = 0;\n            return 3;\n        }\n    }\n    *(undefined4 *)(data[*data + 0x14]) = 0xffffffef;\n    data[0x10] = 0;\n    data[0xc] = 0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)(data + 0xf) = 0;\n    return 1;\n}",
            "called": [
                "FUN_080015a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ca8",
            "calling": [
                "FUN_08001f6c"
            ],
            "imported": false,
            "current_name": "check_for_flagged_08002ca8"
        },
        "FUN_08003a94": {
            "renaming": {
                "FUN_08003a94": "execute_command_08003a94",
                "param_1": "command",
                "param_2": "args",
                "uVar1": "result",
                "uVar2": "command_type",
                "FUN_080040a0": "execute_subcommand1",
                "FUN_0800416a": "set_command_type",
                "FUN_080041a8": "execute_subcommand2",
                "FUN_08004104": "execute_subcommand3"
            },
            "code": "int execute_command_08003a94(int *command, uint *args)\n{\n    int result = 0;\n    if (*(char *)(command + 0xf) == '\\x01') {\n        result = 2;\n    }\n    else {\n        *(char *)(command + 0xf) = 1;\n        *(char *)((int)command + 0x3d) = 2;\n        *(uint *)(*command + 8) = *(uint *)(*command + 8) & 0xffff0088;\n        uint command_type = *args;\n        if (command_type == 0x40) {\n            execute_subcommand1(*command, args[1], args[3]);\n            set_command_type(*command, 0x40);\n        }\n        else if (command_type < 0x41) {\n            if (command_type == 0x10) {\n                set_command_type(*command, 0x10);\n            }\n            else if (command_type == 0) {\n                set_command_type(*command, 0);\n            }\n            else if (command_type == 0x20) {\n                set_command_type(*command, 0x20);\n            }\n            else if (command_type == 0x30) {\n                set_command_type(*command, 0x30);\n            }\n        }\n        else if (command_type == 0x70) {\n            execute_subcommand2(*command, args[2], args[1], args[3]);\n            *(uint *)(*command + 8) = *(uint *)(*command + 8) & 0xffffff88 | 0x77;\n        }\n        else if (command_type < 0x71) {\n            if (command_type == 0x50) {\n                execute_subcommand1(*command, args[1], args[3]);\n                set_command_type(*command, 0x50);\n            }\n            else if (command_type == 0x60) {\n                execute_subcommand3(*command, args[1], args[3]);\n                set_command_type(*command, 0x60);\n            }\n        }\n        else if (command_type == 0x1000) {\n            *(uint *)(*command + 8) = *(uint *)(*command + 8) & 0xfffffff8;\n        }\n        else if (command_type == 0x2000) {\n            execute_subcommand2(*command, args[2], args[1], args[3]);\n            *(uint *)(*command + 8) = *(uint *)(*command + 8) | 0x4000;\n        }\n        *(char *)((int)command + 0x3d) = 1;\n        *(char *)(command + 0xf) = 0;\n        result = 0;\n    }\n    return result;\n}",
            "called": [
                "FUN_0800416a",
                "FUN_080040a0",
                "FUN_08004104",
                "FUN_080041a8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a94",
            "calling": [
                "FUN_080053b0",
                "FUN_08005500"
            ],
            "imported": false,
            "current_name": "execute_command_08003a94"
        },
        "FUN_0800416a": {
            "renaming": {
                "FUN_0800416a": "set_param_value_and_mask_0800416a",
                "param_1": "param_base_address",
                "param_2": "new_param_value",
                "PTR_": "param_",
                "DAT_": "data_",
                "uint": "uint32_t",
                "ushort": "uint16_t"
            },
            "code": "void set_param_value_and_mask_0800416a(uint32_t *PTR_base_address, uint16_t new_PTR_value) {\n  uint32_t *PTR_value_ptr = PTR_base_address + 2;\n  uint32_t old_value = *PTR_value_ptr;\n  *PTR_value_ptr = (old_value & 0xffffff8f) | (new_PTR_value | 7);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800416a",
            "calling": [
                "FUN_08003a94"
            ],
            "imported": false,
            "current_name": "set_param_value_and_mask_0800416a"
        },
        "FUN_080055f4": {
            "renaming": {
                "FUN_080055f4": "set_flags_and_call_functions_080055f4",
                "local_18": "local_variable_1",
                "local_14": "local_variable_2",
                "local_c": "local_variable_3",
                "DAT_0800566c": "data_pointer_1",
                "DAT_08005670": "data_pointer_2"
            },
            "code": "void set_flags_and_call_functions_080055f4(void)\n{\n  uint32_t flags = *(uint32_t *)(DAT_0800566c + 0x18);\n  flags |= 0x20;\n  flags |= 4;\n  flags |= 8;\n  bool condition = (flags & 8) != 0;\n  FUN_08001a80(DAT_08005670, 0x1e, 0, condition);\n  uint32_t local_18 = 0x1e;\n  uint32_t local_14 = 1;\n  uint32_t local_c = 2;\n  FUN_080017c4(DAT_08005670, &local_18);\n  return;\n}",
            "called": [
                "FUN_08001a80",
                "FUN_080017c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080055f4",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_080055f4"
        },
        "FUN_080059f0": {
            "renaming": {
                "FUN_080059f0": "FUNC_080059f0"
            },
            "code": "\nulonglong FUNC_080059f0(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  int iVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  ulonglong uVar11;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar7 = param_2 & 0x7fffffff;\n  if (DAT_08005cd8 < (int)uVar7) {\n    if ((uVar7 == DAT_08005cdc || (int)uVar7 < (int)DAT_08005cdc) &&\n       ((uVar7 != DAT_08005cdc || (param_1 == 0)))) {\n      uVar1 = DAT_08005ce4;\n      if (0 < (int)param_2) {\n        uVar1 = DAT_08005ce0;\n      }\n      return CONCAT44(uVar1,DAT_08005ce8);\n    }\n    uVar11 = FUNC_0800015c(param_1,param_2,param_1,param_2,param_4);\n  }\n  else {\n    if (DAT_08005cec < (int)uVar7) {\n      uVar9 = do_nothing_08005d0c();\n      uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar1 = (undefined4)uVar9;\n      if (DAT_08005cfc < (int)uVar7) {\n        if (DAT_08005d00 < (int)uVar7) {\n          uVar9 = FUNC_0800071c(0,DAT_08005d08,uVar1,uVar4);\n          iVar8 = 3;\n        }\n        else {\n          uVar9 = FUNC_08000158(uVar1,uVar4,0,DAT_08005d04);\n          uVar10 = FUNC_080004c8(uVar1,uVar4,0,DAT_08005d04);\n          uVar10 = FUNC_0800015c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005cf8);\n          uVar9 = FUNC_0800071c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar8 = 2;\n        }\n      }\n      else if (DAT_08005cfc + -0xd0000 < (int)uVar7) {\n        uVar9 = FUNC_08000158(uVar1,uVar4,0,DAT_08005cf8);\n        uVar10 = FUNC_0800015c(uVar1,uVar4,0,DAT_08005cf8);\n        uVar9 = FUNC_0800071c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar8 = 1;\n      }\n      else {\n        uVar9 = FUNC_0800015c(uVar1,uVar4,uVar1,uVar4);\n        uVar9 = FUNC_08000158((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_08005cf8);\n        uVar10 = FUNC_0800015c(uVar1,uVar4,0,0x40000000);\n        uVar9 = FUNC_0800071c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar8 = 0;\n      }\n    }\n    else {\n      if ((int)uVar7 <= DAT_08005cec + -0x1bc0000) {\n        uVar10 = FUNC_0800015c(param_1,param_2,DAT_08005cd0,DAT_08005cd4,param_4);\n        iVar8 = FUN_080009e8((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005cf8);\n        if (iVar8 != 0) {\n          return CONCAT44(param_2,param_1);\n        }\n      }\n      iVar8 = -1;\n    }\n    uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar5 = (undefined4)uVar9;\n    uVar9 = FUNC_080004c8(uVar5,uVar6,uVar5,uVar6);\n    uVar2 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar1 = (undefined4)uVar9;\n    uVar9 = FUNC_080004c8(uVar1,uVar2,uVar1,uVar2);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar4 = (undefined4)uVar9;\n    uVar9 = FUNC_080004c8(uVar4,uVar3,DAT_08005c78,DAT_08005c7c);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_08005c80,DAT_08005c84);\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar4,uVar3);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_08005c88,DAT_08005c8c);\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar4,uVar3);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_08005c90,DAT_08005c94);\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar4,uVar3);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_08005c98,DAT_08005c9c);\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar4,uVar3);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_08005ca0,DAT_08005ca4);\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar1,uVar2);\n    uVar10 = FUNC_080004c8(uVar4,uVar3,DAT_08005ca8,DAT_08005cac);\n    uVar10 = FUNC_08000158((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005cb0,DAT_08005cb4);\n    uVar10 = FUNC_080004c8((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar4,uVar3);\n    uVar10 = FUNC_08000158((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005cb8,DAT_08005cbc);\n    uVar10 = FUNC_080004c8((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar4,uVar3);\n    uVar10 = FUNC_08000158((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005cc0,DAT_08005cc4);\n    uVar10 = FUNC_080004c8((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar4,uVar3);\n    uVar10 = FUNC_08000158((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005cc8,DAT_08005ccc);\n    uVar10 = FUNC_080004c8((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar4,uVar3);\n    uVar9 = FUNC_0800015c((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n    uVar9 = FUNC_080004c8((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar5,uVar6);\n    uVar1 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    if (iVar8 == -1) {\n      uVar11 = FUNC_08000158(uVar5,uVar6,(int)uVar9,uVar1);\n      return uVar11;\n    }\n    uVar9 = FUNC_08000158((int)uVar9,uVar1,*(undefined4 *)(PTR_DAT_08005cf0 + iVar8 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_08005cf0 + iVar8 * 8) + 4));\n    uVar9 = FUNC_08000158((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar5,uVar6);\n    uVar11 = FUNC_08000158(*(undefined4 *)(PTR_DAT_08005cf4 + iVar8 * 8),\n                          *(undefined4 *)((int)(PTR_DAT_08005cf4 + iVar8 * 8) + 4),(int)uVar9,\n                          (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return uVar11 & 0xffffffff | (ulonglong)((int)(uVar11 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar11;\n}\n\n",
            "called": [
                "FUN_08005d0c",
                "FUN_0800015c",
                "FUN_08000158",
                "FUN_080004c8",
                "FUN_0800071c",
                "FUN_080009e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080059f0",
            "calling": [
                "FUN_08005838"
            ],
            "imported": false,
            "current_name": "FUNC_080059f0"
        },
        "FUN_080053b0": {
            "renaming": {
                "FUN_080053b0": "initialize_data_and_check_errors_080053b0",
                "iVar1": "error_code",
                "local_18": "page_size",
                "PTR_DAT_080054f4": "DATA_POINTER",
                "DAT_080054f8": "DATA_VALUE_1",
                "PTR_s____src_main_c_080054fc": "ERROR_MESSAGE_1",
                "399": "ERROR_CODE_1",
                "local_3c": "buffer_size",
                "local_38": "buffer_offset",
                "local_34": "buffer_size_offset",
                "local_30": "data_offset",
                "local_2c": "data_size_offset",
                "local_28": "data_size_offset_2",
                "local_24": "data_size_offset_3",
                "local_58": "data_size",
                "local_54": "data_size_offset",
                "local_50": "data_size_offset_2",
                "local_4c": "data_size_offset_3",
                "local_48": "data_size_offset_4",
                "local_44": "data_size_offset_5",
                "local_40": "data_size_offset_6",
                "FUN_080035a4": "check_data_pointer",
                "FUN_08005674": "print_error",
                "FUN_08003a94": "set_page_protection",
                "FUN_08003640": "set_heap_size",
                "FUN_080042de": "set_data_pointer_offset",
                "FUN_08003908": "set_data_section_size",
                "FUN_0800422e": "set_data_buffer",
                "FUN_08005680": "finalize_data_pointer"
            },
            "code": "void initialize_data_and_check_errors_080053b0(void)\n{\n  int error_code;\n  int page_size = 0x1000;\n  int buffer_size = 0x60;\n  int buffer_offset = 0;\n  int buffer_size_offset = 0xc;\n  int data_size = 0x2000;\n  int data_offset = 0;\n  int data_size_offset = 0x58;\n  int data_size_offset_2 = 0x44;\n  int data_size_offset_3 = 0;\n  int* data_pointer = (int*) PTR_DAT_080054f4;\n\n  data_pointer[0] = DAT_080054f8;\n  data_pointer[1] = DATA_VALUE_2;\n  data_pointer[2] = 0;\n  data_pointer[3] = 100;\n  data_pointer[4] = 0;\n  data_pointer[5] = 0;\n  data_pointer[6] = 0;\n\n  error_code = check_data_pointer(data_pointer);\n  if (error_code != 0) {\n    print_error(PTR_s____src_main_c_080054fc, ERROR_CODE_1);\n  }\n\n  error_code = set_page_protection(data_pointer, &page_size);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_2, ERROR_CODE_2);\n  }\n\n  error_code = set_heap_size(data_pointer);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_3, ERROR_CODE_3);\n  }\n\n  error_code = set_data_section_size(data_pointer, &data_size, &data_size_offset);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_4, ERROR_CODE_4);\n  }\n\n  error_code = set_data_section_size(data_pointer, &buffer_size, &buffer_size_offset);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_5, ERROR_CODE_5);\n  }\n\n  error_code = set_data_section_size(data_pointer, &data_size_offset_2, &data_size_offset_3);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_6, ERROR_CODE_6);\n  }\n\n  error_code = set_data_pointer_offset(data_pointer, &data_offset);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_7, ERROR_CODE_7);\n  }\n\n  error_code = set_data_buffer(data_pointer, &buffer_size, &buffer_offset);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_8, ERROR_CODE_8);\n  }\n\n  error_code = set_data_buffer(data_pointer, &data_size_offset_2, &data_size_offset);\n  if (error_code != 0) {\n    print_error(ERROR_MESSAGE_9, ERROR_CODE_9);\n  }\n\n  finalize_data_pointer(data_pointer);\n}\n",
            "called": [
                "FUN_08003640",
                "FUN_08003a94",
                "FUN_080042de",
                "FUN_08005674",
                "FUN_0800422e",
                "FUN_08005680",
                "FUN_080035a4",
                "FUN_08003908"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080053b0",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "initialize_data_and_check_errors_080053b0"
        },
        "FUN_08009e74": {
            "renaming": {
                "FUN_08009e74": "do_nothing_08009e74"
            },
            "code": "\nvoid do_nothing_08009e74(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009e74",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08009e74"
        },
        "FUN_0800088a": {
            "renaming": {
                "FUN_0800088a": "calculate_result_0800088a",
                "param_1": "x1",
                "param_2": "x2",
                "param_3": "x3",
                "param_4": "x4",
                "in_r12": "bit_mask",
                "unaff_r4": "result",
                "uVar1": "bit",
                "uVar2": "bit_mask_temp",
                "uVar3": "result_temp",
                "bVar4": "is_zero",
                "LAB_080006fc": "return_case1",
                "LAB_080006c0": "return_case2",
                "CONCAT44": "concatenate_64_bits"
            },
            "code": "unsigned long long calculate_result_0800088a(uint x1, uint x2, uint x3, uint x4) {\n    uint bit_mask = 0xfffc0000 & x4;\n    uint result = x2;\n    if (x1 != x3 || bit_mask != x3) {\n        if (x1 == x3) {\n            if ((x1 | (x2 << 12)) == 0 && bit_mask != x3) {\n                return (unsigned long long)((x2 ^ x4) & 0x80000000 | 0x7ff00000) << 0x20;\n            }\n        }\n        else if (bit_mask == x3) {\n            x1 = x3;\n            result = x4;\n            if ((x3 | (x4 << 12)) == 0) {\n                return (unsigned long long)((x2 ^ x4) & 0x80000000) << 0x20;\n            }\n        }\n        else {\n            bool is_zero1 = (x1 | (x2 << 1)) == 0;\n            bool is_zero2 = (x3 | (x4 << 1)) == 0;\n            if (!is_zero1 && !is_zero2) {\n                if (x1 == 0) {\n                    uint temp = x2 & 0x80000000;\n                    do {\n                        uint bit = x1 & 0x80000000;\n                        x1 = x1 << 1;\n                        x2 = x2 * 2 + (uint)(bit != 0);\n                    } while ((x2 & 0x100000) == 0);\n                    x2 = x2 | temp;\n                    if (bit_mask != 0) {\n                        return ((unsigned long long)x2 << 32) | x1;\n                    }\n                }\n                do {\n                    uint bit = x3 & 0x80000000;\n                    x3 = x3 << 1;\n                    x4 = x4 * 2 + (uint)(bit != 0);\n                } while ((x4 & 0x100000) == 0);\n                return ((unsigned long long)x2 << 32) | x1;\n            }\n            if ((x1 | (x2 << 1)) != 0) {\n                goto LAB_080006fc;\n            }\n            if ((x3 | (x4 << 1)) != 0) {\n                goto LAB_080006c0;\n            }\n        }\n    }\n    return ((unsigned long long)result << 32) | x1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800088a",
            "calling": [
                "FUN_0800071c"
            ],
            "imported": false,
            "current_name": "calculate_result_0800088a"
        },
        "FUN_080016d0": {
            "renaming": {
                "FUN_080016d0": "is_valid_input_080016d0",
                "param_1": "input",
                "bVar1": "is_within_range",
                "DAT_08001710": "array_of_integers"
            },
            "code": "bool is_valid_input_080016d0(int input) {\n  bool is_within_range = input - 1U < 0x1000000;\n  if (is_within_range) {\n    DAT_08001710[1] = input - 1;\n    set_flags(0xffffffff, 0xf);\n    DAT_08001710[2] = 0;\n    *DAT_08001710 = 7;\n  }\n  return !is_within_range;\n}",
            "called": [
                "FUN_08001618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016d0",
            "calling": [
                "FUN_08001762"
            ],
            "imported": false,
            "current_name": "is_valid_input_080016d0"
        },
        "FUN_08001ccc": {
            "renaming": {
                "FUN_08001ccc": "decode_08001ccc",
                "param_1": "param_array",
                "param_2": "data_array",
                "param_3": "param_2",
                "param_4": "param_3",
                "param_5": "param_4",
                "param_6": "param_5",
                "param_7": "start_time",
                "uVar1": "mask",
                "iVar2": "start_time",
                "uVar4": "decoded_value",
                "bVar8": "is_zero",
                "cVar3": "decoded_char",
                "iVar5": "result",
                "uVar6": "decode_result",
                "puVar7": "data_ptr",
                "end_time": "end_time",
                "decode_result": "decode_result",
                "decode_byte_result": "decode_byte_result",
                "decode_final_result": "decode_final_result"
            },
            "code": "uint decode_08001ccc(uint **param_array, uint *data_array, uint param_2, uint param_3, uint param_4, uint param_5, uint param_6)\\n\\\n{\\n\\\n    uint decode_08001cccd_value;\\n\\\n    int start_time = get_time();\\n\\\n    uint mask = DAT_08001f64;\\n\\\n    if (*(char *)((int)param_array + 0x3d) != \" \")\\n\\\n        return 2;\\n\\\n    while (1)\\n\\\n    {\\n\\\n        if ((mask >> 0x10 & 0xff) == 1)\\n\\\n            decode_08001cccd_value = mask & ~(*param_array)[5] & 0xffff;\\n\\\n        else\\n\\\n            decode_08001cccd_value = mask & ~(*param_array)[6] & 0xffff;\\n\\\n        if (decode_08001cccd_value == 0)\\n\\\n            decode_08001cccd_value = 1;\\n\\\n        else\\n\\\n            decode_08001cccd_value = 0;\\n\\\n        if (decode_08001cccd_value != 1)\\n\\\n            break;\\n\\\n        int end_time = get_time();\\n\\\n        if ((uint)(end_time - start_time) >= 0x1a)\\n\\\n            return 2;\\n\\\n    }\\n\\\n    param_array[0xc] = (uint *)0x0;\\n\\\n    *(undefined *)((int)param_array + 0x3d) = 0x20;\\n\\\n    *(undefined *)((int)param_array + 0x3e) = 0;\\n\\\n    *(undefined *)(param_array + 0xf) = 0;\\n\\\n    int result = 3;\\n\\\n    if (FUN_080015a0() == 0)\\n\\\n    {\\n\\\n        if (*(char *)(param_array + 0xf) == \"\\x01\")\\n\\\n            result = 2;\\n\\\n        else\\n\\\n        {\\n\\\n            *(undefined *)(param_array + 0xf) = 1;\\n\\\n            if ((**param_array & 1) != 1)\\n\\\n                **param_array = **param_array | 1;\\n\\\n            **param_array = **param_array & 0xfffff7ff;\\n\\\n            *(undefined *)((int)param_array + 0x3d) = 0x21;\\n\\\n            *(undefined *)((int)param_array + 0x3e) = 0x40;\\n\\\n            param_array[0x10] = (uint *)0x0;\\n\\\n            param_array[9] = data_array;\\n\\\n            *(undefined2 *)((int)param_array + 0x2a) = param_6;\\n\\\n            param_array[0xb] = DAT_08001f68;\\n\\\n            *(undefined2 *)(param_array + 10) = *(undefined2 *)((int)param_array + 0x2a);\\n\\\n            int decode_08001ccc_result = FUN_08002640(param_array, param_2, param_3, param_4, param_5, start_time);\\n\\\n            if (decode_08001ccc_result == 0)\\n\\\n            {\\n\\\n                while (*(short *)(param_array + 10) != 0)\\n\\\n                {\\n\\\n                    int decode_08001ccc_byte_result = FUN_08002bb4(param_array, param_5, start_time);\\n\\\n                    if (decode_08001ccc_byte_result != 0)\\n\\\n                    {\\n\\\n                        if (param_array[0x10] == (uint *)0x4)\\n\\\n                            return 1;\\n\\\n                        return 3;\\n\\\n                    }\\n\\\n                    uint *data_ptr = param_array[9];\\n\\\n                    param_array[9] = (uint *)((int)data_ptr + 1);\\n\\\n                    (*param_array)[4] = (uint)*(byte *)data_ptr;\\n\\\n                    *(short *)(param_array + 10) = *(short *)(param_array + 10) + -1;\\n\\\n                    *(short *)((int)param_array + 0x2a) = *(short *)((int)param_array + 0x2a) + -1;\\n\\\n                    if ((((*param_array)[5] & 4) == 4) && (*(short *)(param_array + 10) != 0))\\n\\\n                    {\\n\\\n                        data_ptr = param_array[9];\\n\\\n                        param_array[9] = (uint *)((int)data_ptr + 1);\\n\\\n                        (*param_array)[4] = (uint)*(byte *)data_ptr;\\n\\\n                        *(short *)(param_array + 10) = *(short *)(param_array + 10) + -1;\\n\\\n                        *(short *)((int)param_array + 0x2a) = *(short *)((int)param_array + 0x2a) + -1;\\n\\\n                    }\\n\\\n                }\\n\\\n                int decode_08001ccc_final_result = FUN_08002c2e(param_array, param_5, start_time);\\n\\\n                if (decode_08001ccc_final_result == 0)\\n\\\n                {\\n\\\n                    *(undefined *)((int)param_array + 0x3d) = 0x20;\\n\\\n                    *(undefined *)((int)param_array + 0x3e) = 0;\\n\\\n                    *(undefined *)(param_array + 0xf) = 0;\\n\\\n                    result = 0;\\n\\\n                }\\n\\\n                else if (param_array[0x10] == (uint *)0x4)\\n\\\n                    result = 1;\\n\\\n                else\\n\\\n                    result = 3;\\n\\\n            }\\n\\\n            else if (param_array[0x10] == (uint *)0x4)\\n\\\n            {\\n\\\n                *(undefined *)(param_array + 0xf) = 0;\\n\\\n                result = 1;\\n\\\n            }\\n\\\n            else\\n\\\n            {\\n\\\n                *(undefined *)(param_array + 0xf) = 0;\\n\\\n                result = 3;\\n\\\n            }\\n\\\n        }\\n\\\n    }\\n\\\n    else\\n\\\n        result = 2;\\n\\\n    return result;\\n\\\n}",
            "called": [
                "FUN_08002640",
                "FUN_08002c2e",
                "FUN_080015a0",
                "FUN_08002bb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ccc",
            "calling": [
                "FUN_08004ea4"
            ],
            "imported": false,
            "current_name": "decode_08001ccc"
        },
        "FUN_0800157c": {
            "renaming": {
                "FUN_0800157c": "update_value_of_pointer_0800157c",
                "PTR_DAT_0800159c": "pointer_value",
                "PTR_DAT_08001598": "byte_pointer_value",
                "int": "integer_value",
                "byte": "byte_value",
                "uint": "updated_value"
            },
            "code": "void update_value_of_pointer_0800157c(void)\n{\n  uint* PTR_DAT_0800159c = (uint *)PTR_DAT_0800159c;\n  int* int_PTR_DAT_0800159c = (int *)PTR_DAT_0800159c;\n  byte* PTR_DAT_08001598 = (byte *)PTR_DAT_08001598;\n  int integer_value = *int_PTR_DAT_0800159c;\n  byte byte_value = *PTR_DAT_08001598;\n  uint updated_value = integer_value + (uint)byte_value;\n  *PTR_DAT_0800159c = updated_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800157c",
            "calling": [
                "FUN_08005704"
            ],
            "imported": false,
            "current_name": "update_value_of_pointer_0800157c"
        },
        "FUN_08000e20": {
            "renaming": {
                "FUN_08000e20": "FUNC_08000e20"
            },
            "code": "\nuint FUNC_08000e20(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e16:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000dcc:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e16;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e38;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000dcc;\n        goto LAB_08000e16;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e38:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e20",
            "calling": [
                "FUN_08004d78",
                "FUN_080049cc"
            ],
            "imported": false,
            "current_name": "FUNC_08000e20"
        },
        "FUN_0800121c": {
            "renaming": {
                "FUN_0800121c": "FUNC_0800121c"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080014b2) */\n\nundefined8 FUNC_0800121c(uint param_1,uint param_2,uint param_3,uint param_4,uint *param_5)\n\n{\n  code *UNRECOVERED_JUMPTABLE;\n  ulonglong uVar1;\n  uint uVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint *puVar9;\n  uint *puVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  undefined8 uVar15;\n  \n  if (param_4 == 0) {\n    if (param_2 < param_3) {\n      uVar6 = count_leading_zeroes(param_3);\n      if (uVar6 != 0) {\n        param_3 = param_3 << (uVar6 & 0xff);\n        param_2 = param_1 >> (0x20 - uVar6 & 0xff) | param_2 << (uVar6 & 0xff);\n        param_1 = param_1 << (uVar6 & 0xff);\n      }\n      uVar12 = param_3 >> 0x10;\n      uVar8 = param_2 / uVar12;\n      uVar11 = uVar8 * (param_3 & 0xffff);\n      uVar7 = param_1 >> 0x10 | (param_2 - uVar12 * uVar8) * 0x10000;\n      uVar4 = uVar8;\n      if (uVar7 <= uVar11 && uVar11 - uVar7 != 0) {\n        bVar14 = CARRY4(param_3,uVar7);\n        uVar7 = param_3 + uVar7;\n        uVar4 = uVar8 - 1;\n        if ((bVar14 == false) && (uVar7 <= uVar11 && uVar11 - uVar7 != 0)) {\n          uVar4 = uVar8 - 2;\n          uVar7 = uVar7 + param_3;\n        }\n      }\n      uVar2 = (uVar7 - uVar11) / uVar12;\n      uVar5 = uVar2 * (param_3 & 0xffff);\n      uVar8 = param_1 & 0xffff | ((uVar7 - uVar11) - uVar12 * uVar2) * 0x10000;\n      uVar7 = uVar2;\n      if (uVar8 <= uVar5 && uVar5 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar7 = uVar2 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar5 && uVar5 - uVar8 != 0)) {\n          uVar7 = uVar2 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      puVar3 = (uint *)(uVar7 | uVar4 << 0x10);\n      puVar9 = (uint *)0x0;\n      uVar8 = uVar8 - uVar5;\n    }\n    else {\n      if (param_3 == 0) {\n                    /* WARNING: Could not recover jumptable at 0x08001302. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        UNRECOVERED_JUMPTABLE = (code *)software_udf(0xff,0x8001302);\n        uVar15 = (*UNRECOVERED_JUMPTABLE)();\n        return uVar15;\n      }\n      uVar6 = count_leading_zeroes(param_3);\n      if (uVar6 == 0) {\n        puVar9 = (uint *)0x1;\n        param_2 = param_2 - param_3;\n        uVar12 = param_3 >> 0x10;\n        uVar2 = param_3 & 0xffff;\n      }\n      else {\n        param_3 = param_3 << (uVar6 & 0xff);\n        uVar4 = param_2 >> (0x20 - uVar6 & 0xff);\n        uVar12 = param_3 >> 0x10;\n        uVar11 = uVar4 / uVar12;\n        uVar2 = param_3 & 0xffff;\n        uVar5 = uVar11 * uVar2;\n        uVar8 = param_1 >> (0x20 - uVar6 & 0xff) | param_2 << (uVar6 & 0xff);\n        uVar7 = uVar8 >> 0x10 | (uVar4 - uVar12 * uVar11) * 0x10000;\n        param_1 = param_1 << (uVar6 & 0xff);\n        uVar4 = uVar11;\n        if (uVar7 <= uVar5 && uVar5 - uVar7 != 0) {\n          bVar14 = CARRY4(param_3,uVar7);\n          uVar7 = param_3 + uVar7;\n          uVar4 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar5 && uVar5 - uVar7 != 0)) {\n            uVar4 = uVar11 - 2;\n            uVar7 = uVar7 + param_3;\n          }\n        }\n        uVar11 = (uVar7 - uVar5) / uVar12;\n        uVar13 = uVar11 * uVar2;\n        param_2 = uVar8 & 0xffff | ((uVar7 - uVar5) - uVar12 * uVar11) * 0x10000;\n        uVar7 = uVar11;\n        if (param_2 <= uVar13 && uVar13 - param_2 != 0) {\n          bVar14 = CARRY4(param_3,param_2);\n          param_2 = param_3 + param_2;\n          uVar7 = uVar11 - 1;\n          if ((bVar14 == false) && (param_2 <= uVar13 && uVar13 - param_2 != 0)) {\n            uVar7 = uVar11 - 2;\n            param_2 = param_2 + param_3;\n          }\n        }\n        param_2 = param_2 - uVar13;\n        puVar9 = (uint *)(uVar7 | uVar4 << 0x10);\n      }\n      uVar11 = param_2 / uVar12;\n      uVar7 = uVar2 * uVar11;\n      uVar8 = param_1 >> 0x10 | (param_2 - uVar12 * uVar11) * 0x10000;\n      uVar4 = uVar11;\n      if (uVar8 <= uVar7 && uVar7 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar4 = uVar11 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar7 && uVar7 - uVar8 != 0)) {\n          uVar4 = uVar11 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      uVar11 = (uVar8 - uVar7) / uVar12;\n      uVar2 = uVar2 * uVar11;\n      uVar8 = param_1 & 0xffff | ((uVar8 - uVar7) - uVar12 * uVar11) * 0x10000;\n      uVar7 = uVar11;\n      if (uVar8 <= uVar2 && uVar2 - uVar8 != 0) {\n        bVar14 = CARRY4(param_3,uVar8);\n        uVar8 = param_3 + uVar8;\n        uVar7 = uVar11 - 1;\n        if ((bVar14 == false) && (uVar8 <= uVar2 && uVar2 - uVar8 != 0)) {\n          uVar7 = uVar11 - 2;\n          uVar8 = uVar8 + param_3;\n        }\n      }\n      uVar8 = uVar8 - uVar2;\n      puVar3 = (uint *)(uVar7 | uVar4 << 0x10);\n    }\n    if (param_5 != (uint *)0x0) {\n      *param_5 = uVar8 >> (uVar6 & 0xff);\n      param_5[1] = 0;\n    }\n  }\n  else {\n    puVar9 = param_5;\n    if (param_2 < param_4) {\n      puVar3 = param_5;\n      if (param_5 != (uint *)0x0) {\n        *param_5 = param_1;\n        param_5[1] = param_2;\n        return 0;\n      }\n    }\n    else {\n      puVar10 = (uint *)count_leading_zeroes(param_4);\n      if (puVar10 == (uint *)0x0) {\n        if ((param_4 < param_2) || (puVar3 = puVar10, param_3 <= param_1)) {\n          bVar14 = param_1 < param_3;\n          param_1 = param_1 - param_3;\n          param_2 = (param_2 - param_4) - (uint)bVar14;\n          puVar3 = (uint *)0x1;\n        }\n        puVar9 = puVar10;\n        if (param_5 != (uint *)0x0) {\n          *param_5 = param_1;\n          param_5[1] = param_2;\n        }\n      }\n      else {\n        uVar8 = 0x20 - (int)puVar10;\n        uVar2 = param_3 >> (uVar8 & 0xff) | param_4 << ((uint)puVar10 & 0xff);\n        uVar6 = param_2 >> (uVar8 & 0xff);\n        uVar5 = uVar2 >> 0x10;\n        uVar11 = uVar6 / uVar5;\n        uVar12 = uVar11 * (uVar2 & 0xffff);\n        uVar4 = param_2 << ((uint)puVar10 & 0xff) | param_1 >> (uVar8 & 0xff);\n        uVar7 = uVar4 >> 0x10 | (uVar6 - uVar5 * uVar11) * 0x10000;\n        param_3 = param_3 << ((uint)puVar10 & 0xff);\n        param_1 = param_1 << ((uint)puVar10 & 0xff);\n        uVar6 = uVar11;\n        if (uVar7 <= uVar12 && uVar12 - uVar7 != 0) {\n          bVar14 = CARRY4(uVar2,uVar7);\n          uVar7 = uVar2 + uVar7;\n          uVar6 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar12 && uVar12 - uVar7 != 0)) {\n            uVar6 = uVar11 - 2;\n            uVar7 = uVar7 + uVar2;\n          }\n        }\n        uVar11 = (uVar7 - uVar12) / uVar5;\n        uVar13 = uVar11 * (uVar2 & 0xffff);\n        uVar7 = uVar4 & 0xffff | ((uVar7 - uVar12) - uVar5 * uVar11) * 0x10000;\n        uVar4 = uVar11;\n        if (uVar7 <= uVar13 && uVar13 - uVar7 != 0) {\n          bVar14 = CARRY4(uVar2,uVar7);\n          uVar7 = uVar2 + uVar7;\n          uVar4 = uVar11 - 1;\n          if ((bVar14 == false) && (uVar7 <= uVar13 && uVar13 - uVar7 != 0)) {\n            uVar4 = uVar11 - 2;\n            uVar7 = uVar7 + uVar2;\n          }\n        }\n        puVar3 = (uint *)(uVar4 | uVar6 << 0x10);\n        uVar1 = ZEXT48(puVar3) * (ulonglong)param_3;\n        if (CONCAT44(uVar7 - uVar13,param_1) < uVar1) {\n          puVar3 = (uint *)((int)puVar3 + -1);\n          uVar1 = uVar1 - CONCAT44(uVar2,param_3);\n        }\n        if (param_5 != (uint *)0x0) {\n          uVar6 = ((uVar7 - uVar13) - (int)(uVar1 >> 0x20)) - (uint)(param_1 < (uint)uVar1);\n          *param_5 = uVar6 << (uVar8 & 0xff) | param_1 - (uint)uVar1 >> ((uint)puVar10 & 0xff);\n          param_5[1] = uVar6 >> ((uint)puVar10 & 0xff);\n          puVar9 = (uint *)0x0;\n        }\n      }\n    }\n  }\n  return CONCAT44(puVar9,puVar3);\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800121c",
            "calling": [
                "FUN_080011ec"
            ],
            "imported": false,
            "current_name": "FUNC_0800121c"
        },
        "FUN_08005d14": {
            "renaming": {
                "FUN_08005d14": "get_value_from_pointer_08005d14",
                "PTR_PTR_DAT_08005d1c": "ptr"
            },
            "code": "int get_value_from_pointer_08005d14() {\n  int* PTR_PTR_DAT_08005d1c = (int*) PTR_PTR_DAT_08005d1c;\n  int value = *PTR_PTR_DAT_08005d1c;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d14",
            "calling": [
                "FUN_08005728"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005d14"
        },
        "FUN_080015b4": {
            "renaming": {
                "FUN_080015b4": "update_register_value_080015b4",
                "param_1": "value",
                "DAT_080015f8": "register_base_address",
                "PTR_080015f8": "register_pointer"
            },
            "code": "void update_register_value_080015b4(uint value)\n{\n    uint *register_ptr = (uint *)(DAT_080015f8 + 0xc);\n    uint current_value = *register_ptr;\n    uint mask = 0xf8ff;\n    uint shifted_value = (value & 7) << 8;\n    uint new_value = (current_value & mask) | shifted_value | 0x5fa0000;\n    *register_ptr = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015b4",
            "calling": [
                "FUN_08001714"
            ],
            "imported": false,
            "current_name": "update_register_value_080015b4"
        },
        "FUN_080036f8": {
            "renaming": {
                "FUN_080036f8": "process_flags_080036f8",
                "param_1": "param_flags",
                "*(uint *)(*param_1 + 0x10)": "*ptr_flags3",
                "*(uint *)(*param_1 + 0xc)": "*ptr_flags2",
                "*(uint *)(*param_1 + 0x18)": "*ptr_flags4",
                "*(uint *)(*param_1 + 0x1c)": "*ptr_flags5",
                "*(undefined *)(param_1 + 7)": "*ptr_flags6"
            },
            "code": "void process_flags_080036f8(int *param_flags)\n{\n  uint32_t *ptr_flags = (uint32_t *)(*param_flags);\n  uint32_t *ptr_flags2 = (uint32_t *)(*param_flags + 0xc);\n  uint32_t *ptr_flags3 = (uint32_t *)(*param_flags + 0x10);\n  uint32_t *ptr_flags4 = (uint32_t *)(*param_flags + 0x18);\n  uint32_t *ptr_flags5 = (uint32_t *)(*param_flags + 0x1c);\n\n  if ((*ptr_flags2 & 2) && (*ptr_flags3 & 2))\n  {\n    *ptr_flags3 = 0xfffffffd;\n    uint8_t *ptr_flags6 = (uint8_t *)(param_flags + 7);\n    *ptr_flags6 = 1;\n    if ((*ptr_flags4 & 3) == 0)\n    {\n      do_nothing_08003c4a(param_flags);\n      do_nothing_08003c6e(param_flags);\n    }\n    else\n    {\n      do_nothing_08003c5c(param_flags);\n    }\n    *ptr_flags6 = 0;\n  }\n  if ((*ptr_flags2 & 4) && (*ptr_flags3 & 4))\n  {\n    *ptr_flags3 = 0xfffffffb;\n    uint8_t *ptr_flags6 = (uint8_t *)(param_flags + 7);\n    *ptr_flags6 = 2;\n    if ((*ptr_flags4 & 0x300) == 0)\n    {\n      do_nothing_08003c4a(param_flags);\n      do_nothing_08003c6e(param_flags);\n    }\n    else\n    {\n      do_nothing_08003c5c(param_flags);\n    }\n    *ptr_flags6 = 0;\n  }\n  if ((*ptr_flags2 & 8) && (*ptr_flags3 & 8))\n  {\n    *ptr_flags3 = 0xfffffff7;\n    uint8_t *ptr_flags6 = (uint8_t *)(param_flags + 7);\n    *ptr_flags6 = 4;\n    if ((*ptr_flags5 & 3) == 0)\n    {\n      do_nothing_08003c4a(param_flags);\n      do_nothing_08003c6e(param_flags);\n    }\n    else\n    {\n      do_nothing_08003c5c(param_flags);\n    }\n    *ptr_flags6 = 0;\n  }\n  if ((*ptr_flags2 & 0x10) && (*ptr_flags3 & 0x10))\n  {\n    *ptr_flags3 = 0xffffffef;\n    uint8_t *ptr_flags6 = (uint8_t *)(param_flags + 7);\n    *ptr_flags6 = 8;\n    if ((*ptr_flags5 & 0x300) == 0)\n    {\n      do_nothing_08003c4a(param_flags);\n      do_nothing_08003c6e(param_flags);\n    }\n    else\n    {\n      do_nothing_08003c5c(param_flags);\n    }\n    *ptr_flags6 = 0;\n  }\n  if ((*ptr_flags2 & 1) && (*ptr_flags3 & 1))\n  {\n    *ptr_flags3 = 0xfffffffe;\n    FUN_08004f78(param_flags);\n  }\n  if ((*ptr_flags2 & 0x80) && (*ptr_flags3 & 0x80))\n  {\n    *ptr_flags3 = 0xffffff7f;\n    do_nothing_08004378(param_flags);\n  }\n  if ((*ptr_flags2 & 0x40) && (*ptr_flags3 & 0x40))\n  {\n    *ptr_flags3 = 0xffffffbf;\n    do_nothing_08003c80(param_flags);\n  }\n  if ((*ptr_flags2 & 0x20) && (*ptr_flags3 & 0x20))\n  {\n    *ptr_flags3 = 0xffffffdf;\n    do_nothing_08004366(param_flags);\n  }\n}",
            "called": [
                "FUN_08003c6e",
                "FUN_08003c4a",
                "FUN_08004378",
                "FUN_08003c80",
                "FUN_08004f78",
                "FUN_08004366",
                "FUN_08003c5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f8",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "process_flags_080036f8"
        },
        "FUN_080041a8": {
            "renaming": {
                "FUN_080041a8": "store_data_to_memory_080041a8",
                "param_1": "data_address",
                "param_2": "data_high",
                "param_3": "data_mid",
                "param_4": "data_low",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "void store_data_to_memory_080041a8(int data_address, uint8_t data_high, uint8_t data_mid, uint8_t data_low) {\n    uint32_t* data_ptr = (uint32_t*)(data_address + 8);\n    uint32_t data_mask = 0xFFFF00FF;\n    uint32_t data_to_store = (data_high << 24) | (data_mid << 16) | (data_low << 8);\n    *data_ptr = data_to_store | (*data_ptr & data_mask);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a8",
            "calling": [
                "FUN_08003a94"
            ],
            "imported": false,
            "current_name": "store_data_to_memory_080041a8"
        },
        "FUN_080004c8": {
            "renaming": {
                "FUN_080004c8": "FUNC_080004c8"
            },
            "code": "\nulonglong FUNC_080004c8(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006a4();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006a4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004c8",
            "calling": [
                "FUN_080096e0",
                "FUN_08004d78",
                "FUN_080059f0",
                "FUN_08004bd8",
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "FUNC_080004c8"
        },
        "FUN_08008ad4": {
            "renaming": {
                "FUN_08008ad4": "get_puVar1_08008ad4",
                "puVar1": "result",
                "PTR_PTR_DAT_08008ae8": "ptr_ptr",
                "PTR_DAT_08008aec": "ptr_dat"
            },
            "code": "undefined* get_puVar1_08008ad4()\n{\n    undefined* puVar1;\n    int* ptr = *(int**)PTR_PTR_DAT_08008ae8 + 0x34;\n    puVar1 = *(undefined**)ptr;\n    if (puVar1 == (undefined*)0x0)\n    {\n        puVar1 = PTR_DAT_08008aec;\n    }\n    return puVar1 + 0xf0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ad4",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "get_puVar1_08008ad4"
        },
        "FUN_080009e8": {
            "renaming": {
                "FUN_080009e8": "is_end_of_string_080009e8",
                "in_CY": "current_char",
                "FUN_08000978": "get_next_char"
            },
            "code": "bool is_end_of_string_080009e8(void)\n{\n  char current_char;\n  current_char = get_next_char();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009e8",
            "calling": [
                "FUN_080059f0",
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "is_end_of_string_080009e8"
        },
        "FUN_08005674": {
            "renaming": {
                "FUN_08005674": "infiniteLoop_08005674"
            },
            "code": "void infiniteLoop_08005674(void)\n{\n  while(true)\n  {\n    // Do nothing block with infinite loop\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005674",
            "calling": [
                "FUN_08005348",
                "FUN_08005598",
                "FUN_080052a0",
                "FUN_080053b0",
                "FUN_08005500"
            ],
            "imported": false,
            "current_name": "infiniteLoop_08005674"
        },
        "FUN_08003c4a": {
            "renaming": {
                "FUN_08003c4a": "do_nothing_08003c4a"
            },
            "code": "\nvoid do_nothing_08003c4a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c4a",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08003c4a"
        },
        "FUN_08009630": {
            "renaming": {
                "FUN_08009630": "calculate_values_08009630",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "param_5": "result1",
                "param_6": "result2",
                "iVar1": "calculation_result1",
                "uVar2": "calculation_result2",
                "iVar3": "calculation_result3",
                "iVar4": "calculation_result4",
                "uVar5": "calculation_result5",
                "uVar6": "calculation_result6",
                "uVar7": "calculation_result7",
                "local_20": "local_var1",
                "local_1c": "local_var2"
            },
            "code": "int calculate_values_08009630(undefined4 first_param, undefined4 second_param, uint32_t third_param, uint32_t fourth_param, int *result1, int *result2) {\n  int calculation_result1;\n  uint32_t calculation_result2;\n  int calculation_result3;\n  int calculation_result4;\n  uint32_t calculation_result5;\n  uint32_t calculation_result6;\n  undefined8 calculation_result7;\n  uint32_t local_var1;\n  uint32_t local_var2;\n  calculation_result1 = FUN_080090c0(first_param, 1);\n  calculation_result6 = (fourth_param << 1) >> 0x15;\n  local_var2 = fourth_param & 0xfffff;\n  if (calculation_result6 != 0) {\n    local_var2 = local_var2 | 0x100000;\n  }\n  if (third_param == 0) {\n    calculation_result3 = FUN_080091e4(&local_var2);\n    calculation_result4 = 1;\n    calculation_result2 = calculation_result3 + 0x20;\n    *(undefined4 *)(calculation_result1 + 0x10) = 1;\n    *(uint32_t *)(calculation_result1 + 0x14) = local_var2;\n  }\n  else {\n    local_var1 = third_param;\n    calculation_result2 = FUN_080091e4(&local_var1);\n    if (calculation_result2 == 0) {\n      *(uint32_t *)(calculation_result1 + 0x14) = local_var1;\n    }\n    else {\n      calculation_result5 = local_var2 << (0x20 - calculation_result2 & 0xff);\n      local_var2 = local_var2 >> (calculation_result2 & 0xff);\n      *(uint32_t *)(calculation_result1 + 0x14) = calculation_result5 | local_var1;\n    }\n    if (local_var2 == 0) {\n      calculation_result4 = 1;\n    }\n    else {\n      calculation_result4 = 2;\n    }\n    *(uint32_t *)(calculation_result1 + 0x18) = local_var2;\n    *(int *)(calculation_result1 + 0x10) = calculation_result4;\n  }\n  if (calculation_result6 == 0) {\n    *result1 = calculation_result2 - 0x432;\n    calculation_result7 = FUN_080091a4(*(undefined4 *)(calculation_result1 + calculation_result4 * 4 + 0x10));\n    *result2 = (int)((ulonglong)calculation_result7 >> 0x20) * 0x20 - (int)calculation_result7;\n    return calculation_result1;\n  }\n  *result1 = (calculation_result6 - 0x433) + calculation_result2;\n  *result2 = 0x35 - calculation_result2;\n  return calculation_result1;\n}",
            "called": [
                "FUN_080091e4",
                "FUN_080090c0",
                "FUN_080091a4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009630",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "calculate_values_08009630"
        },
        "FUN_08004104": {
            "renaming": {
                "FUN_08004104": "update_registers_08004104",
                "param_1": "reg1",
                "param_2": "reg2",
                "param_3": "reg3",
                "PTR_": "",
                "DAT_": "",
                "*": "",
                "&": "",
                "<<": "shift_left",
                "|": "bitwise_or",
                "&=": "bitwise_and_assign",
                "=": "assign"
            },
            "code": "void update_registers_08004104(int reg1, int reg2, int reg3) {\n    uint32_t *reg1_ptr = (uint32_t *)(reg1 + 0x20);\n    uint32_t *reg2_ptr = (uint32_t *)(reg1 + 0x18);\n    uint32_t reg2_val = *reg2_ptr;\n    uint32_t *reg3_ptr = (uint32_t *)(reg1 + 0x20);\n    uint32_t reg3_val = *reg3_ptr;\n    *reg1_ptr &= 0xFFFFFFEF;\n    *reg2_ptr = (reg3 << 0xC) | (reg2_val & 0xFFFF0FFF);\n    *reg3_ptr = (reg2 << 4) | (reg3_val & 0xFFFFFF5F);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004104",
            "calling": [
                "FUN_08003a94"
            ],
            "imported": false,
            "current_name": "update_registers_08004104"
        },
        "FUN_08000ff4": {
            "renaming": {
                "FUN_08000ff4": "is_end_of_string_08000ff4",
                "in_CY": "current_char",
                "FUN_08000fd0": "get_next_char"
            },
            "code": "bool is_end_of_string_08000ff4(void)\n{\n  char current_char;\n  current_char = get_next_char();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000fd0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ff4",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08000ff4"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "print_data_08005714",
                "FUN_080036f8": "print_message",
                "PTR_DAT_08005724": "message"
            },
            "code": "void print_data_08005714(void)\n{\n  print_PTR_DAT_08005724(PTR_DAT_08005724);\n  return;\n}",
            "called": [
                "FUN_080036f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [],
            "imported": false,
            "current_name": "print_data_08005714"
        },
        "FUN_08005d0c": {
            "renaming": {
                "FUN_08005d0c": "do_nothing_08005d0c"
            },
            "code": "\nvoid do_nothing_08005d0c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d0c",
            "calling": [
                "FUN_08005838",
                "FUN_080059f0"
            ],
            "imported": false,
            "current_name": "do_nothing_08005d0c"
        },
        "FUN_08005e40": {
            "renaming": {
                "FUN_08005e40": "find_first_set_bit_08005e40",
                "param_1": "addr",
                "iVar1": "bit_offset",
                "puVar2": "word_ptr",
                "uVar4": "word",
                "iVar3": "leading_zeroes"
            },
            "code": "int find_first_set_bit_08005e40(uint32_t addr) {\n  int bit_offset = -(addr & 3);\n  uint32_t word = *(uint32_t *)(addr & ~3);\n  if ((addr & 3) != 0) {\n    word |= 0xffffffffU >> ((bit_offset + 4U & 0x1f) << 3);\n  }\n  while (word == 0) {\n    word = *(uint32_t *)((addr += 4));\n    bit_offset += 4;\n  }\n  int leading_zeroes = __builtin_clz(word & -word);\n  return bit_offset + (31 - leading_zeroes) / 8;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e40",
            "calling": [
                "FUN_08005e9c",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "find_first_set_bit_08005e40"
        },
        "FUN_08005d20": {
            "renaming": {
                "FUN_08005d20": "execute_code_functions_08005d20",
                "puVar1": "data_ptr",
                "iVar2": "i",
                "ppcVar3": "function_ptr",
                "iVar4": "num_functions"
            },
            "code": "void execute_code_functions_08005d20(void)\n{\n  int num_functions = (int)PTR_DAT_08005d58 - (int)PTR_DAT_08005d5c >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_ptr = (code **)PTR_DAT_08005d5c;\n    while (i != num_functions) {\n      (**function_ptr)();\n      function_ptr++;\n      i++;\n    }\n  }\n  code **function_ptr = (code **)PTR_DAT_08005d64;\n  undefined *data_ptr = PTR_DAT_08005d60;\n  do_nothing_08009e68();\n  num_functions = (int)data_ptr - (int)function_ptr >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    while (i != num_functions) {\n      (**function_ptr)();\n      function_ptr++;\n      i++;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000134",
                "FUN_08009e68",
                "FUN_080078a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d20",
            "calling": [
                "FUN_080057e8"
            ],
            "imported": false,
            "current_name": "execute_code_functions_08005d20"
        },
        "FUN_08001a80": {
            "renaming": {
                "FUN_08001a80": "set_param_value_08001a80",
                "param_1": "data_ptr",
                "param_2": "value",
                "param_3": "is_high_byte",
                "uint": "unsigned_int"
            },
            "code": "void set_param_value_08001a80(int data_ptr, ushort value, char is_high_byte) {\n    if (is_high_byte == '\\0') {\n        *(uint *)(data_ptr + 0x10) = (uint)value << 0x10;\n    }\n    else {\n        *(uint *)(data_ptr + 0x10) = (uint)value;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001a80",
            "calling": [
                "FUN_080055f4",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "set_param_value_08001a80"
        },
        "FUN_08005838": {
            "renaming": {
                "FUN_08005838": "calculate_result_08005838",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "difference",
                "uVar2": "result1",
                "uVar3": "result2",
                "uVar4": "result3",
                "uVar5": "result4",
                "uVar6": "combined_inputs"
            },
            "code": "uint calculate_result_08005838(uint input1, uint input2, uint input3, uint input4)\n{\n  int difference;\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  uint result4;\n  undefined8 combined_inputs;\n  \n  combined_inputs = CONCAT44(DAT_080059bc, DAT_080059b8);\n  result4 = input4 & 0x7fffffff;\n  if (DAT_080059e8 < (result4 | (-input3 | input3) >> 0x1f) || DAT_080059e8 < (input2 & 0x7fffffff | (-input1 | input1) >> 0x1f)) {\n    result4 = calculate_alternate_result(input3, input4, input1, input2);\n    return result4;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result4 = FUNC_080059f0();\n    return result4;\n  }\n  result3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input2 | input1) == 0) {\n    if (result3 == 2) {\n      return DAT_080059b0;\n    }\n    result4 = DAT_080059a0;\n    if (result3 != 3) {\n      return input1;\n    }\n  }\n  else {\n    if ((result4 | input3) != 0) {\n      if (result4 == DAT_080059e8) {\n        if (input2 == result4) {\n          if (result3 == 2) {\n            return DAT_080059e0;\n          }\n          if (result3 == 3) {\n            return DAT_080059d8;\n          }\n          if (result3 == 1) {\n            return DAT_080059d0;\n          }\n          return DAT_080059c8;\n        }\n        if (result3 == 2) {\n          return DAT_080059b0;\n        }\n        if (result3 == 3) {\n          return DAT_080059a0;\n        }\n        if (result3 == 1) {\n          return 0;\n        }\n        return 0;\n      }\n      if (input2 != DAT_080059e8) {\n        difference = (int)(input2 - result4) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)input4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference, 0x3c))) {\n            combined_inputs = 0;\n          }\n          else {\n            FUNC_0800071c(input1, input2, input3, input4, input4);\n            do_nothing_08005d0c();\n            combined_inputs = FUNC_080059f0();\n          }\n        }\n        result1 = (undefined4)((ulonglong)combined_inputs >> 0x20);\n        result4 = (uint)combined_inputs;\n        if (result3 == 1) {\n          return result4;\n        }\n        if (result3 == 2) {\n          combined_inputs = FUNC_08000158(result4, result1, DAT_080059a8, DAT_080059ac);\n          result4 = FUNC_08000158(DAT_080059b0, DAT_080059b4, (int)combined_inputs, (int)((ulonglong)combined_inputs >> 0x20));\n          return result4;\n        }\n        if (result3 == 0) {\n          return result4;\n        }\n        combined_inputs = FUNC_08000158(result4, result1, DAT_080059a8, DAT_080059ac);\n        result4 = FUNC_08000158((int)combined_inputs, (int)((ulonglong)combined_inputs >> 0x20), DAT_080059b0, DAT_080059b4);\n        return result4;\n      }\n    }\n    result4 = DAT_080059c0;\n    if (-1 < (int)input2) {\n      result4 = DAT_080059b8;\n    }\n  }\n  return result4;\n}",
            "called": [
                "FUN_08005d0c",
                "FUN_0800015c",
                "FUN_08000158",
                "FUN_080059f0",
                "FUN_0800071c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005838",
            "calling": [
                "thunk_FUN_08005838"
            ],
            "imported": false,
            "current_name": "calculate_result_08005838"
        },
        "FUN_080090a8": {
            "renaming": {
                "FUN_080090a8": "execute_nothing_function_080090a8",
                "PTR_DAT_080090b0": "PTR_DATA",
                "do_nothing_08008af0": "do_nothing"
            },
            "code": "void execute_nothing_function_080090a8(void)\n{\n  do_nothing(PTR_DAT_080090b0);\n  return;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080090a8",
            "calling": [
                "FUN_08009adc",
                "FUN_080088ec",
                "FUN_08008af8",
                "FUN_0800884c"
            ],
            "imported": false,
            "current_name": "execute_nothing_function_080090a8"
        },
        "FUN_08004e74": {
            "renaming": {
                "FUN_08004e74": "check_initialized_and_return_value_08004e74",
                "param_1": "input_value",
                "uVar1": "return_value",
                "PTR_DAT_08004ea0": "initialized_value",
                "FUN_08004e6c": "initialize_and_return_value"
            },
            "code": "int check_initialized_and_return_value_08004e74(int input_value)\n{\n  int PTR_DAT_08004ea0 = *(int *)PTR_DAT_08004ea0;\n  int return_value;\n  if (PTR_DAT_08004ea0 == 0) {\n    return_value = initialize_and_return_value(1, input_value, 0);\n  }\n  else {\n    return_value = 0;\n  }\n  return return_value;\n}",
            "called": [
                "FUN_08004e6c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e74",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "check_initialized_and_return_value_08004e74"
        },
        "FUN_080096e0": {
            "renaming": {
                "FUN_080096e0": "calculate_float_value_080096e0",
                "param_1": "exponent",
                "param_2": "mantissa",
                "param_3": "decimal_position",
                "param_4": "sign_bit",
                "iVar1": "max_exponent",
                "uVar3": "mantissa_unsigned",
                "uVar4": "combined_value",
                "iVar2": "decimal_offset"
            },
            "code": "uint32_t calculate_float_value_080096e0(uint32_t exponent, uint32_t mantissa, int* decimal_position, uint32_t sign_bit)\n{\n    int max_exponent = MAX_EXPONENT;\n    uint64_t combined_value = ((uint64_t)mantissa << 32) | exponent;\n    int decimal_offset = 0;\n    *decimal_position = 0;\n    if (((int)mantissa <= max_exponent) && ((mantissa | exponent) != 0)) {\n        if (mantissa < 0x100000) {\n            combined_value = calculate_float_value_080096e0_helper(exponent, mantissa, 0, FLOAT_CONSTANT1, sign_bit);\n            decimal_offset = -54;\n            mantissa = (uint32_t)((combined_value >> 32) & 0x7fffffff);\n        }\n        exponent = (uint32_t)combined_value;\n        mantissa = (uint32_t)((combined_value >> 32) & 0x800fffff) | 0x3fe00000;\n        *decimal_position = ((int)mantissa >> 20) - 0x3fe + decimal_offset;\n    }\n    return ((uint64_t)mantissa << 32) | exponent;\n}",
            "called": [
                "FUN_080004c8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e0",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "calculate_float_value_080096e0"
        },
        "FUN_0800910c": {
            "renaming": {
                "FUN_0800910c": "retrieve_value_from_array_0800910c",
                "param_1": "array_address",
                "param_2": "value",
                "iVar1": "array_start"
            },
            "code": "void retrieve_value_from_array_0800910c(int array_address, undefined4 *value) {\n  if (value != (undefined4 *)0x0) {\n    int array_start = *(int *)(array_address + 0x4c);\n    *value = *(undefined4 *)(array_start + value[1] * 4);\n    *(undefined4 **)(array_start + value[1] * 4) = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800910c",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "retrieve_value_from_array_0800910c"
        },
        "FUN_080052a0": {
            "renaming": {
                "FUN_080052a0": "calculate_and_print_checksum_080052a0",
                "iVar2": "result",
                "uVar3": "random_value",
                "local_44": "checksum_component1",
                "local_40": "checksum_component2",
                "local_3c": "checksum_component3",
                "local_38": "checksum_component4",
                "local_34": "checksum_component5",
                "local_30": "DATA_SIZE",
                "local_2c": "INITIAL_VALUE1",
                "local_28": "INITIAL_VALUE2",
                "local_20": "INITIAL_VALUE3",
                "local_14": "INITIAL_VALUE4",
                "local_10": "INITIAL_VALUE5",
                "local_c": "INITIAL_VALUE6"
            },
            "code": "void calculate_and_print_checksum_080052a0(void)\n{\n    long long checksum;\n    int result;\n    unsigned long long random_value = get_random_value();\n    checksum = (long long)DATA_SIZE * (random_value & 0xffffffff);\n    calculate_checksum_components((uint)((unsigned long long)checksum >> 0x26), (int)(random_value >> 0x20), (int)checksum);\n    print_checksum_footer();\n}\n",
            "called": [
                "FUN_08002d98",
                "FUN_0800177c",
                "FUN_08001762",
                "FUN_08005674",
                "FUN_08003260",
                "FUN_0800172a",
                "FUN_08003504"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052a0",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "calculate_and_print_checksum_080052a0"
        },
        "FUN_08009120": {
            "renaming": {
                "FUN_08009120": "calculate_hash_08009120",
                "param_1": "input_size",
                "param_2": "input_array",
                "param_3": "base",
                "param_4": "hash",
                "puVar1": "result_array",
                "uVar2": "carry_temp",
                "iVar3": "num_elements",
                "puVar4": "current_element",
                "iVar5": "hash_table_address"
            },
            "code": "undefined4 * calculate_hash_08009120(int input_size, undefined4 *input_array, int base, uint32_t hash) {\n  undefined4 *result_array;\n  uint32_t carry = 0;\n  int num_elements = input_array[4];\n  uint32_t *current_element = input_array + 5;\n  for (int i = 0; i < num_elements; i++) {\n    hash = base * (*current_element & 0xffff) + hash;\n    uint32_t carry_temp = base * (*current_element >> 0x10) + (hash >> 0x10);\n    *current_element = (hash & 0xffff) + carry_temp * 0x10000;\n    hash = carry_temp >> 0x10;\n    current_element++;\n  }\n  result_array = input_array;\n  if (hash != 0) {\n    if ((int)input_array[2] <= num_elements) {\n      result_array = (undefined4 *)allocate_memory(input_size, input_array[1] + 1);\n      copy_memory(result_array + 3, input_array + 3, (input_array[4] + 2) * 4);\n      int hash_table_address = *(int *)(input_size + 0x4c);\n      *input_array = *(undefined4 *)(hash_table_address + input_array[1] * 4);\n      *(undefined4 **)(hash_table_address + input_array[1] * 4) = input_array;\n    }\n    result_array[num_elements + 5] = hash;\n    result_array[4] = num_elements + 1;\n  }\n  return result_array;\n}",
            "called": [
                "FUN_08001084",
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009120",
            "calling": [
                "FUN_080093a4",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "calculate_hash_08009120"
        },
        "FUN_08001084": {
            "renaming": {
                "FUN_08001084": "copyMemory_08001084",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "size",
                "puVar1": "dest_ptr",
                "puVar2": "src_ptr",
                "puVar3": "dest_ptr",
                "uVar4": "i",
                "uVar5": "remaining_bytes",
                "bVar6": "is_aligned"
            },
            "code": "undefined4 *copyMemory_08001084(undefined4 *dest, undefined4 *src, uint size)\n{\n  undefined4 *dest_ptr;\n  undefined4 *src_ptr;\n  uint remaining_bytes;\n  uint i;\n  bool is_aligned;\n\n  dest_ptr = dest;\n  is_aligned = (((uint)src | (uint)dest) & 3) == 0;\n  if (!is_aligned) {\n    if (size < 8) {\n      remaining_bytes = size - 4;\n      if (remaining_bytes > 3) {\n        do {\n          *dest_ptr = *src_ptr;\n          dest_ptr = (undefined4 *)((int)dest_ptr + 1);\n          src_ptr = (undefined4 *)((int)src_ptr + 1);\n          remaining_bytes--;\n        } while (remaining_bytes > 0);\n        *(undefined *)(undefined4 *)((int)dest_ptr + 1) =\n             *(undefined *)(undefined4 *)((int)src_ptr + 1);\n        *(undefined *)((int)dest_ptr + 2) =\n             *(undefined *)((int)src_ptr + 2);\n        *(undefined *)((int)dest_ptr + 3) =\n             *(undefined *)((int)src_ptr + 3);\n        return dest;\n      }\n      goto LAB_08001108;\n    }\n    if ((((uint)src & 3) != 0) && (((uint)dest & 3) != 0)) {\n      remaining_bytes = 4 - ((uint)dest & 3);\n      size = size - remaining_bytes;\n      src_ptr = src;\n      dest_ptr = dest;\n      if (((uint)dest & 1) != 0) {\n        src_ptr = (undefined4 *)((int)src + 1);\n        dest_ptr = (undefined4 *)((int)dest + 1);\n        *(undefined *)dest = *(undefined *)src;\n      }\n      if ((remaining_bytes & 2) != 0) {\n        dest_ptr = (undefined4 *)((int)dest_ptr + 2);\n        src_ptr = (undefined4 *)((int)src_ptr + 2);\n        *(undefined2 *)dest = *(undefined2 *)src;\n      }\n    }\n  }\n  for (i = 0; i <= (size >> 4); i++) {\n    dest_ptr[i] = src_ptr[i];\n  }\n  remaining_bytes = size & 0xF;\n  if (remaining_bytes > 0) {\n    for (i = 0; i < (remaining_bytes >> 2); i++) {\n      dest_ptr[size / 4 + i] = src_ptr[size / 4 + i];\n    }\n    remaining_bytes &= 3;\n    if ((remaining_bytes & 1) != 0) {\n      *(undefined *)((int)dest_ptr + size - 1) =\n           *(undefined *)((int)src_ptr + size - 1);\n    }\n    if ((remaining_bytes & 2) != 0) {\n      *(undefined2 *)((int)dest_ptr + size - 2) =\n           *(undefined2 *)((int)src_ptr + size - 2);\n    }\n  }\n  return dest;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001084",
            "calling": [
                "FUN_08009120",
                "FUN_080079e8",
                "FUN_080097cc"
            ],
            "imported": false,
            "current_name": "copyMemory_08001084"
        },
        "FUN_08005680": {
            "renaming": {
                "FUN_08005680": "check_parameter_08005680",
                "*param_1": "*param_ptr",
                "DAT_080056b4": "target_value",
                "local_18": "value2",
                "local_14": "value1",
                "local_c": "value3",
                "FUN_080017c4": "perform_action",
                "DAT_080056b8": "action_data"
            },
            "code": "void check_parameter_08005680(int *param_ptr)\n{\n  int DAT_080056b4 = 1234;\n  int value1 = 2304;\n  int value2 = 2;\n  int value3 = 2;\n  if (*param_ptr == DAT_080056b4) {\n    value1 = 2304;\n    value2 = 0x900;\n    value3 = 2;\n    perform_action(DAT_080056b8,&value2);\n  }\n  return;\n}",
            "called": [
                "FUN_080017c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005680",
            "calling": [
                "FUN_080053b0"
            ],
            "imported": false,
            "current_name": "check_parameter_08005680"
        },
        "FUN_08003260": {
            "renaming": {
                "FUN_08003260": "validate_input_08003260",
                "param_1": "input",
                "param_2": "length",
                "uVar3": "tempVar",
                "uVar4": "retVal",
                "iVar1": "index1",
                "iVar2": "index2",
                "*DAT_08003430": "*g_dataVar1",
                "*DAT_08003434": "*g_dataVar2",
                "PTR_DAT_0800343c": "g_dataVar3",
                "PTR_DAT_08003438": "g_dataVar4",
                "FUN_08003440": "calculate_hash",
                "FUN_0800151c": "print_message",
                "0xf": "messageCode"
            },
            "code": "int validate_input_08003260(uint *input, uint length)\n{\n  int retVal;\n  int index1, index2;\n  uint tempVar;\n  \n  if (((*DAT_08003430 & 7) < length) && (*DAT_08003430 = length | *DAT_08003430 & 0xfffffff8, length != (*DAT_08003430 & 7))) {\n    retVal = 1;\n  }\n  else {\n    if ((*input & 2) != 0) {\n      g_dataVar2[1] = input[2] | g_dataVar2[1] & 0xffffff0f;\n    }\n    if ((*input & 1) == 0) {\nLAB_08003394:\n      if ((length < (*DAT_08003430 & 7)) && (*DAT_08003430 = length | *DAT_08003430 & 0xfffffff8, length != (*DAT_08003430 & 7))) {\n        retVal = 1;\n      }\n      else {\n        if ((*input & 4) != 0) {\n          g_dataVar2[1] = input[3] | g_dataVar2[1] & 0xfffff8ff;\n        }\n        if ((*input & 8) != 0) {\n          g_dataVar2[1] = input[4] << 3 | g_dataVar2[1] & 0xffffc7ff;\n        }\n        tempVar = calculate_hash();\n        *(uint *)PTR_DAT_0800343c = tempVar >> PTR_DAT_08003438[g_dataVar2[1] >> 4 & 0xf];\n        print_message(0xf);\n        retVal = 0;\n      }\n    }\n    else {\n      if (input[1] == 1) {\n        if ((*DAT_08003434 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((input[1] != 2) && ((*DAT_08003434 & 2) == 0)) {\n        return 1;\n      }\n      g_dataVar2[1] = input[1] | g_dataVar2[1] & 0xfffffffc;\n      index1 = get_current_time();\n      if (input[1] == 1) {\n        do {\n          if ((g_dataVar2[1] & 0xc) == 4) goto LAB_08003394;\n          index2 = get_current_time();\n        } while ((uint)(index2 - index1) < 0x1389);\n        retVal = 3;\n      }\n      else if (input[1] == 2) {\n        do {\n          if ((g_dataVar2[1] & 0xc) == 8) goto LAB_08003394;\n          index2 = get_current_time();\n        } while ((uint)(index2 - index1) < 0x1389);\n        retVal = 3;\n      }\n      else {\n        do {\n          if ((g_dataVar2[1] & 0xc) == 0) goto LAB_08003394;\n          index2 = get_current_time();\n        } while ((uint)(index2 - index1) < 0x1389);\n        retVal = 3;\n      }\n    }\n  }\n  return retVal;\n}",
            "called": [
                "FUN_080015a0",
                "FUN_08003440",
                "FUN_0800151c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003260",
            "calling": [
                "FUN_080052a0"
            ],
            "imported": false,
            "current_name": "validate_input_08003260"
        },
        "FUN_08001ab0": {
            "renaming": {
                "FUN_08001ab0": "calculate_parameters_08001ab0",
                "param_1": "params",
                "uVar1": "random_number",
                "cVar2": "is_valid",
                "uVar3": "result",
                "uVar4": "temp",
                "bVar5": "is_zero",
                "DAT_08001ca4": "threshold_1",
                "DAT_08001cac": "threshold_2",
                "DAT_08001ca8": "threshold_3",
                "DAT_08001cb0": "multiplier",
                "DAT_08001cb4": "multiplier_2",
                "do_nothing_08001cb8": "do_nothing"
            },
            "code": "int calculate_parameters_08001ab0(uint **params) {\n  int result = 0;\n  if (params == NULL) {\n    result = 1;\n  }\n  else {\n    if (*(char *)((int)params + 0x3d) == '\\0') {\n      *(undefined *)(params + 0xf) = 0;\n      do_nothing(params);\n    }\n    *(undefined *)((int)params + 0x3d) = 0x24;\n    **params &= 0xfffffffe;\n    uint random_number = get_random_number();\n    uint threshold = (params[1] < DAT_08001ca4) ? DAT_08001ca8 : DAT_08001cac;\n    bool is_valid = (random_number <= threshold);\n    if (is_valid) {\n      uint temp = (uint)((ulonglong)DAT_08001cb0 * (ulonglong)random_number >> 0x32);\n      uint DAT_08001cb0 = (params[1] < DAT_08001ca4) ? DAT_08001cb4 : 300;\n      uint parameter_1 = (uint)((ulonglong)DAT_08001cb0 * (ulonglong)(temp) >> 0x26);\n      params[8][0] = parameter_1 + 1;\n      if (params[1] < DAT_08001ca4) {\n        uint divisor = (params[2] == NULL) ? (uint)((int)params[1] * 3) : (uint)((int)params[1] * 0x19);\n        uint quotient = (random_number - 1) / divisor + 1;\n        uint parameter_2 = (quotient == 0) ? 1 : quotient;\n        if (quotient != 0) {\n          parameter_2 = 0;\n        }\n        if (parameter_2 == 0) {\n          parameter_1 = (params[2] == NULL) ? (parameter_1 - 1) / (uint)((int)params[1] * 3) + 1 | 0x8000 : (parameter_1 - 1) / (uint)((int)params[1] * 0x19) + 1 | 0xc000;\n        }\n        else {\n          parameter_1 = 1;\n        }\n      }\n      else {\n        uint divisor = (uint)((int)params[1] << 1);\n        uint quotient = (random_number - 1) / divisor + 1;\n        if (quotient < 4) {\n          quotient = 4;\n        }\n        params[7][0] = quotient;\n        params[0][0] = params[8][0] | params[7][0];\n        params[3][0] = params[6][0] | params[5][0];\n        params[0][0] |= 1;\n        params[0x10] = NULL;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        params[0xc] = NULL;\n        *(undefined *)((int)params + 0x3e) = 0;\n        result = 0;\n      }\n    }\n    else {\n      result = 1;\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08003518",
                "FUN_08001cb8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ab0",
            "calling": [
                "FUN_08005348"
            ],
            "imported": false,
            "current_name": "calculate_parameters_08001ab0"
        },
        "FUN_08003540": {
            "renaming": {
                "FUN_08003540": "calculate_shifted_result_08003540",
                "uVar1": "result",
                "FUN_08003504": "get_initial_result",
                "PTR_DAT_08003564": "PTR_DATA_08003564",
                "*(uint *)(DAT_08003560 + 4)": "*(unsigned int *)(DATA_08003560 + 4)",
                "DAT_08003560": "DATA_08003560"
            },
            "code": "unsigned int calculate_shifted_result_08003540(void)\n{\n  unsigned int result = get_initial_result();\n  unsigned int shift_value = *(uint *)(DAT_08003560 + 4) >> 11 & 7;\n  return result >> PTR_DAT_08003564[shift_value];\n}",
            "called": [
                "FUN_08003504"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003540",
            "calling": [
                "FUN_080046ec"
            ],
            "imported": false,
            "current_name": "calculate_shifted_result_08003540"
        },
        "FUN_08009244": {
            "renaming": {
                "FUN_08009244": "set_flag_and_value_08009244",
                "param_1": "flag",
                "param_2": "value",
                "iVar1": "flag_ptr",
                "FUN_080090c0": "get_flag_pointer"
            },
            "code": "void set_flag_and_value_08009244(int flag, int value)\n{\n  int flag_ptr;\n  flag_ptr = get_flag_pointer(flag, 1);\n  *(int *)(flag_ptr + 0x10) = 1;\n  *(int *)(flag_ptr + 0x14) = value;\n  return;\n}",
            "called": [
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009244",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "set_flag_and_value_08009244"
        },
        "FUN_08003c5c": {
            "renaming": {
                "FUN_08003c5c": "do_nothing_08003c5c"
            },
            "code": "\nvoid do_nothing_08003c5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c5c",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08003c5c"
        },
        "FUN_08004e6c": {
            "renaming": {
                "FUN_08004e6c": "send_interrupt_signal_08004e6c",
                "PTR_": "PTR_",
                "DAT_": "DAT_",
                "0x3f": "SYSTEM_CALL"
            },
            "code": "void send_interrupt_signal_08004e6c(void)\n{\n  software_interrupt(SYSTEM_CALL);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e6c",
            "calling": [
                "FUN_08004e74"
            ],
            "imported": false,
            "current_name": "send_interrupt_signal_08004e6c"
        },
        "FUN_08001762": {
            "renaming": {
                "FUN_08001762": "calculate_result_08001762",
                "param_1": "input",
                "uVar1": "result",
                "FUN_080016d0": "perform_calculation"
            },
            "code": "int calculate_result_08001762(int input){\n  int result = perform_calculation(input);\n  return result;\n}",
            "called": [
                "FUN_080016d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001762",
            "calling": [
                "FUN_080052a0",
                "FUN_0800151c"
            ],
            "imported": false,
            "current_name": "calculate_result_08001762"
        },
        "FUN_08000158": {
            "renaming": {
                "FUN_08000158": "FUNC_08000158"
            },
            "code": "\nulonglong FUNC_08000158(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_0800039c:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_0800039c;\n    }\nLAB_08000268:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000268;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000158",
            "calling": [
                "FUN_08005838",
                "FUN_080059f0",
                "FUN_08004bd8",
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "FUNC_08000158"
        },
        "FUN_08009768": {
            "renaming": {
                "FUN_08009768": "copy_string_08009768",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "current_char",
                "puVar2": "source_ptr",
                "puVar3": "destination_ptr",
                "uVar4": "current_uint"
            },
            "code": "void copy_string_08009768(uint *destination, uint *source, uint length) {\n  char current_char;\n  uint *source_ptr;\n  uint *destination_ptr;\n  uint current_uint;\n  \n  if (((uint)destination | (uint)source) & 3) != 0 || length <= 3) {\n    goto copy_bytes;\n  }\n  \n  while (length > 3) {\n    current_uint = *source;\n    if ((current_uint + 0xfefefeff & ~current_uint & 0x80808080) != 0) {\n      goto copy_bytes;\n    }\n    *destination = current_uint;\n    source_ptr = source + 1;\n    destination_ptr = destination + 1;\n    current_uint = *source_ptr;\n    if ((current_uint + 0xfefefeff & ~current_uint & 0x80808080) != 0) {\n      goto copy_bytes;\n    }\n    *destination_ptr = current_uint;\n    source = source_ptr + 1;\n    destination = destination_ptr + 1;\n    length -= 4;\n  }\n  \n  copy_bytes:\n  source_ptr = (uint *)source;\n  destination_ptr = destination;\n  while (length > 0) {\n    current_char = *(char *)source_ptr;\n    *(char *)destination_ptr = current_char;\n    source_ptr = (uint *)((int)source_ptr + 1);\n    destination_ptr = (uint *)((int)destination_ptr + 1);\n    length -= 1;\n    if (current_char == '\\0') {\n      break;\n    }\n  }\n  \n  if (length > 0) {\n    while (length > 0) {\n      *(char *)destination_ptr = '\\0';\n      destination_ptr = (uint *)((int)destination_ptr + 1);\n      length -= 1;\n    }\n  }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009768",
            "calling": [
                "FUN_08005e9c"
            ],
            "imported": false,
            "current_name": "copy_string_08009768"
        },
        "FUN_08003ff8": {
            "renaming": {
                "FUN_08003ff8": "update_data_08003ff8",
                "param_1": "data_address",
                "param_2": "data_array",
                "iVar1": "data_value_1",
                "iVar2": "data_value_2",
                "local_c": "data_value_3",
                "DAT_0800409c": "PTR_0800409c",
                "bitmask_1": "0xffffefff",
                "bitmask_2": "0xffffbfff",
                "bitmask_3": "0xffff8cff",
                "bitmask_4": "0xffffdfff"
            },
            "code": "void update_data_08003ff8(int data_address, int *data_array){\n  int data_value_1;\n  int data_value_2;\n  uint32_t bitmask_1 = 0xffffefff;\n  uint32_t bitmask_2 = 0xffffbfff;\n  uint32_t bitmask_3 = 0xffff8cff;\n  uint32_t bitmask_4 = 0xffffdfff;\n  uint32_t data_value_3 = *(uint32_t *)(data_address + 4);\n  data_value_1 = *data_array;\n  data_value_2 = data_array[2];\n  if (data_address == DAT_0800409c) {\n    data_value_3 = data_array[5] << 6 | data_value_3 & bitmask_2;\n  }\n  *(uint32_t *)(data_address + 4) = data_value_3;\n  *(uint32_t *)(data_address + 0x1c) = data_value_1 << 8 | *(uint32_t *)(data_address + 0x1c) & bitmask_3;\n  *(int *)(data_address + 0x40) = data_array[1];\n  *(uint32_t *)(data_address + 0x20) = data_value_2 << 0xc | *(uint32_t *)(data_address + 0x20) & bitmask_4;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff8",
            "calling": [
                "FUN_08003908"
            ],
            "imported": false,
            "current_name": "update_data_08003ff8"
        },
        "FUN_08004ea4": {
            "renaming": {
                "FUN_08004ea4": "call_function_with_params_08004ea4",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "PTR_DAT_08004ee4": "function_pointer",
                "*(undefined4 *)PTR_DAT_08004ee0": "ptr_to_data"
            },
            "code": "void call_function_with_params_08004ea4(void* PTR_DAT_08004ee4, undefined param_1, undefined param_2, int param_3, unsigned short param_4, int* *(undefined4 *)PTR_DAT_08004ee0){\n  call_function(PTR_DAT_08004ee4, param_1, param_2, 1, param_3, param_4, **(undefined4 *)PTR_DAT_08004ee0);\n  return;\n}",
            "called": [
                "FUN_08001ccc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ea4",
            "calling": [],
            "imported": false,
            "current_name": "call_function_with_params_08004ea4"
        },
        "FUN_080040a0": {
            "renaming": {
                "FUN_080040a0": "set_and_shift_bits_080040a0",
                "param_1": "data",
                "param_2": "set_bits",
                "param_3": "shift_bits",
                "uVar1": "temp_var"
            },
            "code": "void set_and_shift_bits_080040a0(int data,uint set_bits,int shift_bits)\n{\n  uint temp_var;\n  temp_var = *(uint *)(data + 0x20);\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & 0xfffffffe;\n  *(uint *)(data + 0x18) = shift_bits << 4 | *(uint *)(data + 0x18) & 0xffffff0f;\n  *(uint *)(data + 0x20) = set_bits | temp_var & 0xfffffff5;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040a0",
            "calling": [
                "FUN_08003a94"
            ],
            "imported": false,
            "current_name": "set_and_shift_bits_080040a0"
        },
        "FUN_08009a18": {
            "renaming": {
                "FUN_08009a18": "copy_memory_range_08009a18",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "puVar1": "destination_end",
                "puVar2": "source_end",
                "iVar3": "remaining_blocks",
                "puVar4": "current_destination",
                "puVar5": "current_source",
                "uVar6": "remaining_words",
                "uVar7": "remaining_length",
                "end": "end_of_block",
                "remaining_length": "remaining_length",
                "remaining_blocks": "remaining_blocks",
                "remaining_words": "remaining_words",
                "current_source": "current_source",
                "current_destination": "current_destination"
            },
            "code": "void copy_memory_range_08009a18(uint8_t *destination, uint8_t *source, uint32_t length) {\n  if ((destination < source) && ((uint8_t *)(source + length) > destination)) {\n    uint8_t *end = source + length;\n    do {\n      end--;\n      *destination++ = *end;\n    } while (source != end);\n  } else {\n    uint32_t remaining_length = length;\n    if (remaining_length > 0xf) {\n      if ((((uint32_t)destination | (uint32_t)source) & 3) != 0) goto LAB_08009abc;\n      uint8_t *end = (uint8_t *)((uint32_t)source + (length - 0x10 & 0xfffffff0) + 0x20);\n      while (source != end) {\n        *(uint32_t *)(destination - 4) = *(uint32_t *)(source - 4);\n        source += 4;\n        destination += 4;\n      }\n      uint32_t remaining_blocks = (length - 0x10 >> 4) + 1;\n      remaining_length = length & 0xf;\n      source += remaining_blocks * 4;\n      destination += remaining_blocks * 4;\n      if (remaining_length > 3) {\n        uint8_t *end = destination - 1;\n        uint32_t remaining_words = remaining_length;\n        uint8_t *current_source = source;\n        do {\n          remaining_words -= 4;\n          end++;\n          *(uint32_t *)end = *(uint32_t *)current_source;\n          current_source += 4;\n        } while (remaining_words > 3);\n        remaining_length = (remaining_length - 4 & 0xfffffffc) + 4;\n        destination += remaining_length;\n        source += remaining_length;\n      }\n    }\n    if (remaining_length > 0) {\nLAB_08009abc:\n      uint8_t *end = destination - 1;\n      uint8_t *current_source = source;\n      do {\n        uint8_t *next_source = current_source + 1;\n        end++;\n        *end = *current_source;\n        current_source = next_source;\n      } while (current_source != (uint8_t *)(length + (uint32_t)source));\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009a18",
            "calling": [
                "FUN_08009adc",
                "FUN_080097cc"
            ],
            "imported": false,
            "current_name": "copy_memory_range_08009a18"
        },
        "FUN_0800119c": {
            "renaming": {
                "FUN_0800119c": "convert_to_signed_0800119c",
                "param_1": "unsigned_num",
                "param_2": "shift_amount",
                "uVar1": "shifted_num_abs",
                "iVar2": "shifted_num",
                "uVar3": "shifted_num_abs_diff",
                "DAT_0800119c": "DAT_0800119c"
            },
            "code": "uint convert_to_signed_0800119c(uint unsigned_num, uint shift_amount)\n{\n  uint result;\n  int shifted_num = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (shifted_num >= 0) {\n      return 0;\n    }\n    uint shifted_num_abs = -shifted_num >> 0x15;\n    uint shifted_num_abs_diff = shifted_num_abs - 0x3e1;\n    if (shifted_num_abs < 0xfffffc20 && shifted_num_abs_diff != 0) {\n      result = (unsigned_num << 0xb | 0x80000000 | DAT_0800119c >> 0x15) >> (shifted_num_abs_diff & 0xff);\n      if ((shift_amount & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((unsigned_num | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  shift_amount = shift_amount & 0x80000000;\n  if (shift_amount == 0) {\n    shift_amount = 0x7fffffff;\n  }\n  return shift_amount;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800119c",
            "calling": [
                "FUN_08005e9c",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "convert_to_signed_0800119c"
        },
        "FUN_08005728": {
            "renaming": {
                "FUN_08005728": "calculateResult_08005728",
                "param_1": "input",
                "puVar1": "resultPointer",
                "auStack_18": "unusedMemory",
                "local_14": "currentPositionValue",
                "local_c": "returnValue",
                "PTR_DAT_08005778": "currentPosition",
                "PTR_DAT_0800577c": "nextPosition"
            },
            "code": "int calculateResult_08005728(int input) {\n  int *PTR_DAT_08005778 = 0x08005778;\n  int *PTR_DAT_0800577c = 0x0800577c;\n  int currentOffset = *PTR_DAT_08005778;\n  int result = -1;\n  if (auStack_18 < (undefined *)(input + currentOffset)) {\n    result = FUN_08005d14();\n    *result = 0xc;\n  }\n  else {\n    *PTR_DAT_08005778 = input + currentOffset;\n  }\n  return result;\n}",
            "called": [
                "FUN_08005d14"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005728",
            "calling": [
                "FUN_08009744"
            ],
            "imported": false,
            "current_name": "calculateResult_08005728"
        },
        "FUN_080090b4": {
            "renaming": {
                "FUN_080090b4": "do_nothing_with_pointer_080090b4",
                "PTR_DAT_080090bc": "PTR_data",
                "do_nothing_08008af4": "do_nothing"
            },
            "code": "void do_nothing_with_pointer_080090b4(void)\n{\n  do_nothing(PTR_DAT_080090bc);\n  return;\n}",
            "called": [
                "FUN_08008af4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080090b4",
            "calling": [
                "FUN_08009adc",
                "FUN_080088ec",
                "FUN_08008af8",
                "FUN_0800884c"
            ],
            "imported": false,
            "current_name": "do_nothing_with_pointer_080090b4"
        },
        "FUN_0800422e": {
            "renaming": {
                "FUN_0800422e": "set_value_if_flag_is_set_0800422e",
                "param_1": "param_array",
                "param_2": "value_array",
                "uVar1": "return_value"
            },
            "code": "uint32_t set_value_if_flag_is_set_0800422e(int* param_array, uint32_t* value_array){\n    uint32_t return_value;\n    if (*(char *)(param_array + 0xf) == '\\x01') {\n        return_value = 2;\n    }\n    else {\n        *(undefined *)(param_array + 0xf) = 1;\n        *(uint32_t *)(*param_array + 0x44) =\n            value_array[6] |\n            (value_array[6] |\n            (value_array[5] |\n            (value_array[4] |\n            (*value_array | (value_array[1] | (value_array[2] | value_array[3] & 0xfffffcff) & 0xfffffbff) & 0xfffff7ff\n            ) & 0xffffefff) & 0xffffdfff) & 0xffffbfff) & 0xffff7fff;\n        *(undefined *)(param_array + 0xf) = 0;\n        return_value = 0;\n    }\n    return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800422e",
            "calling": [
                "FUN_080053b0"
            ],
            "imported": false,
            "current_name": "set_value_if_flag_is_set_0800422e"
        },
        "FUN_08008af4": {
            "renaming": {
                "FUN_08008af4": "do_nothing_08008af4"
            },
            "code": "\nvoid do_nothing_08008af4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af4",
            "calling": [
                "FUN_080098c0",
                "FUN_080090b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08008af4"
        },
        "FUN_08003e38": {
            "renaming": {
                "FUN_08003e38": "update_data_08003e38",
                "param_1": "data_ptr",
                "param_2": "data_array",
                "iVar1": "new_data",
                "uVar2": "bitmask",
                "local_10": "local_data"
            },
            "code": "void update_data_08003e38(int data_ptr, int *data_array){\n  int new_data = data_array[0];\n  uint bitmask = data_array[2] << 4 | *(uint *)(data_ptr + 0x20) & 0xffffffdf;\n  uint flag = *(uint *)(data_ptr + 0x20) & 0xffffffef;\n  uint local_data = *(uint *)(data_ptr + 4);\n  if (data_ptr == DAT_08003f14) {\n    bitmask = (data_array[3] << 4 | bitmask & 0xffffff7f) & 0xffffffbf;\n    local_data = data_array[6] << 2 | data_array[5] << 2 | local_data & 0xfffff3ff;\n  }\n  *(uint *)(data_ptr + 0x20) = bitmask;\n  *(uint *)(data_ptr + 4) = local_data;\n  *(uint *)(data_ptr + 0x18) = new_data << 8 | *(uint *)(data_ptr + 0x18) & 0xffff8cff;\n  *(int *)(data_ptr + 0x38) = data_array[1];\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003e38",
            "calling": [
                "FUN_08003908"
            ],
            "imported": false,
            "current_name": "update_data_08003e38"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "do_nothing_08008af0"
            },
            "code": "\nvoid do_nothing_08008af0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_080098c0",
                "FUN_080090a8"
            ],
            "imported": false,
            "current_name": "do_nothing_08008af0"
        },
        "FUN_0800151c": {
            "renaming": {
                "FUN_0800151c": "calculate_time_0800151c",
                "param_1": "time_in_ms",
                "iVar1": "time_in_seconds",
                "uVar2": "return_value",
                "PTR_DAT_08001570": "time_divisor_ptr",
                "PTR_DAT_08001574": "time_offset_ptr",
                "FUN_08001762": "calculate_seconds",
                "PTR_DAT_08001578": "time_pointer_ptr",
                "FUN_0800172a": "print_error"
            },
            "code": "int calculate_time_0800151c(uint time_in_ms) {\n    int time_in_seconds = (int)((ulonglong)*(uint *)PTR_DAT_08001570 / (1000 / (ulonglong)(byte)*PTR_DAT_08001574));\n    if (time_in_seconds == 0) {\n        if (time_in_ms < 0x10) {\n            print_error(0xffffffff, time_in_ms, 0);\n            *(uint *)PTR_DAT_08001578 = time_in_ms;\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n    else {\n        return 1;\n    }\n}",
            "called": [
                "FUN_08001762",
                "FUN_0800172a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800151c",
            "calling": [
                "FUN_080014f0",
                "FUN_08003260"
            ],
            "imported": false,
            "current_name": "calculate_time_0800151c"
        },
        "FUN_080006a4": {
            "renaming": {
                "FUN_080006a4": "calculate_value_080006a4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "temp5",
                "bVar4": "is_zero",
                "uVar4": "temp6",
                "mask": "mask",
                "bit_mask": "bit_mask",
                "magic_number": "magic_number",
                "magic_number2": "magic_number2"
            },
            "code": "ulonglong calculate_value_080006a4(uint input1, uint input2, uint input3, uint input4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  bool is_zero;\n  uint mask = 0x80000000;\n  uint bit_mask = 0x100000;\n  uint magic_number = 0x7ff00000;\n  uint magic_number2 = 0x7ff8000000000000;\n  \n  temp1 = input4 >> 0x14;\n  if (input2 != input4 && temp1 != input4) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & mask) << 0x20;\n    }\n    if (input2 == 0) {\n      temp3 = input1 & mask;\n      do {\n        temp2 = input1 & mask;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(temp2 != 0);\n      } while ((input2 & bit_mask) == 0);\n      input2 = input2 | temp3;\n      if (temp1 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp1 = input3 & mask;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp1 != 0);\n    } while ((input4 & bit_mask) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  temp3 = input2;\n  if (((!is_zero) && ((input2 != input4 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((temp1 != input4 || (input1 = input3, temp3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & mask | magic_number) << 0x20;\n  }\n  return CONCAT44(temp3,input1) | magic_number2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006a4",
            "calling": [
                "FUN_080004c8"
            ],
            "imported": false,
            "current_name": "calculate_value_080006a4"
        },
        "FUN_08000f68": {
            "renaming": {
                "FUN_08000f68": "calculate_result_08000f68",
                "param_1": "first_operand",
                "param_2": "second_operand",
                "bVar1": "overflow_detected",
                "uVar2": "first_operand_doubled",
                "uVar3": "second_operand_doubled",
                "uVar4": "combined_operands",
                "bVar5": "combined_operands_are_zero"
            },
            "code": "uint calculate_result_08000f68(uint first_operand, uint second_operand) {\n  bool overflow_detected;\n  uint first_operand_doubled = first_operand * 2;\n  uint second_operand_doubled = second_operand * 2;\n  if (((int)first_operand_doubled >> 0x18 == -1 || (int)second_operand_doubled >> 0x18 == -1) && ((((int)first_operand_doubled >> 0x18 == -1 && ((first_operand & 0x7fffff) != 0)) || (((int)second_operand_doubled >> 0x18 == -1 && ((second_operand & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uint combined_operands = first_operand_doubled | second_operand & 0x7fffffff;\n  bool combined_operands_are_zero = combined_operands == 0;\n  if (!combined_operands_are_zero) {\n    combined_operands = first_operand ^ second_operand;\n    combined_operands_are_zero = combined_operands == 0;\n  }\n  bool operands_have_same_sign = -1 < (int)combined_operands;\n  if (operands_have_same_sign) {\n    first_operand = first_operand_doubled + second_operand * -2;\n    combined_operands_are_zero = first_operand == 0;\n  }\n  if (operands_have_same_sign && second_operand_doubled <= first_operand && !combined_operands_are_zero) {\n    first_operand = (int)second_operand >> 0x1f;\n  }\n  if (!operands_have_same_sign || second_operand_doubled > first_operand) {\n    first_operand = ~((int)second_operand >> 0x1f);\n  }\n  if (!combined_operands_are_zero) {\n    first_operand = first_operand | 1;\n  }\n  return first_operand;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f68",
            "calling": [
                "FUN_08000fd0"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f68"
        },
        "FUN_08009258": {
            "renaming": {
                "FUN_08009258": "calculate_hash_08009258",
                "param_1": "hash",
                "param_2": "data1",
                "param_3": "data2",
                "puVar1": "temp_ptr1",
                "puVar2": "temp_ptr2",
                "iVar3": "temp_int1",
                "uVar4": "temp_uint1",
                "puVar5": "data1_ptr",
                "uVar6": "temp_uint2",
                "puVar7": "data2_ptr",
                "uVar8": "temp_uint3",
                "iVar9": "data2_size",
                "iVar10": "data2_size_temp",
                "uVar11": "temp_uint4",
                "iVar12": "data1_size",
                "iVar13": "data1_size_temp",
                "puVar14": "hash_ptr1",
                "puVar15": "hash_ptr2",
                "puVar16": "data2_ptr_temp",
                "puVar17": "hash_ptr3",
                "puVar18": "hash_ptr4",
                "data1_size": "data1_size",
                "data2_size": "data2_size",
                "temp1": "temp_uint5",
                "temp2": "temp_uint6",
                "data1_ptr": "data1_ptr",
                "data2_ptr": "data2_ptr",
                "carry": "carry",
                "loop_ctr1": "loop_ctr1",
                "loop_ctr2": "loop_ctr2",
                "hash_ptr3": "hash_ptr3",
                "data2_ptr2": "data2_ptr2",
                "data2_ptr3": "data2_ptr3",
                "hash_ptr1": "hash_ptr1",
                "data1_ptr2": "data1_ptr2",
                "data1_ptr3": "data1_ptr3",
                "data2_ptr4": "data2_ptr4",
                "data1_ptr4": "data1_ptr4",
                "data1_ptr5": "data1_ptr5",
                "data2_ptr6": "data2_ptr6",
                "data2_ptr7": "data2_ptr7",
                "data1_size2": "data1_size_temp2",
                "data2_size2": "data2_size_temp2",
                "loop_ctr3": "loop_ctr3",
                "loop_ctr4": "loop_ctr4"
            },
            "code": "void calculate_hash_08009258(uint32_t *hash, int *data1, int *data2) \\n\\\n    {\\n\\\n        uint32_t *hash_ptr1;\\n\\\n        uint32_t *hash_ptr2;\\n\\\n        int data1_size;\\n\\\n        uint32_t temp1;\\n\\\n        uint32_t temp2;\\n\\\n        uint32_t *data1_ptr;\\n\\\n        uint32_t *data2_ptr;\\n\\\n        uint32_t carry;\\n\\\n        int data2_size;\\n\\\n        int loop_ctr1;\\n\\\n        int loop_ctr2;\\n\\\n        uint32_t *hash_ptr3;\\n\\\n        uint32_t *data2_ptr2;\\n\\\n        uint32_t *data1_ptr2;\\n\\\n        uint32_t *data1_ptr3;\\n\\\n        uint32_t *data2_ptr3;\\n\\\n        uint32_t *data2_ptr4;\\n\\\n        int data1_size2;\\n\\\n        int data2_size2;\\n\\\n        int loop_ctr3;\\n\\\n        int loop_ctr4;\\n\\\n        uint32_t *hash_ptr4;\\n\\\n        uint32_t *data2_ptr5;\\n\\\n        uint32_t *data1_ptr4;\\n\\\n        uint32_t *data1_ptr5;\\n\\\n        uint32_t *data2_ptr6;\\n\\\n        uint32_t *data2_ptr7;\\n\\\n        \\n\\\n        data1_size = *(int *)(data1 + 4);\\n\\\n        data2_size = *(int *)(data2 + 4);\\n\\\n        if (data1_size < data2_size) {\\n\\\n            data2_ptr = (uint32_t *)(data2 + 0x14);\\n\\\n            data1_ptr = (uint32_t *)(data1 + 0x14);\\n\\\n            data1_size2 = data1_size;\\n\\\n            data1_size = data2_size;\\n\\\n            data2_size = data1_size2;\\n\\\n            hash_ptr2 = data2_ptr;\\n\\\n            data2_ptr = data1_ptr;\\n\\\n            data1_ptr = hash_ptr2;\\n\\\n        }\\n\\\n        else {\\n\\\n            data1_ptr = (uint32_t *)(data1 + 0x14);\\n\\\n            data2_ptr = (uint32_t *)(data2 + 0x14);\\n\\\n            hash_ptr2 = data2_ptr;\\n\\\n        }\\n\\\n        hash_ptr1 = (uint32_t *)(FUN_080090c0(hash, (data1_size + data2_size + 1)) + 0x14);\\n\\\n        hash_ptr3 = hash_ptr1 + (data1_size + data2_size);\\n\\\n        for (hash_ptr4 = hash_ptr1; hash_ptr4 < hash_ptr3; hash_ptr4++) {\\n\\\n            *hash_ptr4 = 0;\\n\\\n        }\\n\\\n        data1_ptr2 = data2_ptr + data2_size;\\n\\\n        data1_ptr3 = data1_ptr;\\n\\\n        if ((data2_ptr + 0x14) < data1_ptr2) {\\n\\\n            data2_ptr2 = (uint32_t *)((uint32_t)(data2_ptr + 0x14) + ((uint32_t)(data1_ptr2 - (data2_ptr + 0x15)) & 0xFFFFFFFC));\\n\\\n            data2_ptr3 = (uint32_t *)(data2 + 0x10);\\n\\\n            loop_ctr1 = 0;\\n\\\n            do {\\n\\\n                while (true) {\\n\\\n                    data2_ptr3 += 1;\\n\\\n                    temp1 = *data2_ptr3 & 0xFFFF;\\n\\\n                    if (temp1 != 0) break;\\n\\\n                    temp1 = *data2_ptr3 >> 0x10;\\n\\\n                    if (temp1 == 0) goto LAB_080092d2;\\n\\\n                    loop_ctr1 += 1;\\n\\\n                }\\n\\\n                temp1 = 0;\\n\\\n                data1_ptr4 = hash_ptr1;\\n\\\n                data2_ptr4 = data1_ptr;\\n\\\n                temp2 = *data2_ptr3 & 0xFFFF;\\n\\\n                loop_ctr2 = 0;\\n\\\n                do {\\n\\\n                    data1_ptr5 = data2_ptr4 + 1;\\n\\\n                    data2_ptr6 = data1_ptr4 + 1;\\n\\\n                    temp1 += temp2 * (*data2_ptr4 >> 0x10) + (*data1_ptr4 >> 0x10);\\n\\\n                    temp2 = temp2 * (*data2_ptr4 & 0xFFFF) + (*data1_ptr4 & 0xFFFF) + (temp1 >> 0x10);\\n\\\n                    carry = temp2 >> 0x10;\\n\\\n                    *data1_ptr4 = (*data1_ptr4 & 0xFFFF) | (temp2 << 0x10);\\n\\\n                    temp1 = carry;\\n\\\n                    data2_ptr4 = data1_ptr5;\\n\\\n                    data1_ptr4 = data2_ptr6;\\n\\\n                    loop_ctr2 += 1;\\n\\\n                } while (data1_ptr5 < (data1_ptr + data1_size));\\n\\\n                data2_ptr6[1] = temp2;\\n\\\n                hash_ptr1 += 1;\\n\\\n                if (data2_ptr2 == data2_ptr3) goto LAB_0800937a;\\n\\\n            } while (data2_ptr2 != data2_ptr3);\\n\\\n        }\\n\\\n    LAB_080092d2:\\n\\\n        hash_ptr1 += 1;\\n\\\n    LAB_0800937a:\\n\\\n        if (0 < (data1_size + data2_size)) {\\n\\\n            hash_ptr3 -= 1;\\n\\\n            temp1 = hash_ptr3[0];\\n\\\n            while ((temp1 == 0) && (data1_size + data2_size != 0)) {\\n\\\n                hash_ptr3 -= 1;\\n\\\n                temp1 = *hash_ptr3;\\n\\\n            }\\n\\\n        }\\n\\\n        *(int *)(hash + 4) = (data1_size + data2_size);\\n\\\n        return;\\n\\\n    }",
            "called": [
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009258",
            "calling": [
                "FUN_080093a4",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "calculate_hash_08009258"
        },
        "FUN_08000c08": {
            "renaming": {
                "FUN_08000c08": "calculate_value_from_param_08000c08",
                "param_1": "param",
                "iVar1": "leading_zero_count",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "shifted_param",
                "0U": "shifted_zero",
                "result": "result",
                "carry_bit": "carry_bit",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_value_from_param_08000c08(uint param) {\n  int leading_zero_count = count_leading_zeroes(param);\n  uint shift_amount = leading_zero_count - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zero_count > 7) {\n    uint shifted_param = param << (shift_amount & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry_bit = (uint)(0x7fffffff < (0 << (shift_amount & 0xff)));\n    uint result = multiplier + shifted_param + shifted_zero + carry_bit;\n    if ((0 << (shift_amount & 0xff)) == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_param = param << ((leading_zero_count + 0x18U) & 0xff);\n  int shifted_right = (param >> (0x20 - ((leading_zero_count + 0x18U) & 0xff))) - ((int)shifted_param >> 0x1f);\n  uint carry_bit = ~(shifted_param >> 0x1f);\n  uint result = multiplier + shifted_right;\n  if ((shifted_param & 0x7fffffff) == 0) {\n    result = result & carry_bit;\n  }\n  return result;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c08",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "calculate_value_from_param_08000c08"
        },
        "FUN_08003c6e": {
            "renaming": {
                "FUN_08003c6e": "do_nothing_08003c6e"
            },
            "code": "\nvoid do_nothing_08003c6e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c6e",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08003c6e"
        },
        "FUN_080042de": {
            "renaming": {
                "FUN_080042de": "set_param_value_080042de",
                "param_1": "param_array",
                "param_2": "value_array",
                "uVar1": "result"
            },
            "code": "int set_param_value_080042de(int* param_array, uint* value_array) {\n    int result = 0;\n    if (*(char *)(param_array + 0xf) == 1) {\n        result = 2;\n    }\n    else {\n        *(char *)(param_array + 0xf) = 1;\n        *(char *)((int)param_array + 0x3d) = 2;\n        *(uint *)(*param_array + 4) &= 0xffffff8f;\n        *(uint *)(*param_array + 4) |= *value_array;\n        *(uint *)(*param_array + 8) &= 0xffffff7f;\n        *(uint *)(*param_array + 8) |= *(value_array + 1);\n        *(char *)((int)param_array + 0x3d) = 1;\n        *(char *)(param_array + 0xf) = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080042de",
            "calling": [
                "FUN_080053b0",
                "FUN_08005500"
            ],
            "imported": false,
            "current_name": "set_param_value_080042de"
        },
        "FUN_08004366": {
            "renaming": {
                "FUN_08004366": "do_nothing_08004366"
            },
            "code": "\nvoid do_nothing_08004366(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004366",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08004366"
        },
        "FUN_08009530": {
            "renaming": {
                "FUN_08009530": "compare_arrays_and_set_result_08009530",
                "param_1": "function_parameter",
                "param_2": "array1",
                "param_3": "array2",
                "param_4": "parameter_4",
                "iVar1": "result_array_address",
                "iVar5": "length_difference",
                "iVar12": "carry",
                "puVar2": "array2_start",
                "uVar3": "array1_length",
                "uVar4": "temp_result",
                "puVar6": "result_array",
                "puVar7": "array1_current",
                "puVar8": "array2_current",
                "puVar9": "array2_start",
                "puVar10": "array1_start",
                "puVar11": "array2_end",
                "puVar13": "array1_end",
                "uVar14": "result_length",
                "i": "loop_counter"
            },
            "code": "void compare_arrays_and_set_result_08009530(int param_1, uint *array1, uint *array2, int param_4)\n{\n  int length_difference = array1[4] - (int)array2[4];\n  uint *array1_start = array1 + 5;\n  uint *array2_start = array2 + 5;\n  uint *array1_end;\n  uint *array2_end;\n  uint *result_array;\n  int result_length;\n  int carry = 0;\n  int i;\n  uint temp_result;\n  \n  if (length_difference == 0) {\n    array1_end = array1_start + (int)array2[4];\n    array2_end = array2_start + (int)array2[4];\n    while( true ) {\n      array1_end = array1_end - 1;\n      array2_end = array2_end - 1;\n      if (*array1_end != *array2_end) break;\n      if (array1_end <= array1_start) {\n        int result_array_address = create_result_array(param_1, 0, array1_end, array2_end, param_4);\n        *(int *)(result_array_address + 0x10) = 1;\n        *(int *)(result_array_address + 0x14) = 0;\n        return;\n      }\n    }\n    if (*array2_end <= *array1_end) goto LAB_08009578;\n  }\n  else if (-1 < length_difference) {\n    length_difference = 0;\n    array1_end = array2;\n    goto LAB_08009578;\n  }\n  length_difference = 1;\n  array1_end = array1_start;\n  array2_end = array2_start;\n  result_array = array2;\n  array2_start = array1;\n  array1_start = array1_end;\nLAB_08009578:\n  int result_array_address = create_result_array(param_1, array2_start[1], array1_end, array2_end, param_4);\n  result_length = array2_start[4];\n  array1_end = array1_start + result_length;\n  array2_end = array2_start + result_length;\n  *(int *)(result_array_address + 0xc) = length_difference;\n  result_array = (uint *)(result_array_address + 0x14);\n  carry = 0;\n  for (i = 0; i < result_length; i++) {\n    temp_result = ((array1_start[i] & 0xffff) + carry) - (array2_start[i] & 0xffff);\n    carry = ((array1_start[i] >> 0x10) - (array2_start[i] >> 0x10)) + ((int)temp_result >> 0x10);\n    temp_result = temp_result & 0xffff | carry * 0x10000;\n    result_array[i] = temp_result;\n    carry = carry >> 0x10;\n  }\n  result_array = result_array + 1;\n  if (array1_start + i < array1_end) {\n    do {\n      temp_result = (array1_start[i] & 0xffff) + carry;\n      carry = ((int)temp_result >> 0x10) + (array1_start[i] >> 0x10);\n      temp_result = temp_result & 0xffff | carry * 0x10000;\n      result_array[i - result_length] = temp_result;\n      carry = carry >> 0x10;\n      i++;\n    } while (array1_start + i < array1_end);\n    result_array += (array1_start + i - array1_end + 3) / 4;\n  }\n  result_array -= 1;\n  while (temp_result == 0) {\n    result_array -= 1;\n    result_length -= 1;\n    temp_result = *result_array;\n  }\n  *(int *)(result_array_address + 0x10) = result_length;\n  return;\n}\n",
            "called": [
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009530",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "compare_arrays_and_set_result_08009530"
        },
        "FUN_08008af8": {
            "renaming": {
                "FUN_08008af8": "FUNC_08008af8"
            },
            "code": "\nint * FUNC_08008af8(undefined4 *param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  uint uVar4;\n  uint uVar5;\n  uint *puVar6;\n  int iVar7;\n  undefined *puVar8;\n  uint uVar9;\n  uint uVar10;\n  undefined4 *puVar11;\n  undefined *puVar12;\n  undefined *puVar13;\n  uint uVar14;\n  uint uVar15;\n  int iVar16;\n  undefined4 *puVar17;\n  undefined4 *puVar18;\n  \n  uVar14 = param_2 + 0xb;\n  if (uVar14 < 0x17) {\n    if (0x10 < param_2) goto LAB_08008c7a;\n    FUN_080090a8();\n    uVar15 = 0x10;\n    iVar7 = 0x18;\n    uVar14 = 2;\nLAB_08008b18:\n    puVar8 = PTR_DAT_08008e4c + iVar7;\n    puVar12 = *(undefined **)(puVar8 + 4);\n    if ((puVar12 != puVar8 + -8) || (puVar12 = *(undefined **)(puVar8 + 0xc), puVar8 != puVar12)) {\n      iVar7 = *(int *)(puVar12 + 0xc);\n      puVar8 = puVar12 + (*(uint *)(puVar12 + 4) & 0xfffffffc);\n      uVar14 = *(uint *)(puVar8 + 4);\nLAB_08008b34:\n      iVar16 = *(int *)(puVar12 + 8);\n      *(int *)(iVar16 + 0xc) = iVar7;\n      *(int *)(iVar7 + 8) = iVar16;\n      *(uint *)(puVar8 + 4) = uVar14 | 1;\n      FUN_080090b4(param_1);\n      return (int *)(puVar12 + 8);\n    }\n    uVar14 = uVar14 + 2;\n  }\n  else {\n    uVar15 = uVar14 & 0xfffffff8;\n    if (((int)uVar15 < 0) || (uVar15 < param_2)) {\nLAB_08008c7a:\n      *param_1 = 0xc;\n      return (int *)0x0;\n    }\n    FUN_080090a8();\n    if (uVar15 < 0x1f8) {\n      uVar14 = uVar14 >> 3;\n      iVar7 = uVar15 + 8;\n      goto LAB_08008b18;\n    }\n    uVar4 = uVar14 >> 9;\n    if (uVar4 == 0) {\n      iVar7 = 0x200;\n      uVar9 = 0x40;\n      uVar4 = 0x3f;\n    }\n    else if (uVar4 < 5) {\n      uVar9 = (uVar14 >> 6) + 0x39;\n      uVar4 = (uVar14 >> 6) + 0x38;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x15) {\n      uVar9 = uVar4 + 0x5c;\n      uVar4 = uVar4 + 0x5b;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x55) {\n      uVar9 = (uVar14 >> 0xc) + 0x6f;\n      uVar4 = (uVar14 >> 0xc) + 0x6e;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x155) {\n      uVar9 = (uVar14 >> 0xf) + 0x78;\n      uVar4 = (uVar14 >> 0xf) + 0x77;\n      iVar7 = uVar9 * 8;\n    }\n    else if (uVar4 < 0x555) {\n      uVar9 = (uVar14 >> 0x12) + 0x7d;\n      uVar4 = (uVar14 >> 0x12) + 0x7c;\n      iVar7 = uVar9 * 8;\n    }\n    else {\n      iVar7 = 0x3f8;\n      uVar9 = 0x7f;\n      uVar4 = 0x7e;\n    }\n    for (puVar12 = *(undefined **)(PTR_DAT_08008e4c + iVar7 + 4); uVar14 = uVar9,\n        PTR_DAT_08008e4c + iVar7 + -8 != puVar12; puVar12 = *(undefined **)(puVar12 + 0xc)) {\n      iVar16 = (*(uint *)(puVar12 + 4) & 0xfffffffc) - uVar15;\n      uVar14 = uVar4;\n      if (0xf < iVar16) break;\n      if (-1 < iVar16) {\n        puVar8 = puVar12 + (*(uint *)(puVar12 + 4) & 0xfffffffc);\n        uVar14 = *(uint *)(puVar8 + 4);\n        iVar7 = *(int *)(puVar12 + 0xc);\n        goto LAB_08008b34;\n      }\n    }\n  }\n  puVar8 = PTR_PTR_DAT_08008e60;\n  puVar12 = PTR_DAT_08008e4c;\n  puVar13 = *(undefined **)(PTR_DAT_08008e4c + 0x10);\n  if (puVar13 == PTR_PTR_DAT_08008e60) {\n    uVar4 = *(uint *)(PTR_DAT_08008e4c + 4);\n    uVar9 = 1 << ((int)uVar14 >> 2 & 0xffU);\n    if (uVar9 <= uVar4) goto LAB_08008c06;\n  }\n  else {\n    uVar9 = *(uint *)(puVar13 + 4);\n    uVar10 = uVar9 & 0xfffffffc;\n    uVar4 = uVar10 - uVar15;\n    if (0xf < (int)uVar4) {\n      puVar3 = puVar13 + uVar15;\n      *(uint *)(puVar13 + 4) = uVar15 | 1;\n      *(undefined **)(puVar12 + 0x10) = puVar3;\n      *(undefined **)(puVar12 + 0x14) = puVar3;\n      *(undefined **)(puVar3 + 8) = puVar8;\n      *(undefined **)(puVar3 + 0xc) = puVar8;\n      *(uint *)(puVar3 + 4) = uVar4 | 1;\n      *(uint *)(puVar13 + uVar10) = uVar4;\n      FUN_080090b4(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    *(undefined **)(PTR_DAT_08008e4c + 0x10) = PTR_PTR_DAT_08008e60;\n    *(undefined **)(puVar12 + 0x14) = puVar8;\n    if (-1 < (int)uVar4) {\n      *(uint *)(puVar13 + uVar10 + 4) = *(uint *)(puVar13 + uVar10 + 4) | 1;\n      FUN_080090b4(param_1);\n      return (int *)(puVar13 + 8);\n    }\n    if (uVar10 < 0x200) {\n      iVar7 = (uVar9 >> 3) + 1;\n      iVar16 = *(int *)(puVar12 + iVar7 * 8);\n      uVar4 = 1 << ((int)(uVar9 >> 3) >> 2 & 0xffU) | *(uint *)(puVar12 + 4);\n      *(int *)(puVar13 + 8) = iVar16;\n      *(undefined **)(puVar13 + 0xc) = puVar12 + iVar7 * 8 + -8;\n      *(uint *)(puVar12 + 4) = uVar4;\n      *(undefined **)(puVar12 + iVar7 * 8) = puVar13;\n      *(undefined **)(iVar16 + 0xc) = puVar13;\n    }\n    else {\n      uVar4 = uVar9 >> 9;\n      if (uVar4 < 5) {\n        iVar7 = ((uVar9 >> 6) + 0x39) * 8;\n        iVar16 = (uVar9 >> 6) + 0x38;\n      }\n      else if (uVar4 < 0x15) {\n        iVar7 = (uVar4 + 0x5c) * 8;\n        iVar16 = uVar4 + 0x5b;\n      }\n      else if (uVar4 < 0x55) {\n        iVar7 = ((uVar9 >> 0xc) + 0x6f) * 8;\n        iVar16 = (uVar9 >> 0xc) + 0x6e;\n      }\n      else if (uVar4 < 0x155) {\n        iVar7 = ((uVar9 >> 0xf) + 0x78) * 8;\n        iVar16 = (uVar9 >> 0xf) + 0x77;\n      }\n      else if (uVar4 < 0x555) {\n        iVar7 = ((uVar9 >> 0x12) + 0x7d) * 8;\n        iVar16 = (uVar9 >> 0x12) + 0x7c;\n      }\n      else {\n        iVar7 = 0x3f8;\n        iVar16 = 0x7e;\n      }\n      puVar3 = *(undefined **)(puVar12 + iVar7);\n      puVar1 = puVar12 + iVar7 + -8;\n      if (puVar1 == puVar3) {\n        uVar4 = 1 << (iVar16 >> 2 & 0xffU) | *(uint *)(puVar12 + 4);\n        *(uint *)(puVar12 + 4) = uVar4;\n      }\n      else {\n        do {\n          if ((*(uint *)(puVar3 + 4) & 0xfffffffc) <= uVar10) break;\n          puVar3 = *(undefined **)(puVar3 + 8);\n        } while (puVar1 != puVar3);\n        puVar1 = *(undefined **)(puVar3 + 0xc);\n        uVar4 = *(uint *)(puVar12 + 4);\n      }\n      *(undefined **)(puVar13 + 8) = puVar3;\n      *(undefined **)(puVar13 + 0xc) = puVar1;\n      *(undefined **)(puVar1 + 8) = puVar13;\n      *(undefined **)(puVar3 + 0xc) = puVar13;\n    }\n    uVar9 = 1 << ((int)uVar14 >> 2 & 0xffU);\n    if (uVar9 <= uVar4) {\nLAB_08008c06:\n      if ((uVar9 & uVar4) == 0) {\n        uVar14 = uVar14 & 0xfffffffc;\n        do {\n          uVar9 = uVar9 << 1;\n          uVar14 = uVar14 + 4;\n        } while ((uVar9 & uVar4) == 0);\n      }\n      do {\n        puVar17 = (undefined4 *)(puVar12 + uVar14 * 8);\n        uVar4 = uVar14;\n        puVar18 = puVar17;\n        do {\n          for (puVar11 = (undefined4 *)puVar18[3]; puVar18 != puVar11;\n              puVar11 = (undefined4 *)puVar11[3]) {\n            uVar10 = puVar11[1] & 0xfffffffc;\n            uVar5 = uVar10 - uVar15;\n            if (0xf < (int)uVar5) {\n              iVar16 = puVar11[2];\n              iVar7 = puVar11[3];\n              puVar13 = (undefined *)(uVar15 + (int)puVar11);\n              puVar11[1] = uVar15 | 1;\n              *(int *)(iVar16 + 0xc) = iVar7;\n              *(int *)(iVar7 + 8) = iVar16;\n              *(undefined **)(puVar12 + 0x10) = puVar13;\n              *(undefined **)(puVar12 + 0x14) = puVar13;\n              *(undefined **)(puVar13 + 8) = puVar8;\n              *(undefined **)(puVar13 + 0xc) = puVar8;\n              *(uint *)(puVar13 + 4) = uVar5 | 1;\n              *(uint *)((int)puVar11 + uVar10) = uVar5;\n              FUN_080090b4(param_1);\n              return puVar11 + 2;\n            }\n            if (-1 < (int)uVar5) {\n              iVar7 = puVar11[3];\n              iVar16 = puVar11[2];\n              *(uint *)((int)puVar11 + uVar10 + 4) = *(uint *)((int)puVar11 + uVar10 + 4) | 1;\n              *(int *)(iVar16 + 0xc) = iVar7;\n              *(int *)(iVar7 + 8) = iVar16;\n              FUN_080090b4(param_1);\n              return puVar11 + 2;\n            }\n          }\n          uVar4 = uVar4 + 1;\n          puVar18 = puVar18 + 2;\n        } while ((uVar4 & 3) != 0);\n        do {\n          uVar10 = uVar14 & 3;\n          puVar18 = puVar17 + -2;\n          uVar14 = uVar14 - 1;\n          if (uVar10 == 0) {\n            uVar10 = *(uint *)(puVar12 + 4) & ~uVar9;\n            *(uint *)(puVar12 + 4) = uVar10;\n            goto LAB_08008f24;\n          }\n          puVar17 = (undefined4 *)*puVar17;\n        } while (puVar17 == puVar18);\n        uVar10 = *(uint *)(puVar12 + 4);\nLAB_08008f24:\n        uVar9 = uVar9 * 2;\n        if ((uVar10 <= uVar9 && uVar9 - uVar10 != 0) || (uVar14 = uVar4, uVar9 == 0)) break;\n        for (; (uVar9 & uVar10) == 0; uVar9 = uVar9 << 1) {\n          uVar14 = uVar14 + 4;\n        }\n      } while( true );\n    }\n  }\n  puVar8 = PTR_DAT_08008e64;\n  puVar13 = *(undefined **)(puVar12 + 8);\n  uVar14 = *(uint *)(puVar13 + 4) & 0xfffffffc;\n  if ((uVar15 <= uVar14) && (uVar4 = uVar14 - uVar15, 0xf < (int)uVar4)) goto LAB_08008dac;\n  if (*(int *)PTR_DAT_08008e64 == -1) {\n    uVar4 = uVar15 + *(int *)PTR_DAT_08008e50 + 0x10;\n  }\n  else {\n    uVar4 = uVar15 + *(int *)PTR_DAT_08008e50 + 0x100f & 0xfffff000;\n  }\n  puVar1 = (undefined *)FUN_08009744(param_1,uVar4);\n  puVar6 = (uint *)PTR_DAT_08009018;\n  puVar3 = PTR_DAT_08008e54;\n  if (puVar1 == (undefined *)0xffffffff) {\nLAB_08008ed8:\n    puVar13 = *(undefined **)(puVar12 + 8);\n    uVar14 = *(uint *)(puVar13 + 4);\n  }\n  else {\n    puVar2 = puVar13 + uVar14;\n    if (puVar2 < puVar1 || puVar2 == puVar1) {\n      uVar9 = *(int *)PTR_DAT_08008e54 + uVar4;\n      *(uint *)PTR_DAT_08008e54 = uVar9;\n      puVar6 = (uint *)puVar3;\n      if ((puVar2 != puVar1) || (((uint)puVar2 & 0xfff) != 0)) goto LAB_08008d02;\n      *(uint *)(*(int *)(puVar12 + 8) + 4) = uVar14 + uVar4 | 1;\n    }\n    else {\n      if (puVar13 != puVar12) goto LAB_08008ed8;\n      uVar9 = *(int *)PTR_DAT_08009018 + uVar4;\n      *(uint *)PTR_DAT_08009018 = uVar9;\nLAB_08008d02:\n      if (*(int *)puVar8 == -1) {\n        *(undefined **)puVar8 = puVar1;\n      }\n      else {\n        *puVar6 = (uint)(puVar1 + (uVar9 - (int)puVar2));\n      }\n      uVar9 = (uint)puVar1 & 7;\n      if (uVar9 == 0) {\n        iVar7 = 0x1000;\n      }\n      else {\n        puVar1 = puVar1 + (8 - uVar9);\n        iVar7 = 0x1008 - uVar9;\n      }\n      iVar7 = iVar7 - ((uint)(puVar1 + uVar4) & 0xfff);\n      iVar16 = FUN_08009744(param_1,iVar7);\n      if (iVar16 == -1) {\n        uVar4 = 1;\n        iVar7 = 0;\n      }\n      else {\n        uVar4 = (iVar16 - (int)puVar1) + iVar7 | 1;\n      }\n      uVar9 = *puVar6 + iVar7;\n      *(undefined **)(puVar12 + 8) = puVar1;\n      *puVar6 = uVar9;\n      *(uint *)(puVar1 + 4) = uVar4;\n      if (puVar13 != puVar12) {\n        if (uVar14 < 0x10) {\n          *(undefined4 *)(puVar1 + 4) = 1;\n          goto LAB_08008eee;\n        }\n        uVar14 = uVar14 - 0xc & 0xfffffff8;\n        *(uint *)(puVar13 + 4) = *(uint *)(puVar13 + 4) & 1 | uVar14;\n        *(undefined4 *)(puVar13 + uVar14 + 4) = 5;\n        *(undefined4 *)(puVar13 + uVar14 + 8) = 5;\n        if (0xf < uVar14) {\n          FUNC_080088ec(param_1,puVar13 + 8);\n          uVar9 = *puVar6;\n        }\n      }\n    }\n    puVar8 = PTR_DAT_08008e5c;\n    puVar13 = *(undefined **)(puVar12 + 8);\n    uVar4 = *(uint *)PTR_DAT_08008e5c;\n    if (*(uint *)PTR_DAT_08008e58 < uVar9) {\n      *(uint *)PTR_DAT_08008e58 = uVar9;\n    }\n    uVar14 = *(uint *)(puVar13 + 4);\n    if (uVar4 < uVar9) {\n      *(uint *)puVar8 = uVar9;\n    }\n  }\n  uVar4 = (uVar14 & 0xfffffffc) - uVar15;\n  if ((uVar15 <= (uVar14 & 0xfffffffc)) && (0xf < (int)uVar4)) {\nLAB_08008dac:\n    *(uint *)(puVar13 + 4) = uVar15 | 1;\n    *(undefined **)(puVar12 + 8) = puVar13 + uVar15;\n    *(uint *)(puVar13 + uVar15 + 4) = uVar4 | 1;\n    FUN_080090b4(param_1);\n    return (int *)(puVar13 + 8);\n  }\nLAB_08008eee:\n  FUN_080090b4(param_1);\n  return (int *)0x0;\n}\n\n",
            "called": [
                "FUN_08009744",
                "FUN_080088ec",
                "FUN_080090a8",
                "FUN_080090b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008af8",
            "calling": [
                "FUN_08009980",
                "FUN_08009adc",
                "FUN_08005e9c",
                "FUN_080097cc"
            ],
            "imported": false,
            "current_name": "FUNC_08008af8"
        },
        "FUN_08002bb4": {
            "renaming": {
                "FUN_08002bb4": "check_flag_08002bb4",
                "param_1": "flag_ptr",
                "param_2": "flag_mask",
                "param_3": "param_3",
                "iVar1": "flag_status",
                "FUN_08002d3c": "check_flag_status",
                "FUN_080015a0": "get_flag_status"
            },
            "code": "int check_flag_08002bb4(int *flag_ptr, uint flag_mask, int param_3)\n{\n  int flag_status;\n  while( true ) {\n    if ((*(uint *)(*flag_ptr + 0x14) & 0x80) == 0x80) {\n      return 0;\n    }\n    flag_status = check_flag_08002bb4_status(flag_ptr);\n    if (flag_status != 0) break;\n    if ((flag_mask != 0xffffffff) && ((flag_mask == 0 || (flag_status = get_flag_status(), flag_mask < (uint)(flag_status - param_3)))) {\n      flag_ptr[0x10] = flag_ptr[0x10] | 0x20;\n      flag_ptr[0xc] = 0;\n      *(undefined *)((int)flag_ptr + 0x3d) = 0x20;\n      *(undefined *)(flag_ptr + 0xf) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_080015a0",
                "FUN_08002d3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bb4",
            "calling": [
                "FUN_08002640",
                "FUN_08001ccc",
                "FUN_080027f4"
            ],
            "imported": false,
            "current_name": "check_flag_08002bb4"
        },
        "FUN_08002d3c": {
            "renaming": {
                "FUN_08002d3c": "checkFlag_08002d3c",
                "param_1": "flagPtr",
                "bVar1": "isFlagSet"
            },
            "code": "bool checkFlag_08002d3c(uint32_t *flagPtr)\n{\n  bool isFlagSet = (*(uint *)(*flagPtr + 0x14) & 0x400) == 0x400;\n  if (isFlagSet) {\n    *(undefined4 *)(*flagPtr + 0x14) = 0xfffffbff;\n    flagPtr[0x10] = 4;\n    flagPtr[0xc] = 0;\n    *(undefined *)((int)flagPtr + 0x3d) = 0x20;\n    *(undefined *)(flagPtr + 0xf) = 0;\n  }\n  return isFlagSet;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d3c",
            "calling": [
                "FUN_08002c2e",
                "FUN_08002bb4"
            ],
            "imported": false,
            "current_name": "checkFlag_08002d3c"
        },
        "FUN_08004bd8": {
            "renaming": {
                "FUN_08004bd8": "process_data_08004bd8",
                "param_1": "data",
                "param_2": "result",
                "uVar1": "processed_data",
                "uVar2": "var1",
                "uVar3": "var2",
                "PTR_DAT_08004d60": "should_process",
                "DAT_08004d40": "var3",
                "DAT_08004d44": "var4",
                "DAT_08004d64": "var5",
                "DAT_08004d68": "var6",
                "param_1 + 4": "var7",
                "param_1 + 8": "var8",
                "DAT_08004d48": "var9",
                "DAT_08004d4c": "var10",
                "param_1 + 0x24": "var11",
                "PTR_DAT_08004d70": "should_process",
                "*(undefined4 *)PTR_DAT_08004d60": "*should_process",
                "thunk_FUN_08005838": "combine_vars",
                "FUN_0800071c": "calculate_var4",
                "FUN_08000158": "calculate_var9",
                "FUN_080004c8": "combine_vars",
                "FUN_0800015c": "calculate_var12",
                "FUN_080009fc": "calculate_var15",
                "FUN_08000418": "get_var2",
                "FUNC_08000aa4": "process_helper"
            },
            "code": "void process_data_08004bd8(int data, int* result) {\n  int processed_data = process_helper(data);\n  int var1 = get_var1();\n  int var2 = get_var2();\n  int DAT_08004d40 = combine_vars(var1, var2);\n  int DAT_08004d44 = calculate_DAT_08004d44();\n  int DAT_08004d64 = calculate_DAT_08004d64();\n  int DAT_08004d68 = combine_vars(DAT_08004d44, DAT_08004d64);\n  int var7 = calculate_var7();\n  int var8 = combine_vars(processed_data, var7);\n  int DAT_08004d48 = calculate_DAT_08004d48(var8);\n  if (*(undefined4 *)PTR_DAT_08004d60) {\n    int DAT_08004d4c = calculate_DAT_08004d4c(DAT_08004d48);\n    int var11 = calculate_var11(processed_data);\n    int var12 = calculate_var12(DAT_08004d48);\n    int var13 = combine_vars(DAT_08004d4c, var12);\n    int var14 = calculate_var14(var11, var13);\n    int var15 = calculate_var15(var14);\n    *result = var15;\n  }\n  else {\n    *result = DAT_08004d48;\n    *(undefined4 *)PTR_DAT_08004d60 = 0;\n  }\n}\n",
            "called": [
                "FUN_08000aa4",
                "FUN_0800015c",
                "FUN_08000418",
                "FUN_08000158",
                "FUN_080009fc",
                "thunk_FUN_08005838",
                "FUN_080004c8",
                "FUN_0800071c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bd8",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "process_data_08004bd8"
        },
        "FUN_080090c0": {
            "renaming": {
                "FUN_080090c0": "get_value_from_table_080090c0",
                "param_1": "table_start_address",
                "param_2": "index",
                "puVar1": "value_pointer",
                "iVar2": "table_address",
                "FUN_08009980": "allocate_table"
            },
            "code": "undefined4 * get_value_from_table_080090c0(int table_start_address, uint32_t index)\n{\n  undefined4 *value_pointer;\n  int table_address;\n  table_address = *(int *)(table_start_address + 0x4c);\n  if (table_address == 0) {\n    table_address = allocate_table(table_start_address,4,0x21);\n    *(int *)(table_start_address + 0x4c) = table_address;\n    if (table_address == 0) {\n      return (undefined4 *)0x0;\n    }\n  }\n  value_pointer = *(undefined4 **)(table_address + index * 4);\n  if (value_pointer == (undefined4 *)0x0) {\n    int table_size = 1 << (index & 0xff);\n    value_pointer = (undefined4 *)allocate_table(table_start_address,1,(table_size + 5) * 4);\n    if (value_pointer == (undefined4 *)0x0) {\n      return (undefined4 *)0x0;\n    }\n    value_pointer[1] = index;\n    value_pointer[2] = table_size;\n  }\n  else {\n    *(undefined4 *)(table_address + index * 4) = *value_pointer;\n  }\n  value_pointer[3] = 0;\n  value_pointer[4] = 0;\n  return value_pointer;\n}\n\n",
            "called": [
                "FUN_08009980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080090c0",
            "calling": [
                "FUN_08009258",
                "FUN_08009444",
                "FUN_08009244",
                "FUN_08009120",
                "FUN_08009530",
                "FUN_08009630",
                "FUN_080093a4",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "get_value_from_table_080090c0"
        },
        "FUN_080091e4": {
            "renaming": {
                "FUN_080091e4": "count_leading_zeros_080091e4",
                "*param_1": "*num",
                "uVar1": "leading_zeros",
                "uVar2": "temp_num"
            },
            "code": "uint count_leading_zeros_080091e4(uint *num) {\n  uint temp_num = *num;\n  uint leading_zeros = temp_num & 7;\n  if (leading_zeros == 0) {\n    if ((temp_num & 0xffff) == 0) {\n      temp_num = temp_num >> 0x10;\n      leading_zeros = 0x10;\n    }\n    if ((temp_num & 0xff) == 0) {\n      temp_num = temp_num >> 8;\n      leading_zeros += 8;\n    }\n    if ((temp_num & 0xf) == 0) {\n      temp_num = temp_num >> 4;\n      leading_zeros += 4;\n    }\n    if ((temp_num & 3) == 0) {\n      temp_num = temp_num >> 2;\n      leading_zeros += 2;\n    }\n    if (-1 < (int)(temp_num << 0x1f)) {\n      temp_num = temp_num >> 1;\n      if (temp_num == 0) {\n        return 0x20;\n      }\n      leading_zeros += 1;\n    }\n    *num = temp_num;\n    return leading_zeros;\n  }\n  if (-1 < (int)(temp_num << 0x1f)) {\n    if ((int)(temp_num << 0x1e) < 0) {\n      *num = temp_num >> 1;\n      return 1;\n    }\n    *num = temp_num >> 2;\n    return 2;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091e4",
            "calling": [
                "FUN_08009630"
            ],
            "imported": false,
            "current_name": "count_leading_zeros_080091e4"
        },
        "FUN_080009fc": {
            "renaming": {
                "FUN_080009fc": "calculate_float_bits_080009fc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "in_r12": "temp",
                "bVar4": "flag1",
                "bVar5": "flag2"
            },
            "code": "uint calculate_float_bits_080009fc(uint input1, uint input2) {\n  uint result1;\n  uint result2;\n  uint result3;\n  uint temp;\n  bool flag1;\n  bool flag2;\n  \n  result2 = input2 * 2;\n  flag2 = result2 < 0x70000000;\n  result3 = result2 + 0x90000000;\n  result1 = result3;\n  if (!flag2) {\n    temp = result2 + 0x8fe00000;\n    result1 = temp;\n  }\n  flag1 = result1 == 0;\n  if (!flag2 && result3 >= 0x200000) {\n    flag1 = temp == 0x1fc00000;\n  }\n  if (((flag2 || result3 < 0x200000) || 0x1fc00000 < temp) || flag1) {\n    if ((input2 & 0x40000000) != 0) {\n      if (((int)result2 >> 0x15 == -1) && ((input1 | input2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(result2 + 0x92e00000) < 0 != SCARRY4(result3,0x2e00000)) {\n      return input2 & 0x80000000;\n    }\n    result2 = 0x18 - (result2 + 0x92e00000 >> 0x15);\n    result1 = input1 >> (result2 & 0xff);\n    if (input1 << (0x20 - result2 & 0xff) != 0) {\n      result1 = result1 | 1;\n    }\n    result3 = input2 & 0x1fffff | 0x100000;\n    input1 = result1 | result3 << (0x20 - result2 & 0xff);\n    result3 = (result3 >> (result2 & 0xff)) << 1;\n  }\n  result1 = (input2 & 0x80000000 | input1 >> 0x1d) + result3 * 4 + (uint)(0x7fffffff < input1 * 8);\n  if (input1 * 8 == 0x80000000) {\n    result1 = result1 & 0xfffffffe;\n  }\n  return result1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009fc",
            "calling": [
                "FUN_08004d78",
                "FUN_08004bd8"
            ],
            "imported": false,
            "current_name": "calculate_float_bits_080009fc"
        },
        "FUN_08000cb8": {
            "renaming": {
                "FUN_08000cb8": "FUNC_08000cb8"
            },
            "code": "\nuint FUNC_08000cb8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e08;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e08:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cb8",
            "calling": [
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "FUNC_08000cb8"
        },
        "FUN_080093a4": {
            "renaming": {
                "FUN_080093a4": "reverseAndImprove_080093a4",
                "param_1": "inputLength",
                "param_2": "inputArray",
                "param_3": "arrayLength",
                "iVar1": "index",
                "iVar2": "intArrayLength",
                "puVar3": "currentArray",
                "puVar4": "intArray",
                "PTR_DAT_08009440": "arrayConstants",
                "FUN_08009120": "reverse",
                "FUN_080090c0": "create"
            },
            "code": "undefined4 * reverseAndImprove_080093a4(int inputLength, undefined4 *inputArray, uint arrayLength)\n{\n    int remainingBytes = arrayLength & 3;\n    if (remainingBytes != 0) {\n        inputArray = (undefined4 *) reverse(inputLength, inputArray, *(undefined4 *)(PTR_DAT_08009440 + ((arrayLength & 3) - 1) * 4), 0);\n    }\n    int intArrayLength = (int)arrayLength >> 2;\n    if (intArrayLength != 0) {\n        undefined4 *intArray = *(undefined4 **)(inputLength + 0x48);\n        if (intArray == (undefined4 *)0x0) {\n            intArray = (undefined4 *) create(inputLength, 1);\n            intArray[4] = 1;\n            intArray[5] = 0x271;\n            *(undefined4 **)(inputLength + 0x48) = intArray;\n            *intArray = 0;\n        }\n        undefined4 *currentArray = inputArray;\n        if (intArrayLength << 0x1f >= 0) {\n            while (intArrayLength != 0) {\n                undefined4 *newArray = (undefined4 *)*intArray;\n                if (newArray == (undefined4 *)0x0) {\n                    newArray = (undefined4 *) reverseAndImprove_080093a4(inputLength, intArray, intArray);\n                    *intArray = newArray;\n                    *newArray = 0;\n                }\n                currentArray = inputArray;\n                if (intArrayLength << 0x1f < 0) {\n                    break;\n                }\n                intArrayLength = intArrayLength >> 1;\n                intArray = newArray;\n            }\n        }\n        while (intArrayLength != 0) {\n            undefined4 *newArray = (undefined4 *) reverseAndImprove_080093a4(inputLength,currentArray,intArray);\n            if (currentArray == (undefined4 *)0x0) {\n                break;\n            }\n            int index = *(int *)(inputLength + 0x4c);\n            intArrayLength = intArrayLength >> 1;\n            *currentArray = *(undefined4 *)(index + currentArray[1] * 4);\n            *(undefined4 **)(index + currentArray[1] * 4) = currentArray;\n            currentArray = newArray;\n            if (intArrayLength == 0) {\n                return currentArray;\n            }\n        }\n    }\n    return inputArray;\n}\n",
            "called": [
                "FUN_08009258",
                "FUN_08009120",
                "FUN_080090c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080093a4",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "reverseAndImprove_080093a4"
        },
        "FUN_080098c0": {
            "renaming": {
                "FUN_080098c0": "processInput_080098c0",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "puVar1": "ptr1",
                "uVar2": "result",
                "uVar3": "index",
                "uVar4": "numInputs",
                "iVar5": "var1",
                "iVar6": "var2",
                "iVar7": "var3"
            },
            "code": "undefined4 processInput_080098c0(int input, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined *ptr1;\n  undefined4 result;\n  uint index;\n  uint numInputs;\n  int var1;\n  int var2;\n  int var3;\n  ptr1 = PTR_PTR_DAT_08009974;\n  do_nothing_08008af0(*(undefined4 *)PTR_PTR_DAT_08009974);\n  var2 = *(int *)PTR_PTR_DAT_08009978;\n  var1 = *(int *)(var2 + 0x148);\n  if (var1 == 0) {\n    var1 = var2 + 0x14c;\n    *(int *)(var2 + 0x148) = var1;\n  }\n  numInputs = *(uint *)(var1 + 4);\n  if ((int)numInputs < 0x20) {\n    var3 = numInputs + 1;\n  }\n  else {\n    if (DAT_0800997c == 0) {\n      do_nothing_08008af4(*(undefined4 *)ptr1);\n      return 0xffffffff;\n    }\n    var1 = 400;\n    numInputs = 0;\n    _DAT_00000190 = *(undefined4 *)(var2 + 0x148);\n    var3 = 1;\n    _DAT_00000194 = 0;\n    *(undefined4 *)(var2 + 0x148) = 400;\n    _DAT_00000318 = 0;\n    _DAT_0000031c = 0;\n  }\n  if (input != 0) {\n    var2 = var1 + numInputs * 4;\n    *(undefined4 *)(var2 + 0x88) = param_3;\n    index = 1 << (numInputs & 0xff);\n    *(uint *)(var1 + 0x188) = *(uint *)(var1 + 0x188) | index;\n    *(undefined4 *)(var2 + 0x108) = param_4;\n    if (input == 2) {\n      *(uint *)(var1 + 0x18c) = index | *(uint *)(var1 + 0x18c);\n    }\n  }\n  *(int *)(var1 + 4) = var3;\n  result = *(undefined4 *)ptr1;\n  *(undefined4 *)(var1 + (numInputs + 2) * 4) = param_2;\n  do_nothing_08008af4(result);\n  return 0;\n}",
            "called": [
                "FUN_08008af0",
                "FUN_08008af4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098c0",
            "calling": [
                "FUN_080078a0"
            ],
            "imported": false,
            "current_name": "processInput_080098c0"
        },
        "FUN_08003c80": {
            "renaming": {
                "FUN_08003c80": "do_nothing_08003c80"
            },
            "code": "\nvoid do_nothing_08003c80(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003c80",
            "calling": [
                "FUN_080036f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08003c80"
        },
        "FUN_0800015c": {
            "renaming": {
                "FUN_0800015c": "FUNC_0800015c"
            },
            "code": "\nulonglong FUNC_0800015c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_0800039c:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_0800039c;\n    }\nLAB_08000268:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000268;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002e0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002e0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800015c",
            "calling": [
                "FUN_08005838",
                "FUN_080059f0",
                "FUN_08004bd8",
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800015c"
        },
        "FUN_080027f4": {
            "renaming": {
                "FUN_080027f4": "process_data_080027f4",
                "param_1": "buffer",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "size",
                "param_5": "timeout",
                "param_6": "start_time",
                "iVar1": "status",
                "uVar2": "result"
            },
            "code": "undefined4 process_data_080027f4(uint **buffer, byte flag, undefined2 value, short size, uint timeout, int start_time)\n{\n    int status;\n    undefined4 result;\n    \n    **buffer |= 0x400;\n    **buffer |= 0x100;\n    \n    while ((~(*buffer)[5] & 1) != 0)\n    {\n        if ((timeout != 0xffffffff) && ((timeout == 0) || ((status = FUN_080015a0()) - start_time > timeout)))\n        {\n            (*buffer)[12] = NULL;\n            *((byte*)buffer + 0x3d) = 0x20;\n            *((byte*)buffer + 0x3e) = 0;\n            *((uint*)buffer + 15) = 0;\n            result = 3;\n            goto end;\n        }\n    }\n    \n    (*buffer)[4] = flag & 0xfe;\n    status = FUN_08002ad8(buffer, DAT_08002ad4, timeout, start_time);\n    \n    if (status != 0)\n    {\n        if ((*buffer)[16] == (uint*)0x4)\n        {\n            **buffer |= 0x200;\n            result = 1;\n            goto end;\n        }\n        result = 3;\n        goto end;\n    }\n    \n    status = FUN_08002bb4(buffer, timeout, start_time, (*buffer)[6]);\n    \n    if (status != 0)\n    {\n        if ((*buffer)[16] == (uint*)0x4)\n        {\n            **buffer |= 0x200;\n            result = 1;\n            goto end;\n        }\n        result = 3;\n        goto end;\n    }\n    \n    if (size == 1)\n    {\n        (*buffer)[4] = (uint)value;\n    }\n    else\n    {\n        (*buffer)[4] = (uint)(value >> 8);\n        status = FUN_08002bb4(buffer, timeout, start_time);\n        if (status != 0)\n        {\n            if ((*buffer)[16] == (uint*)0x4)\n            {\n                **buffer |= 0x200;\n                result = 1;\n                goto end;\n            }\n            result = 3;\n            goto end;\n        }\n        (*buffer)[4] = (uint)value;\n    }\n    \n    status = FUN_08002bb4(buffer, timeout, start_time);\n    \n    if (status != 0)\n    {\n        if ((*buffer)[16] == (uint*)0x4)\n        {\n            **buffer |= 0x200;\n            result = 1;\n            goto end;\n        }\n        result = 3;\n        goto end;\n    }\n    \n    **buffer |= 0x100;\n    while ((~(*buffer)[5] & 1) != 0)\n    {\n        if ((timeout != 0xffffffff) && ((timeout == 0) || ((status = FUN_080015a0()) - start_time > timeout)))\n        {\n            (*buffer)[12] = NULL;\n            *((byte*)buffer + 0x3d) = 0x20;\n            *((byte*)buffer + 0x3e) = 0;\n            *((uint*)buffer + 15) = 0;\n            result = 3;\n            goto end;\n        }\n    }\n    \n    result = 0;\n    end:\n    return result;\n}",
            "called": [
                "FUN_080015a0",
                "FUN_08002ad8",
                "FUN_08002bb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080027f4",
            "calling": [
                "FUN_08001f6c"
            ],
            "imported": false,
            "current_name": "process_data_080027f4"
        },
        "FUN_080003d4": {
            "renaming": {
                "FUN_080003d4": "reverse_bits_080003d4",
                "param_1": "num",
                "uVar1": "result_low",
                "uVar2": "shift_amount_underflow",
                "iVar3": "leading_zeroes",
                "uVar4": "shift_amount",
                "in_r12": "shift_amount_overflow",
                "bVar5": "underflow",
                "bVar6": "shift_amount_zero",
                "bVar7": "overflow"
            },
            "code": "ulonglong reverse_bits_080003d4(uint num) {\n  if (num == 0) {\n    return 0;\n  }\n  uint leading_zeroes = count_leading_zeroes(num);\n  uint shift_amount = leading_zeroes + 21;\n  uint shift_amount_overflow = shift_amount - 32;\n  uint shift_amount_underflow = 11 - leading_zeroes;\n  uint result_high = 0;\n  uint result_low = 0;\n  bool overflow = shift_amount_overflow > 0;\n  bool underflow = shift_amount_underflow > 0;\n\n  if (overflow) {\n    result_high = num << shift_amount_overflow;\n  }\n\n  if (underflow) {\n    result_low = num >> shift_amount_underflow;\n  }\n\n  if (!overflow && !underflow) {\n    result_high = num >> shift_amount;\n    result_low = num << (32 - shift_amount);\n  }\n\n  if (shift_amount < 1075) {\n    return ((ulonglong)result_high << 32) | result_low;\n  }\n\n  uint shift_amount_reverse = ~(32 - shift_amount);\n\n  if (shift_amount_reverse > 30) {\n    return (ulonglong)(num >> (shift_amount_reverse - 31));\n  }\n\n  int shift_amount_overflow_reverse = shift_amount_reverse - 19;\n\n  if (shift_amount_overflow_reverse == 0 || shift_amount_overflow_reverse < 0 != (shift_amount_reverse - 31 > 12)) {\n    shift_amount_reverse++;\n    return ((ulonglong)num >> shift_amount_reverse) | ((ulonglong)result_high << (32 - shift_amount_reverse));\n  }\n\n  return (ulonglong)(result_high >> (12 - shift_amount_overflow_reverse)) | ((ulonglong)num << shift_amount_overflow_reverse);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003d4",
            "calling": [
                "FUN_080079e8"
            ],
            "imported": false,
            "current_name": "reverse_bits_080003d4"
        },
        "FUN_08004d78": {
            "renaming": {
                "FUN_08004d78": "calculate_result_08004d78",
                "param_1": "input",
                "param_2": "output1",
                "param_3": "output2",
                "uVar1": "a",
                "uVar2": "b",
                "uVar3": "c",
                "uVar4": "d",
                "uVar5": "e",
                "thunk_FUN_08005838": "f",
                "FUNC_080004c8": "g",
                "FUNC_0800071c": "h",
                "FUN_080009fc": "i",
                "DAT_08004e68": "constant1",
                "DAT_08004e60": "constant2",
                "DAT_08004e64": "constant3"
            },
            "code": "void calculate_result_08004d78(float *input, float *output1, float *output2)\n{\n  float a = FUNC_08000e20(input[0],0x45800000);\n  float b = FUNC_08000e20(input[1],0x45800000);\n  float c = FUNC_08000e20(input[2],0x45800000);\n  float d = FUN_08000418(b);\n  float e = FUN_08000418(c);\n  float f = thunk_FUN_08005838((int)d,(int)((ulonglong)d >> 0x20),(int)e,(int)((ulonglong)e >> 0x20));\n  float g = FUNC_080004c8((int)f,(int)((ulonglong)f >> 0x20),0,DAT_08004e68);\n  float h = FUNC_0800071c((int)g,(int)((ulonglong)g >> 0x20),DAT_08004e60,DAT_08004e64);\n  float i = FUN_080009fc((int)h,(int)((ulonglong)h >> 0x20));\n  d = FUN_08000418(a);\n  e = FUN_08000418(c);\n  f = thunk_FUN_08005838((int)d,(int)((ulonglong)d >> 0x20),(int)e,(int)((ulonglong)e >> 0x20));\n  g = FUNC_080004c8((int)f,(int)((ulonglong)f >> 0x20),0,DAT_08004e68);\n  h = FUNC_0800071c((int)g,(int)((ulonglong)g >> 0x20),DAT_08004e60,DAT_08004e64);\n  float j = FUN_080009fc((int)h,(int)((ulonglong)h >> 0x20));\n  *output1 = i;\n  *output2 = j;\n  return;\n}",
            "called": [
                "FUN_08000e20",
                "FUN_08000418",
                "thunk_FUN_08005838",
                "FUN_080009fc",
                "FUN_080004c8",
                "FUN_0800071c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d78",
            "calling": [
                "FUN_080049cc"
            ],
            "imported": false,
            "current_name": "calculate_result_08004d78"
        },
        "FUN_08000c10": {
            "renaming": {
                "FUN_08000c10": "convert_signed_to_unsigned_08000c10",
                "param_1": "signed_num",
                "uVar2": "shift_amount",
                "uVar3": "unsigned_num",
                "iVar1": "num_leading_zeros",
                "iVar4": "sign_bit_mask",
                "uVar5": "sign_extension_mask",
                "count_leading_zeroes": "count_leading_zeros"
            },
            "code": "uint convert_signed_to_unsigned_08000c10(uint signed_num)\n{\n  int num_leading_zeros;\n  uint sign_bit_mask;\n  uint unsigned_num;\n  int shift_amount;\n\n  sign_bit_mask = signed_num & 0x80000000;\n  if ((int)sign_bit_mask < 0) {\n    signed_num = -signed_num;\n  }\n  if (signed_num == 0) {\n    return 0;\n  }\n  num_leading_zeros = count_leading_zeroes(signed_num);\n  shift_amount = num_leading_zeros - 8;\n  unsigned_num = ((sign_bit_mask | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (num_leading_zeros > 7) {\n    uint sign_extension_mask = 0 << (shift_amount & 0xff);\n    unsigned_num += (signed_num << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < sign_extension_mask);\n    if (sign_extension_mask == 0x80000000) {\n      unsigned_num &= 0xfffffffe;\n    }\n    return unsigned_num;\n  }\n  uint sign_extension = signed_num << (num_leading_zeros + 0x18U & 0xff);\n  unsigned_num += ((signed_num >> (0x20 - (num_leading_zeros + 0x18U) & 0xff)) - ((int)sign_extension >> 0x1f));\n  if ((sign_extension & 0x7fffffff) == 0) {\n    unsigned_num &= ~(sign_extension >> 0x1f);\n  }\n  return unsigned_num;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c10",
            "calling": [
                "FUN_08004ae0",
                "FUN_080049cc",
                "FUN_08004f78"
            ],
            "imported": false,
            "current_name": "convert_signed_to_unsigned_08000c10"
        },
        "FUN_0800491c": {
            "renaming": {
                "FUN_0800491c": "initialize_array_to_zero_0800491c",
                "param_1": "array",
                "local_13": "zero_char",
                "local_12": "ten_char",
                "local_11": "eight_char",
                "PTR_DAT_080049c8": "Pointer_Data_080049c8"
            },
            "code": "void initialize_array_to_zero_0800491c(int *array)\n{\n    int i;\n    for(i = 0; i < 11; i++)\n    {\n        array[i] = 0;\n    }\n    initialize_array(array);\n}\n\nvoid initialize_array(int *array)\n{\n    char zero_char = 0;\n    char ten_char = 0x10;\n    char eight_char = 8;\n    (**(code **)PTR_DAT_080049c8)(0xd0,0x6b,&zero_char,1);\n    (**(code **)PTR_DAT_080049c8)(0xd0,0x1c,&ten_char,1);\n    (**(code **)PTR_DAT_080049c8)(0xd0,0x1b,&eight_char,1);\n}\n",
            "called": [
                "FUN_080049cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800491c",
            "calling": [
                "FUN_08005224"
            ],
            "imported": false,
            "current_name": "initialize_array_to_zero_0800491c"
        },
        "FUN_080078a0": {
            "renaming": {
                "FUN_080078a0": "checkIfDataExists_080078a0",
                "DAT_080078ac": "dataExists",
                "FUN_080098c0": "sendData",
                "PTR_LAB_08008818_1_080078b0": "dataLabel"
            },
            "code": "void checkIfDataExists_080078a0() {\n  if (DAT_080078ac) {\n    sendData(PTR_LABEL_08008818_1_080078b0);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_080098c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078a0",
            "calling": [
                "FUN_08005d20"
            ],
            "imported": false,
            "current_name": "checkIfDataExists_080078a0"
        },
        "FUN_080057e8": {
            "renaming": {
                "FUN_080057e8": "copy_data_and_clear_memory_080057e8",
                "iVar1": "index",
                "puVar2": "destination_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table_ptr",
                "PTR_DAT_08005828": "destination_start",
                "PTR_DAT_08005820": "source_start",
                "PTR_DAT_08005824": "source_end",
                "DAT_0800581c": "source_data_start",
                "FUN_08005780": "copy_data_from_08005780",
                "FUN_08005d20": "call_function_at_080057d20",
                "0x800581a": "jump_table_address",
                "FUN_08005224": "call_function_at_08005224"
            },
            "code": "void copy_data_and_clear_memory_080057e8(void)\n{\n  int index;\n  undefined4 *destination_ptr;\n  code *jump_table_ptr;\n  for (index = 0; PTR_DAT_08005820 + index < PTR_DAT_08005824; index += 4) {\n    *(undefined4 *)(PTR_DAT_08005820 + index) = *(undefined4 *)(DAT_0800581c + index);\n  }\n  for (destination_ptr = (undefined4 *)PTR_DAT_08005828; destination_ptr < PTR_DAT_0800582c; destination_ptr++) {\n    *destination_ptr = 0;\n  }\n  copy_data_from_08005780();\n  call_function_at_080057d20();\n  jump_table_ptr = (code *)0x800581a;\n  call_function_at_08005224(jump_table_ptr);\n  return;\n}",
            "called": [
                "FUN_08005224",
                "FUN_08005780",
                "FUN_08005d20"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e8",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_clear_memory_080057e8"
        }
    },
    "used_tokens": 145821,
    "layers": [
        [
            "FUN_080036a8",
            "FUN_08005224",
            "FUN_08003440",
            "FUN_08004f2c",
            "FUN_08005348",
            "FUN_080046ec",
            "FUN_08005500",
            "FUN_08002c2e",
            "FUN_08003568",
            "FUN_080049cc",
            "FUN_08003c94",
            "FUN_08000978",
            "FUN_0800884c",
            "FUN_0800901c",
            "FUN_0800177c",
            "FUN_080017b4",
            "FUN_08005598",
            "FUN_08001030",
            "FUN_080011ec",
            "FUN_08004f3c",
            "FUN_08002640",
            "FUN_080008fc",
            "FUN_08000988",
            "FUN_08001714",
            "FUN_08005dfc",
            "FUN_080078c0",
            "thunk_FUN_08005838",
            "FUN_080003f4",
            "FUN_0800166c",
            "FUN_0800360c",
            "FUN_08005d68",
            "FUN_080017c4",
            "FUN_080035a4",
            "FUN_080041ea",
            "FUN_08004ae0",
            "FUN_08001044",
            "FUN_08009444",
            "FUN_080015fc",
            "FUN_08004436",
            "FUN_08000110",
            "FUN_08003504",
            "FUN_08004ee8",
            "FUN_080094f8",
            "FUN_08000998",
            "FUN_080009ac",
            "FUN_08000fc8",
            "FUN_0800438a",
            "FUN_080014f0",
            "FUN_08003908",
            "FUN_08004f60",
            "FUN_080009c0",
            "FUN_08001170",
            "FUN_08003f18",
            "FUN_080097cc",
            "FUN_08002ad8",
            "FUN_08000fd0",
            "FUN_08003d60",
            "FUN_08003518",
            "FUN_08001618",
            "FUN_080091a4",
            "FUN_08004f78",
            "FUN_080015a0",
            "FUN_0800172a",
            "FUN_080009d4",
            "FUN_08005780",
            "FUN_08009744",
            "FUN_08003640",
            "FUN_08009980",
            "FUN_08000134",
            "FUN_08005704",
            "FUN_08000418",
            "FUN_08002ca8",
            "FUN_08003a94",
            "FUN_0800416a",
            "FUN_080055f4",
            "FUN_080053b0",
            "FUN_0800088a",
            "FUN_080016d0",
            "FUN_08001ccc",
            "FUN_0800157c",
            "FUN_08005d14",
            "FUN_080015b4",
            "FUN_080036f8",
            "FUN_080041a8",
            "FUN_08008ad4",
            "FUN_080009e8",
            "FUN_08005674",
            "FUN_08009630",
            "FUN_08004104",
            "FUN_08000ff4",
            "FUN_08005714",
            "FUN_08005e40",
            "FUN_08005d20",
            "FUN_08001a80",
            "FUN_08005838",
            "FUN_080090a8",
            "FUN_08004e74",
            "FUN_080096e0",
            "FUN_0800910c",
            "FUN_080052a0",
            "FUN_08009120",
            "FUN_08001084",
            "FUN_08005680",
            "FUN_08003260",
            "FUN_08001ab0",
            "FUN_08003540",
            "FUN_08009244",
            "FUN_08004e6c",
            "FUN_08001762",
            "FUN_08009768",
            "FUN_08003ff8",
            "FUN_08004ea4",
            "FUN_080040a0",
            "FUN_08009a18",
            "FUN_0800119c",
            "FUN_08005728",
            "FUN_080090b4",
            "FUN_0800422e",
            "FUN_08003e38",
            "FUN_0800151c",
            "FUN_080006a4",
            "FUN_08000f68",
            "FUN_08009258",
            "FUN_08000c08",
            "FUN_080042de",
            "FUN_08009530",
            "FUN_08002bb4",
            "FUN_08002d3c",
            "FUN_08004bd8",
            "FUN_080090c0",
            "FUN_080091e4",
            "FUN_080009fc",
            "FUN_080093a4",
            "FUN_080098c0",
            "FUN_080027f4",
            "FUN_080003d4",
            "FUN_08004d78",
            "FUN_08000c10",
            "FUN_0800491c",
            "FUN_080078a0",
            "FUN_080057e8"
        ]
    ],
    "locked_functions": []
}