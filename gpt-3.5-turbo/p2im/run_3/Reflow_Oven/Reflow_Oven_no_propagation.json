{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_character;\n  char *next_character;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_character = current_position + 1;\n    current_character = *current_position;\n    current_position = next_character;\n  } while (current_character != '\\0');\n  return next_character + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "string",
                "cVar1": "current_character",
                "pcVar2": "next_character",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "perform_arithmetic_08000190",
            "code": "\nulonglong performArithmetic_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool tempBool1;\n  bool tempBool2;\n  bool tempBool3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  tempBool1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  tempBool2 = tempBool1 && input1 == input3;\n  if (!tempBool1 || input1 != input3) {\n    tempBool2 = (temp9 | input1) == 0;\n  }\n  if (!tempBool2) {\n    tempBool2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp1 == -1;\n  }\n  if (tempBool2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      tempBool2 = (temp11 | temp9 << 0xc) == 0;\n      if (tempBool2) {\n        tempBool2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (tempBool2) {\n        tempBool2 = temp9 == temp6;\n      }\n      if (!tempBool2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      tempBool2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)tempBool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)tempBool2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  tempBool2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (tempBool2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    tempBool2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)tempBool2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    tempBool2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)tempBool2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    tempBool2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!tempBool2 - temp6;\n    temp11 = -(uint)(tempBool2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    tempBool2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      tempBool2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)tempBool2) | input2,\n                    temp6 + tempBool2);\n  }\n  tempBool1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  tempBool2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)tempBool1;\n  temp11 = temp11 * 2 + (uint)(tempBool2 || CARRY4(temp10,(uint)tempBool1));\n  temp10 = temp9 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_080002a0;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  tempBool3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  tempBool2 = (int)temp6 < 0;\n  tempBool1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    tempBool3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    tempBool2 = temp8 < 0;\n    tempBool1 = temp8 == 0;\n    temp6 = temp11;\n    if (!tempBool1 && tempBool2 == tempBool3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "perform_arithmetic_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "tempBool1",
                "bVar14": "tempBool2",
                "bVar15": "tempBool3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "perform_arithmetic_operation_08000194",
            "code": "\nulonglong performArithmeticOperation_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int bitShift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int bitShift2;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp4 = input2 << 1;\n  temp6 = input4 << 1;\n  condition1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (temp4 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (temp6 | input3) == 0;\n  }\n  bitShift2 = (int)temp4 >> 0x15;\n  if (!condition2) {\n    condition2 = bitShift2 == -1;\n  }\n  bitShift1 = (int)temp6 >> 0x15;\n  if (!condition2) {\n    condition2 = bitShift1 == -1;\n  }\n  if (condition2) {\n    if (bitShift2 == -1 || bitShift1 == -1) {\n      temp6 = input4;\n      temp4 = input3;\n      if (bitShift2 == -1) {\n        temp6 = input2;\n        temp4 = input1;\n      }\n      if (bitShift2 != -1 || bitShift1 != -1) {\n        input3 = temp4;\n        input4 = temp6;\n      }\n      condition2 = (temp4 | temp6 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp6 == input4;\n      }\n      if (!condition2) {\n        temp6 = temp6 | 0x80000;\n      }\n      return CONCAT44(temp6,temp4);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp4 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  temp6 = temp6 >> 0x15;\n  temp7 = temp6 - temp4;\n  condition2 = temp7 != 0;\n  if (temp6 < temp4) {\n    temp7 = -temp7;\n  }\n  temp5 = input1;\n  temp3 = input2;\n  if (condition2 && temp4 <= temp6) {\n    temp4 = temp4 + temp7;\n    temp5 = input3;\n    temp3 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < temp7) {\n    return CONCAT44(temp3,temp5);\n  }\n  temp6 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    condition2 = temp5 != 0;\n    temp5 = -temp5;\n    temp6 = -temp6 - (uint)condition2;\n  }\n  temp3 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp3 = -temp3 - (uint)condition2;\n  }\n  if (temp4 == temp7) {\n    temp3 = temp3 ^ 0x100000;\n    if (temp4 == 0) {\n      temp6 = temp6 ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      temp7 = temp7 - 1;\n    }\n  }\n  temp9 = -temp7 + 0x20;\n  if ((int)temp7 < 0x21) {\n    temp8 = input3 << (temp9 & 0xff);\n    input3 = input3 >> (temp7 & 0xff);\n    temp1 = temp5 + input3;\n    temp2 = temp3 << (temp9 & 0xff);\n    temp9 = temp1 + temp2;\n    temp6 = temp6 + CARRY4(temp5,input3) + ((int)temp3 >> (temp7 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp8 = temp3 << (-temp7 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp8 = temp8 | 2;\n    }\n    temp3 = (int)temp3 >> (temp7 - 0x20 & 0xff);\n    temp9 = temp5 + temp3;\n    temp6 = temp6 + ((int)temp3 >> 0x1f) + (uint)CARRY4(temp5,temp3);\n  }\n  input2 = temp6 & 0x80000000;\n  temp7 = temp6;\n  if ((int)temp6 < 0) {\n    condition2 = temp8 == 0;\n    temp8 = -temp8;\n    temp7 = -temp9;\n    temp9 = -(uint)!condition2 - temp9;\n    temp7 = -(uint)(condition2 <= temp7) - temp6;\n  }\n  if (0xfffff < temp7) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < temp7) {\n      temp6 = temp7 & 1;\n      temp7 = temp7 >> 1;\n      carry = (byte)temp9;\n      temp9 = (uint)(temp6 != 0) << 0x1f | temp9 >> 1;\n      temp8 = (uint)(carry & 1) << 0x1f | temp8 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition2 = 0x7fffffff < temp8;\n    if (temp8 == 0x80000000) {\n      condition2 = (temp9 & 1) != 0;\n    }\n    return CONCAT44(temp7 + temp5 * 0x100000 + (uint)CARRY4(temp9,(uint)condition2) | input2,\n                    temp9 + condition2);\n  }\n  condition1 = (temp8 & 0x80000000) != 0;\n  temp8 = temp8 << 1;\n  temp5 = temp9 * 2;\n  condition2 = CARRY4(temp9,temp9);\n  temp9 = temp9 * 2 + (uint)condition1;\n  temp7 = temp7 * 2 + (uint)(condition2 || CARRY4(temp5,(uint)condition1));\n  temp5 = temp4 - 2;\n  if ((temp7 & 0x100000) != 0) goto LAB_080002a0;\n  temp3 = temp9;\n  temp4 = temp7;\n  if (temp7 == 0) {\n    temp3 = 0;\n    temp4 = temp9;\n  }\n  bitShift2 = LZCOUNT(temp4);\n  if (temp7 == 0) {\n    bitShift2 = bitShift2 + 0x20;\n  }\n  temp9 = bitShift2 - 0xb;\n  condition3 = SBORROW4(temp9,0x20);\n  temp7 = bitShift2 - 0x2b;\n  condition2 = (int)temp7 < 0;\n  condition1 = temp7 == 0;\n  if ((int)temp9 < 0x20) {\n    condition3 = SCARRY4(temp7,0xc);\n    bitShift2 = bitShift2 + -0x1f;\n    condition2 = bitShift2 < 0;\n    condition1 = bitShift2 == 0;\n    temp7 = temp9;\n    if (!condition1 && condition2 == condition3) {\n      temp3 = temp4 << (temp9 & 0xff);\n      temp4 = temp4 >> (0xcU - bitShift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp8 = 0x20 - temp7;\n  }\n  temp4 = temp4 << (temp7 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp4 = temp4 | temp3 >> (temp8 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp3 = temp3 << (temp7 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp9 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - temp9) * 0x100000 | input2,temp3);\n  }\n  temp7 = ~(temp5 - temp9);\n  if ((int)temp7 < 0x1f) {\n    bitShift2 = temp7 - 0x13;\n    if (bitShift2 != 0 && bitShift2 < 0 == SCARRY4(temp7 - 0x1f,0xc)) {\n      return CONCAT44(temp6,temp3 >> (0x20 - (0xcU - bitShift2) & 0xff) | temp4 << (0xcU - bitShift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp7 = temp7 + 1;\n    return CONCAT44(input2 | temp4 >> (temp7 & 0xff),\n                    temp3 >> (temp7 & 0xff) | temp4 << (0x20 - temp7 & 0xff));\n  }\n  return CONCAT44(temp6,temp4 >> (temp7 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "perform_arithmetic_operation_08000194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "bitShift1",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "bitShift2",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "uVar11": "temp8",
                "uVar12": "temp9",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "bit_shift_and_concat_0800040c",
            "code": "\nulonglong bitShiftAndConcat_0800040c(uint input)\n\n{\n  uint result;\n  uint shiftAmount;\n  int lzcount;\n  uint shiftedAmount;\n  uint complement;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  lzcount = LZCOUNT(input);\n  shiftedAmount = lzcount + 0x15;\n  isCarry = SBORROW4(shiftedAmount,0x20);\n  shiftAmount = lzcount - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (shiftedAmount < 0x20) {\n    isCarry = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = lzcount + 1 == 0;\n    shiftAmount = shiftedAmount;\n    if (!isZero && isCarry == false) {\n      result = input << shiftedAmount;\n      input = input >> (0xcU - (lzcount + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != isCarry) {\n    complement = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZero || isNegative != isCarry) {\n    input = input | 0U >> (complement & 0xff);\n  }\n  if (isZero || isNegative != isCarry) {\n    result = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (shiftedAmount < 0x433) {\n    return CONCAT44(input + (0x432 - shiftedAmount) * 0x100000,result);\n  }\n  shiftAmount = ~(0x432 - shiftedAmount);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  lzcount = shiftAmount - 0x13;\n  if (lzcount == 0 || lzcount < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    result >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - lzcount) & 0xff) | input << (0xcU - lzcount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "bit_shift_and_concat_0800040c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shiftAmount",
                "iVar3": "lzcount",
                "uVar4": "shiftedAmount",
                "in_r12": "complement",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isCarry"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "calculate_modified_value_0800042c",
            "code": "\nulonglong calculateModifiedValue_0800042c(uint inputValue)\n\n{\n  uint result;\n  uint absValue;\n  uint shiftAmount;\n  int leadingZeros;\n  uint requiredShift;\n  uint signBit;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carryFlag;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  signBit = inputValue & 0x80000000;\n  absValue = inputValue;\n  if ((int)signBit < 0) {\n    absValue = -inputValue;\n  }\n  result = 0;\n  leadingZeros = LZCOUNT(absValue);\n  requiredShift = leadingZeros + 0x15;\n  carryFlag = SBORROW4(requiredShift,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (requiredShift < 0x20) {\n    carryFlag = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = requiredShift;\n    if (!isZero && carryFlag == false) {\n      result = absValue << requiredShift;\n      absValue = absValue >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != carryFlag) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  absValue = absValue << (shiftAmount & 0xff);\n  if (isZero || isNegative != carryFlag) {\n    absValue = absValue | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carryFlag) {\n    result = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (requiredShift < 0x433) {\n    return CONCAT44(absValue + (0x432 - requiredShift) * 0x100000 | signBit,result);\n  }\n  shiftAmount = ~(0x432 - requiredShift);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(inputValue,absValue >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absValue >> (shiftAmount & 0xff),\n                    result >> (shiftAmount & 0xff) | absValue << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(inputValue,result >> (0x20 - (0xcU - leadingZeros) & 0xff) | absValue << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "calculate_modified_value_0800042c",
                "param_1": "inputValue",
                "uVar1": "result",
                "uVar2": "absValue",
                "uVar3": "shiftAmount",
                "uVar5": "requiredShift",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "carryFlag",
                "iVar4": "leadingZeros"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_quotient_080004f8",
            "code": "\nulonglong calculateProductQuotient_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp1;\n  uint temp2;\n  uint temp3;\n  int temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong concatenatedInputs;\n  \n  concatenatedInputs = CONCAT44(input2,input1);\n  temp7 = 0x7ff;\n  temp3 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp3 == 0;\n  if (!flag1) {\n    temp6 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp6 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp3 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp6 == 0x7ff;\n  }\n  if (flag1) {\n    concatenatedInputs = FUN_080006d4();\n  }\n  temp2 = (uint)(concatenatedInputs >> 0x20);\n  temp4 = temp3 + temp6;\n  temp3 = temp2 ^ input4;\n  temp2 = temp2 & ~(temp7 << 0x15);\n  input4 = input4 & ~(temp7 << 0x15);\n  flag1 = ((uint)concatenatedInputs | temp2 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp2 = temp2 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)concatenatedInputs | input3;\n    input4 = (temp3 & 0x80000000 | temp2) ^ input4;\n    temp3 = temp7 >> 1;\n    flag3 = SBORROW4(temp4,temp3);\n    temp5 = temp4 - temp3;\n    flag1 = temp5 == 0;\n    temp2 = temp5;\n    if (!flag1 && (int)temp3 <= temp4) {\n      flag3 = SBORROW4(temp7,temp5);\n      temp2 = temp7 - temp5;\n      flag1 = temp7 == temp5;\n    }\n    if (!flag1 && (int)temp2 < 0 == flag3) {\n      input4 = input4 | temp5 * 0x100000;\n    }\n    if (!flag1 && (int)temp2 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp7 = 0;\n    flag3 = SBORROW4(temp5,1);\n    temp5 = temp5 - 1;\n    flag1 = temp5 == 0;\n    temp3 = temp5;\n  }\n  else {\n    result = (concatenatedInputs & 0xffffffff) * (ulonglong)input3;\n    concatenatedInputs = (concatenatedInputs & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp2 * (ulonglong)input3 + (result >> 0x20);\n    temp8 = (uint)concatenatedInputs;\n    temp1 = (ulonglong)temp2 * (ulonglong)input4 + (concatenatedInputs >> 0x20);\n    temp7 = (uint)temp1;\n    temp2 = (uint)((ulonglong)temp1 >> 0x20);\n    if ((int)result != 0) {\n      temp8 = temp8 | 1;\n    }\n    temp5 = (temp4 + -0x3ff) - (uint)(temp2 < 0x200);\n    if (temp2 < 0x200) {\n      flag1 = (temp8 & 0x80000000) != 0;\n      temp8 = temp8 << 1;\n      temp1 = CONCAT44(temp2 * 2 + (uint)(CARRY4(temp7,temp7) || CARRY4(temp7 * 2,(uint)flag1)),\n                       temp7 * 2 + (uint)flag1);\n    }\n    input4 = temp3 & 0x80000000 | (int)((ulonglong)temp1 >> 0x20) << 0xb | (uint)temp1 >> 0x15;\n    input3 = (uint)temp1 << 0xb | temp8 >> 0x15;\n    temp7 = temp8 * 0x800;\n    flag2 = 0xfc < temp5;\n    flag3 = SBORROW4(temp5,0xfd);\n    temp2 = temp5 - 0xfd;\n    flag1 = temp2 == 0;\n    temp3 = temp2;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp2;\n      flag3 = SBORROW4(temp2,0x700);\n      temp3 = temp5 - 0x7fd;\n      flag1 = temp2 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp7;\n      if (temp7 == 0x80000000) {\n        flag1 = (temp8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp5 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp5,0x36);\n  flag1 = (int)(temp5 + 0x36) < 0;\n  flag3 = temp5 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp3 = -temp5;\n  temp2 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp5 = input3 >> (temp2 & 0xff) | input4 << (0x20 - temp2 & 0xff);\n    temp3 = (input4 >> (temp2 & 0xff) & ~((input4 & 0x80000000) >> (temp2 & 0xff))) -\n            ((int)temp5 >> 0x1f);\n    if ((temp7 | input3 << (0x20 - temp2 & 0xff) | temp5 << 1) == 0) {\n      temp3 = temp3 & ~(temp5 >> 0x1f);\n    }\n    return CONCAT44(input4,temp3) & 0x80000000ffffffff;\n  }\n  temp4 = temp3 - 0x14;\n  if (temp4 == 0 || temp4 < 0 != SCARRY4(temp2,0xc)) {\n    temp8 = input3 << (temp5 + 0x20 & 0xff);\n    temp2 = input3 >> (temp3 & 0xff) | input4 << (temp5 + 0x20 & 0xff);\n    temp5 = temp2 + -((int)temp8 >> 0x1f);\n    if ((temp7 | temp8 << 1) == 0) {\n      temp5 = temp5 & ~(temp8 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp3 & 0xff)) +\n                    (uint)CARRY4(temp2,-((int)temp8 >> 0x1f)),temp5);\n  }\n  temp3 = 0xc - temp4;\n  temp5 = input3 << (temp3 & 0xff);\n  temp3 = input3 >> (0x20 - temp3 & 0xff) | input4 << (temp3 & 0xff);\n  temp2 = temp3 + -((int)temp5 >> 0x1f);\n  if ((temp7 | temp5 << 1) == 0) {\n    temp2 = temp2 & ~(temp5 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp3,-((int)temp5 >> 0x1f)),temp2);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_quotient_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "lVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "iVar5": "temp4",
                "uVar6": "temp5",
                "unaff_r5": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "concatenatedInputs"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "reverse_and_shift_080006d4",
            "code": "\nulonglong reverse_and_shift_080006d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint output_1;\n  uint temp_1;\n  uint temp_2;\n  uint output_2;\n  uint temp_3;\n  bool flag;\n  \n  temp_2 = temp_3 & input_4 >> 0x14;\n  if (temp_1 != temp_3 && temp_2 != temp_3) {\n    flag = (input_1 | input_2 << 1) == 0;\n    if (!flag) {\n      flag = (input_3 | input_4 << 1) == 0;\n    }\n    if (flag) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp_1 == 0) {\n      output_2 = input_2 & 0x80000000;\n      do {\n        output_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(output_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | output_2;\n      if (temp_2 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_2 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_2 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  flag = (input_1 | input_2 << 1) == 0;\n  if (flag) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!flag) {\n    flag = (input_3 | input_4 << 1) == 0;\n  }\n  output_2 = input_2;\n  if (((!flag) && ((temp_1 != temp_3 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_2 != temp_3 || (input_1 = input_3, output_2 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(output_2,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "reverse_and_shift_080006d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "output_1",
                "unaff_r4": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "output_2",
                "in_r12": "temp_3",
                "bVar4": "flag"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 sign_bit,uint exponent_bits,uint fraction_bits,uint exponent_bias)\n\n{\n  uint exponent_difference;\n  uint exponent_bits_1;\n  uint fraction_bits_1;\n  uint fraction_bits_2;\n  uint exponent_bits_2;\n  uint exponent_bits_3;\n  uint result_sign_bits;\n  int result_exponent;\n  uint result_fraction;\n  uint exponent_bits_3;\n  uint fraction_bits_3;\n  uint fraction_bits_4;\n  uint difference_bits;\n  uint result_exponent_1;\n  bool is_zero;\n  bool is_equal;\n  bool is_negative;\n  undefined8 result;\n  \n  result = CONCAT44(exponent_bits,sign_bit);\n  result_exponent_1 = 0x7ff;\n  result_sign_bits = exponent_bits >> 0x14 & 0x7ff;\n  is_zero = result_sign_bits == 0;\n  if (!is_zero) {\n    exponent_bits_3 = exponent_bias >> 0x14 & 0x7ff;\n    is_zero = exponent_bits_3 == 0;\n  }\n  if (!is_zero) {\n    is_zero = result_sign_bits == 0x7ff;\n  }\n  if (!is_zero) {\n    is_zero = exponent_bits_3 == 0x7ff;\n  }\n  if (is_zero) {\n    result = FUN_080008ba();\n  }\n  result_fraction = (uint)((ulonglong)result >> 0x20);\n  fraction_bits_4 = (uint)result;\n  result_exponent = result_sign_bits - exponent_bits_3;\n  if ((fraction_bits | exponent_bias << 0xc) == 0) {\n    result_sign_bits = (result_fraction ^ exponent_bias) & 0x80000000 | result_fraction & 0xfffff;\n    is_negative = SCARRY4(result_exponent,result_exponent_1 >> 1);\n    result_fraction = result_exponent + (result_exponent_1 >> 1);\n    is_zero = (int)result_fraction < 0;\n    is_equal = result_fraction == 0;\n    if (!is_equal && is_zero == is_negative) {\n      is_negative = SBORROW4(result_exponent_1,result_fraction);\n      is_zero = (int)(result_exponent_1 - result_fraction) < 0;\n      is_equal = result_exponent_1 == result_fraction;\n    }\n    if (!is_equal && is_zero == is_negative) {\n      result_sign_bits = result_sign_bits | result_fraction * 0x100000;\n    }\n    if (!is_equal && is_zero == is_negative) {\n      return CONCAT44(result_sign_bits,fraction_bits_4);\n    }\n    result_sign_bits = result_sign_bits | 0x100000;\n    result_exponent_1 = 0;\n    is_equal = SBORROW4(result_fraction,1);\n    result_fraction = result_fraction - 1;\n    is_zero = result_fraction == 0;\n    fraction_bits_1 = result_fraction;\n  }\n  else {\n    fraction_bits_1 = (exponent_bias << 0xc) >> 4 | 0x10000000 | fraction_bits >> 0x18;\n    result_exponent_1 = fraction_bits << 8;\n    fraction_bits_3 = (result_fraction << 0xc) >> 4 | 0x10000000 | fraction_bits_4 >> 0x18;\n    fraction_bits_4 = fraction_bits_4 * 0x100;\n    result_sign_bits = (result_fraction ^ exponent_bias) & 0x80000000;\n    is_zero = fraction_bits_1 <= fraction_bits_3;\n    if (fraction_bits_3 == fraction_bits_1) {\n      is_zero = result_exponent_1 <= fraction_bits_4;\n    }\n    result_exponent = result_exponent + (uint)is_zero;\n    result_fraction = result_exponent + 0x3fd;\n    if (is_zero == false) {\n      fraction_bits_1 = fraction_bits_1 >> 1;\n      result_exponent_1 = (uint)((fraction_bits >> 0x18 & 1) != 0) << 0x1f | result_exponent_1 >> 1;\n    }\n    difference_bits = fraction_bits_4 - result_exponent_1;\n    fraction_bits_3 = (fraction_bits_3 - fraction_bits_1) - (uint)(fraction_bits_4 < result_exponent_1);\n    fraction_bits_2 = fraction_bits_1 >> 1;\n    exponent_difference = (uint)((fraction_bits_1 & 1) != 0) << 0x1f | result_exponent_1 >> 1;\n    fraction_bits_4 = 0x100000;\n    fraction_bits_1 = 0x80000;\n    while( true ) {\n      is_zero = exponent_difference <= difference_bits;\n      if (fraction_bits_2 < fraction_bits_3 || fraction_bits_3 - fraction_bits_2 < (uint)is_zero) {\n        difference_bits = difference_bits - exponent_difference;\n        fraction_bits_4 = fraction_bits_4 | fraction_bits_1;\n        fraction_bits_3 = (fraction_bits_3 - fraction_bits_2) - (uint)!is_zero;\n      }\n      exponent_bits_2 = fraction_bits_2 >> 1;\n      exponent_difference = (uint)((fraction_bits_2 & 1) != 0) << 0x1f | exponent_difference >> 1;\n      is_equal = exponent_difference <= difference_bits;\n      is_zero = fraction_bits_3 - exponent_bits_2 < (uint)is_equal;\n      result_exponent_1 = fraction_bits_3;\n      if (exponent_bits_2 < fraction_bits_3 || is_zero) {\n        difference_bits = difference_bits - exponent_difference;\n        result_exponent_1 = (fraction_bits_3 - exponent_bits_2) - (uint)!is_equal;\n      }\n      if (exponent_bits_2 < fraction_bits_3 || is_zero) {\n        fraction_bits_4 = fraction_bits_4 | fraction_bits_1 >> 1;\n      }\n      fraction_bits_3 = fraction_bits_2 >> 2;\n      exponent_bits_1 = (uint)((exponent_bits_2 & 1) != 0) << 0x1f | exponent_difference >> 1;\n      is_equal = exponent_bits_1 <= difference_bits;\n      is_zero = result_exponent_1 - fraction_bits_3 < (uint)is_equal;\n      exponent_bits_2 = result_exponent_1;\n      if (fraction_bits_3 < result_exponent_1 || is_zero) {\n        difference_bits = difference_bits - exponent_bits_1;\n        exponent_bits_2 = (result_exponent_1 - fraction_bits_3) - (uint)!is_equal;\n      }\n      if (fraction_bits_3 < result_exponent_1 || is_zero) {\n        fraction_bits_4 = fraction_bits_4 | fraction_bits_1 >> 2;\n      }\n      exponent_bits_3 = fraction_bits_2 >> 3;\n      exponent_difference = (uint)((fraction_bits_3 & 1) != 0) << 0x1f | exponent_bits_1 >> 1;\n      is_equal = exponent_difference <= difference_bits;\n      is_zero = exponent_bits_2 - exponent_bits_3 < (uint)is_equal;\n      fraction_bits_3 = exponent_bits_2;\n      if (exponent_bits_3 < exponent_bits_2 || is_zero) {\n        difference_bits = difference_bits - exponent_difference;\n        fraction_bits_3 = (exponent_bits_2 - exponent_bits_3) - (uint)!is_equal;\n      }\n      if (exponent_bits_3 < exponent_bits_2 || is_zero) {\n        fraction_bits_4 = fraction_bits_4 | fraction_bits_1 >> 3;\n      }\n      result_exponent_1 = fraction_bits_3 | difference_bits;\n      if (result_exponent_1 == 0) break;\n      fraction_bits_3 = fraction_bits_3 << 4 | difference_bits >> 0x1c;\n      difference_bits = difference_bits << 4;\n      fraction_bits_2 = fraction_bits_2 & 0xfffffff8 | exponent_difference >> 0x1d;\n      exponent_difference = (exponent_bits_1 >> 1) << 3;\n      fraction_bits_1 = fraction_bits_1 >> 4;\n      if (fraction_bits_1 == 0) {\n        exponent_bits_3 = fraction_bits_2;\n        if ((result_sign_bits & 0x100000) != 0) goto LAB_0800086a;\n        result_sign_bits = result_sign_bits | fraction_bits_4;\n        fraction_bits_4 = 0;\n        fraction_bits_1 = 0x80000000;\n      }\n    }\n    if ((result_sign_bits & 0x100000) == 0) {\n      result_sign_bits = result_sign_bits | fraction_bits_4;\n      fraction_bits_4 = 0;\n    }\nLAB_0800086a:\n    is_negative = 0xfc < result_fraction;\n    is_equal = SBORROW4(result_fraction,0xfd);\n    fraction_bits_2 = result_exponent + 0x300;\n    is_zero = fraction_bits_2 == 0;\n    fraction_bits_1 = fraction_bits_2;\n    if (is_negative && !is_zero) {\n      is_negative = 0x6ff < fraction_bits_2;\n      is_equal = SBORROW4(fraction_bits_2,0x700);\n      fraction_bits_1 = result_exponent - 0x400;\n      is_zero = fraction_bits_2 == 0x700;\n    }\n    if (!is_negative || is_zero) {\n      is_zero = exponent_bits_3 <= fraction_bits_3;\n      if (fraction_bits_3 == exponent_bits_3) {\n        is_zero = exponent_difference <= difference_bits;\n      }\n      if (fraction_bits_3 == exponent_bits_3 && difference_bits == exponent_difference) {\n        is_zero = (fraction_bits_4 & 1) != 0;\n      }\n      return CONCAT44(result_sign_bits + result_fraction * 0x100000 + (uint)CARRY4(fraction_bits_4,(uint)is_zero),fraction_bits_4 + is_zero);\n    }\n  }\n  if (!is_zero && (int)fraction_bits_1 < 0 == is_equal) {\n    return (ulonglong)(result_sign_bits & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  is_negative = SCARRY4(result_fraction,0x36);\n  is_zero = (int)(result_fraction + 0x36) < 0;\n  is_equal = result_fraction == 0xffffffca;\n  if (is_equal || is_zero != is_negative) {\n    fraction_bits_4 = 0;\n  }\n  if (is_equal || is_zero != is_negative) {\n    result_sign_bits = result_sign_bits & 0x80000000;\n  }\n  if (is_equal || is_zero != is_negative) {\n    return CONCAT44(result_sign_bits,fraction_bits_4);\n  }\n  fraction_bits_1 = -result_fraction;\n  fraction_bits_3 = fraction_bits_1 - 0x20;\n  if (0x1f < (int)fraction_bits_1) {\n    fraction_bits_1 = fraction_bits_4 >> (fraction_bits_3 & 0xff) | result_sign_bits << (0x20 - fraction_bits_3 & 0xff);\n    result_fraction = (result_sign_bits >> (fraction_bits_3 & 0xff) & ~((result_sign_bits & 0x80000000) >> (fraction_bits_3 & 0xff))) -\n            ((int)fraction_bits_1 >> 0x1f);\n    if ((result_exponent_1 | fraction_bits_4 << (0x20 - fraction_bits_3 & 0xff) | fraction_bits_1 << 1) == 0) {\n      result_fraction = result_fraction & ~(fraction_bits_1 >> 0x1f);\n    }\n    return CONCAT44(result_sign_bits,result_fraction) & 0x80000000ffffffff;\n  }\n  result_exponent = fraction_bits_1 - 0x14;\n  if (result_exponent != 0 && result_exponent < 0 == SCARRY4(fraction_bits_3,0xc)) {\n    result_fraction = 0xc - result_exponent;\n    fraction_bits_1 = fraction_bits_4 << (result_fraction & 0xff);\n    fraction_bits_4 = fraction_bits_4 >> (0x20 - result_fraction & 0xff) | result_sign_bits << (result_fraction & 0xff);\n    result_fraction = fraction_bits_4 + -((int)fraction_bits_1 >> 0x1f);\n    if ((result_exponent_1 | fraction_bits_1 << 1) == 0) {\n      result_fraction = result_fraction & ~(fraction_bits_1 >> 0x1f);\n    }\n    return CONCAT44((result_sign_bits & 0x80000000) + (uint)CARRY4(fraction_bits_4,-((int)fraction_bits_1 >> 0x1f)),result_fraction);\n  }\n  fraction_bits_3 = fraction_bits_4 << (result_fraction + 0x20 & 0xff);\n  fraction_bits_4 = fraction_bits_4 >> (fraction_bits_1 & 0xff) | result_sign_bits << (result_fraction + 0x20 & 0xff);\n  result_fraction = fraction_bits_4 + -((int)fraction_bits_3 >> 0x1f);\n  if ((result_exponent_1 | fraction_bits_3 << 1) == 0) {\n    result_fraction = result_fraction & ~(fraction_bits_3 >> 0x1f);\n  }\n  return CONCAT44((result_sign_bits & 0x80000000) +\n                  ((result_sign_bits & 0x7fffffff) >> (fraction_bits_1 & 0xff)) +\n                  (uint)CARRY4(fraction_bits_4,-((int)fraction_bits_3 >> 0x1f)),result_fraction);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "sign_bit",
                "param_2": "exponent_bits",
                "param_3": "fraction_bits",
                "param_4": "exponent_bias",
                "uVar1": "exponent_difference",
                "uVar2": "exponent_bits_1",
                "uVar3": "fraction_bits_1",
                "uVar4": "fraction_bits_2",
                "uVar5": "exponent_bits_2",
                "uVar6": "exponent_bits_3",
                "uVar7": "result_sign_bits",
                "iVar8": "result_exponent",
                "uVar9": "result_fraction",
                "unaff_r5": "exponent_bits_3",
                "uVar10": "fraction_bits_3",
                "uVar11": "fraction_bits_4",
                "uVar12": "difference_bits",
                "uVar13": "result_exponent_1",
                "bVar14": "is_zero",
                "bVar15": "is_equal",
                "bVar16": "is_negative",
                "uVar17": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "convert_to_double_080008ba",
            "code": "\nulonglong convertToDouble_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint random1;\n  uint bit2;\n  uint output1;\n  uint random2;\n  bool isZero;\n  \n  bit2 = random2 & input4 >> 0x14;\n  output1 = input2;\n  if (random1 != random2 || bit2 != random2) {\n    if (random1 == random2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, output1 = input4, bit2 != random2)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit2 == random2) {\n      input1 = input3;\n      output1 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (random1 == 0) {\n          output1 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | output1;\n          if (bit2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          output1 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(output1 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(output1,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "convert_to_double_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "random1",
                "uVar2": "bit2",
                "uVar3": "output1",
                "in_r12": "random2",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_equality_and_comparison_0800092c",
            "code": "\nuint checkEqualityAndComparison_0800092c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint result;\n  bool condition1;\n  bool condition2;\n  \n  if (((int)(input2 << 1) >> 0x15 == -1 || (int)(input4 << 1) >> 0x15 == -1) &&\n     ((((int)(input2 << 1) >> 0x15 == -1 && ((input1 | input2 << 0xc) != 0)) ||\n      (((int)(input4 << 1) >> 0x15 == -1 && ((input3 | input4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  condition1 = (input1 | input2 << 1) == 0;\n  if (condition1) {\n    condition1 = (input3 | input4 << 1) == 0;\n  }\n  if (!condition1) {\n    condition1 = input2 == input4;\n  }\n  if (condition1) {\n    condition1 = input1 == input3;\n  }\n  if (!condition1) {\n    result = input2 ^ input4;\n    condition1 = result == 0;\n    if (-1 < (int)result) {\n      condition1 = input2 == input4;\n    }\n    condition2 = -1 < (int)result && input4 <= input2;\n    if (condition1) {\n      condition2 = input3 <= input1;\n    }\n    input4 = (int)input4 >> 0x1f;\n    if (!condition2) {\n      input4 = ~input4;\n    }\n    return input4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_equality_and_comparison_0800092c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "bVar2": "condition1",
                "bVar3": "condition2"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_080009b8(parameter3,parameter4,parameter1,parameter2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_function_080009b8",
            "code": "\nundefined4 initializeFunction_080009b8(undefined4 input)\n\n{\n  FUN_0800092c();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_function_080009b8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_nonzero_in_zr_080009c8",
            "code": "\nbool check_nonzero_in_ZR_080009c8(void)\n\n{\n  char is_nonzero;\n  \n  FUN_080009b8();\n  return is_nonzero != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_nonzero_in_zr_080009c8",
                "in_ZR": "is_nonzero"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "check_if_input_is_empty_080009dc",
            "code": "\nbool checkIfInputIsEmpty_080009dc(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "check_if_input_is_empty_080009dc",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_flags_080009f0",
            "code": "\nbool check_flags_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_flags_080009f0",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_zr_08000a04",
            "code": "\nbool check_CY_ZR_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_zr_08000a04",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_input_is_empty_08000a18",
            "code": "\nbool check_if_input_is_empty_08000a18(void)\n\n{\n  char input_char;\n  \n  FUN_080009a8();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_input_is_empty_08000a18",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_params_08000a2c",
            "code": "\nundefined4 check_params_08000a2c(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_params_08000a2c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_32bit_result_08000a58",
            "code": "\nuint calculate_32bit_result_08000a58(uint input_value_1,uint input_value_2)\n\n{\n  uint shifted_result;\n  int calculation_result;\n  uint negative_threshold;\n  \n  calculation_result = input_value_2 * 2 + 0x200000;\n  if (input_value_2 * 2 < 0xffe00000) {\n    if (-1 < calculation_result) {\n      return 0;\n    }\n    shifted_result = calculation_result >> 0x15;\n    negative_threshold = -shifted_result - 0x3e1;\n    if (shifted_result < 0xfffffc20 && negative_threshold != 0) {\n      shifted_result = (input_value_2 << 0xb | 0x80000000 | input_value_1 >> 0x15) >> (negative_threshold & 0xff);\n      if ((input_value_2 & 0x80000000) != 0) {\n        shifted_result = -shifted_result;\n      }\n      return shifted_result;\n    }\n  }\n  else if ((input_value_1 | input_value_2 << 0xc) != 0) {\n    return 0;\n  }\n  input_value_2 = input_value_2 & 0x80000000;\n  if (input_value_2 == 0) {\n    input_value_2 = 0x7fffffff;\n  }\n  return input_value_2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_32bit_result_08000a58",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "iVar2": "calculation_result",
                "uVar1": "shifted_result",
                "uVar3": "negative_threshold"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shift_08000aa8",
            "code": "\nuint calculate_shift_08000aa8(uint input,uint shift)\n\n{\n  int result;\n  uint shift_amount;\n  \n  if ((shift & 0x80000000) != 0) {\n    return 0;\n  }\n  result = shift * 2 + 0x200000;\n  if (shift * 2 < 0xffe00000) {\n    if (-1 < result) {\n      return 0;\n    }\n    shift_amount = -(result >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift << 0xb | 0x80000000 | input >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input | shift << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shift_08000aa8",
                "param_1": "input",
                "param_2": "shift",
                "iVar1": "result",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "execute_software_interrupt_08000ae8",
            "code": "\nvoid executeSoftwareInterrupt_08000ae8(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "execute_software_interrupt_08000ae8"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 executeFunction_08000aec(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_special_functions_08000b08",
            "code": "\nvoid executeSpecialFunctions_08000b08(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_special_functions_08000b08",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_08000bcc",
            "code": "\nvoid initializeOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "FUNC_08000cd0",
            "code": "\nvoid FUNC_08000cd0(void)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined8 uVar5;\n  \n  uVar1 = FUN_080058e0();\n  if (DAT_200001b4 < uVar1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    uVar5 = FUN_080015f8(&DAT_2000024c,0);\n    uVar4 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    DAT_20000188 = uVar2;\n    DAT_2000018c = uVar4;\n    iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38800);\n    if (((iVar3 != 0) || (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38880), iVar3 != 0)) ||\n       (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38900), iVar3 != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  uVar1 = FUN_080058e0();\n  uVar2 = DAT_20000060;\n  if (DAT_200001b0 < uVar1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      iVar3 = FUN_08005890(DAT_20000060);\n      FUN_08005848(uVar2,iVar3 == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraout_r1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraout_r1_00,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,extraout_r1_01,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  uVar4 = DAT_2000018c;\n  uVar2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    iVar3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (iVar3 == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        uVar5 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0,uVar5);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    iVar3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (iVar3 != 0) {\n      uVar5 = FUN_080058e0();\n      DAT_20000254 = (int)uVar5 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    uVar1 = FUN_080058e0();\n    if (DAT_20000254 < uVar1) {\n      iVar3 = FUN_080058e0();\n      DAT_20000254 = iVar3 + 9000;\n      uVar5 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)uVar5 >> 0x20);\n      DAT_20000240 = (undefined4)uVar5;\n      uVar5 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)uVar5 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    uVar5 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)uVar5 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    iVar3 = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (iVar3 != 0) {\n      iVar3 = FUN_080058e0();\n      DAT_20000180 = iVar3 + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    uVar1 = FUN_080058e0();\n    if (DAT_20000180 < uVar1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    iVar3 = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (iVar3 != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    iVar3 = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((iVar3 == 0) && (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38880), iVar3 == 0)) &&\n       (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38900), iVar3 == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    iVar3 = FUN_08005754(DAT_20000068);\n    if (iVar3 == 0) {\n      iVar3 = FUN_080058e0();\n      if (0x32 < (uint)(iVar3 - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    iVar3 = FUN_08005754(DAT_20000068);\n    if (iVar3 == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (iVar3 = FUN_08005754(DAT_20000068), iVar3 != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    iVar3 = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(iVar3 - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    uVar5 = FUN_0800040c(iVar3 - DAT_2000025c);\n    iVar3 = FUN_080009dc((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (iVar3 == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "FUNC_08000cd0"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_params_08001294",
            "code": "\nvoid setParams_08001294(int objectAddress,undefined param2Value,undefined param3Value,undefined param4Value,\n                 undefined param5Value)\n\n{\n  *(undefined *)(objectAddress + 0x18) = param2Value;\n  *(undefined *)(objectAddress + 0x19) = param3Value;\n  *(undefined *)(objectAddress + 0x1a) = param4Value;\n  *(undefined *)(objectAddress + 0x1b) = param5Value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "objectAddress",
                "param_2": "param2Value",
                "param_3": "param3Value",
                "param_4": "param4Value",
                "param_5": "param5Value"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_function_080012a2",
            "code": "\nvoid executeFunction_080012a2(int inputValue)\n\n{\n  FUN_08005848(*(undefined *)(inputValue + 10),0);\n  FUN_08005848(*(undefined *)(inputValue + 10),1);\n  FUN_08005848(*(undefined *)(inputValue + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_function_080012a2",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid process_data_080012c0(int data_ptr,int mask)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < 4; i = i + 1) {\n    FUN_08005848(*(undefined *)(data_ptr + i + 0xb),mask >> (i & 0xff) & 1);\n  }\n  FUN_080012a2(data_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "data_ptr",
                "param_2": "mask",
                "uVar1": "i"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid processData_080012e8(int data_ptr,int value)\n\n{\n  uint iteration;\n  \n  for (iteration = 0; (int)iteration < 8; iteration = iteration + 1) {\n    FUN_08005848(*(undefined *)(data_ptr + iteration + 0xb),value >> (iteration & 0xff) & 1);\n  }\n  FUN_080012a2(data_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "data_ptr",
                "param_2": "value",
                "uVar1": "iteration"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "execute_function_08001310",
            "code": "\nvoid executeFunction_08001310(int functionParam,uint data,undefined4 paramA,undefined4 paramB)\n\n{\n  FUN_08005848(*(undefined *)(functionParam + 8),paramA,paramA,paramB,paramB);\n  if (*(char *)(functionParam + 9) != -1) {\n    FUN_08005848(*(char *)(functionParam + 9),0);\n  }\n  if ((*(byte *)(functionParam + 0x13) & 0x10) == 0) {\n    FUN_080012c0(functionParam,data >> 4);\n    FUN_080012c0(functionParam,data);\n    return;\n  }\n  FUN_080012e8(functionParam,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "execute_function_08001310",
                "param_1": "functionParam",
                "param_2": "data",
                "param_3": "paramA",
                "param_4": "paramB"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_values_0800134e",
            "code": "\nundefined4 initializeValues_0800134e(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 output)\n\n{\n  FUN_08001310(input1,input2,1,output,output);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_values_0800134e",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "output"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_data_0800135a",
            "code": "\nvoid initialize_data_0800135a(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  FUN_08001310(input_param_1,1,0,input_param_4,input_param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_data_0800135a",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "update_character_08001366",
            "code": "\nvoid updateCharacter_08001366(int character,char flag,uint maxValue,undefined4 param_4)\n\n{\n  char characterValue;\n  \n  if (3 < maxValue) {\n    maxValue = 3;\n  }\n  if ((int)(uint)*(byte *)(character + 0x17) <= (int)maxValue) {\n    maxValue = *(byte *)(character + 0x17) - 1 & 0xff;\n  }\n  characterValue = *(char *)(maxValue + character + 0x18);\n  FUN_08001310(character,flag + characterValue | 0x80,0,characterValue,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "update_character_08001366",
                "param_1": "character",
                "param_2": "flag",
                "param_3": "maxValue",
                "cVar1": "characterValue"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_update_0800138e",
            "code": "\nvoid setFlagAndUpdate_0800138e(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte originalFlag;\n  \n  originalFlag = *(byte *)(data + 0x14);\n  *(byte *)(data + 0x14) = originalFlag | 4;\n  FUN_08001310(data,originalFlag | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_update_0800138e",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "originalFlag"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "initialize_flags_080013a4",
            "code": "\nvoid initializeFlags_080013a4(int baseAddress,int offset1,int condition,int flagCondition)\n\n{\n  int counter1;\n  int counter2;\n  \n  if (1 < condition) {\n    *(byte *)(baseAddress + 0x13) = *(byte *)(baseAddress + 0x13) | 8;\n  }\n  *(char *)(baseAddress + 0x17) = (char)condition;\n  FUN_08001294(baseAddress,0,0x40,offset1,offset1 + 0x40);\n  if ((flagCondition != 0) && (condition == 1)) {\n    *(byte *)(baseAddress + 0x13) = *(byte *)(baseAddress + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(baseAddress + 8),1);\n  if (*(char *)(baseAddress + 9) != -1) {\n    FUN_080057b4(*(char *)(baseAddress + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(baseAddress + 10),1);\n  counter2 = 0;\n  while( true ) {\n    if ((*(byte *)(baseAddress + 0x13) & 0x10) == 0) {\n      counter1 = 4;\n    }\n    else {\n      counter1 = 8;\n    }\n    if (counter1 <= counter2) break;\n    FUN_080057b4(*(undefined *)(baseAddress + counter2 + 0xb),1);\n    counter2 = counter2 + 1;\n  }\n  FUN_08005848(*(undefined *)(baseAddress + 8),0);\n  FUN_08005848(*(undefined *)(baseAddress + 10),0);\n  if (*(char *)(baseAddress + 9) != -1) {\n    FUN_08005848(*(char *)(baseAddress + 9),0);\n  }\n  if ((*(byte *)(baseAddress + 0x13) & 0x10) == 0) {\n    FUN_080012c0(baseAddress,3);\n    FUN_080012c0(baseAddress,3);\n    FUN_080012c0(baseAddress,3);\n    FUN_080012c0(baseAddress,2);\n  }\n  else {\n    FUN_08001310(baseAddress,*(byte *)(baseAddress + 0x13) | 0x20,0);\n    FUN_08001310(baseAddress,*(byte *)(baseAddress + 0x13) | 0x20,0);\n    FUN_08001310(baseAddress,*(byte *)(baseAddress + 0x13) | 0x20,0);\n  }\n  FUN_08001310(baseAddress,*(byte *)(baseAddress + 0x13) | 0x20,0);\n  *(undefined *)(baseAddress + 0x14) = 4;\n  FUN_0800138e(baseAddress);\n  FUN_0800135a(baseAddress);\n  *(undefined *)(baseAddress + 0x15) = 2;\n  FUN_08001310(baseAddress,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "initialize_flags_080013a4",
                "param_1": "baseAddress",
                "param_2": "offset1",
                "param_3": "condition",
                "param_4": "flagCondition",
                "iVar1": "counter1",
                "iVar2": "counter2"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "set_params_and_call_function_080014ba",
            "code": "\nvoid setParamsAndCallFunction_080014ba(int dataPointer,int flag,undefined param_3,undefined4 param_4,undefined param_5,\n                 undefined param_6,undefined param_7,undefined param_8,undefined param_9,\n                 undefined dataPointer0,undefined dataPointer1,undefined dataPointer2,undefined dataPointer3)\n\n{\n  *(undefined *)(dataPointer + 8) = param_3;\n  *(char *)(dataPointer + 9) = (char)param_4;\n  *(undefined *)(dataPointer + 10) = param_5;\n  *(undefined *)(dataPointer + 0xb) = param_6;\n  *(undefined *)(dataPointer + 0xc) = param_7;\n  *(undefined *)(dataPointer + 0xd) = param_8;\n  *(undefined *)(dataPointer + 0xe) = param_9;\n  *(undefined *)(dataPointer + 0xf) = dataPointer0;\n  *(undefined *)(dataPointer + 0x10) = dataPointer1;\n  *(undefined *)(dataPointer + 0x11) = dataPointer2;\n  *(undefined *)(dataPointer + 0x12) = dataPointer3;\n  if (flag == 0) {\n    *(undefined *)(dataPointer + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(dataPointer + 0x13) = 0;\n  }\n  FUN_080013a4(dataPointer,0x10,1,0,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "set_params_and_call_function_080014ba",
                "param_1": "dataPointer",
                "param_2": "flag"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_pointer_08001510",
            "code": "\nundefined4 *\ninitializePointer_08001510(undefined4 *resultPointer,undefined4 value1,undefined4 value2,undefined4 value3,\n            undefined flag1,undefined flag2,undefined flag3)\n\n{\n  resultPointer[1] = 0;\n  *resultPointer = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(resultPointer,1,value1,0xff,value2,value3,flag1,flag2,flag3,0,0,0,0);\n  return resultPointer;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_pointer_08001510",
                "param_1": "resultPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "flag1",
                "param_6": "flag2",
                "param_7": "flag3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *dataPointer,uint dataSize,int bufferAddress)\n\n{\n  int iterationCounter;\n  \n  FUN_08001310(dataPointer,(dataSize & 7) << 3 | 0x40,0);\n  for (iterationCounter = 0; iterationCounter < 8; iterationCounter = iterationCounter + 1) {\n    (**(code **)*dataPointer)(dataPointer,*(undefined *)(bufferAddress + iterationCounter));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "param_3": "bufferAddress",
                "iVar1": "iterationCounter"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "update_and_process_data_0800157c",
            "code": "\nundefined * updateAndProcessData_0800157c(undefined *data,undefined4 value,undefined byte1,undefined byte2)\n\n{\n  *data = (char)value;\n  data[1] = byte1;\n  data[2] = byte2;\n  FUN_080057b4(value,0);\n  FUN_080057b4(data[1],1);\n  FUN_080057b4(data[2],1);\n  FUN_08005848(data[1],1);\n  FUN_08005848(data[2],0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "update_and_process_data_0800157c",
                "param_1": "data",
                "param_2": "value",
                "param_3": "byte1",
                "param_4": "byte2",
                "param_1[1]": "data[1]",
                "param_1[2]": "data[2]"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "check_bits_set_080015b2",
            "code": "\nuint check_bits_set_080015b2(undefined *input_array)\n\n{\n  int result;\n  uint bit_index;\n  uint result_bits;\n  \n  FUN_08005848(input_array[1],0);\n  result_bits = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(input_array[2],1);\n    result = FUN_08005890(*input_array);\n    if (result != 0) {\n      result_bits = result_bits | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(input_array[2],0);\n  }\n  FUN_08005848(input_array[1],1);\n  return result_bits;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "check_bits_set_080015b2",
                "param_1": "input_array",
                "iVar1": "result",
                "uVar2": "bit_index",
                "uVar3": "result_bits"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_value_080015f8",
            "code": "\nundefined8 calculateValue_080015f8(undefined4 input1,int input2,undefined4 input3,undefined4 input4)\n\n{\n  uint returnValue;\n  undefined8 result;\n  \n  returnValue = FUN_080015b2();\n  if ((returnValue & 0x10000) == 0) {\n    returnValue = returnValue >> 0x12;\n    result = FUN_0800040c(returnValue & 0x1fff);\n    if ((returnValue & 0x2000) != 0) {\n      result = FUN_0800040c(~returnValue & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,input4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (input2 == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    returnValue = returnValue & 7;\n    if (returnValue == 2) {\n      return 0x40c3888000000000;\n    }\n    if (returnValue == 4) {\n      return 0x40c3890000000000;\n    }\n    if (returnValue != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_value_080015f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "returnValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int data)\n\n{\n  char isValid;\n  int result;\n  int comparison;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char isFlagSet;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined8 value4;\n  undefined8 value5;\n  undefined8 value6;\n  undefined8 value7;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  \n  isFlagSet = *(char *)(data + 0x70);\n  if (isFlagSet != '\\0') {\n    result = FUN_080058e0();\n    if ((uint)(result - *(int *)(data + 0x44)) < *(uint *)(data + 0x58)) {\n      isFlagSet = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(data + 0x38);\n      temp5 = (*(undefined4 **)(data + 0x38))[1];\n      value4 = FUN_08000190(**(undefined4 **)(data + 0x40),(*(undefined4 **)(data + 0x40))[1])\n      ;\n      value3 = (undefined4)((ulonglong)value4 >> 0x20);\n      value5 = FUN_08000190(temp2,temp5,*(undefined4 *)(data + 0x50),\n                            *(undefined4 *)(data + 0x54));\n      temp1 = (undefined4)((ulonglong)value5 >> 0x20);\n      value6 = FUN_080004f8((int)value4,value3,*(undefined4 *)(data + 0x20),\n                            *(undefined4 *)(data + 0x24));\n      value6 = FUN_08000194((int)value6,(int)((ulonglong)value6 >> 0x20),\n                            *(undefined4 *)(data + 0x48),*(undefined4 *)(data + 0x4c));\n      *(undefined8 *)(data + 0x48) = value6;\n      isValid = *(char *)(data + 0x71);\n      if (isValid == '\\0') {\n        value7 = FUN_080004f8((int)value5,temp1,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n        value6 = FUN_08000190((int)value6,(int)((ulonglong)value6 >> 0x20),(int)value7,\n                              (int)((ulonglong)value7 >> 0x20));\n        *(undefined8 *)(data + 0x48) = value6;\n      }\n      temp3 = *(undefined4 *)(data + 0x48);\n      temp6 = *(undefined4 *)(data + 0x4c);\n      value1 = *(undefined4 *)(undefined8 *)(data + 0x68);\n      value2 = *(undefined4 *)(data + 0x6c);\n      value6 = *(undefined8 *)(data + 0x68);\n      comparison = FUN_08000a18(temp3,temp6,value1,value2);\n      if (comparison == 0) {\n        temp4 = *(undefined4 *)(data + 0x60);\n        temp7 = *(undefined4 *)(data + 100);\n        comparison = FUN_080009dc(temp3,temp6);\n        if (comparison != 0) {\n          *(undefined4 *)(data + 0x48) = temp4;\n          *(undefined4 *)(data + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(data + 0x48) = value1;\n        *(undefined4 *)(data + 0x4c) = value2;\n      }\n      if (isValid == '\\0') {\n        value4 = 0;\n      }\n      else {\n        value4 = FUN_080004f8((int)value4,value3,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n      }\n      localVar2 = (undefined4)((ulonglong)value4 >> 0x20);\n      localVar1 = (undefined4)value4;\n      value3 = *(undefined4 *)(data + 0x48);\n      temp3 = *(undefined4 *)(data + 0x4c);\n      value4 = FUN_080004f8((int)value5,temp1,*(undefined4 *)(data + 0x28),\n                            *(undefined4 *)(data + 0x2c));\n      value4 = FUN_08000190(value3,temp3,(int)value4,(int)((ulonglong)value4 >> 0x20));\n      value4 = FUN_08000194(localVar1,localVar2,(int)value4,(int)((ulonglong)value4 >> 0x20));\n      value3 = (undefined4)((ulonglong)value4 >> 0x20);\n      comparison = FUN_080009dc(value1,value2,(int)value4,value3);\n      if (comparison == 0) {\n        value6 = *(undefined8 *)(data + 0x60);\n        comparison = FUN_080009dc((int)value4,value3,*(undefined4 *)(undefined8 *)(data + 0x60),\n                             *(undefined4 *)(data + 100));\n        if (comparison == 0) {\n          value6 = value4;\n        }\n      }\n      **(undefined8 **)(data + 0x3c) = value6;\n      *(undefined4 *)(data + 0x50) = temp2;\n      *(undefined4 *)(data + 0x54) = temp5;\n      *(int *)(data + 0x44) = result;\n    }\n  }\n  return isFlagSet;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "data",
                "cVar1": "isValid",
                "iVar2": "result",
                "iVar3": "comparison",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "isFlagSet",
                "uVar12": "value1",
                "uVar13": "value2",
                "uVar14": "value3",
                "uVar15": "value4",
                "uVar16": "value5",
                "uVar17": "value6",
                "uVar18": "value7",
                "local_38": "localVar1",
                "uStack_34": "localVar2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_params_08001814",
            "code": "\nvoid initializeParams_08001814(undefined4 *params,undefined4 param2,undefined4 source1,undefined4 source2,\n                 undefined4 source3,undefined4 source4,undefined4 source5,undefined4 source6,\n                 int flag)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined temp2;\n  bool isFlagTrue;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  \n  result = FUN_080009dc(source1,source2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(source3,source4,0,0), result == 0)) &&\n     (result = FUN_080009dc(source5,source6,0,0), result == 0)) {\n    params[0xd] = flag;\n    isFlagTrue = flag != 1;\n    if (isFlagTrue) {\n      flag = 0;\n    }\n    temp2 = (undefined)flag;\n    if (!isFlagTrue) {\n      temp2 = 1;\n    }\n    *(undefined *)((int)params + 0x71) = temp2;\n    *params = source1;\n    params[1] = source2;\n    params[2] = source3;\n    params[3] = source4;\n    params[4] = source5;\n    params[5] = source6;\n    temp3 = FUN_0800040c(params[0x16]);\n    temp3 = FUN_0800074c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x408f4000);\n    temp1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    params[6] = source1;\n    params[7] = source2;\n    temp4 = FUN_080004f8(source3,source4,(int)temp3,temp1);\n    *(undefined8 *)(params + 8) = temp4;\n    temp3 = FUN_0800074c(source5,source6,(int)temp3,temp1);\n    *(undefined8 *)(params + 10) = temp3;\n    if (params[0xc] == 1) {\n      temp5 = FUN_08000190(0,0,source1,source2);\n      *(undefined8 *)(params + 6) = temp5;\n      temp4 = FUN_08000190(0,0,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      *(undefined8 *)(params + 8) = temp4;\n      temp3 = FUN_08000190(0,0,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      *(undefined8 *)(params + 10) = temp3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_params_08001814",
                "param_1": "params",
                "param_2": "param2",
                "param_3": "source1",
                "param_4": "source2",
                "param_5": "source3",
                "param_6": "source4",
                "param_7": "source5",
                "param_8": "source6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "bVar4": "isFlagTrue",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_080018f8",
            "code": "\nvoid initialize_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_data_08001918",
            "code": "\nvoid updateData_08001918(int ptr_data,int num_elements,undefined4 ptr_var1,undefined4 ptr_var2)\n\n{\n  undefined4 var1;\n  undefined8 var2;\n  undefined8 var3;\n  \n  if (0 < num_elements) {\n    var2 = FUN_0800042c(num_elements);\n    var3 = FUN_0800040c(*(undefined4 *)(ptr_data + 0x58));\n    var2 = FUN_0800074c((int)var2,(int)((ulonglong)var2 >> 0x20),(int)var3,\n                         (int)((ulonglong)var3 >> 0x20),ptr_var2);\n    var1 = (undefined4)((ulonglong)var2 >> 0x20);\n    var3 = FUN_080004f8((int)var2,var1,*(undefined4 *)(ptr_data + 0x20),\n                         *(undefined4 *)(ptr_data + 0x24));\n    *(undefined8 *)(ptr_data + 0x20) = var3;\n    var2 = FUN_0800074c(*(undefined4 *)(ptr_data + 0x28),*(undefined4 *)(ptr_data + 0x2c),(int)var2,\n                         var1);\n    *(undefined8 *)(ptr_data + 0x28) = var2;\n    *(int *)(ptr_data + 0x58) = num_elements;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_data_08001918",
                "param_1": "ptr_data",
                "param_2": "num_elements",
                "param_3": "ptr_var1",
                "param_4": "ptr_var2",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_parameters_08001960",
            "code": "\nvoid updateParameters_08001960(int obj_ptr,undefined4 var1,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 *ptr;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  result = FUN_08000a04(input1,input2,input3,input4,input2);\n  if (result == 0) {\n    *(undefined4 *)(obj_ptr + 0x60) = input1;\n    *(undefined4 *)(obj_ptr + 100) = input2;\n    *(undefined4 *)(obj_ptr + 0x68) = input3;\n    *(undefined4 *)(obj_ptr + 0x6c) = input4;\n    if (*(char *)(obj_ptr + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(obj_ptr + 0x3c);\n      value1 = *ptr;\n      value3 = ptr[1];\n      result = FUN_080009dc(input3,input4,value1,value3);\n      if (result == 0) {\n        result = FUN_08000a18(input1,input2,value1,value3);\n        if (result != 0) {\n          *ptr = input1;\n          ptr[1] = input2;\n        }\n      }\n      else {\n        *ptr = input3;\n        ptr[1] = input4;\n      }\n      value1 = *(undefined4 *)(obj_ptr + 0x48);\n      value3 = *(undefined4 *)(obj_ptr + 0x4c);\n      value2 = *(undefined4 *)(obj_ptr + 0x68);\n      value4 = *(undefined4 *)(obj_ptr + 0x6c);\n      result = FUN_08000a18(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(obj_ptr + 0x48) = value2;\n        *(undefined4 *)(obj_ptr + 0x4c) = value4;\n        return;\n      }\n      value2 = *(undefined4 *)(obj_ptr + 0x60);\n      value4 = *(undefined4 *)(obj_ptr + 100);\n      result = FUN_080009dc(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(obj_ptr + 0x48) = value2;\n        *(undefined4 *)(obj_ptr + 0x4c) = value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_parameters_08001960",
                "param_1": "obj_ptr",
                "param_2": "var1",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "iVar1": "result",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2",
                "uVar5": "value3",
                "uVar6": "value4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_config_entries_080019f6",
            "code": "\nvoid updateConfigEntries_080019f6(int configEntry)\n\n{\n  int result;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 ptr3;\n  undefined4 ptr4;\n  \n  ptr2 = **(undefined4 **)(configEntry + 0x3c);\n  ptr3 = (*(undefined4 **)(configEntry + 0x3c))[1];\n  *(undefined4 *)(configEntry + 0x48) = ptr2;\n  *(undefined4 *)(configEntry + 0x4c) = ptr3;\n  ptr1 = (*(undefined4 **)(configEntry + 0x38))[1];\n  *(undefined4 *)(configEntry + 0x50) = **(undefined4 **)(configEntry + 0x38);\n  *(undefined4 *)(configEntry + 0x54) = ptr1;\n  ptr1 = *(undefined4 *)(configEntry + 0x68);\n  ptr4 = *(undefined4 *)(configEntry + 0x6c);\n  result = FUN_08000a18(ptr2,ptr3,ptr1,ptr4);\n  if (result == 0) {\n    ptr1 = *(undefined4 *)(configEntry + 0x60);\n    ptr4 = *(undefined4 *)(configEntry + 100);\n    result = FUN_080009dc(ptr2,ptr3,ptr1,ptr4);\n    if (result != 0) {\n      *(undefined4 *)(configEntry + 0x48) = ptr1;\n      *(undefined4 *)(configEntry + 0x4c) = ptr4;\n    }\n    return;\n  }\n  *(undefined4 *)(configEntry + 0x48) = ptr1;\n  *(undefined4 *)(configEntry + 0x4c) = ptr4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_config_entries_080019f6",
                "param_1": "configEntry",
                "iVar1": "result",
                "uVar2": "ptr1",
                "uVar3": "ptr2",
                "uVar4": "ptr3",
                "uVar5": "ptr4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "update_status_08001a44",
            "code": "\nvoid updateStatus_08001a44(int address,int flag)\n\n{\n  undefined newValue;\n  \n  if (flag == 1) {\n    newValue = 1;\n    if (*(char *)(address + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newValue = 0;\n  }\n  *(undefined *)(address + 0x70) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "update_status_08001a44",
                "param_1": "address",
                "param_2": "flag",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_params_and_values_08001a66",
            "code": "\nvoid updateParamsAndValues_08001a66(int p1,int p2,undefined4 p3,undefined4 p4)\n\n{\n  undefined8 newValue;\n  \n  if ((*(char *)(p1 + 0x70) != '\\0') && (*(int *)(p1 + 0x30) != p2)) {\n    newValue = FUN_08000190(0,0,*(undefined4 *)(p1 + 0x18),*(undefined4 *)(p1 + 0x1c),p4\n                        );\n    *(undefined8 *)(p1 + 0x18) = newValue;\n    newValue = FUN_08000190(0,0,*(undefined4 *)(p1 + 0x20),*(undefined4 *)(p1 + 0x24));\n    *(undefined8 *)(p1 + 0x20) = newValue;\n    newValue = FUN_08000190(0,0,*(undefined4 *)(p1 + 0x28),*(undefined4 *)(p1 + 0x2c));\n    *(undefined8 *)(p1 + 0x28) = newValue;\n  }\n  *(int *)(p1 + 0x30) = p2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_params_and_values_08001a66",
                "param_1": "p1",
                "param_2": "p2",
                "param_3": "p3",
                "param_4": "p4",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_parameters_08001ab0",
            "code": "\nint initializeParameters_08001ab0(int baseAddress,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extraResult;\n  \n  *(undefined4 *)(baseAddress + 0x3c) = param3;\n  *(undefined4 *)(baseAddress + 0x38) = param2;\n  *(undefined4 *)(baseAddress + 0x40) = param4;\n  *(undefined *)(baseAddress + 0x70) = 0;\n  FUN_08001960(baseAddress,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(baseAddress + 0x58) = 100;\n  FUN_08001a66(baseAddress,param12);\n  FUN_08001814(baseAddress,extraResult,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(baseAddress + 0x44) = result - *(int *)(baseAddress + 0x58);\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_parameters_08001ab0",
                "param_1": "baseAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extraResult"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_08001b18",
            "code": "\nundefined4 initialize_08001b18(undefined4 value)\n\n{\n  FUN_08001ab0();\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_08001b18",
                "param_1": "value"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_board_08001b48",
            "code": "\nvoid initializeBoard_08001b48(void)\n\n{\n  int result;\n  uint timeDivisor;\n  undefined4 parameters1 [2];\n  undefined4 parameter2;\n  undefined4 parameter3;\n  undefined4 parameter4;\n  undefined4 parameter5;\n  undefined4 parameter6;\n  undefined4 parameter7;\n  undefined4 parameters2 [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  parameters2[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08003688(parameters2);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  parameter3 = 0xf;\n  parameter4 = 2;\n  parameter5 = 0;\n  parameter6 = 0x400;\n  parameter7 = 0;\n  result = FUN_08003ad4(&parameter3);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  parameters1[0] = 2;\n  parameter2 = 0x8000;\n  result = FUN_08003c90(parameters1);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeDivisor = FUN_08003c44();\n  FUN_08002514(timeDivisor / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_board_08001b48",
                "iVar1": "result",
                "uVar2": "timeDivisor",
                "local_54": "parameters1",
                "local_4c": "parameter2",
                "local_44": "parameter3",
                "local_40": "parameter4",
                "local_3c": "parameter5",
                "local_38": "parameter6",
                "local_34": "parameter7",
                "local_30": "parameters2",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_08001c32",
            "code": "\nvoid initialize_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "check_and_update_parameter_08001c3c",
            "code": "\nundefined4 check_and_update_parameter_08001c3c(uint input_param)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input_param) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,input_param,0);\n  DAT_2000007c = input_param;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "check_and_update_parameter_08001c3c",
                "param_1": "input_param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_hardware_08001c88",
            "code": "\n\n\nundefined4 initializeHardware_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_hardware_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "add_pointers_08001cac",
            "code": "\nvoid addPointers_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "add_pointers_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_global_variable_08001cc4",
            "code": "\nundefined4 get_global_variable_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_global_variable_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "calculate_result_08001cd0",
            "code": "\nundefined4 calculateResult_08001cd0(uint **inputArray,uint inputValue)\n\n{\n  int initialValue;\n  uint factor;\n  int iterationCounter;\n  undefined4 result;\n  uint *arrayPtr;\n  uint calculationResult;\n  uint loopCounter;\n  \n  loopCounter = 0;\n  initialValue = FUN_08001cc4();\n  calculationResult = DAT_20000084;\n  arrayPtr = *inputArray;\n  if ((arrayPtr[2] & 0x100) == 0) {\n    if (((arrayPtr[1] & 0x100) == 0) && ((arrayPtr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputArray & 2) != 0) goto LAB_08001de2;\n      } while ((inputValue == 0xffffffff) ||\n              ((inputValue != 0 && (iterationCounter = FUN_08001cc4(), (uint)(iterationCounter - initialValue) <= inputValue))));\n      inputArray[10] = (uint *)((uint)inputArray[10] | 4);\n      *(undefined *)(inputArray + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      arrayPtr = *inputArray;\n      if (((arrayPtr[4] & 0x24924924) == 0) && ((arrayPtr[3] & 0x924924) == 0)) {\n        if ((arrayPtr[4] & 0x12492492) == 0) {\n          if ((arrayPtr[3] & 0x492492) == 0) {\n            iterationCounter = 0x14;\n          }\n          else {\n            iterationCounter = 0x29;\n          }\n        }\n        else {\n          iterationCounter = 0x29;\n        }\n      }\n      else if (((arrayPtr[4] & 0x12492492) == 0) && ((arrayPtr[3] & 0x492492) == 0)) {\n        iterationCounter = 0x54;\n      }\n      else if ((arrayPtr[4] & 0x249249) == 0) {\n        if ((arrayPtr[3] & 0x249249) == 0) {\n          iterationCounter = 0x54;\n        }\n        else {\n          iterationCounter = 0xfc;\n        }\n      }\n      else {\n        iterationCounter = 0xfc;\n      }\n      calculationResult = (calculationResult / factor) * iterationCounter;\n      for (; loopCounter <= calculationResult && calculationResult - loopCounter != 0; loopCounter = loopCounter + 1) {\n        if ((inputValue != 0xffffffff) &&\n           ((inputValue == 0 || (iterationCounter = FUN_08001cc4(), inputValue < (uint)(iterationCounter - initialValue))))) {\n          inputArray[10] = (uint *)((uint)inputArray[10] | 4);\n          *(undefined *)(inputArray + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **inputArray = 0xffffffed;\n      inputArray[10] = (uint *)((uint)inputArray[10] | 0x200);\n      if (((*inputArray)[2] & 0xe0000) == 0xe0000) {\n        if (inputArray[3] == (uint *)0x0) {\n          inputArray[10] = (uint *)((uint)inputArray[10] & 0xfffffeff);\n          if (((uint)inputArray[10] & 0x1000) == 0) {\n            inputArray[10] = (uint *)((uint)inputArray[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputArray[10] = (uint *)((uint)inputArray[10] | 0x20);\n    *(undefined *)(inputArray + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "calculate_result_08001cd0",
                "param_1": "inputArray",
                "param_2": "inputValue",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "iterationCounter",
                "uVar4": "result",
                "puVar5": "arrayPtr",
                "uVar6": "calculationResult",
                "local_1c": "loopCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 get_offset_value_08001e40(int *ptr_offset)\n\n{\n  return *(undefined4 *)(*ptr_offset + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "ptr_offset"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_parameter_values_08001e48",
            "code": "\nundefined4 updateParameterValues_08001e48(int *paramList,uint *valueList)\n\n{\n  undefined4 returnValue;\n  uint tempValue;\n  int tempCount;\n  \n  if (*(char *)(paramList + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(paramList + 9) = 1;\n    tempValue = valueList[1];\n    if (tempValue < 7) {\n      tempValue = tempValue * 5 - 5;\n      *(uint *)(*paramList + 0x34) =\n           *valueList << (tempValue & 0xff) | *(uint *)(*paramList + 0x34) & ~(0x1f << (tempValue & 0xff));\n    }\n    else if (tempValue < 0xd) {\n      tempValue = tempValue * 5 - 0x23;\n      *(uint *)(*paramList + 0x30) =\n           *valueList << (tempValue & 0xff) | *(uint *)(*paramList + 0x30) & ~(0x1f << (tempValue & 0xff));\n    }\n    else {\n      tempValue = tempValue * 5 - 0x41;\n      *(uint *)(*paramList + 0x2c) =\n           *valueList << (tempValue & 0xff) | *(uint *)(*paramList + 0x2c) & ~(0x1f << (tempValue & 0xff));\n    }\n    tempValue = *valueList;\n    if (tempValue < 10) {\n      *(uint *)(*paramList + 0x10) =\n           valueList[2] << (tempValue * 3 & 0xff) |\n           *(uint *)(*paramList + 0x10) & ~(7 << (tempValue * 3 & 0xff));\n    }\n    else {\n      tempValue = tempValue * 3 - 0x1e;\n      *(uint *)(*paramList + 0xc) =\n           valueList[2] << (tempValue & 0xff) | *(uint *)(*paramList + 0xc) & ~(7 << (tempValue & 0xff));\n    }\n    if (*valueList - 0x10 < 2) {\n      if (*paramList == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*valueList == 0x10) {\n            for (tempCount = (DAT_20000084 / 1000000) * 10; tempCount != 0; tempCount = tempCount + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        paramList[10] = paramList[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(paramList + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_parameter_values_08001e48",
                "param_1": "paramList",
                "param_2": "valueList",
                "uVar1": "returnValue",
                "uVar2": "tempValue",
                "local_c": "tempCount"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_value_from_offset_08001f80",
            "code": "\nundefined4 getValueFromOffset_08001f80(int baseAddress)\n\n{\n  return *(undefined4 *)(baseAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_value_from_offset_08001f80",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "initialize_and_check_flag_08001f84",
            "code": "\nundefined4 initializeAndCheckFlag_08001f84(int *data,undefined4 flag)\n\n{\n  int result;\n  undefined4 returnValue;\n  int dataValue;\n  uint loopCount;\n  \n  dataValue = *data;\n  if ((*(uint *)(dataValue + 8) & 1) == 0) {\n    *(uint *)(dataValue + 8) = *(uint *)(dataValue + 8) | 1;\n    for (loopCount = DAT_20000084 / 1000000; loopCount != 0; loopCount = loopCount - 1) {\n    }\n    dataValue = FUN_08001cc4(data,flag,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - dataValue) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "initialize_and_check_flag_08001f84",
                "param_1": "data",
                "param_2": "flag",
                "iVar1": "result",
                "iVar3": "dataValue",
                "uVar2": "returnValue",
                "local_14": "loopCount"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_application_08002004",
            "code": "\n\n\nint initializeApplication_08002004(int *appData)\n\n{\n  int result;\n  undefined4 *ptr;\n  int baseAddress;\n  \n  if (*(char *)(appData + 9) != '\\x01') {\n    *(undefined *)(appData + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      appData[10] = appData[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*appData;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        appData[10] = appData[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          appData[10] = appData[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        appData[10] = appData[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          appData[10] = appData[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((appData[10] & 0x1000U) == 0) {\n        appData[0xb] = 0;\n      }\n      else {\n        appData[0xb] = appData[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(appData + 9) = 0;\n      *ptr = 0xfffffffd;\n      baseAddress = *appData;\n      if (((*(uint *)(baseAddress + 8) & 0xe0000) == 0xe0000) &&\n         ((baseAddress != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(baseAddress + 8) = *(uint *)(baseAddress + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(baseAddress + 8) = *(uint *)(baseAddress + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(appData + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_application_08002004",
                "param_1": "appData",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "baseAddress"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_status_080020f0",
            "code": "\nundefined4 updateStatus_080020f0(int *statusArray)\n\n{\n  int counter1;\n  int counter2;\n  \n  counter2 = *statusArray;\n  if ((*(uint *)(counter2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(counter2 + 8) = *(uint *)(counter2 + 8) & 0xfffffffe;\n  counter2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*statusArray + 8) & 1) == 0) {\n      return 0;\n    }\n    counter1 = FUN_08001cc4();\n  } while ((uint)(counter1 - counter2) < 3);\n  statusArray[10] = statusArray[10] | 0x10;\n  statusArray[0xb] = statusArray[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_status_080020f0",
                "param_1": "statusArray",
                "iVar1": "counter1",
                "iVar2": "counter2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "validate_parameters_0800213c",
            "code": "\nundefined4 validate_parameters_0800213c(int *parameters)\n\n{\n  int result;\n  uint value1;\n  uint value2;\n  \n  if (parameters == (int *)0x0) {\n    return 1;\n  }\n  if (parameters[10] == 0) {\n    parameters[0xb] = 0;\n    *(undefined *)(parameters + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(parameters);\n  if (((parameters[10] & 0x10U) == 0) && (result == 0)) {\n    parameters[10] = parameters[10] & 0xffffeefdU | 2;\n    value1 = parameters[1] | parameters[7] | parameters[3] << 1;\n    if (parameters[2] == 0x100) {\n      value2 = 0x100;\n    }\n    else {\n      value2 = 0;\n      if (parameters[2] == 1) {\n        value2 = 0x100;\n      }\n    }\n    if (parameters[5] == 1) {\n      if (parameters[3] == 0) {\n        value2 = value2 | (parameters[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        parameters[10] = parameters[10] | 0x20;\n        parameters[0xb] = parameters[0xb] | 1;\n      }\n    }\n    *(uint *)(*parameters + 4) = value2 | *(uint *)(*parameters + 4) & 0xffff16ff;\n    *(uint *)(*parameters + 8) = *(uint *)(*parameters + 8) & 0xffe1f7fd | value1;\n    if ((parameters[2] == 0x100) || (parameters[2] == 1)) {\n      value2 = (parameters[4] + -1) * 0x100000;\n    }\n    else {\n      value2 = 0;\n    }\n    *(uint *)(*parameters + 0x2c) = value2 | *(uint *)(*parameters + 0x2c) & 0xff0fffff;\n    if (value1 != (*(uint *)(*parameters + 8) & 0xff1f0efe)) {\n      parameters[10] = parameters[10] & 0xffffffedU | 0x10;\n      parameters[0xb] = parameters[0xb] | 1;\n      return 1;\n    }\n    parameters[0xb] = 0;\n    parameters[10] = parameters[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  parameters[10] = parameters[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "validate_parameters_0800213c",
                "param_1": "parameters",
                "iVar1": "result",
                "uVar2": "value1",
                "uVar3": "value2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "sanitize_data_0800224c",
            "code": "\nint sanitizeData_0800224c(int *data)\n\n{\n  int result;\n  \n  if (data == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    data[10] = data[10] | 2;\n    result = FUN_080020f0();\n    if (result == 0) {\n      *(undefined4 *)*data = 0xffffffe0;\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xff3f0000;\n      *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xff0106f0;\n      *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xff000000;\n      *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xc0000000;\n      *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffff000;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffff000;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffff000;\n      *(uint *)(*data + 0x20) = *(uint *)(*data + 0x20) & 0xfffff000;\n      *(uint *)(*data + 0x24) = *(uint *)(*data + 0x24) & 0xfffff000;\n      *(uint *)(*data + 0x28) = *(uint *)(*data + 0x28) & 0xfffff000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x30) = *(uint *)(*data + 0x30) & 0xc0000000;\n      *(uint *)(*data + 0x34) = *(uint *)(*data + 0x34) & 0xc0000000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      FUN_080049f0(data);\n      data[0xb] = 0;\n      data[10] = 0;\n    }\n    *(undefined *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "sanitize_data_0800224c",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_param_08002348",
            "code": "\nint checkAndUpdateParam_08002348(int param)\n\n{\n  int result;\n  \n  if (*(char *)(param + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(param + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(param + 0x28) = *(uint *)(param + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(param + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_param_08002348",
                "param_1": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_modify_status_08002384",
            "code": "\nint check_and_modify_status_08002384(int *status_array)\n\n{\n  uint divisor;\n  int result;\n  uint dividend;\n  int start_time;\n  int current_time;\n  int loop_counter;\n  \n  if (*(char *)(status_array + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status_array + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    status_array[10] = status_array[10] & 0xffffeefdU | 2;\n    divisor = DAT_20000084;\n    dividend = FUN_08003da4(2);\n    for (loop_counter = divisor / dividend << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08001f84(status_array);\n    *(uint *)(*status_array + 8) = *(uint *)(*status_array + 8) | 8;\n    start_time = FUN_08001cc4();\n    while (current_time = *status_array, (*(uint *)(current_time + 8) & 8) != 0) {\n      current_time = FUN_08001cc4();\n      if (10 < (uint)(current_time - start_time)) {\n        status_array[10] = status_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(status_array + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = FUN_08001cc4();\n    while ((*(uint *)(*status_array + 8) & 4) != 0) {\n      current_time = FUN_08001cc4();\n      if (10 < (uint)(current_time - start_time)) {\n        status_array[10] = status_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(status_array + 9) = 0;\n        return 1;\n      }\n    }\n    status_array[10] = status_array[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(status_array + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_modify_status_08002384",
                "param_1": "status_array",
                "uVar1": "divisor",
                "iVar2": "result",
                "uVar3": "dividend",
                "iVar4": "start_time",
                "iVar5": "current_time",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_data_08002470",
            "code": "\n\n\nvoid updateData_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_data_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_data_08002494",
            "code": "\n\n\nvoid updateData_08002494(uint address,uint value1,uint value2)\n\n{\n  uint shiftAmount;\n  uint shiftedAmount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftedAmount = 7 - shiftAmount;\n  if (3 < shiftedAmount) {\n    shiftedAmount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (value1 & (1 << (shiftedAmount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & value2;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_data_08002494",
                "param_1": "address",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "shiftAmount",
                "uVar2": "shiftedAmount"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_in_array_080024f8",
            "code": "\nvoid setBitInArray_080024f8(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_in_array_080024f8",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "check_param_and_update_08002514",
            "code": "\n\n\nundefined4 checkParamAndUpdate_08002514(int inputParam)\n\n{\n  if (inputParam - 1U < 0x1000000) {\n    _DAT_e000e014 = inputParam - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "check_param_and_update_08002514",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_at_offset_08002540",
            "code": "\nvoid setBitAtOffset_08002540(uint offset)\n\n{\n  if (-1 < (int)offset) {\n    *(int *)(((offset >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (offset & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_at_offset_08002540",
                "param_1": "offset"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_control_register_08002560",
            "code": "\n\n\nvoid updateControlRegister_08002560(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_control_register_08002560",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "execute_predefined_functions_08002582",
            "code": "\nvoid execute_predefined_functions_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "execute_predefined_functions_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "configure_hardware_0800258c",
            "code": "\n\n\nundefined4 configureHardware_0800258c(uint **configData)\n\n{\n  uint *currentConfig;\n  \n  if (*(char *)((int)configData + 0x21) != '\\x02') {\n    configData[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **configData = **configData & 0xfffffff1;\n  **configData = **configData & 0xfffffffe;\n  currentConfig = *configData;\n  if (currentConfig == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentConfig == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentConfig == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentConfig == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentConfig == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentConfig == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)configData + 0x21) = 1;\n  *(undefined *)(configData + 8) = 0;\n  if (configData[0xd] != (uint *)0x0) {\n    (*(code *)configData[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "configure_hardware_0800258c",
                "param_1": "configData",
                "puVar1": "currentConfig",
                "DAT": "data"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_register_08002624",
            "code": "\n\n\nvoid updateRegister_08002624(uint *registerPtr,uint *inputPtr)\n\n{\n  uint *outputPtr;\n  uint bitMask;\n  uint inputBit;\n  uint bitIndex;\n  uint value;\n  uint newValue;\n  int bitOffset;\n  int registerIndex;\n  \n  newValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    inputBit = *inputPtr & bitMask;\n    if (bitMask == inputBit) {\n      value = inputPtr[1];\n      if (value == 0x12) {\n        newValue = inputPtr[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          newValue = inputPtr[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_08002776;\n          if (value == 1) {\n            newValue = inputPtr[3];\n          }\n        }\n        else if (value == 3) {\n          newValue = 0;\n        }\n        else if (value == 0x11) {\n          newValue = inputPtr[3] + 4;\n        }\n      }\n      else if (value == 0x10210000) {\nLAB_08002776:\n        if (inputPtr[2] == 0) {\n          newValue = 4;\n        }\n        else if (inputPtr[2] == 1) {\n          registerPtr[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          registerPtr[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (value < 0x10210001) {\n        if ((value == 0x10110000) || (value == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((value == 0x10310000) || ((value == 0x10320000 || (value == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitIndex;\n      outputPtr = registerPtr;\n      if (0xff < inputBit) {\n        bitMask = bitIndex - 8;\n        outputPtr = registerPtr + 1;\n      }\n      *outputPtr = *outputPtr & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((inputPtr[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitOffset = (bitIndex & 3) << 2;\n        if (registerPtr == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (registerPtr == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (registerPtr == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (registerPtr == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bitOffset) | registerIndex << bitOffset;\n        if ((inputPtr[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~inputBit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | inputBit;\n        }\n        if ((inputPtr[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~inputBit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | inputBit;\n        }\n        if ((inputPtr[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~inputBit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | inputBit;\n        }\n        if ((inputPtr[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~inputBit;\n        }\n        else {\n          _DAT_4001040c = inputBit | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_register_08002624",
                "param_1": "registerPtr",
                "param_2": "inputPtr",
                "puVar1": "outputPtr",
                "uVar2": "bitMask",
                "uVar3": "inputBit",
                "uVar4": "bitIndex",
                "uVar5": "value",
                "uVar6": "newValue",
                "iVar7": "bitOffset",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_compatibility_08002810",
            "code": "\nundefined4 checkCompatibility_08002810(int inputOne,uint inputTwo)\n\n{\n  if ((inputTwo & *(uint *)(inputOne + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_compatibility_08002810",
                "param_1": "inputOne",
                "param_2": "inputTwo"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int objectPtr,int value,int flag)\n\n{\n  if (flag == 0) {\n    *(int *)(objectPtr + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectPtr + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "objectPtr",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_and_call_function_0800282c",
            "code": "\n\n\nvoid updateDataAndCallFunction_0800282c(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_and_call_function_0800282c",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_status_08002848",
            "code": "\nundefined4 updateStatus_08002848(int *status)\n\n{\n  if (*(char *)((int)status + 0x3e) == '@') {\n    if (condition1 == 0) {\n      *(uint *)(*status + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (condition2 == 0x4000) {\n    if (*(char *)((int)status + 0x3d) == '!') {\n      *(uint *)(*status + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (condition1 == 0) {\n    *(uint *)(*status + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition1 == 1) {\n    *(uint *)(*status + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_status_08002848",
                "param_1": "status",
                "param_1[0x14]": "condition1",
                "param_1[0x11]": "inputValue",
                "param_1[4]": "condition2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "copy_value_to_offset_080028d2",
            "code": "\nundefined4 copy_value_to_offset_080028d2(int *array_ptr)\n\n{\n  *(uint *)(*array_ptr + 0x10) = array_ptr[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "copy_value_to_offset_080028d2",
                "param_1": "array_ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "set_flags_based_on_conditions_080028de",
            "code": "\nundefined4 setFlagsBasedOnConditions_080028de(uint **parameters)\n\n{\n  uint *tempVar;\n  \n  tempVar = flagPtr3;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((flagPtr != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((flagPtr == (uint *)0x0) && (flagPtr2 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      flagPtr = (uint *)((int)flagPtr + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (tempVar == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          tempVar = *parameters;\n          if ((tempVar[1] & 0x800) == 0) {\n            *tempVar = *tempVar | 0x200;\n          }\n          else {\n            *tempVar = *tempVar & 0xfffffbff;\n          }\n        }\n        else if (((tempVar == (uint *)0x4) || (tempVar == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (flagPtr3 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (flagPtr3 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        tempVar = *parameters;\n        if ((tempVar[1] & 0x800) != 0) {\n          tempVar[1] = tempVar[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        tempVar = *parameters;\n        if ((tempVar[1] & 0x800) != 0) {\n          tempVar[1] = tempVar[1] | 0x1000;\n        }\n      }\n      flagPtr = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "set_flags_based_on_conditions_080028de",
                "param_1": "parameters",
                "puVar1": "tempVar",
                "param_1[0x14]": "flagPtr",
                "param_1[4]": "flagPtr2",
                "param_1[0xb]": "flagPtr3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_data_08002ab8",
            "code": "\nundefined4 updateData_08002ab8(int *data)\n\n{\n  byte *bytePtr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)data[9];\n    data[9] = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_data_08002ab8",
                "param_1": "data",
                "pbVar1": "bytePtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_param_and_decrement_08002ad8",
            "code": "\nundefined4 updateParamAndDecrement_08002ad8(int *paramArray)\n\n{\n  undefined *destination;\n  \n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    destination = (undefined *)paramArray[9];\n    paramArray[9] = (int)(destination + 1);\n    *destination = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_param_and_decrement_08002ad8",
                "param_1": "paramArray",
                "puVar1": "destination"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "process_input_08002af8",
            "code": "\nundefined4 processInput_08002af8(uint **ptrArray,uint *inputBuffer,int bufferSize,uint *outputBuffer)\n\n{\n  undefined4 status;\n  uint *ptr;\n  \n  if (*(char *)((int)ptrArray + 0x3d) == '(') {\n    if (inputBuffer == (uint *)0x0) {\n      status = 1;\n    }\n    else if (bufferSize == 0) {\n      status = 1;\n    }\n    else if (*(char *)(ptrArray + 0xf) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(ptrArray + 0xf) = 1;\n      ptr = *ptrArray;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **ptrArray = **ptrArray & 0xfffff7ff;\n      *(undefined *)((int)ptrArray + 0x3d) = 0x29;\n      *(undefined *)((int)ptrArray + 0x3e) = 0x20;\n      status = 0;\n      ptrArrayElement10 = (uint *)0x0;\n      inputBufferPtr = inputBuffer;\n      *(short *)((int)ptrArray + 0x2a) = (short)bufferSize;\n      outputBufferPtr = outputBuffer;\n      *(undefined2 *)(ptrArray + 10) = *(undefined2 *)((int)ptrArray + 0x2a);\n      *(undefined *)(ptrArray + 0xf) = 0;\n      (*ptrArray)[1] = (*ptrArray)[1] | 0x700;\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "process_input_08002af8",
                "param_1": "ptrArray",
                "param_2": "inputBuffer",
                "param_3": "bufferSize",
                "param_4": "outputBuffer",
                "uVar1": "status",
                "puVar2": "ptr",
                "param_1[0x10]": "ptrArrayElement10",
                "param_1[9]": "inputBufferPtr",
                "param_1[0xb]": "outputBufferPtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "extract_and_process_data_08002b84",
            "code": "\nundefined4 extract_and_process_data_08002b84(uint **data_ptr,uint *data_array,int data_length,uint *result_ptr)\n\n{\n  undefined4 return_value;\n  uint *ptr_to_data;\n  \n  if (*(char *)((int)data_ptr + 0x3d) == '(') {\n    if (data_array == (uint *)0x0) {\n      return_value = 1;\n    }\n    else if (data_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xf) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xf) = 1;\n      ptr_to_data = *data_ptr;\n      if ((*ptr_to_data & 1) == 0) {\n        *ptr_to_data = *ptr_to_data | 1;\n      }\n      **data_ptr = **data_ptr & 0xfffff7ff;\n      *(undefined *)((int)data_ptr + 0x3d) = 0x2a;\n      *(undefined *)((int)data_ptr + 0x3e) = 0x20;\n      return_value = 0;\n      data_ptr2 = (uint *)0x0;\n      input_data_array = data_array;\n      *(short *)((int)data_ptr + 0x2a) = (short)data_length;\n      result_data_array = result_ptr;\n      *(undefined2 *)(data_ptr + 10) = *(undefined2 *)((int)data_ptr + 0x2a);\n      *(undefined *)(data_ptr + 0xf) = 0;\n      (*data_ptr)[1] = (*data_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "extract_and_process_data_08002b84",
                "param_1": "data_ptr",
                "param_2": "data_array",
                "param_3": "data_length",
                "param_4": "result_ptr",
                "uVar1": "return_value",
                "puVar2": "ptr_to_data",
                "param_1[0x10]": "data_ptr2",
                "param_1[9]": "input_data_array",
                "param_1[0xb]": "result_data_array"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_param_08002c10",
            "code": "\nundefined4 initializeParam_08002c10(uint **paramList)\n\n{\n  uint *currentPtr;\n  \n  if (*(char *)((int)paramList + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)paramList + 0x3d) = 0x28;\n  currentPtr = *paramList;\n  if ((*currentPtr & 1) == 0) {\n    *currentPtr = *currentPtr | 1;\n  }\n  **paramList = **paramList | 0x400;\n  (*paramList)[1] = (*paramList)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_param_08002c10",
                "param_1": "paramList",
                "puVar1": "currentPtr"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_data_08002c54",
            "code": "\nundefined4 process_data_08002c54(int *data_ptr)\n\n{\n  char char_value;\n  byte *byte_ptr;\n  \n  char_value = *(char *)((int)data_ptr + 0x3d);\n  if (*(short *)((int)data_ptr + 0x2a) != 0) {\n    byte_ptr = (byte *)data_ptr[9];\n    data_ptr[9] = (int)(byte_ptr + 1);\n    *(uint *)(*data_ptr + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data_ptr + 0x2a) = *(short *)((int)data_ptr + 0x2a) + -1;\n    if ((*(short *)((int)data_ptr + 0x2a) == 0) && (char_value == ')')) {\n      *(uint *)(*data_ptr + 4) = *(uint *)(*data_ptr + 4) & 0xfffffbff;\n      data_ptr[0xc] = 0x21;\n      *(undefined *)((int)data_ptr + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "data_ptr",
                "cVar1": "char_value",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "process_data_08002ca6",
            "code": "\nundefined4 processData_08002ca6(int *inputData)\n\n{\n  char charValue;\n  undefined *ptr;\n  \n  charValue = *(char *)((int)inputData + 0x3d);\n  if (*(short *)((int)inputData + 0x2a) != 0) {\n    ptr = (undefined *)inputData[9];\n    inputData[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*inputData + 0x10);\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    if ((*(short *)((int)inputData + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*inputData + 4) = *(uint *)(*inputData + 4) & 0xfffffbff;\n      inputData[0xc] = 0x22;\n      *(undefined *)((int)inputData + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "process_data_08002ca6",
                "param_1": "inputData",
                "cVar1": "charValue",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "execute_function_with_parameters_08002cf2",
            "code": "\nundefined4 executeFunctionWithParameters_08002cf2(int *functionParameters,undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined2 selectedValue;\n  uint flagValue;\n  \n  flagValue = *(uint *)(*functionParameters + 0x18);\n  if ((flagValue & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(functionParameters + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(functionParameters + 6);\n  }\n  FUN_08004e74(functionParameters,(*(uint *)(*functionParameters + 0x18) & 4) == 0,selectedValue,flagValue,parameter3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "execute_function_with_parameters_08002cf2",
                "param_1": "functionParameters",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "param_4": "parameter3",
                "uVar1": "selectedValue",
                "uVar2": "flagValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "update_permissions_08002d1c",
            "code": "\nundefined4 updatePermissions_08002d1c(uint **parameters)\n\n{\n  if (((permissions == (uint *)0x4) || (permissions == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    permissions = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    state = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    permissions = (uint *)0xffff0000;\n    state = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "update_permissions_08002d1c",
                "param_1": "parameters",
                "param_1[0xb]": "permissions",
                "param_1[0xc]": "state"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_data_08002db2",
            "code": "\nundefined4 processData_08002db2(uint **data)\n\n{\n  char charVal;\n  uint *ptrVal;\n  \n  charVal = *(char *)((int)data + 0x3d);\n  ptrVal = ptrVar1;\n  if ((*(short *)(data + 10) == 0) && (charVal == '!')) {\n    if ((ptrVal == (uint *)0x4) || ((ptrVal == (uint *)0x8 || (ptrVal == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      ptrVar2 = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      ptrVar2 = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((charVal == '!') || ((*(char *)((int)data + 0x3e) == '@' && (charVal == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          ptrVal = ptrVar4;\n          ptrVar4 = (uint *)((int)ptrVal + 1);\n          (*data)[4] = (uint)*(byte *)ptrVal;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrVal = ptrVar4;\n      ptrVar4 = (uint *)((int)ptrVal + 1);\n      (*data)[4] = (uint)*(byte *)ptrVal;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_data_08002db2",
                "param_1": "data",
                "cVar1": "charVal",
                "puVar2": "ptrVal",
                "param_1[0xb]": "ptrVar1",
                "param_1[0xc]": "ptrVar2",
                "param_1[9]": "ptrVar4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_input_08002efc",
            "code": "\nundefined4 processInput_08002efc(uint **inputData)\n\n{\n  uint *ptr1;\n  \n  ptr1 = inputData[0xb];\n  if (*(char *)((int)inputData + 0x3d) == '!') {\n    if (*(short *)((int)inputData + 0x2a) == 0) {\n      if (((ptr1 == (uint *)0x4) || (ptr1 == (uint *)0x8)) || (ptr1 == (uint *)0xffff0000)) {\n        (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n        **inputData = **inputData | 0x200;\n        ptr2 = (uint *)0x0;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        if (*(char *)((int)inputData + 0x3e) == '@') {\n          *(undefined *)((int)inputData + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)inputData + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n        ptr2 = (uint *)0x11;\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      ptr1 = ptr3;\n      ptr3 = (uint *)((int)ptr1 + 1);\n      (*inputData)[4] = (uint)*(byte *)ptr1;\n      *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_input_08002efc",
                "param_1": "inputData",
                "puVar1": "ptr1",
                "param_1[0xc]": "ptr2",
                "param_1[9]": "ptr3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_input_08002f9c",
            "code": "\nundefined4 processInput_08002f9c(uint **inputArray)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)inputArray + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)inputArray + 0x2a) < 4) {\n      if (*(ushort *)((int)inputArray + 0x2a) - 2 < 2) {\n        if (inputArray[0xb] == (uint *)0x2) {\n          **inputArray = **inputArray | 0x400;\n        }\n        else {\n          **inputArray = **inputArray & 0xfffffbff;\n          **inputArray = **inputArray | 0x800;\n        }\n        (*inputArray)[1] = (*inputArray)[1] & 0xfffffbff;\n      }\n      else {\n        if (inputArray[0xb] == (uint *)0x2) {\n          **inputArray = **inputArray | 0x400;\n        }\n        else {\n          **inputArray = **inputArray & 0xfffffbff;\n        }\n        (*inputArray)[1] = (*inputArray)[1] & 0xfffff8ff;\n        tempPointer = inputArray[9];\n        inputArray[9] = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*inputArray)[4];\n        *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        inputArray[0xc] = (uint *)0x0;\n        if (*(char *)((int)inputArray + 0x3e) == '@') {\n          *(undefined *)((int)inputArray + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)inputArray + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      tempPointer = inputArray[9];\n      inputArray[9] = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*inputArray)[4];\n      *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_input_08002f9c",
                "param_1": "inputArray",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)(ptrToInt + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = counter;\n    counter = (uint *)(ptrToValue + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)(ptrToInt + 0x2a) = *(short *)(ptrToInt + 0x2a) + -1;\n  }\n  else if (*(short *)(ptrToInt + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = counter;\n    counter = (uint *)(ptrToValue + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)(ptrToInt + 0x2a) = *(short *)(ptrToInt + 0x2a) + -1;\n    value = counter;\n    counter = (uint *)(ptrToValue + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)(ptrToInt + 0x2a) = *(short *)(ptrToInt + 0x2a) + -1;\n    *(undefined *)(ptrToInt + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)(ptrToInt + 0x3e) == '@') {\n      *(undefined *)(ptrToInt + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)(ptrToInt + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = counter;\n    counter = (uint *)(ptrToValue + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)(ptrToInt + 0x2a) = *(short *)(ptrToInt + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "data",
                "puVar1": "value",
                "param_1[9]": "counter",
                "(int)param_1": "ptrToInt",
                "(int)puVar1": "ptrToValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_params_0800316c",
            "code": "\nvoid processParams_0800316c(uint **parameters)\n\n{\n  int tempVar1;\n  uint *pointerVar1;\n  uint *pointerVar2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  pointerVar2 = *parameters;\n  if ((pointerVar2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((pointerVar2[5] & 0x40) != 0) {\n        pointerVar1 = parameters[9];\n        parameters[9] = (uint *)((int)pointerVar1 + 1);\n        *(char *)pointerVar1 = (char)pointerVar2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_0800316a(parameters);\n    }\n    else {\n      if ((pointerVar2[5] & 0x40) != 0) {\n        pointerVar1 = parameters[9];\n        parameters[9] = (uint *)((int)pointerVar1 + 1);\n        *(char *)pointerVar1 = (char)pointerVar2[4];\n      }\n      FUN_08004ef4(parameters);\n    }\n  }\n  else {\n    pointerVar2[1] = pointerVar2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080035fc_1;\n      tempVar1 = FUN_0800258c(parameters[0xe]);\n      if (tempVar1 != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          pointerVar2 = parameters[9];\n          parameters[9] = (uint *)((int)pointerVar2 + 1);\n          *(char *)pointerVar2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080035fc_1;\n      tempVar1 = FUN_0800258c(parameters[0xd]);\n      if (tempVar1 != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08004ec4(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_params_0800316c",
                "param_1": "parameters",
                "iVar1": "tempVar1",
                "puVar2": "pointerVar1",
                "puVar3": "pointerVar2"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_parameter_080032b4",
            "code": "\nundefined4 processParameter_080032b4(uint **parameterArray)\n\n{\n  char character1;\n  uint *pointerVar2;\n  uint *pointerVar3;\n  \n  character1 = *(char *)((int)parameterArray + 0x3d);\n  (*parameterArray)[1] = (*parameterArray)[1] & 0xfffff8ff;\n  **parameterArray = **parameterArray | 1;\n  **parameterArray = **parameterArray & 0xfffffbff;\n  pointerVar2 = *parameterArray;\n  if ((pointerVar2[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameterArray + 0x3d) == '\\\"') || (*(char *)((int)parameterArray + 0x3d) == '*')) {\n      *(short *)((int)parameterArray + 0x2a) = (short)*(undefined4 *)(*parameterArray[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameterArray + 0x2a) = (short)*(undefined4 *)(*parameterArray[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameterArray + 0x2a) != 0) {\n    if ((pointerVar2[5] & 4) != 0) {\n      pointerVar3 = parameterArray[9];\n      parameterArray[9] = (uint *)((int)pointerVar3 + 1);\n      *(char *)pointerVar3 = (char)pointerVar2[4];\n      *(short *)((int)parameterArray + 0x2a) = *(short *)((int)parameterArray + 0x2a) + -1;\n    }\n    if (((*parameterArray)[5] & 0x40) != 0) {\n      pointerVar2 = parameterArray[9];\n      parameterArray[9] = (uint *)((int)pointerVar2 + 1);\n      *(char *)pointerVar2 = (char)(*parameterArray)[4];\n      *(short *)((int)parameterArray + 0x2a) = *(short *)((int)parameterArray + 0x2a) + -1;\n    }\n    parameterArray[0x10] = (uint *)((uint)parameterArray[0x10] | 4);\n  }\n  if (parameterArray[0x10] == (uint *)0x0) {\n    if (((character1 == '(') || (character1 == '*')) || (character1 == ')')) {\n      parameterArray[0xb] = (uint *)0xffff0000;\n      parameterArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameterArray + 0x3d) = 0x20;\n      *(undefined *)((int)parameterArray + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((parameterArray[0xc] == (uint *)0x22) || (character1 == '\\\"')) {\n      parameterArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameterArray + 0x3d) = 0x20;\n      *(undefined *)((int)parameterArray + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_parameter_080032b4",
                "param_1": "parameterArray",
                "cVar1": "character1",
                "puVar2": "pointerVar2",
                "puVar3": "pointerVar3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_function_080033b8",
            "code": "\nvoid processFunction_080033b8(int *inputParam)\n\n{\n  int paramValue;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  paramValue = *inputParam;\n  value3 = *(uint *)(paramValue + 0x18);\n  value1 = *(uint *)(paramValue + 0x14);\n  value2 = *(uint *)(paramValue + 4);\n  if ((*(char *)((int)inputParam + 0x3e) == '\\x10') || (*(char *)((int)inputParam + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_080028de(inputParam);\n        }\n      }\n      else {\n        FUN_080028d2(inputParam);\n      }\n    }\n    else {\n      FUN_08002848(inputParam);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002f9c(inputParam);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_0800306c(inputParam);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002db2(inputParam);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002efc(inputParam);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_080032b4(inputParam);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002ca6(inputParam);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ad8(inputParam);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002c54(inputParam);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ab8(inputParam);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_function_080033b8",
                "param_1": "inputParam",
                "iVar1": "paramValue",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "process_flags_08003520",
            "code": "\nvoid processFlags_08003520(uint **flags)\n\n{\n  char charVar1;\n  uint *pointerVar2;\n  uint var3;\n  uint var4;\n  \n  pointerVar2 = *flags;\n  var3 = pointerVar2[5];\n  var4 = pointerVar2[1];\n  if (((var3 & 0x10100) != 0) && ((var4 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 1);\n    pointerVar2[5] = 0xfffffeff;\n    **flags = **flags | 0x8000;\n  }\n  if (((var3 & 0x10200) != 0) && ((var4 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 2);\n    (*flags)[5] = 0xfffffdff;\n  }\n  if (((var3 & 0x10400) != 0) && ((var4 & 0x100) != 0)) {\n    charVar1 = *(char *)((int)flags + 0x3d);\n    if (((*(char *)((int)flags + 0x3e) == ' ') && (*(short *)((int)flags + 0x2a) == 0)) &&\n       (((charVar1 == '!' || (charVar1 == ')')) || ((charVar1 == '(' && (flags[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(flags);\n    }\n    else {\n      flags[0x10] = (uint *)((uint)flags[0x10] | 4);\n      if (*(char *)((int)flags + 0x3e) == '\\x10') {\n        **flags = **flags | 0x200;\n      }\n      (*flags)[5] = 0xfffffbff;\n    }\n  }\n  if (((var3 & 0x10800) != 0) && ((var4 & 0x100) != 0)) {\n    flags[0x10] = (uint *)((uint)flags[0x10] | 8);\n    (*flags)[5] = 0xfffff7ff;\n  }\n  if (flags[0x10] != (uint *)0x0) {\n    FUN_0800316c(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "process_flags_08003520",
                "param_1": "flags",
                "cVar1": "charVar1",
                "puVar2": "pointerVar2",
                "uVar3": "var3",
                "uVar4": "var4"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_function_0800365c",
            "code": "\nvoid delayFunction_0800365c(int inputValue)\n\n{\n  bool isDelayEnd;\n  int delayCounter;\n  \n  delayCounter = inputValue * (DAT_20000084 / 8000);\n  do {\n    isDelayEnd = delayCounter != 0;\n    delayCounter = delayCounter + -1;\n  } while (isDelayEnd);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_function_0800365c",
                "param_1": "inputValue",
                "local_4": "delayCounter",
                "bVar1": "isDelayEnd"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "process_flags_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 processFlags_08003688(uint *flags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool isSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "process_flags_08003688",
                "param_1": "flags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "isSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_delay_08003a68",
            "code": "\n\n\nuint calculateDelay_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 counter;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_delay_08003a68",
                "local_1c": "counter",
                "uStack_18": "constant1",
                "uStack_14": "constant2",
                "uStack_10": "constant3",
                "uStack_c": "constant4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_communication_08003ad4",
            "code": "\n\n\nundefined4 initializeCommunication_08003ad4(uint *parameters,uint numOfParams)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempVar;\n  \n  if ((_DAT_40022000 & 7) < numOfParams) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numOfParams;\n    if (numOfParams != (numOfParams & 7)) {\n      return 1;\n    }\n  }\n  if ((*parameters & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | parameters[2];\n  }\n  if ((*parameters & 1) != 0) {\n    tempVar = parameters[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08001cc4();\n    if (parameters[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (parameters[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numOfParams < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numOfParams;\n    if (numOfParams != (numOfParams & 7)) {\n      return 1;\n    }\n  }\n  if ((*parameters & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | parameters[3];\n  }\n  if ((*parameters & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | parameters[4] << 3;\n  }\n  tempVar = FUN_08003a68();\n  DAT_20000084 = tempVar >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_communication_08003ad4",
                "param_1": "parameters",
                "param_2": "numOfParams",
                "uVar3": "tempVar",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_flags_08003afa",
            "code": "\n\n\nundefined4 initializeFlags_08003afa(uint *flagsArray,uint param2)\n\n{\n  int initialValue;\n  int currentValue;\n  uint tempValue;\n  \n  if ((*flagsArray & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flagsArray[2];\n  }\n  if ((*flagsArray & 1) != 0) {\n    tempValue = flagsArray[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialValue = FUN_08001cc4();\n    if (flagsArray[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else if (flagsArray[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param2 < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | param2;\n    if (param2 != (param2 & 7)) {\n      return 1;\n    }\n  }\n  if ((*flagsArray & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flagsArray[3];\n  }\n  if ((*flagsArray & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flagsArray[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_flags_08003afa",
                "param_1": "flagsArray",
                "param_2": "param2",
                "iVar1": "initialValue",
                "iVar2": "currentValue",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_constant_value_08003c44",
            "code": "\nundefined4 get_constant_value_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_constant_value_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_08003c50",
            "code": "\n\n\nuint shiftedValue_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "shifted_return_value_08003c70",
            "code": "\n\n\nuint shiftedReturnValue_08003c70(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_08003c44();\n  return returnValue >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "shifted_return_value_08003c70",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_registers_08003c90",
            "code": "\n\n\nundefined4 updateRegisters_08003c90(uint *registerValues)\n\n{\n  uint tempUVar1;\n  uint tempUVar2;\n  int tempVar3;\n  int tempVar4;\n  bool isBitSet;\n  \n  if ((*registerValues & 1) != 0) {\n    isBitSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      tempVar3 = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        tempVar4 = FUN_08001cc4();\n        if (100 < (uint)(tempVar4 - tempVar3)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (registerValues[1] & 0x300))) {\n      tempUVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempUVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempUVar2;\n      if (tempUVar1 != 0) {\n        tempVar3 = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          tempVar4 = FUN_08001cc4();\n          if (5000 < (uint)(tempVar4 - tempVar3)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | registerValues[1];\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*registerValues & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | registerValues[2];\n  }\n  if ((*registerValues & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | registerValues[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_registers_08003c90",
                "param_1": "registerValues",
                "uVar1": "tempUVar1",
                "uVar2": "tempUVar2",
                "iVar3": "tempVar3",
                "iVar4": "tempVar4",
                "bVar5": "isBitSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_processing_speed_08003da4",
            "code": "\n\n\nuint calculateProcessingSpeed_08003da4(int dataType)\n\n{\n  uint processingSpeed;\n  undefined2 dataSize;\n  undefined4 configValue;\n  undefined4 configValue1;\n  undefined4 configValue2;\n  undefined4 configValue3;\n  \n  configValue3 = 0x10100f0e;\n  configValue2 = 0xd0c0b0a;\n  configValue1 = 0x9080706;\n  configValue = 0x5040302;\n  dataSize = 0x201;\n  if (dataType == 2) {\n    processingSpeed = FUN_08003c70();\n    processingSpeed = processingSpeed / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (dataType == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      processingSpeed = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        processingSpeed = 4000000;\n      }\n      else {\n        processingSpeed = 8000000 / *(byte *)((int)&dataSize - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      processingSpeed = processingSpeed * *(byte *)((int)&configValue + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        processingSpeed = (processingSpeed * 2) / 3;\n      }\n    }\n  }\n  else if (dataType == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      processingSpeed = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      processingSpeed = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        processingSpeed = 0;\n      }\n      else {\n        processingSpeed = 0xf424;\n      }\n    }\n    else {\n      processingSpeed = 0;\n    }\n  }\n  else {\n    processingSpeed = 0;\n  }\n  return processingSpeed;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_processing_speed_08003da4",
                "param_1": "dataType",
                "uVar1": "processingSpeed",
                "local_24": "dataSize",
                "uStack_20": "configValue",
                "uStack_1c": "configValue1",
                "uStack_18": "configValue2",
                "uStack_14": "configValue3"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_data_08003ea0",
            "code": "\n\n\nvoid initialize_data_08003ea0(uint **data_ptr)\n\n{\n  if (((**data_ptr & 2) != 0) && (((*data_ptr)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*data_ptr)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)data_ptr + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_data_08003ea0",
                "param_1": "data_ptr"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "set_flag_to_zero_if_conditions_met_08003ed8",
            "code": "\nvoid setFlagToZeroIfConditionsMet_08003ed8(uint **inputPtr)\n\n{\n  uint *tempPtr;\n  \n  *(undefined *)((int)inputPtr + 0x3d) = 2;\n  tempPtr = *inputPtr;\n  if ((tempPtr[8] & 0x1111) == 0) {\n    if ((tempPtr[8] & 0x444) == 0) {\n      *tempPtr = *tempPtr & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(inputPtr);\n  *(undefined *)((int)inputPtr + 0x3d) = 0;\n  *(undefined *)(inputPtr + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "set_flag_to_zero_if_conditions_met_08003ed8",
                "param_1": "inputPtr",
                "puVar1": "tempPtr",
                "puVar1[8]": "tempPtr[8]"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_conditions_08003f18",
            "code": "\nvoid processConditions_08003f18(int *input)\n\n{\n  int value;\n  \n  value = *input;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(input + 7) = 1;\n    if ((*(uint *)(*input + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(input + 7) = 2;\n    if ((*(uint *)(*input + 0x18) & 0x300) == 0) {\n      FUN_08004df8(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(input + 7) = 4;\n    if ((*(uint *)(*input + 0x1c) & 3) == 0) {\n      FUN_08004df8(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(input + 7) = 8;\n    if ((*(uint *)(*input + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(input);\n      FUNC_08003f14(input);\n    }\n    else {\n      FUNC_08003f12(input);\n    }\n    *(undefined *)(input + 7) = 0;\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(input);\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(input);\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(input);\n  }\n  value = *input;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_conditions_08003f18",
                "param_1": "input",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bitwise_value_08004092",
            "code": "\nvoid updateBitwiseValue_08004092(int ptr,uint bitIndex,int value)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | value << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bitwise_value_08004092",
                "param_1": "ptr",
                "param_2": "bitIndex",
                "param_3": "value"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "validate_and_update_data_080040b0",
            "code": "\nundefined4 validate_and_update_data_080040b0(uint **data_ptr,undefined4 value)\n\n{\n  uint *data;\n  \n  FUN_08004092(*data_ptr,value,0);\n  if (((*data_ptr == (uint *)0x40012c00) && ((constant_value_2 & 0x1111) == 0)) &&\n     ((constant_value_2 & 0x444) == 0)) {\n    updated_value = updated_value & 0xffff7fff;\n  }\n  data = *data_ptr;\n  if (((data[8] & 0x1111) == 0) && ((data[8] & 0x444) == 0)) {\n    *data = *data & 0xfffffffe;\n  }\n  *(undefined *)((int)data_ptr + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "validate_and_update_data_080040b0",
                "param_1": "data_ptr",
                "param_2": "value",
                "puVar1": "data",
                "uRam40012c20": "constant_value_2",
                "uRam40012c44": "updated_value"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_value_08004110",
            "code": "\nvoid updateValue_08004110(int baseAddress,uint bitOffset,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_value_08004110",
                "param_1": "baseAddress",
                "param_2": "bitOffset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_data_0800412c",
            "code": "\nundefined4 updateData_0800412c(uint **data,undefined4 value)\n\n{\n  uint *tempPtr;\n  \n  FUN_08004110(*data,value,0);\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    tempPtr[0x11] = tempPtr[0x11] & 0xffff7fff;\n  }\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_data_0800412c",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "update_flags_0800417c",
            "code": "\nvoid updateFlags_0800417c(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xfffffedf;\n  *(uint *)(*ptr + 0x14) = *(uint *)(*ptr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)ptr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "update_flags_0800417c",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "decode_and_modify_08004198",
            "code": "\nundefined4 decode_and_modify_08004198(int *input)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)input + 0x39) != '!') {\n    return 2;\n  }\n  if (param_1_element2 == 0x1000) {\n    *(uint *)(*input + 4) = *(ushort *)param_1_element8 & 0x1ff;\n    if (param_1_element4 == 0) {\n      param_1_element8 = param_1_element8 + 2;\n    }\n    else {\n      param_1_element8 = param_1_element8 + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)param_1_element8;\n    param_1_element8 = (int)(byte_ptr + 1);\n    *(uint *)(*input + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)input + 0x26) + -1;\n  *(short *)((int)input + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffff7f;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "decode_and_modify_08004198",
                "param_1": "input",
                "sVar1": "count",
                "pbVar2": "byte_ptr",
                "param_1[2]": "param_1_element2",
                "param_1[4]": "param_1_element4",
                "param_1[8]": "param_1_element8"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_values_08004204",
            "code": "\nvoid calculateValues_08004204(int *inputArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  result10 = *inputArray;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = inputArray[1];\n    result2 = FUN_08003c50();\n    result7 = inputArray[1];\n    result3 = FUN_08003c50();\n    result8 = inputArray[1];\n    result4 = FUN_08003c50();\n    result9 = inputArray[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = inputArray[1];\n  result1 = FUN_08003c70();\n  result6 = inputArray[1];\n  result2 = FUN_08003c70();\n  result7 = inputArray[1];\n  result3 = FUN_08003c70();\n  result8 = inputArray[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_values_08004204",
                "param_1": "inputArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_valid_condition_080043b4",
            "code": "\nundefined4 checkValidCondition_080043b4(uint **pointerArray,uint bitMask,uint isTrue,int comparisonValue,uint maxDifference)\n\n{\n  int difference;\n  \n  do {\n    if (((bitMask & ~**pointerArray) == 0) != isTrue) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (difference = FUN_08001cc4(), (uint)(difference - comparisonValue) <= maxDifference))));\n  (*pointerArray)[3] = (*pointerArray)[3] & 0xfffffe5f;\n  (*pointerArray)[5] = (*pointerArray)[5] & 0xfffffffe;\n  *(undefined *)((int)pointerArray + 0x39) = 0x20;\n  *(undefined *)((int)pointerArray + 0x3a) = 0x20;\n  *(undefined *)(pointerArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_valid_condition_080043b4",
                "param_1": "pointerArray",
                "param_2": "bitMask",
                "param_3": "isTrue",
                "param_4": "comparisonValue",
                "param_5": "maxDifference",
                "iVar1": "difference"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_0800441a",
            "code": "\nundefined4 initializeData_0800441a(int *dataPtr)\n\n{\n  if (dataPtr != (int *)0x0) {\n    if (*(char *)((int)dataPtr + 0x39) == '\\0') {\n      *(undefined *)(dataPtr + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)dataPtr + 0x39) = 0x24;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffdfff;\n    FUN_08004204(dataPtr);\n    *(uint *)(*dataPtr + 0x10) = *(uint *)(*dataPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_0800441a",
                "param_1": "dataPtr",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_input_08004478",
            "code": "\nundefined4 processInput_08004478(int *inputArray,ushort *dataArray,int dataLength,undefined4 someParam)\n\n{\n  int returnValue;\n  undefined4 result;\n  \n  if (*(char *)((int)inputArray + 0x39) == ' ') {\n    if (dataArray == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (dataLength == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputArray + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xe) = 1;\n      inputArray[15] = 0;\n      *(undefined *)((int)inputArray + 0x39) = 0x21;\n      result = FUN_08001cc4();\n      *(short *)(inputArray + 9) = (short)dataLength;\n      *(short *)((int)inputArray + 0x26) = (short)dataLength;\n      while (*(short *)((int)inputArray + 0x26) != 0) {\n        *(short *)((int)inputArray + 0x26) = *(short *)((int)inputArray + 0x26) + -1;\n        if (inputArray[2] == 0x1000) {\n          returnValue = FUN_080043b4(inputArray,0x80,0,result,someParam);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = *dataArray & 0x1ff;\n          if (inputArray[4] == 0) {\n            dataArray = dataArray + 1;\n          }\n          else {\n            dataArray = (ushort *)((int)dataArray + 1);\n          }\n        }\n        else {\n          returnValue = FUN_080043b4(inputArray,0x80,0,result,someParam);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = (uint)*(byte *)dataArray;\n          dataArray = (ushort *)((int)dataArray + 1);\n        }\n      }\n      returnValue = FUN_080043b4(inputArray,0x40,0,result,someParam);\n      if (returnValue == 0) {\n        *(undefined *)((int)inputArray + 0x39) = 0x20;\n        *(undefined *)(inputArray + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_input_08004478",
                "param_1": "inputArray",
                "param_2": "dataArray",
                "param_3": "dataLength",
                "param_4": "someParam",
                "iVar1": "returnValue",
                "uVar2": "result",
                "param_1[0xf]": "inputArray[15]",
                "param_1[2]": "inputArray[2]"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "handle_input_0800455a",
            "code": "\nundefined4 handle_input_0800455a(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value_1;\n    *(short *)(input_array + 9) = (short)value_2;\n    *(short *)((int)input_array + 0x26) = (short)value_2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "handle_input_0800455a",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "input_array[8]",
                "param_1[0xf]": "input_array[0xf]"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "update_data_080045a2",
            "code": "\nundefined4 updateData_080045a2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    dataField1 = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    dataField4 = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x100;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "update_data_080045a2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "dataField1",
                "param_1[0xf]": "dataField4"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "set_flag_and_call_function_080045fe",
            "code": "\nundefined4 setFlagAndCallFunction_080045fe(int *data)\n\n{\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffbf;\n  *(undefined *)((int)data + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "set_flag_and_call_function_080045fe",
                "param_1": "data"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_binary_data_08004618",
            "code": "\nundefined4 processBinaryData_08004618(int *dataPointer)\n\n{\n  byte *bytePointer;\n  short updatedValue;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)dataPointer + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (dataPointer[2] == 0x1000) {\n    if (dataPointer[4] == 0) {\n      *(ushort *)dataPointer[10] = (ushort)((uint)(*(int *)(*dataPointer + 4) << 0x17) >> 0x17);\n      dataPointer[10] = dataPointer[10] + 2;\n    }\n    else {\n      *(ushort *)dataPointer[10] = (ushort)*(undefined4 *)(*dataPointer + 4) & 0xff;\n      dataPointer[10] = dataPointer[10] + 1;\n    }\n  }\n  else if (dataPointer[4] == 0) {\n    undefinedPointer = (undefined *)dataPointer[10];\n    dataPointer[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*dataPointer + 4);\n  }\n  else {\n    bytePointer = (byte *)dataPointer[10];\n    dataPointer[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*dataPointer + 4) & 0x7f;\n  }\n  updatedValue = *(short *)((int)dataPointer + 0x2e) + -1;\n  *(short *)((int)dataPointer + 0x2e) = updatedValue;\n  if (updatedValue != 0) {\n    return 0;\n  }\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffffdf;\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xfffffeff;\n  *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_binary_data_08004618",
                "param_1": "dataPointer",
                "pbVar1": "bytePointer",
                "sVar2": "updatedValue",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "check_and_handle_flags_080046b8",
            "code": "\nvoid check_and_handle_flags_080046b8(uint **pointer)\n\n{\n  int index;\n  uint value2;\n  uint *ptr_value;\n  uint value4;\n  uint value5;\n  \n  ptr_value = *pointer;\n  value5 = *ptr_value;\n  value2 = ptr_value[3];\n  if ((((value5 & 0xf) == 0) && ((value5 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    FUN_08004618(pointer);\n    return;\n  }\n  if (((value5 & 0xf) == 0) || ((value4 = ptr_value[5] & 1, value4 == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value5 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      FUN_08004198(pointer);\n      return;\n    }\n    if (((value5 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      FUN_080045fe(pointer);\n    }\n  }\n  else {\n    if (((value5 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      pointer[0xf] = (uint *)((uint)pointer[0xf] | 1);\n    }\n    if (((value5 & 4) != 0) && (value4 != 0)) {\n      pointer[0xf] = (uint *)((uint)pointer[0xf] | 2);\n    }\n    if (((value5 & 2) != 0) && (value4 != 0)) {\n      pointer[0xf] = (uint *)((uint)pointer[0xf] | 4);\n    }\n    if (((value5 & 8) != 0) && (value4 != 0)) {\n      pointer[0xf] = (uint *)((uint)pointer[0xf] | 8);\n    }\n    if (pointer[0xf] != (uint *)0x0) {\n      if (((value5 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        FUN_08004618(pointer);\n      }\n      if ((((uint)pointer[0xf] & 8) == 0) && (((*pointer)[5] & 0x40) == 0)) {\n        FUNC_08005650(pointer);\n        pointer[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(pointer);\n      ptr_value = *pointer;\n      if ((ptr_value[5] & 0x40) == 0) {\n        FUNC_08005650(pointer);\n        return;\n      }\n      ptr_value[5] = ptr_value[5] & 0xffffffbf;\n      if (pointer[0xd] == (uint *)0x0) {\n        FUNC_08005650(pointer);\n        return;\n      }\n      pointer[0xd][0xd] = (uint)&LAB_080047d8_1;\n      index = FUN_0800258c(pointer[0xd]);\n      if (index != 0) {\n        (*(code *)pointer[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "check_and_handle_flags_080046b8",
                "param_1": "pointer",
                "iVar1": "index",
                "uVar2": "value2",
                "puVar3": "ptr_value",
                "uVar4": "value4",
                "uVar5": "value5"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "bit_extraction_080047f4",
            "code": "\nuint bit_extraction_080047f4(uint value,int offset)\n\n{\n  return *(uint *)(offset + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "bit_extraction_080047f4",
                "param_1": "value",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "update_bitwise_value_0800480a",
            "code": "\nvoid updateBitwiseValue_0800480a(uint inputValue,int arrayAddress)\n\n{\n  uint shiftedValue;\n  \n  shiftedValue = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedValue * 4) = *(uint *)(arrayAddress + shiftedValue * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "update_bitwise_value_0800480a",
                "param_1": "inputValue",
                "param_2": "arrayAddress",
                "uVar1": "shiftedValue"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_value_in_array_08004828",
            "code": "\nvoid updateValueInArray_08004828(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_value_in_array_08004828",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_address_08004848",
            "code": "\nundefined4 getMemoryAddress_08004848(undefined4 inputValue)\n\n{\n  switch(inputValue) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_base_address_08004884",
            "code": "\n\n\nundefined4 setBaseAddress_08004884(undefined4 option)\n\n{\n  undefined4 newAddress;\n  \n  switch(option) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    newAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    newAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    newAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    newAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    newAddress = 0x40011800;\n    break;\n  default:\n    newAddress = 0;\n  }\n  return newAddress;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_base_address_08004884",
                "param_1": "option",
                "uVar1": "newAddress"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_shifted_value_0800492c",
            "code": "\nuint calculateShiftedValue_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_shifted_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "check_permission_08004948",
            "code": "\nundefined4 check_permission_08004948(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08004cce(arg1,&DAT_080074b4,arg3,arg4,arg4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "check_permission_08004948",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_data_and_call_function_08004974",
            "code": "\n\n\nvoid updateDataAndCallFunction_08004974(int *dataPointer,undefined4 param2)\n\n{\n  undefined4 result;\n  uint newData;\n  int oldData;\n  uint bitmask;\n  undefined4 value1;\n  undefined4 value2;\n  \n  oldData = *dataPointer;\n  if (oldData == 0x40012400) {\n    newData = _DAT_40021018 | 0x200;\n    oldData = 0x200;\n    _DAT_40021018 = newData;\n  }\n  else {\n    newData = 0x40012800;\n    if (oldData == 0x40012800) {\n      newData = _DAT_40021018 | 0x400;\n      oldData = 0x400;\n      _DAT_40021018 = newData;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param2,newData,oldData);\n  bitmask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  value1 = 3;\n  value2 = 0;\n  FUN_08002624(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_data_and_call_function_08004974",
                "param_1": "dataPointer",
                "param_2": "param2",
                "uVar1": "result",
                "uVar2": "newData",
                "iVar3": "oldData",
                "local_18": "bitmask",
                "local_14": "value1",
                "local_10": "value2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_permissions_080049f0",
            "code": "\n\n\nvoid updatePermissions_080049f0(int *permissionPtr)\n\n{\n  if (*permissionPtr != 0x40012400) {\n    if (*permissionPtr == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_permissions_080049f0",
                "param_1": "permissionPtr"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "validate_input_08004a4c",
            "code": "\nundefined2 validate_input_08004a4c(undefined4 input_data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp9;\n  undefined4 temp5;\n  undefined4 temp10;\n  undefined4 temp7;\n  undefined4 temp8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    temp1 = 0;\n    temp2 = 0;\n    temp3 = 0;\n    temp5 = 0;\n    temp7 = 0xe0000;\n    temp8 = 0;\n    temp9 = 1;\n    temp10 = 0;\n    DAT_20000080 = (undefined)input_data;\n    iVar1 = FUN_0800213c(&buffer);\n    if (iVar1 == 0) {\n      length = FUN_0800492c(input_data);\n      if (length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_08001e48(&buffer,&length);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08002384(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08002004(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_08001cd0(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08001f80(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  result = FUN_08001e40(&buffer);\n                }\n                iVar1 = FUN_08002348(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_0800224c(&buffer);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "validate_input_08004a4c",
                "param_1": "input_data",
                "local_46": "result",
                "local_44": "length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "temp1",
                "local_30": "temp2",
                "local_2c": "temp3",
                "local_28": "temp9",
                "local_24": "temp5",
                "local_20": "temp10",
                "local_1c": "temp7",
                "local_10": "temp8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_application_08004b34",
            "code": "\nvoid initializeApplication_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_application_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid process_data_08004b3c(undefined4 input_data)\n\n{\n  int result;\n  uint flag;\n  int array_data [17];\n  \n  array_data[0] = FUN_08004c78(input_data,&DAT_080074b4);\n  if ((array_data[0] != 0) &&\n     ((((result = FUN_08004948(input_data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_08004cce(input_data,&DAT_080074b4);\n    if ((flag & 0x100000) == 0) {\n      FUN_080040b0(array_data,result);\n    }\n    else {\n      FUN_0800412c(array_data,result);\n    }\n    FUN_08003ed8(array_data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flag",
                "local_50": "array_data"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_program_08004b94",
            "code": "\nvoid initialize_program_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_program_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_application_08004b9e",
            "code": "\nvoid initializeApplication_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_application_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "configure_device_08004bb0",
            "code": "\n\n\nvoid configureDevice_08004bb0(uint deviceID,undefined4 configParam1,undefined4 configParam2)\n\n{\n  undefined4 configValue;\n  uint bitMask;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 constant3;\n  \n  configValue = FUN_08004884((deviceID << 0x18) >> 0x1c);\n  bitMask = 1 << (deviceID & 0xf) & 0xffff;\n  constant3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceID - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceID == 0xf) || (deviceID == 0x13)) || (deviceID == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param1Copy = configParam1;\n  param2Copy = configParam2;\n  FUN_08002624(configValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "configure_device_08004bb0",
                "param_1": "deviceID",
                "param_2": "configParam1",
                "param_3": "configParam2",
                "uVar1": "configValue",
                "local_20": "bitMask",
                "local_1c": "param1Copy",
                "local_18": "param2Copy",
                "local_14": "constant3"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "execute_condition_08004c30",
            "code": "\nvoid executeCondition_08004c30(undefined4 memoryAddress,undefined2 identifier,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_0800281e(memoryAddress,identifier,0,data,data);\n    return;\n  }\n  FUN_0800281e(memoryAddress,identifier,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "execute_condition_08004c30",
                "param_1": "memoryAddress",
                "param_2": "identifier",
                "param_3": "condition",
                "param_4": "data"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_components_08004c48",
            "code": "\nvoid initializeComponents_08004c48(undefined4 param1,undefined2 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002810(param1,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_components_08004c48",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_system_08004c52",
            "code": "\nvoid initialize_system_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_system_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_index_08004c5e",
            "code": "\nundefined4 find_value_index_08004c5e(int target_value,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0;\n    }\n    if (*data_array == target_value) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_index_08004c5e",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_param_08004c78",
            "code": "\nundefined4 checkParam_08004c78(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_param_08004c78",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_value_in_array_08004c8a",
            "code": "\nint find_value_in_array_08004c8a(int target_value,char *array_ptr)\n\n{\n  while( true ) {\n    if (*(int *)(array_ptr + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array_ptr + 4) == target_value) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return (int)*array_ptr;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_value_in_array_08004c8a",
                "param_1": "target_value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_parameter_08004ca2",
            "code": "\nundefined4 checkParameter_08004ca2(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_parameter_08004ca2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_index_08004cb2",
            "code": "\nundefined4 find_value_index_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_index_08004cb2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "get_return_value_08004cce",
            "code": "\nundefined4 getReturnValue_08004cce(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "get_return_value_08004cce",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_match_08004ce2",
            "code": "\nint find_match_08004ce2(int target,char *array)\n\n{\n  if (target == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (target == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_match_08004ce2",
                "param_1": "target",
                "param_2": "array",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_smaller_08004d06",
            "code": "\nint compare_and_return_smaller_08004d06(int first_number,int second_number)\n\n{\n  if (first_number != second_number) {\n    if (first_number == 0) {\n      return second_number;\n    }\n    if (second_number == 0) {\n      return first_number;\n    }\n    first_number = 0;\n  }\n  return first_number;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_smaller_08004d06",
                "param_1": "first_number",
                "param_2": "second_number"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callbacks_08004d18",
            "code": "\nvoid executeCallbacks_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callbacks_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "run_infinite_loop_08004d40",
            "code": "\nvoid run_infinite_loop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "run_infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "set_memory_configuration_08004d44",
            "code": "\n\n\nvoid setMemoryConfiguration_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "set_memory_configuration_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_flags_based_on_value_08004d90",
            "code": "\n\n\nvoid updateFlagsBasedOnValue_08004d90(int *inputValue)\n\n{\n  if (*inputValue == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*inputValue == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*inputValue == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*inputValue == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_flags_based_on_value_08004d90",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtractFour_08004df4(int inputNumber)\n\n{\n  return inputNumber + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "inputNumber"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_flag_set_08004df8",
            "code": "\nvoid executeCallbackIfFlagSet_08004df8(int callbackData)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004df4();\n  if ((*(code **)(functionPointer + 0x4c) != (code *)0x0) && (*(char *)(callbackData + 0x1c) == '\\x01')) {\n    (**(code **)(functionPointer + 0x4c))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_flag_set_08004df8",
                "param_1": "callbackData",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_function_08004e12",
            "code": "\nvoid executeFunction_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(code **)(result + 0x48) != (code *)0x0) {\n    (**(code **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_function_08004e12",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_execute_function_08004e20",
            "code": "\nvoid checkAndExecuteFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_execute_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtract_four_08004e70(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "process_data_08004e74",
            "code": "\nvoid processData_08004e74(int inputPtr,int flag,int compareValue,undefined4 param4)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (compareValue == *(int *)(inputPtr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08002af8(inputPtr,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08002b84(inputPtr,result + 0x68,0x20,8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "process_data_08004e74",
                "param_1": "inputPtr",
                "param_2": "flag",
                "param_3": "compareValue",
                "param_4": "param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_action_08004ec4",
            "code": "\nvoid executeAction_08004ec4(undefined4 inputParam)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (((*(functionType **)(functionPointer + 0x60) != (functionType *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionType **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08002c10(inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_action_08004ec4",
                "param_1": "inputParam",
                "iVar1": "functionPointer",
                "code": "functionType"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_call_function_08004ef4",
            "code": "\nvoid checkAndCallFunction_08004ef4(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_call_function_08004ef4",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "initialize_uart_pin_08004f4c",
            "code": "\n\n\nvoid initializeUARTPin_08004f4c(int *uartPin)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 uartConfig1;\n  uint uartConfig2;\n  uint pinMask1;\n  uint pinConfig;\n  uint shiftValue;\n  undefined4 configSize;\n  \n  if (uartPin != (int *)0x0) {\n    peripheral1 = FUN_08004c78((int)*(char *)(uartPin + 0x16),&DAT_0800764c);\n    peripheral2 = FUN_08004c78((int)*(char *)((int)uartPin + 0x59),&DAT_08007604);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = FUN_08004d06(peripheral1);\n      *uartPin = peripheral1;\n      if (peripheral1 == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartPin + 0x11) = 0;\n          *(undefined *)((int)uartPin + 0x5a) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartPin + 0x11) = 1;\n          *(undefined *)((int)uartPin + 0x5a) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartPin + 0x11) = 2;\n          *(undefined *)((int)uartPin + 0x5a) = 0x27;\n        }\n        uartConfig1 = FUN_08004884((uint)((int)*(char *)((int)uartPin + 0x59) << 0x18) >> 0x1c);\n        uartConfig2 = FUN_08004cce((int)*(char *)((int)uartPin + 0x59),&DAT_08007604);\n        pinMask1 = 1 << (*(byte *)((int)uartPin + 0x59) & 0xf) & 0xffff;\n        pinConfig = (uartConfig2 >> 3 & 1) << 4 | uartConfig2 & 7;\n        shiftValue = (uartConfig2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartConfig2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        configSize = 3;\n        FUN_08002624(uartConfig1,&pinMask1);\n        uartConfig1 = FUN_08004884((uint)((int)*(char *)(uartPin + 0x16) << 0x18) >> 0x1c);\n        uartConfig2 = FUN_08004cce((int)*(char *)(uartPin + 0x16),&DAT_0800764c);\n        pinMask1 = 1 << (*(byte *)(uartPin + 0x16) & 0xf) & 0xffff;\n        pinConfig = (uartConfig2 >> 3 & 1) << 4 | uartConfig2 & 7;\n        shiftValue = (uartConfig2 << 0x1a) >> 0x1e;\n        FUN_08002624(uartConfig1,&pinMask1);\n        (&DAT_2000032c)[*(byte *)(uartPin + 0x11)] = uartPin + 1;\n        uartPin[1] = *uartPin;\n        uartPin[2] = uartPin[0x12];\n        uartPin[3] = uartPin[0x13];\n        uartPin[4] = uartPin[0x14];\n        uartPin[5] = uartPin[0x15];\n        uartPin[6] = 0xc;\n        uartPin[7] = 0;\n        uartPin[8] = 0;\n        FUN_0800441a(uartPin + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "initialize_uart_pin_08004f4c",
                "param_1": "uartPin",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "uartConfig1",
                "uVar4": "uartConfig2",
                "local_20": "pinMask1",
                "local_1c": "pinConfig",
                "local_18": "shiftValue",
                "local_14": "configSize"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    secondResult = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(secondResult,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "perform_reverse_operation_080053d4",
            "code": "\nuint performReverseOperation_080053d4(undefined4 inputValue,uint inputFlag)\n\n{\n  int result1;\n  int result2;\n  uint loopIndex;\n  \n  result1 = FUN_08001cc4();\n  result2 = FUN_08004c78(2,&DAT_0800764c);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (loopIndex = 0;\n      (loopIndex < 5 &&\n      (((&DAT_2000032c)[loopIndex] == 0 ||\n       (result2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[loopIndex] != result2))));\n      loopIndex = loopIndex + 1 & 0xff) {\n  }\n  if (4 < loopIndex) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    loopIndex = (uint)DAT_200000cc;\n  }\n  do {\n    result2 = FUN_08004478((&DAT_2000032c)[loopIndex],inputValue,inputFlag & 0xffff,1000);\n    if (result2 == 0) {\n      return inputFlag;\n    }\n    result2 = FUN_08001cc4();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "perform_reverse_operation_080053d4",
                "param_1": "inputValue",
                "param_2": "inputFlag",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "loopIndex"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_flag_set_0800548c",
            "code": "\nbool isFlagSet_0800548c(int inputValue)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(inputValue + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_flag_set_0800548c",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "check_flag_080054b0",
            "code": "\nbool check_flag_080054b0(int flag_index)\n\n{\n  uint flag_result;\n  \n  flag_result = FUN_080047e8((&DAT_2000032c)[*(byte *)(flag_index + 0x44)]);\n  return (flag_result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "check_flag_080054b0",
                "param_1": "flag_index",
                "uVar1": "flag_result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_080054d4",
            "code": "\nundefined4 extractData_080054d4(int input,undefined *output,undefined4 arg3,undefined4 arg4)\n\n{\n  int result;\n  \n  if (input == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output = *(undefined *)(input + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(input + 0x44)],input + 0x45,1,&DAT_2000032c,arg4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_080054d4",
                "param_1": "input",
                "param_2": "output",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPtr,undefined4 newData,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newData;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPtr;\n      FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,1,index,unused2);\n      FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPtr",
                "param_2": "newData",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int data,undefined4 value)\n\n{\n  byte index;\n  \n  if (data != 0) {\n    index = *(byte *)(data + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)index * 4) = value;\n    *(int *)(&DAT_20000318 + (uint)index * 4) = data;\n    FUN_08002494((int)*(char *)(data + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(data + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "data",
                "param_2": "value",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_value_index_080055bc",
            "code": "\nuint find_value_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_selected_function_080055e0",
            "code": "\nvoid executeSelectedFunction_080055e0(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_080055bc();\n  if (functionIndex < 5) {\n    (**(code **)(&DAT_200002dc + functionIndex * 4))(*(undefined4 *)(&DAT_200002f0 + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_selected_function_080055e0",
                "uVar1": "functionIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int functionPointer;\n  \n  randomIndex = FUN_080055bc();\n  functionPointer = *(int *)(&DAT_20000318 + randomIndex * 4);\n  if ((randomIndex < 5) && (returnValue = (**(code **)(&DAT_20000304 + randomIndex * 4))(functionPointer), returnValue != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(functionPointer + 0x44)],\n                 *(int *)(functionPointer + 100) + (uint)*(ushort *)(functionPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "functionPointer"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= stackPtr) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackPtr"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_return_value_08005714",
            "code": "\nuint32_t getReturnValue_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_return_value_08005714",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "set_memory_permissions_0800571a",
            "code": "\nundefined4 setMemoryPermissions_0800571a(undefined4 result,int address)\n\n{\n  *(undefined4 *)(address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "set_memory_permissions_0800571a",
                "param_1": "result",
                "param_2": "address"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "check_return_value_08005724",
            "code": "\nundefined4 check_return_value_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "check_return_value_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nundefined4 initializeApplication_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "do_nothing_function_0800572c",
            "code": "\nundefined4 do_nothing_function_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "do_nothing_function_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_08005730",
            "code": "\nvoid initialize_08005730(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_08005730",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "run_infinite_loop_0800573c",
            "code": "\nvoid run_infinite_loop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "run_infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_flag_08005750",
            "code": "\nundefined4 initializeFlag_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_flag_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "read_modify_value_08005754",
            "code": "\nuint read_modify_value_08005754(uint input_value)\n\n{\n  bool is_less_than_threshold;\n  char result_character;\n  uint computed_value;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = input_value < 0x3c;\n  }\n  if (is_less_than_threshold) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    result_character = (&DAT_080076f0)[input_value];\n  }\n  else {\n    result_character = -1;\n  }\n  if (result_character == -1) {\n    computed_value = 0;\n  }\n  else {\n    computed_value = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return computed_value >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return computed_value << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return computed_value;\n}\n\n",
            "renaming": {
                "FUN_08005754": "read_modify_value_08005754",
                "param_1": "input_value",
                "bVar1": "is_less_than_threshold",
                "cVar2": "result_character",
                "uVar3": "computed_value"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_data_080057b4",
            "code": "\nvoid processData_080057b4(uint index,undefined4 option1,undefined4 option2,undefined *data)\n\n{\n  int result;\n  undefined *ptr;\n  int selector;\n  \n  if (index < 0x3c) {\n    selector = (int)(char)(&DAT_080076f0)[index];\n    ptr = &DAT_080076f0;\n  }\n  else {\n    selector = -1;\n    ptr = data;\n  }\n  if (selector != -1) {\n    result = FUN_080047f4(selector,&DAT_20000344,option2,ptr,data);\n    if (result != 0) {\n      result = FUN_08004ce2(selector,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(selector);\n      }\n      FUN_08004828(selector,&DAT_20000344);\n    }\n    switch(option1) {\n    case 0:\n      FUN_08004bb0(selector,0);\n      break;\n    case 1:\n      FUN_08004bb0(selector,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(selector,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(selector,0,2);\n    }\n    FUN_0800480a(selector,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_data_080057b4",
                "param_1": "index",
                "param_2": "option1",
                "param_3": "option2",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "selector"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "extract_data_08005848",
            "code": "\nvoid extractData_08005848(uint inputIndex,undefined4 param2,undefined4 param3,undefined *buffer)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *dataPointer;\n  uint value;\n  \n  if (inputIndex < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[inputIndex];\n    dataPointer = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    dataPointer = buffer;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_080047f4(value,&DAT_20000358,param3,dataPointer,buffer), result != 0)) {\n    shiftedValue = FUN_08004848((value << 0x18) >> 0x1c);\n    FUN_08004c30(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "extract_data_08005848",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "buffer",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "dataPointer",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_value_08005890",
            "code": "\nchar checkValue_08005890(uint value)\n\n{\n  char result;\n  int returnValue;\n  undefined4 shiftedValue;\n  uint index;\n  \n  if (value < 0x3c) {\n    index = (uint)(char)(&DAT_080076f0)[value];\n  }\n  else {\n    index = 0xffffffff;\n  }\n  if (index == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    returnValue = FUN_080047f4(index,&DAT_20000358);\n    if (returnValue == 0) {\n      result = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08004848((index << 0x18) >> 0x1c);\n      result = FUN_08004c48(shiftedValue,1 << (index & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_value_08005890",
                "param_1": "value",
                "cVar1": "result",
                "iVar2": "returnValue",
                "uVar3": "shiftedValue",
                "uVar4": "index"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_system_080058e0",
            "code": "\nvoid initializeSystem_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_system_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_value_0800591e",
            "code": "\nushort calculateValue_0800591e(int input)\n\n{\n  return (*(short *)(input + 0x134) + 0x40) - *(short *)(input + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_value_0800591e",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_and_store_data_0800598a",
            "code": "\nvoid updateAndStoreData_0800598a(int data)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newData;\n  \n  result = FUN_080054d4(data,&newData);\n  if ((result == 0) &&\n     (newIndex = *(short *)(data + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = newData;\n    *(ushort *)(data + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_and_store_data_0800598a",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newData"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_function_08005a44",
            "code": "\nvoid initializeFunction_08005a44(int functionPointer)\n\n{\n  *(int *)(functionPointer + 0x130) = functionPointer + 0x11;\n  *(undefined2 *)(functionPointer + 0x134) = 0;\n  *(undefined2 *)(functionPointer + 0x136) = 0;\n  *(int *)(functionPointer + 0x138) = functionPointer + 0x51;\n  *(undefined2 *)(functionPointer + 0x13c) = 0;\n  *(undefined2 *)(functionPointer + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_function_08005a44",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "configure_serial_port_08005a68",
            "code": "\nvoid configureSerialPort_08005a68(int serialPortPtr,undefined4 baudRate,byte byteFlags)\n\n{\n  uint errorCode;\n  char *errorMessage;\n  byte bitMask;\n  int settingValue;\n  byte *bytePtr;\n  char character;\n  int offset;\n  code *jumpTableFunc;\n  \n  *(undefined4 *)(serialPortPtr + 0x11c) = baudRate;\n  *(byte *)(serialPortPtr + 0x140) = byteFlags;\n  bitMask = byteFlags & 7;\n  if (bitMask == 4) {\n    settingValue = 7;\n  }\n  else if (bitMask == 6) {\n    settingValue = 8;\n  }\n  else if (bitMask == 2) {\n    settingValue = 6;\n  }\n  else {\n    settingValue = 0;\n  }\n  if ((byteFlags & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0x600;\n    settingValue = settingValue + 1;\n  }\n  else if ((byteFlags & 0x20) == 0) {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0x400;\n    settingValue = settingValue + 1;\n  }\n  if ((byteFlags & 8) == 0) {\n    *(undefined4 *)(serialPortPtr + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortPtr + 0x124) = 0x2000;\n  }\n  if (settingValue == 8) {\n    *(undefined4 *)(serialPortPtr + 0x120) = 0;\n  }\n  else if (settingValue == 9) {\n    *(undefined4 *)(serialPortPtr + 0x120) = 0x1000;\n  }\n  else {\n    settingValue = 0;\n  }\n  if (settingValue != 0) {\n    FUN_08004f4c(serialPortPtr + 0xd4);\n    FUN_08005510(serialPortPtr + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTableFunc = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePtr = *(byte **)(errorCode + offset);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*bytePtr + 0x1e) = 0;\n  if (errorCode < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[errorCode];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunc)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "configure_serial_port_08005a68",
                "param_1": "serialPortPtr",
                "param_2": "baudRate",
                "param_3": "byteFlags",
                "extraout_r1": "errorCode",
                "pcVar1": "errorMessage",
                "bVar2": "bitMask",
                "iVar3": "settingValue",
                "pbVar4": "bytePtr",
                "unaff_r4": "character",
                "unaff_r6": "offset",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunc"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_byte_value_08005b24",
            "code": "\nvoid setByteValue_08005b24(int memoryOffset,uint value)\n\n{\n  undefined byteValue;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    byteValue = (&DAT_080076f0)[value];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(memoryOffset + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_byte_value_08005b24",
                "param_1": "memoryOffset",
                "param_2": "value",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_param_value_08005b3c",
            "code": "\nvoid setParamValue_08005b3c(int targetAddress,uint paramIndex)\n\n{\n  undefined valueToSet;\n  \n  if (paramIndex < 0x3c) {\n    valueToSet = (&DAT_080076f0)[paramIndex];\n  }\n  else {\n    valueToSet = 0xff;\n  }\n  *(undefined *)(targetAddress + 300) = valueToSet;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_param_value_08005b3c",
                "param_1": "targetAddress",
                "param_2": "paramIndex",
                "uVar1": "valueToSet"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined returnValue;\n  \n  dataPointer[1] = 0;\n  dataPointer[2] = 1000;\n  *dataPointer = &PTR_LAB_080059c8_1_08007804;\n  if (dataPointer == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    returnValue = FUN_08004ca2(param2,&DAT_08007604);\n    *(undefined *)((int)dataPointer + 0x12d) = returnValue;\n    returnValue = FUN_08004ca2(param2,&DAT_0800764c);\n    *(undefined *)(dataPointer + 0x4b) = returnValue;\n  }\n  FUN_08005a44(dataPointer);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_param_08005bb0",
            "code": "\nvoid checkParam_08005bb0(int input,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (input != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_param_08005bb0",
                "param_1": "input",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_memory_08005c1c",
            "code": "\nvoid initializeMemory_08005c1c(undefined4 *pointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *pointer = &DAT_08007858;\n  *(undefined *)(pointer + 1) = value1;\n  *(undefined *)((int)pointer + 5) = value2;\n  *(undefined *)((int)pointer + 6) = value3;\n  *(undefined *)((int)pointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_memory_08005c1c",
                "param_1": "pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_08005c38",
            "code": "\nvoid checkParams_08005c38(int status,int value)\n\n{\n  if ((status == 1) && (value == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_08005c38",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_operation_08005c96",
            "code": "\nundefined4 executeOperation_08005c96(int *operationPointer,int operationSize,undefined4 result1,undefined4 result2)\n\n{\n  undefined4 operationResult;\n  \n  if (operationSize != 0) {\n    operationResult = FUN_08000178(operationSize);\n    operationResult = (**(code **)(*operationPointer + 4))(operationPointer,operationSize,operationResult,*(code **)(*operationPointer + 4),result2);\n    return operationResult;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_operation_08005c96",
                "param_1": "operationPointer",
                "param_2": "operationSize",
                "param_3": "result1",
                "param_4": "result2",
                "uVar1": "operationResult"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_code_08005cb6",
            "code": "\nvoid executeCode_08005cb6(undefined4 *codePointer)\n\n{\n  (**(code **)*codePointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_code_08005cb6",
                "param_1": "codePointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "initialize_data_08005cc0",
            "code": "\nvoid initializeData_08005cc0(int *dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  (**(code **)(*dataPointer + 4))(dataPointer,&DAT_0800786c,2,*(code **)(*dataPointer + 4),value3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "initialize_data_08005cc0",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_result_08005cd4",
            "code": "\nint calculateResult_08005cd4(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_result_08005cd4",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_base_08005ce8",
            "code": "\nundefined4 convert_base_08005ce8(int *input_num,uint source_base,uint target_base)\n\n{\n  char converted_digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *output_str;\n  char buffer [9];\n  \n  buffer[1] = 0;\n  if ((int)target_base < 2) {\n    target_base = 10;\n  }\n  output_str = buffer + 1;\n  do {\n    quotient = source_base / target_base;\n    remainder = (source_base & 0xff) - (quotient * target_base & 0xff) & 0xff;\n    output_str = output_str + -1;\n    converted_digit = (char)remainder;\n    if (remainder < 10) {\n      converted_digit = converted_digit + '0';\n    }\n    else {\n      converted_digit = converted_digit + '7';\n    }\n    *output_str = converted_digit;\n    source_base = quotient;\n  } while (quotient != 0);\n  if (output_str == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(output_str);\n    result = (**(code **)(*input_num + 4))(input_num,output_str,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_base_08005ce8",
                "param_1": "input_num",
                "param_2": "source_base",
                "param_3": "target_base",
                "cVar1": "converted_digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "output_str",
                "local_15": "buffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_data_08005d42",
            "code": "\nint process_data_08005d42(undefined4 *data,uint value,uint base)\n\n{\n  int result;\n  int negative;\n  \n  if (base == 0) {\n    result = (**(code **)*data)(data,value & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = FUN_08005ce8(data,value,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(data,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(data,0x2d);\n  negative = FUN_08005ce8(data,-value,10);\n  return negative + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_data_08005d42",
                "param_1": "data",
                "param_2": "value",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negative",
                "(int)param_2": "(int)value"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "initialize_function_08005d82",
            "code": "\nvoid initializeFunction_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "initialize_function_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "execute_function_08005d8a",
            "code": "\nvoid executeFunction_08005d8a(undefined4 *functionPointer,uint parameter1,uint parameter2,undefined4 parameter3)\n\n{\n  if (parameter2 != 0) {\n    FUN_08005ce8(functionPointer,parameter1,parameter2 & 0xff);\n    return;\n  }\n  (**(code **)*functionPointer)(functionPointer,parameter1 & 0xff,0,*(code **)*functionPointer,parameter3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "execute_function_08005d8a",
                "param_1": "functionPointer",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "param_4": "parameter3"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "validate_and_process_data_08005da8",
            "code": "\nint validate_and_process_data_08005da8(undefined4 input1,undefined4 input2,undefined4 input3,uint flags,byte length)\n\n{\n  int result;\n  undefined4 tempVar1;\n  int tempVar2;\n  byte counter;\n  undefined8 tempVar3;\n  undefined8 tempVar4;\n  \n  result = FUN_08000a2c(input3,flags,input3,flags);\n  if (result == 0) {\n    result = FUN_08000a2c(input3,flags & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(input3,flags & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(input1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(input3,flags,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(input3,flags,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(input3,flags,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(input1,0x2d);\n            flags = flags + 0x80000000;\n          }\n          tempVar3 = 0x3fe0000000000000;\n          for (counter = 0; tempVar1 = (undefined4)((ulonglong)tempVar3 >> 0x20), counter < length;\n              counter = counter + 1) {\n            tempVar3 = FUN_0800074c((int)tempVar3,tempVar1,0,0x40240000);\n          }\n          tempVar3 = FUN_08000194(input3,flags,(int)tempVar3,tempVar1);\n          tempVar1 = FUN_08000aa8();\n          tempVar4 = FUN_0800040c();\n          tempVar3 = FUN_08000190((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                               (int)((ulonglong)tempVar4 >> 0x20));\n          tempVar2 = FUN_08005d8a(input1,tempVar1,10);\n          result = result + tempVar2;\n          if (length != 0) {\n            tempVar2 = FUN_08005c96(input1,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (length != 0) {\n            tempVar3 = FUN_080004f8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),0,0x40240000);\n            tempVar1 = FUN_08000a58();\n            tempVar2 = FUN_08005d82(input1,tempVar1,10);\n            result = result + tempVar2;\n            tempVar4 = FUN_0800042c(tempVar1);\n            tempVar3 = FUN_08000190((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                                 (int)((ulonglong)tempVar4 >> 0x20));\n            length = length - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(input1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(input1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(input1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "validate_and_process_data_08005da8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "flags",
                "param_5": "length",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "iVar3": "tempVar2",
                "bVar4": "counter",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input_value)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input_value);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input_value",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_application_08005f5e",
            "code": "\nvoid initializeApplication_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_application_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "run_continuous_operations_08005f6c",
            "code": "\nvoid run_continuous_operations_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "run_continuous_operations_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_data_08005fc8",
            "code": "\nvoid initializeData_08005fc8(int flag,int value,undefined4 param1,undefined4 param2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param1",
                "param_4": "param2",
                "LAB_08005fa0_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "process_data_080060d4",
            "code": "\nvoid processData_080060d4(int dataPointer)\n\n{\n  int index;\n  \n  if (*(int *)(dataPointer + 8) != 0) {\n    (**(code **)(dataPointer + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    processData_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "process_data_080060d4",
                "param_1": "dataPointer",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_execute_function_080060e4",
            "code": "\nvoid checkAndExecuteFunction_080060e4(void)\n\n{\n  int index;\n  \n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_execute_function_080060e4",
                "iVar1": "index"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "execute_function_08006112",
            "code": "\nvoid execute_function_08006112(undefined4 parameter1,undefined4 parameter2)\n\n{\n  FUN_08006158(parameter2,parameter1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "execute_function_08006112",
                "param_1": "parameter1",
                "param_2": "parameter2"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 assertion,undefined4 file,char *lineNum,undefined4 function)\n\n{\n  undefined4 assertionBaseAddr;\n  char *messagePart;\n  undefined8 returnValue;\n  undefined4 functionPtr;\n  \n  assertionBaseAddr = *(undefined4 *)(DAT_200000f8 + 0xc);\n  functionPtr = function;\n  if (lineNum == (char *)0x0) goto LAB_08006140;\n  messagePart = \", function: \";\n  do {\n    FUN_08006174(assertionBaseAddr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,assertion,file\n                 ,messagePart,lineNum,functionPtr);\n    returnValue = FUN_08006ac0();\n    file = (undefined4)((ulonglong)returnValue >> 0x20);\n    assertionBaseAddr = (undefined4)returnValue;\nLAB_08006140:\n    lineNum = \"\";\n    messagePart = lineNum;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "lineNum",
                "param_4": "function",
                "uVar1": "assertionBaseAddr",
                "pcVar2": "messagePart",
                "uVar3": "returnValue",
                "uVar4": "functionPtr"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_left64_bits_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftLeft64Bits_08006158(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_left64_bits_08006158",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "process_data_08006174",
            "code": "\nvoid processData_08006174(undefined4 input1,undefined4 input2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 local1;\n  undefined4 local2;\n  \n  local1 = param3;\n  local2 = param4;\n  FUN_08006394(DAT_200000f8,input1,input2,&local1,input1,&local1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "process_data_08006174",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_8": "local1",
                "uStack_4": "local2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_with_value_080061e0",
            "code": "\nvoid fillMemoryWithValue_080061e0(undefined *memory,undefined value,int size)\n\n{\n  undefined *endMemory;\n  \n  endMemory = memory + size;\n  for (; memory != endMemory; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_with_value_080061e0",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endMemory"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "rearrange_pointers_080061f0",
            "code": "\nvoid rearrangePointers_080061f0(undefined4 *result,int numPointers,undefined4 param3,undefined4 param4)\n\n{\n  int **extraPtr;\n  int **ptr1;\n  int **ptr2;\n  int *var3;\n  int **ptr4;\n  int **ptr5;\n  \n  if (numPointers == 0) {\n    return;\n  }\n  ptr5 = (int **)(numPointers + -4);\n  if (*(int *)(numPointers + -4) < 0) {\n    ptr5 = (int **)((int)ptr5 + *(int *)(numPointers + -4));\n  }\n  FUNC_08006eac();\n  ptr2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    ptr5[1] = (int *)0x0;\n    ptr1 = extraPtr;\n    DAT_200005f8 = ptr5;\n  }\n  else {\n    ptr2 = DAT_200005f8;\n    if (ptr5 < DAT_200005f8) {\n      ptr1 = (int **)*ptr5;\n      ptr2 = (int **)((int)ptr5 + (int)ptr1);\n      if (DAT_200005f8 == ptr2) {\n        var3 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        ptr2 = (int **)((int)var3 + (int)ptr1);\n        *ptr5 = (int *)ptr2;\n      }\n      ptr5[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = ptr5;\n    }\n    else {\n      do {\n        ptr4 = ptr2;\n        ptr2 = (int **)ptr4[1];\n        if (ptr2 == (int **)0x0) break;\n      } while (ptr2 <= ptr5);\n      ptr1 = (int **)*ptr4;\n      if ((int **)((int)ptr4 + (int)ptr1) == ptr5) {\n        ptr1 = (int **)((int)ptr1 + (int)*ptr5);\n        *ptr4 = (int *)ptr1;\n        if (ptr2 == (int **)((int)ptr4 + (int)ptr1)) {\n          var3 = *ptr2;\n          ptr2 = (int **)ptr2[1];\n          ptr1 = (int **)((int)ptr1 + (int)var3);\n          *ptr4 = (int *)ptr1;\n          ptr4[1] = (int *)ptr2;\n        }\n      }\n      else if (ptr5 < (int **)((int)ptr4 + (int)ptr1)) {\n        *result = 0xc;\n      }\n      else {\n        ptr1 = (int **)((int)ptr5 + (int)*ptr5);\n        if (ptr2 == ptr1) {\n          var3 = *ptr2;\n          ptr2 = (int **)ptr2[1];\n          ptr1 = (int **)((int)var3 + (int)*ptr5);\n          *ptr5 = (int *)ptr1;\n        }\n        ptr5[1] = (int *)ptr2;\n        ptr4[1] = (int *)ptr5;\n      }\n    }\n  }\n  FUNC_08006eae(result,ptr1,ptr2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "rearrange_pointers_080061f0",
                "param_1": "result",
                "param_2": "numPointers",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "extraPtr",
                "ppiVar1": "ptr1",
                "ppiVar2": "ptr2",
                "piVar3": "var3",
                "ppiVar4": "ptr4",
                "ppiVar5": "ptr5"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_block_08006288",
            "code": "\nuint allocate_memory_block_08006288(undefined4 *result,uint size)\n\n{\n  uint *current_memory;\n  int offset;\n  uint *next_memory;\n  uint size_difference;\n  uint *previous_memory;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_memory = DAT_200005f8;\n    previous_memory = DAT_200005f8;\n    while (next_memory = current_memory, next_memory != (uint *)0x0) {\n      size_difference = *next_memory - aligned_size;\n      if (-1 < (int)size_difference) {\n        if (size_difference < 0xc) {\n          if (previous_memory == next_memory) {\n            current_memory = (uint *)previous_memory[1];\n            DAT_200005f8 = current_memory;\n          }\n          else {\n            current_memory = (uint *)next_memory[1];\n          }\n          if (previous_memory != next_memory) {\n            previous_memory[1] = (uint)current_memory;\n            previous_memory = next_memory;\n          }\n        }\n        else {\n          *next_memory = size_difference;\n          *(uint *)((int)next_memory + size_difference) = aligned_size;\n          previous_memory = (uint *)((int)next_memory + size_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_memory = next_memory;\n      current_memory = (uint *)next_memory[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(result);\n    }\n    current_memory = (uint *)FUN_08006920(result,aligned_size);\n    if ((current_memory != (uint *)0xffffffff) &&\n       ((previous_memory = (uint *)((int)current_memory + 3U & 0xfffffffc), current_memory == previous_memory ||\n        (offset = FUN_08006920(result,(int)previous_memory - (int)current_memory), offset != -1)))) {\n      *previous_memory = aligned_size;\nLAB_080062ec:\n      FUNC_08006eae(result);\n      aligned_size = (int)previous_memory + 0xbU & 0xfffffff8;\n      offset = aligned_size - (int)(previous_memory + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_memory + offset) = -offset;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *result = 0xc;\n    FUNC_08006eae(result);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_block_08006288",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_memory",
                "iVar2": "offset",
                "puVar3": "next_memory",
                "uVar4": "size_difference",
                "puVar5": "previous_memory",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int input_data,byte input_byte,byte **data_array)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = data_array[2] + -1;\n  data_array[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)data_array[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *data_array;\n    *data_array = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (data_array == (byte **)&DAT_08007904) {\n    data_array = *(byte ***)(input_data + 4);\n  }\n  else if (data_array == (byte **)&DAT_08007924) {\n    data_array = *(byte ***)(input_data + 8);\n  }\n  else if (data_array == (byte **)&DAT_080078e4) {\n    data_array = *(byte ***)(input_data + 0xc);\n  }\n  data_array[2] = data_array[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(data_array + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = data_array[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(input_data,data_array,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*data_array - (int)data_array[4];\n    if ((temp_var1 < (int)data_array[5]) || (temp_var1 = FUN_08006be0(input_data,data_array), temp_var1 == 0)) {\n      data_array[2] = data_array[2] + -1;\n      temp_var2 = *data_array;\n      *data_array = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != data_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08006be0(input_data,data_array);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "input_data",
                "param_2": "input_byte",
                "param_3": "data_array",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "iterate_over_params_08006370",
            "code": "\nint iterateOverParams_08006370(undefined4 input_param_1,undefined4 input_param_2,undefined *input_buffer,int buffer_length)\n\n{\n  int result;\n  undefined *end_of_buffer;\n  int buffer_index;\n  \n  end_of_buffer = input_buffer + buffer_length;\n  buffer_index = buffer_length;\n  do {\n    if (input_buffer == end_of_buffer) {\n      return 0;\n    }\n    result = FUN_08006344(input_param_1,*input_buffer,input_param_2,buffer_length,buffer_index);\n    buffer_length = result + 1;\n    input_buffer = input_buffer + 1;\n  } while (buffer_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "iterate_over_params_08006370",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_buffer",
                "param_4": "buffer_length",
                "iVar1": "result",
                "puVar2": "end_of_buffer",
                "iVar3": "buffer_index"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "decode_and_process_data_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint decode_and_process_data_08006394(int buffer,undefined4 *config,byte *data,int *result)\n\n{\n  int status;\n  int *ptr;\n  bool flag;\n  byte *ptr1;\n  byte *ptr2;\n  int offset;\n  int counter;\n  int *result_ptr;\n  uint flags;\n  int precision;\n  undefined4 padding;\n  int width;\n  int total_length;\n  byte format;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined alignment;\n  undefined4 modifier;\n  \n  result_ptr = result;\n  if ((buffer != 0) && (*(int *)(buffer + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (config == &DAT_08007904) {\n    config = *(undefined4 **)(buffer + 4);\n  }\n  else if (config == (undefined4 *)&DAT_08007924) {\n    config = *(undefined4 **)(buffer + 8);\n  }\n  else if (config == (undefined4 *)&DAT_080078e4) {\n    config = *(undefined4 **)(buffer + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(config + 3) << 0x1c)) || (config[4] == 0)) &&\n     (counter = FUN_080069e4(buffer,config), counter != 0)) {\n    return -1;\n  }\n  total_length = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  ptr1 = data;\nLAB_080063d6:\n  ptr2 = ptr1;\n  if (*ptr2 != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  ptr1 = ptr2 + 1;\n  if (*ptr2 != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  counter = (int)ptr2 - (int)data;\n  if (counter != 0) {\n    status = FUN_08006370(buffer,config,data,counter);\n    if (status == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(config + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + counter;\n  }\n  if (*ptr2 == 0) goto LAB_08006580;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  padding = 0;\n  alignment = 0;\n  modifier = 0;\n  ptr1 = ptr2 + 1;\n  while( true ) {\n    counter = FUN_08006e90(\"#-0+ \",*ptr1);\n    data = ptr1 + 1;\n    if (counter == 0) break;\n    flags = 1 << (counter + 0xf7ff8750U & 0xff) | flags;\n    ptr1 = data;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    alignment = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    alignment = 0x2b;\n  }\n  if (*ptr1 == 0x2a) {\n    ptr = result_ptr + 1;\n    counter = *result_ptr;\n    result_ptr = ptr;\n    if (counter < 0) {\n      width = -counter;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    flag = false;\n    counter = width;\n    data = ptr1;\n    while( true ) {\n      if (9 < *data - 0x30) break;\n      counter = counter * 10 + (*data - 0x30);\n      flag = true;\n      data = data + 1;\n    }\n    if (!flag) goto LAB_080064be;\n  }\n  width = counter;\nLAB_080064be:\n  if (*data == 0x2e) {\n    if (data[1] == 0x2a) {\n      data = data + 2;\n      ptr = result_ptr + 1;\n      precision = *result_ptr;\n      result_ptr = ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      flag = false;\n      counter = 0;\n      precision = 0;\n      while( true ) {\n        data = data + 1;\n        if (9 < *data - 0x30) break;\n        counter = counter * 10 + (*data - 0x30);\n        flag = true;\n      }\n      if (flag) {\n        precision = counter;\n      }\n    }\n  }\n  counter = FUN_08006e90(&DAT_080078b6,*data,3);\n  if (counter != 0) {\n    data = data + 1;\n    flags = flags | 0x40 << (counter + 0xf7ff874aU & 0xff);\n  }\n  format = *data;\n  data = data + 1;\n  counter = FUN_08006e90(\"efgEFG\",format,6);\n  if (counter == 0) {\n    offset = FUN_080066b0(buffer,&flags,config,0x8006371,&result_ptr);\n    if (offset == -1) goto LAB_08006580;\n  }\n  else {\n    result_ptr = (int *)(((int)result_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + offset;\n  ptr1 = data;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "decode_and_process_data_08006394",
                "param_1": "buffer",
                "param_2": "config",
                "param_3": "data",
                "param_4": "result",
                "iVar1": "status",
                "piVar2": "ptr",
                "bVar3": "flag",
                "pbVar4": "ptr1",
                "pbVar5": "ptr2",
                "unaff_r9": "offset",
                "iVar6": "counter",
                "local_8c": "result_ptr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "padding",
                "local_7c": "width",
                "local_74": "total_length",
                "local_70": "format",
                "local_6f": "space_flag",
                "local_6e": "plus_flag",
                "local_45": "alignment",
                "local_30": "modifier"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "count_characters_080065c0",
            "code": "\nundefined4\ncount_characters_080065c0(undefined4 data,uint *ptr1,uint *ptr2,undefined4 value,code *callback)\n\n{\n  int index1;\n  int index2;\n  uint max_chars;\n  uint count;\n  bool is_zero;\n  \n  max_chars = ptr1[4];\n  if ((int)ptr1[4] < (int)ptr1[2]) {\n    max_chars = ptr1[2];\n  }\n  *ptr2 = max_chars;\n  if (*(char *)((int)ptr1 + 0x43) != '\\0') {\n    *ptr2 = max_chars + 1;\n  }\n  if ((int)(*ptr1 << 0x1a) < 0) {\n    *ptr2 = *ptr2 + 2;\n  }\n  if ((*ptr1 & 6) == 0) {\n    for (index1 = 0; index1 < (int)(ptr1[3] - *ptr2); index1 = index1 + 1) {\n      index2 = (*callback)(data,value,(int)ptr1 + 0x19,1);\n      if (index2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_chars = (uint)*(byte *)((int)ptr1 + 0x43);\n  if (max_chars != 0) {\n    max_chars = 1;\n  }\n  count = max_chars;\n  if ((int)(*ptr1 << 0x1a) < 0) {\n    *(undefined *)((int)ptr1 + max_chars + 0x43) = 0x30;\n    count = max_chars + 2;\n    *(undefined *)((int)ptr1 + max_chars + 0x44) = *(undefined *)((int)ptr1 + 0x45);\n  }\n  index1 = (*callback)(data,value,(int)ptr1 + 0x43,count);\n  if (index1 != -1) {\n    max_chars = ptr1[3];\n    is_zero = (*ptr1 & 6) != 4;\n    if (is_zero) {\n      max_chars = 0;\n    }\n    count = 0;\n    if (!is_zero) {\n      max_chars = max_chars - *ptr2;\n    }\n    if (!is_zero) {\n      max_chars = max_chars & ~((int)max_chars >> 0x1f);\n    }\n    if ((int)ptr1[4] < (int)ptr1[2]) {\n      max_chars = max_chars + (ptr1[2] - ptr1[4]);\n    }\n    while( true ) {\n      if (max_chars == count) {\n        return 0;\n      }\n      index1 = (*callback)(data,value,(int)ptr1 + 0x1a,1);\n      if (index1 == -1) break;\n      count = count + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "count_characters_080065c0",
                "param_1": "data",
                "param_2": "ptr1",
                "param_3": "ptr2",
                "param_4": "value",
                "param_5": "callback",
                "iVar1": "index1",
                "iVar2": "index2",
                "uVar3": "max_chars",
                "uVar4": "count",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "decode_and_process_data_080066b0",
            "code": "\nuint decode_and_process_data_080066b0(undefined4 param_1,uint *data,undefined4 param_3,code *callback,uint **param_5)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr_val;\n  int inner_index;\n  char *hex_chars;\n  uint bit_val;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value_1;\n  uint value_2;\n  char *result;\n  char *str_ptr;\n  uint local_values [2];\n  \n  byte_value = *(byte *)(data + 6);\n  str_ptr = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800686a;\n          if (byte_value != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_080067fa:\n          bit_val = *data;\n          ptr_val = *param_5;\n          *param_5 = ptr_val + 1;\n          if (((bit_val & 0x80) == 0) && ((int)(bit_val << 0x19) < 0)) {\n            value_1 = (uint)*(ushort *)ptr_val;\n          }\n          else {\n            value_1 = *ptr_val;\n          }\n          if ((int)(bit_val << 0x1f) < 0) {\n            *data = bit_val | 0x20;\n          }\n          if (value_1 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          bit_val = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080066e0;\n          value_1 = *data;\n          ptr_val = *param_5;\n          if ((value_1 & 0x80) == 0) {\n            *param_5 = ptr_val + 1;\n            if ((value_1 & 0x40) == 0) goto LAB_08006700;\n            value_1 = (uint)(short)*(ushort *)ptr_val;\n          }\n          else {\n            *param_5 = ptr_val + 1;\nLAB_08006700:\n            value_1 = *ptr_val;\n          }\n          if ((int)value_1 < 0) {\n            value_1 = -value_1;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          bit_val = 10;\n        }\n        value_2 = data[1];\n        data[2] = value_2;\n        result = str_ptr;\n        if ((int)value_2 < 0) {\n          if (value_1 != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data + 0x42) = *hex_chars;\n          result = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value_1 == 0) {\n            if (value_2 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              value_2 = value_1 / bit_val;\n              result = result + -1;\n              *result = hex_chars[value_1 - bit_val * value_2];\n              value_1 = value_2;\n            } while (value_2 != 0);\n          }\n        }\n        if (((bit_val == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          result[-1] = '0';\n          result = result + -1;\n        }\n        data[4] = (int)str_ptr - (int)result;\n        str_ptr = result;\n        goto LAB_080067d6;\n      }\n      ptr_val = *param_5;\n      *param_5 = ptr_val + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr_val;\nLAB_08006740:\n      str_ptr = (char *)((int)data + 0x42);\n      value_1 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08006766:\n            value_1 = *data;\n            ptr_val = *param_5;\n            if ((value_1 & 0x80) == 0) {\n              *param_5 = ptr_val + 1;\n              if ((value_1 & 0x40) == 0) goto LAB_08006774;\n              value_1 = (uint)*(ushort *)ptr_val;\n            }\n            else {\n              *param_5 = ptr_val + 1;\nLAB_08006774:\n              value_1 = *ptr_val;\n            }\n            if (byte_value == 0x6f) {\n              bit_val = 8;\n            }\n            else {\n              bit_val = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nLAB_08006726:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08006766;\n          if (byte_value == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*param_5;\n      *param_5 = (uint *)(ppcVar8 + 1);\n      str_ptr = *ppcVar8;\n      index = FUN_08006e90(str_ptr,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)str_ptr;\n      }\n      value_1 = data[1];\n    }\n    data[4] = value_1;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  value_1 = *data;\n  ppuVar7 = (uint **)*param_5;\n  bit_val = data[5];\n  if ((value_1 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    ptr_val = *ppuVar7;\n    if ((value_1 & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr_val = (short)bit_val;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    ptr_val = *ppuVar7;\nLAB_08006856:\n    *ptr_val = bit_val;\n  }\nLAB_0800686a:\n  data[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(param_1,data,local_values,param_3,callback);\n  if ((index == -1) || (index = (*callback)(param_1,param_3,str_ptr,data[4]), index == -1)) {\nLAB_080067ea:\n    value_1 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_values[0]); index = index + 1) {\n        inner_index = (*callback)(param_1,param_3,(int)data + 0x19,1);\n        if (inner_index == -1) goto LAB_080067ea;\n      }\n    }\n    value_1 = data[3];\n    if ((int)data[3] < (int)local_values[0]) {\n      value_1 = local_values[0];\n    }\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "decode_and_process_data_080066b0",
                "param_2": "data",
                "param_4": "callback",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "ptr_val",
                "iVar4": "inner_index",
                "pcVar5": "hex_chars",
                "uVar6": "bit_val",
                "uVar9": "value_1",
                "uVar10": "value_2",
                "pcVar11": "result",
                "pcVar12": "str_ptr",
                "local_24": "local_values"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  \n  localVar1 = DAT_200000f8;\n  localVar2 = inputParam1;\n  localVar3 = inputParam2;\n  localVar4 = inputParam3;\n  localVar5 = inputParam4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(localVar1,*(undefined4 *)(localVar1 + 8),inputParam1,&localVar3,localVar2,&localVar3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "localVar1",
                "uVar2": "localVar2",
                "uStack_c": "localVar3",
                "uStack_8": "localVar4",
                "uStack_4": "localVar5"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "initialize_return_value_08006920",
            "code": "\nvoid initializeReturnValue_08006920(int *returnValuePointer,undefined4 inputParameter)\n\n{\n  int functionResult;\n  \n  DAT_200006a4 = 0;\n  functionResult = FUN_080056d8(inputParameter);\n  if ((functionResult == -1) && (DAT_200006a4 != 0)) {\n    *returnValuePointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "initialize_return_value_08006920",
                "param_1": "returnValuePointer",
                "param_2": "inputParameter",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "reverse_and_update_values_080069e4",
            "code": "\nuint reverse_and_update_values_080069e4(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int base_address;\n  uint result;\n  ushort value;\n  \n  base_address = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input_param == &DAT_08007904) {\n    input_param = *(undefined4 **)(base_address + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08007924) {\n    input_param = *(undefined4 **)(base_address + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_080078e4) {\n    input_param = *(undefined4 **)(base_address + 0xc);\n  }\n  value = *(ushort *)(input_param + 3);\n  result = (uint)value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          FUN_080061f0(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(output_param,input_param);\n  }\n  value = *(ushort *)(input_param + 3);\n  result = value & 1;\n  if ((value & 1) == 0) {\n    if (-1 < (int)((uint)value << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    value = *(ushort *)(input_param + 3);\n    result = (int)(short)value & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_param + 3) = value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "reverse_and_update_values_080069e4",
                "param_1": "output_param",
                "param_2": "input_param",
                "iVar1": "base_address",
                "uVar2": "result",
                "uVar3": "value"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_binary_data_08006ac0",
            "code": "\nvoid processBinaryData_08006ac0(void)\n\n{\n  uint *pointer1;\n  int variable2;\n  int *pointer2;\n  int *pointer3;\n  uint variable3;\n  ushort variable4;\n  int variable5;\n  code *functionPointer1;\n  int variable6;\n  uint variable7;\n  code *jumpTable;\n  bool bVar11;\n  undefined8 uVar12;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  uVar12 = FUN_0800573c(1);\n  pointer2 = (int *)((ulonglong)uVar12 >> 0x20);\n  pointer1 = (uint *)uVar12;\n  variable4 = *(ushort *)(pointer2 + 3);\n  variable3 = (uint)variable4;\n  if ((int)(variable3 << 0x1c) < 0) {\n    variable2 = pointer2[4];\n    if (variable2 != 0) {\n      variable5 = variable3 << 0x1e;\n      bVar11 = variable5 != 0;\n      if (bVar11) {\n        variable5 = 0;\n      }\n      variable6 = *pointer2;\n      if (!bVar11) {\n        variable5 = pointer2[5];\n      }\n      *pointer2 = variable2;\n      pointer2[2] = variable5;\n      for (variable6 = variable6 - variable2; 0 < variable6; variable6 = variable6 - variable5) {\n        variable5 = (*(code *)pointer2[10])(pointer1,pointer2[8],variable2,variable6);\n        if (variable5 < 1) {\n          variable4 = *(ushort *)(pointer2 + 3);\n          goto LAB_08006bc6;\n        }\n        variable2 = variable2 + variable5;\n      }\n    }\n  }\n  else if (((0 < pointer2[1]) || (0 < pointer2[0x10])) &&\n          (functionPointer1 = (code *)pointer2[0xb], functionPointer1 != (code *)0x0)) {\n    variable7 = *pointer1;\n    *pointer1 = 0;\n    if ((variable4 & 0x1000) == 0) {\n      variable2 = (*functionPointer1)(pointer1,pointer2[8],variable3 & 0x1000,1);\n      if ((variable2 == -1) && (variable3 = *pointer1, variable3 != 0)) {\n        if ((variable3 != 0x1d) && (variable3 != 0x16)) {\n          *(ushort *)(pointer2 + 3) = *(ushort *)(pointer2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *pointer1 = variable7;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      variable2 = pointer2[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer2 + 3) << 0x1d) < 0) &&\n       (variable2 = variable2 - pointer2[1], pointer2[0xd] != 0)) {\n      variable2 = variable2 - pointer2[0x10];\n    }\n    variable2 = (*(code *)pointer2[0xb])(pointer1,pointer2[8],variable2,0);\n    variable4 = *(ushort *)(pointer2 + 3);\n    if ((variable2 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer2 + 3) = variable4 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    pointer2[1] = 0;\n    *pointer2 = pointer2[4];\n    if (((int)((uint)variable4 << 0x13) < 0) && ((variable2 != -1 || (*pointer1 == 0)))) {\n      pointer2[0x15] = variable2;\n    }\n    pointer3 = (int *)pointer2[0xd];\n    *pointer1 = variable7;\n    if (pointer3 != (int *)0x0) {\n      if (pointer3 != pointer2 + 0x11) {\n        FUN_080061f0(pointer1);\n      }\n      pointer2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_binary_data_08006ac0",
                "puVar1": "pointer1",
                "iVar2": "variable2",
                "piVar3": "pointer2",
                "piVar4": "pointer3",
                "uVar5": "variable3",
                "uVar6": "variable4",
                "iVar7": "variable5",
                "pcVar8": "functionPointer1",
                "iVar9": "variable6",
                "uVar10": "variable7",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *dataArray,int *paramArray)\n\n{\n  undefined4 result;\n  int index;\n  int *tempPtr;\n  uint tempValue1;\n  ushort tempValue2;\n  int tempValue3;\n  undefined4 unaffected_r4;\n  undefined4 unaffected_r5;\n  code *callbackFunc;\n  int tempValue4;\n  uint tempValue5;\n  code *unrecoveredJumpTable;\n  bool checkCondition;\n  \n  if (paramArray[4] != 0) {\n    if ((dataArray != (uint *)0x0) && (dataArray[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (paramArray == &DAT_08007904) {\n      paramArray = (int *)dataArray[1];\n    }\n    else if (paramArray == (int *)&DAT_08007924) {\n      paramArray = (int *)dataArray[2];\n    }\n    else if (paramArray == (int *)&DAT_080078e4) {\n      paramArray = (int *)dataArray[3];\n    }\n    if (*(short *)(paramArray + 3) != 0) {\n      tempValue2 = *(ushort *)(paramArray + 3);\n      tempValue1 = (uint)tempValue2;\n      if ((int)(tempValue1 << 0x1c) < 0) {\n        index = paramArray[4];\n        if (index != 0) {\n          tempValue3 = tempValue1 << 0x1e;\n          checkCondition = tempValue3 != 0;\n          if (checkCondition) {\n            tempValue3 = 0;\n          }\n          tempValue4 = *paramArray;\n          if (!checkCondition) {\n            tempValue3 = paramArray[5];\n          }\n          *paramArray = index;\n          paramArray[2] = tempValue3;\n          for (tempValue4 = tempValue4 - index; 0 < tempValue4; tempValue4 = tempValue4 - tempValue3) {\n            tempValue3 = (*(code *)paramArray[10])(dataArray,paramArray[8],index,tempValue4,unaffected_r4,unaffected_r5);\n            if (tempValue3 < 1) {\n              tempValue2 = *(ushort *)(paramArray + 3);\n              goto LAB_08006bc6;\n            }\n            index = index + tempValue3;\n          }\n        }\n      }\n      else if (((0 < paramArray[1]) || (0 < paramArray[0x10])) &&\n              (callbackFunc = (code *)paramArray[0xb], callbackFunc != (code *)0x0)) {\n        tempValue5 = *dataArray;\n        *dataArray = 0;\n        if ((tempValue2 & 0x1000) == 0) {\n          index = (*callbackFunc)(dataArray,paramArray[8],tempValue1 & 0x1000,1);\n          if ((index == -1) && (tempValue1 = *dataArray, tempValue1 != 0)) {\n            if ((tempValue1 != 0x1d) && (tempValue1 != 0x16)) {\n              *(ushort *)(paramArray + 3) = *(ushort *)(paramArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*unrecoveredJumpTable)();\n              return result;\n            }\n            *dataArray = tempValue5;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          index = paramArray[0x15];\n        }\n        if (((int)((uint)*(ushort *)(paramArray + 3) << 0x1d) < 0) &&\n           (index = index - paramArray[1], paramArray[0xd] != 0)) {\n          index = index - paramArray[0x10];\n        }\n        index = (*(code *)paramArray[0xb])(dataArray,paramArray[8],index,0);\n        tempValue2 = *(ushort *)(paramArray + 3);\n        if ((index == -1) &&\n           ((0x1d < *dataArray || (-1 < (int)((0x20400001U >> (*dataArray & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(paramArray + 3) = tempValue2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*unrecoveredJumpTable)(0xffffffff);\n          return result;\n        }\n        paramArray[1] = 0;\n        *paramArray = paramArray[4];\n        if (((int)((uint)tempValue2 << 0x13) < 0) && ((index != -1 || (*dataArray == 0)))) {\n          paramArray[0x15] = index;\n        }\n        tempPtr = (int *)paramArray[0xd];\n        *dataArray = tempValue5;\n        if (tempPtr != (int *)0x0) {\n          if (tempPtr != paramArray + 0x11) {\n            FUN_080061f0(dataArray);\n          }\n          paramArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*unrecoveredJumpTable)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*unrecoveredJumpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "dataArray",
                "param_2": "paramArray",
                "uVar1": "result",
                "iVar2": "index",
                "piVar3": "tempPtr",
                "uVar4": "tempValue1",
                "uVar5": "tempValue2",
                "iVar6": "tempValue3",
                "unaff_r4": "unaffected_r4",
                "unaff_r5": "unaffected_r5",
                "pcVar7": "callbackFunc",
                "iVar8": "tempValue4",
                "uVar9": "tempValue5",
                "bVar10": "checkCondition",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredJumpTable"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_08006c40",
            "code": "\nvoid initializeData_08006c40(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080061e0(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x8006f39;\n  data[10] = 0x8006f5b;\n  data[0xb] = 0x8006f93;\n  data[0xc] = &someLabel;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_08006c40",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_08006fb6_1": "someLabel"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 inputData,int count)\n\n{\n  undefined4 *resultPointer;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  resultPointer = (undefined4 *)FUN_08006288(inputData,offset + 0x74);\n  if (resultPointer != (undefined4 *)0x0) {\n    *resultPointer = 0;\n    resultPointer[1] = count;\n    resultPointer[2] = resultPointer + 3;\n    FUN_080061e0(resultPointer + 3,0,offset + 0x68);\n  }\n  return resultPointer;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "inputData",
                "param_2": "count",
                "puVar1": "resultPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *data)\n\n{\n  undefined4 returnValue1;\n  undefined4 *tempPtr;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    tempPtr = &DAT_200000fc;\n    data[10] = &label1;\n    if (data == &DAT_200000fc) {\n      tempPtr = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000fc) {\n      data[6] = tempPtr;\n    }\n    returnValue1 = FUN_08006d14();\n    data[1] = returnValue1;\n    returnValue1 = FUN_08006d14(data);\n    data[2] = returnValue1;\n    returnValue1 = FUN_08006d14(data);\n    data[3] = returnValue1;\n    FUN_08006c40(data[1],4,0);\n    FUN_08006c40(data[2],9,1);\n    FUN_08006c40(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "data",
                "uVar1": "returnValue1",
                "puVar2": "tempPtr",
                "LAB_08006c34_1": "label1"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_08006d14",
            "code": "\nint * initializeData_08006d14(undefined4 *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentData;\n  int *currentPointer;\n  int **dataPointerArray;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  dataPointerArray = (int **)&DAT_20000144;\n  do {\n    currentPointer = dataPointerArray[2];\n    currentData = dataPointerArray[1];\n    while (currentData = (int *)((int)currentData + -1), -1 < (int)currentData) {\n      if (*(short *)(currentPointer + 3) == 0) {\n        *(undefined2 *)((int)currentPointer + 0xe) = 0xffff;\n        currentPointer[0x19] = 0;\n        *(undefined2 *)(currentPointer + 3) = 1;\n        *currentPointer = 0;\n        currentPointer[2] = 0;\n        currentPointer[1] = 0;\n        currentPointer[4] = 0;\n        currentPointer[5] = 0;\n        currentPointer[6] = 0;\n        FUN_080061e0(currentPointer + 0x17,0,8,1,param4);\n        currentPointer[0xd] = 0;\n        currentPointer[0xe] = 0;\n        currentPointer[0x12] = 0;\n        currentPointer[0x13] = 0;\n        return currentPointer;\n      }\n      currentPointer = currentPointer + 0x1a;\n    }\n    if (*dataPointerArray == (int *)0x0) {\n      currentData = (int *)FUN_08006c88(dataPointer,4);\n      *dataPointerArray = currentData;\n      if (currentData == (int *)0x0) {\n        *dataPointer = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPointerArray = (int **)*dataPointerArray;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_08006d14",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentData",
                "piVar2": "currentPointer",
                "ppiVar3": "dataPointerArray"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_permission_08006dc8",
            "code": "\nundefined4 checkPermission_08006dc8(undefined4 param_1,int permissionData,undefined4 *result,uint *flag)\n\n{\n  int returnValue;\n  undefined4 permissionFlag;\n  undefined stackBuffer [4];\n  uint localVariable;\n  \n  if ((*(short *)(permissionData + 0xe) < 0) ||\n     (returnValue = FUN_08007004(param_1,(int)*(short *)(permissionData + 0xe),stackBuffer), returnValue < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(permissionData + 0xc) << 0x18) < 0) {\n      permissionFlag = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *flag = (uint)((localVariable & 0xf000) == 0x2000);\n  }\n  permissionFlag = 0x400;\nLAB_08006e08:\n  *result = permissionFlag;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_permission_08006dc8",
                "param_2": "permissionData",
                "param_3": "result",
                "param_4": "flag",
                "iVar1": "returnValue",
                "uVar2": "permissionFlag",
                "auStack_4c": "stackBuffer",
                "local_48": "localVariable"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int sourceAddress,int *data)\n\n{\n  ushort result;\n  int isValid;\n  int localAddress;\n  int *tempDataPointer;\n  \n  if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1e)) {\n    localAddress = sourceAddress;\n    tempDataPointer = data;\n    result = FUN_08006dc8(sourceAddress,data,&localAddress,&tempDataPointer);\n    isValid = FUN_08006288(sourceAddress,localAddress);\n    if (isValid != 0) {\n      *(undefined **)(sourceAddress + 0x28) = &LAB_08006c34_1;\n      *data = isValid;\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x80;\n      data[4] = isValid;\n      data[5] = localAddress;\n      if ((tempDataPointer != (int *)0x0) &&\n         (isValid = FUN_08007028(sourceAddress,(int)*(short *)((int)data + 0xe)), isValid != 0)) {\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data + 3) = result | *(ushort *)(data + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfffc | 2;\n  }\n  *data = (int)data + 0x47;\n  data[4] = (int)data + 0x47;\n  data[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "sourceAddress",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "isValid",
                "local_18": "localAddress",
                "local_14": "tempDataPointer"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_char_in_string_08006e90",
            "code": "\nchar * find_char_in_string_08006e90(char *string,char target_char,int string_length)\n\n{\n  char *current_char;\n  char *current_ptr;\n  \n  current_char = string;\n  do {\n    current_ptr = current_char;\n    if (current_ptr == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = current_ptr + 1;\n  } while (*current_ptr != target_char);\n  return current_ptr;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_char_in_string_08006e90",
                "param_1": "string",
                "param_2": "target_char",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "current_ptr"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "execute_code_08006f00",
            "code": "\nint executeCode_08006f00(uint index)\n\n{\n  int *result;\n  undefined4 thunkResult;\n  int funcAddress;\n  code *function;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 returnAddress;\n  undefined4 *funcAddressPtr;\n  \n  result = DAT_200000f8;\n  funcAddressPtr = &DAT_200000f8;\n  if (0x1f < index) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  funcAddress = DAT_200000f8[0x11];\n  if ((funcAddress != 0) && (function = *(code **)(funcAddress + index * 4), function != (code *)0x0)) {\n    if (function != (code *)0x1) {\n      if (function == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(funcAddress + index * 4) = 0;\n      (*function)(index);\n    }\n    return 0;\n  }\n  thunkResult = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  funcAddress = FUN_08005740(thunkResult,index,index,0,funcAddressPtr,var1,var2,returnAddress);\n  if ((funcAddress == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return funcAddress;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "execute_code_08006f00",
                "param_1": "index",
                "piVar1": "result",
                "uVar2": "thunkResult",
                "iVar3": "funcAddress",
                "pcVar4": "function",
                "unaff_r4": "var1",
                "unaff_r5": "var2",
                "in_lr": "returnAddress",
                "puVar5": "funcAddressPtr"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nReturnValue getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750",
                "undefined4": "ReturnValue"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 inputParam,int memoryOffset)\n\n{\n  int returnValue;\n  uint updatedValue;\n  bool isPositive;\n  \n  returnValue = FUN_0800706c(inputParam,(int)*(short *)(memoryOffset + 0xe));\n  isPositive = -1 < returnValue;\n  if (isPositive) {\n    updatedValue = *(int *)(memoryOffset + 0x54) + returnValue;\n  }\n  else {\n    updatedValue = *(ushort *)(memoryOffset + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(memoryOffset + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(memoryOffset + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "inputParam",
                "param_2": "memoryOffset",
                "iVar1": "returnValue",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *output,int input,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  undefined4 unused1;\n  undefined4 unused2;\n  undefined4 unused3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_08007048(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(input + 0xe),value1,value2,value2,value2,unused1,\n                       unused2,unused3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "output",
                "param_2": "input",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result",
                "unaff_r4": "unused1",
                "unaff_r5": "unused2",
                "in_lr": "unused3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_data_08006f92",
            "code": "\nvoid updateData_08006f92(undefined4 dataPtr,int inputParam)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isNegative;\n  \n  result = FUN_08007048(dataPtr,(int)*(short *)(inputParam + 0xe));\n  isNegative = result == -1;\n  if (isNegative) {\n    updatedValue = *(ushort *)(inputParam + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(inputParam + 0x54) = result;\n    updatedValue = *(ushort *)(inputParam + 0xc) | 0x1000;\n  }\n  if (isNegative) {\n    *(ushort *)(inputParam + 0xc) = updatedValue;\n  }\n  if (!isNegative) {\n    *(ushort *)(inputParam + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_data_08006f92",
                "param_1": "dataPtr",
                "param_2": "inputParam",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isNegative"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "update_param_if_valid_08007004",
            "code": "\nvoid updateParamIfValid_08007004(int *outputParam,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *outputParam = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "update_param_if_valid_08007004",
                "param_1": "outputParam",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "handle_error_and_set_result_08007028",
            "code": "\nvoid handleErrorAndSetResult_08007028(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005724(input);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "handle_error_and_set_result_08007028",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "check_and_update_param1_08007048",
            "code": "\nvoid checkAndUpdateParam1_08007048(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005728(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "check_and_update_param1_08007048",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "extract_value_from_binary_0800706c",
            "code": "\nvoid extractValueFromBinary_0800706c(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800572c(arg1,arg2,arg3,arg3,arg3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "extract_value_from_binary_0800706c",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 172097,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}