{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "parse_and_process_format_string_080050fc",
                "param_1": "output",
                "param_2": "format_buffer",
                "param_3": "format_string",
                "param_4": "args",
                "puVar1": "flag_ptr",
                "iVar2": "buffer_size",
                "iVar3": "string_length",
                "puVar4": "arg_ptr",
                "piVar5": "arg_index_ptr",
                "bVar6": "is_number",
                "pbVar7": "current_char",
                "pbVar8": "start_of_specifier",
                "unaff_r9": "last_arg_ptr",
                "local_8c": "local_args_ptr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "width",
                "local_7c": "arg_index",
                "local_74": "total_bytes_processed",
                "local_70": "current_byte",
                "local_6f": "pad_char",
                "local_6e": "width",
                "local_45": "is_negative",
                "local_30": "specifier_length"
            },
            "code": "int parse_and_process_format_string_080050fc(undefined4 *output, int *format_buffer, byte *format_string, int *args) {\n    undefined *current_char;\n    int num_bytes_processed;\n    int total_bytes_processed;\n    undefined4 *arg_ptr;\n    int *arg_index_ptr;\n    bool is_negative;\n    byte current_byte;\n    undefined pad_char;\n    undefined4 width;\n    int precision;\n    uint flags;\n    int *local_args_ptr;\n    \n    local_args_ptr = args;\n    if (((int)((uint)*(ushort *)(format_buffer + 3) << 0x18) < 0) && (format_buffer[4] == 0)) {\n        int buffer_size = allocate_buffer(output,0x40);\n        *format_buffer = buffer_size;\n        format_buffer[4] = buffer_size;\n        if (buffer_size == 0) {\n            *output = 0xc;\n            return -1;\n        }\n        format_buffer[5] = 0x40;\n    }\n    total_bytes_processed = 0;\n    pad_char = 0x20;\n    width = 0x30;\n    current_char = format_string;\n    while (*current_char != 0) {\n        current_byte = *current_char;\n        if (current_byte != 0x25) {\n            current_char++;\n            continue;\n        }\n        num_bytes_processed = (int)current_char - (int)format_string;\n        if (num_bytes_processed != 0) {\n            int result = process_string(output,format_buffer,format_string,num_bytes_processed);\n            if (result == -1) {\n                if ((int)((uint)*(ushort *)(format_buffer + 3) << 0x19) < 0) {\n                    return -1;\n                }\n                return total_bytes_processed;\n            }\n            total_bytes_processed += num_bytes_processed;\n        }\n        if (*current_char == 0) {\n            if ((int)((uint)*(ushort *)(format_buffer + 3) << 0x19) < 0) {\n                return -1;\n            }\n            return total_bytes_processed;\n        }\n        flags = 0;\n        is_negative = false;\n        precision = -1;\n        arg_ptr = output;\n        arg_index_ptr = local_args_ptr;\n        current_char++;\n        while (true) {\n            int flag_index = get_flag_index(*current_char);\n            undefined *flag_ptr = PTR_FLAG_ARRAY;\n            if (flag_index == 0) {\n                break;\n            }\n            flags |= 1 << (flag_index - (int)flag_ptr & 0xffU);\n            current_char++;\n        }\n        if ((int)(flags << 0x1b) < 0) {\n            pad_char = 0x20;\n        }\n        if ((int)(flags << 0x1c) < 0) {\n            pad_char = 0x2b;\n        }\n        if (*current_char == 0x2a) {\n            arg_index_ptr++;\n            int arg_index = *local_args_ptr;\n            if (-1 < arg_index) {\n                goto LAB_080051ee;\n            }\n            precision = -arg_index;\n            flags |= 2;\n        } else {\n            bool is_number = false;\n            int width_value = 0;\n            while (true) {\n                if (9 < *current_char - 0x30) {\n                    break;\n                }\n                width_value = width_value * 10 + (*current_char - 0x30);\n                is_number = true;\n                current_char++;\n            }\n            if (is_number) {\n                goto LAB_080051ee;\n            }\n        }\n        if (*current_char == 0x2e) {\n            if (current_char[1] == 0x2a) {\n                current_char += 2;\n                arg_index_ptr++;\n                int arg_index = *local_args_ptr;\n                if (arg_index < 0) {\n                    arg_index = -1;\n                }\n                precision = arg_index;\n            } else {\n                bool is_number = false;\n                int precision_value = 0;\n                while (true) {\n                    current_char++;\n                    if (9 < *current_char - 0x30) {\n                        break;\n                    }\n                    precision_value = precision_value * 10 + (*current_char - 0x30);\n                    is_number = true;\n                }\n                if (is_number) {\n                    precision = precision_value;\n                }\n            }\n        }\n        int length_index = get_length_index(*current_char);\n        if (length_index != 0) {\n            current_char++;\n            flags |= 0x40 << (length_index - (int)PTR_LENGTH_ARRAY & 0xffU);\n        }\n        current_byte = *current_char;\n        current_char++;\n        int specifier_index = get_specifier_index(current_byte);\n        if (specifier_index == 0) {\n            arg_ptr = va_arg(*arg_index_ptr,undefined4 *);\n        } else {\n            if (DAT_080052DC == 0) {\n                local_args_ptr = (int *)(((int)local_args_ptr + 7U & 0xfffffff8) + 8);\n                arg_ptr = output;\n                goto LAB_08005260;\n            }\n            arg_ptr = output;\n        }\n        if (specifier_index == 0) {\n            arg_ptr = va_arg(*arg_index_ptr,undefined4 *);\n            arg_ptr = (undefined4 *)process_character(output,flags,pad_char,width,precision,current_byte);\n        } else {\n            arg_ptr = process_specifier(output,flags,pad_char,width,precision,specifier_index,arg_ptr,arg_index_ptr);\n        }\n        if (arg_ptr == (undefined4 *)0xffffffff) {\n            goto LAB_080052ac;\n        }\n        total_bytes_processed += (int)arg_ptr;\n        current_char = format_string + total_bytes_processed;\n        local_args_ptr = arg_index_ptr;\n    }\n    return total_bytes_processed;\n}\n",
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "parse_and_process_format_string_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "save_parameter_to_data_08003320",
                "param_1": "parameter",
                "PTR_DAT_08003328": "PTR_DATA"
            },
            "code": "void save_parameter_to_data_08003320(undefined4 parameter) {\n  *(undefined4 *)PTR_DAT_08003328 = parameter;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "save_parameter_to_data_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "process_data_08004410",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "metadata",
                "local_10": "ptr_data",
                "local_c": "ptr_metadata",
                "uStack_8": "stack_var"
            },
            "code": "void process_data_08004410(undefined4 data, uint16_t flags, undefined4 metadata)\n{\n  undefined4 ptr_data;\n  uint16_t ptr_metadata;\n  undefined4 stack_var;\n  \n  ptr_data = *(undefined4 *)PTR_DAT_08004430;\n  ptr_metadata = flags & 0xffff0000 | (uint16_t)*(ushort *)(PTR_DAT_08004430 + 4);\n  stack_var = metadata;\n  send_data(0x6c, &ptr_data, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "decode_and_update_08001264",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "data_ptr_1",
                "uVar2": "DAT_08001414",
                "uVar3": "DAT_08001418",
                "uVar4": "output_offset",
                "uVar5": "input_bit",
                "uVar6": "data_value",
                "iVar7": "output_index",
                "uVar8": "input_offset",
                "uVar9": "output_value",
                "uVar10": "unused",
                "unaff_r10": "data_ptr_2",
                "iVar11": "unused",
                "bit_mask": "bit_mask"
            },
            "code": "void decode_and_update_08001264(uint *output, uint *input)\n{\n  uint *data_ptr_1;\n  uint *data_ptr_2;\n  uint bit_mask;\n  uint input_bit;\n  uint output_value;\n  uint data_value;\n  uint output_offset;\n  uint input_offset = 0;\n\n  for (int i = 0; i < 16; i++) {\n    bit_mask = 1 << (i & 0xff);\n    input_bit = bit_mask & *input;\n\n    if (input_bit == bit_mask) {\n      data_value = input[1];\n      output_offset = 0;\n\n      if (data_value == 0x12) {\n        output_offset = input[3] + 0xc;\n      } else if (data_value < 0x13) {\n        if (data_value == 2) {\n          output_offset = input[3] + 8;\n        } else if (data_value == 1) {\n          output_offset = input[3];\n        }\n      } else {\n        if (data_value == DAT_08001410) {\n          output_offset = input[2];\n          if (output_offset == 0) {\n            output_offset = 4;\n          } else if (output_offset != 1) {\n            output[5] = bit_mask;\n            output_offset = 8;\n          } else {\n            output[4] = bit_mask;\n            output_offset = 8;\n          }\n        }\n      }\n\n      if (input_bit < 0x100) {\n        output_value = *output;\n        data_ptr_1 = output;\n        data_ptr_2 = output + 1;\n      } else {\n        output_value = output[1];\n        data_ptr_1 = output + 1;\n        data_ptr_2 = output + 2;\n        output_offset = (i + 0x3ffffff8) * 4;\n      }\n\n      if (input_bit > 0xff) {\n        data_ptr_1 = output + 1;\n        data_ptr_2 = output + 2;\n      }\n\n      *data_ptr_1 = output_value & ~(0xf << (output_offset & 0xff)) | output_offset << (output_offset & 0xff);\n\n      if (((uint)input[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        int output_index = (i & 3) << 2;\n        if (output == DAT_0800140c) {\n          output_index = 0;\n        } else if (output == DAT_0800140c + 0x100) {\n          output_index = 1;\n        } else if (output == DAT_0800140c + 0x200) {\n          output_index = 2;\n        } else if (output == DAT_0800140c + 0x300) {\n          output_index = 3;\n        } else {\n          output_index = 4;\n        }\n        *(uint *)(&DAT_40010008 + (i & 0xfffffffc)) = output_index << output_index | *(uint *)(&DAT_40010008 + (i & 0xfffffffc)) & ~(0xf << output_index);\n\n        data_value = *(uint *)(DAT_08001404) & ~input_bit;\n\n        if (((uint)input[1] & 0x10000) != 0) {\n          data_value |= input_bit;\n        }\n\n        *(uint *)(DAT_08001404) = data_value;\n        data_value = *(uint *)(DAT_08001404 + 4) & ~input_bit;\n\n        if (((uint)input[1] & 0x20000) != 0) {\n          data_value |= input_bit;\n        }\n\n        *(uint *)(DAT_08001404 + 4) = data_value;\n        data_value = *(uint *)(DAT_08001404 + 8) & ~input_bit;\n\n        if (((uint)input[1] & 0x100000) != 0) {\n          data_value |= input_bit;\n        }\n\n        *(uint *)(DAT_08001404 + 8) = data_value;\n        data_value = *(uint *)(DAT_08001404 + 0xc) & ~input_bit;\n\n        if (((uint)input[1] & 0x200000) != 0) {\n          data_value |= input_bit;\n        }\n\n        *(uint *)(DAT_08001404 + 0xc) = data_value;\n      }\n    }\n    input_offset++;\n    if (input_offset == 0x10) {\n      return;\n    }\n    input++;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c",
                "FUN_08004e14"
            ],
            "imported": false,
            "current_name": "decode_and_update_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "initiate_process_08002ea0",
                "FUN_08002ad0": "initialize_system",
                "FUN_08002cb0": "initialize_database",
                "FUN_08003314": "load_configuration",
                "FUN_08003320": "start_process",
                "DAT_08002ebc": "configuration_data",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "extraout_r1": "return_value"
            },
            "code": "void initiate_process_08002ea0(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 extraout_return;\n  initialize_system();\n  initialize_database();\n  load_configuration(DAT_08002ebc);\n  start_process(0, extraout_return, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initiate_process_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_080070b0",
                "param_1": "numerator",
                "param_2": "denominator",
                "param_3": "param_3",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "mantissa2",
                "uVar5": "exponent_diff",
                "uVar6": "exponent",
                "uVar7": "result",
                "uVar8": "uVar8"
            },
            "code": "ulonglong calculate_080070b0(uint numerator, uint denominator, undefined4 param_3)\n{\n    uint exponent = (denominator << 1) >> 0x15;\n    uint exponent_diff = exponent - 0x3ff;\n    uint mantissa1 = numerator;\n    uint mantissa2 = denominator;\n    if ((int)exponent_diff < 0x14)\n    {\n        if ((int)exponent_diff < 0)\n        {\n            if ((denominator & 0x7fffffff | numerator) == 0)\n            {\n                return CONCAT44(denominator, numerator);\n            }\n            mantissa1 = denominator & 0xfffff | numerator;\n            uint uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8);\n            uint uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8) + 4);\n            undefined8 result = FUNC_0800016c(numerator, (-mantissa1 | mantissa1) >> 0xc & 0x80000 | denominator & 0xfffe0000, uVar1, uVar2, numerator, denominator, param_3);\n            ulonglong uVar3 = FUNC_08000168((int)result, (int)((ulonglong)result >> 0x20), uVar1, uVar2);\n            return uVar3 & 0xffffffff | (ulonglong)((uint)(uVar3 >> 0x20) & 0x7fffffff | denominator & 0x80000000) << 0x20;\n        }\n        exponent = DAT_080071bc >> (exponent_diff & 0xff);\n        if ((denominator & exponent | numerator) == 0)\n        {\n            return CONCAT44(denominator, numerator);\n        }\n        exponent = exponent >> 1;\n        mantissa2 = denominator & exponent | numerator;\n        if (mantissa2 != 0)\n        {\n            if (exponent_diff == 0x13)\n            {\n                mantissa2 = 0x80000000;\n            }\n            else\n            {\n                mantissa2 = 0;\n            }\n            mantissa1 = 0x40000 >> (exponent_diff & 0xff) | denominator & ~exponent;\n        }\n    }\n    else\n    {\n        if (0x33 < (int)exponent_diff)\n        {\n            if (exponent_diff != 0x400)\n            {\n                return CONCAT44(denominator, numerator);\n            }\n            ulonglong result = FUNC_0800016c();\n            return result;\n        }\n        exponent_diff = exponent - 0x413;\n        uint mask = 0xffffffff >> (exponent_diff & 0xff);\n        if ((numerator & mask) == 0)\n        {\n            return CONCAT44(denominator, numerator);\n        }\n        mask = mask >> 1;\n        mantissa2 = numerator;\n        if ((numerator & mask) != 0)\n        {\n            mantissa2 = 0x40000000 >> (exponent_diff & 0xff) | numerator & ~mask;\n        }\n    }\n    uint uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8);\n    uint uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8) + 4);\n    undefined8 result = FUNC_0800016c(mantissa2, mantissa1, uVar1, uVar2, numerator, denominator, param_3);\n    ulonglong uVar3 = FUNC_08000168((int)result, (int)((ulonglong)result >> 0x20), uVar1, uVar2);\n    return uVar3;\n}",
            "called": [
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "set_value_at_address_08001424",
                "param_1": "address",
                "param_2": "value",
                "param_3": "condition",
                "*(int *)(param_1 + 0x10)": "*(int *)(address + 16)"
            },
            "code": "void set_value_at_address_08001424(int address, int value, int condition) {\n  if (condition == 0) {\n    value = value << 16;\n  }\n  *(int *)(address + 16) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "set_value_at_address_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_in_CY_null_08001028",
                "in_CY": "input_char",
                "FUN_08001004": "get_input"
            },
            "code": "bool is_in_CY_null_08001028(void)\n{\n  char input_char;\n  input_char = get_input();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_in_CY_null_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = FUN_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = FUN_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = FUN_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = FUN_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = FUN_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = FUN_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = FUN_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_080070b0",
                "FUN_080009a0",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_08006228",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "perform_operation_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "constant",
                "bVar4": "check"
            },
            "code": "ulonglong perform_operation_080006ac(uint input1, uint input2, uint input3, uint input4)\n{\n  uint temp1, temp2, temp3, temp4;\n  bool check;\n  \n  temp2 = input4 >> 0x14;\n  if (input2 != input3 && temp2 != input3) {\n    check = (input1 | input2 << 1) == 0;\n    if (!check) {\n      check = (input3 | input4 << 1) == 0;\n    }\n    if (check) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (input2 == 0) {\n      temp3 = input2 & 0x80000000;\n      do {\n        temp1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(temp1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp3;\n      if (temp2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  check = (input1 | input2 << 1) == 0;\n  if (check) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!check) {\n    check = (input3 | input4 << 1) == 0;\n  }\n  temp3 = input2;\n  if (((!check) && ((input2 != input3 || ((input1 | input2 << 0xc) == 0)))) && ((temp2 != input3 || (input1 = input3, temp3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp3,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "perform_operation_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_input_08001828",
                "param_1": "input_ptr",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "param_5": "data_ptr",
                "param_6": "data_len",
                "param_7": "arg4",
                "iVar1": "loop_var_1",
                "iVar2": "loop_var_2",
                "puVar3": "ptr_3",
                "uVar4": "temp_var_1"
            },
            "code": "uint32_t process_input_08001828(uint32_t **input_ptr, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint8_t *data_ptr, uint16_t data_len, uint32_t arg4) {\n  int32_t loop_var_1;\n  int32_t loop_var_2;\n  uint32_t *ptr_3;\n  uint32_t temp_var_1;\n  if (*(char *)((int)input_ptr + 0x35) == ' ') {\n    if (data_ptr == NULL) {\n      return 1;\n    }\n    if (data_len == 0) {\n      return 1;\n    }\n    loop_var_1 = get_current_time();\n    do {\n      ptr_3 = *input_ptr;\n      if ((~ptr_3[6] & 2) != 0) {\n        if (*(char *)(input_ptr + 0xd) == '\\x01') {\n          return 2;\n        }\n        temp_var_1 = *ptr_3;\n        *(undefined *)(input_ptr + 0xd) = 1;\n        *ptr_3 = temp_var_1 & 0xfffff7ff;\n        *(undefined *)((int)input_ptr + 0x35) = 0x21;\n        *(undefined *)((int)input_ptr + 0x36) = 0x40;\n        input_ptr[0xe] = NULL;\n        loop_var_1 = process_data(input_ptr, arg1, arg2, arg3, arg4);\n        if (loop_var_1 != 0) {\n          *(undefined *)(input_ptr + 0xd) = 0;\n          if (input_ptr[0xe] == (uint32_t *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      loop_var_2 = get_current_time();\n    } while ((uint32_t)(loop_var_2 - loop_var_1) < 0x2711);\n    *(undefined *)(input_ptr + 0xd) = 0;\n    *(undefined *)((int)input_ptr + 0x35) = 0x20;\n  }\n  return 2;\n  while (data_len != 0) {\nLAB_080018e2:\n    loop_var_1 = process_data(input_ptr, arg4);\n    if (loop_var_1 != 0) goto LAB_080018ee;\n    ptr_3 = *input_ptr;\n    ptr_3[4] = (uint32_t)*data_ptr;\n    if ((int32_t)(ptr_3[5] << 0x1d) < 0) {\n      if ((int16_t)(data_len + -1) == 0) break;\n      data_len = data_len + -2;\n      ptr_3[4] = (uint32_t)data_ptr[1];\n      data_ptr = data_ptr + 2;\n    }\n    else {\n      data_ptr = data_ptr + 1;\n      data_len = data_len + -1;\n    }\n  }\n  loop_var_1 = process_data(input_ptr, arg4);\n  if (loop_var_1 == 0) {\n    **input_ptr = **input_ptr | 0x200;\n    *(undefined *)(input_ptr + 0xd) = 0;\n    *(undefined *)((int)input_ptr + 0x35) = 0x20;\n    *(undefined *)((int)input_ptr + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (input_ptr[0xe] == (uint32_t *)0x4) {\n    **input_ptr = **input_ptr | 0x200;\n    return 1;\n  }\n  return 3;\n}\n",
            "called": [
                "FUN_08001530",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_input_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "initialize_buffer_08004c64",
                "puVar1": "buffer_ptr",
                "iVar2": "index"
            },
            "code": "void initialize_buffer_08004c64(void)\n{\n  undefined *buffer_ptr;\n  int index = 0;\n  buffer_ptr = PTR_DAT_08004c6c;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(buffer_ptr + 0x802) = 0;\n  *(undefined2 *)(buffer_ptr + 0x804) = 0;\n  do {\n    buffer_ptr[index] = 0;\n    index++;\n  } while (index != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "initialize_buffer_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = FUN_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = FUN_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = FUN_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = FUN_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = FUN_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = FUN_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = FUN_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = FUN_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = FUN_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = FUN_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = FUN_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = FUN_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = FUN_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = FUN_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = FUN_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_msb_bit_and_shift_08007092",
                "param_1": "value",
                "param_2": "shift_amount",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "uint set_msb_bit_and_shift_08007092(uint value, uint shift_amount) {\n    uint shifted_value = (value | 0x80000000) + 0x100000;\n    return shifted_value >> 0x1f;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_msb_bit_and_shift_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "value_byte",
                "iVar2": "data_ptr",
                "uVar3": "flag_value",
                "uVar4": "value_undefined",
                "sVar5": "remaining",
                "puVar6": "data_buffer",
                "puVar7": "next_data_buffer",
                "bVar8": "flag_check"
            },
            "code": "int process_data_0800290c(int *data)\n{\n    byte flag = *(byte *)((int)data + 0x39);\n    int data_ptr = *data;\n    ushort *data_buffer = (ushort *)data[10];\n    if ((flag & 0xef) != 0x22) {\n        return 2;\n    }\n    if (data[2] == 0x1000) {\n        if (data[4] == 0) {\n            data_buffer[0] = (ushort)((uint)(*(int *)(data_ptr + 4) << 0x17) >> 0x17);\n            data_buffer++;\n        }\n        else {\n            *data_buffer = (ushort)*(int *)(data_ptr + 4) & 0xff;\n            data_buffer = (ushort *)((int)data_buffer + 1);\n        }\n        data[10] = (int)data_buffer;\n    }\n    else {\n        if (data[4] == 0) {\n            byte value = (byte)*(undefined4 *)(data_ptr + 4);\n            data[10] = (int)data_buffer + 1;\n            *(byte *)data_buffer = value;\n        }\n        else {\n            undefined4 value = *(undefined4 *)(data_ptr + 4);\n            data[10] = (int)data_buffer + 1;\n            *(byte *)data_buffer = (byte)value & 0x7f;\n        }\n    }\n    short remaining = *(short *)((int)data + 0x2e) - 1;\n    *(short *)((int)data + 0x2e) = remaining;\n    if (remaining == 0) {\n        *(uint *)(data_ptr + 0xc) &= 0xffffffdf;\n        uint flag_value = (uint)*(byte *)((int)data + 0x39);\n        if (flag_value != 0x32) {\n            *(uint *)(data_ptr + 0xc) &= 0xfffffeff;\n            *(uint *)(data_ptr + 0x14) &= 0xfffffffe;\n            *(char *)((int)data + 0x39) = (char)0x12;\n        }\n        else {\n            *(char *)((int)data + 0x39) = (char)1;\n        }\n        FUN_08004c30();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "initialize_and_run_program_08002f28",
                "iVar6": "initial_value",
                "puVar2": "input_pointer",
                "puVar3": "output_pointer",
                "puVar4": "temp_pointer",
                "uVar5": "temp_value",
                "uVar7": "result",
                "PTR_DAT_08003000": "input_pointer_address",
                "PTR_DAT_08003004": "output_pointer_address",
                "PTR_DAT_08003008": "output_format_string",
                "PTR_DAT_0800300c": "temp_pointer_address",
                "PTR_DAT_08003010": "additional_operations_parameter",
                "PTR_DAT_08003014": "print_results_parameter_1",
                "PTR_DAT_08003018": "print_results_parameter_2",
                "PTR_DAT_08003020": "input_value_1_address",
                "PTR_DAT_08003024": "output_value_1_address",
                "PTR_DAT_08003028": "input_value_2_address",
                "PTR_DAT_0800302c": "output_value_2_address",
                "FUN_08002b48": "initialize_memory",
                "FUN_08002bf0": "initialize_input",
                "FUN_08002d88": "initialize_output",
                "thunk_FUN_0800115c": "calculate_initial_value",
                "FUN_08000c3c": "subtract_values",
                "FUNC_08000e54": "set_initial_value",
                "FUN_08003320": "perform_additional_operations",
                "FUNC_08003330": "print_results",
                "FUN_08002ed4": "get_output_value_1",
                "FUN_08001078": "get_output_value_2",
                "FUN_08002ec0": "get_temp_value",
                "FUN_08002ee8": "free_memory"
            },
            "code": "void initialize_and_run_program_08002f28(void)\n{\n  int result;\n  initialize_memory();\n  initialize_input();\n  initialize_output();\n  result = calculate_initial_value();\n  set_initial_value(result);\n  perform_additional_operations();\n  print_results();\n}\n",
            "called": [
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002d88",
                "FUN_08000c3c",
                "thunk_FUN_0800115c",
                "FUN_08002ed4",
                "FUN_08002ee8",
                "FUN_08001078",
                "FUN_08000cec",
                "FUN_08002bf0",
                "FUN_08003320",
                "FUN_08000e54",
                "FUN_08002b48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_and_run_program_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "initialize_08004384",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "puVar1": "ptr_data",
                "local_14": "local_var_1",
                "uStack_10": "local_var_2",
                "local_c": "local_var_3"
            },
            "code": "void initialize_08004384(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4) {\n    uint32_t *ptr_data = PTR_DAT_080043b8;\n    ptr_data[4] = 7;\n    ptr_data[5] = 0;\n    ptr_data[6] = 0x2a;\n    ptr_data[7] = 0;\n    uint32_t local_14 = *(uint32_t *)ptr_data;\n    uint32_t uStack_10 = *(uint32_t *)(ptr_data + 4);\n    ptr_data[8] = 0;\n    ptr_data[9] = 0;\n    ptr_data[10] = 0;\n    uint32_t local_c = param_4 & 0xff000000 | (uint32_t)*(uint16_t *)(ptr_data + 8);\n    FUN_08004300(0x65, &local_14, 0xb, *(uint16_t *)(ptr_data + 8), param_1);\n}\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_input_null_080009a0",
                "in_ZR": "input_char",
                "FUN_08000990": "get_input"
            },
            "code": "bool is_input_null_080009a0(void)\n{\n  char input_char;\n  input_char = get_input();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "is_input_null_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "initialize_MS5611_registers_08003298",
                "iVar4": "i",
                "PTR_DAT_08003304": "MS5611_register_ptr",
                "PTR_DAT_0800330c": "MS5611_register_data",
                "PTR_DAT_08003310": "MS5611_register_data_ptr",
                "PTR_s____Src_MS5611_c_08003308": "MS5611_register_source_data",
                "local_1c": "data_1",
                "local_1b": "data_2"
            },
            "code": "void initialize_MS5611_registers_08003298(void)\n{\n  int i = 0;\n  set_MS5611_register(0xee, 0x1e, 1);\n  delay(10);\n  uint8_t *data_ptr = PTR_DAT_0800330c;\n  uint8_t *src_ptr = PTR_s____Src_MS5611_c_08003308;\n  *PTR_DAT_08003304 = 8;\n  do {\n    uint16_t data = 0;\n    set_MS5611_register(0xee, i + 0xa0U & 0xffff, &data, 2, src_ptr, 0x7c);\n    *(uint16_t *)(data_ptr + i) = data;\n    uint32_t *ptr = PTR_DAT_08003310;\n    i += 2;\n  } while (i != 0x10);\n  i = 0;\n  do {\n    *(uint32_t *)(ptr + i * 4) = 0;\n    i++;\n  } while (i != 0x14);\n}",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_MS5611_registers_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "initial_value",
                "param_2": "data",
                "param_3": "data_length",
                "uVar1": "checksum",
                "pbVar2": "current_byte"
            },
            "code": "void calculate_checksum_08004300(uint initial_value, byte *data, uint data_length) {\n  uint checksum = initial_value ^ (data_length & 0xff);\n  add_to_checksum(data_length & 0xff);\n  add_to_checksum(initial_value);\n  for (byte *current_byte = data; current_byte < data + data_length; current_byte++) {\n    add_to_checksum(*current_byte);\n    checksum ^= *current_byte;\n  }\n  add_to_checksum(checksum);\n  return;\n}",
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004348",
                "FUN_08004410",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004458"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_data_from_src_to_dest_08005630",
                "param_1": "dest_start_index",
                "param_2": "src",
                "param_3": "data_length",
                "puVar1": "dest_end",
                "puVar2": "src_end"
            },
            "code": "void copy_data_from_src_to_dest_08005630(int dest_start_index, undefined *src, int data_length){\n  undefined *dest_end = (undefined *)(dest_start_index - 1);\n  undefined *src_end = src + data_length;\n  for (; src != src_end; src++) {\n    dest_end++;\n    *dest_end = *src;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_data_from_src_to_dest_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar2 = FUN_08000a30();\n  iVar4 = FUN_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar3 = FUN_08000a30();\n    iVar4 = FUN_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = FUN_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = FUN_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar27 = FUN_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      FUN_08000428();\n      uVar32 = FUN_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = FUN_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005854",
                "FUN_08000a30",
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08005bc8",
                "FUN_08000adc",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "swap_values_08000980",
                "param_1": "first_value",
                "param_2": "second_value",
                "param_3": "ptr_first_value",
                "param_4": "ptr_second_value"
            },
            "code": "void swap_values_08000980(int first_value, int second_value, int* ptr_first_value, int* ptr_second_value)\n{\n    int temp = *ptr_first_value;\n    *ptr_first_value = *ptr_second_value;\n    *ptr_second_value = temp;\n    return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "swap_values_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "print_blinking_message_08004028",
                "FUNC_0800458c": "display_message",
                "FUN_08003ff4": "display_blinking_message",
                "FUN_08003f3c": "display",
                "thunk_do_nothing_08001168": "wait_for",
                "iVar1": "counter"
            },
            "code": "void print_blinking_message_08004028(void)\n{\n    int counter = 3;\n    display_message();\n    while (counter--)\n    {\n        display_blinking_message();\n        wait_for(100);\n    }\n    display_message();\n}\n",
            "called": [
                "FUN_08003ff4",
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_0800458c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "print_blinking_message_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_memory_08002368",
                "param_1": "memory_location",
                "param_2": "new_values",
                "uVar1": "original_value",
                "puVar2": "pointer_to_data"
            },
            "code": "void update_memory_08002368(uint *memory_location, uint *new_values)\n{\n  uint original_value = *memory_location;\n  if ((((memory_location == ptr_080023cc) || (memory_location == (uint *)0x40000000)) ||\n      (memory_location == ptr_080023cc - 0x4a00)) || (memory_location == ptr_080023cc - 0x4900)) {\n    original_value = original_value & 0xffffff8f | new_values[1];\n    if (((memory_location == ptr_080023cc) || (memory_location == (uint *)0x40000000)) ||\n       ((memory_location == ptr_080023cc - 0x4a00 || (memory_location == ptr_080023cc - 0x4900)))) {\n      original_value = original_value & 0xfffffcff | new_values[3];\n    }\n  }\n  *memory_location = original_value;\n  memory_location[0xb] = new_values[2];\n  memory_location[10] = *new_values;\n  uint *pointer_to_data = ptr_080023cc;\n  if (memory_location == ptr_080023cc) {\n    pointer_to_data = (uint *)new_values[4];\n  }\n  if (memory_location == ptr_080023cc) {\n    memory_location[0xc] = (uint)pointer_to_data;\n  }\n  memory_location[5] = 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_memory_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "set_bit_08002520",
                "param_1": "data",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "*(uint *)(param_1 + 0x20)": "ptr",
                "*(uint *)(param_1 + 0x20) & ~(1 << (param_2 & 0xff))": "bit_mask",
                "*(uint *)(param_1 + 0x20) = param_3 << (param_2 & 0xff) | *(uint *)(param_1 + 0x20)": "*ptr = bit_value << (bit_index & 0xff) | *ptr"
            },
            "code": "void set_bit_08002520(uint32_t *data, uint32_t bit_index, uint32_t bit_value) {\n\tuint32_t *ptr = data + 0x20;\n\tuint32_t bit_mask = ~(1 << (bit_index & 0xff));\n\t*ptr = *ptr & bit_mask;\n\t*ptr = bit_value << (bit_index & 0xff) | *ptr;\n\treturn;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "set_bit_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_value_08002008",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "data1",
                "uVar4": "count",
                "uVar5": "value",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "local_24": "multipliers",
                "local_20": "data_array",
                "*puVar7": "*ptr2",
                "*(uint *)(DAT_08002090 + 4)": "data1",
                "DAT_08002094": "data2",
                "*(byte *)((int)local_20 + ((uVar3 & 0x3c0000) >> (uVar4 & 0xff)))": "data4",
                "PTR_DAT_0800208c": "ptr_data",
                "do-while loop": "while loop",
                "count_leading_zeroes()": "count_leading_zeroes()"
            },
            "code": "uint calculate_value_08002008(void)\n{\n    uint value = 0;\n    uint *(uint *)(DAT_08002090 + 4) = *(uint *)(DAT_08002090 + 4);\n    uint DAT_08002094 = DAT_08002094;\n    uint data3 = 0;\n    uint data4 = 0;\n    uint data5 = 0;\n    uint index = 0;\n    uint count = 0;\n    uint *ptr1 = (uint *)PTR_DAT_0800208c;\n    uint *ptr2 = (uint *)local_20;\n    byte local_24 [4] = {1, 2, 0, 0};\n    while (ptr1 != (uint *)(PTR_DAT_0800208c + 0x10))\n    {\n        *ptr2 = *ptr1;\n        ptr2++;\n        ptr1++;\n        *ptr2 = *ptr1;\n        ptr2++;\n        ptr1++;\n    }\n    if ((*(uint *)(DAT_08002090 + 4) & 0xc) == 8)\n    {\n        index = (*(uint *)(DAT_08002090 + 4) & 0x3c0000) >> 14;\n        count = count_leading_zeroes(0x3c00);\n        DAT_08002094 = DAT_08002098;\n        if ((int)(*(uint *)(DAT_08002090 + 4) << 0xf) < 0)\n        {\n            data3 = count_leading_zeroes(0x4000);\n            data5 = local_24[(*(uint *)(DAT_08002090 + 4) & 0x20000) >> (data3 & 0xff)];\n            DAT_08002094 = DAT_08002094 / data5;\n        }\n        data4 = *(byte *)((int)local_20 + index);\n        value = DAT_08002094 * data4;\n    }\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_value_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "update_data_08002404",
                "param_1": "data_ptr",
                "param_2": "data_array",
                "uVar1": "updated_data_2",
                "uVar2": "updated_data_4",
                "iVar3": "updated_data_3",
                "mask1": "0xffffffef",
                "mask2": "0xffffffdf",
                "mask3": "0xfffff3ff",
                "mask4": "0xffffff7f"
            },
            "code": "void update_data_08002404(int data_ptr, int *data_array){\n  uint mask1 = 0xffffffef;\n  uint mask2 = 0xffffffdf;\n  uint mask3 = 0xfffff3ff;\n  uint mask4 = 0xffffff7f;\n  uint updated_data_1 = *(uint *)(data_ptr + 0x20) & mask1;\n  uint updated_data_2 = *(uint *)(data_ptr + 0x20) & mask2 | data_array[2] << 4;\n  int updated_data_3 = data_array[0] << 8;\n  uint updated_data_4 = *(uint *)(data_ptr + 4) & mask3 | (data_array[5] | data_array[6]) << 2;\n\n  if (data_ptr == DAT_08002458) {\n    updated_data_2 = updated_data_2 & mask4 | data_array[3] << 4;\n  }\n\n  *(uint *)(data_ptr + 0x20) = updated_data_2;\n  *(uint *)(data_ptr + 0x18) = *(uint *)(data_ptr + 0x18) & 0xffff8cff | updated_data_3;\n  *(int *)(data_ptr + 0x38) = data_array[1];\n  *(uint *)(data_ptr + 4) = updated_data_4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "find_value_08005bc8",
                "param_1": "x",
                "param_2": "y",
                "cVar1": "c",
                "iVar2": "result",
                "piVar3": "p_result",
                "puVar4": "p",
                "uVar5": "val",
                "local_50": "one",
                "local_4c": "ptr",
                "local_48": "x1",
                "uStack_44": "y1",
                "local_40": "x1",
                "uStack_3c": "y1",
                "local_38": "ret",
                "local_30": "result"
            },
            "code": "undefined8 find_value_08005bc8(undefined4 x, undefined4 y)\n{\n    char c;\n    int result;\n    int *p_result;\n    undefined4 *p;\n    undefined8 ret;\n    undefined4 one = 1;\n    undefined *ptr = PTR_DAT_08005c6c;\n    undefined4 x1 = x;\n    undefined4 y1 = y;\n    undefined8 val = FUN_08006c0c();\n    c = *PTR_DAT_08005c68;\n    if (c == -1) {\n        return val;\n    }\n    result = FUN_08000a04(x, y, x, y);\n    if (result != 0) {\n        return val;\n    }\n    result = FUN_080009b4(x, y, 0, 0);\n    if (result == 0) {\n        return val;\n    }\n    if (c == 0) {\n        ret = 0;\n    }\n    else {\n        ret = FUNC_08000724(0, 0, 0, 0);\n        if (c != 2) {\n            goto LAB_08005c26;\n        }\n    }\n    p = (undefined4 *)FUN_080072ac();\n    *p = 33;\nLAB_08005c26:\n    if (result != 0) {\n        p_result = (int *)FUN_080072ac();\n        *p_result = result;\n    }\n    return ret;\n}",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "find_value_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "check_flag_08001436",
                "param_1": "flag_ptr",
                "iVar1": "flag_value",
                "PTR_": "flag_ptr",
                "DAT_": "flag_value"
            },
            "code": "int check_flag_08001436(int *PTR_) {\n    int DAT_ = *PTR_;\n    if ((*(uint *)(DAT_ + 0x14) & 0x400) != 0) {\n        *(uint *)(DAT_ + 0x14) &= 0xfffffbff;\n        PTR_[14] = 4;\n        *(undefined *)((int)PTR_ + 0x35) = 0x20;\n        *(undefined *)(PTR_ + 13) = 0;\n        return 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "check_flag_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "process_data_08004a30",
                "puVar1": "data_ptr_1",
                "puVar2": "data_ptr_2",
                "puVar3": "data_ptr_3",
                "uVar4": "result"
            },
            "code": "void process_data_08004a30(void)\n{\n    undefined *data_ptr_1 = PTR_DAT_08004a74;\n    undefined *data_ptr_2 = PTR_DAT_08004a78;\n    undefined *data_ptr_3 = PTR_DAT_08004a7c;\n    if (data_ptr_1[1] != 0)\n    {\n        if (*data_ptr_2 == 0)\n        {\n            undefined4 result = FUN_08003068();\n            result = FUNC_08000cec(result, DAT_08004a80);\n            *(undefined4 *)(data_ptr_3 + 0x1c) = result;\n            *data_ptr_2 = 1;\n        }\n        else\n        {\n            undefined4 result = FUN_08003068();\n            result = FUNC_08000cec(result, DAT_08004a80);\n            *(undefined4 *)(data_ptr_3 + 0x30) = result;\n        }\n    }\n    if (data_ptr_1[1] == 0)\n    {\n        if (*data_ptr_2 != 0)\n        {\n            *data_ptr_2 = 0;\n        }\n        *(undefined4 *)(data_ptr_3 + 0x48) = *(undefined4 *)(data_ptr_1 + 4);\n    }\n    return;\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "initialize_connection_08004c70",
                "puVar1": "connection_type",
                "puVar2": "connection_status",
                "uVar3": "connection_type_value",
                "uVar4": "connection_info_c",
                "iVar5": "connection_info"
            },
            "code": "int initialize_connection_08004c70(void)\n{\n  char *connection_status = PTR_DAT_08004c88;\n  char *connection_type = PTR_DAT_08004c84;\n  if ((connection_status[0x39] == '\\x01') || (connection_status[0x39] == '\\x12')) {\n    if (PTR_DAT_08004c84 == (char *)0x0) {\n      return 1;\n    }\n    if (connection_status[0x38] != '\\x01') {\n      connection_status[0x38] = 1;\n      *(int *)(connection_status + 0x3c) = 0;\n      *(short *)(connection_status + 0x2c) = 1;\n      *(short *)(connection_status + 0x2e) = 1;\n      connection_status[0x38] = 0;\n      if (connection_status[0x39] == '\\x12') {\n        char connection_type = 0x32;\n      }\n      else {\n        char connection_type = 0x22;\n      }\n      int connection_info = *(int *)connection_status;\n      connection_status[0x39] = connection_type;\n      uint connection_info_c = *(uint *)(connection_info + 0xc);\n      *(char **)(connection_status + 0x28) = connection_type;\n      *(uint *)(connection_info + 0xc) = connection_info_c | 0x100;\n      *(uint *)(connection_info + 0x14) = *(uint *)(connection_info + 0x14) | 1;\n      *(uint *)(connection_info + 0xc) = *(uint *)(connection_info + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_connection_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "check_params_08000904",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "xor_result",
                "bVar2": "is_zero",
                "bVar3": "is_greater_than_or_equal_to"
            },
            "code": "uint check_params_08000904(uint first_param, uint second_param, uint third_param, uint fourth_param)\n{\n  uint result;\n  bool is_first_param_zero = (first_param | second_param << 1) == 0;\n  bool is_third_param_zero = (third_param | fourth_param << 1) == 0;\n  bool are_second_and_fourth_params_equal = second_param == fourth_param;\n  bool are_first_and_third_params_equal = first_param == third_param;\n  bool is_second_xor_fourth_param_zero = (second_param ^ fourth_param) == 0;\n  bool is_second_param_greater_than_or_equal_to_fourth_param = fourth_param <= second_param;\n  bool is_third_param_less_than_or_equal_to_first_param = third_param <= first_param;\n  \n  if (((int)(second_param << 1) >> 0x15 == -1 || (int)(fourth_param << 1) >> 0x15 == -1) && ((((int)(second_param << 1) >> 0x15 == -1 && !is_first_param_zero) || (((int)(fourth_param << 1) >> 0x15 == -1 && !is_third_param_zero))))){\n    result = 1;\n  }\n  else{\n    if (!is_first_param_zero && !is_third_param_zero && !are_second_and_fourth_params_equal && !are_first_and_third_params_equal){\n      if (is_second_xor_fourth_param_zero){\n        if (is_second_param_greater_than_or_equal_to_fourth_param){\n          result = is_third_param_less_than_or_equal_to_first_param ? fourth_param >> 0x1f : ~fourth_param;\n          result |= 1;\n        }\n        else{\n          result = ~fourth_param;\n          result |= 1;\n        }\n      }\n      else{\n        result = is_second_param_greater_than_or_equal_to_fourth_param ? fourth_param >> 0x1f : ~fourth_param;\n        result |= 1;\n      }\n    }\n    else{\n      result = 0;\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "check_params_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "check_and_update_0800299a",
                "param_1": "param",
                "uVar1": "third_value",
                "sVar2": "twenty_sixth_value",
                "uVar3": "current_value",
                "puVar4": "eighth_value",
                "uVar5": "new_value",
                "puVar6": "ptr",
                "uVar7": "fifth_value",
                "bVar8": "is_bit_set",
                "param_1[0xf]": "fifteenth_value",
                "puVar6[5]": "fifth_value",
                "puVar6[3]": "third_value",
                "*(undefined *)((int)param_1 + 0x39)": "new_value"
            },
            "code": "void check_and_update_0800299a(uint **param)\n{\n    uint current_value = **param;\n    uint third_value = (*param)[3];\n    uint *ptr = *param;\n    uint fifth_value = ptr[5];\n    uint *fifteenth_value = param[0xf];\n    bool is_bit_set;\n    uint *new_fifteenth_value;\n    if ((current_value & 0xf) == 0)\n    {\n        if (((int)(current_value << 0x1a) < 0) && ((int)(third_value << 0x1a) < 0))\n        {\n            do_something();\n            return;\n        }\n    }\n    else\n    {\n        is_bit_set = (fifth_value & 1) != 0 || ((third_value & 0x120) != 0);\n        if (is_bit_set)\n        {\n            new_fifteenth_value = (uint *)(current_value << 0x1f);\n            if ((int)new_fifteenth_value < 0)\n            {\n                if ((int)(third_value << 0x17) < 0)\n                {\n                    new_fifteenth_value = (uint *)((uint)param[0xf] | 1);\n                    param[0xf] = new_fifteenth_value;\n                }\n            }\n            if (((int)(current_value << 0x1d) < 0) && is_bit_set)\n            {\n                param[0xf] = (uint *)((uint)param[0xf] | 2);\n            }\n            if (((int)(current_value << 0x1e) < 0) && is_bit_set)\n            {\n                param[0xf] = (uint *)((uint)param[0xf] | 4);\n            }\n            if (((int)(current_value << 0x1c) < 0) && is_bit_set)\n            {\n                param[0xf] = (uint *)((uint)param[0xf] | 8);\n            }\n            if (fifteenth_value == NULL)\n            {\n                return;\n            }\n            if (((int)(current_value << 0x1a) < 0) && ((int)(third_value << 0x1a) < 0))\n            {\n                do_something(param);\n            }\n            ptr = *param;\n            if ((-1 < (int)param[0xf] << 0x1c) && ((ptr[5] & 0x40) == 0))\n            {\n                do_nothing_2(param);\n                param[0xf] = NULL;\n                return;\n            }\n            ptr[3] &= 0xfffffedf;\n            ptr[5] &= 0xfffffffe;\n            *(undefined *)((int)param + 0x39) = 1;\n            do_nothing_2(param);\n            return;\n        }\n    }\n    if (((int)(current_value << 0x18) < 0) && ((int)(third_value << 0x18) < 0))\n    {\n        if ((*(byte *)((int)param + 0x39) & 0xdf) == 0x12)\n        {\n            uint *eighth_value = param[8];\n            if (param[2] == (uint *)0x1000)\n            {\n                ptr[1] = *(ushort *)eighth_value & 0x1ff;\n                if (param[4] == NULL)\n                {\n                    eighth_value = (uint *)((int)eighth_value + 2);\n                }\n                else\n                {\n                    eighth_value = (uint *)((int)eighth_value + 1);\n                }\n                param[8] = eighth_value;\n            }\n            else\n            {\n                param[8] = (uint *)((int)eighth_value + 1);\n                ptr[1] = (uint)*(byte *)eighth_value;\n            }\n            short *twenty_sixth_value = (short *)((int)param + 0x26);\n            *twenty_sixth_value = *twenty_sixth_value - 1;\n            if (*twenty_sixth_value == 0)\n            {\n                ptr[3] &= 0xffffff7f;\n                ptr[3] |= 0x40;\n                return;\n            }\n        }\n    }\n    else if (((int)(current_value << 0x19) < 0) && ((int)(third_value << 0x19) < 0))\n    {\n        ptr[3] &= 0xffffffbf;\n        if (*(char *)((int)param + 0x39) == '2')\n        {\n            *(undefined *)((int)param + 0x39) = 0x22;\n        }\n        else\n        {\n            *(undefined *)((int)param + 0x39) = 1;\n        }\n        do_nothing_1(param);\n    }\n    return;\n}",
            "called": [
                "FUN_0800290c",
                "FUN_08002998",
                "FUN_0800290a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "check_and_update_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_ptr_dat_value_0800114c",
                "PTR_DAT_08001158": "ptr_dat_value"
            },
            "code": "void increment_ptr_dat_value_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "decode_string_080052e4",
                "param_1": "input_buffer",
                "param_2": "output_buffer",
                "param_3": "output_length",
                "param_4": "unk_param",
                "param_5": "write_to_output",
                "iVar1": "status",
                "uVar2": "max_output_length",
                "uVar3": "padding",
                "bVar4": "is_offset_valid",
                "output_offset": "output_offset",
                "padding_offset": "padding_offset",
                "output_size": "output_size",
                "output_offset2": "output_offset2"
            },
            "code": "undefined4 decode_string_080052e4(undefined4 input_buffer, uint *output_length, uint *output_buffer, undefined4 unk_param, code *write_to_output)\n{\n    int i;\n    uint max_output_length = param_2[4];\n    if ((int)param_2[4] < (int)param_2[2]) {\n        max_output_length = param_2[2];\n    }\n    *output_length = max_output_length;\n    if (*(char *)((int)param_2 + 0x43) != '\\0') {\n        *output_length = max_output_length + 1;\n    }\n    if ((int)(*param_2 << 0x1a) < 0) {\n        *output_length += 2;\n    }\n    uint output_offset = *param_2 & 6;\n    if (output_offset == 0) {\n        for (; (int)output_offset < (int)(param_2[3] - *output_length); output_offset++) {\n            int status = (*write_to_output)(input_buffer, unk_param, (int)param_2 + 0x19, 1);\n            if (status == -1) {\n                return 0xffffffff;\n            }\n        }\n    }\n    uint padding = (uint)*(byte *)((int)param_2 + 0x43);\n    if (padding != 0) {\n        padding = 1;\n    }\n    uint padding_offset = padding;\n    if ((int)(*param_2 << 0x1a) < 0) {\n        *(undefined *)((int)param_2 + padding + 0x43) = 0x30;\n        padding_offset += 2;\n        *(undefined *)((int)param_2 + padding + 0x44) = *(undefined *)((int)param_2 + 0x45);\n    }\n    int status = (*write_to_output)(input_buffer, unk_param, (int)param_2 + 0x43, padding_offset);\n    if (status == -1) {\n        return 0xffffffff;\n    }\n    uint output_size = param_2[3];\n    bool is_offset_valid = (*param_2 & 6) != 4;\n    if (is_offset_valid) {\n        output_size = 0;\n    }\n    uint output_offset2 = 0;\n    if (!is_offset_valid) {\n        output_size = output_size - *output_length;\n    }\n    if (!is_offset_valid) {\n        output_size = output_size & ~((int)output_size >> 0x1f);\n    }\n    if ((int)param_2[4] < (int)param_2[2]) {\n        output_size = output_size + (param_2[2] - param_2[4]);\n    }\n    while (true) {\n        if (output_size == output_offset2) {\n            return 0;\n        }\n        int status = (*write_to_output)(input_buffer, unk_param, (int)param_2 + 0x1a, 1);\n        if (status == -1) {\n            break;\n        }\n        output_offset2++;\n    }\n    return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "decode_string_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_if_valid_080014e2",
                "param_1": "input",
                "param_2": "length",
                "iVar1": "start_time",
                "iVar2": "result"
            },
            "code": "int check_if_valid_080014e2(int *input, uint32_t length) {\n    int start_time = get_current_time();\n    while (true) {\n        if (*(int *)(*input + 0x14) << 0x18 < 0) {\n            return 0;\n        }\n        int result = check_input(input);\n        if (result != 0) {\n            if ((length != 0xffffffff) && ((length == 0 || (get_current_time() - start_time) > length)))) {\n                input[14] |= 0x20;\n                *(undefined *)((int)input + 0x35) = 0x20;\n                *(undefined *)(input + 0xd) = 0;\n                return 3;\n            }\n        }\n    }\n    return 1;\n}",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "check_if_valid_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_with_param_0800142e",
                "param_1": "ptr_value",
                "param_2": "xor_value",
                "*(uint *)(param_1 + 0xc)": "*ptr_value"
            },
            "code": "void xor_with_param_0800142e(uint *ptr_value, uint xor_value)\n{\n  *ptr_value = *ptr_value ^ xor_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_with_param_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "update_status_08004d8c",
                "param_1": "status",
                "iVar1": "current_status",
                "DAT_08004e04": "STATUS_A",
                "DAT_08004e08": "STATUS_REGISTER",
                "_DAT_4002101c": "BIT_B",
                "0x40000000": "STATUS_B",
                "DAT_08004e0c": "STATUS_C",
                "DAT_08004e10": "STATUS_D",
                "*(uint *)(DAT_08004e08 + 0x18)": "BIT_A",
                "*(uint *)(DAT_08004e08 + 0x1c)": "BIT_C_D"
            },
            "code": "void update_status_08004d8c(int *status)\n{\n  int current_status = *status;\n  if (current_status == DAT_08004e04)\n  {\n    *(uint *)(DAT_08004e08 + 0x18) = *(uint *)(DAT_08004e08 + 0x18) | *(uint *)(DAT_08004e08 + 0x18);\n  }\n  else if (current_status == STATUS_B)\n  {\n    _DAT_4002101c = _DAT_4002101c | _DAT_4002101c;\n  }\n  else if (current_status == DAT_08004e0c)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | BIT_C;\n  }\n  else if (current_status == DAT_08004e10)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | BIT_D;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_status_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_bits_to_shift_08002250",
                "uVar1": "zeroes_count",
                "PTR_DAT_0800227c": "data_pointer",
                "PTR_DAT_08002278": "shift_array",
                "DAT_08002274": "data_offset"
            },
            "code": "uint get_bits_to_shift_08002250(void)\n{\n  uint zeroes_count = count_leading_zeroes(0x1c0000);\n  uint shift_amount = (*(uint *)PTR_DAT_0800227c) >> PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (zeroes_count & 0xff)];\n  return shift_amount;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_bits_to_shift_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_end_of_input_080009b4",
                "in_CY": "current_char",
                "FUN_08000990": "read_input"
            },
            "code": "bool is_end_of_input_080009b4(void)\n{\n  char current_char;\n  read_input();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_end_of_input_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_at_position_080011fc",
                "param_1": "position",
                "DAT_08001210": "data_pointer"
            },
            "code": "void set_bit_at_position_080011fc(uint position){\n    int* DAT_08001210 = (int*)(DAT_08001210 + (position >> 5) * 4);\n    int bit_position = position & 0x1f;\n    *DAT_08001210 = 1 << bit_position;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_pointer_data_08003068",
                "PTR_DAT_08003070": "pointer_to_data"
            },
            "code": "int get_pointer_data_08003068() {\n    int *PTR_DAT_08003070 = (int *)PTR_DAT_08003070;\n    return *PTR_DAT_08003070;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_pointer_data_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_08005646",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "puVar1": "end"
            },
            "code": "void reverse_copy_08005646(char *destination, char *source, int length)\n{\n    char *end = source + length;\n    if ((source < destination) && (destination < end)) {\n        destination += length;\n        length = length - (int)end;\n        while (end + length != NULL) {\n            end--;\n            destination--;\n            *destination = *end;\n        }\n        return;\n    }\n    destination--;\n    for (; source != end; source++) {\n        destination++;\n        *destination = *source;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "reverse_copy_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "execute_function_08000990",
                "param_1": "input_param",
                "FUN_08000904": "call_startup_function"
            },
            "code": "undefined4 execute_function_08000990(undefined4 input_param) {\n  call_startup_function();\n  return input_param;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "execute_function_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "is_first_call_08000110",
                "*param_1": "",
                "*PTR_DAT_08000128": "*ptr_data",
                "DAT_0800012c": "dat",
                "PTR_FUN_08000130": ""
            },
            "code": "bool is_first_call_08000110() {\\n  if (*PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      return true;\\n    }\\n    *PTR_DAT_08000128 = 1;\\n  }\\n  return false;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "is_first_call_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "returnZero_0800709e"
            },
            "code": "int returnZero_0800709e(void) {\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "returnZero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "puVar1": "result_pointer",
                "uVar2": "intermediate_result_1",
                "uVar3": "input_1",
                "uVar4": "input_2"
            },
            "code": "void calculate_result_08002ec0(void)\n{\n  float *result_pointer;\n  float input_1;\n  float input_2;\n  float intermediate_result_1;\n  float intermediate_result_2;\n  \n  result_pointer = PTR_DAT_08002ed0;\n  input_2 = *(float *)(PTR_DAT_08002ed0 + 4);\n  input_1 = *(float *)(PTR_DAT_08002ecc + 4);\n  intermediate_result_1 = FUNC_08000ad8(1.0f, input_2);\n  intermediate_result_2 = FUNC_08000cec(intermediate_result_1, input_1);\n  intermediate_result_1 = FUNC_08000cec(input_2, *(float *)result_pointer);\n  intermediate_result_2 = FUNC_08000adc(intermediate_result_1, intermediate_result_2);\n  *(float *)result_pointer = intermediate_result_2;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "send_data_to_server_08004434",
                "param_1": "server_address",
                "param_2": "data_length",
                "param_3": "data_buffer",
                "local_10": "current_address",
                "local_c": "modified_length",
                "uStack_8": "saved_buffer"
            },
            "code": "void send_data_to_server_08004434(undefined4 server_address, uint16_t data_length, undefined4 data_buffer)\n{\n  undefined4 current_address;\n  uint16_t modified_length;\n  undefined4 saved_buffer;\n  \n  current_address = *(undefined4 *)PTR_DAT_08004454;\n  modified_length = data_length & 0xffff0000 | (uint16_t)*(ushort *)(PTR_DAT_08004454 + 4);\n  saved_buffer = data_buffer;\n  send_packet_to_server(0x6d,&current_address,6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_server_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "iVar7": "temp7",
                "uVar8": "temp8",
                "uVar9": "temp9",
                "iVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12"
            },
            "code": "undefined8 calculate_float_08006c0c(uint numerator, uint denominator)\n{\n    undefined4 temp1;\n    uint temp2, temp3, temp4, temp5, temp6, temp7, temp8, temp9, temp10, temp11, temp12;\n    if ((DAT_08006d60 & ~denominator) == 0) {\n        temp12 = FUNC_080004d0(numerator, denominator, numerator, denominator);\n        temp12 = FUNC_0800016c(numerator, denominator, (int)temp12, (int)((ulonglong)temp12 >> 0x20));\n        return temp12;\n    }\n    if ((int)denominator < 1) {\n        if ((denominator & 0x7fffffff | numerator) == 0) {\n            return CONCAT44(denominator, numerator);\n        }\n        if (denominator != 0) {\n            temp12 = FUNC_08000168(numerator, denominator, numerator, denominator);\n            temp1 = (undefined4)((ulonglong)temp12 >> 0x20);\n            temp12 = FUNC_08000724((int)temp12, temp1, (int)temp12, temp1);\n            return temp12;\n        }\n    }\n    temp3 = (int)denominator >> 0x14;\n    if (temp3 == 0) {\n        while (denominator == 0) {\n            temp3 = temp3 + -0x15;\n            denominator = numerator >> 0xb;\n            numerator = numerator << 0x15;\n        }\n        temp2 = 0;\n        for (; -1 < (int)(denominator << 0xb); denominator = denominator << 1) {\n            temp2 = temp2 + 1;\n        }\n        temp3 = temp3 - (temp2 - 1);\n        denominator = denominator | numerator >> (0x20 - temp2 & 0xff);\n        numerator = numerator << (temp2 & 0xff);\n    }\n    temp7 = 0;\n    temp2 = denominator & 0xfffff | 0x100000;\n    if ((temp3 + -0x3ff) * -0x80000000 < 0) {\n        temp2 = temp2 * 2 - ((int)numerator >> 0x1f);\n        numerator = numerator << 1;\n    }\n    temp2 = temp2 * 2 - ((int)numerator >> 0x1f);\n    temp4 = 0x16;\n    temp5 = 0;\n    temp8 = 0x200000;\n    numerator = numerator << 1;\n    do {\n        temp10 = temp5 + temp8;\n        if (temp10 <= (int)temp2) {\n            temp2 = temp2 - temp10;\n            temp5 = temp10 + temp8;\n            temp7 = temp7 + temp8;\n        }\n        temp4 = temp4 - 1;\n        temp2 = temp2 * 2 - ((int)numerator >> 0x1f);\n        temp8 = temp8 >> 1;\n        numerator = numerator << 1;\n    } while (temp4 != 0);\n    temp11 = 0x20;\n    temp9 = 0x80000000;\n    temp8 = temp4;\n    do {\n        temp6 = temp9 + temp8;\n        temp12 = temp5;\n        if (((int)temp5 < (int)temp2) || ((temp2 == temp5 && (temp6 <= numerator)))) {\n            temp8 = temp6 + temp9;\n            if (((int)temp6 < 0) && (-1 < (int)temp8)) {\n                temp12 = temp5 + 1;\n            }\n            temp2 = temp2 - temp5;\n            if (numerator < temp6) {\n                temp2 = temp2 - 1;\n            }\n            numerator = numerator - temp6;\n            temp4 = temp4 + temp9;\n        }\n        temp2 = temp2 * 2 - ((int)numerator >> 0x1f);\n        temp11 = temp11 - 1;\n        numerator = numerator << 1;\n        temp9 = temp9 >> 1;\n        temp5 = temp12;\n    } while (temp11 != 0);\n    if ((numerator | temp2) != 0) {\n        if (temp4 == 0xffffffff) {\n            temp7 = temp7 + 1;\n            temp4 = temp11;\n        }\n        else {\n            temp4 = temp4 + 1 & 0xfffffffe;\n        }\n    }\n    temp4 = temp4 >> 1;\n    if (temp7 << 0x1f < 0) {\n        temp4 = temp4 | 0x80000000;\n    }\n    return CONCAT44((temp7 >> 1) + 0x3fe00000 + (temp3 + -0x3ff >> 1) * 0x100000, temp4);\n}",
            "called": [
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "calculate_statistics_0800426c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "puVar1": "pointer1",
                "puVar2": "pointer2",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "value1",
                "uVar6": "value2",
                "uVar7": "result3",
                "uVar8": "result4",
                "uVar9": "value4"
            },
            "code": "void calculate_statistics_0800426c(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4)\n{\n  uint32_t result1, result2, result3, result4;\n  uint32_t value1, value2, value3, value4;\n  \n  result1 = FUNC_08000ad8();\n  result2 = FUNC_08000adc(param_1, param_2);\n  value1 = FUNC_08000ad8(result1, param_3);\n  value1 = FUNC_08000adc(value1, param_4);\n  FUNC_08000ad8(value1, DAT_080042fc);\n  result3 = FUN_08001078();\n  value2 = FUNC_08000ad8(result2, param_3);\n  value2 = FUNC_08000ad8(value2, param_4);\n  FUNC_08000ad8(value2, DAT_080042fc);\n  result4 = FUN_08001078();\n  result1 = FUNC_08000adc(result1, param_3);\n  result1 = FUNC_08000ad8(result1, param_4);\n  FUNC_08000ad8(result1, DAT_080042fc);\n  value3 = FUN_08001078();\n  result1 = FUNC_08000adc(param_3, result2);\n  result1 = FUNC_08000adc(result1, param_4);\n  FUNC_08000ad8(result1, DAT_080042fc);\n  value4 = FUN_08001078();\n  \n  if (value4 > 999) {\n    value4 = 1000;\n  }\n  if (value3 > 999) {\n    value3 = 1000;\n  }\n  if (result4 > 999) {\n    result4 = 1000;\n  }\n  if (result3 > 999) {\n    result3 = 1000;\n  }\n  \n  *(uint32_t *)(PTR_DAT_08004264 + 8) = result4 & ~((int)result4 >> 0x1f);\n  *(uint32_t *)(PTR_DAT_08004264 + 0xc) = value3 & ~((int)value3 >> 0x1f);\n  *(uint32_t *)(PTR_DAT_08004264 + 4) = result3 & ~((int)result3 >> 0x1f);\n  *(uint32_t *)PTR_DAT_08004264 = value4 & ~((int)value4 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(*(uint32_t *)(PTR_DAT_08004264 + 4));\n  FUN_08003fdc(*(uint32_t *)(PTR_DAT_08004264 + 8));\n  FUN_08003fe8(*(uint32_t *)(PTR_DAT_08004264 + 0xc));\n  *(short *)PTR_DAT_08004268 = (short)*(uint32_t *)PTR_DAT_08004264 + 1000;\n  *(short *)(PTR_DAT_08004268 + 2) = (short)*(uint32_t *)(PTR_DAT_08004264 + 4) + 1000;\n  *(short *)(PTR_DAT_08004268 + 4) = (short)*(uint32_t *)(PTR_DAT_08004264 + 8) + 1000;\n  *(short *)(PTR_DAT_08004268 + 6) = (short)*(uint32_t *)(PTR_DAT_08004264 + 0xc) + 1000;\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08001078",
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_statistics_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "enable_flag_08002538",
                "param_1": "ptr_param",
                "param_2": "param_value",
                "puVar1": "ptr1",
                "puVar2": "ptr2"
            },
            "code": "int enable_flag_08002538(uint **ptr_param, int param_value)\n{\n    uint *ptr1 = *ptr_param;\n    uint *ptr2 = DAT_08002560;\n    if (ptr1 == DAT_08002560) {\n        ptr2 = (uint *)(ptr1[0x11] | 0x8000);\n    }\n    if (ptr1 == DAT_08002560) {\n        ptr1[0x11] = (uint)ptr2;\n    }\n    *ptr1 = *ptr1 | 1;\n    return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "enable_flag_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_1": "data_source",
                "param_2": "data_offset",
                "param_3": "buffer_offset",
                "param_4": "data_length",
                "puVar1": "data_source_ptr",
                "puVar4": "buffer_ptr",
                "uVar2": "buffer_byte",
                "iVar3": "i",
                "iVar5": "data_length"
            },
            "code": "void copy_data_to_buffer_080040e8(unsigned int data_source, int data_offset, int buffer_offset, int data_length)\n{\n    unsigned char *data_source_ptr;\n    unsigned char *buffer_ptr;\n    unsigned char buffer_byte;\n    int i;\n    data_source_ptr = (unsigned char *)data_source;\n    buffer_ptr = (unsigned char *)(buffer_offset - 1);\n    for (i = 0; i < data_length; i++) {\n        buffer_byte = get_data_byte(data_source_ptr, (data_offset + i) & 0xffff, 0x4c, data_length);\n        buffer_ptr++;\n        *buffer_ptr = buffer_byte;\n    }\n    return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_08003298",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "clear_buffer_08004ffc",
                "param_1": "buffer",
                "param_2": "buffer_size",
                "param_3": "arg2",
                "param_4": "arg3",
                "local_78": "buffer_ptr",
                "local_70": "max_buffer_size",
                "local_6c": "arg2_max",
                "local_6a": "max_short",
                "local_68": "current_char",
                "local_64": "arg2_value",
                "uStack_c": "arg3_value"
            },
            "code": "void clear_buffer_08004ffc(char* buffer, int buffer_size, int arg2, int arg3) {\n  char* buffer_ptr [2];\n  int max_buffer_size = 0x7fffffff;\n  int arg2_max = 0x7fffffff;\n  int max_short = 0xffff;\n  buffer_ptr[0] = buffer;\n  char* current_char = buffer;\n  int arg2_value = arg2;\n  int arg3_value = arg3;\n  some_other_function(*(int *)PTR_PTR_DAT_08005040, buffer_ptr, arg2_value);\n  *buffer_ptr[0] = 0;\n  return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "clear_buffer_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_data_from_pointer_0800115c",
                "PTR_DAT_08001164": "pointer_address"
            },
            "code": "int get_data_from_pointer_0800115c() {\n  int* PTR_DAT_08001164 = PTR_DAT_08001164;\n  int data = *PTR_DAT_08001164;\n  return data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_0800209c",
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_080016f4",
                "FUN_08001b58",
                "FUN_08001828",
                "thunk_FUN_0800115c"
            ],
            "imported": false,
            "current_name": "get_data_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "processSensorData_08002d88",
                "param_1": "sensorDataByte",
                "param_2": "dataLength",
                "param_3": "address",
                "param_4": "deviceAddress",
                "puVar3": "sensorDataByte",
                "puVar4": "sensorDataProcessed",
                "puVar5": "sensorDataOffset",
                "puVar6": "sensorDataScale",
                "iVar7": "status",
                "uVar8": "processedData",
                "uVar9": "scaleFactor",
                "local_28": "sensorDataX",
                "uStack_26": "sensorDataYHigh",
                "uStack_25": "sensorDataYLow",
                "local_24": "sensorDataZHigh",
                "local_23": "sensorDataZLow",
                "local_22": "isDataReady"
            },
            "code": "void processSensorData_08002d88(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n    int status = 0;\n    uint16_t sensorData[3] = {0};\n    uint8_t sensorDataByte[6] = {0};\n    uint8_t isDataReady = 0;\n    \n    status = readSensorData(sensorDataByte, 0xD7, param1, param2);\n    if (status >= 0)\n    {\n        isDataReady = 1;\n        \n        sensorData[0] = (sensorDataByte[0] << 8) | sensorDataByte[1];\n        sensorData[1] = (sensorDataByte[2] << 8) | sensorDataByte[3];\n        sensorData[2] = (sensorDataByte[4] << 8) | sensorDataByte[5];\n        \n        if ((int)(local_22 << 0x1c) < 0)\n        {\n            *(short *)(DAT_08002e94 + 2) = *(short *)(DAT_08002e94 + 2) + 1;\n        }\n        else\n        {\n            uint16_t sensorDataX = sensorData[0];\n            uint16_t sensorDataY = sensorData[1];\n            uint16_t sensorDataZ = sensorData[2];\n            \n            uint32_t sensorDataXYZ[3] = {0};\n            sensorDataXYZ[0] = (uint32_t)sensorDataX;\n            sensorDataXYZ[1] = (uint32_t)sensorDataY;\n            sensorDataXYZ[2] = (uint32_t)sensorDataZ;\n            \n            uint32_t sensorDataXYZProcessed[3] = {0};\n            sensorDataXYZProcessed[0] = processSensorData_08002d88XYZ(sensorDataXYZ, *(uint32_t*)PTR_DAT_08002e88);\n            sensorDataXYZProcessed[1] = processSensorData_08002d88XYZ(&sensorDataXYZ[1], *(uint32_t*)(PTR_DAT_08002e98));\n            sensorDataXYZProcessed[2] = processSensorData_08002d88XYZ(&sensorDataXYZ[2], *(uint32_t*)(PTR_DAT_08002e9c));\n            \n            *(uint32_t*)PTR_DAT_08002e90 = sensorDataXYZProcessed[0];\n            *(uint32_t*)(PTR_DAT_08002e90 + 4) = sensorDataXYZProcessed[1];\n            *(uint32_t*)(PTR_DAT_08002e90 + 8) = sensorDataXYZProcessed[2];\n        }\n    }\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "processSensorData_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_hash_08000c44",
                "param_1": "num",
                "uVar2": "shift",
                "uVar3": "result",
                "iVar1": "leading_zeros",
                "iVar4": "base",
                "uVar5": "high_bits",
                "count_leading_zeroes": "count_leading_zeros"
            },
            "code": "uint calculate_hash_08000c44(uint num)\n{\n  uint leading_zeros = 0;\n  for (int i = 31; i >= 0; i--)\n  {\n    if ((num >> i) & 1) break;\n    leading_zeros++;\n  }\n  return leading_zeros;\n}\n\nuint calculate_hash_08000c44(uint num)\n{\n  uint is_negative = num & 0x80000000;\n  if ((int)is_negative < 0) num = -num;\n  if (num == 0) return 0;\n  uint leading_zeros = calculate_hash_08000c44(num);\n  uint shift = leading_zeros - 8;\n  uint base = ((is_negative | 0x4b000000) - 0x800000) + shift * -0x800000;\n  if (leading_zeros > 7)\n  {\n    uint shift_amount = shift & 0xff;\n    uint high_bits = 0 << shift_amount;\n    uint result = base + (num << shift_amount) + (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < high_bits);\n    if (high_bits == 0x80000000) result &= 0xfffffffe;\n    return result;\n  }\n  uint shift_amount = (leading_zeros + 0x18U) & 0xff;\n  uint high_bits = num << shift_amount;\n  uint result = base + ((num >> (0x20 - shift_amount & 0xff)) - ((int)high_bits >> 0x1f));\n  if ((high_bits & 0x7fffffff) == 0) result &= ~(high_bits >> 0x1f);\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08000a04(uint input1, int input2, uint input3, int input4) {\n  int is_input2_valid = ((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0);\n  int is_input4_valid = ((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0));\n  return !(is_input2_valid || is_input4_valid);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "params",
                "iVar1": "val1",
                "iVar2": "val2",
                "uVar3": "percent3",
                "iVar4": "percent1",
                "iVar5": "val5",
                "iVar6": "current_val"
            },
            "code": "void update_values_080025e8(int *params) {\n  int current_val = *params;\n  uint uVar3 = params[4];\n  *(uint *)(current_val + 0x10) = *(uint *)(current_val + 0x10) & 0xffffcfff | params[3];\n  *(uint *)(current_val + 0xc) = params[2] | uVar3 | params[5] | *(uint *)(current_val + 0xc) & 0xffffe9f3;\n  *(uint *)(current_val + 0x14) = *(uint *)(current_val + 0x14) & 0xfffffcff | params[6];\n  if (current_val == DAT_08002720) {\n    int val1 = FUN_08002250();\n    int val2 = FUN_08002250();\n    int val3 = FUN_08002250();\n    int val4 = FUN_08002250();\n    int val5 = params[1];\n    int percent1 = (int)(((ulonglong)(uint)(val1 * 0x19) / (ulonglong)(uint)(val5 << 2)) / 100);\n    int percent2 = (uint)(val2 * 0x19) / (uint)(val5 << 2) + (int)(((ulonglong)(uint)(val3 * 0x19) / (ulonglong)(uint)(val5 << 2)) / 100) * -100;\n    uint percent3 = (uint)(val4 * 0x19) / (uint)(params[1] << 2);\n  }\n  else {\n    int val1 = FUN_08002220();\n    int val2 = FUN_08002220();\n    int val3 = FUN_08002220();\n    int val4 = FUN_08002220();\n    int val5 = params[1];\n    int percent1 = (int)(((ulonglong)(uint)(val1 * 0x19) / (ulonglong)(uint)(val5 << 2)) / 100);\n    int percent2 = (uint)(val2 * 0x19) / (uint)(val5 << 2) + (int)(((ulonglong)(uint)(val3 * 0x19) / (ulonglong)(uint)(val5 << 2)) / 100) * -100;\n    uint percent3 = (uint)(val4 * 0x19) / (uint)(params[1] << 2);\n  }\n  *(uint *)(current_val + 8) = (((percent3 + (int)(((ulonglong)(uint)(val1 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100)) * -100) * 0x10 + 0x32) / 100 & 0xf | (percent2 * 0x10 + 0x32U) / 100 & 0xf0) + percent1 * 0x10;\n}",
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "convert_data_from_MPU9250_08002b48",
                "in_r3": "data",
                "local_18": "low_bits",
                "local_14": "high_bits",
                "puVar1": "buffer",
                "PTR_s____Src_MPU9250_c_08002be4": "MPU9250_address",
                "PTR_DAT_08002be8": "data_buffer_ptr",
                "PTR_DAT_08002bec": "converted_data_ptr",
                "uVar2": "converted_value"
            },
            "code": "void convert_data_from_MPU9250_08002b48(void)\n{\n  uint16_t low_bits;\n  uint32_t high_bits;\n  float converted_value;\n  uint8_t buffer[6];\n  memset(buffer, 0, sizeof(buffer));\n  buffer[0] = 0xd0;\n  buffer[1] = 0x3b;\n  send_data_to_MPU9250(buffer, 6);\n  low_bits = (uint16_t)buffer[1] << 8 | buffer[0];\n  high_bits = (uint32_t)buffer[5] << 24 | (uint32_t)buffer[4] << 16 | (uint32_t)buffer[3] << 8 | buffer[2];\n  converted_value = (float)(low_bits - 32768) / 32768.0f * 250.0f;\n  send_float_to_MPU9250(converted_value);\n  converted_value = (float)(high_bits - 2147483648) / 2147483648.0f * 4.0f;\n  send_float_to_MPU9250(converted_value);\n  converted_value = (float)(low_bits - 32768) / 32768.0f * 2.0f;\n  send_float_to_MPU9250(converted_value);\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_data_from_MPU9250_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_data_and_clear_memory_08004f68",
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_08004fa8": "data_ptr_start",
                "PTR_DAT_08004fa0": "data_start",
                "PTR_DAT_08004fa4": "data_end",
                "DAT_08004f9c": "source_data_start",
                "execute_function_1": "execute_first_function",
                "execute_function_2": "execute_second_function",
                "execute_function_3": "execute_third_function"
            },
            "code": "void copy_data_and_clear_memory_08004f68(void)\n{\n    int index;\n    undefined4 *data_ptr;\n    code *jump_table;\n    for (index = 0; PTR_DAT_08004fa0 + index < PTR_DAT_08004fa4; index += 4) {\n        *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n    }\n    for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n        *data_ptr = 0;\n    }\n    execute_function_1();\n    execute_function_2();\n    jump_table = (code *)0x8004f9a;\n    execute_function_3(jump_table);\n}",
            "called": [
                "FUN_08004fb4",
                "FUN_080041ae",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_clear_memory_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "updateValue_08001170",
                "param_1": "valueToSet",
                "PTR_DAT_08001190": "ptr",
                "oldValue": "oldValue",
                "mask": "mask",
                "newValue": "newValue"
            },
            "code": "void updateValue_08001170(uint valueToSet) {\n    uint *PTR_DAT_08001190 = (uint *)(DAT_08001190 + 0xc);\n    uint oldValue = *PTR_DAT_08001190;\n    uint mask = 0xf8ff;\n    uint newValue = (valueToSet & 7) << 8 | 0x5fa0000;\n    *PTR_DAT_08001190 = (oldValue & mask) | newValue;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "updateValue_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "read_MPU9250_data_08002bf0",
                "local_20": "temperature",
                "local_1c": "gyro_z",
                "PTR_s____Src_MPU9250_c_08002c9c": "register_address",
                "PTR_DAT_08002ca0": "data_buffer",
                "PTR_DAT_08002ca4": "puVar1",
                "PTR_DAT_08002cac": "puVar2",
                "FUNC_08000cec": "combine_data",
                "FUN_08000c44": "shift_bits",
                "FUN_08000ad8": "add_data",
                "DAT_08002ca8": "scaling_factor"
            },
            "code": "void read_MPU9250_data_08002bf0(void)\n{\n    uint8_t *PTR_DAT_08002ca0;\n    uint8_t *PTR_s____Src_MPU9250_c_08002c9c;\n    uint16_t temperature;\n    uint16_t gyro_x;\n    uint16_t gyro_y;\n    uint16_t gyro_z;\n    uint16_t accel_x;\n    uint16_t accel_y;\n    uint16_t accel_z;\n    PTR_DAT_08002ca0 = malloc(14);\n    PTR_s____Src_MPU9250_c_08002c9c = malloc(1);\n    *PTR_s____Src_MPU9250_c_08002c9c = 0x3B;\n    read_register(0x75, PTR_DAT_08002ca0, 1);\n    read_register(*PTR_s____Src_MPU9250_c_08002c9c, PTR_DAT_08002ca0, 14);\n    temperature = (PTR_DAT_08002ca0[0] << 8) | PTR_DAT_08002ca0[1];\n    gyro_x = (PTR_DAT_08002ca0[2] << 8) | PTR_DAT_08002ca0[3];\n    gyro_y = (PTR_DAT_08002ca0[4] << 8) | PTR_DAT_08002ca0[5];\n    gyro_z = (PTR_DAT_08002ca0[6] << 8) | PTR_DAT_08002ca0[7];\n    accel_x = (PTR_DAT_08002ca0[8] << 8) | PTR_DAT_08002ca0[9];\n    accel_y = (PTR_DAT_08002ca0[10] << 8) | PTR_DAT_08002ca0[11];\n    accel_z = (PTR_DAT_08002ca0[12] << 8) | PTR_DAT_08002ca0[13];\n    free(PTR_DAT_08002ca0);\n    free(PTR_s____Src_MPU9250_c_08002c9c);\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "read_MPU9250_data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_MPU9250_08002ad0",
                "FUN_0800407c": "set_MPU9250_register",
                "0xd0": "device_address",
                "0x75": "register_address",
                "PTR_s____Src_MPU9250_c_08002b44": "register_data",
                "0x3b": "data_length",
                "0x6b": "gyroscope_config_register_address",
                "0x80": "gyroscope_config_register_data",
                "0x6c": "accelerometer_config_register_address",
                "0x19": "sample_rate_divider_address",
                "0x1d": "accelerometer_config2_register_address",
                "0x1a": "low_pass_filter_register_address",
                "0x1b": "interrupt_enable_register_address",
                "0x10": "interrupt_enable_register_data",
                "0x1c": "interrupt_status_register_address",
                "8": "interrupt_status_register_data"
            },
            "code": "void initialize_MPU9250_08002ad0(void)\n{\n  set_MPU9250_register(0xd0, 0x75, PTR_s____Src_MPU9250_c_08002b44, 0x3b);\n  set_MPU9250_register(0xd0, 0x6b, 0x80, 1);\n  set_MPU9250_register(0xd0, 0x6b, 1);\n  set_MPU9250_register(0xd0, 0x6c, 0, 1);\n  set_MPU9250_register(0xd0, 0x19, 0, 1);\n  set_MPU9250_register(0xd0, 0x1d, 3, 1);\n  set_MPU9250_register(0xd0, 0x1a, 3, 1);\n  set_MPU9250_register(0xd0, 0x1b, 0x10, 1);\n  set_MPU9250_register(0xd0, 0x1c, 8, 1);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "initialize_MPU9250_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_for_zero_values_08001050",
                "in_CY": "PTR_CY",
                "in_ZR": "PTR_ZR"
            },
            "code": "bool check_for_zero_values_08001050(void)\n{\n  bool is_CY_zero = !(bool)in_CY;\n  bool is_ZR_zero = (bool)in_ZR;\n  FUN_08000ffc();\n  return is_CY_zero || is_ZR_zero;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "check_for_zero_values_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "is_CY_false_or_ZR_true_080009c8",
                "in_ZR": "zero_register",
                "in_CY": "carry_register"
            },
            "code": "bool is_CY_false_or_ZR_true_080009c8(void)\n{\n  undefined zero_register;\n  undefined carry_register;\n  call_function_08000990();\n  return !(bool)carry_register || (bool)zero_register;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "puVar1": "result_ptr",
                "uVar2": "first_value",
                "uVar3": "third_value",
                "uVar4": "fourth_value"
            },
            "code": "void calculate_result_08002ed4(void)\n{\n  undefined *result_ptr;\n  undefined4 second_value;\n  undefined4 third_value;\n  undefined4 fourth_value;\n  \n  result_ptr = PTR_DAT_08002ee4;\n  third_value = *(undefined4 *)PTR_DAT_08002ee0;\n  fourth_value = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  undefined4 first_value = FUNC_08000ad8(0x3f800000,fourth_value);\n  first_value = FUNC_08000cec(first_value,third_value);\n  third_value = FUNC_08000cec(fourth_value,*(undefined4 *)result_ptr);\n  first_value = FUNC_08000adc(third_value,first_value);\n  *(undefined4 *)result_ptr = first_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "combined_input",
                "bVar1": "is_negative_xor",
                "bVar5": "is_zero"
            },
            "code": "uint calculate_result_08000f9c(uint input_1, uint input_2) {\n  bool is_negative_1 = (int)input_1 >> 0x18 == -1;\n  bool is_negative_2 = (int)input_2 >> 0x18 == -1;\n  uint doubled_input_1 = input_1 * 2;\n  uint doubled_input_2 = input_2 * 2;\n  \n  if ((is_negative_1 || is_negative_2) && ((is_negative_1 && ((input_1 & 0x7fffff) != 0)) || (is_negative_2 && ((input_2 & 0x7fffff) != 0)))) {\n    return 1;\n  }\n  \n  uint combined_input = doubled_input_1 | input_2 & 0x7fffffff;\n  bool is_zero = combined_input == 0;\n  \n  if (!is_zero) {\n    uint xor_result = input_1 ^ input_2;\n    is_zero = xor_result == 0;\n  }\n  \n  bool is_negative_xor = -1 < (int)(input_1 ^ input_2);\n  \n  if (is_negative_xor && doubled_input_2 <= doubled_input_1 && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  \n  if (!is_negative_xor || doubled_input_2 > doubled_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  \n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  \n  return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000404",
                "FUN_080009c8",
                "FUN_080071c0",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "reverse_bits_08000c3c",
                "param_1": "number",
                "iVar1": "leading_zeroes",
                "uVar2": "shift",
                "iVar3": "factor",
                "uVar4": "carry",
                "shifted_number": "shifted_number",
                "shifted_factor": "shifted_factor",
                "carry": "carry",
                "result": "result"
            },
            "code": "uint reverse_bits_08000c3c(uint number)\n{\n  int leading_zeroes = count_leading_zeroes(number);\n  uint shift = leading_zeroes - 8;\n  int factor = shift * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_number = number << (shift & 0xff);\n    uint shifted_factor = 0U >> (0x20 - shift & 0xff);\n    uint carry = (uint)(0x7fffffff < shifted_factor);\n    uint result = factor + shifted_number + shifted_factor + carry;\n    if ((shifted_number & 0x80000000) != 0) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_number = number << (leading_zeroes + 0x18U & 0xff);\n  int shifted_factor = (int)(number >> (0x20 - (leading_zeroes + 0x18U) & 0xff));\n  int carry = (int)(shifted_number >> 0x1f);\n  uint result = factor + shifted_factor - carry;\n  if ((shifted_number & 0x7fffffff) == 0) {\n    result = result & ~(shifted_number >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "copy_and_process_data_080043bc",
                "puVar3": "source_ptr",
                "puVar4": "destination_ptr",
                "uVar1": "first_value",
                "uVar2": "second_value",
                "local_24": "buffer",
                "local_1c": "buffer2"
            },
            "code": "void copy_and_process_data_080043bc(void)\n{\n  undefined4 first_value;\n  undefined4 second_value;\n  undefined4 *source_ptr;\n  undefined4 *destination_ptr;\n  undefined4 buffer [2];\n  undefined2 buffer2 [6];\n  \n  source_ptr = buffer;\n  destination_ptr = (undefined4 *)source_data_pointer;\n  do {\n    first_value = *destination_ptr;\n    second_value = destination_ptr[1];\n    destination_ptr = destination_ptr + 2;\n    *source_ptr = first_value;\n    source_ptr[1] = second_value;\n    source_ptr = source_ptr + 2;\n  } while (destination_ptr != (undefined4 *)(source_data_pointer + 0x10));\n  *(undefined2 *)source_ptr = *(undefined2 *)destination_ptr;\n  process_data(0x66, buffer, 0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_process_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "check_param_08001214",
                "param_1": "param",
                "iVar2": "data",
                "puVar1": "ptr"
            },
            "code": "int check_param_08001214(unsigned int param) {\n  int data = DAT_0800123c;\n  unsigned int* ptr = DAT_08001238;\n  if (param - 1U < 0x1000000) {\n    ptr[1] = param - 1U;\n    *(unsigned char*)(data + 0x23) = 0xf0;\n    ptr[2] = 0;\n    *ptr = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "check_param_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_data_at_offset_08003fc4",
                "param_1": "data",
                "PTR_DAT_08003fcc": "ptr"
            },
            "code": "void set_data_at_offset_08003fc4(int data) {\n\tint* PTR_DAT_08003fcc = *(int*)PTR_DAT_08003fcc;\n\tPTR_DAT_08003fcc[0x10] = data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_data_at_offset_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "reverse_bits_08000404",
                "param_1": "num",
                "uVar1": "upper_bits_high",
                "uVar2": "num_abs",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes",
                "uVar5": "shift_amount_overflow",
                "uVar6": "num_sign_bit",
                "bVar7": "leading_zeroes_negative",
                "bVar8": "leading_zeroes_zero",
                "bVar9": "shift_amount_overflow_signed",
                "in_r12": "unused_variable"
            },
            "code": "ulonglong reverse_bits_08000404(uint num) {\n    if (num == 0) {\n        return 0;\n    }\n    uint num_abs = num;\n    if ((int)num < 0) {\n        num_abs = -num;\n    }\n    uint leading_zeroes = count_leading_zeroes(num_abs);\n    uint shift_amount = leading_zeroes + 21;\n    uint shift_amount_overflow = shift_amount - 32;\n    uint shift_amount_underflow = 11 - leading_zeroes;\n    uint upper_bits = 0;\n    uint lower_bits = 0;\n    if (shift_amount_overflow < 0) {\n        upper_bits = (num_abs << shift_amount) | (num & 0x80000000);\n    } else if (shift_amount_overflow > 0) {\n        lower_bits = num_abs >> shift_amount_overflow;\n        upper_bits = (num_abs << shift_amount) | (num & 0x80000000);\n    } else {\n        lower_bits = num_abs >> 11;\n        upper_bits = (num_abs << 21) | (num & 0x80000000);\n    }\n    if (shift_amount < 1075) {\n        return CONCAT44(upper_bits + (1074 - shift_amount) * 0x100000 | (num & 0x80000000), lower_bits);\n    }\n    uint shift_amount_underflow_overflow = ~(1074 - shift_amount);\n    if (shift_amount_underflow_overflow > 30) {\n        return CONCAT44(num, lower_bits >> (shift_amount_underflow_overflow - 31)) & 0x80000000ffffffff;\n    }\n    int shift_amount_underflow_overflow_shifted = shift_amount_underflow_overflow - 19;\n    if (shift_amount_underflow_overflow_shifted == 0 || shift_amount_underflow_overflow_shifted < 0 != SCARRY4(shift_amount_underflow_overflow, 12)) {\n        shift_amount_underflow_overflow++;\n        return CONCAT44((num & 0x80000000) | lower_bits >> shift_amount_underflow_overflow,\n                        upper_bits >> shift_amount_underflow_overflow | lower_bits << (32 - shift_amount_underflow_overflow));\n    }\n    return CONCAT44(num, upper_bits >> (12 - shift_amount_underflow_overflow_shifted) | lower_bits << (shift_amount_underflow_overflow_shifted)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "process_data_0800209c",
                "param_1": "data",
                "param_2": "size",
                "cVar1": "char1",
                "cVar2": "char2",
                "puVar3": "data_ptr",
                "iVar4": "first_element_shifted_copy",
                "iVar5": "fun_result",
                "uVar6": "first_element",
                "uVar7": "count_leading_zeroes_result",
                "DAT_08002204": "data_ptr",
                "DAT_08002208": "data_ptr2",
                "PTR_DAT_08002210": "ptr_dat_08002210",
                "PTR_DAT_0800220c": "ptr_dat_0800220c"
            },
            "code": "int process_data_0800209c(uint *data, uint size) {\n  uint *DAT_08002204 = DAT_08002204;\n  if ((size <= (*DAT_08002204 & 7)) || (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size == (*DAT_08002204 & 7))) {\n    uint first_element = *data;\n    if ((int)(first_element << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | data[2];\n    }\n    uint *DAT_08002208 = DAT_08002208;\n    int first_element_shifted = first_element << 0x1f;\n    if (-1 < first_element_shifted) {\n      DAT_08002208 = DAT_08002204;\n      if ((size < (*DAT_08002204 & 7)) && (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size != (*DAT_08002208 & 7))) {\n        return 1;\n      }\n      DAT_08002208 = DAT_08002208;\n      uint first_element_copy = *data;\n      if ((first_element_copy & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | data[3];\n      }\n      if ((int)(first_element_copy << 0x1c) < 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xffffc7ff | data[4] << 3;\n      }\n      uint result1 = FUN_08002008();\n      uint result2 = count_leading_zeroes(0xf000000);\n      *(uint *)PTR_DAT_08002210 = result1 >> PTR_DAT_0800220c[(DAT_08002208[1] & 0xf0) >> (result2 & 0xff)];\n      FUN_08001104(0);\n      return 0;\n    }\n    uint second_element = data[1];\n    if (second_element == 1) {\n      char cVar1 = '\\x01';\n      char cVar2 = '\\0';\n    }\n    else {\n      if (second_element == 2) {\n        uint DAT_08002204_copy = *DAT_08002208;\n        goto LAB_08002176;\n      }\n      char cVar1 = '\\0';\n      char cVar2 = '\\x01';\n    }\n    uint count_leading_zeroes_result = count_leading_zeroes((uint)(byte)(cVar1 << 6) << 0x18 | (uint)(byte)(cVar2 << 6) << 8);\n    count_leading_zeroes_result = (*DAT_08002208 >> (count_leading_zeroes_result & 0x1f)) << 0x1f;\n    if ((int)count_leading_zeroes_result < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | second_element;\n      int first_element_shifted_copy = first_element_shifted;\n      int fun_result1 = FUN_0800115c(first_element_shifted_copy, count_leading_zeroes_result);\n      if (data[1] == 1) {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 4) goto LAB_080020ba;\n          int fun_result2 = FUN_0800115c();\n        } while ((uint)(fun_result2 - fun_result1) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 8) goto LAB_080020ba;\n          int fun_result3 = FUN_0800115c();\n        } while ((uint)(fun_result3 - fun_result1) < 0x1389);\n      }\n      else {\n        do {\n          if ((DAT_08002208[1] & 0xc) == 0) goto LAB_080020ba;\n          int fun_result4 = FUN_0800115c();\n        } while ((uint)(fun_result4 - fun_result1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "process_data_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "i2c_transfer_0800403c",
                "param_1": "device_address",
                "param_2": "register_address",
                "param_3": "data",
                "param_4": "error_check",
                "iVar1": "result",
                "local_14": "local_data",
                "PTR_DAT_08004074": "i2c_device",
                "PTR_s____Src_i2c_c_08004078": "error_message",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void i2c_transfer_0800403c(unsigned int device_address, unsigned int register_address, unsigned char data, int error_check) {\n    int result;\n    unsigned char local_data[1];\n    local_data[0] = data;\n    result = i2c_write_read(PTR_DAT_08004074, device_address, register_address, 1, local_data, 1, 200);\n    if (result != 0) {\n        print_error(PTR_s____Src_i2c_c_08004078, 0x1b);\n    }\n    if (error_check != 0) {\n        do_nothing(0x32);\n    }\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "i2c_transfer_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08004a30",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08004a84",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "shifted_bits",
                "iVar3": "diff",
                "uVar4": "masked_param4",
                "uVar5": "result",
                "uVar6": "concatenated_values",
                "uVar7": "temp1",
                "uVar8": "temp2",
                "max_value": "PTR_DAT_08006220",
                "abs_param1": "abs_param1",
                "abs_param2": "abs_param2",
                "abs_param3": "abs_param3",
                "abs_param4": "abs_param4",
                "high_bits": "high_bits"
            },
            "code": "ulonglong calculate_result_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n    uint abs_param3 = abs(param3);\n    uint abs_param1 = abs(param1);\n    uint abs_param4 = abs(param4);\n    uint abs_param2 = abs(param2);\n    \n    ulonglong result = ((ulonglong)PTR_DAT_08006214 << 32) | PTR_DAT_08006210;\n    result |= ((ulonglong)PTR_DAT_08006204 << 32) | PTR_DAT_08006200;\n    uint max_value = PTR_DAT_08006220;\n    uint masked_param4 = abs_param4 & 0x7fffffff;\n    if (max_value < (masked_param4 | (-abs_param3 | abs_param3) >> 0x1f) || max_value < (abs_param2 | (-abs_param1 | abs_param1) >> 0x1f)) {\n        result = FUNC_0800016c(param1, param2, param3, param4, param4);\n        return result;\n    }\n    if ((param4 + 0xc0100000 | param3) == 0) {\n        result = FUNC_08006d68();\n        return result;\n    }\n    uint uVar1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n    if ((param1 | abs_param2) == 0) {\n        if (uVar1 == 2) {\n            return ((ulonglong)PTR_DAT_080061fc << 32) | PTR_DAT_080061f8;\n        }\n        if (uVar1 != 3) {\n            return ((ulonglong)param2 << 32) | param1;\n        }\n    }\n    else {\n        if ((abs_param3 | masked_param4) != 0) {\n            if (masked_param4 == max_value) {\n                if (abs_param2 == masked_param4) {\n                    if (uVar1 == 2) {\n                        return ((ulonglong)PTR_DAT_080061ec << 32) | PTR_DAT_080061e8;\n                    }\n                    if (uVar1 == 3) {\n                        return ((ulonglong)PTR_DAT_080061f4 << 32) | PTR_DAT_080061f0;\n                    }\n                    if (uVar1 != 1) {\n                        return ((ulonglong)PTR_DAT_0800621c << 32) | PTR_DAT_08006218;\n                    }\n                    return ((ulonglong)PTR_DAT_080061e4 << 32) | PTR_DAT_080061e0;\n                }\n                if (uVar1 == 2) {\n                    return ((ulonglong)PTR_DAT_080061fc << 32) | PTR_DAT_080061f8;\n                }\n                if (uVar1 == 3) {\n                    return result;\n                }\n                if (uVar1 == 1) {\n                    return 0x8000000000000000;\n                }\n                return 0;\n            }\n            int diff = (int)(abs_param2 - masked_param4) >> 0x14;\n            if (diff < 0x3d) {\n                if (((int)param4 < 0) && (diff + 0x3c < 0 != SCARRY4(diff, 0x3c))) {\n                    result = 0;\n                }\n                else {\n                    FUNC_08000724(param1, param2);\n                    do_nothing_0800708c();\n                    result = FUNC_08006d68();\n                }\n            }\n            int high_bits = (int)(result >> 0x20);\n            if (uVar1 != 1) {\n                if (uVar1 == 2) {\n                    ulonglong temp1 = FUNC_08000168((int)result, high_bits, PTR_DAT_08006208, PTR_DAT_0800620c);\n                    ulonglong temp2 = ((ulonglong)PTR_DAT_080061fc << 32) | PTR_DAT_080061f8;\n                    result = FUNC_08000168((int)temp1, (int)(temp1 >> 0x20), (int)temp2, (int)(temp2 >> 0x20));\n                }\n                else {\n                    if (uVar1 == 0) {\n                        return result;\n                    }\n                    ulonglong temp1 = FUNC_08000168((int)result, high_bits, PTR_DAT_08006208, PTR_DAT_0800620c);\n                    ulonglong temp2 = ((ulonglong)PTR_DAT_080061fc << 32) | PTR_DAT_080061f8;\n                    result = FUNC_08000168((int)temp2, (int)(temp2 >> 0x20), (int)temp1, (int)(temp1 >> 0x20));\n                }\n            }\n            else {\n                result = result & 0xffffffff | (ulonglong)(high_bits + 0x80000000) << 0x20;\n            }\n        }\n        else {\n            if ((int)param2 < 0) {\n                result = ((ulonglong)PTR_DAT_080061dc << 32) | PTR_DAT_080061d8;\n            }\n        }\n    }\n    return result;\n}\n",
            "called": [
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "unsigned_var1",
                "uVar2": "unsigned_var2",
                "iVar3": "signed_var1",
                "uVar4": "unsigned_var4",
                "uVar5": "result1",
                "uVar6": "result2",
                "uVar7": "undefined_var1",
                "uVar8": "undefined_var2"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n  uint unsigned_var1;\n  uint unsigned_var2;\n  int signed_var1;\n  uint unsigned_var4;\n  ulonglong result1;\n  ulonglong result2;\n  undefined8 undefined_var1;\n  undefined8 undefined_var2;\n  result2 = CONCAT44(DAT_08006214, DAT_08006210);\n  result1 = CONCAT44(DAT_08006204, DAT_08006200);\n  unsigned_var4 = param4 & 0x7fffffff;\n  if ((DAT_08006220 < (unsigned_var4 | (-param3 | param3) >> 0x1f)) || (unsigned_var2 = param2 & 0x7fffffff, DAT_08006220 < (unsigned_var2 | (-param1 | param1) >> 0x1f))) {\n    result1 = FUNC_0800016c(param1, param2, param3, param4, param4);\n    return result1;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result1 = FUNC_08006d68();\n    return result1;\n  }\n  unsigned_var1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | unsigned_var2) == 0) {\n    if (unsigned_var1 == 2) {\n      return CONCAT44(DAT_080061fc, DAT_080061f8);\n    }\n    if (unsigned_var1 != 3) {\n      return CONCAT44(param2, param1);\n    }\n  }\n  else {\n    if ((param3 | unsigned_var4) != 0) {\n      if (unsigned_var4 == DAT_08006220) {\n        if (unsigned_var2 == unsigned_var4) {\n          if (unsigned_var1 == 2) {\n            return CONCAT44(DAT_080061ec, DAT_080061e8);\n          }\n          if (unsigned_var1 == 3) {\n            return CONCAT44(DAT_080061f4, DAT_080061f0);\n          }\n          if (unsigned_var1 != 1) {\n            return CONCAT44(DAT_0800621c, DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4, DAT_080061e0);\n        }\n        if (unsigned_var1 == 2) {\n          return CONCAT44(DAT_080061fc, DAT_080061f8);\n        }\n        if (unsigned_var1 == 3) {\n          return result1;\n        }\n        if (unsigned_var1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (unsigned_var2 != DAT_08006220) {\n        signed_var1 = (int)(unsigned_var2 - unsigned_var4) >> 0x14;\n        if (signed_var1 < 0x3d) {\n          if (((int)param4 < 0) && (signed_var1 + 0x3c < 0 != SCARRY4(signed_var1, 0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            result2 = FUNC_08006d68();\n          }\n        }\n        signed_var1 = (int)(result2 >> 0x20);\n        if (unsigned_var1 != 1) {\n          if (unsigned_var1 == 2) {\n            undefined_var2 = FUNC_08000168((int)result2, signed_var1, DAT_08006208, DAT_0800620c);\n            undefined_var1 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          else {\n            if (unsigned_var1 == 0) {\n              return result2;\n            }\n            undefined_var1 = FUNC_08000168((int)result2, signed_var1, DAT_08006208, DAT_0800620c);\n            undefined_var2 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          result1 = FUNC_08000168((int)undefined_var1, (int)((ulonglong)undefined_var1 >> 0x20), (int)undefined_var2, (int)((ulonglong)undefined_var2 >> 0x20));\n          return result1;\n        }\n        return result2 & 0xffffffff | (ulonglong)(signed_var1 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = result2;\n    if ((int)param2 < 0) {\n      result1 = CONCAT44(DAT_080061dc, DAT_080061d8);\n    }\n  }\n  return result1;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "process_data_08004cac",
                "param_1": "data",
                "puVar1": "data_ptr",
                "PTR_DAT_08004cc4": "data_start",
                "FUN_08004ffc": "send_data",
                "PTR_DAT_08004cc8": "data_end",
                "FUN_08004c8c": "cleanup_data"
            },
            "code": "void process_data_08004cac(undefined4 data){\n  undefined *data_ptr;\n  data_ptr = PTR_DAT_08004cc4;\n  send_data(PTR_DAT_08004cc4, PTR_DAT_08004cc8, data);\n  cleanup_data(data_ptr);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "decode_string_data_08004c18",
                "param_1": "input_data",
                "puVar1": "data_ptr",
                "iVar2": "counter_1",
                "iVar3": "counter_2",
                "uVar4": "flag_value",
                "puVar5": "data_array_ptr"
            },
            "code": "int decode_string_data_08004c18(unsigned char input_data) {\n  unsigned char *data_ptr;\n  int counter_1;\n  int counter_2;\n  unsigned char flag_value;\n  unsigned short *data_array_ptr;\n  data_array_ptr = (unsigned short *)data_array;\n  *data_array = input_data;\n  data_ptr = data_array + 4;\n  if ((data_array[0x39] == '\\x01') || (data_array[0x39] == '\"')) {\n    if (data_array_ptr == (unsigned short *)0x0) {\n      return 1;\n    }\n    if (data_array[0x38] != '\\x01') {\n      data_array[0x38] = 1;\n      *(int *)(data_ptr + 0x3c) = 0;\n      *(unsigned short *)(data_ptr + 0x24) = 1;\n      if (data_array[0x39] == '\"') {\n        flag_value = 0x32;\n      }\n      else {\n        flag_value = 0x12;\n      }\n      *(unsigned short *)(data_ptr + 0x26) = 1;\n      data_array[0x39] = flag_value;\nLAB_080027c4:\n      do {\n        if (*(short *)(data_ptr + 0x26) == 0) {\n          counter_1 = get_input_data();\n          do {\n            if (**(int **)data_ptr << 0x19 < 0) {\n              if (data_array[0x39] == '2') {\n                flag_value = 0x22;\n              }\n              else {\n                flag_value = 1;\n              }\n              data_array[0x39] = flag_value;\n              data_array[0x38] = 0;\n              return 0;\n            }\n            counter_2 = get_input_data();\n          } while ((unsigned int)(counter_2 - counter_1) < 6);\nLAB_0800281c:\n          counter_1 = *(int *)data_ptr;\n          *(unsigned int *)(counter_1 + 0xc) = *(unsigned int *)(counter_1 + 0xc) & 0xffffff7f;\n          *(unsigned int *)(counter_1 + 0xc) = *(unsigned int *)(counter_1 + 0xc) & 0xffffffdf;\n          *(unsigned int *)(counter_1 + 0xc) = *(unsigned int *)(counter_1 + 0xc) & 0xfffffeff;\n          *(unsigned int *)(counter_1 + 0x14) = *(unsigned int *)(counter_1 + 0x14) & 0xfffffffe;\n          data_array[0x39] = 1;\n          data_array[0x38] = 0;\n          return 3;\n        }\n        *(short *)(data_ptr + 0x26) = *(short *)(data_ptr + 0x26) + -1;\n        if (*(int *)(data_ptr + 8) == 0x1000) {\n          counter_1 = get_input_data();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            counter_2 = get_input_data();\n            if (5 < (unsigned int)(counter_2 - counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = *data_array_ptr & 0x1ff;\n          if (*(int *)(data_ptr + 0x10) == 0) {\n            data_array_ptr = data_array_ptr + 1;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          counter_1 = get_input_data();\n          while (-1 < **(int **)data_ptr << 0x18) {\n            counter_2 = get_input_data();\n            if (5 < (unsigned int)(counter_2 - counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)data_ptr)[1] = (unsigned int)*(unsigned char *)data_array_ptr;\n        }\n        data_array_ptr = (unsigned short *)((int)data_array_ptr + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "decode_string_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "calculate_values_0800483c",
                "param_1": "params",
                "iVar3": "result2",
                "iVar4": "result3",
                "iVar5": "value3",
                "iVar6": "value6",
                "uVar1": "value2",
                "uVar2": "value14",
                "PTR_DAT_08004964": "result2",
                "PTR_DAT_08004968": "value4",
                "PTR_DAT_0800496c": "result3",
                "PTR_DAT_08004970": "result4",
                "params[0]": "*params",
                "params[1]": "value8",
                "params[2]": "value6",
                "params[3]": "value7",
                "params[7]": "value7",
                "params[9]": "value9",
                "params[10]": "value1",
                "params[11]": "value11",
                "params[12]": "value1",
                "params[13]": "value10",
                "params[14]": "value8",
                "params[15]": "value9",
                "params[16]": "value10",
                "params[18]": "value14",
                "params[19]": "value14",
                "params[20]": "params[20]",
                "params[21]": "params[21]"
            },
            "code": "void calculate_values_0800483c(int *params)\n{\n  int value1 = params[12];\n  int value2 = calculate_value(params[7], params[9]);\n  value1 = calculate_other_value(value2, value1);\n  if (*params == 3) {\n    int result = calculate_result(params[10], 0);\n    if (result == 0) {\n      result = calculate_result(params[10], \"result1\");\n    }\n    else {\n      result = calculate_result(params[10], \"PTR_DAT_08004964\");\n    }\n    if (result != 0) {\n      int value3 = params[10];\n      int PTR_DAT_08004968 = calculate_value(value3, \"PTR_DAT_08004968\");\n      int value5 = params[10];\n      if (calculate_result(params[10], 0) == 0) {\n        value5 -= 0x80000000;\n      }\n      PTR_DAT_08004968 = calculate_other_value(value5, PTR_DAT_08004968);\n      params[10] = PTR_DAT_08004968;\n    }\n  }\n  int value6 = params[2];\n  int value7 = params[3];\n  int value8 = calculate_value(params[1], params[10]);\n  params[14] = value8;\n  int value9 = calculate_value(params[10], params[15]);\n  params[15] = value9;\n  int PTR_DAT_08004964 = calculate_result(params[15], \"PTR_DAT_0800496c\");\n  int PTR_DAT_0800496c = \"PTR_DAT_0800496c\";\n  if ((PTR_DAT_08004964 == 0) && (calculate_result(params[15], \"PTR_DAT_08004970\") == 0)) {\n    PTR_DAT_0800496c = params[15];\n  }\n  params[15] = PTR_DAT_0800496c;\n  int value10 = calculate_other_value(params[12], params[13]);\n  params[16] = value10;\n  int value11 = calculate_value(value6, params[15]);\n  value11 = calculate_value(value11, value8);\n  int value12 = calculate_value(value7, params[16]);\n  int value13 = calculate_other_value(value11, value12);\n  int value14 = calculate_value(params[19]);\n  PTR_DAT_08004964 = calculate_result(params[18], \"PTR_DAT_0800496c\");\n  PTR_DAT_0800496c = \"PTR_DAT_0800496c\";\n  if ((PTR_DAT_08004964 == 0) && (calculate_result(params[18], \"PTR_DAT_08004970\") == 0)) {\n    PTR_DAT_0800496c = params[18];\n  }\n  value14 = calculate_value(value14, PTR_DAT_0800496c);\n  params[18] = value14;\n  params[13] = params[12];\n  params[11] = params[10];\n  params[21] = params[20];\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08000e54",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_values_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "process_data_08004c8c",
                "param_1": "data_buffer",
                "uVar1": "bytes_processed",
                "puVar2": "current_byte_ptr",
                "FUN_08000150": "process_byte"
            },
            "code": "void process_data_08004c8c(uint8_t *data_buffer)\n{\n    uint32_t buffer_index = 0;\n    while(true)\n    {\n        uint32_t bytes_processed = process_byte(data_buffer[buffer_index]);\n        if (bytes_processed <= (uint32_t)(data_buffer + buffer_index - data_buffer))\n        {\n            break;\n        }\n        buffer_index++;\n    }\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_param_08001460",
                "param_1": "param_list",
                "param_2": "param_2_value",
                "param_3": "param_3_value",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "param_uVar3",
                "puVar4": "param_ptr"
            },
            "code": "uint32_t check_param_08001460(uint32_t **param_list, uint32_t param_2, uint32_t param_3)\n{\n    int start_time = get_start_time();\n    do {\n        uint32_t *param_ptr = *param_list;\n        uint32_t uVar3;\n        if (((param_2 << 8) >> 0x18) == 1) {\n            uVar3 = param_ptr[5];\n        }\n        else {\n            uVar3 = param_ptr[6];\n        }\n        if ((param_2 & 0xffff & ~uVar3) == 0) {\n            return 0;\n        }\n        if ((int)(param_ptr[5] << 0x15) < 0) {\n            *param_ptr |= 0x200;\n            param_ptr[5] &= 0xfffffbff;\n            param_list[0xe] = (uint32_t *)0x4;\n            *(undefined *)((int)param_list + 0x35) = 0x20;\n            *(undefined *)(param_list + 0xd) = 0;\n            return 1;\n        }\n    } while ((param_3 == 0xffffffff) || ((param_3 != 0) && (get_start_time() - start_time <= param_3)));\n    *(undefined *)((int)param_list + 0x35) = 0x20;\n    *(undefined *)(param_list + 0xd) = 0;\n    return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_param_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_end_of_string_08001064",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_08001064(void)\n{\n  char current_char;\n  FUN_08000ffc();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_param_in_memory_08003fd0",
                "param_1": "new_param",
                "PTR_DAT_08003fd8": "ptr_to_dat"
            },
            "code": "void set_param_in_memory_08003fd0(int new_param) {\n  int* PTR_DAT_08003fd8 = *(int*)PTR_DAT_08003fd8;\n  int offset = 0x3c;\n  *(int*)(PTR_DAT_08003fd8 + offset) = new_param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_memory_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_check_1",
                "unaff_r4": "unaff_r4",
                "uVar2": "shift_amount",
                "uVar3": "temp_param_2",
                "in_r12": "in_r12",
                "bVar4": "is_zero_1",
                "LAB_08000704": "return_case_1",
                "LAB_080006c8": "return_case_2"
            },
            "code": "unsigned long long calculate_result_08000892(uint param1, uint param2, uint param3, uint param4) {\n    uint bit_check_1, bit_check_2, shift_amount, temp_param_1, temp_param_2;\n    bool is_zero_1, is_zero_2;\n    shift_amount = in_r12 & param_4 >> 0x14;\n    temp_param_2 = param_2;\n    if (unaff_r4 != in_r12 || shift_amount != in_r12) {\n        if (unaff_r4 == in_r12) {\n            is_zero_1 = ((param1 | param2 << 0xc) == 0);\n            if (is_zero_1 && shift_amount != in_r12) {\n                return (unsigned long long)((param2 ^ param4) & 0x80000000 | 0x7ff00000) << 0x20;\n            }\n            else {\n                temp_param_1 = param3;\n                temp_param_2 = param4;\n            }\n        }\n        else if (shift_amount == in_r12) {\n            temp_param_1 = param3;\n            temp_param_2 = param4;\n            is_zero_2 = ((param3 | param4 << 0xc) == 0);\n            if (is_zero_2) {\n                return (unsigned long long)((param2 ^ param4) & 0x80000000) << 0x20;\n            }\n        }\n        else {\n            is_zero_1 = ((param1 | param2 << 1) == 0);\n            is_zero_2 = ((param3 | param4 << 1) == 0);\n            if (!is_zero_1 && !is_zero_2) {\n                if (unaff_r4 == 0) {\n                    temp_param_2 = param2 & 0x80000000;\n                    do {\n                        bit_check_1 = param1 & 0x80000000;\n                        param1 = param1 << 1;\n                        param2 = param2 * 2 + (uint)(bit_check_1 != 0);\n                    } while ((param2 & 0x100000) == 0);\n                    param2 = param2 | temp_param_2;\n                    if (shift_amount != 0) {\n                        return CONCAT44(param2, param1);\n                    }\n                }\n                do {\n                    temp_param_2 = param3 & 0x80000000;\n                    param3 = param3 << 1;\n                    param4 = param4 * 2 + (uint)(temp_param_2 != 0);\n                } while ((param4 & 0x100000) == 0);\n                return CONCAT44(param2, param1);\n            }\n            else if (is_zero_1) {\n                goto LAB_08000704;\n            }\n            else {\n                goto LAB_080006c8;\n            }\n        }\n    }\n    return CONCAT44(temp_param_2, temp_param_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "copy_data_and_call_func_08004458",
                "puVar1": "destination_ptr",
                "puVar2": "temp1",
                "puVar3": "source_ptr",
                "puVar4": "last_source_ptr",
                "puVar5": "last_destination_ptr",
                "local_30": "copied_data",
                "local_24": "copied_data2"
            },
            "code": "void copy_data_and_call_func_08004458(void)\n{\n  undefined4 *source_ptr;\n  undefined4 temp1;\n  undefined4 *destination_ptr;\n  undefined4 *last_source_ptr;\n  undefined4 *last_destination_ptr;\n  undefined4 copied_data[3];\n  undefined2 copied_data2[10];\n  \n  source_ptr = copied_data;\n  last_source_ptr = (undefined4 *)PTR_DAT_0800448c;\n  do {\n    last_destination_ptr = destination_ptr;\n    destination_ptr = source_ptr;\n    temp1 = last_source_ptr[1];\n    last_source_ptr = last_source_ptr + 2;\n    *destination_ptr = *last_source_ptr;\n    destination_ptr[1] = temp1;\n    source_ptr = destination_ptr + 2;\n  } while (last_source_ptr != (undefined4 *)(PTR_DAT_0800448c + 0x18));\n  source_ptr[2] = *last_source_ptr;\n  *(undefined2 *)(source_ptr + 3) = *(undefined2 *)(destination_ptr + 3);\n  FUN_08004300(0x70,copied_data,0x1e);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_data_and_call_func_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concatenate_08000134",
                "param_1": "first_number",
                "param_2": "second_number",
                "DAT_08000144": "global_variable",
                "PTR_FUN_0800014c": "ptr_function",
                "PTR_DAT_08000148": "ptr_data"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concatenate_08000134(uint64_t param_1, uint64_t param_2)\n{\n  if (DAT_08000144 != 0) {\n    param_1 = PTR_FUN_0800014c;\n    param_2 = PTR_DAT_08000148;\n  }\n  return ((uint64_t)param_2 << 32) | param_1;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "concatenate_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_to_64bit_08003eb0",
                "param_1": "input_num",
                "PTR_DAT_08003ec4": "ptr_dat"
            },
            "code": "longlong convert_to_64bit_08003eb0(uint32_t input_num)\n{\n  int* PTR_DAT_08003ec4 = (int*)PTR_DAT_08003ec4;\n  if (*PTR_DAT_08003ec4 == 0)\n  {\n    software_interrupt(0x3f);\n    return CONCAT44(input_num, 1);\n  }\n  return (ulonglong)input_num << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_to_64bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = FUN_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = FUN_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "check_and_execute_function_08002ee8",
                "iVar1": "result",
                "uVar2": "function_param",
                "FUN_08001050": "call_function_with_param",
                "FUN_08001028": "check_function_with_param",
                "FUNC_08000adc": "execute_function_with_param"
            },
            "code": "void check_and_execute_function_08002ee8(void)\n{\n  int result;\n  undefined4 function_param;\n  \n  function_param = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  result = call_function_with_param(function_param,DAT_08002f1c);\n  if ((result != 0) && (result = check_function_with_param(function_param,DAT_08002f20), result != 0)) {\n    execute_function_with_param(function_param,DAT_08002f20);\n    return;\n  }\n  execute_function_with_param(function_param,DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08000adc",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "check_and_execute_function_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "convertMillisecondsToSecondsAndCallFunction_08001104",
                "param_1": "inputParam",
                "uVar1": "milliseconds",
                "FUN_08002214": "getMilliseconds",
                "FUN_08001214": "callFunction",
                "FUN_08001194": "unusedFunction"
            },
            "code": "int convertMillisecondsToSecondsAndCallFunction_08001104(int inputParam)\n{\n  uint32_t milliseconds = getMilliseconds();\n  int seconds = milliseconds / 1000;\n  callFunction(0xffffffff, inputParam, 0);\n  return 0;\n}",
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "convertMillisecondsToSecondsAndCallFunction_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "getValueFromPointer_thunk_0800115c",
                "undefined4": "int",
                "PTR_DAT_08001164": "pointerToValue",
                "value": "value",
                "*pointerToValue": "*pointerToValue"
            },
            "code": "int getValueFromPointer_thunk_0800115c() {\n    int* PTR_DAT_08001164 = (int*) PTR_DAT_08001164;\n    int value = *PTR_DAT_08001164;\n    return value;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "getValueFromPointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = FUN_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "add_parameter_to_value_080072b8",
                "param_1": "parameter",
                "puVar1": "current_pointer"
            },
            "code": "void add_parameter_to_value_080072b8(int parameter) {\n  undefined *current_pointer;\n  current_pointer = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)current_pointer = parameter + *(int *)current_pointer;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "add_parameter_to_value_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "check_and_set_value_0800581c",
                "param_1": "output_value",
                "param_2": "input_value",
                "puVar1": "ptr_data",
                "iVar2": "result"
            },
            "code": "void check_and_set_value_0800581c(int *output_value, undefined4 input_value)\n{\n  undefined *ptr_data = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  int result = find_value(input_value);\n  if ((result == -1) && (*(int *)ptr_data != 0)) {\n    *output_value = *(int *)ptr_data;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "check_and_set_value_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "check_and_update_08004d48",
                "param_1": "value",
                "param_2": "param",
                "local_18": "local_var1",
                "local_14": "local_var2",
                "*param_1": "*value",
                "DAT_08004d80": "PTR_DATA_1",
                "FUN_08001264": "FUN_1",
                "DAT_08004d84": "PTR_DATA_2",
                "DAT_08004d88": "PTR_DATA_3"
            },
            "code": "void check_and_update_08004d48(int *value, uint32_t param)\n{\n    uint32_t local_var1 = 0xc0;\n    uint32_t local_var2 = 0x12;\n    if (*value == DAT_08004d80)\n    {\n        FUN_08001264(DAT_08004d84, &local_var1, *value, 3, value, param);\n        *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n    }\n    return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "check_and_update_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_value_from_pointer_080072ac",
                "PTR_PTR_DAT_080072b4": "data_pointer"
            },
            "code": "get_value_from_pointer_080072ac() {\n  return *(undefined4 *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "update_data_08002280",
                "param_1": "data_address",
                "param_2": "data_values",
                "uVar1": "data4",
                "uVar2": "data2",
                "uVar3": "data3",
                "mask1": "0xfffffffe",
                "mask2": "0xfffffffd",
                "mask3": "0xfffffff7",
                "mask4": "0xfffffffb"
            },
            "code": "void update_data_08002280(int data_address, uint *data_values)\n{\n  uint mask1 = 0xfffffffe;\n  uint mask2 = 0xfffffffd;\n  uint mask3 = 0xfffffff7;\n  uint mask4 = 0xfffffffb;\n  uint data1 = *(uint *)(data_address + 0x20);\n  uint data2 = *(uint *)(data_address + 4);\n  uint data3 = *data_values;\n  uint data4 = data1 & mask2 | data_values[2];\n  if (data_address == DAT_080022cc)\n  {\n    data4 = (data4 & mask3 | data_values[3]) & mask4;\n    data2 = data2 & 0xfffffcff | data_values[5] | data_values[6];\n  }\n  *(uint *)(data_address + 4) = data2;\n  *(uint *)(data_address + 0x18) = *(uint *)(data_address + 0x18) & 0xffffff8c | data3;\n  *(uint *)(data_address + 0x34) = data_values[1];\n  *(uint *)(data_address + 0x20) = data4 & mask1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "write_bits_to_memory_08001194",
                "param_1": "memory_address",
                "param_2": "bit_pattern",
                "param_3": "bit_offset",
                "uVar1": "byte_to_write",
                "uVar2": "num_bits_to_write",
                "uVar3": "num_bits_to_write",
                "uVar4": "max_bit_offset"
            },
            "code": "void write_bits_to_memory_08001194(uint memory_address, uint bit_pattern, uint bit_offset)\n{\n    uint num_bits_to_write = 7 - ((uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d);\n    if (num_bits_to_write > 3) {\n        num_bits_to_write = 4;\n    }\n    uint max_bit_offset = num_bits_to_write + 4;\n    if (max_bit_offset < 7) {\n        bit_offset = 0;\n    }\n    num_bits_to_write = (1 << (num_bits_to_write & 0xff)) - 1;\n    if (max_bit_offset > 6) {\n        bit_offset = bit_offset - 3;\n    }\n    uint8_t byte_to_write = (bit_pattern & (1 << (bit_offset & 0xff)) - 1U | (memory_address & num_bits_to_write) << (bit_offset & 0xff)) << 4;\n    if (memory_address >= 0) {\n        memory_address += 0xe000e100;\n    }\n    else {\n        memory_address &= 0xf;\n        memory_address = DAT_080011f8;\n    }\n    if (memory_address >= 0) {\n        *(undefined *)(memory_address + 0x300) = byte_to_write;\n    }\n    else {\n        *(undefined *)(memory_address + memory_address) = byte_to_write;\n    }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004e7c",
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "write_bits_to_memory_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "read_MPU9250_sensor_data_08002cb0",
                "param_1": "accel_data",
                "param_2": "gyro_data",
                "param_3": "temperature",
                "param_4": "MPU9250_ADDRESS",
                "local_c": "buffer",
                "puVar1": "i",
                "uVar2": "temp_raw",
                "PTR_s____Src_MPU9250_c_08002d80": "ACCEL_SENSITIVITY",
                "PTR_DAT_08002d84": "TEMP_SENSITIVITY",
                "FUN_0800403c": "i2c_write_byte",
                "FUN_0800407c": "i2c_read_bytes",
                "FUN_080040e8": "convert_sensor_data"
            },
            "code": "void read_MPU9250_sensor_data_08002cb0(uint8_t *accel_data, uint8_t *gyro_data, float *temperature)\\n\\\n    {\\n\\\n        uint8_t buffer[14];\\n\\\n        uint16_t accel_raw[3], gyro_raw[3];\\n\\\n        int16_t temp_raw;\\n\\\n        int i;\\n\\\n        // Read accelerometer and gyroscope data\\n\\\n        i2c_write_byte(MPU9250_ADDRESS, 0x3B);\\n\\\n        i2c_read_bytes(MPU9250_ADDRESS, buffer, 14);\\n\\\n        // Convert accelerometer data to g\\n\\\n        for (i = 0; i < 3; i++) {\\n\\\n            accel_raw[i] = (buffer[i * 2] << 8) | buffer[i * 2 + 1];\\n\\\n            accel_data[i] = accel_raw[i] / PTR_s____Src_MPU9250_c_08002d80;\\n\\\n        }\\n\\\n        // Convert gyroscope data to deg/s\\n\\\n        for (i = 0; i < 3; i++) {\\n\\\n            gyro_raw[i] = (buffer[i * 2 + 8] << 8) | buffer[i * 2 + 9];\\n\\\n            gyro_data[i] = gyro_raw[i] / GYRO_SENSITIVITY;\\n\\\n        }\\n\\\n        // Read temperature data\\n\\\n        i2c_write_byte(MPU9250_ADDRESS, 0x41);\\n\\\n        i2c_read_bytes(MPU9250_ADDRESS, buffer, 2);\\n\\\n        temp_raw = (buffer[0] << 8) | buffer[1];\\n\\\n        *temperature = (float)temp_raw / PTR_DAT_08002d84 + TEMP_OFFSET;\\n\\\n    }",
            "called": [
                "FUN_08000c44",
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "read_MPU9250_sensor_data_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "decode_and_call_function_08004348",
                "param_1": "start_address",
                "param_2": "data",
                "param_3": "param_3",
                "puVar1": "data_pointer",
                "local_10": "local_10",
                "local_c": "local_c",
                "uStack_8": "uStack_8"
            },
            "code": "void decode_and_call_function_08004348(undefined4 start_address, uint16_t data, undefined4 param_3)\n{\n    uint16_t* data_pointer = (uint16_t*)0x08004380;\n    *data_pointer = 0xe93;\n    *(data_pointer + 1) = 3;\n    *(data_pointer + 2) = 4;\n    *(data_pointer + 3) = 0;\n    undefined4 local_10 = *(undefined4 *)data_pointer;\n    *(data_pointer + 4) = 0;\n    *(data_pointer + 5) = 0;\n    *(data_pointer + 6) = 0;\n    uint32_t local_c = data & 0xff000000 | (uint32_t)*(data_pointer + 2);\n    undefined4 uStack_8 = param_3;\n    call_function_at_address(start_address, &local_10, 7);\n}\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_call_function_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_data_structure_08002324",
                "param_1": "data_structure_address",
                "param_2": "new_data",
                "uVar1": "flags",
                "iVar2": "data1",
                "iVar3": "data2",
                "iVar4": "global_data"
            },
            "code": "void update_data_structure_08002324(int data_structure_address, int *new_data)\n{\n  uint flags = *(uint *)(data_structure_address + 0x20);\n  int data1 = *new_data;\n  int data2 = new_data[2];\n  int global_data = DAT_08002364;\n\n  if (data_structure_address == DAT_08002364) {\n    global_data = new_data[5];\n    flags = flags & 0xffffbfff;\n  }\n  if (data_structure_address == DAT_08002364) {\n    flags = flags | global_data << 6;\n  }\n  *(uint *)(data_structure_address + 4) = flags;\n  *(uint *)(data_structure_address + 0x1c) = *(uint *)(data_structure_address + 0x1c) & 0xffff8cff | data1 << 8;\n  *(int *)(data_structure_address + 0x40) = new_data[1];\n  *(uint *)(data_structure_address + 0x20) = flags & 0xffffdfff | data2 << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_structure_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "convert_signed_mag_08001078",
                "param_1": "input",
                "uVar1": "shift_amount",
                "uVar2": "shifted_amount",
                "uVar3": "shifted_output"
            },
            "code": "uint convert_signed_mag_08001078(uint input) {\n    uint shifted_input = input << 1;\n    if (shifted_input < 0x7f000000) {\n        return 0;\n    }\n    uint shift_amount = (shifted_input >> 0x18);\n    uint shifted_amount = 0x9e - shift_amount;\n    if (shift_amount < 0x9f && shifted_amount != 0) {\n        uint shifted_output = (input << 8 | 0x80000000) >> (shifted_amount & 0xff);\n        if ((input & 0x80000000) != 0) {\n            shifted_output = -shifted_output;\n        }\n        return shifted_output;\n    }\n    if (shifted_amount == 0xffffff9f && ((input & 0x7fffff) != 0)) {\n        return 0;\n    }\n    input = input & 0x80000000;\n    if (input == 0) {\n        input = 0x7fffffff;\n    }\n    return input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_signed_mag_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "check_param_and_set_value_08002564",
                "param_1": "param_array",
                "param_2": "value_array",
                "uVar1": "return_val",
                "*(char *)(param_1 + 0xe)": "*(char *)(param_array + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "*(undefined *)((int)param_array + 0x39)",
                "*(uint *)(*param_1 + 0x44)": "*(uint *)(*param_array + 0x44)",
                "*param_1": "*param_array",
                "*(undefined *)(param_1 + 0xe)": "*(undefined *)(param_array + 0xe)"
            },
            "code": "int check_param_and_set_value_08002564(int *param_array, uint *value_array) {\n    int return_val = 2;\n    if (*(char *)(param_array + 0xe) != '\\x01') {\n        *(undefined *)((int)param_array + 0x39) = 2;\n        uint value = 0;\n        for (int i = 0; i < 7; i++) {\n            value |= value_array[i];\n        }\n        *(uint *)(*param_array + 0x44) = value;\n        *(undefined *)((int)param_array + 0x39) = 1;\n        return_val = 0;\n        *(undefined *)(param_array + 0xe) = 0;\n    }\n    return return_val;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_param_and_set_value_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "initialize_device_08001754",
                "param_1": "device",
                "uVar1": "info_part1",
                "uVar2": "info_part2",
                "puVar3": "device_ptr_3",
                "puVar4": "device_ptr_4",
                "puVar5": "device_ptr_5",
                "uVar6": "info_divided",
                "uVar7": "device_info",
                "DAT_08001820": "PTR_DAT_08001820",
                "DAT_08001824": "PTR_DAT_08001824"
            },
            "code": "int initialize_device_08001754(uint **device)\\n{\\n    uint uVar1;\\n    uint uVar2;\\n    uint *device_ptr_3;\\n    uint *device_ptr_4;\\n    uint *device_ptr_5;\\n    uint uVar6;\\n    undefined8 uVar7;\\n\\n    if (device == (uint **)0x0) {\\n        return 1;\\n    }\\n    if (*(char *)((int)device + 0x35) == \"\\0\") {\\n        *(undefined *)(device + 0xd) = 0;\\n        initialize_device_08001754_helper();\\n    }\\n    *(undefined *)((int)device + 0x35) = 0x24;\\n    device_ptr_3 = DAT_08001820;\\n    **device = **device & 0xfffffffe;\\n    uVar7 = get_device_info();\\n    uVar2 = (uint)((ulonglong)uVar7 >> 0x20);\\n    uVar1 = (uint)uVar7;\\n    device_ptr_5 = device[1];\\n    uVar6 = uVar1 / DAT_08001824;\\n    if (device_ptr_3 < device_ptr_5) {\\n        uVar2 = 300;\\n    }\\n    device_ptr_4 = *device;\\n    if (device_ptr_3 < device_ptr_5) {\\n        uVar2 = uVar6 * uVar2;\\n    }\\n    device_ptr_4[1] = uVar6;\\n    if (device_ptr_3 < device_ptr_5) {\\n        uVar6 = uVar2 / 1000;\\n    }\\n    device_ptr_4[8] = uVar6 + 1;\\n    if (device_ptr_3 < device_ptr_5) {\\n        if (device[2] == (uint *)0x0) {\\n            uVar1 = uVar1 / (uint)((int)device_ptr_5 * 3) | 0x8000;\\n        }\\n        else {\\n            uVar1 = uVar1 / (uint)((int)device_ptr_5 * 0x19) | 0xc000;\\n        }\\n        if ((uVar1 & 0xfff) == 0) {\\n            uVar1 = 1;\\n        }\\n    }\\n    else {\\n        uVar1 = uVar1 / (uint)((int)device_ptr_5 << 1);\\n        if ((uVar1 & 0xfff) < 4) {\\n            uVar1 = 4;\\n        }\\n    }\\n    device_ptr_3 = device[8];\\n    device_ptr_5 = device[7];\\n    device_ptr_4[7] = uVar1;\\n    *device_ptr_4 = (uint)device_ptr_5 | (uint)device_ptr_3;\\n    device_ptr_4[2] = (uint)device[4] | (uint)device[3];\\n    device_ptr_4[3] = (uint)device[5] | (uint)device[6];\\n    *device_ptr_4 = *device_ptr_4 | 1;\\n    device[0xe] = (uint *)0x0;\\n    *(undefined *)((int)device + 0x35) = 0x20;\\n    *(undefined *)((int)device + 0x36) = 0;\\n    return 0;\\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_device_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ec0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_at_offset_08003ec8",
                "param_1": "base_address",
                "param_2": "value",
                "*(short *)(param_1 + 0x804)": "*offset_0x804",
                "*(short *)(param_1 + 0x802)": "*offset_0x802",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(char*)(base_address + (uint16_t)*offset_0x802)",
                "*(ushort *)(param_1 + 0x802)": "*offset_0x802"
            },
            "code": "int increment_and_store_at_offset_08003ec8(int base_address, char value) {\n    short* offset_0x804 = (short*)(base_address + 0x804);\n    short* offset_0x802 = (short*)(base_address + 0x802);\n    *offset_0x804 = *offset_0x804 + 1;\n    *(char*)(base_address + (uint16_t)*offset_0x802) = value;\n    *offset_0x802 = (*offset_0x802 + 1) & 0x7ff;\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_at_offset_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "set_param_flags_08002724",
                "param_1": "param_array",
                "iVar1": "param_1",
                "call_some_function": "call_some_function",
                "PTR_08004e7c": "call_some_function",
                "*(char *)((int)param_1 + 0x39)": "param_array[0x39]",
                "*(undefined *)(param_1 + 0xe)": "param_array[0xe]",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(param_1 + 0xc)",
                "FUN_080025e8": "set_param_values",
                "*(uint *)(iVar1 + 0x10)": "*(uint *)(param_1 + 0x10)",
                "*(uint *)(iVar1 + 0x14)": "*(uint *)(param_1 + 0x14)",
                "param_1[0xf]": "param_array[0xf]"
            },
            "code": "int set_param_flags_08002724(int *param_array)\n{\n  int param_1 = *param_array;\n  if (param_array != NULL)\n  {\n    if (param_array[0x39] == 0)\n    {\n      param_array[0xe] = 0;\n      PTR_08004e7c();\n    }\n    param_array[0x39] = 2;\n    *(uint *)(param_1 + 0xc) &= 0xffffdfff;\n    set_param_values(param_array);\n    *(uint *)(param_1 + 0x10) &= 0xffffb7ff;\n    *(uint *)(param_1 + 0x14) &= 0xffffffd5;\n    *(uint *)(param_1 + 0xc) |= 0x2000;\n    param_array[0xf] = 0;\n    param_array[0x39] = 1;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_param_flags_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_parameter_in_struct_08003fe8",
                "param_1": "parameter_value",
                "PTR_DAT_08003ff0": "ptr_to_struct"
            },
            "code": "void set_parameter_in_struct_08003fe8(int parameter_value) {\n    int* PTR_DAT_08003ff0 = *(int*)PTR_DAT_08003ff0;\n    int offset = 0x3c;\n    *(int*)(PTR_DAT_08003ff0 + offset) = parameter_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_parameter_in_struct_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "out_ptr",
                "param_2": "size",
                "puVar1": "ptr",
                "uVar2": "status",
                "puVar3": "current_block",
                "iVar4": "block_size",
                "puVar5": "free_space_ptr",
                "uVar6": "free_space",
                "puVar7": "previous_block",
                "uVar8": "aligned_size"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *out_ptr, uint size)\n{\n  uint aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *out_ptr = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    uint *current_block = *(uint **)PTR_DAT_080057c8;\n    uint *previous_block = *(uint **)PTR_DAT_080057c8;\n    while (current_block != (uint *)0x0) {\n      uint free_space = *current_block - aligned_size;\n      if (-1 < (int)free_space) {\n        if (free_space < 0xc) {\n          if (previous_block == current_block) {\n            uint next_block = previous_block[1];\n            *(uint *)PTR_DAT_080057c8 = next_block;\n          }\n          else {\n            uint next_block = current_block[1];\n          }\n          if (previous_block != current_block) {\n            previous_block[1] = next_block;\n            previous_block = current_block;\n          }\n        }\n        else {\n          *current_block = free_space;\n          *(uint *)((int)current_block + free_space) = aligned_size;\n          previous_block = (uint *)((int)current_block + free_space);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = current_block;\n      current_block = (uint *)current_block[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint status = FUN_0800581c(out_ptr);\n      *(undefined4 *)PTR_DAT_080057cc = status;\n    }\n    current_block = (uint *)FUN_0800581c(out_ptr, aligned_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (int block_size = FUN_0800581c(out_ptr,(int)previous_block - (int)current_block), block_size != -1)))) {\n      *previous_block = aligned_size;\nLAB_08005778:\n      do_nothing_0800583e(out_ptr);\n      uint aligned_block_size = (int)previous_block + 0xbU & 0xfffffff8;\n      int padding_size = aligned_block_size - (int)(previous_block + 1);\n      if (padding_size != 0) {\n        *(int *)((int)previous_block + padding_size) = -padding_size;\n        return aligned_block_size;\n      }\n      return aligned_block_size;\n    }\n    *out_ptr = 0xc;\n    do_nothing_0800583e(out_ptr);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_pointer",
                "iVar2": "num_functions",
                "iVar3": "i"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  int num_functions = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  code **function_pointer = (code **)PTR_DAT_08004fec;\n  for (int i = 0; i < num_functions; i++) {\n    (*function_pointer[i])();\n  }\n  do_nothing_080072d4();\n  num_functions = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  function_pointer = (code **)PTR_DAT_08004ff4;\n  for (int i = 0; i < num_functions; i++) {\n    (*function_pointer[i])();\n  }\n  return;\n}",
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "process_data_080043f0",
                "param_1": "data",
                "param_2": "count",
                "param_3": "offset",
                "local_10": "ptr1",
                "uStack_c": "ptr2",
                "auStack_8": "stack_data"
            },
            "code": "void process_data_080043f0(undefined4 data, undefined4 count, undefined4 offset)\n{\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 stack_data[2];\n  ptr1 = *(undefined4 *)PTR_DAT_0800440c;\n  ptr2 = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  stack_data[0] = offset;\n  FUN_08004300(0x68, &ptr1, 8, stack_data);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "calculate_08000428",
                "param_1": "number",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar7": "temp_7",
                "iVar6": "temp_6",
                "bVar8": "condition_4",
                "bVar9": "condition_1",
                "bVar10": "condition_3",
                "in_r12": "temp_8"
            },
            "code": "ulonglong calculate_08000428(uint number, undefined4 param_2, undefined4 param_3, uint param_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  int temp_6;\n  uint temp_7;\n  uint temp_8;\n  bool condition_1;\n  bool condition_2;\n  bool condition_3;\n  \n  temp_5 = number << 1;\n  condition_1 = temp_5 == 0;\n  temp_1 = (uint)((number & 0x80000000) != 0) << 0x1f;\n  temp_4 = (uint)((int)temp_5 >> 3) >> 1;\n  temp_3 = temp_1 | temp_4;\n  number = number << 0x1d;\n  if (!condition_1) {\n    temp_4 = temp_5 & 0xff000000;\n    condition_1 = temp_4 == 0;\n  }\n  if (!condition_1) {\n    condition_1 = temp_4 == 0xff000000;\n  }\n  if (!condition_1) {\n    return CONCAT44(temp_3,number) ^ 0x3800000000000000;\n  }\n  if (temp_5 == 0 || temp_4 == 0xff000000) {\n    return CONCAT44(temp_3,number);\n  }\n  temp_2 = number;\n  temp_5 = temp_4;\n  if (temp_4 == 0) {\n    temp_2 = 0;\n    temp_5 = number;\n  }\n  temp_6 = count_leading_zeroes(temp_5);\n  if (temp_4 == 0) {\n    temp_6 = temp_6 + 0x20;\n  }\n  temp_7 = temp_6 - 0xb;\n  condition_3 = SBORROW4(temp_7,0x20);\n  temp_4 = temp_6 - 0x2b;\n  condition_2 = (int)temp_4 < 0;\n  bool condition_4 = temp_4 == 0;\n  if ((int)temp_7 < 0x20) {\n    condition_3 = SCARRY4(temp_4,0xc);\n    temp_6 = temp_6 + -0x1f;\n    condition_2 = temp_6 < 0;\n    condition_4 = temp_6 == 0;\n    temp_4 = temp_7;\n    if (!condition_4 && condition_2 == condition_3) {\n      temp_2 = temp_5 << (temp_7 & 0xff);\n      temp_5 = temp_5 >> (0xcU - temp_6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition_4 || condition_2 != condition_3) {\n    temp_8 = 0x20 - temp_4;\n  }\n  temp_5 = temp_5 << (temp_4 & 0xff);\n  if (condition_4 || condition_2 != condition_3) {\n    temp_5 = temp_5 | temp_2 >> (temp_8 & 0xff);\n  }\n  if (condition_4 || condition_2 != condition_3) {\n    temp_2 = temp_2 << (temp_4 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp_7 < 0x381) {\n    return CONCAT44(temp_5 + (0x380 - temp_7) * 0x100000 | temp_1,temp_2);\n  }\n  temp_4 = ~(0x380 - temp_7);\n  if ((int)temp_4 < 0x1f) {\n    temp_6 = temp_4 - 0x13;\n    if (temp_6 != 0 && temp_6 < 0 == SCARRY4(temp_4 - 0x1f,0xc)) {\n      return CONCAT44(temp_3,temp_2 >> (0x20 - (0xcU - temp_6) & 0xff) | temp_5 << (0xcU - temp_6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_4 = temp_4 + 1;\n    return CONCAT44(temp_1 | temp_5 >> (temp_4 & 0xff),\n                    temp_2 >> (temp_4 & 0xff) | temp_5 << (0x20 - temp_4 & 0xff));\n  }\n  return CONCAT44(temp_3,temp_5 >> (temp_4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "set_flag_and_call_functions_08004ccc",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "DAT_08004d44": "flag_address",
                "iVar1": "flag_address",
                "uVar2": "flag_value",
                "uVar3": "flag_bit"
            },
            "code": "void set_flag_and_call_functions_08004ccc(int param_1, int param_2, int param_3) {\n  int DAT_08004d44 = DAT_08004d44;\n  uint flag_value = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  *(uint *)(DAT_08004d44 + 0x18) = flag_value;\n  uint flag_bit = *(uint *)(DAT_08004d44 + 0x18) & 1;\n  FUN_08001170(3, param_2, flag_value, flag_bit, param_1, flag_bit, param_3);\n  FUN_08001194(0xfffffff4, 0);\n  FUN_08001194(0xfffffff5, 0);\n  FUN_08001194(0xfffffff6, 0);\n  FUN_08001194(0xfffffffb, 0);\n  FUN_08001194(0xfffffffc, 0);\n  FUN_08001194(0xfffffffe, 0);\n  FUN_08001194(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "convert_float_to_int_bits_08000a30",
                "param_1": "float_value",
                "param_2": "sign_bit",
                "uVar1": "int_bits",
                "uVar2": "exponent_bits",
                "uVar3": "mantissa_bits",
                "in_r12": "shifted_mantissa",
                "bVar4": "is_zero",
                "bVar5": "is_normal"
            },
            "code": "uint convert_float_to_int_bits_08000a30(uint float_value, uint sign_bit){\n  uint exponent, mantissa, shifted_mantissa, int_bits;\n  bool is_normal;\n\n  exponent = (float_value >> 23) & 0xFF;\n  mantissa = float_value & 0x7FFFFF;\n  is_normal = exponent != 0 && exponent != 0xFF;\n\n  if (is_normal){\n    shifted_mantissa = mantissa | 0x800000;\n    exponent -= 127;\n  } else {\n    shifted_mantissa = mantissa;\n  }\n\n  if (exponent < 127 - 23){\n    int_bits = 0;\n  } else if (exponent > 127){\n    int_bits = ((exponent - 127) << 23) | shifted_mantissa;\n  } else {\n    int_bits = (1 << (exponent - (127 - 23))) | shifted_mantissa;\n  }\n\n  if (sign_bit != 0){\n    int_bits |= 0x80000000;\n  }\n\n  return int_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "convert_float_to_int_bits_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "verify_input_and_process_data_080023d0",
                "param_1": "input_array",
                "*(char *)((int)param_1 + 0x39)": "input_array[9]",
                "*(undefined *)(param_1 + 0xe)": "input_array[14]",
                "FUN_08004d8c()": "initialize_data_processing()",
                "*(undefined *)((int)param_1 + 0x39)": "input_array[9]",
                "FUN_08002368": "process_data()"
            },
            "code": "int verify_input_and_process_data_080023d0(int *input_array)\n{\n    if (input_array != NULL) {\n        if (input_array[9] == 0) {\n            input_array[14] = 0;\n            initialize_data_processing();\n        }\n        input_array[9] = 2;\n        process_data(input_array[0], input_array + 1);\n        input_array[9] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "verify_input_and_process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "verify_key_08004c30",
                "param_1": "key",
                "puVar1": "key_ptr",
                "puVar2": "data_ptr",
                "uVar3": "new_value",
                "uVar4": "current_value",
                "iVar5": "value_ptr"
            },
            "code": "int * verify_key_08004c30(int *key)\n{\n  undefined *key_ptr = PTR_DAT_08004c58;\n  if (*key != DAT_08004c54) {\n    return key;\n  }\n  initialize_key(PTR_DAT_08004c5c, *PTR_DAT_08004c58);\n  undefined *data_ptr = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (key_ptr == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4 *)(data_ptr + 0x3c) = 0;\n      *(undefined2 *)(data_ptr + 0x2c) = 1;\n      *(undefined2 *)(data_ptr + 0x2e) = 1;\n      data_ptr[0x38] = 0;\n      if (data_ptr[0x39] == '\\x12') {\n        undefined new_value = 0x32;\n      }\n      else {\n        undefined new_value = 0x22;\n      }\n      int *value_ptr = *(int *)data_ptr;\n      data_ptr[0x39] = new_value;\n      uint current_value = *(uint *)(value_ptr + 0xc);\n      *(undefined **)(data_ptr + 0x28) = key_ptr;\n      *(uint *)(value_ptr + 0xc) = current_value | 0x100;\n      *(uint *)(value_ptr + 0x14) = *(uint *)(value_ptr + 0x14) | 1;\n      *(uint *)(value_ptr + 0xc) = *(uint *)(value_ptr + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "verify_key_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_param_in_global_mem_08003fdc",
                "param_1": "param",
                "PTR_DAT_08003fe4": "ptr_dat"
            },
            "code": "void set_param_in_global_mem_08003fdc(int param) {\n    int* ptr = *(int*)PTR_DAT_08003fe4;\n    int offset = 0x38;\n    int* mem_location = ptr + offset;\n    *mem_location = param;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_global_mem_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "is_end_of_string_080009f0",
                "in_CY": "current_char",
                "FUN_08000980": "execute_some_function"
            },
            "code": "bool is_end_of_string_080009f0(void)\\n{\\n  char current_char;\\n  execute_some_function();\\n  return current_char == \"\\0\";\\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "is_end_of_string_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_bits_in_memory_08004f10",
                "puVar1": "bits_array"
            },
            "code": "void set_bits_in_memory_08004f10(void)\n{\n  uint *bits_array;\n  bits_array = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  bits_array[1] &= DAT_08004f54;\n  *bits_array &= 0xfef6ffff;\n  *bits_array &= 0xfffbffff;\n  bits_array[1] &= 0xff80ffff;\n  bits_array[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_bits_in_memory_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "allocate_memory_and_copy_data_08005044",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "bytes_to_copy",
                "param_4": "max_bytes_to_allocate",
                "iVar1": "allocated_memory",
                "iVar4": "offset",
                "uVar2": "total_bytes_to_allocate",
                "uVar3": "bytes_to_allocate"
            },
            "code": "int allocate_memory_and_copy_data_08005044(int *destination, int *source, int bytes_to_copy, uint max_bytes_to_allocate) {\n  int offset = source[0] - source[4];\n  uint bytes_to_allocate = (uint)(source[5] * 3) / 2;\n  if (source[2] <= max_bytes_to_allocate && (*(ushort *)(source + 3) & 0x480) != 0) {\n    uint total_bytes_to_allocate = max_bytes_to_allocate + 1 + offset;\n    if (bytes_to_allocate < total_bytes_to_allocate) {\n      bytes_to_allocate = total_bytes_to_allocate;\n    }\n    if ((int)((uint)*(ushort *)(source + 3) << 0x15) < 0) {\n      int allocated_memory = FUN_08005714(destination, bytes_to_allocate);\n      if (allocated_memory == 0) {\n        *destination = 0xc;\n        *(ushort *)(source + 3) = *(ushort *)(source + 3) | 0x40;\n        return -1;\n      }\n      FUN_08005630(allocated_memory, source[4], offset);\n      *(ushort *)(source + 3) = *(ushort *)(source + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      int allocated_memory = FUN_080057d0(destination, source[4], bytes_to_allocate);\n      if (allocated_memory == 0) {\n        FUN_0800567c(destination, source[4]);\n        *destination = 0xc;\n        *(ushort *)(source + 3) = *(ushort *)(source + 3) | 0x40;\n        return -1;\n      }\n    }\n    source[4] = allocated_memory;\n    *source = allocated_memory + offset;\n    source[5] = bytes_to_allocate;\n    source[2] = bytes_to_allocate - offset;\n    max_bytes_to_allocate = total_bytes_to_allocate;\n  }\n  if (max_bytes_to_allocate <= source[2]) {\n    max_bytes_to_allocate = source[2];\n  }\n  FUN_08005646(*source, bytes_to_copy, max_bytes_to_allocate);\n  source[2] = source[2] - max_bytes_to_allocate;\n  *source = max_bytes_to_allocate + *source;\n  return 0;\n}",
            "called": [
                "FUN_08005630",
                "FUN_080057d0",
                "FUN_0800567c",
                "FUN_08005646",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_and_copy_data_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_data_08004194",
                "puVar1": "pointer_1",
                "puVar2": "pointer_2",
                "puVar3": "pointer_3",
                "puVar4": "pointer_4",
                "uVar5": "value_1",
                "uVar6": "value_2",
                "uVar7": "value_3",
                "uVar8": "value_4"
            },
            "code": "void initialize_data_08004194(void)\n{\n  undefined *pointer_1;\n  undefined *pointer_2;\n  undefined *pointer_3;\n  undefined *pointer_4;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n\n  initialize_function_1();\n  initialize_function_2();\n  initialize_function_3();\n  initialize_function_4();\n\n  pointer_3 = DATA_POINTER_1;\n  pointer_2 = DATA_POINTER_2;\n  pointer_1 = DATA_POINTER_3;\n\n  *(undefined4 *)(DATA_POINTER_2 + 0x4c) = 1;\n  *(undefined4 *)(pointer_1 + 0x4c) = 1;\n  *(undefined4 *)(pointer_3 + 0x4c) = 0xffffffff;\n\n  value_1 = DATA_VALUE_1;\n  pointer_4 = DATA_POINTER_4;\n\n  *(undefined4 *)(DATA_POINTER_4 + 0x4c) = 1;\n  value_2 = DATA_VALUE_2;\n\n  *(undefined4 *)(pointer_2 + 0x20) = DATA_VALUE_3;\n  value_3 = DATA_VALUE_4;\n\n  *(undefined4 *)(pointer_1 + 0x20) = DATA_VALUE_5;\n  *(undefined4 *)(pointer_3 + 0x20) = DATA_VALUE_6;\n  *(undefined4 *)(pointer_4 + 0x20) = 0;\n\n  *(undefined4 *)(pointer_2 + 4) = value_1;\n  value_1 = DATA_VALUE_7;\n\n  *(undefined4 *)(pointer_2 + 8) = DATA_VALUE_7;\n  *(undefined4 *)(pointer_2 + 0xc) = value_2;\n  *(undefined4 *)(pointer_2 + 0x10) = value_3;\n\n  value_3 = DATA_VALUE_8;\n  value_2 = DATA_VALUE_9;\n\n  *(undefined4 *)(pointer_1 + 4) = DATA_VALUE_9;\n  *(undefined4 *)(pointer_1 + 8) = value_1;\n  *(undefined4 *)(pointer_1 + 0xc) = value_3;\n  *(undefined4 *)(pointer_1 + 0x10) = value_2;\n\n  value_2 = DATA_VALUE_10;\n\n  *(undefined4 *)(pointer_1 + 0x14) = value_1;\n  *(undefined4 *)(pointer_1 + 0x18) = value_2;\n\n  value_4 = DATA_VALUE_11;\n  value_2 = DATA_VALUE_12;\n\n  *(undefined4 *)(pointer_3 + 4) = DATA_VALUE_13;\n  *(undefined4 *)(pointer_3 + 8) = DATA_VALUE_14;\n  *(undefined4 *)(pointer_3 + 0xc) = value_2;\n  *(undefined4 *)(pointer_3 + 0x10) = 0;\n  *(undefined4 *)(pointer_3 + 0x14) = 0;\n  *(undefined4 *)(pointer_3 + 0x18) = 0;\n\n  *(undefined4 *)(pointer_4 + 4) = value_4;\n  *(undefined4 *)(pointer_4 + 8) = 0;\n  *(undefined4 *)(pointer_4 + 0xc) = 0;\n  *(undefined4 *)(pointer_4 + 0x10) = 0;\n  *(undefined4 *)(pointer_4 + 0x14) = 0;\n  *(undefined4 *)(pointer_4 + 0x18) = 0;\n\n  return;\n}",
            "called": [
                "FUN_08004028",
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initialize_data_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "set_flag_08001240",
                "param_1": "flag_value",
                "uVar1": "flag_mask",
                "*DAT_08001254": "flag_ptr"
            },
            "code": "void set_flag_08001240(int flag_value)\n{\n    uint32_t* *DAT_08001254 = DAT_08001254;\n    if (flag_value == 4) {\n        **DAT_08001254 |= 4;\n    }\n    else {\n        **DAT_08001254 &= 0xfffffffb;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "set_flag_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_new_value_08005840",
                "param_1": "previous_value",
                "param_2": "data_array",
                "iVar1": "new_value"
            },
            "code": "int calculate_new_value_08005840(int previous_value, int* data_array){\n    int new_value = previous_value - 4;\n    if(previous_value < 0){\n        new_value += data_array[new_value];\n    }\n    return new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_string_end_08000150",
                "param_1": "input_string",
                "pcVar2": "current_ptr",
                "cVar1": "current_char",
                "pcVar3": "current_ptr"
            },
            "code": "char* find_string_end_08000150(char* input_string) {\n  char current_char;\n  char* current_ptr = input_string;\n  do {\n    current_ptr++;\n    current_char = *current_ptr;\n  } while (current_char != '\\0');\n  return current_ptr + (-1 - (int)input_string);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_string_end_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "leading_zeroes_count_and_call_08003f3c",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "uVar1": "data",
                "uVar2": "count1/count2/count3"
            },
            "code": "void leading_zeroes_count_and_call_08003f3c(uint32_t num1, uint32_t num2, uint32_t num3)\n{\n  uint32_t data = DAT_08003f78;\n  uint32_t count1 = count_leading_zeroes(num1);\n  uint32_t count2 = count_leading_zeroes(num2);\n  uint32_t count3 = count_leading_zeroes(num3);\n  FUN_08001424(data, 0x8000, count1 >> 5);\n  FUN_08001424(data, 0x4000, count2 >> 5);\n  FUN_08001424(data, 0x2000, count3 >> 5);\n  return;\n}",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "leading_zeroes_count_and_call_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_value_at_address_08002214",
                "PTR_DAT_0800221c": "pointer"
            },
            "code": "uint32_t get_value_at_address_08002214() {\n    uint32_t* PTR_DAT_0800221c = (uint32_t*)PTR_DAT_0800221c;\n    return *PTR_DAT_0800221c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "get_value_at_address_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_integers_to_long_08001004",
                "param_1": "int1",
                "param_2": "int2",
                "FUN_08000f9c": "call_function_before_concatenation"
            },
            "code": "undefined8 concatenate_integers_to_long_08001004(long int1, long int2)\n{\n  call_function_before_concatenation();\n  return CONCAT44(int2, int1);\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08000ffc",
                "FUN_08001028"
            ],
            "imported": false,
            "current_name": "concatenate_integers_to_long_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "print_data_08003ff4",
                "*PTR_DAT_0800401c": "data_start_ptr",
                "*PTR_DAT_08004020": "data_header",
                "*PTR_DAT_08004024": "data_size"
            },
            "code": "void print_data_08003ff4(void)\n{\n  undefined *data_ptr;\n  data_ptr = *PTR_DAT_0800401c;\n  print_string(*PTR_DAT_08004020,4);\n  print_int(*PTR_DAT_08004024,8);\n  print_int(data_ptr,8);\n  print_int(data_ptr,0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "print_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "execute_main_loop_080041ae",
                "FUN_08003eb0": "initialize_data_structures",
                "FUN_08004194": "display_welcome_message",
                "FUN_0800114c": "read_user_input",
                "FUNC_0800411c": "process_input"
            },
            "code": "void execute_main_loop_080041ae(void)\n{\n  initialize_data_structures();\n  display_welcome_message();\n  do {\n    read_user_input();\n    process_input();\n  } while( true );\n}",
            "called": [
                "FUN_08003eb0",
                "FUN_0800411c",
                "FUN_0800114c",
                "FUN_08004194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_main_loop_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "set_flag_and_call_functions_08001128",
                "FUN_08001170": "call_function_with_param",
                "FUN_08001104": "call_function_with_param",
                "FUN_08004ccc": "call_another_function",
                "DAT_08001148": "data_ptr"
            },
            "code": "int set_flag_and_call_functions_08001128(void)\n{\n  int* DAT_08001148 = DAT_08001148;\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  call_function_with_param(3);\n  call_function_with_param(0);\n  call_another_function();\n  return 0;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "peripherals_init_08004514",
                "iVar1": "init_status",
                "uVar2": "delay_ms",
                "uVar3": "delay_us",
                "iVar4": "counter",
                "local_44": "data[0]",
                "local_38": "data[1]",
                "local_40": "data[2]",
                "local_3c": "data[3]",
                "local_34": "data[3]",
                "local_30": "data",
                "local_20": "i2c_addr",
                "local_1c": "delay_ms",
                "local_14": "delay_us",
                "local_10": "counter",
                "local_c": "i2c_addr",
                "FUNC_08001b58": "i2c_init",
                "FUN_08004490": "get_data",
                "FUN_0800209c": "update_counter",
                "FUN_08002214": "get_time_ms",
                "FUN_08001214": "set_delay",
                "FUN_08001240": "set_data",
                "FUN_08001194": "set_data"
            },
            "code": "void peripherals_init_08004514(void)\n{\n    int init_status;\n    uint32_t delay_ms;\n    uint32_t delay_us;\n    uint32_t counter;\n    uint32_t data[4];\n    uint32_t i2c_addr;\n\n    delay_ms = 1;\n    i2c_addr = 0x10;\n    counter = 2;\n    data[0] = 2;\n    data[1] = 2;\n    data[2] = 0x380000;\n\n    init_status = i2c_init(data);\n    if (init_status == 0) {\n        goto END;\n    }\n\n    delay_us = 0x3c;\n    while (1) {\n        init_status = get_data(PTR_s____Src_peripherals_c_08004588, delay_us);\n\n        data[0] = 0xf;\n        data[1] = 0x400;\n        data[2] = counter;\n        data[3] = init_status;\n\n        counter = update_counter(&data[0], counter);\n        if (counter == 0) {\n            break;\n        }\n        delay_us = 0x49;\n    }\n\n    delay_ms = get_time_ms();\n    delay_ms /= 1000;\n    set_delay(delay_ms);\n    set_data(4);\n    set_data(0xffffffff, 0, 0);\n\nEND:\n    return;\n}",
            "called": [
                "FUN_0800209c",
                "FUN_08002214",
                "FUN_08001240",
                "FUN_08001b58",
                "FUN_08001194",
                "FUN_08004490",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "peripherals_init_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "process_data_08004a84",
                "puVar1": "ptr_data1",
                "puVar2": "ptr_data2",
                "puVar3": "ptr_data3",
                "puVar4": "ptr_data4",
                "puVar5": "ptr_data5",
                "uVar6": "result",
                "uVar7": "value",
                "iVar8": "check_result",
                "PTR_DAT_08004bf0": "ptr_data_1",
                "PTR_DAT_08004bf4": "ptr_data_2",
                "PTR_DAT_08004bf8": "ptr_data_3",
                "PTR_DAT_08004c04": "ptr_data_4",
                "PTR_DAT_08004c08": "ptr_data_5",
                "DAT_08004bfc": "constant1",
                "DAT_08004c00": "constant2",
                "DAT_08004c10": "constant3"
            },
            "code": "void process_data_08004a84(void)\n{\n  // Get values\n  undefined4 value1 = get_value1();\n  undefined4 value2 = get_value2();\n  undefined4 value3 = get_value3();\n\n  // Check values\n  if (check_value(value1, 0) == 0) {\n    value1 = set_value(value1, DAT_08004bfc);\n  }\n  else {\n    value1 = set_value(value1, DAT_08004c00);\n  }\n  if (check_value(value2, 0) == 0) {\n    value2 = set_value(value2, DAT_08004bfc);\n  }\n  else {\n    value2 = set_value(value2, DAT_08004c00);\n  }\n  if (check_value(value1, 0) == 0) {\n    value3 = set_value(value3, DAT_08004bfc);\n  }\n  else {\n    value3 = set_value(value3, DAT_08004c00);\n  }\n\n  // Process data\n  process_data_08004a84_1(value1);\n  process_data_08004a84_2(value2);\n  process_data_08004a84_3(value3);\n}\n",
            "called": [
                "FUN_0800483c",
                "FUN_08002ec0",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08004a30",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080041c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "initialize_params_and_call_func_080041c4",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "FUN_08003fc4": "initialize_func1",
                "FUN_08003fd0": "initialize_func2",
                "FUN_08003fdc": "initialize_func3",
                "FUN_08003fe8": "call_func4"
            },
            "code": "void initialize_params_and_call_func_080041c4(undefined4 arg1, undefined4 arg2, undefined4 arg3, undefined4 arg4)\n{\n  undefined4 extraout_r1;\n  initialize_func1(0);\n  initialize_func2(0);\n  initialize_func3(0);\n  call_func4(0, extraout_r1, arg3, arg4);\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "initialize_params_and_call_func_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = FUN_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "calculate_result_080057d0",
                "param_1": "param_1",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "param_4",
                "uVar1": "result",
                "uVar2": "max_input",
                "FUN_0800567c": "print_success",
                "FUN_08005840": "get_max_input",
                "FUN_08005714": "calculate",
                "FUN_08005630": "print_calculated_result"
            },
            "code": "uint calculate_result_080057d0(undefined4 param_1,uint input1,uint input2,undefined4 param_4)\n{\n  uint result;\n  uint max_input;\n  if (input1 != 0) {\n    if (input2 == 0) {\n      print_error();\n      result = input2;\n    }\n    else {\n      max_input = get_max_input();\n      result = input1;\n      if ((max_input < input2) && (result = calculate(param_1,input2), result != 0)) {\n        print_calculated_result(result,input1,input2);\n        print_success(param_1,input1);\n      }\n    }\n    return result;\n  }\n  result = calculate(param_1,input2,input2,param_4);\n  return result;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "calculate_result_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "insert_into_linked_list_0800567c",
                "param_1": "error_code",
                "param_2": "size",
                "param_3": "data",
                "param_4": "unused",
                "puVar1": "pointer_to_data",
                "extraout_r1": "next",
                "ppiVar2": "next_ptr",
                "ppiVar3": "prev",
                "piVar4": "data_ptr",
                "ppiVar5": "ptr_to_head",
                "ppiVar6": "current",
                "ppiVar7": "temp"
            },
            "code": "void insert_into_linked_list_0800567c(int** head, int size, int* data, int error_code) {\n  if (size == 0) {\n    return;\n  }\n  int** current = head + size - 1;\n  if (**current < 0) {\n    current += **current;\n  }\n  do_nothing_0800583c();\n  int** ptr_to_head = *(int***)PTR_DAT_08005710;\n  if (ptr_to_head == NULL) {\n    *current = NULL;\n    *(int***)PTR_DAT_08005710 = current;\n    int** next = NULL;\n    int** prev = *(int***)PTR_DAT_08005710;\n  } else if (current < ptr_to_head) {\n    int** next = *current;\n    int** prev = current + (int)next;\n    if (ptr_to_head == prev) {\n      int* data_ptr = *ptr_to_head;\n      ptr_to_head = (int**)ptr_to_head[1];\n      prev = current + (int)data_ptr;\n      **current = (int)prev;\n    }\n    *current = (int*)ptr_to_head;\n    *(int***)PTR_DAT_08005710 = current;\n  } else {\n    int** prev = ptr_to_head;\n    int** next = prev[1];\n    while (next != NULL && next <= current) {\n      prev = next;\n      next = prev[1];\n    }\n    int** data_ptr = *current;\n    int** next_ptr = current + (int)data_ptr;\n    if (next == next_ptr) {\n      int* data_ptr2 = *next_ptr;\n      next_ptr = (int**)next_ptr[1];\n      next_ptr = current + (int)data_ptr2;\n      **current = (int)next_ptr;\n      current[1] = (int*)next;\n    } else if (current < next_ptr) {\n      *error_code = 0xc;\n    } else {\n      *current = (int*)next_ptr;\n      prev[1] = (int*)current;\n    }\n  }\n  do_nothing_0800583e(error_code, current, *(int***)PTR_DAT_08005710, data);\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "insert_into_linked_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  FUN_08001128();\n  FUN_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  FUN_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  FUN_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = FUN_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = FUN_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = FUN_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = FUN_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = FUN_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = FUN_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = FUN_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        FUN_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = FUN_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = FUN_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = FUN_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  FUN_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = FUN_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = FUN_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = FUN_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = FUN_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = FUN_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = FUN_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = FUN_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = FUN_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  FUN_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001754",
                "FUN_080025a4",
                "FUN_0800245c",
                "FUN_080023d0",
                "FUN_08002564",
                "FUN_08001128",
                "FUN_08004490",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08001424"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08004fb4",
                "FUN_08000110",
                "FUN_08000134"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "swap_parameters_and_call_function_08000ffc",
                "param_1": "first_param",
                "param_2": "second_param",
                "FUN_08001004": "call_function_with_swapped_parameters"
            },
            "code": "void swap_parameters_and_call_function_08000ffc(undefined4 first_param, undefined4 second_param)\n{\n  call_function_with_swapped_parameters(second_param, first_param);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "imported": false,
            "current_name": "swap_parameters_and_call_function_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_if_flag_set_080016f4",
                "param_1": "memory_block",
                "param_2": "size",
                "iVar1": "start_time",
                "iVar2": "memory_address"
            },
            "code": "uint8_t check_if_flag_set_080016f4(int *memory_block,uint32_t size) {\n  int start_time = get_current_time();\n  while( true ) {\n    int memory_address = *memory_block;\n    if ((*(uint *)(memory_address + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(memory_address + 0x14) << 0x1b < 0) break;\n    if ((size == 0) || (memory_address = get_current_time(), size < (uint32_t)(memory_address - start_time))) {\n      memory_block[14] = memory_block[14] | 0x20;\n      *(uint8_t *)((int)memory_block + 0x35) = 0x20;\n      *(uint8_t *)(memory_block + 13) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(memory_address + 0x14) = *(uint *)(memory_address + 0x14) & 0xffffffef;\n  memory_block[14] = 0;\n  *(uint8_t *)(memory_block + 13) = 0;\n  *(uint8_t *)((int)memory_block + 0x35) = 0x20;\n  return 1;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_if_flag_set_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "set_flag_and_values_if_not_set_080025a4",
                "param_1": "input_array",
                "param_2": "input_values",
                "uVar1": "value1",
                "uVar2": "result",
                "iVar3": "array_value",
                "uVar4": "value2"
            },
            "code": "int set_flag_and_values_if_not_set_080025a4(int *input_array, uint *input_values) {\n  uint value1 = input_values[0];\n  uint value2 = input_values[1];\n  int result = 2;\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    *(undefined *)((int)input_array + 0x39) = 2;\n    int array_value = *input_array;\n    *(uint *)(array_value + 4) = *(uint *)(array_value + 4) & 0xffffff8f;\n    *(uint *)(array_value + 4) = *(uint *)(array_value + 4) | value1;\n    *(uint *)(array_value + 8) = *(uint *)(array_value + 8) & 0xffffff7f;\n    *(uint *)(array_value + 8) = *(uint *)(array_value + 8) | value2;\n    *(undefined *)((int)input_array + 0x39) = 1;\n    result = 0;\n    *(undefined *)(input_array + 0xe) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_values_if_not_set_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "getShiftedValueBasedOnLeadingZeros_08002220",
                "uVar1": "leadingZeros",
                "PTR_DAT_0800224c": "pointerToData",
                "PTR_DAT_08002248": "pointerToTable",
                "DAT_08002244": "data",
                "shiftedValue": "shiftedValue"
            },
            "code": "uint getShiftedValueBasedOnLeadingZeros_08002220(void)\n{\n  uint leadingZeros = count_leading_zeroes(0xe00000);\n  uint shiftedValue = *(uint *)PTR_DAT_0800224c >> PTR_DAT_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (leadingZeros & 0xff)];\n  return shiftedValue;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "getShiftedValueBasedOnLeadingZeros_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "read_MS5611_08003034",
                "param_1": "i2c_address",
                "param_2": "data",
                "param_3": "data_length",
                "param_4": "result",
                "local_c": "local_result",
                "PTR_s____Src_MS5611_c_08003064": "src_address",
                "0xee": "cmd",
                "0x8c": "src_length"
            },
            "code": "uint read_MS5611_08003034(uint32_t i2c_address, uint8_t *data, uint8_t data_length, uint32_t *result){\n  uint32_t local_result = *result;\n  uint8_t cmd = 0xee;\n  uint8_t *PTR_s____Src_MS5611_c_08003064 = PTR_s____Src_MS5611_c_08003064;\n  uint8_t src_length = 0x8c;\n  FUN_080040b8(cmd, 0, &local_result, data_length, PTR_s____Src_MS5611_c_08003064, src_length, i2c_address);\n  *result = local_result;\n  return (uint)CONCAT12((undefined)local_result, CONCAT11(local_result._1_1_, local_result._2_1_));\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "read_MS5611_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "set_flag_if_param_is_dat_08004e7c",
                "param_1": "param",
                "local_18": "value1",
                "local_14": "value2",
                "local_10": "value3",
                "local_c": "N/A"
            },
            "code": "void set_flag_if_param_is_dat_08004e7c(int *param)\n{\n  int *dat_ptr = (int *)DAT_08004edc;\n  int *flag_ptr = (int *)(DAT_08004edc + 0xd818);\n  if (*param == *dat_ptr) {\n    *flag_ptr |= 0x4000;\n    int value1 = 0x200;\n    int value2 = 2;\n    int value3 = 3;\n    FUN_08001264(DAT_08004ee0, &value1);\n    value1 = 0x400;\n    value2 = 0;\n    value3 = 0;\n    FUN_08001264(DAT_08004ee0, &value1);\n    FUN_08001194(0x25, 0, 0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}",
            "called": [
                "FUN_080011fc",
                "FUN_08001194",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_is_dat_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "set_flag_and_call_function_08001530",
                "param_1": "flag",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "puVar3": "flag_ptr",
                "ppuVar4": "flag_ptr_ptr",
                "uVar5": "data1",
                "uVar6": "data2"
            },
            "code": "int set_flag_and_call_function_08001530(uint **flag, uint data1, uint data2, int param4, uint param5)\n{\n  int result;\n  int start_time = FUN_0800115c();\n  uint *flag_ptr = *flag;\n  uint **flag_ptr_ptr = flag;\n  uint data3 = flag_ptr[5];\n\n  *flag_ptr = *flag_ptr | 0x100;\n\n  do {\n    if ((int)(data3 << 0x1f) < 0) {\n      flag_ptr[4] = data1 & 0xfe;\n      result = FUN_08001460(flag, DAT_080015e4, param5, flag_ptr, flag_ptr_ptr, data1, data2);\n\n      if (result == 0) {\n        result = FUN_080014e2(flag, param5, flag_ptr[5], flag_ptr[6]);\n\n        if (result == 0) {\n          flag_ptr = *flag;\n          if (param4 == 1) {\n            flag_ptr[4] = data2 & 0xff;\n            return result;\n          }\n          flag_ptr[4] = data2 >> 8;\n          result = FUN_080014e2(flag, param5);\n\n          if (result == 0) {\n            flag_ptr = *flag;\n            flag_ptr[4] = data2 & 0xff;\n            return result;\n          }\n        }\n\n        if ((*flag)[0xe] != (uint *)0x4) {\n          return 3;\n        }\n\n        **flag = **flag | 0x200;\n      }\n      else if ((*flag)[0xe] != (uint *)0x4) {\n        return 3;\n      }\n\n      return 1;\n    }\n\n    if ((param5 == 0xffffffff) || (FUN_0800115c() - start_time >= param5)) {\n      (*flag + 0x35) = 0x20;\n      (*(flag + 0xd)) = 0;\n      return 3;\n    }\n  } while(true);\n}\n",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_function_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "store_param_in_pointer_08003314",
                "param_1": "param",
                "PTR_DAT_0800331c": "PTR_data",
                "undefined4": "data_type"
            },
            "code": "void store_param_in_pointer_08003314(void* param) {\n  *(undefined4*)PTR_DAT_0800331c = (undefined4)param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "store_param_in_pointer_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "FUN_08005854": "get_local_variable_count_08005854",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "puVar1": "local_pointer_1",
                "iVar2": "local_variable_3",
                "puVar3": "local_pointer_3",
                "piVar4": "local_pointer_4",
                "uVar5": "return_value_1",
                "uVar6": "local_variable_2",
                "local_48": "local_variable_4",
                "local_44": "local_pointer_2",
                "local_40": "local_variable_5",
                "uStack_3c": "uStack_3c",
                "local_38": "local_variable_6",
                "uStack_34": "uStack_34",
                "local_30": "local_variable_7",
                "local_28": "local_variable_1"
            },
            "code": "undefined8 get_local_variable_count_08005854(undefined4 param_1, undefined4 param_2) {\n    undefined *local_pointer_1 = PTR_DAT_080058f8;\n    undefined8 return_value_1 = FUNC_08005c70();\n    if (*local_pointer_1 == -1) {\n        return return_value_1;\n    }\n    int local_variable_1 = FUN_08000a04(param_1, param_2, param_1, param_2);\n    if (local_variable_1 != 0) {\n        return return_value_1;\n    }\n    undefined8 local_variable_2 = do_nothing_0800708c(param_1, param_2);\n    int local_variable_3 = FUN_080009f0((int)local_variable_2, (int)((ulonglong)local_variable_2 >> 0x20), 0, DAT_080058ec);\n    if (local_variable_3 == 0) {\n        return return_value_1;\n    }\n    undefined4 local_variable_4 = 1;\n    undefined *local_pointer_2 = PTR_DAT_080058f0;\n    undefined4 local_variable_5 = param_1;\n    undefined4 uStack_3c = param_2;\n    undefined4 local_variable_6 = param_1;\n    undefined4 uStack_34 = param_2;\n    undefined8 local_variable_7 = FUN_080070a4(PTR_DAT_080058f4);\n    if (*local_pointer_1 != '\\x02') {\n        int local_variable_8 = FUN_0800709e(&local_variable_4);\n        if (local_variable_8 != 0) goto LAB_080058d0;\n    }\n    undefined4 *local_pointer_3 = (undefined4 *)FUN_080072ac();\n    *local_pointer_3 = 0x21;\nLAB_080058d0:\n    if (local_variable_1 != 0) {\n        int *local_pointer_4 = (int *)FUN_080072ac();\n        *local_pointer_4 = local_variable_1;\n    }\n    return local_variable_7;\n}\n",
            "called": [
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080070a4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "get_local_variable_count_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "is_input_null_08001014",
                "in_ZR": "input_char",
                "FUN_08001004": "call_input_function"
            },
            "code": "bool is_input_null_08001014(void)\\n{\\n  char input_char;\\n  call_input_function();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "is_input_null_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_value_080071c0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp1",
                "iVar2": "temp2",
                "uVar3": "constant1",
                "uVar4": "constant2",
                "uVar5": "temp3",
                "uVar6": "result"
            },
            "code": "ulonglong calculate_value_080071c0(uint32_t param1, uint32_t param2, int param3, uint32_t param4)\n{\n  uint32_t temp1;\n  int temp2;\n  uint32_t constant1;\n  uint32_t constant2;\n  uint32_t temp3;\n  ulonglong result;\n  \n  result = ((ulonglong) param2 << 32) | param1;\n  temp1 = (param2 << 1) >> 21;\n  constant1 = 0x7fffffff;\n  constant2 = 0x800fffff;\n  \n  if (temp1 == 0) {\n    if ((param2 & constant1 | param1) == 0) {\n      return result;\n    }\n    result = do_something_1(param1, param2, 0, param4);\n    constant1 = DAT_08007294;\n    constant2 = DAT_08007280;\n    if (param3 < constant1) {\n      temp1 = (((int64_t) (result >> 32)) << 1) >> 21;\n      temp1 -= 54;\n    }\n  }\n  else if (temp1 == 2047) {\n    result = do_something_2(param1, param2, param1, param2, param4);\n    return result;\n  }\n  \n  temp3 = result >> 32;\n  temp2 = temp1 + param3;\n  \n  if (temp2 < 2047) {\n    if (temp2 > 0) {\n      result = (result & 0xffffffff) | ((ulonglong) (temp3 & constant2 | temp2 * 0x100000) << 32);\n    }\n    else if (temp2 + 53 < 0 == __builtin_sub_overflow(temp2, 53, &temp2)) {\n      result = (result & 0xffffffff) | ((ulonglong) (temp3 & constant2 | (temp2 + 54) * 0x100000) << 32);\n      constant1 = 0;\n      constant2 = DAT_08007298;\n    }\n    else if (param3 < 49873) {\n      result = do_something_1(DAT_08007284, DAT_08007280, (int) result, temp3);\n      constant1 = DAT_08007294;\n      constant2 = DAT_08007280;\n    }\n  }\n  else {\n    result = do_something_1(DAT_0800728c, DAT_08007288, (int) result, temp3);\n    constant1 = DAT_08007294;\n    constant2 = DAT_08007280;\n  }\n  \n  result = do_something_1((int) result, (int) (result >> 32), constant2, constant1);\n  return result;\n}",
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_value_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_char_in_string_08005614",
                "param_1": "str",
                "param_2": "target_char",
                "param_3": "str_len",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char* find_char_in_string_08005614(char* str, char target_char, int str_len) {\n  char* current_char = str;\n  while (current_char != str + str_len) {\n    if (*current_char == target_char) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_char_in_string_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_080070a4",
                "DAT_080070ac": "global_variable"
            },
            "code": "unsigned long long shift_left_080070a4(void)\n{\n    unsigned long long shifted_value = (unsigned long long)DAT_080070ac << 0x20;\n    return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "shift_left_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "check_and_return_value_0800407c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "output_1",
                "param_4": "output_2",
                "iVar1": "result",
                "local_14": "message",
                "FUNC_08001938": "validate_input",
                "PTR_DAT_080040b4": "input_data"
            },
            "code": "int check_and_return_value_0800407c(int input_1, int input_2, int output_1, int output_2)\n{\n  int result = 0;\n  char message[8];\n  message[0] = 0;\n  result = validate_input(PTR_DAT_080040b4, input_1, input_2, 1, message, 1, 200);\n  if (result != 0) {\n    process_output(output_1, output_2);\n  }\n  return message[0];\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_080040e8"
            ],
            "imported": false,
            "current_name": "check_and_return_value_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = FUN_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = FUN_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = FUN_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = FUN_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = FUN_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = FUN_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08002f28();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004a84();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = FUN_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = FUN_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = FUN_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = FUN_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = FUN_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    FUN_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = FUN_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000c44",
                "FUN_08005900",
                "FUN_08003034",
                "FUN_08004348",
                "FUN_08002f28",
                "FUN_080043bc",
                "FUN_08004410",
                "thunk_FUN_0800115c",
                "FUN_0800403c",
                "FUN_08000a30",
                "FUN_08001078",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08004434",
                "FUN_08000adc",
                "FUN_08004384",
                "FUN_08004a84",
                "FUN_08000168",
                "FUN_08000e54",
                "FUN_08004458"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_data_080022d0",
                "param_1": "data_index",
                "param_2": "data_array",
                "uVar1": "data1",
                "uVar2": "data2",
                "uVar3": "data3",
                "mask1": "mask1",
                "mask2": "mask2",
                "mask3": "mask3",
                "mask4": "mask4"
            },
            "code": "void update_data_080022d0(int data_index, uint *data_array)\n{\n  uint mask1 = 0xfffffeff;\n  uint mask2 = 0xfffffdff;\n  uint mask3 = 0xfffff7ff;\n  uint mask4 = 0xfffffbff;\n  \n  uint data1 = *(uint *)(data_index + 0x20) & mask1;\n  uint data2 = *(uint *)(data_index + 4);\n  uint data3 = *data_array;\n  uint data4 = data_array[2] << 8;\n  \n  if (data_index == PTR_08002320) {\n    data4 |= data_array[3] << 8;\n    data2 = (data2 & 0xffffcfff) | ((data_array[5] | data_array[6]) << 4);\n    data1 = (data1 & mask2) | data4;\n    data1 &= mask3;\n  }\n  \n  *(uint *)(data_index + 4) = data2;\n  *(uint *)(data_index + 0x1c) = (*(uint *)(data_index + 0x1c) & 0xffffff8c) | data3;\n  *(uint *)(data_index + 0x3c) = data_array[1];\n  *(uint *)(data_index + 0x20) = data1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "decode_uint_080010c4",
                "param_1": "encoded",
                "uVar1": "shift_amount",
                "decoded": "decoded",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint decode_uint_080010c4(uint encoded) {\n  uint decoded;\n  if (((encoded & 0x80000000) != 0) || (encoded << 1 < 0x7f000000)) {\n    return 0;\n  }\n  uint shift_amount = (encoded << 1) >> 0x18;\n  uint mask = 0xff;\n  decoded = 0x9e - shift_amount;\n  if ((int)decoded >= 0) {\n    decoded = (encoded << 8 | 0x80000000) >> (decoded & mask);\n  }\n  if ((decoded == 0xffffffff) || ((decoded == 0xffffff9f) && ((encoded & 0x7fffff) != 0))) {\n    return 0;\n  }\n  return decoded;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "decode_uint_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "perform_operation_080040b8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "output1",
                "param_6": "output2",
                "iVar1": "operation_result",
                "FUNC_08001938": "perform_sub_operation",
                "PTR_DAT_080040e4": "data_pointer",
                "FUN_08004490": "perform_error_handling"
            },
            "code": "void perform_operation_080040b8(int input1, int input2, int input3, int input4, int output1, int output2)\n{\n  int operation_result;\n  operation_result = perform_sub_operation(PTR_DAT_080040e4, input1, input2, 1, input3, input4, 200, input4);\n  if (operation_result != 0) {\n    perform_error_handling(output1, output2);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "perform_operation_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "process_data_0800245c",
                "param_1": "data",
                "param_2": "arg2",
                "param_3": "arg3",
                "extraout_r1": "extra_out_1",
                "extraout_r1_00": "extra_out_2",
                "extraout_r1_01": "extra_out_3",
                "extraout_r1_02": "extra_out_4",
                "iVar1": "result_1",
                "uVar2": "result_2",
                "iVar3": "data_ptr"
            },
            "code": "void process_data_0800245c(int *data, undefined4 arg2, undefined4 arg3) {\n  int extra_out_1;\n  int extra_out_2;\n  int extra_out_3;\n  int extra_out_4;\n  int data_ptr;\n  uint result;\n\n  if (*(char *)(data + 0xe) == 1) {\n    return;\n  }\n\n  *(undefined *)((int)data + 0x39) = 2;\n  *(undefined *)(data + 0xe) = 1;\n\n  switch(arg3) {\n    case 0:\n      init_data(*data);\n      data_ptr = *data;\n      result = *(uint *)(extra_out_1 + 0x10);\n      *(uint *)(data_ptr + 0x18) |= 8;\n      *(uint *)(data_ptr + 0x18) &= 0xfffffffb;\n      result |= *(uint *)(data_ptr + 0x18);\n      break;\n    default:\n      goto switch_case_1;\n    case 4:\n      process_data_0800245c_1(*data);\n      data_ptr = *data;\n      result = *(uint *)(extra_out_2 + 0x10);\n      *(uint *)(data_ptr + 0x18) |= 0x800;\n      *(uint *)(data_ptr + 0x18) &= 0xfffffbff;\n      result |= *(uint *)(data_ptr + 0x18) | *(int *)(extra_out_2 + 0x10) << 8;\n      break;\n    case 8:\n      process_data_0800245c_2(*data);\n      data_ptr = *data;\n      result = *(uint *)(extra_out_3 + 0x10);\n      *(uint *)(data_ptr + 0x1c) |= 8;\n      *(uint *)(data_ptr + 0x1c) &= 0xfffffffb;\n      result |= *(uint *)(data_ptr + 0x1c);\n      goto LAB_080024fa;\n    case 0xc:\n      process_data_0800245c_3(*data);\n      data_ptr = *data;\n      result = *(uint *)(extra_out_4 + 0x10);\n      *(uint *)(data_ptr + 0x1c) |= 0x800;\n      *(uint *)(data_ptr + 0x1c) &= 0xfffffbff;\n      result |= *(uint *)(data_ptr + 0x1c) | *(int *)(extra_out_4 + 0x10) << 8;\n      goto LAB_080024fa;\n  }\n\n  *(uint *)(data_ptr + 0x18) = result;\n\nswitch_case_1:\n  *(undefined *)((int)data + 0x39) = 1;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "print_error_message_and_wait_for_input_08004490",
                "param_1": "error_code",
                "param_2": "line_number",
                "puVar3": "error_message",
                "puVar2": "line_message",
                "uVar1": "flags"
            },
            "code": "void print_error_message_and_wait_for_input_08004490(int error_code, int line_number) {\n  int flags = 0x4000 | 0x8000 | 0x2000;\n  char* error_message = \"Error with %s\";\n  char* line_message = \"@ line %d\";\n  while(true) {\n    print_flags(flags);\n    print_formatted_string(error_message, \"s_Error_with_08004510\");\n    print_formatted_string(error_message, error_code);\n    print_formatted_string(line_message, \"s__at_line__0800450c\", line_number);\n    print_formatted_string(line_message, line_number);\n    print_character(10);\n    wait_for(500);\n  }\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "FUN_08004c8c",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_080040b8",
                "FUN_0800403c",
                "FUN_0800407c",
                "FUN_0800458c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "print_error_message_and_wait_for_input_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "decode_080015e8",
                "param_1": "data",
                "param_2": "dataSize",
                "param_3": "dataOffset",
                "param_4": "flag",
                "param_5": "timeout",
                "iVar1": "start",
                "puVar3": "ptr",
                "ppuVar4": "dataPtr",
                "uVar5": "dataSizeCopy",
                "uVar6": "dataOffsetCopy",
                "DAT_080016f0": "DAT_080016f0"
            },
            "code": "undefined4 decode_080015e8(uint **data, uint dataSize, uint dataOffset, int flag, uint timeout) {\n  int start = FUN_0800115c();\n  uint *ptr = *data;\n  *ptr |= 0x400;\n  *ptr |= 0x100;\n  uint **dataPtr = data;\n  uint dataSizeCopy = dataSize;\n  uint dataOffsetCopy = dataOffset;\n  while (-1 < (int)(ptr[5] << 0x1f)) {\n    if (timeout != 0xffffffff) {\n        if (timeout == 0 || FUN_0800115c() - start > timeout) {\n            *(undefined *)((int)data + 0x35) = 0x20;\n            *(undefined *)(data + 0xd) = 0;\n            return 3;\n        }\n    }\n  }\n  ptr[4] = dataSize & 0xfe;\n  int result = FUN_08001460(data, DAT_080016f0, timeout, ptr, dataPtr, dataSizeCopy, dataOffsetCopy);\n  if (result != 0) {\n    goto LAB_080016ba;\n  }\n  result = FUN_080014e2(data, timeout, (*data)[5], (*data)[6]);\n  if (result == 0) {\n    ptr = *data;\n    if (flag != 1) {\n        ptr[4] = dataOffset >> 8;\n        result = FUN_080014e2(data, timeout);\n        if (result != 0) {\n            goto LAB_08001642;\n        }\n        ptr = *data;\n    }\n    ptr[4] = dataOffset & 0xff;\n    result = FUN_080014e2(data, timeout);\n    if (result == 0) {\n        **data = **data | 0x100;\n        int end = FUN_0800115c();\n        do {\n            do {\n                if ((int)((*data)[5] << 0x1f) < 0) {\n                    (*data)[4] = dataSize & 0xff | 1;\n                    result = FUN_08001460(data, DAT_080016f0, timeout);\n                    if (result == 0) {\n                        return 0;\n                    }\n                    goto LAB_080016ba;\n                }\n            } while (timeout == 0xffffffff);\n        } while ((timeout != 0) && (FUN_0800115c() - end <= timeout));\n        *(undefined *)((int)data + 0x35) = 0x20;\n        *(undefined *)(data + 0xd) = 0;\n        return 3;\n    }\n  }\n  LAB_08001642:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n  LAB_080016ba:\n  if (data[0xe] != (uint *)0x4) {\n    return 3;\n  }\n  return 1;\n}\n",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "decode_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "parse_input_08004e14",
                "param_1": "input_value",
                "param_2": "constant_1",
                "param_3": "constant_2",
                "uVar1": "constant_4",
                "iVar2": "input",
                "local_18": "constant_3",
                "local_14": "constant_6",
                "uStack_10": "constant_7",
                "local_c": "constant_5"
            },
            "code": "void parse_input_08004e14(int *input_value, undefined4 constant_1, undefined4 constant_2)\n{\n  undefined4 constant_3;\n  int input = *input_value;\n  undefined4 constant_4 = DAT_08004e6c;\n  if (input == DAT_08004e68) {\n    constant_3 = 0x800;\n  }\n  else if (input == 0x40000000) {\n    constant_3 = 2;\n  }\n  else {\n    constant_4 = DAT_08004e74;\n    if (input == DAT_08004e70) {\n      constant_3 = 3;\n    }\n    else {\n      if (input != DAT_08004e78) {\n        return;\n      }\n      constant_3 = 0x300;\n    }\n  }\n  undefined4 constant_5 = 2;\n  undefined4 constant_6 = 2;\n  undefined4 constant_7 = constant_2;\n  FUN_08001264(constant_4, &constant_3);\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "parse_input_08004e14"
        }
    },
    "used_tokens": 149387,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08003320",
            "FUN_08004410",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_08001028",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_0800290c",
            "FUN_08002f28",
            "FUN_08004384",
            "FUN_080009a0",
            "FUN_08003298",
            "FUN_08004300",
            "FUN_08005630",
            "FUN_08000980",
            "FUN_08004028",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08005bc8",
            "FUN_08001436",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_08000904",
            "FUN_0800299a",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_080015e8",
            "FUN_08004e14"
        ]
    ],
    "locked_functions": []
}