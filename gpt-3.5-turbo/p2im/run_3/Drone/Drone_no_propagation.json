{
    "functions": {
        "FUN_08000110": {
            "entrypoint": "0x08000110",
            "current_name": "initialize_flag_08000110",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initializeFlag_08000110(undefined4 input)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000110": "initialize_flag_08000110",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000134": {
            "entrypoint": "0x08000134",
            "current_name": "concatenate_params_08000134",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenateParams_08000134(undefined4 firstParam,undefined4 secondParam)\n\n{\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08000134": "concatenate_params_08000134",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_08004fb4"
            ],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000150": {
            "entrypoint": "0x08000150",
            "current_name": "find_string_length_08000150",
            "code": "\nchar * find_string_length_08000150(char *str)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *str_ptr;\n  \n  str_ptr = str;\n  do {\n    next_char_ptr = str_ptr + 1;\n    current_char = *str_ptr;\n    str_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)str);\n}\n\n",
            "renaming": {
                "FUN_08000150": "find_string_length_08000150",
                "param_1": "str",
                "cVar1": "current_char",
                "pcVar2": "next_char_ptr",
                "pcVar3": "str_ptr"
            },
            "calling": [
                "FUN_08004c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000168": {
            "entrypoint": "0x08000168",
            "current_name": "calculate_08000168",
            "code": "\nulonglong calculate_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool tempBool1;\n  bool tempBool2;\n  bool tempBool3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  tempBool1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  tempBool2 = tempBool1 && input1 == input3;\n  if (!tempBool1 || input1 != input3) {\n    tempBool2 = (temp9 | input1) == 0;\n  }\n  if (!tempBool2) {\n    tempBool2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp1 == -1;\n  }\n  if (tempBool2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      tempBool2 = (temp11 | temp9 << 0xc) == 0;\n      if (tempBool2) {\n        tempBool2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (tempBool2) {\n        tempBool2 = temp9 == temp6;\n      }\n      if (!tempBool2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      tempBool2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)tempBool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)tempBool2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  tempBool2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (tempBool2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    tempBool2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)tempBool2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    tempBool2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)tempBool2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    tempBool2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!tempBool2 - temp6;\n    temp11 = -(uint)(tempBool2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    tempBool2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      tempBool2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)tempBool2) | input2,\n                    temp6 + tempBool2);\n  }\n  tempBool1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  tempBool2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)tempBool1;\n  temp11 = temp11 * 2 + (uint)(tempBool2 || CARRY4(temp10,(uint)tempBool1));\n  temp10 = temp9 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_08000278;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  tempBool3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  tempBool2 = (int)temp6 < 0;\n  tempBool1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    tempBool3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    tempBool2 = temp8 < 0;\n    tempBool1 = temp8 == 0;\n    temp6 = temp11;\n    if (!tempBool1 && tempBool2 == tempBool3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000168": "calculate_08000168",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "tempBool1",
                "bVar14": "tempBool2",
                "bVar15": "tempBool3"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800016c": {
            "entrypoint": "0x0800016c",
            "current_name": "calculate_sum_of_unsigned_numbers_0800016c",
            "code": "\nulonglong calculate_sum_of_unsigned_numbers_0800016c(uint number_1,uint number_2,uint number_3,uint number_4)\n\n{\n  int shifted_number_2;\n  byte carry_flag;\n  uint result_sum_lower;\n  uint carry_flag_temp;\n  uint result_sum_upper;\n  int shifted_number_4;\n  uint number_2_shifted;\n  uint number_4_shifted;\n  uint result_lower;\n  uint result_upper_temp;\n  uint number_1_lower_temp;\n  uint number_1_upper_temp;\n  bool is_equal_flag;\n  bool is_zero_flag;\n  bool subtract_flag;\n  \n  number_2_shifted = number_2 << 1;\n  result_lower = number_4 << 1;\n  is_equal_flag = ((number_2 ^ number_4) & 0x7fffffff) == 0;\n  is_zero_flag = is_equal_flag && number_1 == number_3;\n  if (!is_equal_flag || number_1 != number_3) {\n    is_zero_flag = (number_2_shifted | number_1) == 0;\n  }\n  if (!is_zero_flag) {\n    is_zero_flag = (result_lower | number_3) == 0;\n  }\n  shifted_number_4 = (int)number_2_shifted >> 0x15;\n  if (!is_zero_flag) {\n    is_zero_flag = shifted_number_4 == -1;\n  }\n  shifted_number_2 = (int)result_lower >> 0x15;\n  if (!is_zero_flag) {\n    is_zero_flag = shifted_number_2 == -1;\n  }\n  if (is_zero_flag) {\n    if (shifted_number_4 == -1 || shifted_number_2 == -1) {\n      result_lower = number_4;\n      number_2_shifted = number_3;\n      if (shifted_number_4 == -1) {\n        result_lower = number_2;\n        number_2_shifted = number_1;\n      }\n      if (shifted_number_4 != -1 || shifted_number_2 != -1) {\n        number_3 = number_2_shifted;\n        number_4 = result_lower;\n      }\n      is_zero_flag = (number_2_shifted | result_lower << 0xc) == 0;\n      if (is_zero_flag) {\n        is_zero_flag = (number_3 | number_4 << 0xc) == 0;\n      }\n      if (is_zero_flag) {\n        is_zero_flag = result_lower == number_4;\n      }\n      if (!is_zero_flag) {\n        result_lower = result_lower | 0x80000;\n      }\n      return CONCAT44(result_lower,number_2_shifted);\n    }\n    if (((number_2 ^ number_4) & 0x7fffffff) != 0 || number_1 != number_3) {\n      if ((number_2_shifted | number_1) == 0) {\n        number_1 = number_3;\n        number_2 = number_4;\n      }\n      return CONCAT44(number_2,number_1);\n    }\n    if (number_2 != number_4) {\n      return 0;\n    }\n    if (number_2_shifted >> 0x15 == 0) {\n      is_zero_flag = (number_1 & 0x80000000) != 0;\n      result_lower = number_2 * 2 + (uint)is_zero_flag;\n      if (CARRY4(number_2,number_2) || CARRY4(number_2 * 2,(uint)is_zero_flag)) {\n        result_lower = result_lower | 0x80000000;\n      }\n      return CONCAT44(result_lower,number_1 << 1);\n    }\n    if (number_2_shifted < 0xffc00000) {\n      return CONCAT44(number_2 + 0x100000,number_1);\n    }\n    number_2 = number_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(number_2 | 0x7ff00000) << 0x20;\n  }\n  number_2_shifted = number_2_shifted >> 0x15;\n  result_lower = result_lower >> 0x15;\n  result_upper_temp = result_lower - number_2_shifted;\n  is_zero_flag = result_upper_temp != 0;\n  if (result_lower < number_2_shifted) {\n    result_upper_temp = -result_upper_temp;\n  }\n  number_4_shifted = number_1;\n  result_sum_upper = number_2;\n  if (is_zero_flag && number_2_shifted <= result_lower) {\n    number_2_shifted = number_2_shifted + result_upper_temp;\n    number_4_shifted = number_3;\n    result_sum_upper = number_4;\n    number_3 = number_1;\n    number_4 = number_2;\n  }\n  if (0x36 < result_upper_temp) {\n    return CONCAT44(result_sum_upper,number_4_shifted);\n  }\n  result_lower = result_sum_upper & 0xfffff | 0x100000;\n  if ((result_sum_upper & 0x80000000) != 0) {\n    is_zero_flag = number_4_shifted != 0;\n    number_4_shifted = -number_4_shifted;\n    result_lower = -result_lower - (uint)is_zero_flag;\n  }\n  result_sum_upper = number_4 & 0xfffff | 0x100000;\n  if ((number_4 & 0x80000000) != 0) {\n    is_zero_flag = number_3 != 0;\n    number_3 = -number_3;\n    result_sum_upper = -result_sum_upper - (uint)is_zero_flag;\n  }\n  if (number_2_shifted == result_upper_temp) {\n    result_sum_upper = result_sum_upper ^ 0x100000;\n    if (number_2_shifted == 0) {\n      result_lower = result_lower ^ 0x100000;\n      number_2_shifted = 1;\n    }\n    else {\n      result_upper_temp = result_upper_temp - 1;\n    }\n  }\n  number_1_upper_temp = -result_upper_temp + 0x20;\n  if ((int)result_upper_temp < 0x21) {\n    number_1_lower_temp = number_3 << (number_1_upper_temp & 0xff);\n    number_3 = number_3 >> (result_upper_temp & 0xff);\n    result_sum_lower = number_4_shifted + number_3;\n    carry_flag_temp = result_sum_upper << (number_1_upper_temp & 0xff);\n    number_1_upper_temp = result_sum_lower + carry_flag_temp;\n    result_lower = result_lower + CARRY4(number_4_shifted,number_3) + ((int)result_sum_upper >> (result_upper_temp & 0xff)) +\n            (uint)CARRY4(result_sum_lower,carry_flag_temp);\n  }\n  else {\n    number_1_lower_temp = result_sum_upper << (-result_upper_temp + 0x40 & 0xff);\n    if (number_3 != 0) {\n      number_1_lower_temp = number_1_lower_temp | 2;\n    }\n    result_sum_upper = (int)result_sum_upper >> (result_upper_temp - 0x20 & 0xff);\n    number_1_upper_temp = number_4_shifted + result_sum_upper;\n    result_lower = result_lower + ((int)result_sum_upper >> 0x1f) + (uint)CARRY4(number_4_shifted,result_sum_upper);\n  }\n  number_2 = result_lower & 0x80000000;\n  result_upper_temp = result_lower;\n  if ((int)result_lower < 0) {\n    is_zero_flag = number_1_lower_temp == 0;\n    number_1_lower_temp = -number_1_lower_temp;\n    result_upper_temp = -number_1_upper_temp;\n    number_1_upper_temp = -(uint)!is_zero_flag - number_1_upper_temp;\n    result_upper_temp = -(uint)(is_zero_flag <= result_upper_temp) - result_lower;\n  }\n  if (0xfffff < result_upper_temp) {\n    number_4_shifted = number_2_shifted - 1;\n    if (0x1fffff < result_upper_temp) {\n      result_lower = result_upper_temp & 1;\n      result_upper_temp = result_upper_temp >> 1;\n      carry_flag = (byte)number_1_upper_temp;\n      number_1_upper_temp = (uint)(result_lower != 0) << 0x1f | number_1_upper_temp >> 1;\n      number_1_lower_temp = (uint)(carry_flag & 1) << 0x1f | number_1_lower_temp >> 1;\n      number_4_shifted = number_2_shifted;\n      if (0xffbfffff < number_2_shifted * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    is_zero_flag = 0x7fffffff < number_1_lower_temp;\n    if (number_1_lower_temp == 0x80000000) {\n      is_zero_flag = (number_1_upper_temp & 1) != 0;\n    }\n    return CONCAT44(result_upper_temp + number_4_shifted * 0x100000 + (uint)CARRY4(number_1_upper_temp,(uint)is_zero_flag) | number_2,\n                    number_1_upper_temp + is_zero_flag);\n  }\n  is_equal_flag = (number_1_lower_temp & 0x80000000) != 0;\n  number_1_lower_temp = number_1_lower_temp << 1;\n  number_4_shifted = number_1_upper_temp * 2;\n  is_zero_flag = CARRY4(number_1_upper_temp,number_1_upper_temp);\n  number_1_upper_temp = number_1_upper_temp * 2 + (uint)is_equal_flag;\n  result_upper_temp = result_upper_temp * 2 + (uint)(is_zero_flag || CARRY4(number_4_shifted,(uint)is_equal_flag));\n  number_4_shifted = number_2_shifted - 2;\n  if ((result_upper_temp & 0x100000) != 0) goto LAB_08000278;\n  result_sum_upper = number_1_upper_temp;\n  number_2_shifted = result_upper_temp;\n  if (result_upper_temp == 0) {\n    result_sum_upper = 0;\n    number_2_shifted = number_1_upper_temp;\n  }\n  shifted_number_4 = LZCOUNT(number_2_shifted);\n  if (result_upper_temp == 0) {\n    shifted_number_4 = shifted_number_4 + 0x20;\n  }\n  number_1_upper_temp = shifted_number_4 - 0xb;\n  subtract_flag = SBORROW4(number_1_upper_temp,0x20);\n  result_upper_temp = shifted_number_4 - 0x2b;\n  is_zero_flag = (int)result_upper_temp < 0;\n  is_equal_flag = result_upper_temp == 0;\n  if ((int)number_1_upper_temp < 0x20) {\n    subtract_flag = SCARRY4(result_upper_temp,0xc);\n    shifted_number_4 = shifted_number_4 + -0x1f;\n    is_zero_flag = shifted_number_4 < 0;\n    is_equal_flag = shifted_number_4 == 0;\n    result_upper_temp = number_1_upper_temp;\n    if (!is_equal_flag && is_zero_flag == subtract_flag) {\n      result_sum_upper = number_2_shifted << (number_1_upper_temp & 0xff);\n      number_2_shifted = number_2_shifted >> (0xcU - shifted_number_4 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (is_equal_flag || is_zero_flag != subtract_flag) {\n    number_1_lower_temp = 0x20 - result_upper_temp;\n  }\n  number_2_shifted = number_2_shifted << (result_upper_temp & 0xff);\n  if (is_equal_flag || is_zero_flag != subtract_flag) {\n    number_2_shifted = number_2_shifted | result_sum_upper >> (number_1_lower_temp & 0xff);\n  }\n  if (is_equal_flag || is_zero_flag != subtract_flag) {\n    result_sum_upper = result_sum_upper << (result_upper_temp & 0xff);\n  }\nLAB_080002f0:\n  if ((int)number_1_upper_temp <= (int)number_4_shifted) {\n    return CONCAT44(number_2_shifted + (number_4_shifted - number_1_upper_temp) * 0x100000 | number_2,result_sum_upper);\n  }\n  result_upper_temp = ~(number_4_shifted - number_1_upper_temp);\n  if ((int)result_upper_temp < 0x1f) {\n    shifted_number_4 = result_upper_temp - 0x13;\n    if (shifted_number_4 != 0 && shifted_number_4 < 0 == SCARRY4(result_upper_temp - 0x1f,0xc)) {\n      return CONCAT44(result_lower,result_sum_upper >> (0x20 - (0xcU - shifted_number_4) & 0xff) | number_2_shifted << (0xcU - shifted_number_4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result_upper_temp = result_upper_temp + 1;\n    return CONCAT44(number_2 | number_2_shifted >> (result_upper_temp & 0xff),\n                    result_sum_upper >> (result_upper_temp & 0xff) | number_2_shifted << (0x20 - result_upper_temp & 0xff));\n  }\n  return CONCAT44(result_lower,number_2_shifted >> (result_upper_temp - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800016c": "calculate_sum_of_unsigned_numbers_0800016c",
                "param_1": "number_1",
                "param_2": "number_2",
                "param_3": "number_3",
                "param_4": "number_4",
                "iVar1": "shifted_number_2",
                "bVar2": "carry_flag",
                "uVar3": "result_sum_lower",
                "uVar4": "carry_flag_temp",
                "uVar5": "result_sum_upper",
                "iVar6": "shifted_number_4",
                "uVar7": "number_2_shifted",
                "uVar8": "number_4_shifted",
                "uVar9": "result_lower",
                "uVar10": "result_upper_temp",
                "uVar11": "number_1_lower_temp",
                "uVar12": "number_1_upper_temp",
                "bVar13": "is_equal_flag",
                "bVar14": "is_zero_flag",
                "bVar15": "subtract_flag"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000404": {
            "entrypoint": "0x08000404",
            "current_name": "bitwise_shift_08000404",
            "code": "\nulonglong bitwiseShift_08000404(uint input)\n\n{\n  uint counter;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeroes;\n  uint finalShiftAmount;\n  uint signBit;\n  uint in_r12;\n  bool cond1;\n  bool cond2;\n  bool cond3;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  counter = 0;\n  leadingZeroes = LZCOUNT(absInput);\n  finalShiftAmount = leadingZeroes + 0x15;\n  cond3 = SBORROW4(finalShiftAmount,0x20);\n  shiftAmount = leadingZeroes - 0xb;\n  cond1 = (int)shiftAmount < 0;\n  cond2 = shiftAmount == 0;\n  if (finalShiftAmount < 0x20) {\n    cond3 = SCARRY4(shiftAmount,0xc);\n    cond1 = false;\n    cond2 = leadingZeroes + 1 == 0;\n    shiftAmount = finalShiftAmount;\n    if (!cond2 && cond3 == false) {\n      counter = absInput << finalShiftAmount;\n      absInput = absInput >> (0xcU - (leadingZeroes + 1) & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (cond2 || cond1 != cond3) {\n    in_r12 = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (cond2 || cond1 != cond3) {\n    absInput = absInput | 0U >> (in_r12 & 0xff);\n  }\n  if (cond2 || cond1 != cond3) {\n    counter = 0 << (shiftAmount & 0xff);\n  }\nLAB_080002f0:\n  if (finalShiftAmount < 0x433) {\n    return CONCAT44(absInput + (0x432 - finalShiftAmount) * 0x100000 | signBit,counter);\n  }\n  shiftAmount = ~(0x432 - finalShiftAmount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeroes = shiftAmount - 0x13;\n  if (leadingZeroes == 0 || leadingZeroes < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    counter >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,counter >> (0x20 - (0xcU - leadingZeroes) & 0xff) | absInput << (0xcU - leadingZeroes & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000404": "bitwise_shift_08000404",
                "param_1": "input",
                "uVar1": "counter",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeroes",
                "uVar5": "finalShiftAmount",
                "uVar6": "signBit",
                "bVar7": "cond1",
                "bVar8": "cond2",
                "bVar9": "cond3"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000428": {
            "entrypoint": "0x08000428",
            "current_name": "reverse_bits_08000428",
            "code": "\nulonglong reverseBits_08000428(uint num,undefined4 paramA,undefined4 paramB,uint mask)\n\n{\n  uint resultHigh;\n  uint tempVar;\n  uint result;\n  uint tempVar2;\n  uint shiftedNum;\n  int bitCount;\n  uint shiftAmount;\n  uint remainingBits;\n  bool isNegative;\n  bool isMasked;\n  bool carryFlag;\n  \n  shiftedNum = num << 1;\n  isMasked = shiftedNum == 0;\n  resultHigh = (uint)((num & 0x80000000) != 0) << 0x1f;\n  tempVar2 = (uint)((int)shiftedNum >> 3) >> 1;\n  result = resultHigh | tempVar2;\n  num = num << 0x1d;\n  if (!isMasked) {\n    mask = shiftedNum & 0xff000000;\n    isMasked = mask == 0;\n  }\n  if (!isMasked) {\n    isMasked = mask == 0xff000000;\n  }\n  if (!isMasked) {\n    return CONCAT44(result,num) ^ 0x3800000000000000;\n  }\n  if (shiftedNum == 0 || mask == 0xff000000) {\n    return CONCAT44(result,num);\n  }\n  tempVar = num;\n  shiftedNum = tempVar2;\n  if (tempVar2 == 0) {\n    tempVar = 0;\n    shiftedNum = num;\n  }\n  bitCount = LZCOUNT(shiftedNum);\n  if (tempVar2 == 0) {\n    bitCount = bitCount + 0x20;\n  }\n  shiftAmount = bitCount - 0xb;\n  carryFlag = SBORROW4(shiftAmount,0x20);\n  tempVar2 = bitCount - 0x2b;\n  isMasked = (int)tempVar2 < 0;\n  isNegative = tempVar2 == 0;\n  if ((int)shiftAmount < 0x20) {\n    carryFlag = SCARRY4(tempVar2,0xc);\n    bitCount = bitCount + -0x1f;\n    isMasked = bitCount < 0;\n    isNegative = bitCount == 0;\n    tempVar2 = shiftAmount;\n    if (!isNegative && isMasked == carryFlag) {\n      tempVar = shiftedNum << (shiftAmount & 0xff);\n      shiftedNum = shiftedNum >> (0xcU - bitCount & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isNegative || isMasked != carryFlag) {\n    remainingBits = 0x20 - tempVar2;\n  }\n  shiftedNum = shiftedNum << (tempVar2 & 0xff);\n  if (isNegative || isMasked != carryFlag) {\n    shiftedNum = shiftedNum | tempVar >> (remainingBits & 0xff);\n  }\n  if (isNegative || isMasked != carryFlag) {\n    tempVar = tempVar << (tempVar2 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shiftAmount < 0x381) {\n    return CONCAT44(shiftedNum + (0x380 - shiftAmount) * 0x100000 | resultHigh,tempVar);\n  }\n  tempVar2 = ~(0x380 - shiftAmount);\n  if ((int)tempVar2 < 0x1f) {\n    bitCount = tempVar2 - 0x13;\n    if (bitCount != 0 && bitCount < 0 == SCARRY4(tempVar2 - 0x1f,0xc)) {\n      return CONCAT44(result,tempVar >> (0x20 - (0xcU - bitCount) & 0xff) | shiftedNum << (0xcU - bitCount & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    tempVar2 = tempVar2 + 1;\n    return CONCAT44(resultHigh | shiftedNum >> (tempVar2 & 0xff),\n                    tempVar >> (tempVar2 & 0xff) | shiftedNum << (0x20 - tempVar2 & 0xff));\n  }\n  return CONCAT44(result,shiftedNum >> (tempVar2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "num",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "mask",
                "uVar1": "resultHigh",
                "uVar2": "tempVar",
                "uVar3": "result",
                "uVar4": "tempVar2",
                "uVar5": "shiftedNum",
                "iVar6": "bitCount",
                "uVar7": "shiftAmount",
                "in_r12": "remainingBits",
                "bVar8": "isNegative",
                "bVar9": "isMasked",
                "bVar10": "carryFlag"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d0": {
            "entrypoint": "0x080004d0",
            "current_name": "calculate_080004d0",
            "code": "\nulonglong calculate_080004d0(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong concatenated;\n  \n  concatenated = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    concatenated = FUN_080006ac();\n  }\n  temp1 = (uint)(concatenated >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)concatenated | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)concatenated | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (concatenated & 0xffffffff) * (ulonglong)input3;\n    concatenated = (concatenated & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)concatenated;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (concatenated >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_080004d0": "calculate_080004d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "concatenated"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08003330"
            ],
            "called": [
                "FUN_080006ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006ac": {
            "entrypoint": "0x080006ac",
            "current_name": "calculate_bitwise_080006ac",
            "code": "\nulonglong calculate_bitwise_080006ac(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint mask;\n  bool isZero;\n  \n  temp3 = mask & input4 >> 0x14;\n  if (temp2 != mask && temp3 != mask) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (temp2 == 0) {\n      temp4 = input2 & 0x80000000;\n      do {\n        temp1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(temp1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | temp4;\n      if (temp3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      temp3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  temp4 = input2;\n  if (((!isZero) && ((temp2 != mask || ((input1 | input2 << 0xc) == 0)))) &&\n     ((temp3 != mask || (input1 = input3, temp4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006ac": "calculate_bitwise_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "mask",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000724": {
            "entrypoint": "0x08000724",
            "current_name": "calculate_floating_point_08000724",
            "code": "\nulonglong calculateFloatingPoint_08000724(undefined4 param1,uint param2,uint param3,uint param4)\n\n{\n  uint num1;\n  uint num2;\n  uint num3;\n  uint num4;\n  uint num5;\n  uint num6;\n  uint num7;\n  int difference;\n  uint result1;\n  uint unaff_r5;\n  uint result2;\n  uint result3;\n  uint temp1;\n  uint temp2;\n  bool check1;\n  bool check2;\n  bool check3;\n  undefined8 combinedParams;\n  \n  combinedParams = CONCAT44(param2,param1);\n  temp2 = 0x7ff;\n  num7 = param2 >> 0x14 & 0x7ff;\n  check1 = num7 == 0;\n  if (!check1) {\n    unaff_r5 = param4 >> 0x14 & 0x7ff;\n    check1 = unaff_r5 == 0;\n  }\n  if (!check1) {\n    check1 = num7 == 0x7ff;\n  }\n  if (!check1) {\n    check1 = unaff_r5 == 0x7ff;\n  }\n  if (check1) {\n    combinedParams = FUN_08000892();\n  }\n  result1 = (uint)((ulonglong)combinedParams >> 0x20);\n  result3 = (uint)combinedParams;\n  difference = num7 - unaff_r5;\n  if ((param3 | param4 << 0xc) == 0) {\n    num7 = (result1 ^ param4) & 0x80000000 | result1 & 0xfffff;\n    check3 = SCARRY4(difference,temp2 >> 1);\n    result1 = difference + (temp2 >> 1);\n    check1 = (int)result1 < 0;\n    check2 = result1 == 0;\n    if (!check2 && check1 == check3) {\n      check3 = SBORROW4(temp2,result1);\n      check1 = (int)(temp2 - result1) < 0;\n      check2 = temp2 == result1;\n    }\n    if (!check2 && check1 == check3) {\n      num7 = num7 | result1 * 0x100000;\n    }\n    if (!check2 && check1 == check3) {\n      return CONCAT44(num7,result3);\n    }\n    num7 = num7 | 0x100000;\n    temp2 = 0;\n    check2 = SBORROW4(result1,1);\n    result1 = result1 - 1;\n    check1 = result1 == 0;\n    num3 = result1;\n  }\n  else {\n    num3 = (param4 << 0xc) >> 4 | 0x10000000 | param3 >> 0x18;\n    temp2 = param3 << 8;\n    result2 = (result1 << 0xc) >> 4 | 0x10000000 | result3 >> 0x18;\n    result3 = result3 * 0x100;\n    num7 = (result1 ^ param4) & 0x80000000;\n    check1 = num3 <= result2;\n    if (result2 == num3) {\n      check1 = temp2 <= result3;\n    }\n    difference = difference + (uint)check1;\n    result1 = difference + 0x3fd;\n    if (check1 == false) {\n      num3 = num3 >> 1;\n      temp2 = (uint)((param3 >> 0x18 & 1) != 0) << 0x1f | temp2 >> 1;\n    }\n    temp1 = result3 - temp2;\n    result2 = (result2 - num3) - (uint)(result3 < temp2);\n    num4 = num3 >> 1;\n    num1 = (uint)((num3 & 1) != 0) << 0x1f | temp2 >> 1;\n    result3 = 0x100000;\n    num3 = 0x80000;\n    while( true ) {\n      check1 = num1 <= temp1;\n      if (num4 < result2 || result2 - num4 < (uint)check1) {\n        temp1 = temp1 - num1;\n        result3 = result3 | num3;\n        result2 = (result2 - num4) - (uint)!check1;\n      }\n      num5 = num4 >> 1;\n      num1 = (uint)((num4 & 1) != 0) << 0x1f | num1 >> 1;\n      check2 = num1 <= temp1;\n      check1 = result2 - num5 < (uint)check2;\n      temp2 = result2;\n      if (num5 < result2 || check1) {\n        temp1 = temp1 - num1;\n        temp2 = (result2 - num5) - (uint)!check2;\n      }\n      if (num5 < result2 || check1) {\n        result3 = result3 | num3 >> 1;\n      }\n      result2 = num4 >> 2;\n      num2 = (uint)((num5 & 1) != 0) << 0x1f | num1 >> 1;\n      check2 = num2 <= temp1;\n      check1 = temp2 - result2 < (uint)check2;\n      num5 = temp2;\n      if (result2 < temp2 || check1) {\n        temp1 = temp1 - num2;\n        num5 = (temp2 - result2) - (uint)!check2;\n      }\n      if (result2 < temp2 || check1) {\n        result3 = result3 | num3 >> 2;\n      }\n      num6 = num4 >> 3;\n      num1 = (uint)((result2 & 1) != 0) << 0x1f | num2 >> 1;\n      check2 = num1 <= temp1;\n      check1 = num5 - num6 < (uint)check2;\n      result2 = num5;\n      if (num6 < num5 || check1) {\n        temp1 = temp1 - num1;\n        result2 = (num5 - num6) - (uint)!check2;\n      }\n      if (num6 < num5 || check1) {\n        result3 = result3 | num3 >> 3;\n      }\n      temp2 = result2 | temp1;\n      if (temp2 == 0) break;\n      result2 = result2 << 4 | temp1 >> 0x1c;\n      temp1 = temp1 << 4;\n      num4 = num4 & 0xfffffff8 | num1 >> 0x1d;\n      num1 = (num2 >> 1) << 3;\n      num3 = num3 >> 4;\n      if (num3 == 0) {\n        num6 = num4;\n        if ((num7 & 0x100000) != 0) goto LAB_08000842;\n        num7 = num7 | result3;\n        result3 = 0;\n        num3 = 0x80000000;\n      }\n    }\n    if ((num7 & 0x100000) == 0) {\n      num7 = num7 | result3;\n      result3 = 0;\n    }\nLAB_08000842:\n    check3 = 0xfc < result1;\n    check2 = SBORROW4(result1,0xfd);\n    num4 = difference + 0x300;\n    check1 = num4 == 0;\n    num3 = num4;\n    if (check3 && !check1) {\n      check3 = 0x6ff < num4;\n      check2 = SBORROW4(num4,0x700);\n      num3 = difference - 0x400;\n      check1 = num4 == 0x700;\n    }\n    if (!check3 || check1) {\n      check1 = num6 <= result2;\n      if (result2 == num6) {\n        check1 = num1 <= temp1;\n      }\n      if (result2 == num6 && temp1 == num1) {\n        check1 = (result3 & 1) != 0;\n      }\n      return CONCAT44(num7 + result1 * 0x100000 + (uint)CARRY4(result3,(uint)check1),result3 + check1);\n    }\n  }\n  if (!check1 && (int)num3 < 0 == check2) {\n    return (ulonglong)(num7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  check3 = SCARRY4(result1,0x36);\n  check1 = (int)(result1 + 0x36) < 0;\n  check2 = result1 == 0xffffffca;\n  if (check2 || check1 != check3) {\n    result3 = 0;\n  }\n  if (check2 || check1 != check3) {\n    num7 = num7 & 0x80000000;\n  }\n  if (check2 || check1 != check3) {\n    return CONCAT44(num7,result3);\n  }\n  num3 = -result1;\n  result2 = num3 - 0x20;\n  if (0x1f < (int)num3) {\n    num3 = result3 >> (result2 & 0xff) | num7 << (0x20 - result2 & 0xff);\n    result1 = (num7 >> (result2 & 0xff) & ~((num7 & 0x80000000) >> (result2 & 0xff))) -\n            ((int)num3 >> 0x1f);\n    if ((temp2 | result3 << (0x20 - result2 & 0xff) | num3 << 1) == 0) {\n      result1 = result1 & ~(num3 >> 0x1f);\n    }\n    return CONCAT44(num7,result1) & 0x80000000ffffffff;\n  }\n  difference = num3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(result2,0xc)) {\n    result1 = 0xc - difference;\n    num3 = result3 << (result1 & 0xff);\n    result3 = result3 >> (0x20 - result1 & 0xff) | num7 << (result1 & 0xff);\n    result1 = result3 + -((int)num3 >> 0x1f);\n    if ((temp2 | num3 << 1) == 0) {\n      result1 = result1 & ~(num3 >> 0x1f);\n    }\n    return CONCAT44((num7 & 0x80000000) + (uint)CARRY4(result3,-((int)num3 >> 0x1f)),result1);\n  }\n  result2 = result3 << (result1 + 0x20 & 0xff);\n  result3 = result3 >> (num3 & 0xff) | num7 << (result1 + 0x20 & 0xff);\n  result1 = result3 + -((int)result2 >> 0x1f);\n  if ((temp2 | result2 << 1) == 0) {\n    result1 = result1 & ~(result2 >> 0x1f);\n  }\n  return CONCAT44((num7 & 0x80000000) +\n                  ((num7 & 0x7fffffff) >> (num3 & 0xff)) +\n                  (uint)CARRY4(result3,-((int)result2 >> 0x1f)),result1);\n}\n\n",
            "renaming": {
                "FUN_08000724": "calculate_floating_point_08000724",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "num1",
                "uVar2": "num2",
                "uVar3": "num3",
                "uVar4": "num4",
                "uVar5": "num5",
                "uVar6": "num6",
                "uVar7": "num7",
                "iVar8": "difference",
                "uVar9": "result1",
                "uVar10": "result2",
                "uVar11": "result3",
                "uVar12": "temp1",
                "uVar13": "temp2",
                "bVar14": "check1",
                "bVar15": "check2",
                "bVar16": "check3",
                "uVar17": "combinedParams"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08006070"
            ],
            "called": [
                "FUN_08000892"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000892": {
            "entrypoint": "0x08000892",
            "current_name": "extracted_function_08000892",
            "code": "\nulonglong extractedFunction_08000892(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != bit5)\n         ) {\nLAB_08000704:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08000704;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08000892": "extracted_function_08000892",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08000724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000904": {
            "entrypoint": "0x08000904",
            "current_name": "check_input_parameters_08000904",
            "code": "\nuint check_input_parameters_08000904(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint xor_result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(input_2 << 1) >> 0x15 == -1 || (int)(input_4 << 1) >> 0x15 == -1) &&\n     ((((int)(input_2 << 1) >> 0x15 == -1 && ((input_1 | input_2 << 0xc) != 0)) ||\n      (((int)(input_4 << 1) >> 0x15 == -1 && ((input_3 | input_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = input_2 == input_4;\n  }\n  if (is_zero) {\n    is_zero = input_1 == input_3;\n  }\n  if (!is_zero) {\n    xor_result = input_2 ^ input_4;\n    is_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      is_zero = input_2 == input_4;\n    }\n    is_negative = -1 < (int)xor_result && input_4 <= input_2;\n    if (is_zero) {\n      is_negative = input_3 <= input_1;\n    }\n    input_4 = (int)input_4 >> 0x1f;\n    if (!is_negative) {\n      input_4 = ~input_4;\n    }\n    return input_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000904": "check_input_parameters_08000904",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "xor_result",
                "bVar2": "is_zero",
                "bVar3": "is_negative"
            },
            "calling": [
                "FUN_08000990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000980": {
            "entrypoint": "0x08000980",
            "current_name": "execute_function_08000980",
            "code": "\nvoid execute_function_08000980(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  FUN_08000990(input_param_3,input_param_4,input_param_1,input_param_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000980": "execute_function_08000980",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4"
            },
            "calling": [
                "FUN_080009f0"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000990": {
            "entrypoint": "0x08000990",
            "current_name": "execute_and_return_08000990",
            "code": "\nundefined4 execute_and_return_08000990(undefined4 input_parameter)\n\n{\n  FUN_08000904();\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08000990": "execute_and_return_08000990",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08000980",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_080009b4"
            ],
            "called": [
                "FUN_08000904"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a0": {
            "entrypoint": "0x080009a0",
            "current_name": "check_if_initialized_080009a0",
            "code": "\nbool checkIfInitialized_080009a0(void)\n\n{\n  char isInitialized;\n  \n  FUN_08000990();\n  return isInitialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009a0": "check_if_initialized_080009a0",
                "in_ZR": "isInitialized"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b4": {
            "entrypoint": "0x080009b4",
            "current_name": "is_null_terminated_080009b4",
            "code": "\nbool isNullTerminated_080009b4(void)\n\n{\n  char inputChar;\n  \n  FUN_08000990();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009b4": "is_null_terminated_080009b4",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_cy_and_zr_080009c8",
            "code": "\nbool check_CY_and_ZR_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_cy_and_zr_080009c8",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "is_end_of_string_080009f0",
            "code": "\nbool is_end_of_string_080009f0(void)\n\n{\n  char current_character;\n  \n  FUN_08000980();\n  return current_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009f0": "is_end_of_string_080009f0",
                "in_CY": "current_character"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_parameters_validity_08000a04",
            "code": "\nundefined4 check_parameters_validity_08000a04(uint input_1,int input_2,uint input_3,int input_4)\n\n{\n  if ((((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0)) &&\n     (((input_4 << 1) >> 0x15 != -1 || ((input_3 | input_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_parameters_validity_08000a04",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a30": {
            "entrypoint": "0x08000a30",
            "current_name": "convert_float_to_binary_08000a30",
            "code": "\nuint convertFloatToBinary_08000a30(uint floatInput,uint roundingMode)\n\n{\n  uint result;\n  uint multipliedInput;\n  uint adjustedInput;\n  uint value;\n  bool isZero;\n  bool isLessThan30;\n  \n  multipliedInput = roundingMode * 2;\n  isLessThan30 = multipliedInput < 0x70000000;\n  adjustedInput = multipliedInput + 0x90000000;\n  result = adjustedInput;\n  if (!isLessThan30) {\n    value = multipliedInput + 0x8fe00000;\n    result = value;\n  }\n  isZero = result == 0;\n  if (!isLessThan30 && adjustedInput >= 0x200000) {\n    isZero = value == 0x1fc00000;\n  }\n  if (((isLessThan30 || adjustedInput < 0x200000) || 0x1fc00000 < value) || isZero) {\n    if ((roundingMode & 0x40000000) != 0) {\n      if (((int)multipliedInput >> 0x15 == -1) && ((floatInput | roundingMode << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return roundingMode & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(multipliedInput + 0x92e00000) < 0 != SCARRY4(adjustedInput,0x2e00000)) {\n      return roundingMode & 0x80000000;\n    }\n    multipliedInput = 0x18 - (multipliedInput + 0x92e00000 >> 0x15);\n    result = floatInput >> (multipliedInput & 0xff);\n    if (floatInput << (0x20 - multipliedInput & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjustedInput = roundingMode & 0x1fffff | 0x100000;\n    floatInput = result | adjustedInput << (0x20 - multipliedInput & 0xff);\n    adjustedInput = (adjustedInput >> (multipliedInput & 0xff)) << 1;\n  }\n  result = (roundingMode & 0x80000000 | floatInput >> 0x1d) + adjustedInput * 4 + (uint)(0x7fffffff < floatInput * 8);\n  if (floatInput * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000a30": "convert_float_to_binary_08000a30",
                "param_1": "floatInput",
                "param_2": "roundingMode",
                "uVar1": "result",
                "uVar2": "multipliedInput",
                "uVar3": "adjustedInput",
                "in_r12": "value",
                "bVar4": "isZero",
                "bVar5": "isLessThan30"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "entrypoint": "0x08000ad8",
            "current_name": "calculate_float_08000ad8",
            "code": "\nuint calculateFloat_08000ad8(uint float1,uint float2,undefined4 float3,uint float4)\n\n{\n  int shiftedFloat1;\n  int shiftedFloat2;\n  uint xorResult;\n  uint tempFloat1;\n  uint tempFloat2;\n  uint tempFloat3;\n  uint difference;\n  bool isConditionMet;\n  \n  xorResult = float2 ^ 0x80000000;\n  tempFloat2 = float1 << 1;\n  isConditionMet = tempFloat2 == 0;\n  if (!isConditionMet) {\n    float4 = float2 << 1;\n    isConditionMet = float4 == 0;\n  }\n  if (!isConditionMet) {\n    isConditionMet = tempFloat2 == float4;\n  }\n  shiftedFloat1 = (int)tempFloat2 >> 0x18;\n  if (!isConditionMet) {\n    isConditionMet = shiftedFloat1 == -1;\n  }\n  if (!isConditionMet) {\n    isConditionMet = (int)float4 >> 0x18 == -1;\n  }\n  if (isConditionMet) {\n    shiftedFloat2 = (int)(float2 << 1) >> 0x18;\n    if (shiftedFloat1 == -1 || shiftedFloat2 == -1) {\n      tempFloat2 = xorResult;\n      if (shiftedFloat1 == -1) {\n        tempFloat2 = float1;\n      }\n      if (shiftedFloat1 != -1 || shiftedFloat2 != -1) {\n        xorResult = tempFloat2;\n      }\n      isConditionMet = (tempFloat2 & 0x7fffff) == 0;\n      if (isConditionMet) {\n        isConditionMet = (xorResult & 0x7fffff) == 0;\n      }\n      if (isConditionMet) {\n        isConditionMet = tempFloat2 == xorResult;\n      }\n      if (!isConditionMet) {\n        tempFloat2 = tempFloat2 | 0x400000;\n      }\n      return tempFloat2;\n    }\n    if (((float1 ^ xorResult) & 0x7fffffff) != 0) {\n      if (tempFloat2 == 0) {\n        float1 = xorResult;\n      }\n      return float1;\n    }\n    if (float1 != xorResult) {\n      return 0;\n    }\n    if ((tempFloat2 & 0xff000000) == 0) {\n      xorResult = float1 << 1;\n      if ((float1 & 0x80000000) != 0) {\n        xorResult = xorResult | 0x80000000;\n      }\n      return xorResult;\n    }\n    if (tempFloat2 < 0xfe000000) {\n      return float1 + 0x800000;\n    }\n    float1 = float1 & 0x80000000;\nLAB_08000c12:\n    return float1 | 0x7f800000;\n  }\n  tempFloat2 = tempFloat2 >> 0x18;\n  float4 = float4 >> 0x18;\n  difference = float4 - tempFloat2;\n  isConditionMet = difference != 0;\n  tempFloat3 = tempFloat2;\n  if (isConditionMet && tempFloat2 <= float4) {\n    tempFloat3 = tempFloat2 + difference;\n  }\n  if (isConditionMet && tempFloat2 <= float4) {\n    xorResult = xorResult ^ float1;\n  }\n  if (isConditionMet && tempFloat2 <= float4) {\n    float1 = float1 ^ xorResult;\n  }\n  if (isConditionMet && tempFloat2 <= float4) {\n    xorResult = xorResult ^ float1;\n  }\n  if (float4 < tempFloat2) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return float1;\n  }\n  tempFloat2 = float1 & 0xffffff | 0x800000;\n  if ((float1 & 0x80000000) != 0) {\n    tempFloat2 = -tempFloat2;\n  }\n  tempFloat1 = xorResult & 0xffffff | 0x800000;\n  if ((xorResult & 0x80000000) != 0) {\n    tempFloat1 = -tempFloat1;\n  }\n  if (tempFloat3 == difference) {\n    tempFloat1 = tempFloat1 ^ 0x800000;\n    if (tempFloat3 == 0) {\n      tempFloat2 = tempFloat2 ^ 0x800000;\n      tempFloat3 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  tempFloat2 = tempFloat2 + ((int)tempFloat1 >> (difference & 0xff));\n  tempFloat1 = tempFloat1 << (0x20 - difference & 0xff);\n  float1 = tempFloat2 & 0x80000000;\n  if ((int)tempFloat2 < 0) {\n    isConditionMet = tempFloat1 != 0;\n    tempFloat1 = -tempFloat1;\n    tempFloat2 = -tempFloat2 - (uint)isConditionMet;\n  }\n  if (tempFloat2 < 0x800000) {\n    xorResult = tempFloat1 & 0x80000000;\n    tempFloat1 = tempFloat1 << 1;\n    tempFloat2 = tempFloat2 * 2 + (uint)(xorResult != 0);\n    xorResult = tempFloat3 - 2;\n    if ((tempFloat2 & 0x800000) == 0) {\n      difference = LZCOUNT(tempFloat2) - 8;\n      tempFloat2 = tempFloat2 << (difference & 0xff);\n      if ((int)xorResult < (int)difference) {\n        tempFloat2 = tempFloat2 >> (-(xorResult - difference) & 0xff);\n      }\n      else {\n        tempFloat2 = tempFloat2 + (xorResult - difference) * 0x800000;\n      }\n      return tempFloat2 | float1;\n    }\n  }\n  else {\n    xorResult = tempFloat3 - 1;\n    if (0xffffff < tempFloat2) {\n      xorResult = tempFloat2 & 1;\n      tempFloat2 = tempFloat2 >> 1;\n      tempFloat1 = (uint)(xorResult != 0) << 0x1f | tempFloat1 >> 1;\n      xorResult = tempFloat3;\n      if (0xfd < tempFloat3) goto LAB_08000c12;\n    }\n  }\n  tempFloat2 = tempFloat2 + xorResult * 0x800000 + (uint)(0x7fffffff < tempFloat1);\n  if (tempFloat1 == 0x80000000) {\n    tempFloat2 = tempFloat2 & 0xfffffffe;\n  }\n  return tempFloat2 | float1;\n}\n\n",
            "renaming": {
                "FUN_08000ad8": "calculate_float_08000ad8",
                "param_1": "float1",
                "param_2": "float2",
                "param_3": "float3",
                "param_4": "float4",
                "iVar1": "shiftedFloat1",
                "iVar2": "shiftedFloat2",
                "uVar3": "xorResult",
                "uVar4": "tempFloat1",
                "uVar5": "tempFloat2",
                "uVar6": "tempFloat3",
                "uVar7": "difference",
                "bVar8": "isConditionMet"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000adc": {
            "entrypoint": "0x08000adc",
            "current_name": "calculate_float_08000adc",
            "code": "\nuint calculateFloat_08000adc(uint inputFloat1,uint inputFloat2,undefined4 flag,uint bitMask)\n\n{\n  int msb1;\n  int msb2;\n  uint absInputFloat1;\n  uint absInputFloat2;\n  uint shiftCount;\n  uint diffMsb;\n  bool isZero;\n  \n  absInputFloat2 = inputFloat1 << 1;\n  isZero = absInputFloat2 == 0;\n  if (!isZero) {\n    bitMask = inputFloat2 << 1;\n    isZero = bitMask == 0;\n  }\n  if (!isZero) {\n    isZero = absInputFloat2 == bitMask;\n  }\n  msb1 = (int)absInputFloat2 >> 0x18;\n  if (!isZero) {\n    isZero = msb1 == -1;\n  }\n  if (!isZero) {\n    isZero = (int)bitMask >> 0x18 == -1;\n  }\n  if (isZero) {\n    msb2 = (int)(inputFloat2 << 1) >> 0x18;\n    if (msb1 == -1 || msb2 == -1) {\n      absInputFloat2 = inputFloat2;\n      if (msb1 == -1) {\n        absInputFloat2 = inputFloat1;\n      }\n      if (msb1 != -1 || msb2 != -1) {\n        inputFloat2 = absInputFloat2;\n      }\n      isZero = (absInputFloat2 & 0x7fffff) == 0;\n      if (isZero) {\n        isZero = (inputFloat2 & 0x7fffff) == 0;\n      }\n      if (isZero) {\n        isZero = absInputFloat2 == inputFloat2;\n      }\n      if (!isZero) {\n        absInputFloat2 = absInputFloat2 | 0x400000;\n      }\n      return absInputFloat2;\n    }\n    if (((inputFloat1 ^ inputFloat2) & 0x7fffffff) != 0) {\n      if (absInputFloat2 == 0) {\n        inputFloat1 = inputFloat2;\n      }\n      return inputFloat1;\n    }\n    if (inputFloat1 != inputFloat2) {\n      return 0;\n    }\n    if ((absInputFloat2 & 0xff000000) == 0) {\n      absInputFloat2 = inputFloat1 << 1;\n      if ((inputFloat1 & 0x80000000) != 0) {\n        absInputFloat2 = absInputFloat2 | 0x80000000;\n      }\n      return absInputFloat2;\n    }\n    if (absInputFloat2 < 0xfe000000) {\n      return inputFloat1 + 0x800000;\n    }\n    inputFloat1 = inputFloat1 & 0x80000000;\nLAB_08000c12:\n    return inputFloat1 | 0x7f800000;\n  }\n  absInputFloat2 = absInputFloat2 >> 0x18;\n  bitMask = bitMask >> 0x18;\n  diffMsb = bitMask - absInputFloat2;\n  isZero = diffMsb != 0;\n  shiftCount = absInputFloat2;\n  if (isZero && absInputFloat2 <= bitMask) {\n    shiftCount = absInputFloat2 + diffMsb;\n  }\n  if (isZero && absInputFloat2 <= bitMask) {\n    inputFloat2 = inputFloat2 ^ inputFloat1;\n  }\n  if (isZero && absInputFloat2 <= bitMask) {\n    inputFloat1 = inputFloat1 ^ inputFloat2;\n  }\n  if (isZero && absInputFloat2 <= bitMask) {\n    inputFloat2 = inputFloat2 ^ inputFloat1;\n  }\n  if (bitMask < absInputFloat2) {\n    diffMsb = -diffMsb;\n  }\n  if (0x19 < diffMsb) {\n    return inputFloat1;\n  }\n  absInputFloat2 = inputFloat1 & 0xffffff | 0x800000;\n  if ((inputFloat1 & 0x80000000) != 0) {\n    absInputFloat2 = -absInputFloat2;\n  }\n  absInputFloat1 = inputFloat2 & 0xffffff | 0x800000;\n  if ((inputFloat2 & 0x80000000) != 0) {\n    absInputFloat1 = -absInputFloat1;\n  }\n  if (shiftCount == diffMsb) {\n    absInputFloat1 = absInputFloat1 ^ 0x800000;\n    if (shiftCount == 0) {\n      absInputFloat2 = absInputFloat2 ^ 0x800000;\n      shiftCount = 1;\n    }\n    else {\n      diffMsb = diffMsb - 1;\n    }\n  }\n  absInputFloat2 = absInputFloat2 + ((int)absInputFloat1 >> (diffMsb & 0xff));\n  absInputFloat1 = absInputFloat1 << (0x20 - diffMsb & 0xff);\n  inputFloat1 = absInputFloat2 & 0x80000000;\n  if ((int)absInputFloat2 < 0) {\n    isZero = absInputFloat1 != 0;\n    absInputFloat1 = -absInputFloat1;\n    absInputFloat2 = -absInputFloat2 - (uint)isZero;\n  }\n  if (absInputFloat2 < 0x800000) {\n    diffMsb = absInputFloat1 & 0x80000000;\n    absInputFloat1 = absInputFloat1 << 1;\n    absInputFloat2 = absInputFloat2 * 2 + (uint)(diffMsb != 0);\n    diffMsb = shiftCount - 2;\n    if ((absInputFloat2 & 0x800000) == 0) {\n      shiftCount = leadingZerosCount(absInputFloat2) - 8;\n      absInputFloat2 = absInputFloat2 << (shiftCount & 0xff);\n      if ((int)diffMsb < (int)shiftCount) {\n        absInputFloat2 = absInputFloat2 >> (-(diffMsb - shiftCount) & 0xff);\n      }\n      else {\n        absInputFloat2 = absInputFloat2 + (diffMsb - shiftCount) * 0x800000;\n      }\n      return absInputFloat2 | inputFloat1;\n    }\n  }\n  else {\n    diffMsb = shiftCount - 1;\n    if (0xffffff < absInputFloat2) {\n      diffMsb = absInputFloat2 & 1;\n      absInputFloat2 = absInputFloat2 >> 1;\n      absInputFloat1 = (uint)(diffMsb != 0) << 0x1f | absInputFloat1 >> 1;\n      diffMsb = shiftCount;\n      if (0xfd < shiftCount) goto LAB_08000c12;\n    }\n  }\n  absInputFloat2 = absInputFloat2 + diffMsb * 0x800000 + (uint)(0x7fffffff < absInputFloat1);\n  if (absInputFloat1 == 0x80000000) {\n    absInputFloat2 = absInputFloat2 & 0xfffffffe;\n  }\n  return absInputFloat2 | inputFloat1;\n}\n\n",
            "renaming": {
                "FUN_08000adc": "calculate_float_08000adc",
                "param_1": "inputFloat1",
                "param_2": "inputFloat2",
                "param_3": "flag",
                "param_4": "bitMask",
                "iVar1": "msb1",
                "iVar2": "msb2",
                "uVar3": "absInputFloat1",
                "uVar4": "absInputFloat2",
                "uVar5": "shiftCount",
                "uVar6": "diffMsb",
                "bVar7": "isZero",
                "LZCOUNT": "leadingZerosCount"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "entrypoint": "0x08000c3c",
            "current_name": "calculate_result_08000c3c",
            "code": "\nuint calculateResult_08000c3c(uint inputValue)\n\n{\n  uint leadingZeroCount;\n  uint shiftAmount;\n  int constantValue;\n  uint tempValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroCount = LZCOUNT(inputValue);\n  shiftAmount = leadingZeroCount - 8;\n  constantValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroCount) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    leadingZeroCount = constantValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      leadingZeroCount = leadingZeroCount & 0xfffffffe;\n    }\n    return leadingZeroCount;\n  }\n  shiftAmount = inputValue << leadingZeroCount + 0x18;\n  leadingZeroCount = constantValue + ((inputValue >> (0x20 - (leadingZeroCount + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeroCount = leadingZeroCount & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeroCount;\n}\n\n",
            "renaming": {
                "FUN_08000c3c": "calculate_result_08000c3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroCount",
                "uVar2": "shiftAmount",
                "iVar3": "constantValue",
                "uVar4": "tempValue"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c44": {
            "entrypoint": "0x08000c44",
            "current_name": "decode_unsigned_08000c44",
            "code": "\nuint decode_unsigned_08000c44(uint input_value)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int adjusted_value;\n  \n  sign_bit = input_value & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input_value = -input_value;\n  }\n  if (input_value == 0) {\n    return 0;\n  }\n  leading_zeros = LZCOUNT(input_value);\n  shift_amount = leading_zeros - 8;\n  adjusted_value = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = adjusted_value + (input_value << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input_value << leading_zeros + 0x18;\n  sign_bit = adjusted_value + ((input_value >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "renaming": {
                "FUN_08000c44": "decode_unsigned_08000c44",
                "param_1": "input_value",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit",
                "iVar4": "adjusted_value"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002bf0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cec": {
            "entrypoint": "0x08000cec",
            "current_name": "calculate_float_08000cec",
            "code": "\nuint calculateFloat_08000cec(uint x,uint y,undefined4 z,uint w)\n\n{\n  longlong product;\n  uint result;\n  uint tmp1;\n  int tmp2;\n  int tmp3;\n  uint tmp4;\n  int tmp5;\n  uint tmp6;\n  bool isZero;\n  bool isNegative;\n  \n  tmp1 = x >> 0x17 & 0xff;\n  isZero = tmp1 == 0;\n  if (!isZero) {\n    w = y >> 0x17 & 0xff;\n    isZero = w == 0;\n  }\n  if (!isZero) {\n    isZero = tmp1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = w == 0xff;\n  }\n  if (isZero) {\n    w = y >> 0x17 & 0xff;\n    if (tmp1 == 0xff || w == 0xff) {\n      isZero = x == 0 || x == 0x80000000;\n      result = y;\n      if (x != 0 && x != 0x80000000) {\n        isZero = y == 0;\n        result = x;\n      }\n      if (!isZero) {\n        isZero = y == 0x80000000;\n      }\n      tmp6 = result;\n      if (((isZero) || ((tmp1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((w == 0xff && (tmp6 = y, (y & 0x7fffff) != 0)))) {\n        return tmp6 | 0x7fc00000;\n      }\n      result = result ^ y;\n      goto LAB_08000e3c;\n    }\n    isZero = (x & 0x7fffffff) == 0;\n    if (!isZero) {\n      isZero = (y & 0x7fffffff) == 0;\n    }\n    if (isZero) {\n      return (x ^ y) & 0x80000000;\n    }\n    isZero = tmp1 == 0;\n    result = x & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        x = x << 1;\n        isZero = (x & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      tmp1 = tmp1 - 1;\n    }\n    x = x | result;\n    isZero = w == 0;\n    result = y & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        y = y << 1;\n        isZero = (y & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      w = w - 1;\n    }\n    y = y | result;\n  }\n  tmp2 = tmp1 + w;\n  tmp6 = x ^ y;\n  tmp1 = x << 9;\n  isZero = tmp1 == 0;\n  if (!isZero) {\n    y = y << 9;\n    isZero = y == 0;\n  }\n  if (isZero) {\n    if (tmp1 == 0) {\n      y = y << 9;\n    }\n    result = tmp6 & 0x80000000 | x & 0x7fffff | y >> 9;\n    isNegative = SBORROW4(tmp2,0x7f);\n    tmp3 = tmp2 + -0x7f;\n    isZero = tmp3 == 0;\n    tmp5 = tmp3;\n    if (!isZero && 0x7e < tmp2) {\n      isNegative = SBORROW4(0xff,tmp3);\n      tmp5 = 0xff - tmp3;\n      isZero = tmp3 == 0xff;\n    }\n    if (!isZero && tmp5 < 0 == isNegative) {\n      result = result | tmp3 * 0x800000;\n    }\n    if (!isZero && tmp5 < 0 == isNegative) {\n      return result;\n    }\n    result = result | 0x800000;\n    tmp4 = 0;\n    isNegative = SBORROW4(tmp3,1);\n    tmp6 = tmp2 - 0x80;\n    isZero = tmp6 == 0;\n    tmp1 = tmp6;\n  }\n  else {\n    product = (ulonglong)(tmp1 >> 5 | 0x8000000) * (ulonglong)(y >> 5 | 0x8000000);\n    tmp4 = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    isZero = result < 0x800000;\n    if (isZero) {\n      result = result << 1;\n    }\n    if (isZero) {\n      result = result | tmp4 >> 0x1f;\n      tmp4 = tmp4 << 1;\n    }\n    result = tmp6 & 0x80000000 | result;\n    tmp6 = (tmp2 + -0x7f) - (uint)isZero;\n    isNegative = SBORROW4(tmp6,0xfd);\n    isZero = tmp6 == 0xfd;\n    tmp1 = tmp6 - 0xfd;\n    if (tmp6 < 0xfe) {\n      result = result + tmp6 * 0x800000 + (uint)(0x7fffffff < tmp4);\n      if (tmp4 == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (isZero || (int)tmp1 < 0 != isNegative) {\n    isZero = (int)(tmp6 + 0x19) < 0;\n    if (tmp6 == 0xffffffe7 || isZero != SCARRY4(tmp6,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (tmp6 != 0xffffffe7 && isZero == SCARRY4(tmp6,0x19)) {\n      tmp1 = (result << 1) >> (-tmp6 & 0xff);\n      tmp6 = result << (tmp6 + 0x20 & 0xff);\n      tmp1 = ((uint)((result & 0x80000000) != 0) << 0x1f | tmp1 >> 1) + (uint)((byte)tmp1 & 1);\n      if ((tmp4 | tmp6 << 1) == 0) {\n        tmp1 = tmp1 & ~(tmp6 >> 0x1f);\n      }\n      return tmp1;\n    }\n    return result;\n  }\nLAB_08000e3c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000cec": "calculate_float_08000cec",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "tmp1",
                "iVar4": "tmp2",
                "iVar5": "tmp3",
                "uVar6": "tmp4",
                "iVar7": "tmp5",
                "uVar8": "tmp6",
                "bVar9": "isZero",
                "bVar10": "isNegative"
            },
            "calling": [
                "FUN_08004a30",
                "FUN_08002b48",
                "FUN_08004a84",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e54": {
            "entrypoint": "0x08000e54",
            "current_name": "calculate_floating_point_08000e54",
            "code": "\nuint calculateFloatingPoint_08000e54(uint number1,uint number2,undefined4 param3,uint param4)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int tempVar3;\n  uint tempVar4;\n  int tempVar5;\n  uint tempVar6;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  tempVar2 = number1 >> 0x17 & 0xff;\n  flag1 = tempVar2 == 0;\n  if (!flag1) {\n    param4 = number2 >> 0x17 & 0xff;\n    flag1 = param4 == 0;\n  }\n  if (!flag1) {\n    flag1 = tempVar2 == 0xff;\n  }\n  if (!flag1) {\n    flag1 = param4 == 0xff;\n  }\n  if (flag1) {\n    param4 = number2 >> 0x17 & 0xff;\n    tempVar6 = number1;\n    if (tempVar2 == 0xff) {\n      if (((number1 & 0x7fffff) != 0) || (tempVar6 = number2, param4 == 0xff)) {\nLAB_08000e4a:\n        return tempVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        tempVar6 = number2;\n        if ((number2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (number1 ^ number2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      flag1 = (number1 & 0x7fffffff) == 0;\n      if (!flag1) {\n        flag1 = (number2 & 0x7fffffff) == 0;\n      }\n      if (!flag1) {\n        flag1 = tempVar2 == 0;\n        tempVar6 = number1 & 0x80000000;\n        while( true ) {\n          if (flag1) {\n            number1 = number1 << 1;\n            flag1 = (number1 & 0x800000) == 0;\n          }\n          if (!flag1) break;\n          tempVar2 = tempVar2 - 1;\n        }\n        number1 = number1 | tempVar6;\n        flag1 = param4 == 0;\n        tempVar6 = number2 & 0x80000000;\n        while( true ) {\n          if (flag1) {\n            number2 = number2 << 1;\n            flag1 = (number2 & 0x800000) == 0;\n          }\n          if (!flag1) break;\n          param4 = param4 - 1;\n        }\n        number2 = number2 | tempVar6;\n        goto LAB_08000e6c;\n      }\n      if ((number1 & 0x7fffffff) == 0) {\n        if ((number2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    number1 = number1 ^ number2;\n  }\n  else {\nLAB_08000e6c:\n    tempVar3 = tempVar2 - param4;\n    if (number2 << 9 == 0) {\n      number1 = (number1 ^ number2) & 0x80000000 | number1 & 0x7fffff;\n      flag3 = SCARRY4(tempVar3,0x7f);\n      tempVar5 = tempVar3 + 0x7f;\n      flag1 = tempVar5 < 0;\n      flag2 = tempVar5 == 0;\n      if (!flag2 && flag1 == flag3) {\n        flag3 = SBORROW4(0xff,tempVar5);\n        flag1 = 0xff - tempVar5 < 0;\n        flag2 = tempVar5 == 0xff;\n      }\n      if (!flag2 && flag1 == flag3) {\n        number1 = number1 | tempVar5 * 0x800000;\n      }\n      if (!flag2 && flag1 == flag3) {\n        return number1;\n      }\n      number1 = number1 | 0x800000;\n      tempVar2 = 0;\n      flag2 = SBORROW4(tempVar5,1);\n      tempVar4 = tempVar3 + 0x7e;\n      flag1 = tempVar4 == 0;\n      tempVar6 = tempVar4;\n    }\n    else {\n      tempVar1 = (number2 << 9) >> 4 | 0x10000000;\n      tempVar2 = (number1 << 9) >> 4 | 0x10000000;\n      number1 = (number1 ^ number2) & 0x80000000;\n      flag1 = tempVar1 <= tempVar2;\n      if (!flag1) {\n        tempVar2 = tempVar2 << 1;\n      }\n      tempVar4 = tempVar3 + 0x7d + (uint)flag1;\n      tempVar6 = 0x800000;\n      do {\n        if (tempVar1 <= tempVar2) {\n          tempVar2 = tempVar2 - tempVar1;\n          number1 = number1 | tempVar6;\n        }\n        flag1 = tempVar1 >> 1 <= tempVar2;\n        if (flag1) {\n          tempVar2 = tempVar2 - (tempVar1 >> 1);\n        }\n        if (flag1) {\n          number1 = number1 | tempVar6 >> 1;\n        }\n        flag1 = tempVar1 >> 2 <= tempVar2;\n        if (flag1) {\n          tempVar2 = tempVar2 - (tempVar1 >> 2);\n        }\n        if (flag1) {\n          number1 = number1 | tempVar6 >> 2;\n        }\n        flag1 = tempVar1 >> 3 <= tempVar2;\n        if (flag1) {\n          tempVar2 = tempVar2 - (tempVar1 >> 3);\n        }\n        if (flag1) {\n          number1 = number1 | tempVar6 >> 3;\n        }\n        tempVar2 = tempVar2 * 0x10;\n        flag1 = tempVar2 == 0;\n        if (!flag1) {\n          tempVar6 = tempVar6 >> 4;\n          flag1 = tempVar6 == 0;\n        }\n      } while (!flag1);\n      flag2 = SBORROW4(tempVar4,0xfd);\n      flag1 = tempVar4 == 0xfd;\n      tempVar6 = tempVar4 - 0xfd;\n      if (tempVar4 < 0xfe) {\n        number1 = number1 + tempVar4 * 0x800000 + (uint)(tempVar1 <= tempVar2);\n        if (tempVar2 - tempVar1 == 0) {\n          number1 = number1 & 0xfffffffe;\n        }\n        return number1;\n      }\n    }\n    if (flag1 || (int)tempVar6 < 0 != flag2) {\n      flag1 = (int)(tempVar4 + 0x19) < 0;\n      if (tempVar4 == 0xffffffe7 || flag1 != SCARRY4(tempVar4,0x19)) {\n        number1 = number1 & 0x80000000;\n      }\n      if (tempVar4 == 0xffffffe7 || flag1 != SCARRY4(tempVar4,0x19)) {\n        return number1;\n      }\n      tempVar6 = (number1 << 1) >> (-tempVar4 & 0xff);\n      tempVar4 = number1 << (tempVar4 + 0x20 & 0xff);\n      tempVar6 = ((uint)((number1 & 0x80000000) != 0) << 0x1f | tempVar6 >> 1) + (uint)((byte)tempVar6 & 1);\n      if ((tempVar2 | tempVar4 << 1) == 0) {\n        tempVar6 = tempVar6 & ~(tempVar4 >> 0x1f);\n      }\n      return tempVar6;\n    }\n  }\n  return number1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000e54": "calculate_floating_point_08000e54",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "tempVar3",
                "uVar4": "tempVar4",
                "iVar5": "tempVar5",
                "uVar6": "tempVar6",
                "bVar7": "flag1",
                "bVar8": "flag2",
                "bVar9": "flag3"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "entrypoint": "0x08000f9c",
            "current_name": "calculate_result_08000f9c",
            "code": "\nuint calculate_result_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint input_1_shifted;\n  uint input_2_shifted;\n  uint combined_inputs;\n  bool is_zero;\n  \n  input_1_shifted = input_1 * 2;\n  input_2_shifted = input_2 * 2;\n  if (((int)input_1_shifted >> 0x18 == -1 || (int)input_2_shifted >> 0x18 == -1) &&\n     ((((int)input_1_shifted >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)input_2_shifted >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_inputs = input_1_shifted | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = input_1_shifted + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && input_2_shifted <= input_1_shifted) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || input_2_shifted > input_1_shifted) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_negative",
                "uVar2": "input_1_shifted",
                "uVar3": "input_2_shifted",
                "uVar4": "combined_inputs",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08001004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "entrypoint": "0x08000ffc",
            "current_name": "call_function_with_swapped_parameters_08000ffc",
            "code": "\nvoid callFunctionWithSwappedParameters_08000ffc(undefined4 param_1,undefined4 param_2)\n\n{\n  FUN_08001004(param_2,param_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ffc": "call_function_with_swapped_parameters_08000ffc"
            },
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001004": {
            "entrypoint": "0x08001004",
            "current_name": "concatenate_params_08001004",
            "code": "\nundefined8 concatenateParams_08001004(undefined4 firstParam,undefined4 secondParam)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08001004": "concatenate_params_08001004",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "called": [
                "FUN_08000f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001014": {
            "entrypoint": "0x08001014",
            "current_name": "check_if_initialized_08001014",
            "code": "\nbool checkIfInitialized_08001014(void)\n\n{\n  char isInitialized;\n  \n  FUN_08001004();\n  return isInitialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001014": "check_if_initialized_08001014",
                "in_ZR": "isInitialized"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001028": {
            "entrypoint": "0x08001028",
            "current_name": "check_string_termination_08001028",
            "code": "\nbool check_string_termination_08001028(void)\n\n{\n  char input_char;\n  \n  FUN_08001004();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001028": "check_string_termination_08001028",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001050": {
            "entrypoint": "0x08001050",
            "current_name": "check_zero_flags_08001050",
            "code": "\nbool check_zero_flags_08001050(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08001050": "check_zero_flags_08001050",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08002ee8"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001064": {
            "entrypoint": "0x08001064",
            "current_name": "check_if_input_is_empty_08001064",
            "code": "\nbool checkIfInputIsEmpty_08001064(void)\n\n{\n  char inputChar;\n  \n  FUN_08000ffc();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001064": "check_if_input_is_empty_08001064",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001078": {
            "entrypoint": "0x08001078",
            "current_name": "process_unsigned_number_08001078",
            "code": "\nuint processUnsignedNumber_08001078(uint input)\n\n{\n  uint shiftCount;\n  uint difference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftCount = (input << 1) >> 0x18;\n  difference = 0x9e - shiftCount;\n  if (shiftCount < 0x9f && difference != 0) {\n    shiftCount = (input << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shiftCount = -shiftCount;\n    }\n    return shiftCount;\n  }\n  if ((difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08001078": "process_unsigned_number_08001078",
                "param_1": "input",
                "uVar1": "shiftCount",
                "uVar2": "difference"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080010c4": {
            "entrypoint": "0x080010c4",
            "current_name": "check_unsigned_divisible_080010c4",
            "code": "\nuint checkUnsignedDivisible_080010c4(uint num)\n\n{\n  uint result;\n  \n  if (((num & 0x80000000) != 0) || (num << 1 < 0x7f000000)) {\n    return 0;\n  }\n  result = 0x9e - ((num << 1) >> 0x18);\n  if (-1 < (int)result) {\n    return (num << 8 | 0x80000000) >> (result & 0xff);\n  }\n  if ((result == 0xffffff9f) && ((num & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080010c4": "check_unsigned_divisible_080010c4",
                "param_1": "num",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001104": {
            "entrypoint": "0x08001104",
            "current_name": "initialize_system_08001104",
            "code": "\nundefined4 initializeSystem_08001104(undefined4 param)\n\n{\n  uint timeInMilliseconds;\n  \n  timeInMilliseconds = FUN_08002214();\n  FUN_08001214(timeInMilliseconds / 1000);\n  FUN_08001194(0xffffffff,param,0);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001104": "initialize_system_08001104",
                "param_1": "param",
                "uVar1": "timeInMilliseconds"
            },
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001128": {
            "entrypoint": "0x08001128",
            "current_name": "initialize_system_08001128",
            "code": "\n\n\nundefined4 initializeSystem_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001128": "initialize_system_08001128"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800114c": {
            "entrypoint": "0x0800114c",
            "current_name": "increment_data_counter_0800114c",
            "code": "\nvoid incrementDataCounter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800114c": "increment_data_counter_0800114c"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800115c": {
            "entrypoint": "0x0800115c",
            "current_name": "get_data_value_0800115c",
            "code": "\nundefined4 get_data_value_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "FUN_0800115c": "get_data_value_0800115c"
            },
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "FUN_08004c18",
                "FUN_0800209c",
                "FUN_08001828",
                "FUN_08001938",
                "FUN_080014e2",
                "thunk_FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_08001460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001168": {
            "entrypoint": "0x08001168",
            "current_name": "FUNC_08001168",
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001170": {
            "entrypoint": "0x08001170",
            "current_name": "configure_memory_mapping_08001170",
            "code": "\n\n\nvoid configure_memory_mapping_08001170(uint input_value)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (input_value & 7) << 8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001170": "configure_memory_mapping_08001170",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001194": {
            "entrypoint": "0x08001194",
            "current_name": "set_memory_value_08001194",
            "code": "\n\n\nvoid setMemoryValue_08001194(uint address,uint dataHigh,uint dataLow)\n\n{\n  undefined value;\n  uint shiftCount;\n  uint shiftedValue;\n  uint shiftedValuePlusFour;\n  \n  shiftedValue = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftCount = 7 - shiftedValue;\n  shiftedValuePlusFour = shiftedValue + 4;\n  if (3 < shiftCount) {\n    shiftCount = 4;\n  }\n  if (shiftedValuePlusFour < 7) {\n    shiftedValue = 0;\n  }\n  shiftCount = (1 << (shiftCount & 0xff)) - 1;\n  if (6 < shiftedValuePlusFour) {\n    shiftedValue = shiftedValue - 3;\n  }\n  value = (undefined)\n          ((dataLow & (1 << (shiftedValue & 0xff)) - 1U | (dataHigh & shiftCount) << (shiftedValue & 0xff)) << 4);\n  if (-1 < (int)address) {\n    shiftedValue = address + 0xe000e100;\n  }\n  else {\n    shiftCount = 0xe000ed14;\n    shiftedValue = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(shiftedValue + 0x300) = value;\n  }\n  else {\n    *(undefined *)(shiftCount + shiftedValue) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001194": "set_memory_value_08001194",
                "param_1": "address",
                "param_2": "dataHigh",
                "param_3": "dataLow",
                "uVar1": "value",
                "uVar2": "shiftCount",
                "uVar3": "shiftedValue",
                "uVar4": "shiftedValuePlusFour"
            },
            "calling": [
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011fc": {
            "entrypoint": "0x080011fc",
            "current_name": "set_bit_value_080011fc",
            "code": "\nvoid setBitValue_080011fc(uint input)\n\n{\n  *(int *)((input >> 5) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011fc": "set_bit_value_080011fc",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001214": {
            "entrypoint": "0x08001214",
            "current_name": "update_data_08001214",
            "code": "\n\n\nundefined4 updateData_08001214(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001214": "update_data_08001214",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001240": {
            "entrypoint": "0x08001240",
            "current_name": "set_flag_if_equal_to_four_08001240",
            "code": "\n\n\nvoid setFlagIfEqualToFour_08001240(int value)\n\n{\n  if (value == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001240": "set_flag_if_equal_to_four_08001240",
                "param_1": "value"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001258": {
            "entrypoint": "0x08001258",
            "current_name": "FUNC_08001258",
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001264": {
            "entrypoint": "0x08001264",
            "current_name": "update_bits_08001264",
            "code": "\n\n\nvoid updateBits_08001264(uint *bitsToUpdate,uint *bitmask)\n\n{\n  uint updatedBits;\n  uint bit;\n  uint value;\n  int caseIndex;\n  uint index;\n  uint bitPosition;\n  uint condition;\n  uint *register;\n  int bitIndex;\n  \n  updatedBits = 0;\n  index = 0;\n  do {\n    bitPosition = 1 << (index & 0xff);\n    bit = bitPosition & *bitmask;\n    if (bitPosition == bit) {\n      value = bitmask[1];\n      if (value == 0x12) {\n        updatedBits = bitmask[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          updatedBits = bitmask[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_080013be;\n          if (value == 1) {\n            updatedBits = bitmask[3];\n          }\n        }\n        else if (value == 3) {\n          updatedBits = 0;\n        }\n        else if (value == 0x11) {\n          updatedBits = bitmask[3] + 4;\n        }\n      }\n      else {\n        if (value != 0x10210000) {\n          if (value < 0x10210001) {\n            if (value != 0x10110000) {\n              condition = 0x10120000;\nLAB_080013b8:\n              if (value != condition) goto LAB_080012a8;\n            }\n          }\n          else if ((value != 0x10310000) && (value != 0x10320000)) {\n            condition = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        updatedBits = bitmask[2];\n        if (updatedBits == 0) {\n          updatedBits = 4;\n        }\n        else {\n          if (updatedBits == 1) {\n            bitsToUpdate[4] = bitPosition;\n          }\n          if (updatedBits != 1) {\n            bitsToUpdate[5] = bitPosition;\n          }\n          updatedBits = 8;\n        }\n      }\nLAB_080012a8:\n      if (bit < 0x100) {\n        bitPosition = *bitsToUpdate;\n        value = index << 2;\n        register = bitsToUpdate;\n      }\n      else {\n        bitPosition = bitsToUpdate[1];\n        value = (index + 0x3ffffff8) * 4;\n      }\n      if (0xff < bit) {\n        register = bitsToUpdate + 1;\n      }\n      *register = bitPosition & ~(0xf << (value & 0xff)) | updatedBits << (value & 0xff);\n      register = (uint *)bitmask[1];\n      if (((uint)register & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitIndex = (index & 3) << 2;\n        if (bitsToUpdate == (uint *)0x40010800) {\n          caseIndex = 0;\n        }\n        else if (bitsToUpdate == (uint *)0x40010c00) {\n          caseIndex = 1;\n        }\n        else if (bitsToUpdate == (uint *)0x40011000) {\n          caseIndex = 2;\n        }\n        else if (bitsToUpdate == (uint *)0x40011400) {\n          caseIndex = 3;\n        }\n        else {\n          caseIndex = 4;\n        }\n        *(uint *)((index & 0xfffffffc) + 0x40010008) =\n             caseIndex << bitIndex | *(uint *)((index & 0xfffffffc) + 0x40010008) & ~(0xf << bitIndex);\n        if (((uint)register & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit;\n        }\n        if (((uint)register & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit;\n        }\n        if (((uint)register & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit;\n        }\n        if (((uint)register & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit;\n        }\n        else {\n          _DAT_4001040c = bit | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n    if (index == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001264": "update_bits_08001264",
                "param_1": "bitsToUpdate",
                "param_2": "bitmask",
                "uVar1": "updatedBits",
                "uVar2": "bit",
                "uVar3": "value",
                "iVar4": "caseIndex",
                "uVar5": "index",
                "uVar6": "bitPosition",
                "uVar7": "condition",
                "unaff_r10": "register",
                "iVar8": "bitIndex"
            },
            "calling": [
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_08004d48",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001424": {
            "entrypoint": "0x08001424",
            "current_name": "set_param2_08001424",
            "code": "\nvoid setParam2_08001424(int inputPtr,int value,int flag)\n\n{\n  if (flag == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(inputPtr + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001424": "set_param2_08001424",
                "param_1": "inputPtr",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800142e": {
            "entrypoint": "0x0800142e",
            "current_name": "xor_with_param_and_store_0800142e",
            "code": "\nvoid xorWithParamAndStore_0800142e(int baseAddress,uint value)\n\n{\n  *(uint *)(baseAddress + 0xc) = value ^ *(uint *)(baseAddress + 0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800142e": "xor_with_param_and_store_0800142e",
                "param_1": "baseAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001436": {
            "entrypoint": "0x08001436",
            "current_name": "check_flag_status_08001436",
            "code": "\nundefined4 checkFlagStatus_08001436(int *flagPtr)\n\n{\n  int flagValue;\n  \n  flagValue = *flagPtr;\n  if ((*(uint *)(flagValue + 0x14) & 0x400) != 0) {\n    *(uint *)(flagValue + 0x14) = *(uint *)(flagValue + 0x14) & 0xfffffbff;\n    status = 4;\n    *(undefined *)((int)flagPtr + 0x35) = 0x20;\n    *(undefined *)(flagPtr + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "param_1": "flagPtr",
                "iVar1": "flagValue",
                "param_1[0xe]": "status"
            },
            "calling": [
                "FUN_080014e2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "check_and_update_data_08001460",
            "code": "\nundefined4 checkAndUpdateData_08001460(uint **data_ptr,uint flags,uint timeout)\n\n{\n  int func_retval;\n  int current_retval;\n  uint value;\n  uint *data;\n  \n  func_retval = FUN_0800115c();\n  do {\n    data = *data_ptr;\n    if ((flags << 8) >> 0x18 == 1) {\n      value = data[5];\n    }\n    else {\n      value = data[6];\n    }\n    if ((flags & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(data[5] << 0x15) < 0) {\n      *data = *data | 0x200;\n      data[5] = data[5] & 0xfffffbff;\n      data_ptr[0xe] = (uint *)0x4;\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_retval = FUN_0800115c(), (uint)(current_retval - func_retval) <= timeout))));\n  *(undefined *)((int)data_ptr + 0x35) = 0x20;\n  *(undefined *)(data_ptr + 0xd) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001460": "check_and_update_data_08001460",
                "param_1": "data_ptr",
                "param_2": "flags",
                "param_3": "timeout",
                "iVar1": "func_retval",
                "iVar2": "current_retval",
                "uVar3": "value",
                "puVar4": "data"
            },
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014e2": {
            "entrypoint": "0x080014e2",
            "current_name": "check_condition_080014e2",
            "code": "\nundefined4 check_condition_080014e2(int *input_array,uint threshold_value)\n\n{\n  int initial_value;\n  int result;\n  \n  initial_value = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*input_array + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result = FUN_08001436(input_array);\n    if (result != 0) break;\n    if ((threshold_value != 0xffffffff) &&\n       ((threshold_value == 0 || (result = FUN_0800115c(), threshold_value < (uint)(result - initial_value))))) {\n      input_array[0xe] = input_array[0xe] | 0x20;\n      *(undefined *)((int)input_array + 0x35) = 0x20;\n      *(undefined *)(input_array + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080014e2": "check_condition_080014e2",
                "param_1": "input_array",
                "param_2": "threshold_value",
                "iVar1": "initial_value",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001530": {
            "entrypoint": "0x08001530",
            "current_name": "update_flags_and_perform_operation_08001530",
            "code": "\nundefined4 updateFlagsAndPerformOperation_08001530(uint **pointer,uint value1,uint value2,int condition,uint param)\n\n{\n  int result1;\n  int result2;\n  uint *pointerValue;\n  uint **pointerPointer;\n  uint updatedValue1;\n  uint updatedValue2;\n  \n  **pointer = **pointer | 0x100;\n  pointerPointer = pointer;\n  updatedValue1 = value1;\n  updatedValue2 = value2;\n  result1 = FUN_0800115c();\n  do {\n    pointerValue = *pointer;\n    do {\n      if ((int)(pointerValue[5] << 0x1f) < 0) {\n        pointerValue[4] = value1 & 0xfe;\n        result1 = FUN_08001460(pointer,0x10002,param,pointerValue,pointerPointer,updatedValue1,updatedValue2);\n        if (result1 == 0) {\n          result1 = FUN_080014e2(pointer,param,(*pointer)[5],(*pointer)[6]);\n          if (result1 == 0) {\n            pointerValue = *pointer;\n            if (condition == 1) {\nLAB_080015ca:\n              pointerValue[4] = value2 & 0xff;\n              return 0;\n            }\n            pointerValue[4] = value2 >> 8;\n            result1 = FUN_080014e2(pointer,param);\n            if (result1 == 0) {\n              pointerValue = *pointer;\n              goto LAB_080015ca;\n            }\n          }\n          if (pointer[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **pointer = **pointer | 0x200;\n        }\n        else if (pointer[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (param == 0xffffffff);\n    if ((param == 0) || (result2 = FUN_0800115c(), param < (uint)(result2 - result1))) {\n      *(undefined *)((int)pointer + 0x35) = 0x20;\n      *(undefined *)(pointer + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001530": "update_flags_and_perform_operation_08001530",
                "param_1": "pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "param",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "pointerValue",
                "ppuVar4": "pointerPointer",
                "uVar5": "updatedValue1",
                "uVar6": "updatedValue2"
            },
            "calling": [
                "FUN_08001828"
            ],
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015e8": {
            "entrypoint": "0x080015e8",
            "current_name": "update_flags_and_execute_080015e8",
            "code": "\nundefined4 updateFlagsAndExecute_080015e8(uint **ptrToPtr,uint input1,uint input2,int option,uint limit)\n\n{\n  int returnValue;\n  int timeDiff;\n  uint *ptr;\n  uint **ptrToPtrCopy;\n  uint var1;\n  uint var2;\n  \n  ptr = *ptrToPtr;\n  *ptr = *ptr | 0x400;\n  *ptr = *ptr | 0x100;\n  ptrToPtrCopy = ptrToPtr;\n  var1 = input1;\n  var2 = input2;\n  returnValue = FUN_0800115c();\nLAB_0800160e:\n  ptr = *ptrToPtr;\n  while (-1 < (int)(ptr[5] << 0x1f)) {\n    if (limit != 0xffffffff) goto code_r0x08001658;\n  }\n  ptr[4] = input1 & 0xfe;\n  returnValue = FUN_08001460(ptrToPtr,0x10002,limit,ptr,ptrToPtrCopy,var1,var2);\n  if (returnValue != 0) goto LAB_080016ba;\n  returnValue = FUN_080014e2(ptrToPtr,limit,(*ptrToPtr)[5],(*ptrToPtr)[6]);\n  if (returnValue == 0) {\n    ptr = *ptrToPtr;\n    if (option != 1) {\n      ptr[4] = input2 >> 8;\n      returnValue = FUN_080014e2(ptrToPtr,limit);\n      if (returnValue != 0) goto LAB_08001642;\n      ptr = *ptrToPtr;\n    }\n    ptr[4] = input2 & 0xff;\n    returnValue = FUN_080014e2(ptrToPtr,limit);\n    if (returnValue == 0) {\n      **ptrToPtr = **ptrToPtr | 0x100;\n      returnValue = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*ptrToPtr)[5] << 0x1f) < 0) {\n            (*ptrToPtr)[4] = input1 & 0xff | 1;\n            returnValue = FUN_08001460(ptrToPtr,0x10002,limit);\n            if (returnValue == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (ptrToPtr[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (limit == 0xffffffff);\n      } while ((limit != 0) && (timeDiff = FUN_0800115c(), (uint)(timeDiff - returnValue) <= limit));\nLAB_0800165a:\n      *(undefined *)((int)ptrToPtr + 0x35) = 0x20;\n      *(undefined *)(ptrToPtr + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (ptrToPtr[0xe] == (uint *)0x4) {\n    **ptrToPtr = **ptrToPtr | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((limit == 0) || (timeDiff = FUN_0800115c(), limit < (uint)(timeDiff - returnValue)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "renaming": {
                "FUN_080015e8": "update_flags_and_execute_080015e8",
                "param_1": "ptrToPtr",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "option",
                "param_5": "limit",
                "iVar1": "returnValue",
                "iVar2": "timeDiff",
                "puVar3": "ptr",
                "ppuVar4": "ptrToPtrCopy",
                "uVar5": "var1",
                "uVar6": "var2"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016f4": {
            "entrypoint": "0x080016f4",
            "current_name": "check_and_modify_flags_080016f4",
            "code": "\nundefined4 check_and_modify_flags_080016f4(int *pointer_to_data,uint data_size)\n\n{\n  int initial_value;\n  int current_value;\n  \n  initial_value = FUN_0800115c();\n  while( true ) {\n    current_value = *pointer_to_data;\n    if ((*(uint *)(current_value + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_value + 0x14) << 0x1b < 0) break;\n    if ((data_size == 0) || (current_value = FUN_0800115c(), data_size < (uint)(current_value - initial_value))) {\n      pointer_to_data[0xe] = pointer_to_data[0xe] | 0x20;\n      *(undefined *)((int)pointer_to_data + 0x35) = 0x20;\n      *(undefined *)(pointer_to_data + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(current_value + 0x14) = *(uint *)(current_value + 0x14) & 0xffffffef;\n  pointer_to_data[0xe] = 0;\n  *(undefined *)(pointer_to_data + 0xd) = 0;\n  *(undefined *)((int)pointer_to_data + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080016f4": "check_and_modify_flags_080016f4",
                "param_1": "pointer_to_data",
                "param_2": "data_size",
                "iVar1": "initial_value",
                "iVar2": "current_value"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001754": {
            "entrypoint": "0x08001754",
            "current_name": "initialize_data_08001754",
            "code": "\nundefined4 initializeData_08001754(uint **data)\n\n{\n  uint result1;\n  uint result2;\n  uint *ptr1;\n  uint *ptr2;\n  uint *ptr3;\n  uint tempVar1;\n  undefined8 funcReturnValue;\n  \n  if (data != (uint **)0x0) {\n    if (*(char *)((int)data + 0x35) == '\\0') {\n      *(undefined *)(data + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)data + 0x35) = 0x24;\n    **data = **data & 0xfffffffe;\n    funcReturnValue = FUN_08002220();\n    result2 = (uint)((ulonglong)funcReturnValue >> 0x20);\n    result1 = (uint)funcReturnValue;\n    ptr2 = data[1];\n    tempVar1 = result1 / 1000000;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = 300;\n    }\n    ptr1 = *data;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = tempVar1 * result2;\n    }\n    ptr1[1] = tempVar1;\n    if ((uint *)0x186a0 < ptr2) {\n      tempVar1 = result2 / 1000;\n    }\n    ptr1[8] = tempVar1 + 1;\n    if (ptr2 < (uint *)0x186a1) {\n      result1 = result1 / (uint)((int)ptr2 << 1);\n      if ((result1 & 0xfff) < 4) {\n        result1 = 4;\n      }\n    }\n    else {\n      if (data[2] == (uint *)0x0) {\n        result1 = result1 / (uint)((int)ptr2 * 3) | 0x8000;\n      }\n      else {\n        result1 = result1 / (uint)((int)ptr2 * 0x19) | 0xc000;\n      }\n      if ((result1 & 0xfff) == 0) {\n        result1 = 1;\n      }\n    }\n    ptr2 = data[8];\n    ptr3 = data[7];\n    ptr1[7] = result1;\n    *ptr1 = (uint)ptr3 | (uint)ptr2;\n    ptr1[2] = (uint)data[4] | (uint)data[3];\n    ptr1[3] = (uint)data[5] | (uint)data[6];\n    *ptr1 = *ptr1 | 1;\n    data[0xe] = (uint *)0x0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001754": "initialize_data_08001754",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "tempVar1",
                "uVar7": "funcReturnValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001828": {
            "entrypoint": "0x08001828",
            "current_name": "process_data_08001828",
            "code": "\nundefined4\nprocessData_08001828(uint **data,undefined4 param2,undefined4 param3,undefined4 param4,byte *byteData,\n            short byteDataLength,undefined4 param7)\n\n{\n  int funcResult;\n  int loopCounter;\n  uint *ptrData;\n  uint var4;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (byteData == (byte *)0x0) {\n      return 1;\n    }\n    if (byteDataLength == 0) {\n      return 1;\n    }\n    funcResult = FUN_0800115c();\n    do {\n      ptrData = *data;\n      if ((~ptrData[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        var4 = *ptrData;\n        *(undefined *)(data + 0xd) = 1;\n        *ptrData = var4 & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        funcResult = FUN_08001530(data,param2,param3,param4,param7);\n        if (funcResult != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      loopCounter = FUN_0800115c();\n    } while ((uint)(loopCounter - funcResult) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (byteDataLength != 0) {\nLAB_080018e2:\n    funcResult = FUN_080014e2(data,param7);\n    if (funcResult != 0) goto LAB_080018ee;\n    ptrData = *data;\n    ptrData[4] = (uint)*byteData;\n    if ((int)(ptrData[5] << 0x1d) < 0) {\n      if ((short)(byteDataLength + -1) == 0) break;\n      byteDataLength = byteDataLength + -2;\n      ptrData[4] = (uint)byteData[1];\n      byteData = byteData + 2;\n    }\n    else {\n      byteData = byteData + 1;\n      byteDataLength = byteDataLength + -1;\n    }\n  }\n  funcResult = FUN_080014e2(data,param7);\n  if (funcResult == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "byteData",
                "param_6": "byteDataLength",
                "param_7": "param7",
                "iVar1": "funcResult",
                "iVar2": "loopCounter",
                "puVar3": "ptrData",
                "uVar4": "var4"
            },
            "calling": [
                "FUN_0800403c"
            ],
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001938": {
            "entrypoint": "0x08001938",
            "current_name": "process_data_08001938",
            "code": "\nundefined4\nprocessData_08001938(uint **data,undefined4 param2,undefined4 param3,undefined4 param4,\n            undefined *buffer,ushort size,uint timeout)\n\n{\n  undefined *ptr1;\n  int var1;\n  int var2;\n  uint *ptr2;\n  uint var3;\n  undefined *ptr3;\n  bool flag;\n  \n  if (*(char *)((int)data + 0x35) != ' ') {\n    return 2;\n  }\n  if (buffer == (undefined *)0x0) {\n    return 1;\n  }\n  if (size == 0) {\n    return 1;\n  }\n  var1 = FUN_0800115c();\n  while (ptr2 = *data, (~ptr2[6] & 2) == 0) {\n    var2 = FUN_0800115c();\n    if (10000 < (uint)(var2 - var1)) {\n      *(undefined *)(data + 0xd) = 0;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(data + 0xd) == '\\x01') {\n    return 2;\n  }\n  var3 = *ptr2;\n  *(undefined *)(data + 0xd) = 1;\n  *ptr2 = var3 & 0xfffff7ff;\n  *(undefined *)((int)data + 0x35) = 0x22;\n  *(undefined *)((int)data + 0x36) = 0x40;\n  data[0xe] = (uint *)0x0;\n  var1 = FUN_080015e8(data,param2,param3,param4,timeout);\n  if (var1 != 0) {\n    *(undefined *)(data + 0xd) = 0;\n    if (data[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  ptr2 = *data;\n  var3 = *ptr2;\n  if (size == 1) {\n    *ptr2 = var3 & 0xfffffbff;\n    disableIRQinterrupts();\n    **data = **data | 0x200;\n    enableIRQinterrupts();\n    var1 = FUN_080016f4(data,timeout);\n    if (var1 == 0) {\n      *buffer = (char)(*data)[4];\nLAB_08001ab8:\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)((int)data + 0x36) = 0;\n      *(undefined *)(data + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (data[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (size == 2) {\n    *ptr2 = var3 | 0x800;\n    disableIRQinterrupts();\n    **data = **data & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *ptr2 = var3 | 0x400;\n    while (3 < size) {\n      var1 = FUN_080016f4(data,timeout);\n      if (var1 != 0) goto LAB_08001a18;\n      *buffer = (char)(*data)[4];\n      ptr2 = *data;\n      flag = (int)(ptr2[5] << 0x1d) < 0;\n      if (flag) {\n        ptr2 = (uint *)ptr2[4];\n        ptr3 = buffer + 2;\n        size = size - 2;\n      }\n      else {\n        ptr3 = buffer + 1;\n        size = size - 1;\n      }\n      ptr1 = buffer + 1;\n      buffer = ptr3;\n      if (flag) {\n        *ptr1 = (char)ptr2;\n      }\n    }\n    if (size != 2) {\n      var1 = FUN_0800115c();\n      do {\n        ptr2 = *data;\n        do {\n          if ((int)(ptr2[5] << 0x1d) < 0) {\n            *ptr2 = *ptr2 & 0xfffffbff;\n            disableIRQinterrupts();\n            *buffer = (char)(*data)[4];\n            var1 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (var2 = FUN_0800115c(), (uint)(var2 - var1) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  var1 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*data)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        ptr2 = *data;\n        *ptr2 = *ptr2 | 0x200;\n        *buffer = (char)ptr2[4];\n        enableIRQinterrupts();\n        buffer[1] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (var2 = FUN_0800115c(), (uint)(var2 - var1) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)(data + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    ptr2 = *data;\n    do {\n      if ((int)(ptr2[5] << 0x1d) < 0) {\n        *ptr2 = *ptr2 | 0x200;\n        buffer[1] = (char)ptr2[4];\n        enableIRQinterrupts();\n        buffer[2] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (var2 = FUN_0800115c(), (uint)(var2 - var1) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "renaming": {
                "FUN_08001938": "process_data_08001938",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "buffer",
                "param_6": "size",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "iVar2": "var1",
                "iVar3": "var2",
                "puVar4": "ptr2",
                "uVar5": "var3",
                "puVar6": "ptr3",
                "bVar7": "flag"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080016f4",
                "FUN_080015e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b58": {
            "entrypoint": "0x08001b58",
            "current_name": "process_parameter_values_08001b58",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 processParameterValues_08001b58(int *parameterValues)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  if (*parameterValues << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (parameterValues[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      tempVar1 = parameterValues[1];\n      if (tempVar1 == 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (tempVar1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          tempVar1 = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            tempVar2 = FUN_0800115c();\n            if (100 < (uint)(tempVar2 - tempVar1)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (tempVar1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      tempVar1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        tempVar2 = FUN_0800115c();\n        if (100 < (uint)(tempVar2 - tempVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*parameterValues << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (parameterValues[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      ramVariable1 = parameterValues[4];\n      if (ramVariable1 == 0) {\n        tempVar1 = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          tempVar2 = FUN_0800115c();\n          if (2 < (uint)(tempVar2 - tempVar1)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      ramVariable1 = 1;\n      tempVar1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        tempVar2 = FUN_0800115c();\n        if (2 < (uint)(tempVar2 - tempVar1)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = parameterValues[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*parameterValues << 0x1c < 0) {\n    ramVariable2 = parameterValues[6];\n    if (ramVariable2 == 0) {\n      tempVar1 = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        tempVar2 = FUN_0800115c();\n        if (2 < (uint)(tempVar2 - tempVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      ramVariable2 = 1;\n      tempVar1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        tempVar2 = FUN_0800115c();\n        if (2 < (uint)(tempVar2 - tempVar1)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *parameterValues << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  tempVar1 = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    tempVar2 = FUN_0800115c();\n    if (100 < (uint)(tempVar2 - tempVar1)) {\n      return 3;\n    }\n  }\n  tempVar1 = parameterValues[3];\n  if (tempVar1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (tempVar1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      tempVar1 = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        tempVar2 = FUN_0800115c();\n        if (5000 < (uint)(tempVar2 - tempVar1)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (tempVar1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  tempVar1 = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    tempVar2 = FUN_0800115c();\n    if (5000 < (uint)(tempVar2 - tempVar1)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (parameterValues[7] == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (parameterValues[7] != 2) {\n      ramVariable3 = 0;\n      tempVar1 = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        tempVar2 = FUN_0800115c();\n      } while ((uint)(tempVar2 - tempVar1) < 3);\n      return 3;\n    }\n    ramVariable3 = 0;\n    tempVar1 = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (parameterValues[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | parameterValues[2];\n        }\n        _DAT_40021004 = parameterValues[8] | parameterValues[9] | _DAT_40021004 & 0xffc2ffff;\n        ramVariable3 = 1;\n        tempVar1 = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          tempVar2 = FUN_0800115c();\n        } while ((uint)(tempVar2 - tempVar1) < 3);\n        return 3;\n      }\n      tempVar2 = FUN_0800115c();\n    } while ((uint)(tempVar2 - tempVar1) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001b58": "process_parameter_values_08001b58",
                "param_1": "parameterValues",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2",
                "iRam42420000": "ramVariable1",
                "iRam42420480": "ramVariable2",
                "param_1[1]": "parameterValues[1]",
                "param_1[2]": "parameterValues[2]",
                "param_1[3]": "parameterValues[3]",
                "param_1[4]": "parameterValues[4]",
                "param_1[5]": "parameterValues[5]",
                "param_1[6]": "parameterValues[6]",
                "param_1[7]": "parameterValues[7]",
                "param_1[8]": "parameterValues[8]",
                "param_1[9]": "parameterValues[9]",
                "uRam42420060": "ramVariable3"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002008": {
            "entrypoint": "0x08002008",
            "current_name": "calculate_mpu_frequency_08002008",
            "code": "\n\n\nint calculate_mpu_frequency_08002008(void)\n\n{\n  undefined4 value1;\n  int result;\n  undefined4 value2;\n  undefined4 *dataPointer;\n  uint frequency;\n  undefined4 *resultPointer;\n  byte localArray [4];\n  undefined4 copyArray [5];\n  \n  dataPointer = &DAT_080072f0;\n  resultPointer = copyArray;\n  do {\n    value1 = *dataPointer;\n    value2 = dataPointer[1];\n    dataPointer = dataPointer + 2;\n    *resultPointer = value1;\n    resultPointer[1] = value2;\n    resultPointer = resultPointer + 2;\n  } while (dataPointer != (undefined4 *)\"../Src/MPU9250.c\");\n  localArray[0] = 1;\n  localArray[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      frequency = 8000000 / localArray[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      frequency = 4000000;\n    }\n    result = frequency * *(byte *)((int)copyArray + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002008": "calculate_mpu_frequency_08002008",
                "uVar1": "value1",
                "iVar2": "result",
                "uVar3": "value2",
                "puVar4": "dataPointer",
                "uVar5": "frequency",
                "puVar6": "resultPointer",
                "local_24": "localArray",
                "local_20": "copyArray"
            },
            "calling": [
                "FUN_0800209c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800209c": {
            "entrypoint": "0x0800209c",
            "current_name": "validate_input_0800209c",
            "code": "\n\n\nundefined4 validate_input_0800209c(uint *data,uint length)\n\n{\n  char flag_set1;\n  char flag_set2;\n  int shifted_data;\n  uint second_byte;\n  int result;\n  uint shifted_result;\n  \n  if ((length <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | length, length == (length & 7))) {\n    if ((int)(*data << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data[2];\n    }\n    shifted_data = *data << 0x1f;\n    if (-1 < shifted_data) {\nLAB_080020ba:\n      if ((length < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | length, length != (length & 7))) {\n        return 1;\n      }\n      if ((*data & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data[3];\n      }\n      if ((int)(*data << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data[4] << 3;\n      }\n      second_byte = FUN_08002008();\n      DAT_200001bc = second_byte >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    second_byte = data[1];\n    if (second_byte == 1) {\n      flag_set2 = '\\x01';\n      flag_set1 = '\\0';\n    }\n    else {\n      shifted_result = _DAT_40021000;\n      if (second_byte == 2) goto LAB_08002176;\n      flag_set2 = '\\0';\n      flag_set1 = '\\x01';\n    }\n    shifted_result = (_DAT_40021000 >>\n            (LZCOUNT((uint)(byte)(flag_set1 << 6) << 0x18 | (uint)(byte)(flag_set2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)shifted_result < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | second_byte;\n      shifted_data = FUN_0800115c(shifted_data,shifted_result);\n      if (data[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_data) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_data) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          result = FUN_0800115c();\n        } while ((uint)(result - shifted_data) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800209c": "validate_input_0800209c",
                "param_1": "data",
                "param_2": "length",
                "cVar1": "flag_set1",
                "cVar2": "flag_set2",
                "iVar3": "shifted_data",
                "uVar4": "second_byte",
                "iVar5": "result",
                "uVar6": "shifted_result"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_08001104",
                "FUN_0800115c",
                "FUN_08002008"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002214": {
            "entrypoint": "0x08002214",
            "current_name": "get_dat_value_08002214",
            "code": "\nundefined4 get_dat_value_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "renaming": {
                "FUN_08002214": "get_dat_value_08002214"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002220": {
            "entrypoint": "0x08002220",
            "current_name": "get_value_from_offset_08002220",
            "code": "\n\n\nuint get_value_from_offset_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "renaming": {
                "FUN_08002220": "get_value_from_offset_08002220"
            },
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002250": {
            "entrypoint": "0x08002250",
            "current_name": "get_shifted_value_08002250",
            "code": "\n\n\nuint get_shifted_value_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250"
            },
            "calling": [
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002280": {
            "entrypoint": "0x08002280",
            "current_name": "update_settings_08002280",
            "code": "\nvoid updateSettings_08002280(int settingsAddress,uint *newSettings)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(settingsAddress + 0x20) = *(uint *)(settingsAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(settingsAddress + 4);\n  updatedValue3 = *newSettings;\n  updatedValue1 = *(uint *)(settingsAddress + 0x20) & 0xfffffffd | newSettings[2];\n  if (settingsAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | newSettings[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | newSettings[5] | newSettings[6];\n  }\n  *(uint *)(settingsAddress + 4) = updatedValue2;\n  *(uint *)(settingsAddress + 0x18) = *(uint *)(settingsAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(settingsAddress + 0x34) = newSettings[1];\n  *(uint *)(settingsAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002280": "update_settings_08002280",
                "param_1": "settingsAddress",
                "param_2": "newSettings",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022d0": {
            "entrypoint": "0x080022d0",
            "current_name": "update_parameters_080022d0",
            "code": "\nvoid updateParameters_080022d0(int baseAddress,uint *parameters)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffeff;\n  updatedValue2 = *(uint *)(baseAddress + 4);\n  updatedValue3 = *parameters;\n  updatedValue1 = *(uint *)(baseAddress + 0x20) & 0xfffffdff | parameters[2] << 8;\n  if (baseAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffff7ff | parameters[3] << 8) & 0xfffffbff;\n    updatedValue2 = updatedValue2 & 0xffffcfff | (parameters[5] | parameters[6]) << 4;\n  }\n  *(uint *)(baseAddress + 4) = updatedValue2;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffffff8c | updatedValue3;\n  *(uint *)(baseAddress + 0x3c) = parameters[1];\n  *(uint *)(baseAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022d0": "update_parameters_080022d0",
                "param_1": "baseAddress",
                "param_2": "parameters",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002324": {
            "entrypoint": "0x08002324",
            "current_name": "set_flags_and_values_08002324",
            "code": "\nvoid setFlagsAndValues_08002324(int baseAddress,int *paramArray)\n\n{\n  uint flag1;\n  int value1;\n  int value2;\n  int constantValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffefff;\n  flag1 = *(uint *)(baseAddress + 4);\n  value1 = *paramArray;\n  value2 = paramArray[2];\n  constantValue = 0x40012c00;\n  if (baseAddress == 0x40012c00) {\n    constantValue = paramArray[5];\n    flag1 = flag1 & 0xffffbfff;\n  }\n  if (baseAddress == 0x40012c00) {\n    flag1 = flag1 | constantValue << 6;\n  }\n  *(uint *)(baseAddress + 4) = flag1;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(baseAddress + 0x40) = paramArray[1];\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002324": "set_flags_and_values_08002324",
                "param_1": "baseAddress",
                "param_2": "paramArray",
                "uVar1": "flag1",
                "iVar2": "value1",
                "iVar3": "value2",
                "iVar4": "constantValue"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002368": {
            "entrypoint": "0x08002368",
            "current_name": "update_memory_08002368",
            "code": "\nvoid updateMemory_08002368(uint *memory_address,uint *data)\n\n{\n  uint temp;\n  \n  temp = *memory_address;\n  if (((((memory_address == (uint *)0x40012c00) || (memory_address == (uint *)0x40000000)) ||\n       (memory_address == (uint *)0x40000400)) || (memory_address == (uint *)0x40000800)) &&\n     (((temp = temp & 0xffffff8f | data_1, memory_address == (uint *)0x40012c00 ||\n       (memory_address == (uint *)0x40000000)) ||\n      ((memory_address == (uint *)0x40000400 || (memory_address == (uint *)0x40000800)))))) {\n    temp = temp & 0xfffffcff | data_2;\n  }\n  *memory_address = temp;\n  memory_value_1 = data_3;\n  memory_value_2 = *data;\n  temp = 0x40012c00;\n  if (memory_address == (uint *)0x40012c00) {\n    temp = data_5;\n  }\n  if (memory_address == (uint *)0x40012c00) {\n    memory_value_3 = temp;\n  }\n  memory_value_4 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002368": "update_memory_08002368",
                "param_1": "memory_address",
                "param_2": "data",
                "uVar1": "temp",
                "param_2[1]": "data_1",
                "param_2[3]": "data_2",
                "param_2[2]": "data_3",
                "param_2[4]": "data_5",
                "param_1[0xb]": "memory_value_1",
                "param_1[10]": "memory_value_2",
                "param_1[0xc]": "memory_value_3",
                "param_1[5]": "memory_value_4"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023d0": {
            "entrypoint": "0x080023d0",
            "current_name": "initialize_data_080023d0",
            "code": "\nundefined4 initializeData_080023d0(undefined4 *dataPointer)\n\n{\n  if (dataPointer != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 2;\n    FUN_08002368(*dataPointer,dataPointer + 1);\n    *(undefined *)((int)dataPointer + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080023d0": "initialize_data_080023d0",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002404": {
            "entrypoint": "0x08002404",
            "current_name": "update_data_08002404",
            "code": "\nvoid updateData_08002404(int dataPointer,int *values)\n\n{\n  uint bitmask1;\n  uint bitmask2;\n  int value1;\n  \n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & 0xffffffef;\n  bitmask2 = *(uint *)(dataPointer + 4);\n  value1 = *values;\n  bitmask1 = *(uint *)(dataPointer + 0x20) & 0xffffffdf | values[2] << 4;\n  if (dataPointer == 0x40012c00) {\n    bitmask1 = (bitmask1 & 0xffffff7f | values[3] << 4) & 0xffffffbf;\n    bitmask2 = bitmask2 & 0xfffff3ff | (values[5] | values[6]) << 2;\n  }\n  *(uint *)(dataPointer + 4) = bitmask2;\n  *(uint *)(dataPointer + 0x18) = *(uint *)(dataPointer + 0x18) & 0xffff8cff | value1 << 8;\n  *(int *)(dataPointer + 0x38) = values[1];\n  *(uint *)(dataPointer + 0x20) = bitmask1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002404": "update_data_08002404",
                "param_1": "dataPointer",
                "param_2": "values",
                "uVar1": "bitmask1",
                "uVar2": "bitmask2",
                "iVar3": "value1"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800245c": {
            "entrypoint": "0x0800245c",
            "current_name": "set_flag_0800245c",
            "code": "\nvoid setFlag_0800245c(int *flags,undefined4 param_2,undefined4 flagType)\n\n{\n  int extraout1;\n  int extraout2;\n  int extraout3;\n  int extraout4;\n  int temp1;\n  uint combinedValue;\n  int flagValue;\n  \n  if (*(char *)(flags + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)flags + 0x39) = 2;\n  *(undefined *)(flags + 0xe) = 1;\n  switch(flagType) {\n  case 0:\n    FUN_08002280(*flags);\n    flagValue = *flags;\n    combinedValue = *(uint *)(extraout1 + 0x10);\n    *(uint *)(flagValue + 0x18) = *(uint *)(flagValue + 0x18) | 8;\n    *(uint *)(flagValue + 0x18) = *(uint *)(flagValue + 0x18) & 0xfffffffb;\n    combinedValue = *(uint *)(flagValue + 0x18) | combinedValue;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*flags);\n    flagValue = *flags;\n    temp1 = *(int *)(extraout2 + 0x10);\n    *(uint *)(flagValue + 0x18) = *(uint *)(flagValue + 0x18) | 0x800;\n    *(uint *)(flagValue + 0x18) = *(uint *)(flagValue + 0x18) & 0xfffffbff;\n    combinedValue = *(uint *)(flagValue + 0x18) | temp1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*flags);\n    flagValue = *flags;\n    combinedValue = *(uint *)(extraout3 + 0x10);\n    *(uint *)(flagValue + 0x1c) = *(uint *)(flagValue + 0x1c) | 8;\n    *(uint *)(flagValue + 0x1c) = *(uint *)(flagValue + 0x1c) & 0xfffffffb;\n    combinedValue = *(uint *)(flagValue + 0x1c) | combinedValue;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*flags);\n    flagValue = *flags;\n    temp1 = *(int *)(extraout4 + 0x10);\n    *(uint *)(flagValue + 0x1c) = *(uint *)(flagValue + 0x1c) | 0x800;\n    *(uint *)(flagValue + 0x1c) = *(uint *)(flagValue + 0x1c) & 0xfffffbff;\n    combinedValue = *(uint *)(flagValue + 0x1c) | temp1 << 8;\nLAB_080024fa:\n    *(uint *)(flagValue + 0x1c) = combinedValue;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(flagValue + 0x18) = combinedValue;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)flags + 0x39) = 1;\n  *(undefined *)(flags + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800245c": "set_flag_0800245c",
                "param_1": "flags",
                "param_3": "flagType",
                "extraout_r1": "extraout1",
                "extraout_r1_00": "extraout2",
                "extraout_r1_01": "extraout3",
                "extraout_r1_02": "extraout4",
                "iVar1": "temp1",
                "uVar2": "combinedValue",
                "iVar3": "flagValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_080022d0",
                "FUN_08002324",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002520": {
            "entrypoint": "0x08002520",
            "current_name": "update_bitwise_value_08002520",
            "code": "\nvoid updateBitwiseValue_08002520(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = newValue << (bitPosition & 0xff) | *(uint *)(baseAddress + 0x20);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002520": "update_bitwise_value_08002520",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002538"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002538": {
            "entrypoint": "0x08002538",
            "current_name": "initialize_memory_08002538",
            "code": "\nundefined4 initializeMemory_08002538(uint **memory,undefined4 value)\n\n{\n  uint defaultValue;\n  uint *ptr;\n  \n  FUN_08002520(*memory,value,1);\n  ptr = *memory;\n  defaultValue = 0x40012c00;\n  if (ptr == (uint *)0x40012c00) {\n    defaultValue = uRam40012c44 | 0x8000;\n  }\n  if (ptr == (uint *)0x40012c00) {\n    ptr[0x11] = defaultValue;\n  }\n  *ptr = *ptr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002538": "initialize_memory_08002538",
                "param_1": "memory",
                "param_2": "value",
                "puVar2": "ptr",
                "uVar1": "defaultValue"
            },
            "calling": [
                "FUN_08003ff4"
            ],
            "called": [
                "FUN_08002520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002564": {
            "entrypoint": "0x08002564",
            "current_name": "check_and_set_flag_08002564",
            "code": "\nundefined4 checkAndSetFlag_08002564(int *inputArray,uint *otherArray)\n\n{\n  undefined4 returnValue;\n  \n  returnValue = 2;\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    *(undefined *)((int)inputArray + 0x39) = 2;\n    *(uint *)(*inputArray + 0x44) =\n         *otherArray | otherArray[1] | otherArray[2] | otherArray[3] | otherArray[4] | otherArray[5] | otherArray[6];\n    *(undefined *)((int)inputArray + 0x39) = 1;\n    returnValue = 0;\n    *(undefined *)(inputArray + 0xe) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002564": "check_and_set_flag_08002564",
                "param_1": "inputArray",
                "param_2": "otherArray",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025a4": {
            "entrypoint": "0x080025a4",
            "current_name": "initialize_flags_080025a4",
            "code": "\nundefined4 initializeFlags_080025a4(int *flagsArray,uint *valuesArray)\n\n{\n  uint firstValue;\n  undefined4 returnValue;\n  int firstElement;\n  uint secondValue;\n  \n  returnValue = 2;\n  if (*(char *)(flagsArray + 0xe) != '\\x01') {\n    *(undefined *)((int)flagsArray + 0x39) = 2;\n    firstElement = *flagsArray;\n    secondValue = *valuesArray;\n    firstValue = valuesArray[1];\n    *(uint *)(firstElement + 4) = *(uint *)(firstElement + 4) & 0xffffff8f;\n    *(uint *)(firstElement + 4) = *(uint *)(firstElement + 4) | secondValue;\n    *(uint *)(firstElement + 8) = *(uint *)(firstElement + 8) & 0xffffff7f;\n    *(uint *)(firstElement + 8) = *(uint *)(firstElement + 8) | firstValue;\n    *(undefined *)((int)flagsArray + 0x39) = 1;\n    returnValue = 0;\n    *(undefined *)(flagsArray + 0xe) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080025a4": "initialize_flags_080025a4",
                "param_1": "flagsArray",
                "param_2": "valuesArray",
                "uVar1": "firstValue",
                "uVar2": "returnValue",
                "iVar3": "firstElement",
                "uVar4": "secondValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "update_values_080025e8",
            "code": "\nvoid updateValues_080025e8(int *inputData)\n\n{\n  int tempVar1;\n  int tempVar2;\n  uint tempVar3;\n  int tempVar4;\n  int tempVar5;\n  int dataPtr;\n  \n  dataPtr = *inputData;\n  tempVar3 = inputData[4];\n  *(uint *)(dataPtr + 0x10) = *(uint *)(dataPtr + 0x10) & 0xffffcfff | inputData[3];\n  *(uint *)(dataPtr + 0xc) = inputData[2] | tempVar3 | inputData[5] | *(uint *)(dataPtr + 0xc) & 0xffffe9f3;\n  *(uint *)(dataPtr + 0x14) = *(uint *)(dataPtr + 0x14) & 0xfffffcff | inputData[6];\n  if (dataPtr == 0x40013800) {\n    tempVar1 = FUN_08002250();\n    tempVar4 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) / 100);\n    tempVar1 = FUN_08002250();\n    tempVar5 = inputData[1];\n    tempVar2 = FUN_08002250();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(tempVar5 << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002250();\n    tempVar3 = (uint)(tempVar1 * 0x19) / (uint)(inputData[1] << 2);\n    tempVar1 = FUN_08002250();\n  }\n  else {\n    tempVar1 = FUN_08002220();\n    tempVar4 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) / 100);\n    tempVar1 = FUN_08002220();\n    tempVar5 = inputData[1];\n    tempVar2 = FUN_08002220();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(tempVar5 << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002220();\n    tempVar3 = (uint)(tempVar1 * 0x19) / (uint)(inputData[1] << 2);\n    tempVar1 = FUN_08002220();\n  }\n  *(uint *)(dataPtr + 8) =\n       (((tempVar3 + (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (tempVar2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       tempVar4 * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "inputData",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2",
                "uVar3": "tempVar3",
                "iVar4": "tempVar4",
                "iVar5": "tempVar5",
                "iVar6": "dataPtr"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002724": {
            "entrypoint": "0x08002724",
            "current_name": "initialize_data_08002724",
            "code": "\nundefined4 initializeData_08002724(int *data)\n\n{\n  int var1;\n  \n  if (data != (int *)0x0) {\n    if (*(char *)((int)data + 0x39) == '\\0') {\n      *(undefined *)(data + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)data + 0x39) = 2;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffdfff;\n    FUN_080025e8(data);\n    var1 = *data;\n    *(uint *)(var1 + 0x10) = *(uint *)(var1 + 0x10) & 0xffffb7ff;\n    *(uint *)(var1 + 0x14) = *(uint *)(var1 + 0x14) & 0xffffffd5;\n    *(uint *)(var1 + 0xc) = *(uint *)(var1 + 0xc) | 0x2000;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002724": "initialize_data_08002724",
                "param_1": "data",
                "iVar1": "var1"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800290a": {
            "entrypoint": "0x0800290a",
            "current_name": "FUNC_0800290a",
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800290c": {
            "entrypoint": "0x0800290c",
            "current_name": "process_data_0800290c",
            "code": "\nundefined4 processData_0800290c(int *data)\n\n{\n  byte byteValue;\n  int var1;\n  uint var2;\n  undefined4 var3;\n  short count;\n  ushort *ptr1;\n  ushort *ptr2;\n  bool flag;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  var1 = *data;\n  ptr1 = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ptr2 = ptr1 + 1;\n      *ptr1 = (ushort)((uint)(*(int *)(var1 + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ptr2 = (ushort *)((int)ptr1 + 1);\n      *ptr1 = (ushort)*(int *)(var1 + 4) & 0xff;\n    }\n    data[10] = (int)ptr2;\n  }\n  else {\n    if (data[4] == 0) {\n      byteValue = (byte)*(undefined4 *)(var1 + 4);\n      data[10] = (int)ptr1 + 1;\n    }\n    else {\n      var3 = *(undefined4 *)(var1 + 4);\n      data[10] = (int)ptr1 + 1;\n      byteValue = (byte)var3 & 0x7f;\n    }\n    *(byte *)ptr1 = byteValue;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count == 0) {\n    var1 = *data;\n    *(uint *)(var1 + 0xc) = *(uint *)(var1 + 0xc) & 0xffffffdf;\n    flag = *(char *)((int)data + 0x39) != '2';\n    if (flag) {\n      var2 = *(uint *)(var1 + 0xc) & 0xfffffeff;\n    }\n    else {\n      var1 = 0x12;\n      var2 = 0x32;\n    }\n    if (flag) {\n      *(uint *)(var1 + 0xc) = var2;\n      var2 = *(uint *)(var1 + 0x14) & 0xfffffffe;\n    }\n    if (flag) {\n      *(uint *)(var1 + 0x14) = var2;\n      var1 = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)var1;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "byteValue",
                "iVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3",
                "sVar5": "count",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "bVar8": "flag"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [
                "FUN_08004c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002998": {
            "entrypoint": "0x08002998",
            "current_name": "FUNC_08002998",
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800299a": {
            "entrypoint": "0x0800299a",
            "current_name": "process_data_0800299a",
            "code": "\nvoid processData_0800299a(uint **data)\n\n{\n  uint value1;\n  short count;\n  uint value2;\n  uint *ptrVar1;\n  undefined result;\n  uint *ptrVar2;\n  uint flag;\n  bool isTrue;\n  \n  ptrVar2 = *data;\n  value2 = *ptrVar2;\n  value1 = ptrVar2[3];\n  if ((value2 & 0xf) == 0) {\n    if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    flag = ptrVar2[5] & 1;\n    if ((flag != 0) || ((value1 & 0x120) != 0)) {\n      ptrVar2 = (uint *)(value2 << 0x1f);\n      if ((int)ptrVar2 < 0) {\n        isTrue = (int)(value1 << 0x17) < 0;\n        if (isTrue) {\n          ptrVar2 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (isTrue) {\n          data[0xf] = ptrVar2;\n        }\n      }\n      if (((int)(value2 << 0x1d) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(value2 << 0x1e) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(value2 << 0x1c) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      ptrVar2 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((ptrVar2[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      ptrVar2[3] = ptrVar2[3] & 0xfffffedf;\n      ptrVar2[5] = ptrVar2[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(value2 << 0x18) < 0) && ((int)(value1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      ptrVar1 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        ptrVar2[1] = *(ushort *)ptrVar1 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          ptrVar1 = (uint *)((int)ptrVar1 + 2);\n        }\n        else {\n          ptrVar1 = (uint *)((int)ptrVar1 + 1);\n        }\n        data[8] = ptrVar1;\n      }\n      else {\n        data[8] = (uint *)((int)ptrVar1 + 1);\n        ptrVar2[1] = (uint)*(byte *)ptrVar1;\n      }\n      count = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = count;\n      if (count == 0) {\n        ptrVar2[3] = ptrVar2[3] & 0xffffff7f;\n        ptrVar2[3] = ptrVar2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(value2 << 0x19) < 0) && ((int)(value1 << 0x19) < 0)) {\n    ptrVar2[3] = ptrVar2[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      result = 0x22;\n    }\n    else {\n      result = 1;\n    }\n    *(undefined *)((int)data + 0x39) = result;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "value1",
                "sVar2": "count",
                "uVar3": "value2",
                "puVar4": "ptrVar1",
                "uVar5": "result",
                "puVar6": "ptrVar2",
                "uVar7": "flag",
                "bVar8": "isTrue"
            },
            "calling": [],
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "entrypoint": "0x08002ad0",
            "current_name": "initialize_mpu9250_08002ad0",
            "code": "\nvoid initialize_MPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b48": {
            "entrypoint": "0x08002b48",
            "current_name": "initialize_mpu9250_08002b48",
            "code": "\nvoid initializeMPU9250_08002b48(void)\n\n{\n  undefined4 result;\n  uint inputFlags;\n  int value1;\n  int value2;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  \n  tempValue1 = 0;\n  tempValue2 = inputFlags & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&tempValue1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(tempValue1._2_1_,tempValue1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)tempValue1,tempValue1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)tempValue2,tempValue2._1_1_);\n  value2 = (int)DAT_200002f6;\n  value1 = (int)DAT_200002f8;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d0 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(value2);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d4 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(value1);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d8 = FUN_08000cec(result,0x38000000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_08002b48",
                "in_r3": "inputFlags",
                "iVar2": "value1",
                "iVar3": "value2",
                "local_18": "tempValue1",
                "local_14": "tempValue2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "entrypoint": "0x08002bf0",
            "current_name": "initialize_mpu9250_08002bf0",
            "code": "\nvoid initializeMPU9250_08002bf0(void)\n\n{\n  undefined4 processedValue;\n  int concatenatedValue1;\n  int concatenatedValue2;\n  undefined4 result1;\n  undefined2 result2;\n  \n  result1 = 0;\n  result2 = 0;\n  FUN_080040e8(0xd0,0x43,&result1,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(result1._2_1_,result1._3_1_);\n  DAT_200002be = CONCAT11((undefined)result1,result1._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)result2,result2._1_1_);\n  concatenatedValue2 = (int)DAT_200002c0;\n  concatenatedValue1 = (int)DAT_200002c2;\n  processedValue = FUN_08000c44();\n  processedValue = FUN_08000cec(processedValue,0x447a0000);\n  processedValue = FUN_08000cec(processedValue,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(processedValue,DAT_20000000);\n  processedValue = FUN_08000c44(concatenatedValue2);\n  processedValue = FUN_08000cec(processedValue,0x447a0000);\n  processedValue = FUN_08000cec(processedValue,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(processedValue,DAT_20000004);\n  processedValue = FUN_08000c44(concatenatedValue1);\n  processedValue = FUN_08000cec(processedValue,0x447a0000);\n  processedValue = FUN_08000cec(processedValue,0x38000000);\n  DAT_200002cc = FUN_08000ad8(processedValue,DAT_20000008);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "local_20": "result1",
                "local_1c": "result2",
                "iVar2": "concatenatedValue1",
                "iVar3": "concatenatedValue2",
                "uVar1": "processedValue"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "entrypoint": "0x08002cb0",
            "current_name": "configure_mpu9250_08002cb0",
            "code": "\nvoid configureMPU9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 result;\n  uint configValue;\n  \n  configValue = param4;\n  FUN_0800403c(0xd0,0x37,0x22,1,param1,param2,param3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&configValue,3,\"../Src/MPU9250.c\",0xb6);\n  result = FUN_08000c44((configValue & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((configValue >> 8 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002ec = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((configValue >> 0x10 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(result,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002cb0": "configure_mpu9250_08002cb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "local_c": "configValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d88": {
            "entrypoint": "0x08002d88",
            "current_name": "initialize_mpu9250_08002d88",
            "code": "\nvoid initialize_MPU9250_08002d88(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  int tempVar3;\n  undefined2 initializedValue1;\n  undefined initializedValue2;\n  undefined initializedValue3;\n  undefined initializedValue4;\n  undefined initializedValue5;\n  byte initializedValue6;\n  undefined initializedValue7;\n  \n  initializedValue7 = (undefined)((uint)arg4 >> 0x18);\n  initializedValue1 = 0;\n  initializedValue2 = 0;\n  initializedValue3 = 0;\n  initializedValue4 = 0;\n  initializedValue5 = 0;\n  initializedValue6 = 0;\n  result = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,arg1,arg2);\n  if (result << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&initializedValue1,7,\"../Src/MPU9250.c\",0xda);\n    tempVar2 = DAT_2000001c;\n    if ((int)((uint)initializedValue6 << 0x1c) < 0) {\n      DAT_200013bb = DAT_200013bb + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(initializedValue3,initializedValue2);\n      DAT_200002bc = CONCAT11(initializedValue5,initializedValue4);\n      tempVar3 = (int)DAT_200002ba;\n      result = (int)DAT_200002bc;\n      DAT_200002b8 = initializedValue1;\n      tempVar1 = FUN_08000c44();\n      tempVar1 = FUN_08000cec(tempVar1,tempVar2);\n      tempVar1 = FUN_08000cec(tempVar1,DAT_200002e8);\n      tempVar1 = FUN_08000ad8(tempVar1,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(tempVar1,DAT_2000002c);\n      tempVar1 = FUN_08000c44(tempVar3);\n      tempVar1 = FUN_08000cec(tempVar1,tempVar2);\n      tempVar1 = FUN_08000cec(tempVar1,DAT_200002ec);\n      tempVar1 = FUN_08000ad8(tempVar1,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(tempVar1,DAT_20000030);\n      tempVar1 = FUN_08000c44(result);\n      tempVar2 = FUN_08000cec(tempVar1,tempVar2);\n      tempVar2 = FUN_08000cec(tempVar2,DAT_200002f0);\n      tempVar2 = FUN_08000ad8(tempVar2,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(tempVar2,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d88": "initialize_mpu9250_08002d88",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "iVar4": "tempVar3",
                "local_28": "initializedValue1",
                "uStack_26": "initializedValue2",
                "uStack_25": "initializedValue3",
                "local_24": "initializedValue4",
                "local_23": "initializedValue5",
                "local_22": "initializedValue6",
                "uStack_21": "initializedValue7"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "entrypoint": "0x08002ea0",
            "current_name": "initialize_system_08002ea0",
            "code": "\nvoid initialize_system_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 temp_result;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,temp_result,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ea0": "initialize_system_08002ea0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "temp_result"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08003314"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "entrypoint": "0x08002ec0",
            "current_name": "calculate_sum_08002ec0",
            "code": "\nvoid calculateSum_08002ec0(void)\n\n{\n  undefined4 result1;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant1 = DAT_2000024c;\n  constant2 = DAT_20000010;\n  result1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  constant1 = FUN_08000cec(result1,constant1);\n  constant2 = FUN_08000cec(constant2,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(constant2,constant1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec0": "calculate_sum_08002ec0",
                "uVar1": "result1",
                "uVar2": "constant1",
                "uVar3": "constant2"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "entrypoint": "0x08002ed4",
            "current_name": "calculate_average_08002ed4",
            "code": "\nvoid calculateAverage_08002ed4(void)\n\n{\n  undefined4 average;\n  undefined4 data1;\n  undefined4 data2;\n  \n  data1 = DAT_20000248;\n  data2 = uRam20000018;\n  average = FUN_08000ad8(0x3f800000,uRam20000018);\n  data1 = FUN_08000cec(average,data1);\n  data2 = FUN_08000cec(data2,uRam20000014);\n  uRam20000014 = FUN_08000adc(data2,data1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed4": "calculate_average_08002ed4",
                "uVar1": "average",
                "uVar2": "data1",
                "uVar3": "data2"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "entrypoint": "0x08002ee8",
            "current_name": "initialize_connection_08002ee8",
            "code": "\nvoid initializeConnection_08002ee8(void)\n\n{\n  undefined4 tempVariable;\n  int result;\n  \n  tempVariable = DAT_20000250;\n  result = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((result != 0) && (result = FUN_08001028(tempVariable,0x42b40000), result != 0)) {\n    FUN_08000adc(tempVariable,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(tempVariable,0x43870000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ee8": "initialize_connection_08002ee8",
                "uVar1": "tempVariable",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f28": {
            "entrypoint": "0x08002f28",
            "current_name": "initialize_system_08002f28",
            "code": "\n\n\nvoid initializeSystem_08002f28(void)\n\n{\n  undefined4 result;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  result = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(result,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUN_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  result = FUN_08002ed4();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  result = FUN_08002ec0();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08000e54",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08003320",
                "FUN_08002bf0",
                "FUN_08002ed4",
                "FUN_08002b48",
                "thunk_FUN_0800115c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08001078",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003034": {
            "entrypoint": "0x08003034",
            "current_name": "decompile_and_extract_data_08003034",
            "code": "\nuint decompile_and_extract_data_08003034(undefined4 input_1,undefined4 input_2,undefined4 file_path,undefined4 data)\n\n{\n  undefined4 result;\n  \n  result = data;\n  FUN_080040b8(0xee,0,&result,3,\"../Src/MS5611.c\",0x8c,file_path);\n  return (uint)CONCAT12((undefined)result,CONCAT11(result._1_1_,result._2_1_));\n}\n\n",
            "renaming": {
                "FUN_08003034": "decompile_and_extract_data_08003034",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "file_path",
                "param_4": "data",
                "local_c": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080040b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003068": {
            "entrypoint": "0x08003068",
            "current_name": "get_data_pointer_08003068",
            "code": "\nundefined4 get_data_pointer_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "renaming": {
                "FUN_08003068": "get_data_pointer_08003068"
            },
            "calling": [
                "FUN_08004a30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003298": {
            "entrypoint": "0x08003298",
            "current_name": "initialize_sensor_data_08003298",
            "code": "\nvoid initializeSensorData_08003298(void)\n\n{\n  int counter;\n  undefined byte1;\n  undefined byte2;\n  \n  counter = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,counter + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + counter) = CONCAT11(byte1,byte2);\n    counter = counter + 2;\n  } while (counter != 0x10);\n  counter = 0;\n  do {\n    (&DAT_20000300)[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x14);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003298": "initialize_sensor_data_08003298",
                "iVar1": "counter",
                "local_1c": "byte1",
                "local_1b": "byte2"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003314": {
            "entrypoint": "0x08003314",
            "current_name": "set_global_parameter_08003314",
            "code": "\nvoid setGlobalParameter_08003314(undefined4 newValue)\n\n{\n  DAT_2000035c = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003314": "set_global_parameter_08003314",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003320": {
            "entrypoint": "0x08003320",
            "current_name": "set_global_variable_08003320",
            "code": "\nvoid setGlobalVariable_08003320(undefined4 value)\n\n{\n  DAT_20000360 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003320": "set_global_variable_08003320",
                "param_1": "value"
            },
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003330": {
            "entrypoint": "0x08003330",
            "current_name": "process_data_08003330",
            "code": "\nvoid processData_08003330(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 param4,\n                 undefined4 param5,undefined4 param6,undefined4 input7,undefined4 input8,\n                 undefined4 input9,undefined4 *outputParams)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int status;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined4 result7;\n  int result8;\n  undefined4 result9;\n  undefined4 result10;\n  undefined4 result11;\n  undefined4 result12;\n  undefined4 result13;\n  undefined4 result14;\n  undefined4 result15;\n  undefined4 result16;\n  undefined4 result17;\n  undefined4 result18;\n  int tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  int tempVar8;\n  undefined4 tempVar9;\n  undefined4 tempVar10;\n  undefined4 tempVar11;\n  int tempVar12;\n  undefined8 tempVar13;\n  undefined8 tempVar14;\n  \n  tempVar11 = DAT_20000048;\n  tempVar10 = DAT_20000044;\n  tempVar12 = DAT_20000040;\n  tempVar9 = DAT_2000003c;\n  result1 = FUN_08000cec(input1,input1);\n  result2 = FUN_08000cec(input2);\n  result1 = FUN_08000adc(result1,result2);\n  result2 = FUN_08000cec(input3);\n  FUN_08000adc(result1,result2);\n  FUN_08000428();\n  FUN_08005bc8();\n  result1 = FUN_08000a30();\n  status = FUN_08001014(result1,0);\n  if (status == 0) {\n    result2 = FUN_08000cec(input7);\n    result4 = FUN_08000cec(input8);\n    result2 = FUN_08000adc(result2,result4);\n    result4 = FUN_08000cec(input9);\n    FUN_08000adc(result2,result4);\n    FUN_08000428();\n    FUN_08005bc8();\n    result2 = FUN_08000a30();\n    status = FUN_08001014(result2,0);\n    if (status == 0) {\n      tempVar13 = FUN_08000428(param4);\n      FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0xa2529d39,0x3f91df46);\n      result4 = FUN_08000a30();\n      tempVar13 = FUN_08000428(param5);\n      FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0xa2529d39,0x3f91df46);\n      result5 = FUN_08000a30();\n      tempVar13 = FUN_08000428(param6);\n      FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0xa2529d39,0x3f91df46);\n      result6 = FUN_08000a30();\n      status = FUN_08000adc(tempVar9);\n      result7 = FUN_08000adc(tempVar12);\n      result8 = FUN_08000adc(tempVar10,tempVar10);\n      result9 = FUN_08000adc(tempVar11,tempVar11);\n      result10 = FUN_08000cec(tempVar9);\n      result11 = FUN_08000cec(tempVar9,tempVar12);\n      result12 = FUN_08000cec(tempVar9,tempVar10);\n      result13 = FUN_08000cec(tempVar12);\n      result14 = FUN_08000cec(tempVar12,tempVar11);\n      result15 = FUN_08000cec(tempVar10,tempVar10);\n      result16 = FUN_08000cec(tempVar11,tempVar11);\n      result1 = FUN_08000e54(0x3f800000,result1);\n      result2 = FUN_08000e54(0x3f800000,result2);\n      result17 = FUN_08000cec(input7,result2);\n      result18 = FUN_08000cec(input8,result2);\n      result2 = FUN_08000cec(input9,result2);\n      tempVar1 = FUN_08000cec(status,result17);\n      tempVar2 = FUN_08000cec(status,result18);\n      tempVar3 = FUN_08000cec(status,result2);\n      tempVar4 = FUN_08000cec(result7,result17);\n      tempVar5 = FUN_08000cec(result10,result17);\n      tempVar6 = FUN_08000cec(tempVar11,tempVar2);\n      tempVar5 = FUN_08000ad8(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(tempVar10,tempVar3);\n      tempVar5 = FUN_08000adc(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(result13,result17);\n      tempVar5 = FUN_08000adc(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(result7,result18);\n      tempVar6 = FUN_08000cec(tempVar6,tempVar10);\n      tempVar5 = FUN_08000adc(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(result7,result2);\n      tempVar6 = FUN_08000cec(tempVar6,tempVar11);\n      tempVar5 = FUN_08000adc(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(result15,result17);\n      tempVar5 = FUN_08000ad8(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(result16,result17);\n      tempVar5 = FUN_08000ad8(tempVar5,tempVar6);\n      tempVar6 = FUN_08000cec(tempVar11,tempVar1);\n      tempVar7 = FUN_08000cec(result10,result18);\n      tempVar6 = FUN_08000adc(tempVar6,tempVar7);\n      tempVar3 = FUN_08000cec(tempVar12,tempVar3);\n      tempVar3 = FUN_08000ad8(tempVar6,tempVar3);\n      tempVar6 = FUN_08000cec(tempVar10,tempVar4);\n      tempVar3 = FUN_08000adc(tempVar3,tempVar6);\n      tempVar6 = FUN_08000cec(result13,result18);\n      tempVar3 = FUN_08000ad8(tempVar3,tempVar6);\n      tempVar6 = FUN_08000cec(result15,result18);\n      tempVar3 = FUN_08000adc(tempVar3,tempVar6);\n      tempVar6 = FUN_08000cec(result8,result2);\n      tempVar6 = FUN_08000cec(tempVar6,tempVar11);\n      tempVar3 = FUN_08000adc(tempVar3,tempVar6);\n      tempVar6 = FUN_08000cec(result16,result18);\n      tempVar3 = FUN_08000ad8(tempVar3,tempVar6);\n      tempVar5 = FUN_08000cec(tempVar5,tempVar5);\n      tempVar3 = FUN_08000cec(tempVar3,tempVar3);\n      FUN_08000adc(tempVar5,tempVar3);\n      FUN_08000428();\n      FUN_08005bc8();\n      tempVar8 = FUN_08000a30();\n      tempVar3 = FUN_08000cec(tempVar1 + -0x80000000,tempVar10);\n      tempVar2 = FUN_08000cec(tempVar12,tempVar2);\n      tempVar2 = FUN_08000adc(tempVar3,tempVar2);\n      result10 = FUN_08000cec(result10,result2);\n      result10 = FUN_08000adc(tempVar2,result10);\n      tempVar2 = FUN_08000cec(tempVar11,tempVar4);\n      result10 = FUN_08000adc(result10,tempVar2);\n      tempVar2 = FUN_08000cec(result13,result2);\n      result10 = FUN_08000ad8(result10,tempVar2);\n      tempVar2 = FUN_08000cec(result8,result18);\n      tempVar2 = FUN_08000cec(tempVar2,tempVar11);\n      result10 = FUN_08000adc(result10,tempVar2);\n      tempVar2 = FUN_08000cec(result15,result2);\n      result10 = FUN_08000ad8(result10,tempVar2);\n      tempVar2 = FUN_08000cec(result16,result2);\n      result10 = FUN_08000adc(result10,tempVar2);\n      tempVar2 = FUN_08000adc(result10,result10);\n      tempVar3 = FUN_08000adc(result14);\n      tempVar4 = FUN_08000cec(tempVar10,status);\n      tempVar3 = FUN_08000ad8(tempVar3,tempVar4);\n      tempVar4 = FUN_08000cec(input1,result1);\n      tempVar3 = FUN_08000ad8(tempVar3,tempVar4);\n      tempVar4 = FUN_08000cec(tempVar11,result8);\n      tempVar5 = FUN_08000adc(result11);\n      tempVar4 = FUN_08000adc(tempVar4,tempVar5);\n      tempVar5 = FUN_08000cec(input2,result1);\n      tempVar4 = FUN_08000ad8(tempVar4,tempVar5);\n      tempVar5 = FUN_08000cec(tempVar10,result10);\n      tempVar6 = FUN_08000ad8(0x3f000000,result15);\n      result16 = FUN_08000ad8(tempVar6,result16);\n      result16 = FUN_08000cec(result16,tempVar8);\n      tempVar6 = FUN_08000ad8(result14,result12);\n      tempVar6 = FUN_08000cec(tempVar6,result10);\n      result16 = FUN_08000adc(result16,tempVar6);\n      result16 = FUN_08000ad8(result16,result17);\n      result17 = FUN_08000cec(tempVar12,result10);\n      tempVar6 = FUN_08000cec(tempVar12,tempVar10);\n      tempVar7 = FUN_08000cec(tempVar9,tempVar11);\n      tempVar6 = FUN_08000ad8(tempVar6,tempVar7);\n      tempVar6 = FUN_08000cec(tempVar6,tempVar8);\n      tempVar7 = FUN_08000cec(tempVar10,tempVar11);\n      result11 = FUN_08000adc(tempVar7,result11);\n      result11 = FUN_08000cec(result11,result10);\n      result11 = FUN_08000adc(tempVar6,result11);\n      result11 = FUN_08000ad8(result11,result18);\n      result18 = FUN_08000cec(tempVar10,tempVar8);\n      tempVar6 = FUN_08000ad8(0x3f000000,result13);\n      tempVar6 = FUN_08000ad8(tempVar6,result15);\n      tempVar6 = FUN_08000cec(tempVar6,result10);\n      result12 = FUN_08000adc(result12,result14);\n      result12 = FUN_08000cec(result12,tempVar8);\n      result12 = FUN_08000adc(tempVar6,result12);\n      result2 = FUN_08000ad8(result12,result2);\n      result12 = FUN_08000cec(result8 + -0x80000000,tempVar3);\n      result14 = FUN_08000cec(result7,tempVar4);\n      result12 = FUN_08000adc(result12,result14);\n      result14 = FUN_08000cec(tempVar5,result16);\n      result12 = FUN_08000ad8(result12,result14);\n      result14 = FUN_08000cec(tempVar11,tempVar8 + -0x80000000);\n      result14 = FUN_08000adc(result14,result17);\n      result14 = FUN_08000cec(result14,result11);\n      result12 = FUN_08000adc(result12,result14);\n      result14 = FUN_08000cec(result18,result2);\n      result12 = FUN_08000adc(result12,result14);\n      result13 = FUN_08000adc(result13);\n      result13 = FUN_08000ad8(0x3f800000,result13);\n      result14 = FUN_08000adc(result15);\n      result13 = FUN_08000ad8(result13,result14);\n      result1 = FUN_08000cec(input3,result1);\n      result1 = FUN_08000ad8(result13,result1);\n      result13 = FUN_08000cec(tempVar11,result10);\n      result10 = FUN_08000cec(tempVar9,result10);\n      result14 = FUN_08000cec(result9,tempVar3);\n      result15 = FUN_08000cec(status,tempVar4);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000cec(tempVar12,0x40800000);\n      result15 = FUN_08000cec(result15,result1);\n      result14 = FUN_08000ad8(result14,result15);\n      result15 = FUN_08000cec(result16,result13);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000adc(result18,result10);\n      result15 = FUN_08000cec(result15,result11);\n      result14 = FUN_08000adc(result14,result15);\n      result15 = FUN_08000cec(tempVar11,tempVar8);\n      result18 = FUN_08000cec(tempVar12,tempVar2);\n      result15 = FUN_08000ad8(result15,result18);\n      result15 = FUN_08000cec(result15,result2);\n      result14 = FUN_08000adc(result14,result15);\n      tempVar1 = FUN_08000adc(tempVar8,tempVar8);\n      result15 = FUN_08000cec(tempVar12,tempVar8);\n      result18 = FUN_08000cec(status + -0x80000000,tempVar3);\n      result9 = FUN_08000cec(result9,tempVar4);\n      result9 = FUN_08000adc(result18,result9);\n      result18 = FUN_08000cec(tempVar10,0x40800000);\n      result1 = FUN_08000cec(result18,result1);\n      result1 = FUN_08000ad8(result9,result1);\n      result9 = FUN_08000cec(tempVar10,tempVar1 + -0x80000000);\n      result9 = FUN_08000ad8(result9,result10);\n      result9 = FUN_08000cec(result9,result16);\n      result1 = FUN_08000adc(result1,result9);\n      result9 = FUN_08000adc(result13,result15);\n      result9 = FUN_08000cec(result9,result11);\n      result1 = FUN_08000adc(result1,result9);\n      result9 = FUN_08000cec(tempVar9,tempVar8);\n      result10 = FUN_08000cec(tempVar10,tempVar2);\n      result9 = FUN_08000ad8(result9,result10);\n      result9 = FUN_08000cec(result9,result2);\n      result9 = FUN_08000adc(result1,result9);\n      result1 = FUN_08000cec(result7,tempVar3);\n      result7 = FUN_08000cec(result8,tempVar4);\n      result1 = FUN_08000adc(result1,result7);\n      result7 = FUN_08000cec(tempVar11,tempVar1 + -0x80000000);\n      result7 = FUN_08000adc(result7,result17);\n      result7 = FUN_08000cec(result7,result16);\n      result1 = FUN_08000adc(result1,result7);\n      result7 = FUN_08000cec(tempVar9,tempVar8 + -0x80000000);\n      result7 = FUN_08000adc(result7,tempVar5);\n      result7 = FUN_08000cec(result7,result11);\n      result1 = FUN_08000adc(result1,result7);\n      result2 = FUN_08000cec(result2,result15);\n      result7 = FUN_08000adc(result1,result2);\n      result1 = FUN_08000cec(result12);\n      result2 = FUN_08000cec(result14);\n      result1 = FUN_08000adc(result1,result2);\n      result2 = FUN_08000cec(result9,result9);\n      result1 = FUN_08000adc(result1,result2);\n      result2 = FUN_08000cec(result7,result7);\n      FUN_08000adc(result1,result2);\n      FUN_08000428();\n      FUN_08005bc8();\n      result1 = FUN_08000a30();\n      result10 = FUN_08000e54(0x3f800000,result1);\n      result1 = DAT_2000035c;\n      result2 = FUN_08000cec(tempVar12 + -0x80000000,result4);\n      result11 = FUN_08000cec(tempVar10,result5);\n      result2 = FUN_08000ad8(result2,result11);\n      result11 = FUN_08000cec(tempVar11,result6);\n      result2 = FUN_08000ad8(result2,result11);\n      result11 = FUN_08000cec(result2,0x3f000000);\n      result12 = FUN_08000cec(result12,result10);\n      result2 = DAT_20000360;\n      result12 = FUN_08000cec(result12,result1);\n      result11 = FUN_08000ad8(result11,result12);\n      result2 = FUN_08000cec(result11,result2);\n      result11 = FUN_08000adc(result2,tempVar9);\n      result12 = FUN_08000cec(tempVar9,result4);\n      result13 = FUN_08000cec(tempVar10,result6);\n      result2 = DAT_20000360;\n      result12 = FUN_08000adc(result12,result13);\n      result13 = FUN_08000cec(tempVar11,result5);\n      result12 = FUN_08000ad8(result12,result13);\n      result12 = FUN_08000cec(result12,0x3f000000);\n      result13 = FUN_08000cec(result14,result10);\n      result13 = FUN_08000cec(result13,result1);\n      result12 = FUN_08000ad8(result12,result13);\n      result2 = FUN_08000cec(result12,result2);\n      result12 = FUN_08000adc(result2,tempVar12);\n      result2 = DAT_20000360;\n      result13 = FUN_08000cec(tempVar9,result5);\n      result14 = FUN_08000cec(tempVar12,result6);\n      result13 = FUN_08000ad8(result13,result14);\n      result14 = FUN_08000cec(tempVar11,result4);\n      result13 = FUN_08000adc(result13,result14);\n      result13 = FUN_08000cec(result13,0x3f000000);\n      result9 = FUN_08000cec(result9,result10);\n      result9 = FUN_08000cec(result9,result1);\n      result9 = FUN_08000ad8(result13,result9);\n      result2 = FUN_08000cec(result9,result2);\n      result2 = FUN_08000adc(result2,tempVar10);\n      tempVar9 = FUN_08000cec(tempVar9,result6);\n      result5 = FUN_08000cec(tempVar12,result5);\n      tempVar9 = FUN_08000adc(tempVar9,result5);\n      tempVar10 = FUN_08000cec(tempVar10,result4);\n      tempVar9 = FUN_08000ad8(tempVar9,tempVar10);\n      tempVar10 = FUN_08000cec(tempVar9,0x3f000000);\n      tempVar9 = FUN_08000cec(result7,result10);\n      result1 = FUN_08000cec(tempVar9,result1);\n      tempVar9 = DAT_20000360;\n      tempVar10 = FUN_08000ad8(tempVar10,result1);\n      tempVar9 = FUN_08000cec(tempVar10,tempVar9);\n      tempVar9 = FUN_08000adc(tempVar9,tempVar11);\n      tempVar10 = FUN_08000cec(result11,result11);\n      tempVar11 = FUN_08000cec(result12,result12);\n      tempVar10 = FUN_08000adc(tempVar10,tempVar11);\n      tempVar11 = FUN_08000cec(result2,result2);\n      tempVar10 = FUN_08000adc(tempVar10,tempVar11);\n      tempVar11 = FUN_08000cec(tempVar9,tempVar9);\n      FUN_08000adc(tempVar10,tempVar11);\n      FUN_08000428();\n      FUN_08005bc8();\n      tempVar10 = FUN_08000a30();\n      tempVar10 = FUN_08000e54(0x3f800000,tempVar10);\n      tempVar11 = FUN_08000cec(result11,tempVar10);\n      DAT_2000003c = tempVar11;\n      tempVar12 = FUN_08000cec(result12,tempVar10);\n      DAT_20000040 = tempVar12;\n      result1 = FUN_08000cec(result2,tempVar10);\n      DAT_20000044 = result1;\n      DAT_20000048 = FUN_08000cec(tempVar9,tempVar10);\n      tempVar9 = FUN_08000cec(tempVar12,DAT_20000048);\n      tempVar10 = FUN_08000cec(tempVar11,result1);\n      tempVar9 = FUN_08000ad8(tempVar9,tempVar10);\n      FUN_08000adc(tempVar9,tempVar9);\n      FUN_08000428();\n      tempVar13 = FUN_08005854();\n      tempVar13 = FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0,0x40668000);\n      FUN_08000724((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0x54442d18,0x400921fb);\n      tempVar9 = FUN_08000a30();\n      *outputParams = tempVar9;\n      tempVar12 = DAT_20000040;\n      tempVar9 = DAT_2000003c;\n      tempVar10 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      tempVar11 = FUN_08000cec(tempVar12,tempVar12);\n      tempVar11 = FUN_08000ad8(tempVar10,tempVar11);\n      tempVar10 = DAT_20000044;\n      result1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      result1 = FUN_08000ad8(tempVar11,result1);\n      tempVar11 = DAT_20000048;\n      result2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(result1,result2);\n      tempVar13 = FUN_08000428();\n      tempVar9 = FUN_08000cec(tempVar9,tempVar12);\n      tempVar10 = FUN_08000cec(tempVar10,tempVar11);\n      tempVar9 = FUN_08000adc(tempVar9,tempVar10);\n      FUN_08000adc(tempVar9,tempVar9);\n      tempVar14 = FUN_08000428();\n      tempVar13 = thunk_FUN_08006070((int)tempVar14,(int)((ulonglong)tempVar14 >> 0x20),(int)tempVar13,\n                                  (int)((ulonglong)tempVar13 >> 0x20));\n      tempVar13 = FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0,0x40668000);\n      FUN_08000724((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0x54442d18,0x400921fb);\n      tempVar9 = FUN_08000a30();\n      outputParams[1] = tempVar9;\n      tempVar12 = DAT_20000040;\n      tempVar9 = DAT_2000003c;\n      tempVar10 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      tempVar11 = FUN_08000cec(tempVar12,tempVar12);\n      tempVar11 = FUN_08000adc(tempVar10,tempVar11);\n      tempVar10 = DAT_20000044;\n      result1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      result1 = FUN_08000ad8(tempVar11,result1);\n      tempVar11 = DAT_20000048;\n      result2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(result1,result2);\n      tempVar13 = FUN_08000428();\n      tempVar10 = FUN_08000cec(tempVar12,tempVar10);\n      tempVar9 = FUN_08000cec(tempVar9,tempVar11);\n      tempVar9 = FUN_08000adc(tempVar10,tempVar9);\n      FUN_08000adc(tempVar9,tempVar9);\n      tempVar14 = FUN_08000428();\n      tempVar13 = thunk_FUN_08006070((int)tempVar14,(int)((ulonglong)tempVar14 >> 0x20),(int)tempVar13,\n                                  (int)((ulonglong)tempVar13 >> 0x20));\n      tempVar13 = FUN_080004d0((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0,0x40668000);\n      FUN_08000724((int)tempVar13,(int)((ulonglong)tempVar13 >> 0x20),0x54442d18,0x400921fb);\n      tempVar9 = FUN_08000a30();\n      outputParams[2] = tempVar9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003330": "process_data_08003330",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "input7",
                "param_8": "input8",
                "param_9": "input9",
                "param_10": "outputParams",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "status",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "iVar8": "result8",
                "uVar9": "result9",
                "uVar10": "result10",
                "uVar11": "result11",
                "uVar12": "result12",
                "uVar13": "result13",
                "uVar14": "result14",
                "uVar15": "result15",
                "uVar16": "result16",
                "uVar17": "result17",
                "uVar18": "result18",
                "iVar19": "tempVar1",
                "uVar20": "tempVar2",
                "uVar21": "tempVar3",
                "uVar22": "tempVar4",
                "uVar23": "tempVar5",
                "uVar24": "tempVar6",
                "uVar25": "tempVar7",
                "iVar26": "tempVar8",
                "uVar27": "tempVar9",
                "uVar28": "tempVar10",
                "uVar29": "tempVar11",
                "iVar30": "tempVar12",
                "uVar31": "tempVar13",
                "uVar32": "tempVar14"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000a30",
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08000724",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "entrypoint": "0x08003eb0",
            "current_name": "shift_left_or_interrupt_08003eb0",
            "code": "\nlonglong shift_left_or_interrupt_08003eb0(uint input)\n\n{\n  if (DAT_20000280 == 0) {\n    trigger_interrupt(0x3f);\n    return combine_values(input,1);\n  }\n  return (ulonglong)input << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08003eb0": "shift_left_or_interrupt_08003eb0",
                "param_1": "input",
                "software_interrupt": "trigger_interrupt",
                "CONCAT44": "combine_values"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "entrypoint": "0x08003ec8",
            "current_name": "increment_and_store_08003ec8",
            "code": "\nundefined4 incrementAndStore_08003ec8(int baseAddress,undefined value)\n\n{\n  *(short *)(baseAddress + 0x804) = *(short *)(baseAddress + 0x804) + 1;\n  *(undefined *)(baseAddress + (uint)*(ushort *)(baseAddress + 0x802)) = value;\n  *(ushort *)(baseAddress + 0x802) = *(short *)(baseAddress + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003ec8": "increment_and_store_08003ec8",
                "param_1": "baseAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "entrypoint": "0x08003f3c",
            "current_name": "initialize_flags_08003f3c",
            "code": "\nvoid initializeFlags_08003f3c(int flag1,int flag2,int flag3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flag1 == 0);\n  FUN_08001424(0x40011000,0x4000,flag2 == 0);\n  FUN_08001424(0x40011000,0x2000,flag3 == 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f3c": "initialize_flags_08003f3c",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "called": [
                "FUN_08001424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "entrypoint": "0x08003fc4",
            "current_name": "store_parameter_in_memory_08003fc4",
            "code": "\nvoid storeParameterInMemory_08003fc4(undefined4 inputParameter)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = inputParameter;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fc4": "store_parameter_in_memory_08003fc4",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "entrypoint": "0x08003fd0",
            "current_name": "update_parameter_08003fd0",
            "code": "\nvoid updateParameter_08003fd0(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fd0": "update_parameter_08003fd0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "entrypoint": "0x08003fdc",
            "current_name": "initialize_data_08003fdc",
            "code": "\nvoid initializeData_08003fdc(undefined4 dataValue)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = dataValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fdc": "initialize_data_08003fdc",
                "param_1": "dataValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "entrypoint": "0x08003fe8",
            "current_name": "set_param_in_data_08003fe8",
            "code": "\nvoid setParamInData_08003fe8(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fe8": "set_param_in_data_08003fe8",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "entrypoint": "0x08003ff4",
            "current_name": "initialize_data_08003ff4",
            "code": "\nvoid initializeData_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004028": {
            "entrypoint": "0x08004028",
            "current_name": "perform_operation_08004028",
            "code": "\nvoid performOperation_08004028(void)\n\n{\n  int loopCounter;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  loopCounter = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    loopCounter = loopCounter + -1;\n  } while (loopCounter != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004028": "perform_operation_08004028",
                "iVar1": "loopCounter"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08003ff4",
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800403c": {
            "entrypoint": "0x0800403c",
            "current_name": "execute_i2_c_function_0800403c",
            "code": "\nvoid executeI2CFunction_0800403c(undefined4 dataPtr,undefined4 configPtr,undefined param,int flag)\n\n{\n  int result;\n  undefined buffer [8];\n  \n  buffer[0] = param;\n  result = FUN_08001828(&DAT_20001504,dataPtr,configPtr,1,buffer,1,200);\n  if (result != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (flag != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800403c": "execute_i2_c_function_0800403c",
                "param_1": "dataPtr",
                "param_2": "configPtr",
                "param_3": "param",
                "param_4": "flag",
                "iVar1": "result",
                "local_14": "buffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001828",
                "thunk_FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800407c": {
            "entrypoint": "0x0800407c",
            "current_name": "check_and_process_data_0800407c",
            "code": "\nundefined checkAndProcessData_0800407c(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  int result;\n  undefined status [8];\n  \n  status[0] = 0;\n  result = FUN_08001938(&DAT_20001504,input1,input2,1,status,1,200);\n  if (result != 0) {\n    FUN_08004490(output1,output2);\n  }\n  return status[0];\n}\n\n",
            "renaming": {
                "FUN_0800407c": "check_and_process_data_0800407c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "iVar1": "result",
                "local_14": "status"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_080040e8"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b8": {
            "entrypoint": "0x080040b8",
            "current_name": "check_and_update_data_080040b8",
            "code": "\nvoid checkAndUpdateData_080040b8(undefined4 dataPointer1,undefined4 dataPointer2,undefined4 value1,undefined4 value2,\n                 undefined4 param5,undefined4 param6)\n\n{\n  int result;\n  \n  result = FUN_08001938(&DAT_20001504,dataPointer1,dataPointer2,1,value1,value2,200,value2);\n  if (result != 0) {\n    FUN_08004490(param5,param6);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040b8": "check_and_update_data_080040b8",
                "param_1": "dataPointer1",
                "param_2": "dataPointer2",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "param5",
                "param_6": "param6",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003034"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "copy_data_to_buffer_080040e8",
            "code": "\nvoid copyDataToBuffer_080040e8(undefined4 data,int offset,int bufferSize,int dataSize)\n\n{\n  undefined copiedData;\n  int i;\n  undefined *bufferPtr;\n  int currentIndex;\n  \n  bufferPtr = (undefined *)(bufferSize + -1);\n  currentIndex = dataSize;\n  for (i = 0; i < dataSize; i = i + 1) {\n    copiedData = FUN_0800407c(data,offset + i & 0xffff,\"../Src/i2c.c\",0x4c,currentIndex);\n    bufferPtr = bufferPtr + 1;\n    *bufferPtr = copiedData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "bufferSize",
                "param_4": "dataSize",
                "uVar1": "copiedData",
                "iVar2": "i",
                "puVar3": "bufferPtr",
                "iVar4": "currentIndex"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003298",
                "FUN_08002bf0"
            ],
            "called": [
                "FUN_0800407c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800411c": {
            "entrypoint": "0x0800411c",
            "current_name": "initialize_data_0800411c",
            "code": "\nvoid initializeData_0800411c(void)\n\n{\n  undefined4 *ptr;\n  longlong longValue;\n  uint num1;\n  uint num2;\n  uint num3;\n  undefined4 result1;\n  undefined4 result2;\n  int value;\n  uint calculation1;\n  uint calculation2;\n  uint calculation3;\n  uint calculation4;\n  undefined4 *pointer;\n  undefined4 unaffected4;\n  int calculation5;\n  int calculation6;\n  bool condition;\n  undefined8 result3;\n  \n  value = thunk_FUN_0800115c();\n  if (1 < (uint)(value - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  value = thunk_FUN_0800115c();\n  if (2 < (uint)(value - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  value = thunk_FUN_0800115c();\n  if (3 < (uint)(value - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    calculation6 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    calculation1 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)calculation6) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)calculation6) >> 0x20) << 9;\n    calculation2 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)calculation6 >> 7);\n    calculation3 = calculation2 + (uint)DAT_20000260 * 0x10000;\n    num2 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)calculation6) >> 8);\n    value = calculation1 + 2000;\n    num3 = num2 + (uint)DAT_2000025e * 0x8000;\n    condition = (int)calculation1 < 0;\n    if (1999 < value) {\n      calculation1 = 0;\n    }\n    num1 = calculation1;\n    if (condition != SBORROW4(value,2000)) {\n      calculation5 = calculation1 * calculation1 * 5;\n      calculation1 = calculation5 >> 2;\n      num1 = calculation5 >> 1;\n    }\n    calculation4 = calculation3 - num1;\n    longValue = (ulonglong)(num3 - calculation1) * (ulonglong)DAT_2000026c;\n    calculation5 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)calculation6 >> 0x28) +\n               (uint)CARRY4(num2,(uint)DAT_2000025e * 0x8000)) - ((int)calculation1 >> 0x1f)) -\n             (uint)(num3 < calculation1)) + (int)((ulonglong)longValue >> 0x20);\n    num2 = (uint)longValue >> 0x15 | calculation5 * 0x800;\n    result1 = FUN_08000c44(num2 - calculation4 >> 0xf |\n                         (((calculation5 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)calculation6 >> 0x27) +\n                            (uint)CARRY4(calculation2,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)num1 >> 0x1f)) - (uint)(calculation3 < num1))) - (uint)(num2 < calculation4)\n                         ) * 0x20000);\n    result1 = FUN_08000e54(result1,0x42c80000);\n    DAT_20000354 = result1;\n    result2 = FUN_08000c44(value);\n    DAT_20000358 = FUN_08000e54(result2,0x42c80000);\n    FUN_08000e54(result1,0x447d5000);\n    result3 = FUN_08000428();\n    result3 = FUN_08005900((int)result3,(int)((ulonglong)result3 >> 0x20),0x60000000,0x3fc85b95);\n    result3 = FUN_08000168(0,0x3ff00000,(int)result3,(int)((ulonglong)result3 >> 0x20));\n    FUN_080004d0((int)result3,(int)((ulonglong)result3 >> 0x20),0,0x40e5a540);\n    result1 = FUN_08000a30();\n    result2 = 0;\n    pointer = &DAT_20000300;\n    DAT_20000350 = result1;\n    do {\n      ptr = pointer + 1;\n      *pointer = *ptr;\n      result2 = FUN_08000adc(result2);\n      pointer = ptr;\n    } while (ptr != &DAT_2000034c);\n    DAT_2000034c = result1;\n    result1 = FUN_08000adc(result2,result1);\n    DAT_200002fc = FUN_08000e54(result1,0x41a00000);\n    value = FUN_08001078();\n    DAT_200014ab = value * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  value = thunk_FUN_0800115c();\n  if (((10 < (uint)(value - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,unaffected4);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  value = thunk_FUN_0800115c();\n  if (((10 < (uint)(value - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800411c": "initialize_data_0800411c",
                "puVar1": "ptr",
                "lVar2": "longValue",
                "uVar3": "num1",
                "uVar4": "num2",
                "uVar5": "num3",
                "uVar6": "result1",
                "uVar7": "result2",
                "iVar8": "value",
                "uVar9": "calculation1",
                "uVar10": "calculation2",
                "uVar11": "calculation3",
                "uVar12": "calculation4",
                "puVar13": "pointer",
                "unaff_r4": "unaffected4",
                "iVar14": "calculation5",
                "iVar15": "calculation6",
                "bVar16": "condition",
                "uVar17": "result3"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "thunk_FUN_0800115c",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08003034",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_08004410",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000168",
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004384",
                "FUN_0800403c",
                "FUN_08004a84",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08001078",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004194": {
            "entrypoint": "0x08004194",
            "current_name": "initialize_settings_08004194",
            "code": "\nvoid initialize_settings_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004194": "initialize_settings_08004194"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041ae": {
            "entrypoint": "0x080041ae",
            "current_name": "execute_task_080041ae",
            "code": "\nvoid executeTask_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080041ae": "execute_task_080041ae"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_0800114c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041c4": {
            "entrypoint": "0x080041c4",
            "current_name": "initialize_components_080041c4",
            "code": "\nvoid initializeComponents_080041c4(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 returnValue;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,returnValue,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041c4": "initialize_components_080041c4",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "returnValue"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800426c": {
            "entrypoint": "0x0800426c",
            "current_name": "calculate_statistics_0800426c",
            "code": "\n\n\nvoid calculateStatistics_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  uint value1;\n  uint value2;\n  uint value3;\n  uint value4;\n  \n  result1 = FUN_08000ad8();\n  result2 = FUN_08000adc(input1,input2);\n  result3 = FUN_08000ad8(result1,input3);\n  result3 = FUN_08000adc(result3,input4);\n  FUN_08000ad8(result3,0x447a0000);\n  value1 = FUN_08001078();\n  result3 = FUN_08000ad8(result2,input3);\n  result3 = FUN_08000ad8(result3,input4);\n  FUN_08000ad8(result3,0x447a0000);\n  value2 = FUN_08001078();\n  result1 = FUN_08000adc(result1,input3);\n  result1 = FUN_08000ad8(result1,input4);\n  FUN_08000ad8(result1,0x447a0000);\n  value3 = FUN_08001078();\n  result1 = FUN_08000adc(input3,result2);\n  result1 = FUN_08000adc(result1,input4);\n  FUN_08000ad8(result1,0x447a0000);\n  value4 = FUN_08001078();\n  if (999 < (int)value4) {\n    value4 = 1000;\n  }\n  if (999 < (int)value3) {\n    value3 = 1000;\n  }\n  if (999 < (int)value2) {\n    value2 = 1000;\n  }\n  if (999 < (int)value1) {\n    value1 = 1000;\n  }\n  DAT_200002a0 = value2 & ~((int)value2 >> 0x1f);\n  DAT_200002a4 = value1 & ~((int)value1 >> 0x1f);\n  DAT_2000029c = value3 & ~((int)value3 >> 0x1f);\n  DAT_20000298 = value4 & ~((int)value4 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800426c": "calculate_statistics_0800426c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "value1",
                "uVar5": "value2",
                "uVar6": "value3",
                "uVar7": "value4"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004300": {
            "entrypoint": "0x08004300",
            "current_name": "compute_checksum_08004300",
            "code": "\nvoid computeChecksum_08004300(uint inputParam,byte *byteArray,uint arraySize)\n\n{\n  uint checksum;\n  byte *currentByte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(arraySize & 0xff);\n  checksum = arraySize & 0xff ^ inputParam;\n  FUN_08004c18(inputParam);\n  for (currentByte = byteArray; (int)currentByte - (int)byteArray < (int)arraySize; currentByte = currentByte + 1) {\n    FUN_08004c18(*currentByte);\n    checksum = checksum ^ *currentByte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004300": "compute_checksum_08004300",
                "param_1": "inputParam",
                "param_2": "byteArray",
                "param_3": "arraySize",
                "uVar1": "checksum",
                "pbVar2": "currentByte"
            },
            "calling": [
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_080043f0",
                "FUN_08004434"
            ],
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004348": {
            "entrypoint": "0x08004348",
            "current_name": "initialize_data_08004348",
            "code": "\n\n\nvoid initializeData_08004348(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 dataAddress;\n  uint maskedParam2;\n  undefined4 param3Copy;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  dataAddress = 0x40003e9;\n  maskedParam2 = param2 & 0xff000000;\n  param3Copy = param3;\n  FUN_08004300(100,&dataAddress,7);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004348": "initialize_data_08004348",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "local_10": "dataAddress",
                "local_c": "maskedParam2",
                "uStack_8": "param3Copy"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004384": {
            "entrypoint": "0x08004384",
            "current_name": "initialize_data_08004384",
            "code": "\n\n\nvoid initializeData_08004384(undefined4 input1,undefined4 input2,undefined4 input3,uint input4)\n\n{\n  undefined4 data1;\n  undefined4 data2;\n  uint maskedInput4;\n  \n  _DAT_200013bd = 0x2a0007;\n  data1 = _DAT_200013b9;\n  data2 = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  maskedInput4 = input4 & 0xff000000;\n  FUN_08004300(0x65,&data1,0xb,0,input1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "local_14": "data1",
                "uStack_10": "data2",
                "local_c": "maskedInput4"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043bc": {
            "entrypoint": "0x080043bc",
            "current_name": "copy_and_call_function_080043bc",
            "code": "\nvoid copyAndCallFunction_080043bc(void)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 *destinationPointer;\n  undefined4 *sourcePointer;\n  undefined4 temporaryValues [2];\n  undefined2 temporaryArray [6];\n  \n  sourcePointer = (undefined4 *)&DAT_2000142a;\n  destinationPointer = temporaryValues;\n  do {\n    value1 = *sourcePointer;\n    value2 = sourcePointer[1];\n    sourcePointer = sourcePointer + 2;\n    *destinationPointer = value1;\n    destinationPointer[1] = value2;\n    destinationPointer = destinationPointer + 2;\n  } while (sourcePointer != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destinationPointer = DAT_2000143a;\n  FUN_08004300(0x66,temporaryValues,0x12);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043bc": "copy_and_call_function_080043bc",
                "puVar4": "sourcePointer",
                "puVar3": "destinationPointer",
                "uVar1": "value1",
                "uVar2": "value2",
                "local_24": "temporaryValues",
                "local_1c": "temporaryArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043f0": {
            "entrypoint": "0x080043f0",
            "current_name": "perform_action_080043f0",
            "code": "\n\n\nvoid performAction_080043f0(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data_array [2];\n  \n  data1 = _DAT_200013dd;\n  data2 = _DAT_200013e1;\n  data_array[0] = input3;\n  FUN_08004300(0x68,&data1,8,data_array);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043f0": "perform_action_080043f0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "local_10": "data1",
                "uStack_c": "data2",
                "auStack_8": "data_array"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004410": {
            "entrypoint": "0x08004410",
            "current_name": "initialize_data_08004410",
            "code": "\nvoid initialize_data_08004410(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 data_pointer;\n  undefined4 concatenated_value;\n  undefined4 param_3_copy;\n  \n  data_pointer = DAT_20001395;\n  concatenated_value = CONCAT22((short)((uint)param_2 >> 0x10),DAT_20001399);\n  param_3_copy = param_3;\n  FUN_08004300(0x6c,&data_pointer,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004410": "initialize_data_08004410",
                "local_10": "data_pointer",
                "local_c": "concatenated_value",
                "uStack_8": "param_3_copy"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004434": {
            "entrypoint": "0x08004434",
            "current_name": "initialize_data_08004434",
            "code": "\nvoid initializeData_08004434(undefined4 dataPointer1,undefined4 dataPointer2,undefined4 dataPointer3)\n\n{\n  undefined4 dataValue1;\n  undefined4 dataValue2;\n  undefined4 dataValue3;\n  \n  dataValue1 = DAT_200014ab;\n  dataValue2 = CONCAT22((short)((uint)dataPointer2 >> 0x10),DAT_200014af);\n  dataValue3 = dataPointer3;\n  FUN_08004300(0x6d,&dataValue1,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004434": "initialize_data_08004434",
                "param_1": "dataPointer1",
                "param_2": "dataPointer2",
                "param_3": "dataPointer3",
                "local_10": "dataValue1",
                "local_c": "dataValue2",
                "uStack_8": "dataValue3"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004458": {
            "entrypoint": "0x08004458",
            "current_name": "copy_and_process_data_08004458",
            "code": "\nvoid copyAndProcessData_08004458(void)\n\n{\n  undefined4 *destination;\n  undefined4 *source;\n  undefined4 temp;\n  undefined4 *destPtr;\n  undefined4 *srcPtr;\n  undefined4 buffer [3];\n  undefined2 tempArray [10];\n  \n  destination = buffer;\n  source = &DAT_2000139b;\n  do {\n    srcPtr = source;\n    destPtr = destination;\n    temp = srcPtr[1];\n    *destPtr = *srcPtr;\n    destPtr[1] = temp;\n    destination = destPtr + 2;\n    source = srcPtr + 2;\n  } while (srcPtr + 2 != (undefined4 *)0x200013b3);\n  destPtr[2] = uRam200013b3;\n  *(undefined2 *)(destPtr + 3) = *(undefined2 *)(srcPtr + 3);\n  FUN_08004300(0x70,buffer,0x1e);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004458": "copy_and_process_data_08004458",
                "puVar1": "destination",
                "puVar2": "source",
                "uVar3": "temp",
                "puVar4": "destPtr",
                "puVar5": "srcPtr",
                "local_30": "buffer",
                "local_24": "tempArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004490": {
            "entrypoint": "0x08004490",
            "current_name": "handle_error_loop_08004490",
            "code": "\nvoid handleErrorLoop_08004490(undefined4 filename,undefined4 lineNumber)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(filename);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004490": "handle_error_loop_08004490",
                "param_1": "filename",
                "param_2": "lineNumber"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_080040b8",
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004514": {
            "entrypoint": "0x08004514",
            "current_name": "initialize_peripherals_08004514",
            "code": "\nvoid initializePeripherals_08004514(void)\n\n{\n  int result;\n  uint timeInSeconds;\n  undefined4 fileOffset;\n  int loopCounter;\n  undefined4 value1;\n  int value2;\n  int value3;\n  undefined4 value4;\n  int value5;\n  undefined4 values [4];\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  constant1 = 1;\n  constant2 = 0x10;\n  loopCounter = 2;\n  constant4 = 0;\n  values[0] = 2;\n  constant3 = 2;\n  constant5 = 0x380000;\n  result = FUN_08001b58(values);\n  if (result == 0) goto LAB_08004540;\n  fileOffset = 0x3c;\n  while( true ) {\n    result = FUN_08004490(\"../Src/peripherals.c\",fileOffset);\nLAB_08004540:\n    value1 = 0xf;\n    value4 = 0x400;\n    value2 = loopCounter;\n    value3 = result;\n    value5 = result;\n    loopCounter = FUN_0800209c(&value1,loopCounter);\n    if (loopCounter == 0) break;\n    fileOffset = 0x49;\n  }\n  timeInSeconds = FUN_08002214();\n  FUN_08001214(timeInSeconds / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004514": "initialize_peripherals_08004514",
                "iVar1": "result",
                "uVar2": "timeInSeconds",
                "uVar3": "fileOffset",
                "iVar4": "loopCounter",
                "local_44": "value1",
                "local_40": "value2",
                "local_3c": "value3",
                "local_38": "value4",
                "local_34": "value5",
                "local_30": "values",
                "local_20": "constant1",
                "local_1c": "constant2",
                "local_14": "constant3",
                "local_10": "constant4",
                "local_c": "constant5"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_0800209c",
                "FUN_08001194",
                "FUN_08001214",
                "FUN_08001240"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800458c": {
            "entrypoint": "0x0800458c",
            "current_name": "initialize_peripheral_0800458c",
            "code": "\n\n\nvoid initializePeripheral_0800458c(void)\n\n{\n  int result;\n  undefined4 value;\n  int value1;\n  int variable1;\n  int variable2;\n  int variable3;\n  int variable4;\n  int variable5;\n  int variable6;\n  int variable7;\n  int variable8;\n  int variable9;\n  int variable10;\n  int variable11;\n  int variable12;\n  int variable13;\n  undefined4 variable14;\n  int variable15;\n  \n  FUN_08001128();\n  FUN_08004514();\n  value1 = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  variable9 = 0xe000;\n  variable10 = 1;\n  variable12 = 2;\n  FUN_08001264(0x40011000,&variable9);\n  variable9 = 0x20;\n  variable10 = 1;\n  variable12 = 2;\n  FUN_08001264(0x40010800,&variable9);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  result = FUN_08001754();\n  if (result == 0) goto LAB_0800463a;\n  value = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  result = FUN_08004490(\"../Src/peripherals.c\",value);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = result;\n                                  DAT_20001588 = result;\n                                  DAT_2000158c = result;\n                                  DAT_20001594 = result;\n                                  DAT_20001598 = result;\n                                  result = FUN_08002724(&DAT_2000157c);\n                                  if (result == 0) break;\n                                  value = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = value1;\n                                DAT_200015c4 = result;\n                                DAT_200015cc = result;\n                                DAT_200015d0 = result;\n                                result = FUN_080023d0(&DAT_200015bc);\n                                if (result == 0) break;\n                                value = 0x88;\n                              }\n                              variable1 = result;\n                              variable2 = result;\n                              result = FUN_080025a4(&DAT_200015bc,&variable1);\n                              if (result == 0) break;\n                              value = 0x8f;\n                            }\n                            variable3 = 0x60;\n                            variable4 = result;\n                            variable5 = result;\n                            variable6 = result;\n                            variable7 = result;\n                            variable8 = result;\n                            result = FUN_0800245c(&DAT_200015bc,&variable3,0xc);\n                            if (result == 0) break;\n                            value = 0x9a;\n                          }\n                          variable14 = 0x2000;\n                          variable9 = result;\n                          variable10 = result;\n                          variable11 = result;\n                          variable12 = result;\n                          variable13 = result;\n                          variable15 = result;\n                          result = FUN_08002564(&DAT_200015bc,&variable9);\n                          if (result == 0) break;\n                          value = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = value1;\n                        DAT_20001600 = result;\n                        DAT_20001608 = result;\n                        result = FUN_080023d0(&DAT_200015f8);\n                        if (result == 0) break;\n                        value = 0xc3;\n                      }\n                      variable3 = result;\n                      variable4 = result;\n                      result = FUN_080025a4(&DAT_200015f8,&variable3);\n                      if (result == 0) break;\n                      value = 0xca;\n                    }\n                    variable9 = 0x60;\n                    variable10 = result;\n                    variable11 = result;\n                    variable13 = result;\n                    result = FUN_0800245c(&DAT_200015f8,&variable9,4);\n                    if (result == 0) break;\n                    value = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = value1;\n                  DAT_20001548 = result;\n                  DAT_20001550 = result;\n                  result = FUN_080023d0();\n                  if (result == 0) break;\n                  value = 0xf0;\n                }\n                variable3 = 0;\n                variable4 = 0;\n                result = FUN_080025a4(&DAT_20001540,&variable3);\n                if (result == 0) break;\n                value = 0xf7;\n              }\n              variable9 = 0x60;\n              variable10 = result;\n              variable11 = result;\n              variable13 = result;\n              result = FUN_0800245c(&DAT_20001540,&variable9,8);\n              if (result == 0) break;\n              value = 0x100;\n            }\n            value1 = FUN_0800245c(&DAT_20001540,&variable9,0xc);\n            if (value1 == 0) break;\n            value = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = value1;\n          DAT_200014d8 = value1;\n          result = FUN_080023d0(&DAT_200014c8);\n          if (result == 0) break;\n          value = 0x122;\n        }\n        variable3 = result;\n        variable4 = result;\n        result = FUN_080025a4(&DAT_200014c8,&variable3);\n        if (result == 0) break;\n        value = 0x129;\n      }\n      variable9 = 0x60;\n      variable10 = result;\n      variable11 = result;\n      variable13 = result;\n      result = FUN_0800245c(&DAT_200014c8,&variable9,8);\n      if (result == 0) break;\n      value = 0x132;\n    }\n    result = FUN_0800245c(&DAT_200014c8,&variable9,0xc);\n    if (result == 0) break;\n    value = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800458c": "initialize_peripheral_0800458c",
                "iVar1": "result",
                "uVar2": "value",
                "iVar3": "value1",
                "local_58": "variable1",
                "local_54": "variable2",
                "local_50": "variable3",
                "local_4c": "variable4",
                "local_48": "variable5",
                "local_40": "variable6",
                "local_3c": "variable7",
                "local_38": "variable8",
                "local_34": "variable9",
                "local_30": "variable10",
                "local_2c": "variable11",
                "local_28": "variable12",
                "local_24": "variable13",
                "local_20": "variable14",
                "local_1c": "variable15"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002564",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08004514",
                "FUN_080023d0",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_080025a4",
                "FUN_08002724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800483c": {
            "entrypoint": "0x0800483c",
            "current_name": "reverse_function_0800483c",
            "code": "\nvoid reverse_function_0800483c(int *arguments)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  int index_1;\n  int index_2;\n  int index_3;\n  \n  index_2 = arguments[0xc];\n  result_1 = FUN_08000adc(arguments[7],arguments[9]);\n  index_2 = FUN_08000ad8(result_1,index_2);\n  arguments[10] = index_2;\n  if (*arguments == 3) {\n    index_2 = FUN_08001064(arguments[10],0);\n    if (index_2 == 0) {\n      index_2 = FUN_08001028(arguments[10],0xc3340000);\n    }\n    else {\n      index_2 = FUN_08001064(arguments[10],0x43340000);\n    }\n    if (index_2 != 0) {\n      index_3 = arguments[10];\n      result_1 = FUN_08000cec(arguments[10],0x43b40000);\n      index_2 = FUN_08001064(arguments[10],0);\n      index_1 = arguments[10];\n      if (index_2 == 0) {\n        index_1 = index_1 + -0x80000000;\n      }\n      result_1 = FUN_08000e54(result_1,index_1);\n      index_2 = FUN_08000ad8(index_3,result_1);\n      arguments[10] = index_2;\n    }\n  }\n  index_3 = arguments[2];\n  index_1 = arguments[3];\n  index_2 = FUN_08000cec(arguments[1],arguments[10]);\n  arguments[0xe] = index_2;\n  index_2 = FUN_08000adc(arguments[10],arguments[0xf]);\n  arguments[0xf] = index_2;\n  index_2 = FUN_08001028(arguments[0xf],0xc3fa0000);\n  if (index_2 == 0) {\n    index_2 = FUN_08001064(arguments[0xf],0x43fa0000);\n    if (index_2 == 0) {\n      index_2 = arguments[0xf];\n    }\n    else {\n      index_2 = 0x43fa0000;\n    }\n  }\n  else {\n    index_2 = -0x3c060000;\n  }\n  arguments[0xf] = index_2;\n  index_2 = FUN_08000ad8(arguments[0xc],arguments[0xd]);\n  arguments[0x10] = index_2;\n  index_2 = arguments[0xe];\n  result_1 = FUN_08000cec(index_3,arguments[0xf]);\n  result_1 = FUN_08000adc(result_1,index_2);\n  result_2 = FUN_08000cec(index_1,arguments[0x10]);\n  index_2 = FUN_08000ad8(result_1,result_2);\n  arguments[0x12] = index_2;\n  result_1 = FUN_08000c44(arguments[0x13]);\n  index_2 = FUN_08001028(arguments[0x12],0xc3fa0000);\n  if (index_2 == 0) {\n    index_2 = FUN_08001064(arguments[0x12],0x43fa0000);\n    if (index_2 == 0) {\n      index_2 = arguments[0x12];\n    }\n    else {\n      index_2 = 0x43fa0000;\n    }\n  }\n  else {\n    index_2 = -0x3c060000;\n  }\n  index_2 = FUN_08000cec(index_2,result_1);\n  arguments[0x12] = index_2;\n  arguments[0xd] = arguments[0xc];\n  arguments[0xb] = arguments[10];\n  arguments[0x15] = arguments[0x14];\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800483c": "reverse_function_0800483c",
                "param_1": "arguments",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "iVar3": "index_1",
                "iVar4": "index_2",
                "iVar5": "index_3"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a30": {
            "entrypoint": "0x08004a30",
            "current_name": "initialize_data_08004a30",
            "code": "\nvoid initializeData_08004a30(void)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      result = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(result,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      result = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(result,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "initialize_system_08004a84",
            "code": "\nvoid initializeSystem_08004a84(void)\n\n{\n  int result;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  result = FUN_08001064(DAT_200000d8,0);\n  if (result == 0) {\n    result = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    result = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (result == 0) {\n    result = FUN_08001064(DAT_20000134,0);\n    if (result == 0) {\n      result = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      result = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (result == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "initialize_system_08004a84",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000cec",
                "FUN_08002ed4",
                "FUN_08004a30",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c18": {
            "entrypoint": "0x08004c18",
            "current_name": "process_data_08004c18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 processData_08004c18(undefined input)\n\n{\n  int *ptrLoop;\n  int prevValue;\n  int currValue;\n  ushort *ptrData;\n  \n  DAT_20001636._0_1_ = input;\n  ptrData = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      prevValue = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        currValue = FUN_0800115c();\n      } while ((uint)(currValue - prevValue) < 6);\nLAB_0800281c:\n      ptrLoop = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      ptrLoop[3] = ptrLoop[3] & 0xffffffdf;\n      ptrLoop[3] = ptrLoop[3] & 0xfffffeff;\n      ptrLoop[5] = ptrLoop[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      prevValue = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        currValue = FUN_0800115c();\n        if (5 < (uint)(currValue - prevValue)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *ptrData & 0x1ff;\n      if (DAT_2000158c == 0) {\n        ptrData = ptrData + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      prevValue = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        currValue = FUN_0800115c();\n        if (5 < (uint)(currValue - prevValue)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)ptrData;\n    }\n    ptrData = (ushort *)((int)ptrData + 1);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004c18": "process_data_08004c18",
                "param_1": "input",
                "piVar1": "ptrLoop",
                "iVar2": "prevValue",
                "iVar3": "currValue",
                "puVar4": "ptrData"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08004300",
                "FUN_08004c8c"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "process_binary_08004c30",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * processBinary_08004c30(int *input)\n\n{\n  int result;\n  \n  if (*input != 0x40013800) {\n    return input;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "process_binary_08004c30",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800290c"
            ],
            "called": [
                "FUN_08003ec8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c64": {
            "entrypoint": "0x08004c64",
            "current_name": "initialize_data_08004c64",
            "code": "\nvoid initializeData_08004c64(void)\n\n{\n  int counter;\n  \n  counter = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x800);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "counter"
            },
            "calling": [
                "FUN_08004c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c70": {
            "entrypoint": "0x08004c70",
            "current_name": "initialize_data_08004c70",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initializeData_08004c70(void)\n\n{\n  int tempVar;\n  \n  FUN_08004c64();\n  tempVar = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(tempVar + 0x14) = *(uint *)(tempVar + 0x14) | 1;\n    *(uint *)(tempVar + 0xc) = *(uint *)(tempVar + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08004c70": "initialize_data_08004c70",
                "iVar1": "tempVar"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08004c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "entrypoint": "0x08004c8c",
            "current_name": "iterate_and_process_08004c8c",
            "code": "\nvoid iterateAndProcess_08004c8c(undefined *data)\n\n{\n  uint result;\n  undefined *currentPtr;\n  \n  currentPtr = data;\n  while( true ) {\n    result = FUN_08000150(data);\n    if (result <= (uint)((int)currentPtr - (int)data)) break;\n    FUN_08004c18(*currentPtr);\n    currentPtr = currentPtr + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c8c": "iterate_and_process_08004c8c",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "currentPtr"
            },
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cac": {
            "entrypoint": "0x08004cac",
            "current_name": "initialize_data_08004cac",
            "code": "\nvoid initializeData_08004cac(undefined4 inputParam)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,inputParam);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004cac": "initialize_data_08004cac",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "initialize_registers_08004ccc",
            "code": "\n\n\nvoid initializeRegisters_08004ccc(undefined4 register1,undefined4 register2,undefined4 register3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,register2,_DAT_40021018,1,register1,1,register3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "initialize_registers_08004ccc",
                "param_1": "register1",
                "param_2": "register2",
                "param_3": "register3"
            },
            "calling": [
                "FUN_08001128"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d48": {
            "entrypoint": "0x08004d48",
            "current_name": "check_and_modify_memory_08004d48",
            "code": "\n\n\nvoid checkAndModifyMemory_08004d48(int *memoryAddress,undefined4 value)\n\n{\n  undefined4 flag1;\n  undefined4 flag2;\n  \n  if (*memoryAddress == 0x40005400) {\n    flag1 = 0xc0;\n    flag2 = 0x12;\n    FUN_08001264(0x40010c00,&flag1,0x40005400,3,memoryAddress,value);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d48": "check_and_modify_memory_08004d48",
                "param_1": "memoryAddress",
                "param_2": "value",
                "local_18": "flag1",
                "local_14": "flag2"
            },
            "calling": [
                "FUN_08001754"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "entrypoint": "0x08004d8c",
            "current_name": "update_flags_based_on_value_08004d8c",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlagsBasedOnValue_08004d8c(int *value)\n\n{\n  int inputValue;\n  \n  inputValue = *value;\n  if (inputValue == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (inputValue == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (inputValue == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (inputValue == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d8c": "update_flags_based_on_value_08004d8c",
                "param_1": "value",
                "iVar1": "inputValue"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e14": {
            "entrypoint": "0x08004e14",
            "current_name": "initialize_param_08004e14",
            "code": "\nvoid initializeParam_08004e14(int *paramArray,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 constant1;\n  int param1Value;\n  undefined4 initializedValue;\n  undefined4 constant2;\n  undefined4 param3Copy;\n  undefined4 constant3;\n  \n  param1Value = *paramArray;\n  if (param1Value == 0x40012c00) {\n    initializedValue = 0x800;\n  }\n  else {\n    if (param1Value != 0x40000000) {\n      if (param1Value == 0x40000400) {\n        initializedValue = 3;\n      }\n      else {\n        if (param1Value != 0x40000800) {\n          return;\n        }\n        initializedValue = 0x300;\n      }\n      constant1 = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    initializedValue = 2;\n  }\n  constant1 = 0x40010800;\nLAB_08004e2e:\n  constant3 = 2;\n  constant2 = 2;\n  param3Copy = param3;\n  FUN_08001264(constant1,&initializedValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e14": "initialize_param_08004e14",
                "param_1": "paramArray",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "constant1",
                "iVar2": "param1Value",
                "local_18": "initializedValue",
                "local_14": "constant2",
                "uStack_10": "param3Copy",
                "local_c": "constant3"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "entrypoint": "0x08004e7c",
            "current_name": "initialize_flags_08004e7c",
            "code": "\n\n\nvoid initializeFlags_08004e7c(int *inputPointer)\n\n{\n  undefined4 flagValue1;\n  undefined4 flagValue2;\n  undefined4 flagValue3;\n  undefined4 flagValue4;\n  \n  if (*inputPointer == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    flagValue1 = 0x200;\n    flagValue2 = 2;\n    flagValue4 = 3;\n    FUN_08001264(0x40010800,&flagValue1);\n    flagValue1 = 0x400;\n    flagValue2 = 0;\n    flagValue3 = 0;\n    FUN_08001264(0x40010800,&flagValue1);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e7c": "initialize_flags_08004e7c",
                "param_1": "inputPointer",
                "local_18": "flagValue1",
                "local_14": "flagValue2",
                "local_10": "flagValue3",
                "local_c": "flagValue4"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08001264",
                "FUN_08001194",
                "FUN_080011fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f10": {
            "entrypoint": "0x08004f10",
            "current_name": "configure_peripheral_08004f10",
            "code": "\n\n\nvoid configurePeripheral_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f10": "configure_peripheral_08004f10"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "entrypoint": "0x08004f60",
            "current_name": "get_data_thunk_0800115c",
            "code": "\nundefined4 get_data_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800115c": "get_data_thunk_0800115c"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "entrypoint": "0x08004f64",
            "current_name": "thunk_FUNC_08001168",
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "calling": [
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08001168"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08004f68",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004f10",
                "FUN_08004fb4",
                "FUN_080041ae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "entrypoint": "0x08004fb4",
            "current_name": "execute_callbacks_08004fb4",
            "code": "\nvoid executeCallbacks_08004fb4(void)\n\n{\n  int callbackIndex;\n  \n  for (callbackIndex = 0; callbackIndex != 0; callbackIndex = callbackIndex + 1) {\n    (*(code *)(&DAT_08007440)[callbackIndex])();\n  }\n  FUNC_080072d4();\n  for (callbackIndex = 0; callbackIndex != 1; callbackIndex = callbackIndex + 1) {\n    (*(code *)(&DAT_08007440)[callbackIndex])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fb4": "execute_callbacks_08004fb4",
                "iVar1": "callbackIndex"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "entrypoint": "0x08004ffc",
            "current_name": "initialize_function_08004ffc",
            "code": "\nvoid initializeFunction_08004ffc(undefined *dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined *localArray [2];\n  undefined4 limit1;\n  undefined2 constant1;\n  undefined2 constant2;\n  undefined *tempPointer;\n  undefined4 limit2;\n  undefined4 stackValue1;\n  undefined4 stackValue2;\n  undefined4 stackValue3;\n  \n  constant1 = 0x208;\n  limit1 = 0x7fffffff;\n  limit2 = 0x7fffffff;\n  constant2 = 0xffff;\n  localArray[0] = dataPointer;\n  tempPointer = dataPointer;\n  stackValue1 = value1;\n  stackValue2 = value2;\n  stackValue3 = value3;\n  FUN_080050fc(DAT_200001c0,localArray,value1);\n  *localArray[0] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ffc": "initialize_function_08004ffc",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "local_78": "localArray",
                "local_70": "limit1",
                "local_6c": "constant1",
                "local_6a": "constant2",
                "local_68": "tempPointer",
                "local_64": "limit2",
                "uStack_c": "stackValue1",
                "uStack_8": "stackValue2",
                "uStack_4": "stackValue3"
            },
            "calling": [
                "FUN_08004cac"
            ],
            "called": [
                "FUN_080050fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005044": {
            "entrypoint": "0x08005044",
            "current_name": "process_data_08005044",
            "code": "\nundefined4 processData_08005044(undefined4 *result,int *data,undefined4 value,uint length)\n\n{\n  int tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  int tempVar4;\n  \n  tempVar3 = data[2];\n  if ((tempVar3 <= length) && ((*(ushort *)(data + 3) & 0x480) != 0)) {\n    tempVar4 = *data - data[4];\n    tempVar3 = (uint)(data[5] * 3) / 2;\n    tempVar2 = length + 1 + tempVar4;\n    if (tempVar3 < tempVar2) {\n      tempVar3 = tempVar2;\n    }\n    if ((int)((uint)*(ushort *)(data + 3) << 0x15) < 0) {\n      tempVar1 = FUN_08005714(result,tempVar3);\n      if (tempVar1 == 0) {\nLAB_0800508a:\n        *result = 0xc;\n        *(ushort *)(data + 3) = *(ushort *)(data + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(tempVar1,data[4],tempVar4);\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      tempVar1 = FUN_080057d0(result,data[4],tempVar3);\n      if (tempVar1 == 0) {\n        FUN_0800567c(result,data[4]);\n        goto LAB_0800508a;\n      }\n    }\n    data[4] = tempVar1;\n    *data = tempVar1 + tempVar4;\n    data[5] = tempVar3;\n    data[2] = tempVar3 - tempVar4;\n    tempVar3 = length;\n  }\n  if (length <= tempVar3) {\n    tempVar3 = length;\n  }\n  FUN_08005646(*data,value,tempVar3);\n  data[2] = data[2] - tempVar3;\n  *data = tempVar3 + *data;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005044": "process_data_08005044",
                "param_1": "result",
                "param_2": "data",
                "param_3": "value",
                "param_4": "length",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "iVar4": "tempVar4"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050fc": {
            "entrypoint": "0x080050fc",
            "current_name": "process_data_080050fc",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint processData_080050fc(undefined4 *outputArray,int *inputArray,byte *formatString,int *dynamicArray)\n\n{\n  int index;\n  int result;\n  int *currentParam;\n  bool isNumber;\n  byte *currentChar;\n  byte *nextChar;\n  int returnValue;\n  int *paramPointer;\n  uint flag;\n  int precision;\n  undefined4 length;\n  int width;\n  int totalSize;\n  byte conversionSpecifier;\n  undefined firstFlag;\n  undefined secondFlag;\n  undefined flagSet;\n  undefined4 unused;\n  \n  paramPointer = dynamicArray;\n  if (((int)((uint)*(ushort *)(inputArray + 3) << 0x18) < 0) && (inputArray[4] == 0)) {\n    index = FUN_08005714(outputArray,0x40);\n    *inputArray = index;\n    inputArray[4] = index;\n    if (index == 0) {\n      *outputArray = 0xc;\n      return -1;\n    }\n    inputArray[5] = 0x40;\n  }\n  totalSize = 0;\n  firstFlag = 0x20;\n  secondFlag = 0x30;\n  currentChar = formatString;\nLAB_08005146:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_08005146;\nLAB_08005150:\n  index = (int)nextChar - (int)formatString;\n  if (index != 0) {\n    result = FUN_08005044(outputArray,inputArray,formatString,index);\n    if (result == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(inputArray + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalSize;\n    }\n    totalSize = totalSize + index;\n  }\n  if (*nextChar == 0) goto LAB_080052ac;\n  flag = 0;\n  width = 0;\n  precision = -1;\n  length = 0;\n  flagSet = 0;\n  unused = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    index = FUN_08005614(&DAT_08007379,*currentChar);\n    formatString = currentChar + 1;\n    if (index == 0) break;\n    flag = 1 << (index + 0xf7ff8c87U & 0xff) | flag;\n    currentChar = formatString;\n  }\n  if ((int)(flag << 0x1b) < 0) {\n    flagSet = 0x20;\n  }\n  if ((int)(flag << 0x1c) < 0) {\n    flagSet = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    currentParam = paramPointer + 1;\n    index = *paramPointer;\n    paramPointer = currentParam;\n    if (index < 0) {\n      width = -index;\n      flag = flag | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    isNumber = false;\n    index = width;\n    formatString = currentChar;\n    while( true ) {\n      if (9 < *formatString - 0x30) break;\n      index = index * 10 + (*formatString - 0x30);\n      isNumber = true;\n      formatString = formatString + 1;\n    }\n    if (!isNumber) goto LAB_080051fc;\n  }\n  width = index;\nLAB_080051fc:\n  if (*formatString == 0x2e) {\n    if (formatString[1] == 0x2a) {\n      formatString = formatString + 2;\n      currentParam = paramPointer + 1;\n      precision = *paramPointer;\n      paramPointer = currentParam;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      isNumber = false;\n      index = 0;\n      precision = 0;\n      while( true ) {\n        formatString = formatString + 1;\n        if (9 < *formatString - 0x30) break;\n        index = index * 10 + (*formatString - 0x30);\n        isNumber = true;\n      }\n      if (isNumber) {\n        precision = index;\n      }\n    }\n  }\n  index = FUN_08005614(&DAT_0800737f,*formatString,3);\n  if (index != 0) {\n    formatString = formatString + 1;\n    flag = flag | 0x40 << (index + 0xf7ff8c81U & 0xff);\n  }\n  conversionSpecifier = *formatString;\n  formatString = formatString + 1;\n  index = FUN_08005614(\"efgEFG\",conversionSpecifier,6);\n  if (index == 0) {\n    returnValue = FUN_080053d4(outputArray,&flag,inputArray,0x8005045,&paramPointer);\n    if (returnValue == -1) goto LAB_080052ac;\n  }\n  else {\n    paramPointer = (int *)(((int)paramPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalSize = totalSize + returnValue;\n  currentChar = formatString;\n  goto LAB_08005146;\n}\n\n",
            "renaming": {
                "FUN_080050fc": "process_data_080050fc",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "formatString",
                "param_4": "dynamicArray",
                "iVar1": "index",
                "iVar2": "result",
                "piVar3": "currentParam",
                "bVar4": "isNumber",
                "pbVar5": "currentChar",
                "pbVar6": "nextChar",
                "unaff_r9": "returnValue",
                "local_8c": "paramPointer",
                "local_88": "flag",
                "local_84": "precision",
                "local_80": "length",
                "local_7c": "width",
                "local_74": "totalSize",
                "local_70": "conversionSpecifier",
                "local_6f": "firstFlag",
                "local_6e": "secondFlag",
                "local_45": "flagSet",
                "local_30": "unused"
            },
            "calling": [
                "FUN_08004ffc"
            ],
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052e4": {
            "entrypoint": "0x080052e4",
            "current_name": "process_data_080052e4",
            "code": "\nundefined4\nprocessData_080052e4(undefined4 input,uint *data,uint *output,undefined4 param,code *callback)\n\n{\n  int count;\n  int result;\n  uint maxData;\n  uint temp;\n  bool flag;\n  \n  maxData = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxData = data[2];\n  }\n  *output = maxData;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = maxData + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (count = 0; count < (int)(data[3] - *output); count = count + 1) {\n      result = (*callback)(input,param,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxData = (uint)*(byte *)((int)data + 0x43);\n  if (maxData != 0) {\n    maxData = 1;\n  }\n  temp = maxData;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxData + 0x43) = 0x30;\n    temp = maxData + 2;\n    *(undefined *)((int)data + maxData + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  count = (*callback)(input,param,(int)data + 0x43,temp);\n  if (count != -1) {\n    maxData = data[3];\n    flag = (*data & 6) != 4;\n    if (flag) {\n      maxData = 0;\n    }\n    temp = 0;\n    if (!flag) {\n      maxData = maxData - *output;\n    }\n    if (!flag) {\n      maxData = maxData & ~((int)maxData >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxData = maxData + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (maxData == temp) {\n        return 0;\n      }\n      count = (*callback)(input,param,(int)data + 0x1a,1);\n      if (count == -1) break;\n      temp = temp + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080052e4": "process_data_080052e4",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "count",
                "iVar2": "result",
                "uVar3": "maxData",
                "uVar4": "temp",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "convert_hex_string_to_int_080053d4",
            "code": "\nuint convertHexStringToInt_080053d4(undefined4 value,uint *array,undefined4 size,code *callback,uint **count)\n\n{\n  byte firstByte;\n  int index;\n  uint *ptr;\n  int result;\n  char *hexValues;\n  uint mask;\n  uint **pptr;\n  char **pcharPtr;\n  uint convertedValue;\n  uint tempValue;\n  char *outputString;\n  char *currentChar;\n  uint lengthArray [2];\n  \n  firstByte = *(byte *)(array + 6);\n  currentChar = (char *)((int)array + 0x43);\n  if (firstByte != 0x6e) {\n    if (firstByte < 0x6f) {\n      if (firstByte != 99) {\n        if (firstByte < 100) {\n          if (firstByte == 0) goto LAB_0800558e;\n          if (firstByte != 0x58) goto LAB_08005404;\n          *(undefined *)((int)array + 0x45) = 0x58;\n          hexValues = \"0123456789ABCDEF\";\nLAB_0800551e:\n          mask = *array;\n          ptr = *count;\n          *count = ptr + 1;\n          if (((mask & 0x80) == 0) && ((int)(mask << 0x19) < 0)) {\n            convertedValue = (uint)*(ushort *)ptr;\n          }\n          else {\n            convertedValue = *ptr;\n          }\n          if ((int)(mask << 0x1f) < 0) {\n            *array = mask | 0x20;\n          }\n          if (convertedValue == 0) {\n            *array = *array & 0xffffffdf;\n          }\n          mask = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)array + 0x43) = 0;\n        }\n        else {\n          if ((firstByte != 100) && (firstByte != 0x69)) goto LAB_08005404;\n          convertedValue = *array;\n          ptr = *count;\n          if ((convertedValue & 0x80) == 0) {\n            *count = ptr + 1;\n            if ((convertedValue & 0x40) == 0) goto LAB_08005424;\n            convertedValue = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *count = ptr + 1;\nLAB_08005424:\n            convertedValue = *ptr;\n          }\n          if ((int)convertedValue < 0) {\n            convertedValue = -convertedValue;\n            *(undefined *)((int)array + 0x43) = 0x2d;\n          }\n          hexValues = \"0123456789ABCDEF\";\n          mask = 10;\n        }\n        tempValue = array[1];\n        array[2] = tempValue;\n        outputString = currentChar;\n        if ((int)tempValue < 0) {\n          if (convertedValue != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)array + 0x42) = *hexValues;\n          outputString = (char *)((int)array + 0x42);\n        }\n        else {\n          *array = *array & 0xfffffffb;\n          if (convertedValue == 0) {\n            if (tempValue != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              tempValue = convertedValue / mask;\n              outputString = outputString + -1;\n              *outputString = hexValues[convertedValue - mask * tempValue];\n              convertedValue = tempValue;\n            } while (tempValue != 0);\n          }\n        }\n        if (((mask == 8) && ((int)(*array << 0x1f) < 0)) && ((int)array[1] <= (int)array[4]))\n        {\n          outputString[-1] = '0';\n          outputString = outputString + -1;\n        }\n        array[4] = (int)currentChar - (int)outputString;\n        currentChar = outputString;\n        goto LAB_080054fa;\n      }\n      ptr = *count;\n      *count = ptr + 1;\n      *(char *)((int)array + 0x42) = (char)*ptr;\nLAB_08005464:\n      currentChar = (char *)((int)array + 0x42);\n      convertedValue = 1;\n    }\n    else {\n      if (firstByte != 0x73) {\n        if (firstByte < 0x74) {\n          if (firstByte == 0x6f) {\nLAB_0800548a:\n            convertedValue = *array;\n            ptr = *count;\n            if ((convertedValue & 0x80) == 0) {\n              *count = ptr + 1;\n              if ((convertedValue & 0x40) == 0) goto LAB_08005498;\n              convertedValue = (uint)*(ushort *)ptr;\n            }\n            else {\n              *count = ptr + 1;\nLAB_08005498:\n              convertedValue = *ptr;\n            }\n            if (firstByte == 0x6f) {\n              mask = 8;\n            }\n            else {\n              mask = 10;\n            }\n            hexValues = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (firstByte == 0x70) {\n            *array = *array | 0x20;\nLAB_0800544a:\n            hexValues = \"0123456789abcdef\";\n            *(undefined *)((int)array + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (firstByte == 0x75) goto LAB_0800548a;\n          if (firstByte == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)array + 0x42) = firstByte;\n        goto LAB_08005464;\n      }\n      pcharPtr = (char **)*count;\n      *count = (uint *)(pcharPtr + 1);\n      currentChar = *pcharPtr;\n      index = FUN_08005614(currentChar,0,array[1]);\n      if (index != 0) {\n        array[1] = index - (int)currentChar;\n      }\n      convertedValue = array[1];\n    }\n    array[4] = convertedValue;\n    *(undefined *)((int)array + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  convertedValue = *array;\n  pptr = (uint **)*count;\n  mask = array[5];\n  if ((convertedValue & 0x80) == 0) {\n    *count = (uint *)(pptr + 1);\n    ptr = *pptr;\n    if ((convertedValue & 0x40) == 0) goto LAB_0800557a;\n    *(short *)ptr = (short)mask;\n  }\n  else {\n    *count = (uint *)(pptr + 1);\n    ptr = *pptr;\nLAB_0800557a:\n    *ptr = mask;\n  }\nLAB_0800558e:\n  array[4] = 0;\nLAB_080054fa:\n  index = FUN_080052e4(value,array,lengthArray,size,callback);\n  if ((index == -1) || (index = (*callback)(value,size,currentChar,array[4]), index == -1)) {\nLAB_0800550e:\n    convertedValue = 0xffffffff;\n  }\n  else {\n    if ((int)(*array << 0x1e) < 0) {\n      for (index = 0; index < (int)(array[3] - lengthArray[0]); index = index + 1) {\n        result = (*callback)(value,size,(int)array + 0x19,1);\n        if (result == -1) goto LAB_0800550e;\n      }\n    }\n    convertedValue = array[3];\n    if ((int)array[3] < (int)lengthArray[0]) {\n      convertedValue = lengthArray[0];\n    }\n  }\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "convert_hex_string_to_int_080053d4",
                "param_1": "value",
                "param_2": "array",
                "param_3": "size",
                "param_4": "callback",
                "param_5": "count",
                "bVar1": "firstByte",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "result",
                "pcVar5": "hexValues",
                "uVar6": "mask",
                "uVar9": "convertedValue",
                "uVar10": "tempValue",
                "pcVar11": "outputString",
                "pcVar12": "currentChar",
                "local_24": "lengthArray",
                "ppuVar7": "pptr",
                "ppcVar8": "pcharPtr"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005614": {
            "entrypoint": "0x08005614",
            "current_name": "find_first_occurrence_08005614",
            "code": "\nchar * findFirstOccurrence_08005614(char *string,char character,int length)\n\n{\n  char *pointer;\n  char *currentPointer;\n  \n  pointer = string;\n  do {\n    currentPointer = pointer;\n    if (currentPointer == string + length) {\n      return (char *)0x0;\n    }\n    pointer = currentPointer + 1;\n  } while (*currentPointer != character);\n  return currentPointer;\n}\n\n",
            "renaming": {
                "FUN_08005614": "find_first_occurrence_08005614",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "pointer",
                "pcVar2": "currentPointer"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005630": {
            "entrypoint": "0x08005630",
            "current_name": "copy_array_elements_08005630",
            "code": "\nvoid copyArrayElements_08005630(int arrayStartIndex,undefined *sourceArray,int arrayLength)\n\n{\n  undefined *destinationEndPtr;\n  undefined *destinationPtr;\n  \n  destinationPtr = (undefined *)(arrayStartIndex + -1);\n  destinationEndPtr = sourceArray + arrayLength;\n  for (; sourceArray != destinationEndPtr; sourceArray = sourceArray + 1) {\n    destinationPtr = destinationPtr + 1;\n    *destinationPtr = *sourceArray;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005630": "copy_array_elements_08005630",
                "param_1": "arrayStartIndex",
                "param_2": "sourceArray",
                "param_3": "arrayLength",
                "puVar1": "destinationEndPtr",
                "puVar2": "destinationPtr"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005646": {
            "entrypoint": "0x08005646",
            "current_name": "copy_memory_08005646",
            "code": "\nvoid copyMemory_08005646(undefined *destPtr,undefined *srcPtr,int length)\n\n{\n  undefined *endPtr;\n  \n  endPtr = srcPtr + length;\n  if ((srcPtr < destPtr) && (destPtr < endPtr)) {\n    destPtr = destPtr + length;\n    length = length - (int)endPtr;\n    while (endPtr + length != (undefined *)0x0) {\n      endPtr = endPtr + -1;\n      destPtr = destPtr + -1;\n      *destPtr = *endPtr;\n    }\n    return;\n  }\n  destPtr = destPtr + -1;\n  for (; srcPtr != endPtr; srcPtr = srcPtr + 1) {\n    destPtr = destPtr + 1;\n    *destPtr = *srcPtr;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005646": "copy_memory_08005646",
                "param_1": "destPtr",
                "param_2": "srcPtr",
                "param_3": "length",
                "puVar1": "endPtr"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800567c": {
            "entrypoint": "0x0800567c",
            "current_name": "rearrange_data_0800567c",
            "code": "\nvoid rearrangeData_0800567c(undefined4 *result,int length,undefined4 value1,undefined4 value2)\n\n{\n  int **tempPtr;\n  int **intersectPtr;\n  int **currentPtr;\n  int *offset;\n  int **prevPtr;\n  int **newPtr;\n  \n  if (length == 0) {\n    return;\n  }\n  newPtr = (int **)(length + -4);\n  if (*(int *)(length + -4) < 0) {\n    newPtr = (int **)((int)newPtr + *(int *)(length + -4));\n  }\n  FUNC_0800583c();\n  currentPtr = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    newPtr[1] = (int *)0x0;\n    intersectPtr = tempPtr;\n    DAT_200002ac = newPtr;\n  }\n  else {\n    currentPtr = DAT_200002ac;\n    if (newPtr < DAT_200002ac) {\n      intersectPtr = (int **)*newPtr;\n      currentPtr = (int **)((int)newPtr + (int)intersectPtr);\n      if (DAT_200002ac == currentPtr) {\n        offset = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        currentPtr = (int **)((int)offset + (int)intersectPtr);\n        *newPtr = (int *)currentPtr;\n      }\n      newPtr[1] = (int *)DAT_200002ac;\n      DAT_200002ac = newPtr;\n    }\n    else {\n      do {\n        prevPtr = currentPtr;\n        currentPtr = (int **)prevPtr[1];\n        if (currentPtr == (int **)0x0) break;\n      } while (currentPtr <= newPtr);\n      intersectPtr = (int **)*prevPtr;\n      if ((int **)((int)prevPtr + (int)intersectPtr) == newPtr) {\n        intersectPtr = (int **)((int)intersectPtr + (int)*newPtr);\n        *prevPtr = (int *)intersectPtr;\n        if (currentPtr == (int **)((int)prevPtr + (int)intersectPtr)) {\n          offset = *currentPtr;\n          currentPtr = (int **)currentPtr[1];\n          intersectPtr = (int **)((int)intersectPtr + (int)offset);\n          *prevPtr = (int *)intersectPtr;\n          prevPtr[1] = (int *)currentPtr;\n        }\n      }\n      else if (newPtr < (int **)((int)prevPtr + (int)intersectPtr)) {\n        *result = 0xc;\n      }\n      else {\n        intersectPtr = (int **)((int)newPtr + (int)*newPtr);\n        if (currentPtr == intersectPtr) {\n          offset = *currentPtr;\n          currentPtr = (int **)currentPtr[1];\n          intersectPtr = (int **)((int)offset + (int)*newPtr);\n          *newPtr = (int *)intersectPtr;\n        }\n        newPtr[1] = (int *)currentPtr;\n        prevPtr[1] = (int *)newPtr;\n      }\n    }\n  }\n  FUNC_0800583e(result,intersectPtr,currentPtr,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800567c": "rearrange_data_0800567c",
                "param_1": "result",
                "param_2": "length",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "tempPtr",
                "ppiVar1": "intersectPtr",
                "ppiVar2": "currentPtr",
                "piVar3": "offset",
                "ppiVar4": "prevPtr",
                "ppiVar5": "newPtr"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "allocate_memory_block_08005714",
            "code": "\nuint allocate_memory_block_08005714(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int offset;\n  uint *previous_block;\n  uint block_difference;\n  uint *insertion_point;\n  uint new_block_size;\n  \n  new_block_size = (size + 3 & 0xfffffffc) + 8;\n  if (new_block_size < 0xc) {\n    new_block_size = 0xc;\n  }\n  if (((int)new_block_size < 0) || (new_block_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    current_block = DAT_200002ac;\n    insertion_point = DAT_200002ac;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - new_block_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (insertion_point == previous_block) {\n            current_block = (uint *)insertion_point[1];\n            DAT_200002ac = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (insertion_point != previous_block) {\n            insertion_point[1] = (uint)current_block;\n            insertion_point = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = new_block_size;\n          insertion_point = (uint *)((int)previous_block + block_difference);\n        }\n        goto LAB_08005778;\n      }\n      insertion_point = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(result);\n    }\n    current_block = (uint *)FUN_0800581c(result,new_block_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((insertion_point = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == insertion_point ||\n        (offset = FUN_0800581c(result,(int)insertion_point - (int)current_block), offset != -1)))) {\n      *insertion_point = new_block_size;\nLAB_08005778:\n      FUNC_0800583e(result);\n      new_block_size = (int)insertion_point + 0xbU & 0xfffffff8;\n      offset = new_block_size - (int)(insertion_point + 1);\n      if (offset != 0) {\n        *(int *)((int)insertion_point + offset) = -offset;\n        return new_block_size;\n      }\n      return new_block_size;\n    }\n    *result = 0xc;\n    FUNC_0800583e(result);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "offset",
                "puVar3": "previous_block",
                "uVar4": "block_difference",
                "puVar5": "insertion_point",
                "uVar6": "new_block_size"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057d0": {
            "entrypoint": "0x080057d0",
            "current_name": "process_data_080057d0",
            "code": "\nint processData_080057d0(undefined4 data,int length,uint threshold,undefined4 condition)\n\n{\n  int result;\n  uint returnValue;\n  \n  if (length != 0) {\n    if (threshold == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      returnValue = FUN_08005840();\n      result = length;\n      if ((returnValue < threshold) && (result = FUN_08005714(data,threshold), result != 0)) {\n        FUN_08005630(result,length,threshold);\n        FUN_0800567c(data,length);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(data,threshold,threshold,condition);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "data",
                "param_2": "length",
                "param_3": "threshold",
                "param_4": "condition",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_08005840",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800581c": {
            "entrypoint": "0x0800581c",
            "current_name": "validate_and_store_value_0800581c",
            "code": "\nvoid validate_and_store_value_0800581c(int *result_ptr,undefined4 value)\n\n{\n  int status;\n  \n  DAT_2000169c = 0;\n  status = FUN_080072b8(value);\n  if ((status == -1) && (DAT_2000169c != 0)) {\n    *result_ptr = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800581c": "validate_and_store_value_0800581c",
                "param_1": "result_ptr",
                "param_2": "value",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08005714"
            ],
            "called": [
                "FUN_080072b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "FUNC_0800583c",
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800583e": {
            "entrypoint": "0x0800583e",
            "current_name": "FUNC_0800583e",
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_result_08005840",
            "code": "\nint calculateResult_08005840(undefined4 result,int input)\n\n{\n  int index;\n  \n  index = *(int *)(input + -4) + -4;\n  if (*(int *)(input + -4) < 0) {\n    index = index + *(int *)(input + index);\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_result_08005840",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005854": {
            "entrypoint": "0x08005854",
            "current_name": "validate_and_execute_08005854",
            "code": "\nundefined8 validate_and_execute_08005854(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  int result;\n  undefined4 *ptrVar;\n  int *intPtr;\n  undefined8 returnValue;\n  undefined8 funcResult;\n  undefined4 flag;\n  undefined *dataPtr;\n  undefined4 input1;\n  undefined4 input2;\n  undefined4 input3;\n  undefined4 input4;\n  undefined8 resultData;\n  int executionResult;\n  \n  returnValue = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  executionResult = FUN_08000a04(input_param_1,input_param_2,input_param_1,input_param_2);\n  if (executionResult != 0) {\n    return returnValue;\n  }\n  funcResult = FUNC_0800708c(input_param_1,input_param_2);\n  result = FUN_080009f0((int)funcResult,(int)((ulonglong)funcResult >> 0x20),0,0x3ff00000);\n  if (result == 0) {\n    return returnValue;\n  }\n  flag = 1;\n  dataPtr = &DAT_080073ac;\n  input1 = input_param_1;\n  input2 = input_param_2;\n  input3 = input_param_1;\n  input4 = input_param_2;\n  resultData = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080058d0;\n  }\n  ptrVar = (undefined4 *)FUN_080072ac();\n  *ptrVar = 0x21;\nLAB_080058d0:\n  if (executionResult != 0) {\n    intPtr = (int *)FUN_080072ac();\n    *intPtr = executionResult;\n  }\n  return resultData;\n}\n\n",
            "renaming": {
                "FUN_08005854": "validate_and_execute_08005854",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "iVar1": "result",
                "puVar2": "ptrVar",
                "piVar3": "intPtr",
                "uVar4": "returnValue",
                "uVar5": "funcResult",
                "local_48": "flag",
                "local_44": "dataPtr",
                "local_40": "input1",
                "uStack_3c": "input2",
                "local_38": "input3",
                "uStack_34": "input4",
                "local_30": "resultData",
                "local_28": "executionResult"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "entrypoint": "0x080058fc",
            "current_name": "calculate_result_thunk_08006070",
            "code": "\nundefined8 calculate_result_thunk_08006070(uint number_1,uint number_2,uint number_3,uint number_4)\n\n{\n  undefined4 result_1;\n  uint result_2;\n  uint result_3;\n  int result_4;\n  uint result_5;\n  undefined8 final_result_1;\n  undefined8 final_result_2;\n  \n  result_5 = number_4 & 0x7fffffff;\n  if ((0x7ff00000 < (result_5 | (-number_3 | number_3) >> 0x1f)) ||\n     (result_3 = number_2 & 0x7fffffff, 0x7ff00000 < (result_3 | (-number_1 | number_1) >> 0x1f))) {\n    final_result_1 = FUN_0800016c(number_1,number_2,number_3,number_4,number_4);\n    return final_result_1;\n  }\n  if ((number_4 + 0xc0100000 | number_3) == 0) {\n    final_result_1 = FUN_08006d68();\n    return final_result_1;\n  }\n  result_2 = (int)number_4 >> 0x1e & 2U | number_2 >> 0x1f;\n  if ((number_1 | result_3) == 0) {\n    if (result_2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (result_2 != 3) {\n      return CONCAT44(number_2,number_1);\n    }\nLAB_0800613e:\n    final_result_1 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((number_3 | result_5) != 0) {\n      if (result_5 == 0x7ff00000) {\n        if (result_3 == 0x7ff00000) {\n          if (result_2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (result_2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (result_2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (result_2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (result_2 != 3) {\n          if (result_2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result_3 != 0x7ff00000) {\n        result_4 = (int)(result_3 - result_5) >> 0x14;\n        if (result_4 < 0x3d) {\n          if (((int)number_4 < 0) && (result_4 + 0x3c < 0 != SCARRY4(result_4,0x3c))) {\n            final_result_1 = 0;\n          }\n          else {\n            FUN_08000724(number_1,number_2);\n            FUNC_0800708c();\n            final_result_1 = FUN_08006d68();\n          }\n        }\n        else {\n          final_result_1 = 0x3ff921fb54442d18;\n        }\n        result_4 = (int)((ulonglong)final_result_1 >> 0x20);\n        result_1 = (undefined4)final_result_1;\n        if (result_2 == 1) {\n          return CONCAT44(result_4 + -0x80000000,result_1);\n        }\n        if (result_2 == 2) {\n          final_result_2 = FUN_08000168(result_1,result_4,0x33145c07,0x3ca1a626);\n          final_result_1 = 0x400921fb54442d18;\n        }\n        else {\n          if (result_2 == 0) {\n            return final_result_1;\n          }\n          final_result_1 = FUN_08000168(result_1,result_4,0x33145c07,0x3ca1a626);\n          final_result_2 = 0x400921fb54442d18;\n        }\n        final_result_1 = FUN_08000168((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),(int)final_result_2,\n                             (int)((ulonglong)final_result_2 >> 0x20));\n        return final_result_1;\n      }\n    }\n    if ((int)number_2 < 0) {\n      final_result_1 = 0xbff921fb54442d18;\n    }\n    else {\n      final_result_1 = 0x3ff921fb54442d18;\n    }\n  }\n  return final_result_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "number_1",
                "param_2": "number_2",
                "param_3": "number_3",
                "param_4": "number_4",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3",
                "iVar4": "result_4",
                "uVar5": "result_5",
                "uVar6": "final_result_1",
                "uVar7": "final_result_2"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08006070"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "calculate_result_08005900",
            "code": "\nundefined8 calculate_result_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char flag;\n  int result;\n  int *ptr_result;\n  undefined4 *ptr_flag;\n  int temp_result;\n  undefined4 upper_part;\n  undefined4 lower_part;\n  undefined8 original_result;\n  undefined8 temp_result2;\n  undefined4 status;\n  undefined *message;\n  undefined4 local_input1;\n  undefined4 local_input2;\n  undefined4 local_input3;\n  undefined4 local_input4;\n  undefined8 final_result;\n  int temp_result3;\n  \n  original_result = FUNC_08006228();\n  flag = DAT_20000224;\n  upper_part = (undefined4)((ulonglong)original_result >> 0x20);\n  lower_part = (undefined4)original_result;\n  if (DAT_20000224 == -1) {\n    return original_result;\n  }\n  result = FUN_08000a04(input3,input4,input3,input4);\n  if (result != 0) {\n    return original_result;\n  }\n  result = FUN_08000a04(input1,input2,input1,input2);\n  local_input1 = input1;\n  local_input2 = input2;\n  local_input3 = input3;\n  local_input4 = input4;\n  if (result == 0) {\n    result = FUN_080009a0(input1,input2,0,0);\n    if (result != 0) {\n      result = FUN_080009a0(input3,input4,0,0);\n      if (result != 0) {\n        status = 1;\n        message = &DAT_080073b1;\n        final_result = 0;\n        temp_result3 = 0;\n        if (flag != '\\0') {\n          final_result = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return original_result;\n      }\n      result = FUN_080009b4(input3,input4,0,0);\n      if (result == 0) {\n        return original_result;\n      }\n      status = 1;\n      message = &DAT_080073b1;\n      temp_result3 = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      final_result = 0xfff0000000000000;\n      temp_result3 = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = FUN_08007092(lower_part,upper_part);\n    if (((result != 0) || (temp_result = FUN_08007092(input1,input2), temp_result == 0)) ||\n       (temp_result = FUN_08007092(input3,input4), temp_result == 0)) {\n      result = FUN_080009a0(lower_part,upper_part,0,0);\n      if (result == 0) {\n        return original_result;\n      }\n      result = FUN_08007092(input1,input2);\n      if (result == 0) {\n        return original_result;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return original_result;\n      }\n      status = 4;\n      message = &DAT_080073b1;\n      temp_result3 = 0;\n      final_result._0_4_ = 0;\n      final_result._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    temp_result3 = FUN_08000a04(lower_part,upper_part);\n    flag = DAT_20000224;\n    if (temp_result3 != 0) {\n      message = &DAT_080073b1;\n      status = 1;\n      temp_result3 = result;\n      if (DAT_20000224 != '\\0') {\n        final_result = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      message = &DAT_080073b1;\n      status = 1;\n      final_result = 0;\n      goto LAB_08005978;\n    }\n    message = &DAT_080073b1;\n    status = 3;\n    if (DAT_20000224 == '\\0') {\n      final_result._0_4_ = 0xe0000000;\n      final_result._4_4_ = 0x47efffff;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        original_result = FUN_080004d0(input3,input4,0,0x3fe00000);\n        temp_result2 = FUN_080070b0();\n        result = FUN_080009a0((int)original_result,(int)((ulonglong)original_result >> 0x20),(int)temp_result2,\n                             (int)((ulonglong)temp_result2 >> 0x20));\n        if (result == 0) {\n          final_result._0_4_ = 0xe0000000;\n          final_result._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = FUN_0800709e(&status);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      final_result._0_4_ = 0;\n      final_result._4_4_ = 0x7ff00000;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        original_result = FUN_080004d0(input3,input4,0,0x3fe00000);\n        temp_result2 = FUN_080070b0();\n        result = FUN_080009a0((int)original_result,(int)((ulonglong)original_result >> 0x20),(int)temp_result2,\n                             (int)((ulonglong)temp_result2 >> 0x20));\n        if (result == 0) {\n          final_result._0_4_ = 0;\n          final_result._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    ptr_flag = (undefined4 *)FUN_080072ac();\n    lower_part = 0x22;\n  }\n  else {\n    result = FUN_080009a0(input3,input4,0,0);\n    if (result == 0) {\n      return original_result;\n    }\n    status = 1;\n    message = &DAT_080073b1;\n    final_result = 0x3ff0000000000000;\n    temp_result3 = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = FUN_0800709e(&status);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    ptr_flag = (undefined4 *)FUN_080072ac();\n    lower_part = 0x21;\n  }\n  *ptr_flag = lower_part;\nLAB_080059d0:\n  if (temp_result3 != 0) {\n    ptr_result = (int *)FUN_080072ac();\n    *ptr_result = temp_result3;\n  }\n  return final_result;\n}\n\n",
            "renaming": {
                "FUN_08005900": "calculate_result_08005900",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "ptr_result",
                "puVar4": "ptr_flag",
                "iVar5": "temp_result",
                "uVar6": "upper_part",
                "uVar7": "lower_part",
                "uVar8": "original_result",
                "uVar9": "temp_result2",
                "local_50": "status",
                "local_4c": "message",
                "local_48": "local_input1",
                "uStack_44": "local_input2",
                "local_40": "local_input3",
                "uStack_3c": "local_input4",
                "local_38": "final_result",
                "local_30": "temp_result3"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08007092",
                "FUN_080072ac",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "entrypoint": "0x08005bc8",
            "current_name": "validate_and_process_data_08005bc8",
            "code": "\nundefined8 validate_and_process_data_08005bc8(undefined4 input_param,undefined4 output_param)\n\n{\n  char data_status;\n  int verification_status;\n  int *ptr_local30;\n  undefined4 *ptr_local38;\n  undefined8 result;\n  undefined4 flag;\n  undefined *char_array;\n  undefined4 param_1_copy;\n  undefined4 param_2_copy;\n  undefined4 param_1_copy_2;\n  undefined4 param_2_copy_2;\n  undefined8 reverse_result;\n  int reverse_value;\n  \n  result = FUN_08006c0c();\n  data_status = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return result;\n  }\n  reverse_value = FUN_08000a04(input_param,output_param,input_param,output_param);\n  if (reverse_value != 0) {\n    return result;\n  }\n  verification_status = FUN_080009b4(input_param,output_param,0,0);\n  if (verification_status == 0) {\n    return result;\n  }\n  flag = 1;\n  char_array = &DAT_080073b5;\n  param_1_copy = input_param;\n  param_2_copy = output_param;\n  param_1_copy_2 = input_param;\n  param_2_copy_2 = output_param;\n  if (data_status == '\\0') {\n    reverse_result = 0;\nLAB_08005c26:\n    verification_status = FUN_0800709e(&flag);\n    if (verification_status != 0) goto LAB_08005c2e;\n  }\n  else {\n    reverse_result = FUN_08000724(0,0,0,0);\n    if (data_status != '\\x02') goto LAB_08005c26;\n  }\n  ptr_local38 = (undefined4 *)FUN_080072ac();\n  *ptr_local38 = 0x21;\nLAB_08005c2e:\n  if (reverse_value != 0) {\n    ptr_local30 = (int *)FUN_080072ac();\n    *ptr_local30 = reverse_value;\n  }\n  return reverse_result;\n}\n\n",
            "renaming": {
                "FUN_08005bc8": "validate_and_process_data_08005bc8",
                "param_1": "input_param",
                "param_2": "output_param",
                "cVar1": "data_status",
                "iVar2": "verification_status",
                "piVar3": "ptr_local30",
                "puVar4": "ptr_local38",
                "uVar5": "result",
                "local_50": "flag",
                "local_4c": "char_array",
                "local_48": "param_1_copy",
                "uStack_44": "param_2_copy",
                "local_40": "param_1_copy_2",
                "uStack_3c": "param_2_copy_2",
                "local_38": "reverse_result",
                "local_30": "reverse_value"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_080072ac",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c70": {
            "entrypoint": "0x08005c70",
            "current_name": "calculate_floating_point_08005c70",
            "code": "\nundefined8 calculateFloatingPoint_08005c70(uint number1,uint number2)\n\n{\n  int result;\n  undefined4 tmp1;\n  undefined4 tmp2;\n  undefined4 tmp3;\n  undefined4 tmp4;\n  undefined4 tmp5;\n  undefined4 tmp6;\n  uint temp;\n  undefined8 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  result1 = CONCAT44(number2,number1);\n  temp = number2 & 0x7fffffff;\n  if (temp < 0x3ff00000) {\n    if (temp < 0x3fe00000) {\n      if (0x3e3fffff < temp) {\n        result2 = FUN_080004d0(number1,number2,number1,number2);\n        tmp6 = (undefined4)((ulonglong)result2 >> 0x20);\n        tmp5 = (undefined4)result2;\n        result2 = FUN_080004d0(tmp5,tmp6,0xdfdf709,0x3f023de1);\n        result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0x7501b288,0x3f49efe0);\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp6);\n        result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0xb5688f3b,0x3fa48228);\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp6);\n        result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0xe884455,0x3fc9c155);\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp6);\n        result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp6);\n        result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0x55555555,0x3fc55555);\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp6);\n        result3 = FUN_080004d0(tmp5,tmp6,0xb12e9282,0x3fb3b8c5);\n        result3 = FUN_08000168((int)result3,(int)((ulonglong)result3 >> 0x20),0x1b8d0159,0x3fe6066c);\n        result3 = FUN_080004d0((int)result3,(int)((ulonglong)result3 >> 0x20),tmp5,tmp6);\n        result3 = FUN_0800016c((int)result3,(int)((ulonglong)result3 >> 0x20),0x9c598ac8,0x40002ae5);\n        result3 = FUN_080004d0((int)result3,(int)((ulonglong)result3 >> 0x20),tmp5,tmp6);\n        result3 = FUN_08000168((int)result3,(int)((ulonglong)result3 >> 0x20),0x1c8a2d4b,0x40033a27);\n        result3 = FUN_080004d0((int)result3,(int)((ulonglong)result3 >> 0x20),tmp5,tmp6);\n        result3 = FUN_0800016c((int)result3,(int)((ulonglong)result3 >> 0x20),0,0x3ff00000);\n        result2 = FUN_08000724((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                              (int)((ulonglong)result3 >> 0x20));\n        result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),number1,number2);\n        goto LAB_08005cba;\n      }\n      result2 = FUN_0800016c(number1,number2,0x8800759c,0x7e37e43c);\n      result = FUN_080009f0((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n      if (result != 0) {\n        return result1;\n      }\n    }\n    result1 = FUNC_0800708c(number1,number2);\n    result1 = FUN_08000168(0,0x3ff00000,(int)result1,(int)((ulonglong)result1 >> 0x20));\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x3fe00000);\n    tmp1 = (undefined4)((ulonglong)result1 >> 0x20);\n    tmp5 = (undefined4)result1;\n    result1 = FUN_080004d0(tmp5,tmp1,0xdfdf709,0x3f023de1);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0x7501b288,0x3f49efe0);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp5,tmp1);\n    result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),0xb5688f3b,0x3fa48228);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp5,tmp1);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0xe884455,0x3fc9c155);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp5,tmp1);\n    result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp5,tmp1);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0x55555555,0x3fc55555);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp5,tmp1);\n    tmp2 = (undefined4)((ulonglong)result1 >> 0x20);\n    result2 = FUN_080004d0(tmp5,tmp1,0xb12e9282,0x3fb3b8c5);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0x1b8d0159,0x3fe6066c);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp1);\n    result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0x9c598ac8,0x40002ae5);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp1);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0x1c8a2d4b,0x40033a27);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),tmp5,tmp1);\n    result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n    tmp3 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_08006c0c(tmp5,tmp1);\n    tmp4 = (undefined4)((ulonglong)result3 >> 0x20);\n    tmp6 = (undefined4)result3;\n    if (temp < 0x3fef3333) {\n      result1 = FUN_08000724((int)result1,tmp2,(int)result2,tmp3);\n      result2 = FUN_0800016c(tmp6,tmp4,tmp6,tmp4);\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                           (int)((ulonglong)result2 >> 0x20));\n      result2 = FUN_080004d0(0,tmp4,0,tmp4);\n      result2 = FUN_08000168(tmp5,tmp1,(int)result2,(int)((ulonglong)result2 >> 0x20));\n      result3 = FUN_0800016c(tmp6,tmp4,0,tmp4);\n      result2 = FUN_08000724((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                            (int)((ulonglong)result3 >> 0x20));\n      tmp5 = (undefined4)((ulonglong)result2 >> 0x20);\n      result2 = FUN_0800016c((int)result2,tmp5,(int)result2,tmp5);\n      result2 = FUN_08000168(0x33145c07,0x3c91a626,(int)result2,(int)((ulonglong)result2 >> 0x20));\n      result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                           (int)((ulonglong)result2 >> 0x20));\n      result2 = FUN_0800016c(0,tmp4,0,tmp4);\n      result2 = FUN_08000168(0x54442d18,0x3fe921fb,(int)result2,(int)((ulonglong)result2 >> 0x20));\n      result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                           (int)((ulonglong)result2 >> 0x20));\n      tmp5 = 0x3fe921fb;\n    }\n    else {\n      result1 = FUN_08000724((int)result1,tmp2,(int)result2,tmp3);\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),tmp6,tmp4);\n      result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),tmp6,tmp4);\n      tmp5 = (undefined4)((ulonglong)result1 >> 0x20);\n      result1 = FUN_0800016c((int)result1,tmp5,(int)result1,tmp5);\n      result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),0x33145c07,0x3c91a626);\n      tmp5 = 0x3ff921fb;\n    }\n    result1 = FUN_08000168(0x54442d18,tmp5,(int)result1,(int)((ulonglong)result1 >> 0x20));\n    if ((int)number2 < 1) {\n      result1 = CONCAT44((int)((ulonglong)result1 >> 0x20) + -0x80000000,(int)result1);\n    }\n  }\n  else {\n    if ((temp + 0xc0100000 | number1) != 0) {\n      result1 = FUN_08000168(number1,number2,number1,number2);\n      tmp5 = (undefined4)((ulonglong)result1 >> 0x20);\n      result1 = FUN_08000724((int)result1,tmp5,(int)result1,tmp5);\n      return result1;\n    }\n    result1 = FUN_080004d0(number1,number2,0x54442d18,0x3ff921fb);\n    result2 = FUN_080004d0(number1,number2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                         (int)((ulonglong)result2 >> 0x20));\n  }\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08005c70": "calculate_floating_point_08005c70",
                "param_1": "number1",
                "param_2": "number2",
                "iVar1": "result",
                "uVar2": "tmp1",
                "uVar3": "tmp2",
                "uVar4": "tmp3",
                "uVar5": "tmp4",
                "uVar6": "tmp5",
                "uVar7": "tmp6",
                "uVar8": "temp",
                "uVar9": "result1",
                "uVar10": "result2",
                "uVar11": "result3"
            },
            "calling": [
                "FUN_08005854"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006070": {
            "entrypoint": "0x08006070",
            "current_name": "calculate_value_08006070",
            "code": "\nundefined8 calculateValue_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint flag1;\n  uint flag2;\n  int difference;\n  uint absoluteValue;\n  undefined8 finalResult;\n  undefined8 intermediateResult;\n  \n  absoluteValue = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (absoluteValue | (-input3 | input3) >> 0x1f)) ||\n     (flag2 = input2 & 0x7fffffff, 0x7ff00000 < (flag2 | (-input1 | input1) >> 0x1f))) {\n    finalResult = FUN_0800016c(input1,input2,input3,input4,input4);\n    return finalResult;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    finalResult = FUN_08006d68();\n    return finalResult;\n  }\n  flag1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | flag2) == 0) {\n    if (flag1 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (flag1 != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    finalResult = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | absoluteValue) != 0) {\n      if (absoluteValue == 0x7ff00000) {\n        if (flag2 == 0x7ff00000) {\n          if (flag1 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (flag1 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (flag1 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (flag1 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (flag1 != 3) {\n          if (flag1 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (flag2 != 0x7ff00000) {\n        difference = (int)(flag2 - absoluteValue) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)input4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n            finalResult = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            FUNC_0800708c();\n            finalResult = FUN_08006d68();\n          }\n        }\n        else {\n          finalResult = 0x3ff921fb54442d18;\n        }\n        difference = (int)((ulonglong)finalResult >> 0x20);\n        result1 = (undefined4)finalResult;\n        if (flag1 == 1) {\n          return CONCAT44(difference + -0x80000000,result1);\n        }\n        if (flag1 == 2) {\n          intermediateResult = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          finalResult = 0x400921fb54442d18;\n        }\n        else {\n          if (flag1 == 0) {\n            return finalResult;\n          }\n          finalResult = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          intermediateResult = 0x400921fb54442d18;\n        }\n        finalResult = FUN_08000168((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)intermediateResult,\n                             (int)((ulonglong)intermediateResult >> 0x20));\n        return finalResult;\n      }\n    }\n    if ((int)input2 < 0) {\n      finalResult = 0xbff921fb54442d18;\n    }\n    else {\n      finalResult = 0x3ff921fb54442d18;\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08006070": "calculate_value_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "iVar4": "difference",
                "uVar5": "absoluteValue",
                "uVar6": "finalResult",
                "uVar7": "intermediateResult"
            },
            "calling": [
                "thunk_FUN_08006070"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_08006d68",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006228": {
            "entrypoint": "0x08006228",
            "current_name": "FUNC_08006228",
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  int iVar10;\n  uint uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  undefined8 uVar20;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar15 = CONCAT44(param_2,param_1);\n  uVar11 = param_4 & 0x7fffffff;\n  if ((uVar11 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if (uVar8 < 0x7ff00001) {\n    if (uVar8 == 0x7ff00000) {\n      if (param_1 == 0) {\n        if (0x7ff00000 < uVar11) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar11 != 0x7ff00000) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (uVar11 < 0x43400000) {\n            if (uVar11 < 0x3ff00000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar5 = ((int)uVar11 >> 0x14) + -0x3ff;\n            if (0x14 < iVar5) {\n              uVar2 = param_3 >> (0x34U - iVar5 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar5 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar11 >> (0x14U - iVar5 & 0xff);\n              if (uVar11 == uVar2 << (0x14U - iVar5 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              else {\n                local_70 = 0;\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          else {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar11 == 0x7ff00000) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar11 == 0x3ff00000) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar14 = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == 0x3fe00000) && (-1 < (int)param_2)) {\n                uVar11 = FUN_08006c0c(param_1,param_2);\n                return uVar11;\n              }\n            }\n          }\n          uVar14 = FUNC_0800708c(param_1,param_2);\n          uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n          uVar1 = (undefined4)uVar14;\n          uVar19 = CONCAT44(param_2,uVar1) & 0x7fffffffffffffff;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)param_4 < 0) {\n              uVar14 = FUN_08000724(0,0x3ff00000,uVar1,uVar12);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar14;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar14;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar14 = uVar15;\n            if ((local_70 | uVar2) != 0) {\n              if (uVar11 < 0x41e00001) {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar19 = FUN_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar11 = (uint)(uVar19 >> 0x20);\n                uVar1 = (undefined4)uVar19;\n                local_54 = ((int)uVar11 >> 0x14) + -0x3ff + local_54;\n                uVar11 = uVar11 & 0xfffff;\n                uVar8 = uVar11 | 0x3ff00000;\n                if (uVar11 < 0x3988f) {\nLAB_08006628:\n                  iVar5 = 0;\n                }\n                else {\n                  if (0xbb679 < uVar11) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar5 = 1;\n                }\n                iVar6 = iVar5 * 8;\n                uVar7 = (&DAT_080073c0)[iVar5 * 2];\n                uVar9 = (&DAT_080073c4)[iVar5 * 2];\n                uVar15 = FUN_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar13 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar14 = FUN_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar14 = FUN_08000724(0,0x3ff00000,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar16 = FUN_080004d0((int)uVar15,uVar13,(int)uVar14,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar12 = (undefined4)uVar16;\n                uVar16 = FUN_080004d0(0,uVar4);\n                uVar15 = FUN_08000168((int)uVar15,uVar13,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar5 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUN_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar15 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,uVar3\n                                     );\n                uVar13 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar14 = FUN_080004d0(uVar12,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUN_080004d0(uVar1,uVar3,0x4a454eef,0x3fca7e28);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0x33333303,\n                                      0x3fe33333);\n                uVar16 = FUN_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_0800016c(uVar12,uVar4,0,uVar4);\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      uVar13);\n                uVar14 = FUN_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar16 = FUN_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUN_0800016c((int)uVar16,uVar3,0,0x40080000);\n                FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar14,uVar1);\n                uVar17 = FUN_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar20 = FUN_08000168(0,extraout_r1_00,0,0x40080000);\n                uVar16 = FUN_08000168((int)uVar20,(int)((ulonglong)uVar20 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar14 = FUN_08000168((int)uVar14,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar12,uVar4);\n                uVar15 = FUN_080004d0((int)uVar15,uVar13,0,extraout_r1_00);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                FUN_0800016c((int)uVar17,uVar7,(int)uVar14,uVar1);\n                uVar15 = FUN_080004d0(0,extraout_r1_01,0xe0000000,0x3feec709);\n                uVar16 = FUN_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar14 = FUN_08000168((int)uVar14,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                uVar16 = FUN_080004d0(0,extraout_r1_01,0x145b01f5,0xbe3e2fe0);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + iVar6),\n                                      *(undefined4 *)(&DAT_080073e4 + iVar6));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar12 = *(undefined4 *)(&DAT_080073d0 + iVar6);\n                uVar13 = *(undefined4 *)(&DAT_080073d4 + iVar6);\n                uVar17 = FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar17 = FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar12,uVar13);\n                FUN_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUN_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUN_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar12,uVar13);\n                uVar11 = extraout_r1_02;\n              }\n              else {\n                if (0x43f00000 < uVar11) {\n                  if (uVar8 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)param_4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  param_1 = 0x8800759c;\n                  param_2 = 0x7e37e43c;\n                  uVar15 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (uVar8 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < uVar8) goto LAB_08006418;\n                uVar15 = FUN_08000168(uVar1,uVar12,0,0x3ff00000);\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUN_080004d0(uVar1,uVar12,0x60000000,0x3ff71547);\n                uVar14 = FUN_080004d0(uVar1,uVar12,0xf85ddf44,0x3e54ae0b);\n                uVar16 = FUN_080004d0(uVar1,uVar12,0,0x3fd00000);\n                uVar16 = FUN_08000168(0x55555555,0x3fd55555,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar12);\n                uVar16 = FUN_08000168(0,0x3fe00000,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUN_080004d0(uVar1,uVar12,uVar1,uVar12);\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUN_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                uVar14 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUN_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                             (int)((ulonglong)uVar14 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar11 = extraout_r1;\n              }\n              uVar15 = FUN_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar15,\n                                    (int)((ulonglong)uVar15 >> 0x20));\n              uVar15 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                    (int)((ulonglong)uVar15 >> 0x20));\n              if ((local_70 - 1 | uVar2) == 0) {\n                param_2 = 0xbff00000;\n              }\n              else {\n                param_2 = 0x3ff00000;\n              }\n              local_70 = 0;\n              uVar14 = FUN_08000168(param_3,param_4,0,param_4);\n              uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0,uVar11);\n              uVar15 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),param_3,param_4);\n              uVar15 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                    (int)((ulonglong)uVar15 >> 0x20));\n              uVar13 = (undefined4)((ulonglong)uVar15 >> 0x20);\n              uVar1 = (undefined4)uVar15;\n              uVar15 = FUN_080004d0(0,uVar11,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n              uVar12 = (undefined4)uVar15;\n              lVar18 = FUN_0800016c(uVar1,uVar13,uVar12,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar11 = (uint)lVar18;\n              if (0x408fffffffffffff < lVar18) {\n                if ((uVar8 + 0xbf700000 | uVar11) == 0) {\n                  uVar14 = FUN_0800016c(uVar1,uVar13,0x652b82fe,0x3c971547);\n                  uVar16 = FUN_08000168(uVar11,uVar8,uVar12,uVar3);\n                  iVar5 = FUN_080009f0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar5 == 0) goto LAB_08006968;\n                }\n                uVar15 = FUN_080004d0(0,param_2,0x8800759c,0x7e37e43c);\n                param_1 = 0x8800759c;\n                param_2 = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((uVar8 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((uVar8 & 0x7fffffff) < 0x3fe00001) {\n                  iVar5 = 0;\n                }\n                else {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar11 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar5 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar11 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar5 = -iVar5;\n                  }\n                  uVar15 = FUN_08000168(uVar12,uVar3,0,uVar8 & ~(0xfffff >> (uVar11 & 0xff)));\n                }\n                local_64 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                local_68 = (undefined4)uVar15;\n                FUN_0800016c(local_68,local_64,uVar1,uVar13);\n                uVar15 = FUN_080004d0(0,extraout_r1_03,0,0x3fe62e43);\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar14 = FUN_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar14 = FUN_08000168(uVar1,uVar13,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                uVar16 = FUN_080004d0(0,extraout_r1_03,0xca86c39,0xbe205c61);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar13 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar16 = FUN_0800016c((int)uVar15,uVar12,(int)uVar14,uVar13);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar15 = FUN_08000168(uVar1,uVar3,(int)uVar15,uVar12);\n                uVar15 = FUN_08000168((int)uVar14,uVar13,(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar13 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar14 = FUN_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar12 = (undefined4)uVar14;\n                uVar14 = FUN_080004d0(uVar12,uVar4,0x72bea4d0,0x3e663769);\n                uVar14 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar12,uVar4);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar12,uVar4);\n                uVar14 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar12,uVar4);\n                uVar14 = FUN_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                uVar14 = FUN_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar12,uVar4);\n                uVar14 = FUN_08000168(uVar1,uVar3,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar16 = FUN_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUN_08000168((int)uVar14,uVar12,0,0x40000000);\n                uVar14 = FUN_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar16 = FUN_080004d0(uVar1,uVar3,(int)uVar15,uVar13);\n                uVar15 = FUN_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      uVar13);\n                uVar15 = FUN_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUN_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar14 = FUN_08000168(0,0x3ff00000,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                iVar6 = (int)((ulonglong)uVar14 >> 0x20);\n                iVar10 = iVar6 + iVar5 * 0x100000;\n                uVar15 = CONCAT44(iVar10,(int)uVar14);\n                param_1 = local_70;\n                if (iVar10 < 0x100000) {\n                  uVar15 = FUN_080071c0((int)uVar14,iVar6,iVar5);\n                }\n              }\n              else {\n                if ((uVar8 + 0x3f6f3400 | uVar11) == 0) {\n                  uVar14 = FUN_08000168(uVar11,uVar8,uVar12,uVar3);\n                  iVar5 = FUN_080009c8(uVar1,uVar13,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                  if (iVar5 == 0) goto LAB_08006968;\n                }\n                uVar15 = FUN_080004d0(0,param_2,0xc2f8f359,0x1a56e1f);\n                param_1 = 0xc2f8f359;\n                param_2 = 0x1a56e1f;\n              }\nLAB_0800634a:\n              uVar11 = FUN_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),param_1,param_2);\n              return uVar11;\n            }\n          }\n          uVar1 = (undefined4)((ulonglong)uVar14 >> 0x20);\n          uVar14 = FUN_08000168((int)uVar14,uVar1,(int)uVar14,uVar1);\n          uVar15 = uVar14;\nLAB_08006320:\n          uVar11 = FUN_08000724((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                (int)((ulonglong)uVar15 >> 0x20));\n          return uVar11;\n        }\n      }\n    }\n    else if (uVar11 < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar11 = FUN_080070a4(&DAT_0800737e);\n  return uVar11;\n}\n\n",
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000404"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "entrypoint": "0x08006c0c",
            "current_name": "calculate_float_08006c0c",
            "code": "\nundefined8 calculateFloat_08006c0c(uint input1,uint input2)\n\n{\n  undefined4 result1;\n  uint result2;\n  int shiftAmount1;\n  int shiftAmount2;\n  uint temp1;\n  uint temp2;\n  int sum1;\n  uint sum2;\n  uint temp3;\n  int iteration1;\n  uint iteration2;\n  undefined8 finalResult;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    finalResult = FUN_080004d0(input1,input2,input1,input2);\n    finalResult = FUN_0800016c(input1,input2,(int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n    return finalResult;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return concatenate64(input2,input1);\n    }\n    if (input2 != 0) {\n      finalResult = FUN_08000168(input1,input2,input1,input2);\n      result1 = (undefined4)((ulonglong)finalResult >> 0x20);\n      finalResult = FUN_08000724((int)finalResult,result1,(int)finalResult,result1);\n      return finalResult;\n    }\n  }\n  shiftAmount1 = (int)input2 >> 0x14;\n  if (shiftAmount1 == 0) {\n    while (input2 == 0) {\n      shiftAmount1 = shiftAmount1 + -0x15;\n      input2 = input1 >> 0xb;\n      input1 = input1 << 0x15;\n    }\n    result2 = 0;\n    for (; -1 < (int)(input2 << 0xb); input2 = input2 << 1) {\n      result2 = result2 + 1;\n    }\n    shiftAmount1 = shiftAmount1 - (result2 - 1);\n    input2 = input2 | input1 >> (0x20 - result2 & 0xff);\n    input1 = input1 << (result2 & 0xff);\n  }\n  sum1 = 0;\n  result2 = input2 & 0xfffff | 0x100000;\n  if ((shiftAmount1 + -0x3ff) * -0x80000000 < 0) {\n    result2 = result2 * 2 - ((int)input1 >> 0x1f);\n    input1 = input1 << 1;\n  }\n  result2 = result2 * 2 - ((int)input1 >> 0x1f);\n  shiftAmount2 = 0x16;\n  temp1 = 0;\n  sum2 = 0x200000;\n  input1 = input1 << 1;\n  do {\n    iteration1 = temp1 + sum2;\n    if (iteration1 <= (int)result2) {\n      result2 = result2 - iteration1;\n      temp1 = iteration1 + sum2;\n      sum1 = sum1 + sum2;\n    }\n    shiftAmount2 = shiftAmount2 + -1;\n    result2 = result2 * 2 - ((int)input1 >> 0x1f);\n    sum2 = sum2 >> 1;\n    input1 = input1 << 1;\n  } while (shiftAmount2 != 0);\n  iteration1 = 0x20;\n  temp3 = 0x80000000;\n  sum2 = 0;\n  shiftAmount2 = 0;\n  do {\n    iteration2 = temp3 + shiftAmount2;\n    temp2 = temp1;\n    if (((int)temp1 < (int)result2) || ((result2 == temp1 && (iteration2 <= input1)))) {\n      shiftAmount2 = iteration2 + temp3;\n      if (((int)iteration2 < 0) && (-1 < shiftAmount2)) {\n        temp2 = temp1 + 1;\n      }\n      result2 = result2 - temp1;\n      if (input1 < iteration2) {\n        result2 = result2 - 1;\n      }\n      input1 = input1 - iteration2;\n      sum2 = sum2 + temp3;\n    }\n    result2 = result2 * 2 - ((int)input1 >> 0x1f);\n    iteration1 = iteration1 + -1;\n    input1 = input1 << 1;\n    temp3 = temp3 >> 1;\n    temp1 = temp2;\n  } while (iteration1 != 0);\n  if ((input1 | result2) != 0) {\n    if (sum2 == 0xffffffff) {\n      sum1 = sum1 + 1;\n      sum2 = 0;\n    }\n    else {\n      sum2 = sum2 + 1 & 0xfffffffe;\n    }\n  }\n  sum2 = sum2 >> 1;\n  if (sum1 << 0x1f < 0) {\n    sum2 = sum2 | 0x80000000;\n  }\n  return concatenate64((sum1 >> 1) + 0x3fe00000 + (shiftAmount1 + -0x3ff >> 1) * 0x100000,sum2);\n}\n\n",
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "shiftAmount1",
                "iVar4": "shiftAmount2",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "iVar7": "sum1",
                "uVar8": "sum2",
                "uVar9": "temp3",
                "iVar10": "iteration1",
                "uVar11": "iteration2",
                "uVar12": "finalResult",
                "CONCAT44": "concatenate64"
            },
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d68": {
            "entrypoint": "0x08006d68",
            "current_name": "calculate_result_08006d68",
            "code": "\nundefined8 calculateResult_08006d68(int inputValue1,uint inputValue2,undefined4 const1,undefined4 const2)\n\n{\n  int status;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  undefined8 result1;\n  undefined8 result2;\n  \n  result1 = CONCAT44(inputValue2,inputValue1);\n  temp7 = inputValue2 & 0x7fffffff;\n  if (temp7 < 0x44100000) {\n    if (temp7 < 0x3fdc0000) {\n      if (temp7 < 0x3e200000) {\n        result2 = FUN_0800016c(inputValue1,inputValue2,0x8800759c,0x7e37e43c,const2);\n        status = FUN_080009f0((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n        if (status != 0) {\n          return result1;\n        }\n      }\n      status = -1;\n    }\n    else {\n      result1 = FUNC_0800708c();\n      temp2 = (undefined4)((ulonglong)result1 >> 0x20);\n      temp1 = (undefined4)result1;\n      if (temp7 < 0x3ff30000) {\n        if (temp7 < 0x3fe60000) {\n          result1 = FUN_0800016c(temp1,temp2,temp1,temp2);\n          result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x3ff00000);\n          result2 = FUN_0800016c(temp1,temp2,0,0x40000000);\n          result1 = FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                               (int)((ulonglong)result2 >> 0x20));\n          status = 0;\n        }\n        else {\n          result1 = FUN_08000168(temp1,temp2,0,0x3ff00000);\n          result2 = FUN_0800016c(temp1,temp2,0,0x3ff00000);\n          result1 = FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                               (int)((ulonglong)result2 >> 0x20));\n          status = 1;\n        }\n      }\n      else if (temp7 < 0x40038000) {\n        result1 = FUN_08000168(temp1,temp2,0,0x3ff80000);\n        result2 = FUN_080004d0(temp1,temp2,0,0x3ff80000);\n        result2 = FUN_0800016c((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n        result1 = FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                             (int)((ulonglong)result2 >> 0x20));\n        status = 2;\n      }\n      else {\n        result1 = FUN_08000724(0,0xbff00000,temp1,temp2);\n        status = 3;\n      }\n    }\n    temp6 = (undefined4)((ulonglong)result1 >> 0x20);\n    temp5 = (undefined4)result1;\n    result1 = FUN_080004d0(temp5,temp6,temp5,temp6);\n    temp3 = (undefined4)((ulonglong)result1 >> 0x20);\n    temp1 = (undefined4)result1;\n    result1 = FUN_080004d0(temp1,temp3,temp1,temp3);\n    temp4 = (undefined4)((ulonglong)result1 >> 0x20);\n    temp2 = (undefined4)result1;\n    result1 = FUN_080004d0(temp2,temp4,0xe322da11,0x3f90ad3a);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0x24760deb,0x3fa97b4b);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp4);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp4);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0xc54c206e,0x3fb745cd);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp4);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0x920083ff,0x3fc24924);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp4);\n    result1 = FUN_0800016c((int)result1,(int)((ulonglong)result1 >> 0x20),0x5555550d,0x3fd55555);\n    result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp1,temp3);\n    temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n    result2 = FUN_080004d0(temp2,temp4,0x2c6a6c2f,0xbfa2b444);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0x52defd9a,0x3fadde2d);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),temp2,temp4);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),temp2,temp4);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0xfe231671,0x3fbc71c6);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),temp2,temp4);\n    result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),0x9998ebc4,0x3fc99999);\n    result2 = FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),temp2,temp4);\n    temp2 = (undefined4)((ulonglong)result2 >> 0x20);\n    if (status == -1) {\n      result1 = FUN_0800016c((int)result1,temp1,(int)result2,temp2);\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp5,temp6);\n      result1 = FUN_08000168(temp5,temp6,(int)result1,(int)((ulonglong)result1 >> 0x20));\n    }\n    else {\n      result1 = FUN_0800016c((int)result1,temp1,(int)result2,temp2);\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),temp5,temp6);\n      status = status * 8;\n      result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + status),\n                           *(undefined4 *)(&UNK_08007414 + status));\n      result1 = FUN_08000168((int)result1,(int)((ulonglong)result1 >> 0x20),temp5,temp6);\n      result1 = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + status),\n                           *(undefined4 *)(&UNK_080073f4 + status),(int)result1,\n                           (int)((ulonglong)result1 >> 0x20));\n      if ((int)inputValue2 < 0) {\n        result1 = CONCAT44((int)((ulonglong)result1 >> 0x20) + -0x80000000,(int)result1);\n      }\n    }\n  }\n  else if ((temp7 < 0x7ff00001) && ((temp7 != 0x7ff00000 || (inputValue1 == 0)))) {\n    if ((int)inputValue2 < 1) {\n      result1 = 0xbff921fb54442d18;\n    }\n    else {\n      result1 = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    result1 = FUN_0800016c(inputValue1,inputValue2,inputValue1,inputValue2,const2);\n  }\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08006d68": "calculate_result_08006d68",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "const1",
                "param_4": "const2",
                "uVar9": "result1",
                "uVar10": "result2",
                "iVar1": "status",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7"
            },
            "calling": [
                "FUN_08006070"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800708c": {
            "entrypoint": "0x0800708c",
            "current_name": "FUNC_0800708c",
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007092": {
            "entrypoint": "0x08007092",
            "current_name": "set_sign_bit_08007092",
            "code": "\nuint setSignBit_08007092(undefined4 inputFlag,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_08007092": "set_sign_bit_08007092",
                "param_1": "inputFlag",
                "param_2": "value"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800709e": {
            "entrypoint": "0x0800709e",
            "current_name": "initialize_0800709e",
            "code": "\nundefined4 initialize_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800709e": "initialize_0800709e"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070a4": {
            "entrypoint": "0x080070a4",
            "current_name": "get_infinity_080070a4",
            "code": "\ndouble getInfinity_080070a4(void)\n\n{\n  return 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080070a4": "get_infinity_080070a4",
                "undefined8": "double"
            },
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070b0": {
            "entrypoint": "0x080070b0",
            "current_name": "reverse_bitwise_operations_080070b0",
            "code": "\nundefined8 reverseBitwiseOperations_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 value1;\n  uint shiftedInput2;\n  undefined4 value2;\n  uint adjustedInput;\n  uint shiftAmount;\n  uint shiftedInput2;\n  undefined8 result;\n  \n  shiftedInput2 = (input2 << 1) >> 0x15;\n  shiftAmount = shiftedInput2 - 0x3ff;\n  shiftedInput2 = input2;\n  if ((int)shiftAmount < 0x14) {\n    if ((int)shiftAmount < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      shiftedInput2 = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      value1 = *(undefined4 *)(&DAT_08007430 + index);\n      value2 = *(undefined4 *)(&DAT_08007434 + index);\n      result = FUN_0800016c(input1,(-shiftedInput2 | shiftedInput2) >> 0xc & 0x80000 | input2 & 0xfffe0000,value1,\n                           value2,input1,input2,input3);\n      result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n      return CONCAT44((uint)((ulonglong)result >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)result);\n    }\n    shiftedInput2 = 0xfffff >> (shiftAmount & 0xff);\n    if ((input2 & shiftedInput2 | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shiftedInput2 = shiftedInput2 >> 1;\n    adjustedInput = input2 & shiftedInput2 | input1;\n    if (adjustedInput != 0) {\n      if (shiftAmount == 0x13) {\n        adjustedInput = 0x80000000;\n      }\n      else {\n        adjustedInput = 0;\n      }\n      shiftedInput2 = 0x40000 >> (shiftAmount & 0xff) | input2 & ~shiftedInput2;\n    }\n  }\n  else {\n    if (0x33 < (int)shiftAmount) {\n      if (shiftAmount != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      result = FUN_0800016c();\n      return result;\n    }\n    shiftedInput2 = shiftedInput2 - 0x413;\n    shiftAmount = 0xffffffff >> (shiftedInput2 & 0xff);\n    if ((input1 & shiftAmount) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shiftAmount = shiftAmount >> 1;\n    adjustedInput = input1;\n    if ((input1 & shiftAmount) != 0) {\n      adjustedInput = 0x40000000 >> (shiftedInput2 & 0xff) | input1 & ~shiftAmount;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  value1 = *(undefined4 *)(&DAT_08007430 + index);\n  value2 = *(undefined4 *)(&DAT_08007434 + index);\n  result = FUN_0800016c(adjustedInput,shiftedInput2,value1,value2,input1,input2,input3);\n  result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080070b0": "reverse_bitwise_operations_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "iVar1": "index",
                "uVar2": "value1",
                "uVar3": "shiftedInput2",
                "uVar4": "value2",
                "uVar5": "adjustedInput",
                "uVar6": "shiftAmount",
                "uVar7": "shiftedInput2",
                "uVar8": "result"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071c0": {
            "entrypoint": "0x080071c0",
            "current_name": "calculate_float_number_080071c0",
            "code": "\nundefined8 calculateFloatNumber_080071c0(uint integerPart,uint decimalPart,int exponent,undefined4 unknownParam)\n\n{\n  uint shiftedDecimal;\n  undefined4 tempVar1;\n  int combinedExponent;\n  undefined4 tempVar2;\n  uint upperIntPart;\n  undefined8 result;\n  \n  result = CONCAT44(decimalPart,integerPart);\n  shiftedDecimal = (decimalPart << 1) >> 0x15;\n  if (shiftedDecimal == 0) {\n    if ((decimalPart & 0x7fffffff | integerPart) == 0) {\n      return result;\n    }\n    result = FUN_080004d0(integerPart,decimalPart,0,0x43500000);\n    if (-0xc351 < exponent) {\n      shiftedDecimal = ((uint)((int)((ulonglong)result >> 0x20) << 1) >> 0x15) - 0x36;\n      goto LAB_08007210;\n    }\nLAB_080071ec:\n    tempVar1 = 0xc2f8f359;\n    tempVar2 = 0x1a56e1f;\n  }\n  else {\n    if (shiftedDecimal == 0x7ff) {\n      result = FUN_0800016c(integerPart,decimalPart,integerPart,decimalPart,unknownParam);\n      return result;\n    }\nLAB_08007210:\n    upperIntPart = (uint)((ulonglong)result >> 0x20);\n    tempVar1 = (undefined4)result;\n    combinedExponent = shiftedDecimal + exponent;\n    if (combinedExponent < 0x7ff) {\n      if (0 < combinedExponent) {\n        return CONCAT44(upperIntPart & 0x800fffff | combinedExponent * 0x100000,tempVar1);\n      }\n      if (combinedExponent + 0x35 < 0 == SCARRY4(combinedExponent,0x35)) {\n        result = CONCAT44(upperIntPart & 0x800fffff | (combinedExponent + 0x36) * 0x100000,tempVar1);\n        tempVar1 = 0;\n        tempVar2 = 0x3c900000;\n        goto LAB_0800722e;\n      }\n      if (exponent < 0xc351) {\n        result = FUNC_0800729c(0xc2f8f359,0x1a56e1f,tempVar1,upperIntPart);\n        goto LAB_080071ec;\n      }\n    }\n    result = FUNC_0800729c(0x8800759c,0x7e37e43c,tempVar1,upperIntPart);\n    tempVar1 = 0x8800759c;\n    tempVar2 = 0x7e37e43c;\n  }\nLAB_0800722e:\n  result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),tempVar1,tempVar2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080071c0": "calculate_float_number_080071c0",
                "param_1": "integerPart",
                "param_2": "decimalPart",
                "param_3": "exponent",
                "param_4": "unknownParam",
                "uVar1": "shiftedDecimal",
                "uVar2": "tempVar1",
                "iVar3": "combinedExponent",
                "uVar4": "tempVar2",
                "uVar5": "upperIntPart",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800729c": {
            "entrypoint": "0x0800729c",
            "current_name": "FUNC_0800729c",
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "calling": [
                "FUN_080071c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072ac": {
            "entrypoint": "0x080072ac",
            "current_name": "get_global_value_080072ac",
            "code": "\nundefined4 get_global_value_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "renaming": {
                "FUN_080072ac": "get_global_value_080072ac"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072b8": {
            "entrypoint": "0x080072b8",
            "current_name": "increment_data_pointer_080072b8",
            "code": "\nvoid incrementDataPointer_080072b8(int incrementAmount)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + incrementAmount;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072b8": "increment_data_pointer_080072b8",
                "param_1": "incrementAmount"
            },
            "calling": [
                "FUN_0800581c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d4": {
            "entrypoint": "0x080072d4",
            "current_name": "FUNC_080072d4",
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "calling": [
                "FUN_08000134",
                "FUN_08004fb4",
                "FUN_08000110"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072e0": {
            "entrypoint": "0x080072e0",
            "current_name": "FUNC_080072e0",
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 158648,
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": []
}