{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "reverse_copy_data_and_parse_format_string_080050fc",
                "param_1": "error_code",
                "param_2": "memory_blocks",
                "param_3": "format_string",
                "param_4": "arg_list",
                "puVar1": "p_flags",
                "iVar2": "bytes_written",
                "iVar3": "bytes_copied",
                "puVar4": "int_ptr",
                "piVar5": "arg_ptr",
                "bVar6": "flag_found",
                "pbVar7": "format_ptr",
                "pbVar8": "start_ptr",
                "unaff_r9": "previous_int_ptr",
                "local_8c": "previous_arg_ptr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "unused",
                "local_7c": "width",
                "local_74": "total_bytes_written",
                "local_70": "specifier",
                "local_6f": "space_flag",
                "local_6e": "plus_flag",
                "local_45": "sign_flag",
                "local_30": "unused_2"
            },
            "code": "int reverse_copy_data_and_parse_format_string_080050fc(undefined4 *error_code, int *memory_blocks, byte *format_string, int *arg_list){\n    int *arg_ptr;\n    int total_bytes_written = 0;\n    int width = -1;\n    int precision = 0;\n    byte *format_ptr = format_string;\n    while (*format_ptr != 0){\n        byte *start_ptr = format_ptr;\n        while (*format_ptr != 0x25){\n            if (*format_ptr == 0){\n                goto end_of_function;\n            }\n            format_ptr++;\n        }\n        int bytes_to_copy = (int)format_ptr - (int)start_ptr;\n        int copy_result = reverse_copy_data(error_code, memory_blocks, start_ptr, bytes_to_copy);\n        if (copy_result == -1){\n            if ((int)((uint)*(ushort *)(memory_blocks + 3) << 0x19) < 0) {\n                return -1;\n            }\n            return total_bytes_written;\n        }\n        total_bytes_written += bytes_to_copy;\n        if (*format_ptr == 0){\n            goto end_of_function;\n        }\n        uint flags = 0;\n        byte *flag_ptr = format_ptr + 1;\n        while (true){\n            int flag_index = find_character_08005614(PTR_DAT_080052d0, *flag_ptr);\n            if (flag_index == 0){\n                break;\n            }\n            flags = 1 << (flag_index - (int)PTR_DAT_080052d0 & 0xffU) | flags;\n            flag_ptr++;\n        }\n        byte specifier = *flag_ptr;\n        flag_ptr++;\n        if (flags << 0x1b < 0){\n            width = 0x20;\n        }\n        if (flags << 0x1c < 0){\n            width = 0x2b;\n        }\n        if (*flag_ptr == 0x2a){\n            arg_ptr = arg_list + 1;\n            int arg_value = *arg_list;\n            arg_list = arg_ptr;\n            if (-1 < arg_value){\n                goto width_specified;\n            }\n            width = -arg_value;\n            flags = flags | 2;\n        }\n        else{\n            bool width_specified = false;\n            int arg_value = 0;\n            while (true){\n                if (9 < *flag_ptr - 0x30){\n                    break;\n                }\n                arg_value = arg_value * 10 + (*flag_ptr - 0x30);\n                width_specified = true;\n                flag_ptr++;\n            }\n            if (width_specified){\n                width = arg_value;\n            }\n        }\n        if (*flag_ptr == 0x2e){\n            if (flag_ptr[1] == 0x2a){\n                flag_ptr += 2;\n                arg_ptr = arg_list + 1;\n                precision = *arg_list;\n                arg_list = arg_ptr;\n                if (precision < 0){\n                    precision = -1;\n                }\n            }\n            else{\n                bool precision_specified = false;\n                int arg_value = 0;\n                precision = 0;\n                while (true){\n                    flag_ptr++;\n                    if (9 < *flag_ptr - 0x30){\n                        break;\n                    }\n                    arg_value = arg_value * 10 + (*flag_ptr - 0x30);\n                    precision_specified = true;\n                }\n                if (precision_specified){\n                    precision = arg_value;\n                }\n            }\n        }\n        int conversion_index = find_character_08005614(PTR_DAT_080052d4, specifier, 3);\n        if (conversion_index != 0){\n            flag_ptr++;\n            flags = flags | 0x40 << (conversion_index - (int)PTR_DAT_080052d4 & 0xffU);\n        }\n        arg_ptr = arg_list + 1;\n        if (specifier == 0){\n            return total_bytes_written;\n        }\n        else if (specifier == 0x63){\n            int *int_ptr = (int *)FUNC_080053d4(error_code, &flags, memory_blocks, DAT_080052e0, &arg_list);\n            if (int_ptr == (int *)0xffffffff){\n                goto error;\n            }\n            total_bytes_written += (int)int_ptr;\n        }\n        else{\n            goto error;\n        }\n        format_ptr = flag_ptr;\n        continue;\n        width_specified:\n        flag_ptr++;\n        if (*flag_ptr == 0x2e){\n            flag_ptr++;\n            arg_ptr = arg_list + 1;\n            precision = *arg_list;\n            arg_list = arg_ptr;\n            if (precision < 0){\n                precision = -1;\n            }\n        }\n        goto width_parsed;\n        error:\n        if ((int)((uint)*(ushort *)(memory_blocks + 3) << 0x19) < 0){\n            return -1;\n        }\n        return total_bytes_written;\n        width_parsed:\n        arg_ptr = arg_list + 1;\n        int *int_ptr = (int *)FUNC_080053d4(error_code, &flags, memory_blocks, DAT_080052e0, &arg_list);\n        if (int_ptr == (int *)0xffffffff){\n            goto error;\n        }\n        total_bytes_written += (int)int_ptr;\n        format_ptr = flag_ptr;\n    }\n    end_of_function:\n    if ((int)((uint)*(ushort *)(memory_blocks + 3) << 0x19) < 0){\n        return -1;\n    }\n    return total_bytes_written;\n}",
            "called": [
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005044",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "reverse_copy_data_and_parse_format_string_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "store_parameter_in_pointer_08003320",
                "param_1": "parameter",
                "PTR_DAT_08003328": "pointer_to_data"
            },
            "code": "void store_parameter_in_pointer_08003320(void* parameter) {\n  *(void **)PTR_DAT_08003328 = parameter;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "store_parameter_in_pointer_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "process_input_and_string_data_08004410",
                "param_1": "param1",
                "param_2": "data",
                "param_3": "len",
                "local_10": "ptr_data",
                "local_c": "masked_param",
                "uStack_8": "param3"
            },
            "code": "void process_input_and_string_data_08004410(uint16_t param1, uint32_t* data, uint16_t len){\n  uint32_t ptr_data = *(uint32_t*)PTR_DAT_08004430;\n  uint32_t masked_param = param1 & 0xffff0000 | (uint32_t)*(uint16_t*)(PTR_DAT_08004430 + 4);\n  uint32_t param3 = data;\n  process_input_and_string_data_08004410_08004300(0x6c, &ptr_data, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "process_data_08001264",
                "param_1": "flags",
                "param_2": "data",
                "puVar1": "ptr1",
                "uVar2": "flag2",
                "uVar3": "flag3",
                "uVar4": "flag4",
                "uVar5": "flag5",
                "uVar6": "flag6",
                "iVar7": "index7",
                "uVar8": "flag8",
                "uVar9": "flag9",
                "uVar10": "flag10",
                "ptr11": "ptr11",
                "index12": "index12"
            },
            "code": "void process_data_08001264(uint *flags, uint *data) {\n  uint *ptr1;\n  uint flag2;\n  uint flag3;\n  uint flag4;\n  uint flag5;\n  uint flag6;\n  int index7;\n  uint flag8;\n  uint flag9;\n  uint flag10;\n  uint *ptr11;\n  int index12;\n  flag3 = data[7];\n  flag2 = data[6];\n  ptr1 = data;\n  flag4 = 0;\n  flag8 = 0;\n  do {\n    flag9 = 1 << (flag8 & 0xff);\n    flag5 = flag9 & *flags;\n    if (flag9 == flag5) {\n      flag6 = data[1];\n      if (flag6 == 0x12) {\n        flag4 = data[3] + 0xc;\n      }\n      else if (flag6 < 0x13) {\n        if (flag6 == 2) {\n          flag4 = data[3] + 8;\n        }\n        else if (flag6 < 3) {\n          if (flag6 == 0) goto LAB_SKIP;\n          if (flag6 == 1) {\n            flag4 = data[3];\n          }\n        }\n        else if (flag6 == 3) {\n          flag4 = 0;\n        }\n        else if (flag6 == 0x11) {\n          flag4 = data[3] + 4;\n        }\n      }\n      else {\n        if (flag6 != data[5]) {\n          if (data[5] < flag6) {\n            if ((flag6 != flag2) && (flag10 = data[8], flag6 != flag3)) goto LAB_SKIP;\n          }\n          else if (flag6 != data[6]) {\n            flag10 = data[6] + 0x10000;\n            if (flag6 != flag10) goto LAB_SKIP;\n          }\n        }\n        LAB_SKIP:\n        flag4 = data[2];\n        if (flag4 == 0) {\n          flag4 = 4;\n        }\n        else {\n          if (flag4 == 1) {\n            flags[4] = flag9;\n          }\n          if (flag4 != 1) {\n            flags[5] = flag9;\n          }\n          flag4 = 8;\n        }\n      }\n      if (flag5 < 0x100) {\n        flag9 = *flags;\n        index7 = flag8 << 2;\n        ptr11 = flags;\n      }\n      else {\n        flag9 = flags[1];\n        index7 = (flag8 + 0x3ffffff8) * 4;\n      }\n      if (0xff < flag5) {\n        ptr11 = flags + 1;\n      }\n      *ptr11 = flag9 & ~(0xf << (index7 & 0xff)) | flag4 << (index7 & 0xff);\n      ptr11 = (uint *)data[1];\n      if (((uint)ptr11 & 0x10000000) != 0) {\n        *(uint *)(data[4] + 0x18) = *(uint *)(data[4] + 0x18) | 1;\n        index12 = (flag8 & 3) << 2;\n        if (flags == data[5]) {\n          index7 = 0;\n        }\n        else if (flags == data[5] + 0x100) {\n          index7 = 1;\n        }\n        else if (flags == data[5] + 0x200) {\n          index7 = 2;\n        }\n        else if (flags == data[5] + 0x300) {\n          index7 = 3;\n        }\n        else {\n          index7 = 4;\n        }\n        *(uint *)(&data[0x1000] + (flag8 & 0xfffffffc)) = index7 << index12 | *(uint *)(&data[0x1000] + (flag8 & 0xfffffffc)) & ~(0xf << index12);\n        if (((uint)ptr11 & 0x10000) == 0) {\n          flag9 = *ptr1 & ~flag5;\n        }\n        else {\n          flag9 = *ptr1 | flag5;\n        }\n        *ptr1 = flag9;\n        if (((uint)ptr11 & 0x20000) == 0) {\n          flag9 = ptr1[1] & ~flag5;\n        }\n        else {\n          flag9 = ptr1[1] | flag5;\n        }\n        ptr1[1] = flag9;\n        if (((uint)ptr11 & 0x100000) == 0) {\n          flag9 = ptr1[2] & ~flag5;\n        }\n        else {\n          flag9 = ptr1[2] | flag5;\n        }\n        ptr1[2] = flag9;\n        if (((uint)ptr11 & 0x200000) == 0) {\n          flag5 = ptr1[3] & ~flag5;\n        }\n        else {\n          flag5 = flag5 | ptr1[3];\n        }\n        ptr1[3] = flag5;\n      }\n    }\n    flag8 = flag8 + 1;\n    if (flag8 == 0x10) {\n      return;\n    }\n  } while( true );\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e14",
                "FUN_0800458c",
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "process_data_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "process_and_store_MPU9250_data_08002ea0",
                "extraout_r1": "stored_parameter",
                "process_MPU9250_data_08002ad0": "process_MPU9250_data",
                "process_mpu9250_data_and_print_results_08002cb0": "process_MPU9250_data_and_print_results",
                "set_data_in_pointer_08003314": "set_data_pointer",
                "store_parameter_in_pointer_08003320": "store_parameter_in_pointer"
            },
            "code": "void process_and_store_MPU9250_data_08002ea0(undefined4 param_1, undefined4 param_2, undefined4 parameter_3, undefined4 parameter_4)\n{\n  undefined4 stored_parameter;\n  \n  process_MPU9250_data();\n  process_MPU9250_data_and_print_results();\n  set_data_pointer(DAT_08002ebc);\n  store_parameter_in_pointer(0, stored_parameter, parameter_3, parameter_4);\n  return;\n}",
            "called": [
                "FUN_08002cb0",
                "FUN_08003314",
                "FUN_08002ad0",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "process_and_store_MPU9250_data_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_080070b0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "mask": "mask",
                "sign_bit": "sign_bit",
                "lower_bits": "lower_bits"
            },
            "code": "unsigned long long calculate_080070b0(uint32_t param1, uint32_t param2, uint32_t param3)\n{\n    uint32_t uVar1;\n    uint32_t uVar2;\n    uint32_t uVar3;\n    uint32_t uVar4;\n    uint32_t uVar5;\n    uint32_t uVar6;\n    uint64_t uVar7;\n    uint64_t uVar8;\n    uint32_t mask;\n    uint32_t sign_bit;\n    uint32_t lower_bits;\n\n    mask = 0x7fffffff;\n    sign_bit = 0x80000000;\n    lower_bits = 0xfffff;\n\n    uVar6 = (param2 << 1) >> 0x15;\n    uVar5 = uVar6 - 0x3ff;\n    uVar2 = param2;\n\n    if ((int)uVar5 < 0x14) {\n        if ((int)uVar5 < 0) {\n            if ((param2 & mask | param1) == 0) {\n                return ((uint64_t)param2 << 32) | param1;\n            }\n            uVar2 = (param2 & lower_bits) | param1;\n            uVar1 = *(uint32_t *)(PTR_DAT_080071b8 + ((int)param2 >> 0x1f) * -8);\n            uVar3 = *(uint32_t *)((int)(PTR_DAT_080071b8 + ((int)param2 >> 0x1f) * -8) + 4);\n            uVar7 = FUNC_0800016c(param1,(-uVar2 | uVar2) >> 0xc & sign_bit | param2 & 0xfffe0000,uVar1,uVar3,param1,param2,param3);\n            uVar8 = FUNC_08000168((int)uVar7,(int)(uVar7 >> 0x20),uVar1,uVar3);\n            return (uVar8 & 0xffffffff) | ((uint64_t)((uVar8 >> 0x20) & mask | param2 & sign_bit) << 0x20);\n        }\n        uVar6 = DAT_080071bc >> (uVar5 & 0xff);\n        if ((param2 & uVar6 | param1) == 0) {\n            return ((uint64_t)param2 << 32) | param1;\n        }\n        uVar6 = uVar6 >> 1;\n        uVar4 = param2 & uVar6 | param1;\n        if (uVar4 != 0) {\n            if (uVar5 == 0x13) {\n                uVar4 = sign_bit;\n            }\n            else {\n                uVar4 = 0;\n            }\n            uVar2 = 0x40000 >> (uVar5 & 0xff) | param2 & ~uVar6;\n        }\n    }\n    else {\n        if (0x33 < (int)uVar5) {\n            if (uVar5 != 0x400) {\n                return ((uint64_t)param2 << 32) | param1;\n            }\n            uVar8 = FUNC_0800016c(param1,param2,param3);\n            return uVar8;\n        }\n        uVar6 = uVar6 - 0x413;\n        mask = 0xffffffff >> (uVar6 & 0xff);\n        if ((param1 & mask) == 0) {\n            return ((uint64_t)param2 << 32) | param1;\n        }\n        mask = mask >> 1;\n        uVar4 = param1;\n        if ((param1 & mask) != 0) {\n            uVar4 = 0x40000000 >> (uVar6 & 0xff) | param1 & ~mask;\n        }\n    }\n    uVar1 = *(uint32_t *)(PTR_DAT_080071b8 + ((int)param2 >> 0x1f) * -8);\n    uVar3 = *(uint32_t *)((int)(PTR_DAT_080071b8 + ((int)param2 >> 0x1f) * -8) + 4);\n    uVar7 = FUNC_0800016c(uVar4,uVar2,uVar1,uVar3,param1,param2,param3);\n    uVar8 = FUNC_08000168((int)uVar7,(int)(uVar7 >> 0x20),uVar1,uVar3);\n    return (uVar8 & 0xffffffff) | ((uint64_t)((uVar8 >> 0x20) & mask | param2 & sign_bit) << 0x20);\n}",
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "set_param_08001424",
                "param_1": "address",
                "param_2": "value",
                "param_3": "is_shifted"
            },
            "code": "void set_param_08001424(int address, int value, int is_shifted) {\n  if (is_shifted == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(address + 0x10) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "set_param_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_concatenated_string_null_08001028_08001028",
                "in_CY": "input_char"
            },
            "code": "bool is_concatenated_string_null_08001028_08001028(void)\n{\n  char input_char;\n  concatenate_values_08001004();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_08002ee8",
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "is_concatenated_string_null_08001028_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = is_valid_input_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = is_valid_input_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = check_if_values_are_identical_and_return_result_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = check_if_values_are_identical_and_return_result_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = set_high_bit_and_shift_right_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = check_if_string_terminates_with_null_char_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = set_high_bit_and_shift_right_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = set_high_bit_and_shift_right_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = set_high_bit_and_shift_right_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = check_if_values_are_identical_and_return_result_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_high_bit_and_shift_right_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_high_bit_and_shift_right_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = is_valid_input_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = check_if_string_terminates_with_null_char_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_080070b0();\n        iVar3 = check_if_values_are_identical_and_return_result_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = get_zero_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = check_if_string_terminates_with_null_char_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_080070b0();\n        iVar3 = check_if_values_are_identical_and_return_result_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)get_value_from_ptr_ptr_dat_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = check_if_values_are_identical_and_return_result_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = get_zero_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)get_value_from_ptr_ptr_dat_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)get_value_from_ptr_ptr_dat_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_08000a04",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_08007092",
                "FUN_0800709e",
                "FUN_080004d0",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_080070b0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "decode_bits_080006ac",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "unaff_r4": "unused_variable_1",
                "in_r12": "unused_variable_2",
                "uVar1": "msb_input_1",
                "uVar2": "mask",
                "uVar3": "temp_input_2",
                "bVar4": "are_inputs_zero"
            },
            "code": "ulonglong decode_bits_080006ac(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint mask = input_4 >> 0x14;\n  bool are_inputs_zero = (input_1 | input_2 << 1) == 0;\n  if (input_2 == input_3 || mask == input_3) {\n    if (are_inputs_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n    }\n    if ((input_3 | input_4 << 1) == 0) {\n      do {\n        uint msb_input_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(msb_input_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 |= (input_2 & 0x80000000) >> 0x1f;\n      if (mask != 0) {\n        return CONCAT44(input_2, input_1);\n      }\n    }\n    do {\n      uint msb_input_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(msb_input_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2, input_1);\n  }\n  uint temp_input_2 = input_4;\n  uint temp_input_1 = input_3;\n  if (!are_inputs_zero) {\n    if ((input_3 | input_4 << 1) == 0) {\n      temp_input_2 = input_2;\n      temp_input_1 = input_1;\n    }\n    else {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n    }\n  }\n  else if ((input_1 | input_2 << 0xc) != 0) {\n    temp_input_2 = input_2;\n    temp_input_1 = input_1;\n  }\n  else if (mask != input_3 && (input_3 | input_4 << 0xc) != 0) {\n    temp_input_2 = input_4;\n    temp_input_1 = input_3;\n  }\n  return CONCAT44(temp_input_2, temp_input_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "decode_bits_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "param_5": "buffer",
                "param_6": "length",
                "param_7": "arg4",
                "iVar1": "value1",
                "iVar2": "value2",
                "puVar3": "data_ptr",
                "uVar4": "data_value"
            },
            "code": "uint32_t process_data_08001828(uint32_t **data, uint32_t arg1, uint32_t arg2, uint32_t arg3, uint8_t *buffer, uint16_t length, uint32_t arg4)\n{\n    int value1 = get_value_from_pointer();\n    while (*buffer == ' ')\n    {\n        if (buffer == NULL || length == 0)\n            return 1;\n        uint32_t *data_ptr = *data;\n        if ((~data_ptr[6] & 2) != 0)\n        {\n            if (data + 0xd == 1)\n                return 2;\n            uint32_t data_value = *data_ptr;\n            *(uint8_t *)(data + 0xd) = 1;\n            *data_ptr = data_value & 0xfffff7ff;\n            *(uint8_t *)((int)data + 0x35) = 0x21;\n            *(uint8_t *)((int)data + 0x36) = 0x40;\n            data[0xe] = NULL;\n            int result = enable_and_check(data, arg1, arg2, arg3, arg4);\n            if (result != 0)\n            {\n                *(uint8_t *)(data + 0xd) = 0;\n                if (data[0xe] == (uint32_t *)0x4)\n                    return 1;\n                return 3;\n            }\n            goto LAB_080018e2;\n        }\n        int value2 = get_value_from_pointer();\n        if ((uint)(value2 - value1) < 0x2711)\n            continue;\n        *(uint8_t *)(data + 0xd) = 0;\n        *(uint8_t *)((int)data + 0x35) = 0x20;\n        return 2;\n    }\n    while (length != 0)\n    {\nLAB_080018e2:\n        int result = check_value_and_disable(data, arg4);\n        if (result != 0)\n            goto LAB_080018ee;\n        uint32_t *data_ptr = *data;\n        data_ptr[4] = (uint32_t)*buffer;\n        if ((int)(data_ptr[5] << 0x1d) < 0)\n        {\n            if ((length - 1) == 0)\n                break;\n            length -= 2;\n            data_ptr[4] = (uint32_t)buffer[1];\n            buffer += 2;\n        }\n        else\n        {\n            buffer++;\n            length--;\n        }\n    }\n    int result = check_value_and_disable(data, arg4);\n    if (result == 0)\n    {\n        **data |= 0x200;\n        *(uint8_t *)(data + 0xd) = 0;\n        *(uint8_t *)((int)data + 0x35) = 0x20;\n        *(uint8_t *)((int)data + 0x36) = 0;\n        return 0;\n    }\nLAB_080018ee:\n    if (data[0xe] == (uint32_t *)0x4)\n    {\n        **data |= 0x200;\n        return 1;\n    }\n    return 3;\n}",
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "initialize_array_08004c64",
                "puVar1": "array_ptr",
                "iVar2": "index"
            },
            "code": "void initialize_array_08004c64(void)\n{\n  // Initialize variables\n  unsigned char *array_ptr = PTR_DAT_08004c6c;\n  int index = 0;\n  // Set the first three elements to zero\n  *(unsigned short *)(array_ptr + 0x800) = 0;\n  *(unsigned short *)(array_ptr + 0x802) = 0;\n  *(unsigned short *)(array_ptr + 0x804) = 0;\n  // Set the remaining elements to zero\n  do {\n    array_ptr[index] = 0;\n    index++;\n  } while (index != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "initialize_array_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080071c0",
                "FUN_080070b0"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = get_value_from_pointer_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = get_value_from_pointer_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = get_value_from_pointer_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = get_value_from_pointer_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = get_value_from_pointer_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = get_value_from_pointer_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = get_value_from_pointer_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = get_value_from_pointer_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = get_value_from_pointer_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_high_bit_and_shift_right_08007092",
                "param_1": "number",
                "param_2": "bit_mask"
            },
            "code": "uint set_high_bit_and_shift_right_08007092(uint number, uint bit_mask) {\n                        uint high_bit_set_number = number | 0x80000000;\n                        uint shifted_number = high_bit_set_number + 0x100000;\n                        uint result = shifted_number >> 0x1f;\n                        return result;\n                    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_high_bit_and_shift_right_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "b",
                "iVar2": "data_ptr",
                "uVar3": "u",
                "uVar4": "result",
                "sVar5": "s",
                "puVar6": "ushort_ptr1",
                "puVar7": "ushort_ptr2",
                "bVar8": "bool_var"
            },
            "code": "int process_data_0800290c(int *data)\n{\n    byte b;\n    int data_ptr;\n    uint u;\n    undefined4 result;\n    short s;\n    ushort *ushort_ptr1;\n    ushort *ushort_ptr2;\n    bool bool_var;\n\n    if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n        return 2;\n    }\n    data_ptr = *data;\n    ushort_ptr1 = (ushort *)data[10];\n    if (data[2] == 0x1000) {\n        if (data[4] == 0) {\n            ushort_ptr2 = ushort_ptr1 + 1;\n            *ushort_ptr1 = (ushort)((uint)(*(int *)(data_ptr + 4) << 0x17) >> 0x17);\n        }\n        else {\n            ushort_ptr2 = (ushort *)((int)ushort_ptr1 + 1);\n            *ushort_ptr1 = (ushort)*(int *)(data_ptr + 4) & 0xff;\n        }\n        data[10] = (int)ushort_ptr2;\n    }\n    else {\n        if (data[4] == 0) {\n            b = (byte)*(undefined4 *)(data_ptr + 4);\n            data[10] = (int)ushort_ptr1 + 1;\n        }\n        else {\n            result = *(undefined4 *)(data_ptr + 4);\n            data[10] = (int)ushort_ptr1 + 1;\n            b = (byte)result & 0x7f;\n        }\n        *(byte *)ushort_ptr1 = b;\n    }\n    s = *(short *)((int)data + 0x2e) + -1;\n    *(short *)((int)data + 0x2e) = s;\n    if (s == 0) {\n        data_ptr = *data;\n        *(uint *)(data_ptr + 0xc) = *(uint *)(data_ptr + 0xc) & 0xffffffdf;\n        u = (uint)*(byte *)((int)data + 0x39);\n        bool_var = u != 0x32;\n        if (bool_var) {\n            u = *(uint *)(data_ptr + 0xc) & 0xfffffeff;\n        }\n        else {\n            data_ptr = 0x12;\n        }\n        if (bool_var) {\n            *(uint *)(data_ptr + 0xc) = u;\n            u = *(uint *)(data_ptr + 0x14) & 0xfffffffe;\n        }\n        if (bool_var) {\n            *(uint *)(data_ptr + 0x14) = u;\n            data_ptr = 1;\n        }\n        *(char *)((int)data + 0x39) = (char)data_ptr;\n        increment_if_match_08004c30();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "process_sensor_data_08002f28",
                "readProcessDataAndConvertToFixedPoint_08002b48": "get_current_value",
                "readAndProcessMPU9250Data_08002bf0": "get_sensor_data",
                "process_mpu9250_data_and_update_state_08002d88": "process_sensor_data",
                "thunk_get_value_from_pointer_0800115c": "get_previous_value",
                "calculate_value_08000c3c": "calculate_value",
                "FUNC_08000e54": "store_calculated_value",
                "store_parameter_in_pointer_08003320": "store_data_in_pointer",
                "PTR_DAT_08003000": "current_value_pointer",
                "PTR_DAT_08003004": "previous_value_pointer",
                "PTR_DAT_08003008": "calculated_value_pointer",
                "PTR_DAT_0800300c": "sensor_data_pointer",
                "PTR_DAT_08003010": "altitude_pointer",
                "PTR_DAT_08003014": "pressure_pointer",
                "PTR_DAT_08003018": "humidity_pointer",
                "PTR_DAT_0800301c": "sensor_data_pointer_2",
                "PTR_DAT_08003020": "temperature_pointer",
                "PTR_DAT_08003024": "sensor_data_pointer_3",
                "PTR_DAT_08003028": "sensor_data_pointer_4",
                "PTR_DAT_0800302c": "sensor_data_pointer_5",
                "extract_msb_bits_08001078": "get_sensor_value",
                "calculate_new_value_08002ed4": "calculate_altitude",
                "calculate_result_08002ec0": "calculate_pressure",
                "check_and_concatenate_string_08002ee8": "store_sensor_data"
            },
            "code": "void process_sensor_data_08002f28(void)\n{\n  int current_value = get_current_value();\n  int previous_value = get_previous_value();\n  int value_difference = current_value - previous_value;\n  float calculated_value = calculate_value(value_difference);\n  store_calculated_value(calculated_value);\n  store_data_in_pointer();\n  short temperature = get_temperature();\n  short humidity = get_humidity();\n  short pressure = get_pressure();\n  short altitude = calculate_altitude(pressure);\n  store_sensor_data(temperature, humidity, pressure, altitude);\n}\n",
            "called": [
                "FUN_08002b48",
                "FUN_08000cec",
                "FUN_08002ee8",
                "FUN_08002ec0",
                "FUN_08001078",
                "FUN_08003330",
                "FUN_08003320",
                "FUN_08000c3c",
                "FUN_08002ed4",
                "thunk_FUN_0800115c",
                "FUN_08000e54",
                "FUN_08002bf0",
                "FUN_08002d88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "process_input_and_string_data_08004384",
                "param_1": "param1",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "param2",
                "puVar1": "ptr",
                "local_14": "local_data1",
                "uStack_10": "local_data2",
                "local_c": "local_data3"
            },
            "code": "void process_input_and_string_data_08004384(uint8_t param1, uint32_t* data1, uint8_t data2, uint16_t data3, uint32_t param2) {\n  uint8_t* ptr = PTR_DAT_080043b8;\n  ptr[4] = 7;\n  ptr[5] = 0;\n  ptr[6] = 0x2a;\n  ptr[7] = 0;\n  uint32_t local_data1 = *(uint32_t*)ptr;\n  uint32_t local_data2 = *(uint32_t*)(ptr + 4);\n  ptr[8] = 0;\n  ptr[9] = 0;\n  ptr[10] = 0;\n  uint32_t local_data3 = (param2 & 0xff000000) | (uint32_t)*(uint16_t*)(ptr + 8);\n  process_input_and_string_data_08004384_08004300(0x65, &local_data1, 0xb, *(uint16_t*)(ptr + 8), param1);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "check_if_values_are_identical_and_return_result_080009a0",
                "in_ZR": "input_char"
            },
            "code": "bool check_if_values_are_identical_and_return_result_080009a0(void)\\n{\\n  char input_char;\\n  check_for_identical_values_and_return_param_08000990_08000990();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "check_if_values_are_identical_and_return_result_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "read_MS5611_data_and_store_08003298",
                "local_1c": "byte1",
                "local_1b": "byte2",
                "puVar1": "src",
                "puVar2": "data_array",
                "puVar3": "data_storage",
                "iVar4": "i",
                "PTR_DAT_08003304": "ptr_data_08003304",
                "PTR_DAT_0800330c": "data_array",
                "PTR_DAT_08003310": "data_storage",
                "PTR_s____Src_MS5611_c_08003308": "src"
            },
            "code": "void read_MS5611_data_and_store_08003298(){\n    uint16_t data;\n    uint16_t *PTR_DAT_0800330c = PTR_DAT_0800330c;\n    uint32_t *PTR_DAT_08003310 = PTR_DAT_08003310;\n    uint8_t byte1, byte2;\n    process_i2c_data_and_print_results(0xee, 0x1e, 1);\n    delay(10);\n    uint8_t *PTR_s____Src_MS5611_c_08003308 = PTR_s____Src_MS5611_c_08003308;\n    *PTR_DAT_08003304 = 8;\n    for(int i = 0; i < 0x10; i++){\n        read_and_process_data(0xee, (i + 0xa0) & 0xffff, &byte1, 1, PTR_s____Src_MS5611_c_08003308, 0x7c);\n        read_and_process_data(0xee, (i + 0xa1) & 0xffff, &byte2, 1, PTR_s____Src_MS5611_c_08003308, 0x7c);\n        data = (byte1 << 8) | byte2;\n        PTR_DAT_0800330c[i] = data;\n    }\n    for(int i = 0; i < 0x14; i++){\n        PTR_DAT_08003310[i] = 0;\n    }\n}",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "read_MS5611_data_and_store_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "process_input_and_string_data_08004300",
                "param_1": "key",
                "param_2": "data",
                "param_3": "data_length",
                "uVar1": "xor_result",
                "pbVar2": "current_byte"
            },
            "code": "void process_input_and_string_data_08004300(uint key, byte *data, uint data_length)\n{\n  uint xor_result;\n  byte *current_byte;\n  process_string_data(PTR_DAT_08004344);\n  process_input_data(data_length & 0xff);\n  xor_result = data_length & 0xff ^ key;\n  process_input_data(key);\n  for (current_byte = data; (int)current_byte - (int)data < (int)data_length; current_byte = current_byte + 1) {\n    process_input_data(*current_byte);\n    xor_result = xor_result ^ *current_byte;\n  }\n  process_input_data(xor_result);\n  return;\n}",
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004434",
                "FUN_080043f0",
                "FUN_08004458",
                "FUN_08004410",
                "FUN_080043bc",
                "FUN_08004348",
                "FUN_08004384"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_data_to_buffer_08005630",
                "param_1": "buffer_start_index",
                "param_2": "data",
                "param_3": "data_length",
                "puVar1": "data_ptr",
                "puVar2": "buffer_ptr"
            },
            "code": "void copy_data_to_buffer_08005630(int buffer_start_index, undefined *data, int data_length)\n{\n  undefined *buffer_ptr;\n  undefined *data_ptr;\n  buffer_ptr = (undefined *)(buffer_start_index - 1);\n  data_ptr = data + data_length;\n  for (; data != data_ptr; data++) {\n    buffer_ptr++;\n    *buffer_ptr = *data;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  reverse_bits_08000428();\n  validate_input_and_get_result_08005bc8();\n  uVar2 = calculate_float_bits_08000a30();\n  iVar4 = check_if_concatenated_values_not_empty_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    reverse_bits_08000428();\n    validate_input_and_get_result_08005bc8();\n    uVar3 = calculate_float_bits_08000a30();\n    iVar4 = check_if_concatenated_values_not_empty_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = reverse_bits_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = calculate_float_bits_08000a30();\n      uVar32 = reverse_bits_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = calculate_float_bits_08000a30();\n      uVar32 = reverse_bits_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = calculate_float_bits_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      reverse_bits_08000428();\n      validate_input_and_get_result_08005bc8();\n      iVar27 = calculate_float_bits_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      reverse_bits_08000428();\n      validate_input_and_get_result_08005bc8();\n      uVar8 = calculate_float_bits_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      reverse_bits_08000428();\n      validate_input_and_get_result_08005bc8();\n      uVar28 = calculate_float_bits_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      reverse_bits_08000428();\n      uVar32 = validate_and_shift_input();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = calculate_float_bits_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = reverse_bits_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_bits_08000428();\n      uVar32 = thunk_calculate_result_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_bits_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = reverse_bits_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_bits_08000428();\n      uVar32 = thunk_calculate_result_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_bits_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08005854",
                "FUN_08000adc",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08000e54",
                "FUN_08005bc8",
                "FUN_08000a30",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "check_for_identical_values_and_return_param_08000980",
                "param_1": "ptr1",
                "param_2": "ptr2",
                "param_3": "value1",
                "param_4": "value2"
            },
            "code": "void check_for_identical_values_and_return_param_08000980(void* value1, void* value2, void* ptr1, void* ptr2)\n{\n  check_for_identical_values_and_return_param_08000980_08000990_08000990(value1, value2, ptr1, ptr2);\n  return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "check_for_identical_values_and_return_param_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "run_experiment_08004028",
                "FUNC_0800458c": "start_data_collection",
                "set_bits_in_data_08003ff4": "set_data_bits",
                "set_param_values_08003f3c": "set_param_values",
                "thunk_do_nothing_08001168": "wait",
                "iVar1": "num_repetitions"
            },
            "code": "void run_experiment_08004028(void)\n{\n  int num_repetitions = 3;\n  start_data_collection();\n  set_data_bits();\n  while (num_repetitions-- > 0) {\n    set_param_values(1,0,0);\n    wait(100);\n    set_param_values(0,1,0);\n    wait(100);\n    set_param_values(0,0,1);\n    wait(100);\n  }\n  set_param_values(1,1,0);\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08003ff4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "run_experiment_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08006070",
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08006d68",
                "FUN_08005c70"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_values_08002368",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "original_value",
                "puVar2": "ptr"
            },
            "code": "void update_values_08002368(uint *value1, uint *value2)\n{\n  uint original_value = *value1;\n  if ((((value1 == ptr_data) || (value1 == (uint *)0x40000000)) ||\n      (value1 == ptr_data - 0x4a00)) || (value1 == ptr_data - 0x4900)) {\n    original_value = original_value & 0xffffff8f | value2[1];\n    if (((value1 == ptr_data) || (value1 == (uint *)0x40000000)) ||\n       ((value1 == ptr_data - 0x4a00 || (value1 == ptr_data - 0x4900)))) {\n      original_value = original_value & 0xfffffcff | value2[3];\n    }\n  }\n  *value1 = original_value;\n  value1[11] = value2[2];\n  value1[10] = *value2;\n  uint *ptr = ptr_data;\n  if (value1 == ptr_data) {\n    ptr = (uint *)value2[4];\n  }\n  if (value1 == ptr_data) {\n    value1[12] = (uint)ptr;\n  }\n  value1[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_values_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "update_bits_at_position_08002520",
                "param_1": "base_address",
                "param_2": "position",
                "param_3": "new_value",
                "uint": "uint32_t",
                "PTR_": "",
                "DAT_": "",
                "*": "",
                "&": "",
                "mask": "mask",
                "register_address": "register_address",
                "shifted_value": "shifted_value"
            },
            "code": "void update_bits_at_position_08002520(int base_address, uint8_t position, int new_value) {\n    uint32_t* register_address = (uint32_t*)(base_address + 0x20);\n    uint32_t mask = ~(1 << (position & 0xff));\n    *register_address &= mask;\n    uint32_t shifted_value = new_value << (position & 0xff);\n    *register_address |= shifted_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "update_bits_at_position_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_result_08002008",
                "uVar1": "first_value",
                "uVar2": "second_value",
                "uVar3": "bitmask",
                "uVar4": "leading_zeroes",
                "uVar5": "multiplier",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "local_24": "bitmask_array",
                "local_20": "multiplier_array"
            },
            "code": "uint calculate_result_08002008(void) {\n  undefined4 first_value;\n  undefined4 second_value;\n  uint result = 0;\n  uint bitmask = 0;\n  uint multiplier = 0;\n  undefined4 *ptr1 = (undefined4 *)PTR_DAT_0800208c;\n  undefined4 *ptr2 = local_array;\n  byte bitmask_array[4] = {1, 2, 0, 0};\n  undefined4 multiplier_array[5];\n  memcpy(multiplier_array, ptr1, 0x14);\n  do {\n    first_value = *ptr1;\n    second_value = ptr1[1];\n    ptr1 += 2;\n    *ptr2 = first_value;\n    ptr2[1] = second_value;\n    ptr2 += 2;\n  } while (ptr1 != (undefined4 *)(PTR_DAT_0800208c + 0x10));\n  bitmask = *(uint *)(DAT_08002090 + 4);\n  multiplier = DAT_08002094;\n  if ((bitmask & 0xc) == 8) {\n    uint bitmask_shifted = bitmask << 0xf;\n    if ((int)bitmask_shifted < 0) {\n      uint leading_zeroes = count_leading_zeroes(0x4000);\n      uint divider = bitmask & 0x20000;\n      uint bitmask_divider = bitmask_shifted >> (leading_zeroes & 0xff);\n      multiplier = DAT_08002094 / bitmask_array[divider >> 17];\n    }\n    uint bitmask_shifted_2 = bitmask & 0x3c0000;\n    uint leading_zeroes_2 = count_leading_zeroes(0x3c00);\n    multiplier *= *(byte *)((int)multiplier_array + ((bitmask_shifted_2) >> (leading_zeroes_2 & 0xff)));\n  }\n  return multiplier;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_result_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "set_flags_and_values_08002404",
                "param_1": "base_address",
                "param_2": "values",
                "uVar1": "flags3",
                "uVar2": "flags2",
                "iVar3": "value1"
            },
            "code": "void set_flags_and_values_08002404(int base_address, int *values) {\n  uint flags1 = *(uint *)(base_address + 0x20);\n  uint flags2 = *(uint *)(base_address + 4);\n  int value1 = *values;\n  uint flags3 = (flags1 & 0xffffffdf) | (values[2] << 4);\n  if (base_address == DAT_08002458) {\n    flags3 = (flags3 & 0xffffff7f) | (values[3] << 4);\n    flags2 = (flags2 & 0xfffff3ff) | ((values[5] | values[6]) << 2);\n  }\n  *(uint *)(base_address + 4) = flags2;\n  *(uint *)(base_address + 0x18) = (flags1 & 0xffff8cff) | (value1 << 8);\n  *(int *)(base_address + 0x38) = values[1];\n  *(uint *)(base_address + 0x20) = flags3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "validate_input_and_get_result_08005bc8",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "character",
                "iVar2": "result",
                "piVar3": "pointer_to_result",
                "puVar4": "pointer_to_value",
                "uVar5": "function_result",
                "local_50": "local_variable1",
                "local_4c": "local_variable2",
                "local_48": "local_variable3",
                "uStack_44": "stack_variable1",
                "local_40": "local_variable4",
                "uStack_3c": "stack_variable2",
                "local_38": "local_variable5",
                "local_30": "validation_result"
            },
            "code": "undefined8 validate_input_and_get_result_08005bc8(undefined4 input1, undefined4 input2)\n{\n    char character;\n    int result;\n    int *pointer_to_result;\n    undefined4 *pointer_to_value;\n    undefined8 function_result;\n    undefined4 local_variable1;\n    undefined *local_variable2;\n    undefined4 local_variable3;\n    undefined4 stack_variable1;\n    undefined4 local_variable4;\n    undefined4 stack_variable2;\n    undefined8 local_variable5;\n    int validation_result;\n\n    function_result = calculate_08006c0c();\n    character = *PTR_DAT_08005c68;\n    if (character == -1) {\n        return function_result;\n    }\n    validation_result = is_valid_input_08000a04(input1, input2, input1, input2);\n    if (validation_result != 0) {\n        return function_result;\n    }\n    result = check_if_string_terminates_with_null_char_080009b4(input1, input2, 0, 0);\n    if (result == 0) {\n        return function_result;\n    }\n    local_variable1 = 1;\n    local_variable2 = PTR_DAT_08005c6c;\n    local_variable3 = input1;\n    stack_variable1 = input2;\n    local_variable4 = input1;\n    stack_variable2 = input2;\n    if (character == '\\0') {\n        local_variable5 = 0;\n        goto LAB_08005c26;\n    }\n    local_variable5 = FUNC_08000724(0, 0, 0, 0);\n    if (character != '\\x02') {\n        goto LAB_08005c26;\n    }\n    pointer_to_value = (undefined4 *)get_value_from_ptr_ptr_dat_080072ac();\n    *pointer_to_value = 0x21;\nLAB_08005c26:\n    if (validation_result != 0) {\n        pointer_to_result = (int *)get_value_from_ptr_ptr_dat_080072ac();\n        *pointer_to_result = validation_result;\n    }\n    return local_variable5;\n}\n",
            "called": [
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080072ac",
                "FUN_080009b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "validate_input_and_get_result_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "disable_something_08001436",
                "param_1": "pointer_to_something",
                "iVar1": "something",
                "PTR_": "pointer_to_",
                "DAT_": "data_"
            },
            "code": "int disable_something_08001436(int *PTR_something)\n{\n  int something = *PTR_something;\n  if ((*(uint *)(something + 0x14) & 0x400) != 0) {\n    *(uint *)(something + 0x14) &= 0xfffffbff;\n    PTR_something[14] = 4;\n    *(undefined *)((int)PTR_something + 0x35) = 0x20;\n    *(undefined *)(PTR_something + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "disable_something_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "update_data_if_needed_08004a30",
                "puVar1": "data_ptr_1",
                "puVar2": "data_ptr_2",
                "puVar3": "data_ptr_3",
                "uVar4": "value"
            },
            "code": "void update_data_if_needed_08004a30()\n{\n  undefined *data_ptr_1 = PTR_DAT_08004a74;\n  undefined *data_ptr_2 = PTR_DAT_08004a78;\n  undefined *data_ptr_3 = PTR_DAT_08004a7c;\n  if (data_ptr_1[1] != '\\0') {\n    if (*data_ptr_2 == '\\0') {\n      undefined4 value = get_value_from_pointer_08003068();\n      value = FUNC_08000cec(value,DAT_08004a80);\n      *(undefined4 *)(data_ptr_3 + 0x1c) = value;\n      *data_ptr_2 = 1;\n    }\n    else {\n      undefined4 value = get_value_from_pointer_08003068();\n      value = FUNC_08000cec(value,DAT_08004a80);\n      *(undefined4 *)(data_ptr_3 + 0x30) = value;\n    }\n  }\n  if (data_ptr_1[1] == '\\0') {\n    if (*data_ptr_2 != '\\0') {\n      *data_ptr_2 = 0;\n    }\n    *(undefined4 *)(data_ptr_3 + 0x48) = *(undefined4 *)(data_ptr_1 + 4);\n  }\n  return;\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "update_data_if_needed_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "initialize_and_check_array_08004c70",
                "puVar1": "array_start",
                "puVar2": "ptr_dat_88",
                "uVar3": "uVar3",
                "uVar4": "uVar4",
                "iVar5": "iVar5"
            },
            "code": "int initialize_and_check_array_08004c70(void)\n{\n  uint32_t *array_start = PTR_DAT_08004c64;\n  uint8_t *ptr_dat_88 = PTR_DAT_08004c88;\n  uint8_t *ptr_dat_84 = PTR_DAT_08004c84;\n  if ((ptr_dat_88[0x39] == 0x01) || (ptr_dat_88[0x39] == 0x12)) {\n    if (ptr_dat_84 == NULL) {\n      return 1;\n    }\n    if (ptr_dat_88[0x38] != 0x01) {\n      ptr_dat_88[0x38] = 0x01;\n      *(uint32_t *)(ptr_dat_88 + 0x3c) = 0;\n      *(uint16_t *)(ptr_dat_88 + 0x2c) = 1;\n      *(uint16_t *)(ptr_dat_88 + 0x2e) = 1;\n      ptr_dat_88[0x38] = 0;\n      uint8_t uVar3 = (ptr_dat_88[0x39] == 0x12) ? 0x32 : 0x22;\n      int iVar5 = *(int *)ptr_dat_88;\n      ptr_dat_88[0x39] = uVar3;\n      uint32_t uVar4 = *(uint32_t *)(iVar5 + 0xc);\n      *(uint8_t **)(ptr_dat_88 + 0x28) = ptr_dat_84;\n      *(uint32_t *)(iVar5 + 0xc) = uVar4 | 0x100;\n      *(uint32_t *)(iVar5 + 0x14) = *(uint32_t *)(iVar5 + 0x14) | 0x01;\n      *(uint32_t *)(iVar5 + 0xc) = *(uint32_t *)(iVar5 + 0xc) | 0x20;\n      return 0;\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_and_check_array_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "check_for_identical_values_08000904",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "xor_of_values2_and_4",
                "bVar2": "is_value1_value2_zero",
                "bVar3": "is_value3_value4_zero"
            },
            "code": "uint check_for_identical_values_08000904(uint value1, uint value2, uint value3, uint value4)\n{\n  bool is_value1_value2_zero = (value1 | (value2 << 1)) == 0;\n  bool is_value3_value4_zero = (value3 | (value4 << 1)) == 0;\n  if (is_value1_value2_zero && is_value3_value4_zero) {\n    return 1;\n  }\n  bool are_values2_and_4_identical = value2 == value4;\n  bool are_values1_and_3_identical = value1 == value3;\n  if (are_values2_and_4_identical && are_values1_and_3_identical) {\n    return 0;\n  }\n  uint xor_of_values2_and_4 = value2 ^ value4;\n  bool is_xor_of_values2_and_4_zero = xor_of_values2_and_4 == 0;\n  bool is_xor_of_values2_and_4_negative = -1 < (int)xor_of_values2_and_4;\n  bool is_value4_less_than_or_equal_to_value2 = value4 <= value2;\n  bool is_param3_less_than_or_equal_to_param1 = value3 <= value1;\n  if (is_xor_of_values2_and_4_negative && is_value4_less_than_or_equal_to_value2) {\n    if (is_xor_of_values2_and_4_zero) {\n      return is_param3_less_than_or_equal_to_param1;\n    }\n    return is_param3_less_than_or_equal_to_param1 ? ~((int)value4 >> 0x1f) | 1 : ~((int)value2 >> 0x1f) | 1;\n  }\n  return ~((int)value4 >> 0x1f) | 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "check_for_identical_values_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data_array",
                "puVar6": "current_data_ptr",
                "uVar3": "current_data",
                "uVar1": "data_flag",
                "bVar8": "bool_val",
                "flag_ptr": "flag_pointer",
                "puVar4": "data_ptr",
                "sVar2": "data_counter"
            },
            "code": "void process_data_0800299a(uint **data_array)\n{\n  uint current_data = **data_array;\n  uint data_flag = (*data_array)[3];\n  if ((current_data & 0xf) == 0)\n  {\n    if (((int)(current_data << 0x1a) < 0) && ((int)((*data_array)[3] << 0x1a) < 0))\n    {\n      process_data_0800299a_0800290c();\n      return;\n    }\n  }\n  else\n  {\n    uint flag = (*data_array)[5] & 1;\n    if ((flag != 0) || ((data_flag & 0x120) != 0))\n    {\n      uint *flag_ptr = (uint *)(current_data << 0x1f);\n      if ((int)flag_ptr < 0)\n      {\n        bool bVar8 = (int)((*data_array)[3] << 0x17) < 0;\n        if (bVar8)\n        {\n          flag_ptr = (uint *)((uint)data_array[0xf] | 1);\n        }\n        if (bVar8)\n        {\n          data_array[0xf] = flag_ptr;\n        }\n      }\n      if (((int)(current_data << 0x1d) < 0) && (flag != 0))\n      {\n        data_array[0xf] = (uint *)((uint)data_array[0xf] | 2);\n      }\n      if (((int)(current_data << 0x1e) < 0) && (flag != 0))\n      {\n        data_array[0xf] = (uint *)((uint)data_array[0xf] | 4);\n      }\n      if (((int)(current_data << 0x1c) < 0) && (flag != 0))\n      {\n        data_array[0xf] = (uint *)((uint)data_array[0xf] | 8);\n      }\n      if (data_array[0xf] == (uint *)0x0)\n      {\n        return;\n      }\n      if (((int)(current_data << 0x1a) < 0) && ((int)((*data_array)[3] << 0x1a) < 0))\n      {\n        process_data_0800299a(data_array);\n      }\n      uint *current_data_ptr = *data_array;\n      if ((-1 < (int)data_array[0xf] << 0x1c) && ((current_data_ptr[5] & 0x40) == 0))\n      {\n        do_nothing(data_array);\n        data_array[0xf] = (uint *)0x0;\n        return;\n      }\n      current_data_ptr[3] = current_data_ptr[3] & 0xfffffedf;\n      current_data_ptr[5] = current_data_ptr[5] & 0xfffffffe;\n      *(undefined *)((int)data_array + 0x39) = 1;\n      do_nothing(data_array);\n      return;\n    }\n  }\n  if (((int)(current_data << 0x18) < 0) && ((int)((*data_array)[3] << 0x18) < 0))\n  {\n    if ((*(byte *)((int)data_array + 0x39) & 0xdf) == 0x12)\n    {\n      uint *data_ptr = data_array[8];\n      if (data_array[2] == (uint *)0x1000)\n      {\n        current_data_ptr[1] = *(ushort *)data_ptr & 0x1ff;\n        if (data_array[4] == (uint *)0x0)\n        {\n          data_ptr = (uint *)((int)data_ptr + 2);\n        }\n        else\n        {\n          data_ptr = (uint *)((int)data_ptr + 1);\n        }\n        data_array[8] = data_ptr;\n      }\n      else\n      {\n        data_array[8] = (uint *)((int)data_ptr + 1);\n        current_data_ptr[1] = (uint)*(byte *)data_ptr;\n      }\n      short data_counter = *(short *)((int)data_array + 0x26) + -1;\n      *(short *)((int)data_array + 0x26) = data_counter;\n      if (data_counter == 0)\n      {\n        current_data_ptr[3] = current_data_ptr[3] & 0xffffff7f;\n        current_data_ptr[3] = current_data_ptr[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(current_data << 0x19) < 0) && ((int)((*data_array)[3] << 0x19) < 0))\n  {\n    current_data_ptr[3] = current_data_ptr[3] & 0xffffffbf;\n    if (*(char *)((int)data_array + 0x39) == '2')\n    {\n      undefined new_flag = 0x22;\n    }\n    else\n    {\n      undefined new_flag = 1;\n    }\n    *(undefined *)((int)data_array + 0x39) = new_flag;\n    do_nothing_0800290a(data_array);\n  }\n  return;\n}",
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_ptr_dat_value_0800114c",
                "PTR_DAT_08001158": "ptr_dat_value"
            },
            "code": "void increment_ptr_dat_value_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n  *PTR_DAT_08001158 += 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "process_data_080052e4",
                "param_1": "data_offset",
                "param_2": "data_size",
                "param_3": "output_size",
                "param_4": "flags",
                "param_5": "callback",
                "iVar1": "status",
                "uVar2": "max_size",
                "uVar3": "padding_offset",
                "bVar4": "has_data_padding",
                "padding": "padding_size",
                "has_padding": "has_data_padding"
            },
            "code": "undefined4 process_data_080052e4(uint32_t data_offset, uint32_t *data_size, uint32_t *output_size, uint32_t flags, code *callback) {\n  int status = 0;\n  uint32_t max_size = data_size[4];\n  if ((int)data_size[4] < (int)data_size[2]) {\n    max_size = data_size[2];\n  }\n  *output_size = max_size;\n  if (*(char *)((int)data_size + 0x43) != '\\0') {\n    *output_size = max_size + 1;\n  }\n  if ((int)(*data_size << 0x1a) < 0) {\n    *output_size += 2;\n  }\n  uint32_t padding = *data_size & 6;\n  if (padding == 0) {\n    for (; (int)padding < (int)(data_size[3] - *output_size); padding++) {\n      status = (*callback)(data_offset, flags, (int)data_size + 0x19, 1);\n      if (status == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uint32_t has_padding = (uint32_t)*(byte *)((int)data_size + 0x43);\n  if (has_padding != 0) {\n    has_padding = 1;\n  }\n  uint32_t padding_offset = has_padding;\n  if ((int)(*data_size << 0x1a) < 0) {\n    *(undefined *)((int)data_size + has_padding + 0x43) = 0x30;\n    padding_offset += 2;\n    *(undefined *)((int)data_size + has_padding + 0x44) = *(undefined *)((int)data_size + 0x45);\n  }\n  status = (*callback)(data_offset, flags, (int)data_size + 0x43, padding_offset);\n  if (status != -1) {\n    uint32_t data_end = data_size[3];\n    bool has_data_padding = (*data_size & 6) != 4;\n    if (has_data_padding) {\n      data_end = 0;\n    }\n    uint32_t padding_size = 0;\n    if (!has_data_padding) {\n      padding_size = data_end - *output_size;\n    }\n    if (!has_data_padding) {\n      padding_size &= ~((int)padding_size >> 0x1f);\n    }\n    if ((int)data_size[4] < (int)data_size[2]) {\n      padding_size += (data_size[2] - data_size[4]);\n    }\n    while (padding_size != 0) {\n      status = (*callback)(data_offset, flags, (int)data_size + 0x1a, 1);\n      if (status == -1) {\n        return 0xffffffff;\n      }\n      padding_size--;\n    }\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "process_data_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_value_and_disable_080014e2",
                "param_1": "ptr_param1",
                "param_2": "param2",
                "iVar1": "value1",
                "iVar2": "result"
            },
            "code": "int check_value_and_disable_080014e2(int *ptr_param1, uint32_t param2) {\n    int value1 = get_value_from_pointer();\n    while (true) {\n        if (*(int *)(ptr_param1 + 0x14) << 0x18 < 0) {\n            return 0;\n        }\n        int result = disable_something(ptr_param1);\n        if (result != 0) {\n            break;\n        }\n        if ((param2 != 0xffffffff) && ((param2 == 0) || (result = get_value_from_pointer() - value1, param2 < (uint32_t)result))) {\n            ptr_param1[0xe] |= 0x20;\n            *(undefined *)((int)ptr_param1 + 0x35) = 0x20;\n            *(undefined *)(ptr_param1 + 0xd) = 0;\n            return 3;\n        }\n    }\n    return 1;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_value_and_disable_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_with_value_at_offset_0800142e",
                "param_1": "base_address",
                "param_2": "value",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "void xor_with_value_at_offset_0800142e(int base_address, uint value) {\n    uint* target_address = (uint*)(base_address + 0xC);\n    *target_address = value ^ *target_address;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_with_value_at_offset_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "update_flags_08004d8c",
                "param_1": "flag",
                "iVar1": "flag_value",
                "DAT_08004e04": "FLAG_A",
                "DAT_08004e08": "FLAG_PTR",
                "DAT_08004e0c": "FLAG_B",
                "DAT_08004e10": "FLAG_C",
                "_DAT_4002101c": "FLAG_D_BIT"
            },
            "code": "void update_flags_08004d8c(int *flag)\n{\n  int flag_value = *flag;\n  if (flag_value == DAT_08004e04)\n  {\n    *(uint *)(DAT_08004e08 + 0x18) |= DAT_08004e04_BIT;\n  }\n  else if (flag_value == DAT_08004e0c)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e0c_BIT;\n  }\n  else if (flag_value == DAT_08004e10)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= DAT_08004e10_BIT;\n  }\n  else if (flag_value == FLAG_D)\n  {\n    *(uint *)(DAT_08004e08 + 0x1c) |= _DAT_4002101c;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_flags_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250",
                "uVar1": "leading_zeroes",
                "PTR_DAT_0800227c": "ptr_data_1",
                "PTR_DAT_08002278": "ptr_data_2",
                "DAT_08002274": "dat_1"
            },
            "code": "unsigned int get_shifted_value_08002250(void)\n{\n  unsigned int leading_zeroes = count_leading_zeroes(0x1c0000);\n  unsigned int shifted_value = *(unsigned int *)PTR_DAT_0800227c >> PTR_DAT_08002278[(*(unsigned int *)(DAT_08002274 + 4) & 0x3800) >> (leading_zeroes & 0xff)];\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "check_if_string_terminates_with_null_char_080009b4",
                "in_CY": "input_char"
            },
            "code": "bool check_if_string_terminates_with_null_char_080009b4(void)\n{\n  char input_char;\n  check_for_identical_values_and_return_param_08000990_08000990();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "check_if_string_terminates_with_null_char_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_080011fc",
                "param_1": "bit_position",
                "DAT_08001210": "bit_array_base_address"
            },
            "code": "void set_bit_080011fc(uint bit_position) {\n    int* bit_array = (int*)(DAT_08001210 + (bit_position >> 5) * 4);\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *bit_array = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_value_from_pointer_08003068",
                "PTR_DAT_08003070": "pointer"
            },
            "code": "int get_value_from_pointer_08003068() {\n    int *PTR_DAT_08003070 = (int*) PTR_DAT_08003070;\n    return *PTR_DAT_08003070;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "len",
                "puVar1": "src_end"
            },
            "code": "void reverse_copy_08005646(char *dest, const char *src, int len) {\n    char *src_end = src + len;\n    if ((src < dest) && (dest < src_end)) {\n        dest = dest + len;\n        len = len - (int)(src_end - dest);\n        while (src_end + len != NULL) {\n            src_end--;\n            dest--;\n            *dest = *src_end;\n        }\n        return;\n    }\n    dest--;\n    for (; src != src_end; src++) {\n        dest++;\n        *dest = *src;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "reverse_copy_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "check_for_identical_values_and_return_param_08000990_08000990",
                "param_1": "input_param"
            },
            "code": "undefined4 check_for_identical_values_and_return_param_08000990_08000990(undefined4 input_param)\n{\n  check_for_identical_values_08000904();\n  return input_param;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "check_for_identical_values_and_return_param_08000990_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "check_initialized_08000110",
                "param_1": "input_param",
                "*PTR_DAT_08000128": "*PTR_INITIALIZED_FLAG",
                "DAT_0800012c": "DAT_INITIALIZED_VALUE",
                "PTR_FUN_08000130": "PTR_INITIALIZED_FUNCTION"
            },
            "code": "undefined* check_initialized_08000110(undefined* input_param) {\\n    if (*PTR_DAT_08000128 == \"\\0\") {\\n        if (DAT_0800012c != 0) {\\n            input_param = PTR_FUN_08000130;\\n        }\\n        *PTR_DAT_08000128 = 1;\\n    }\\n    return input_param;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "check_initialized_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "get_zero_0800709e"
            },
            "code": "int get_zero_0800709e() {\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "puVar1": "result_ptr",
                "uVar2": "val1",
                "uVar3": "val3",
                "uVar4": "val2"
            },
            "code": "void calculate_result_08002ec0(void)\n{\n  undefined *result_ptr;\n  undefined4 val1;\n  undefined4 val2;\n  undefined4 val3;\n  \n  result_ptr = PTR_DAT_08002ed0;\n  val2 = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  val3 = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  val1 = FUNC_08000ad8(0x3f800000, val2);\n  val1 = FUNC_08000cec(val1, val3);\n  val3 = FUNC_08000cec(val2,*(undefined4 *)result_ptr);\n  val1 = FUNC_08000adc(val3, val1);\n  *(undefined4 *)result_ptr = val1;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "process_input_and_string_data_08004434",
                "param_1": "input",
                "param_2": "data_size",
                "param_3": "stack_data",
                "local_10": "local_data",
                "local_c": "modified_data",
                "uStack_8": "stack_data"
            },
            "code": "void process_input_and_string_data_08004434(uint8_t input, uint32_t* data_ptr, uint32_t data_size) {\n  uint16_t string_data = *(uint16_t *)(PTR_DAT_08004454 + 4);\n  uint32_t modified_data = (data_size & 0xffff0000) | string_data;\n  uint32_t stack_data = data_ptr[0];\n  uint32_t local_data = *(uint32_t *)PTR_DAT_08004454;\n  process_input_and_string_data_08004434_08004300(input, &local_data, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_08006c0c",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "temp",
                "uVar2": "temp2",
                "iVar3": "shift",
                "uVar4": "temp3",
                "uVar5": "sum",
                "uVar6": "temp4",
                "iVar7": "count",
                "uVar8": "test",
                "uVar9": "bit_mask",
                "iVar10": "result",
                "uVar11": "trial",
                "uVar12": "top_bits",
                "uVar13": "result"
            },
            "code": "uint calculate_08006c0c(uint dividend, uint divisor)\n{\n  uint quotient = 0;\n  uint remainder = 0;\n  int shift = 0;\n  uint mask = 0x800000;\n  uint temp_dividend = dividend;\n  uint temp_divisor = divisor;\n  uint temp_quotient = 0;\n  uint temp_remainder = 0;\n  uint temp_mask = mask;\n\n  if ((dividend & ~divisor) == 0) {\n    temp_quotient = dividend / divisor;\n    quotient = dividend % divisor;\n    return (divisor << 32) | quotient;\n  }\n\n  if (divisor < 1) {\n    if ((divisor & 0x7fffffff | dividend) == 0) {\n      return (divisor << 32) | dividend;\n    }\n    if (divisor != 0) {\n      temp_quotient = dividend / divisor;\n      quotient = dividend % divisor;\n      return quotient;\n    }\n  }\n\n  shift = divisor >> 0x14;\n\n  if (shift == 0) {\n    while (divisor == 0) {\n      shift = shift + -0x15;\n      divisor = dividend >> 0xb;\n      dividend = dividend << 0x15;\n    }\n    uint num_bits = 0;\n    for (; -1 < (int)(divisor << 0xb); divisor = divisor << 1) {\n      num_bits = num_bits + 1;\n    }\n    shift = shift - (num_bits - 1);\n    divisor = divisor | dividend >> (0x20 - num_bits & 0xff);\n    dividend = dividend << (num_bits & 0xff);\n  }\n\n  uint power = divisor & 0xfffff | 0x100000;\n\n  if ((shift + -0x3ff) * -0x80000000 < 0) {\n    power = power * 2 - (dividend >> 0x1f);\n    dividend = dividend << 1;\n  }\n\n  power = power * 2 - (dividend >> 0x1f);\n  uint iterations = 0x16;\n  uint sum = 0;\n  uint test = 0x200000;\n  dividend = dividend << 1;\n\n  do {\n    int result = sum + test;\n    if (result <= (int)power) {\n      power = power - result;\n      sum = result + test;\n      quotient = quotient + test;\n    }\n    iterations = iterations - 1;\n    power = power * 2 - (dividend >> 0x1f);\n    test = test >> 1;\n    dividend = dividend << 1;\n  } while (iterations != 0);\n\n  uint top_bits = 0x20;\n  uint bit_mask = 0x80000000;\n  test = sum;\n  do {\n    uint trial = bit_mask + test;\n    uint remainder_copy = remainder;\n    if (((int)remainder < (int)power) || ((power == remainder && (trial <= dividend))))) {\n      bit_mask = bit_mask >> 1;\n      test = trial;\n      quotient = quotient + bit_mask;\n      power = power - remainder;\n      if (dividend < trial) {\n        power = power - 1;\n      }\n      dividend = dividend - trial;\n      remainder = remainder_copy + trial;\n    }\n    power = power * 2 - (dividend >> 0x1f);\n    top_bits = top_bits - 1;\n    dividend = dividend << 1;\n    bit_mask = bit_mask >> 1;\n  } while (top_bits != 0);\n\n  if ((dividend | power) != 0) {\n    if (remainder == 0xffffffff) {\n      quotient = quotient + 1;\n      remainder = top_bits;\n    }\n    else {\n      remainder = remainder + 1 & 0xfffffffe;\n    }\n  }\n  remainder = remainder >> 1;\n  if (quotient << 0x1f < 0) {\n    remainder = remainder | 0x80000000;\n  }\n  return ((quotient >> 1) + 0x3fe00000 + (shift + -0x3ff >> 1) * 0x100000) << 32 | remainder;\n}",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08006228",
                "FUN_08005c70",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "calculate_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "calculate_params_and_store_in_memory_0800426c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "result3",
                "uVar6": "msb_bits1",
                "uVar7": "msb_bits2",
                "uVar8": "msb_bits3",
                "uVar9": "result10"
            },
            "code": "void calculate_params_and_store_in_memory_0800426c(uint param1, uint param2, uint param3, uint param4) {\n  uint result1 = func1();\n  uint result2 = func2(param1, param2);\n  uint result3 = func1(result1, param3);\n  uint result4 = func2(result3, param4);\n  func1(result4, GLOBAL_VAR);\n  uint msb_bits1 = extract_msb_bits();\n  uint result5 = func2(result2, param3);\n  uint result6 = func1(result5, param4);\n  func1(result6, GLOBAL_VAR);\n  uint msb_bits2 = extract_msb_bits();\n  uint result7 = func2(result1, param3);\n  uint result8 = func1(result7, param4);\n  func1(result8, GLOBAL_VAR);\n  uint msb_bits3 = extract_msb_bits();\n  uint result9 = func2(param3, result2);\n  uint result10 = func1(result9, param4);\n  func1(result10, GLOBAL_VAR);\n  if (999 < (int)result10) {\n    result10 = 1000;\n  }\n  if (999 < (int)msb_bits3) {\n    msb_bits3 = 1000;\n  }\n  if (999 < (int)msb_bits2) {\n    msb_bits2 = 1000;\n  }\n  if (999 < (int)msb_bits1) {\n    msb_bits1 = 1000;\n  }\n  *(uint *)(PTR_08004264 + 8) = msb_bits3 & ~((int)msb_bits3 >> 0x1f);\n  *(uint *)(PTR_08004264 + 12) = msb_bits2 & ~((int)msb_bits2 >> 0x1f);\n  *(uint *)(PTR_08004264 + 4) = msb_bits1 & ~((int)msb_bits1 >> 0x1f);\n  *(uint *)PTR_08004264 = result10 & ~((int)result10 >> 0x1f);\n  set_parameter_in_memory();\n  set_parameter_value(*(uint *)(PTR_08004264 + 4));\n  set_param_in_global_data(*(uint *)(PTR_08004264 + 8));\n  set_param_in_memory(*(uint *)(PTR_08004264 + 12));\n  *(short *)PTR_08004268 = (short)*(uint *)PTR_08004264 + 1000;\n  *(short *)(PTR_08004268 + 2) = (short)*(uint *)(PTR_08004264 + 4) + 1000;\n  *(short *)(PTR_08004268 + 4) = (short)*(uint *)(PTR_08004264 + 8) + 1000;\n  *(short *)(PTR_08004268 + 6) = (short)*(uint *)(PTR_08004264 + 12) + 1000;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08003fdc",
                "FUN_08003fd0",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fe8",
                "FUN_08001078"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_params_and_store_in_memory_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "set_bit_at_position_08002538",
                "param_1": "bits",
                "param_2": "position",
                "puVar1": "dat_pointer",
                "puVar2": "bits_pointer"
            },
            "code": "uint32_t set_bit_at_position_08002538(uint32_t *bits, uint32_t position)\n{\n  update_bits_at_position(*bits, position, 1);\n  uint32_t *bits_pointer = *bits;\n  uint32_t *dat_pointer = DAT_08002560;\n  if (bits_pointer == dat_pointer) {\n    dat_pointer = (uint32_t *)(bits_pointer[0x11] | 0x8000);\n  }\n  if (bits_pointer == dat_pointer) {\n    bits_pointer[0x11] = (uint32_t)dat_pointer;\n  }\n  *bits_pointer = *bits_pointer | 1;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "read_and_process_data_080040e8",
                "param_1": "data",
                "param_2": "start_index",
                "param_3": "end_index",
                "param_4": "buffer_size",
                "puVar1": "data_ptr",
                "uVar2": "processed_data",
                "iVar3": "index",
                "puVar4": "buffer_ptr",
                "iVar5": "buffer_index"
            },
            "code": "void read_and_process_data_080040e8(void* data, int start_index, int end_index, int buffer_size) {\n    undefined *data_ptr;\n    undefined processed_data;\n    int index;\n    undefined *buffer_ptr;\n    int buffer_index;\n    \n    data_ptr = PTR_s____Src_i2c_c_08004118;\n    buffer_ptr = (undefined *)(end_index + -1);\n    buffer_index = buffer_size;\n    for (index = 0; index < buffer_size; index = index + 1) {\n        processed_data = check_and_process_data_0800407c(data, start_index + index & 0xffff, data_ptr, 0x4c, buffer_index);\n        buffer_ptr = buffer_ptr + 1;\n        *buffer_ptr = processed_data;\n    }\n    return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002b48",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08002d88",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "read_and_process_data_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "reverse_copy_and_parse_format_string_08004ffc",
                "param_1": "string",
                "param_2": "string_length",
                "param_3": "arg1",
                "param_4": "arg2",
                "local_78": "string_copy",
                "local_70": "max_int",
                "local_6c": "format_string_length",
                "local_6a": "max_short",
                "local_68": "string_copy_ptr",
                "local_64": "arg1_copy",
                "uStack_c": "arg2_copy",
                "uStack_8": "arg3_copy",
                "uStack_4": "unused"
            },
            "code": "void reverse_copy_and_parse_format_string_08004ffc(undefined *string, undefined4 string_length, undefined4 arg1, undefined4 arg2)\n{\n    undefined *string_copy[2];\n    undefined4 max_int = 0x7fffffff;\n    undefined2 format_string_length = 0x208;\n    undefined2 max_short = 0xffff;\n    undefined *string_copy_ptr;\n    undefined4 arg1_copy;\n    undefined4 arg2_copy;\n    undefined4 arg3_copy;\n\n    format_string_length = 0x208;\n    max_int = 0x7fffffff;\n    max_short = 0xffff;\n    string_copy[0] = string;\n    string_copy_ptr = string;\n    arg1_copy = arg1;\n    arg2_copy = arg2;\n    arg3_copy = string_length;\n    reverse_copy_data_and_parse_format_string_080050fc(*(undefined4 *)PTR_PTR_DAT_08005040, string_copy, arg1_copy);\n    *string_copy[0] = 0;\n    return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "reverse_copy_and_parse_format_string_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_value_from_pointer_0800115c",
                "PTR_DAT_08001164": "pointer_to_value"
            },
            "code": "int get_value_from_pointer_0800115c() {\n  int *PTR_DAT_08001164 = PTR_DAT_08001164;\n  int value = *PTR_DAT_08001164;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_080016f4",
                "FUN_0800209c",
                "FUN_08001b58",
                "FUN_08001460",
                "FUN_08001828",
                "FUN_08004c18",
                "thunk_FUN_0800115c",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "process_mpu9250_data_and_update_state_08002d88",
                "param_1": "data_size",
                "param_2": "data_type",
                "param_3": "data",
                "param_4": "data_id",
                "puVar3": "data",
                "puVar4": "acceleration_data_fixed_point",
                "puVar5": "acceleration_scale_factor",
                "puVar6": "acceleration_offset",
                "iVar7": "process_data_result",
                "uVar8": "acc_data_fixed",
                "uVar9": "acc_data_fixed_scale",
                "local_28": "x_acc",
                "uStack_26": "unused_1",
                "uStack_25": "unused_2",
                "local_24": "unused_3",
                "local_23": "unused_4",
                "local_22": "z_acc",
                "uStack_21": "unused_5"
            },
            "code": "void process_mpu9250_data_and_update_state_08002d88(int data_size, int data_type, uint8_t *data, int data_id) {\n    short x_acc;\n    short y_acc;\n    uint16_t z_acc;\n    int process_data_result = check_and_process_data(data_size, data_type, data, data_id);\n    if (process_data_result >= 0) {\n        read_and_process_data(data_size, 3, &x_acc, 7, data, data_id);\n        if ((int)((uint16_t)z_acc << 0x1c) < 0) {\n            *(short *)(acceleration_data + 2) = *(short *)(acceleration_data + 2) + 1;\n        }\n        else {\n            uint16_t acc_data = x_acc;\n            uint16_t acc_data2 = y_acc;\n            *(uint16_t *)acceleration_data = z_acc;\n            *(uint16_t *)(acceleration_data + 2) = acc_data;\n            *(uint16_t *)(acceleration_data + 4) = acc_data2;\n            uint32_t acc_data_fixed = convert_unsigned_int_to_fixed_point(z_acc);\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)acceleration_scale_factor);\n            acc_data_fixed = add_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_offset + 4));\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 4));\n            acc_data_fixed = add_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_offset + 8));\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 8));\n            *(uint32_t *)acceleration_data_fixed_point = acc_data_fixed;\n            acc_data_fixed = convert_unsigned_int_to_fixed_point(acc_data);\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)acceleration_scale_factor);\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 4));\n            acc_data_fixed = add_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_offset + 12));\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 8));\n            *(uint32_t *)(acceleration_data_fixed_point + 4) = acc_data_fixed;\n            acc_data_fixed = convert_unsigned_int_to_fixed_point(acc_data2);\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)acceleration_scale_factor);\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 4));\n            acc_data_fixed = add_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_offset + 16));\n            acc_data_fixed = multiply_fixed_point(acc_data_fixed, *(uint32_t *)(acceleration_scale_factor + 8));\n            *(uint32_t *)(acceleration_data_fixed_point + 8) = acc_data_fixed;\n        }\n    }\n}\n",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_0800407c",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_mpu9250_data_and_update_state_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "convert_unsigned_int_to_fixed_point_08000c44",
                "param_1": "unsigned_int_value",
                "uVar2": "shift_amount",
                "iVar1": "leading_zero_count",
                "iVar4": "sign_extension",
                "uVar3": "fixed_point_value",
                "uVar5": "rounding_bit",
                "count_leading_zeroes": "count_leading_zeroes",
                "DAT_0804a9a0": "0x800000",
                "DAT_0804a9a4": "0x4b000000",
                "DAT_0804a9a8": "0x80000000",
                "DAT_0804a9ac": "0x7fffffff",
                "DAT_0804a9b0": "0x80000000",
                "DAT_0804a9b4": "0xff",
                "PTR_fun_08000c1c": "PTR_fun_08000c1c",
                "PTR_fun_08000c20": "PTR_fun_08000c20"
            },
            "code": "uint convert_unsigned_int_to_fixed_point_08000c44(uint unsigned_int_value)\n{\n  int leading_zero_count;\n  uint sign_bit;\n  uint fixed_point_value;\n  int shift_amount;\n  uint rounding_bit;\n  uint sign_extension;\n  uint sign_extension_mask;\n  \n  sign_bit = unsigned_int_value & DAT_0804a9a8;\n  if ((int)sign_bit < 0) {\n    unsigned_int_value = -unsigned_int_value;\n  }\n  if (unsigned_int_value == 0) {\n    return 0;\n  }\n  leading_zero_count = count_leading_zeroes(unsigned_int_value);\n  shift_amount = leading_zero_count - 8;\n  sign_extension_mask = 0U >> (0x20 - shift_amount & DAT_0804a9b4);\n  sign_extension = sign_bit | DAT_0804a9a4;\n  sign_extension -= DAT_0804a9a0;\n  fixed_point_value = sign_extension + (unsigned_int_value << (shift_amount & DAT_0804a9b4));\n  rounding_bit = 0U << (shift_amount & DAT_0804a9b4);\n  if (7 < leading_zero_count) {\n    fixed_point_value += rounding_bit + (DAT_0804a9ac < 0U);\n    if (rounding_bit == DAT_0804a9a8) {\n      fixed_point_value &= DAT_0804a9b4fffffe;\n    }\n    return fixed_point_value;\n  }\n  fixed_point_value += (unsigned_int_value >> (0x20 - (leading_zero_count + 0x18U) & DAT_0804a9b4)) - ((int)rounding_bit >> 0x1f);\n  if ((rounding_bit & DAT_0804a9ac) == 0) {\n    fixed_point_value &= ~(rounding_bit >> 0x1f);\n  }\n  return fixed_point_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002b48",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "convert_unsigned_int_to_fixed_point_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08000a04(uint32_t input1, int32_t input2, uint32_t input3, int32_t input4) {\n                      int is_input2_valid = ((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0);\n                      int is_input4_valid = ((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0));\n                      return is_input2_valid && is_input4_valid;\n                    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "data",
                "iVar1": "val1",
                "iVar2": "val2",
                "uVar3": "val7",
                "iVar4": "val4",
                "iVar5": "val5",
                "iVar6": "data_ptr",
                "DAT_08002720": "PTR_DAT_08002720"
            },
            "code": "void update_values_080025e8(int *data)\n{\n  int data_ptr = *data;\n  uint data_4 = data[4];\n  uint data_1 = data[1];\n  uint data_3 = data[3];\n  uint data_2 = data[2];\n  uint data_5 = data[5];\n  uint data_6 = data[6];\n  *(uint *)(data_ptr + 0x10) = (*(uint *)(data_ptr + 0x10) & 0xffffcfff) | data_3;\n  *(uint *)(data_ptr + 0xc) = data_2 | data_4 | data_5 | (*(uint *)(data_ptr + 0xc) & 0xffffe9f3);\n  *(uint *)(data_ptr + 0x14) = (*(uint *)(data_ptr + 0x14) & 0xfffffcff) | data_6;\n  if (data_ptr == DAT_08002720) {\n    int val1 = get_shifted_value_08002250();\n    int val2 = get_shifted_value_08002250();\n    int val3 = get_shifted_value_08002250();\n    int val4 = count_leading_zeroes_and_shift_08002220();\n    int val5 = count_leading_zeroes_and_shift_08002220();\n    int val6 = count_leading_zeroes_and_shift_08002220();\n    uint val7 = (val1 * 0x19) / (data_1 << 2);\n    uint val8 = (val2 * 0x19) / (data_1 << 2);\n    uint val9 = (val3 * 0x19) / (data_1 << 2);\n    *(uint *)(data_ptr + 8) = (((val7 + (val8 / 100)) * -100) + ((val9 / 100) * 0x10 + 0x32)) & 0xff0 | ((val6 * 0x10 + 0x32) / 100) & 0xf | (val4 * 0x10);\n  }\n  else {\n    int val1 = count_leading_zeroes_and_shift_08002220();\n    int val2 = count_leading_zeroes_and_shift_08002220();\n    int val3 = count_leading_zeroes_and_shift_08002220();\n    int val4 = count_leading_zeroes_and_shift_08002220();\n    int val5 = count_leading_zeroes_and_shift_08002220();\n    int val6 = count_leading_zeroes_and_shift_08002220();\n    uint val7 = (val1 * 0x19) / (data_1 << 2);\n    uint val8 = (val2 * 0x19) / (data_1 << 2);\n    uint val9 = (val3 * 0x19) / (data_1 << 2);\n    *(uint *)(data_ptr + 8) = (((val7 + (val8 / 100)) * -100) + ((val9 / 100) * 0x10 + 0x32)) & 0xff0 | ((val6 * 0x10 + 0x32) / 100) & 0xf | (val4 * 0x10);\n  }\n}\n",
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "readProcessDataAndConvertToFixedPoint_08002b48",
                "in_r3": "inputData",
                "local_18": "data1",
                "local_14": "data2",
                "PTR_s____Src_MPU9250_c_08002be4": "dataPtr1",
                "PTR_DAT_08002be8": "dataPtr2",
                "PTR_DAT_08002bec": "dataPtr3",
                "convert_unsigned_int_to_fixed_point_08000c44": "convertUnsignedIntToFixedPoint_08000c44",
                "FUNC_08000cec": "function_08000cec",
                "puVar1": "pointer1"
            },
            "code": "void readProcessDataAndConvertToFixedPoint_08002b48(void)\n{\n  uint16_t data1;\n  uint32_t data2;\n  uint32_t data3;\n  uint32_t convertedData1;\n  uint32_t convertedData2;\n  uint32_t convertedData3;\n  data1 = 0;\n  data2 = in_r3 & 0xffff0000;\n  read_and_process_data_080040e8(0xd0,0x3b,&data1,6,PTR_s____Src_MPU9250_c_08002be4,0x58);\n  *(ushort *)PTR_DAT_08002be8 = CONCAT11((uint8_t)data1, data1 >> 8);\n  *(short *)(PTR_DAT_08002be8 + 2) = CONCAT11(data1 >> 16, data1 >> 24);\n  *(short *)(PTR_DAT_08002be8 + 4) = CONCAT11((uint8_t)data2, data2 >> 8);\n  convertedData1 = convertUnsignedIntToFixedPoint_08000c44();\n  convertedData1 = FUNC_08000cec(convertedData1,0x40800000);\n  convertedData1 = FUNC_08000cec(convertedData1,0x38000000);\n  *(uint32_t *)PTR_DAT_08002bec = convertedData1;\n  convertedData2 = convertUnsignedIntToFixedPoint_08000c44(data1 >> 16);\n  convertedData2 = FUNC_08000cec(convertedData2,0x40800000);\n  convertedData2 = FUNC_08000cec(convertedData2,0x38000000);\n  *(uint32_t *)(PTR_DAT_08002bec + 4) = convertedData2;\n  convertedData3 = convertUnsignedIntToFixedPoint_08000c44(data2);\n  convertedData3 = FUNC_08000cec(convertedData3,0x40800000);\n  convertedData3 = FUNC_08000cec(convertedData3,0x38000000);\n  *(uint32_t *)(PTR_DAT_08002bec + 8) = convertedData3;\n  return;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "readProcessDataAndConvertToFixedPoint_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_data_and_clear_memory_08004f68",
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jumptable_ptr",
                "set_flags_08004f10": "set_flags",
                "execute_functions_08004fb4": "execute_functions",
                "runSensorDataLoop_080041ae": "run_sensor_data_loop"
            },
            "code": "void copy_data_and_clear_memory_08004f68(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jumptable_ptr;\n  for (index = 0; index < (PTR_DAT_08004fa4 - PTR_DAT_08004fa0); index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n    *data_ptr = 0;\n  }\n  set_flags();\n  execute_functions();\n  jumptable_ptr = (code *)0x8004f9a;\n  run_sensor_data_loop();\n  (*jumptable_ptr)();\n  return;\n}",
            "called": [
                "FUN_080041ae",
                "FUN_08004f10",
                "FUN_08004fb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_clear_memory_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "set_param_bits_08001170",
                "param_1": "param_value",
                "DAT_08001190": "data_start",
                "PTR_0800119c": "data_end",
                "data_ptr": "data_ptr",
                "mask": "mask",
                "param_bits": "param_bits",
                "new_value": "new_value"
            },
            "code": "void set_param_bits_08001170(uint param_value)\n{\n    uint* data_ptr = (uint*)(DAT_08001190 + 0xc);\n    uint mask = 0xf8ff;\n    uint param_bits = (param_value & 7) << 8;\n    uint new_value = (*data_ptr & mask) | 0x5fa0000 | param_bits;\n    *data_ptr = new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_param_bits_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "readAndProcessMPU9250Data_08002bf0",
                "local_20": "accelerometerData",
                "local_1c": "gyroscopeData",
                "PTR_s____Src_MPU9250_c_08002c9c": "MPU9250_DATA_PTR",
                "PTR_DAT_08002ca0": "dataPtr1",
                "PTR_DAT_08002ca4": "dataPtr2",
                "DAT_08002ca8": "MPU9250_SENSITIVITY_SCALE_FACTOR",
                "PTR_DAT_08002cac": "dataPtr2",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2",
                "uVar3": "rawData",
                "CONCAT11": "combineBytes",
                "FUNC_08000cec": "performFixedPointMultiplication",
                "FUNC_08000ad8": "performFixedPointAddition",
                "convert_unsigned_int_to_fixed_point_08000c44": "convertUnsignedIntToFixedPoint"
            },
            "code": "void readAndProcessMPU9250Data_08002bf0(void)\n{\n    unsigned char *PTR_DAT_08002ca0;\n    unsigned char *PTR_DAT_08002ca4;\n    unsigned int rawData;\n    unsigned int convertedData;\n    unsigned int local_20 = 0;\n    unsigned short local_1c = 0;\n    \n    read_and_process_data_080040e8(0xd0, 0x43, &local_20, 6, PTR_s____Src_MPU9250_c_08002c9c, 0x7b);\n    PTR_DAT_08002ca0 = PTR_s____Src_MPU9250_c_08002c9c;\n    *(unsigned short *)PTR_s____Src_MPU9250_c_08002c9c = (unsigned short)local_20;\n    *(unsigned short *)(PTR_DAT_08002ca0 + 2) = (unsigned short)(local_20 >> 16);\n    *(unsigned short *)(PTR_DAT_08002ca0 + 4) = (unsigned short)local_1c;\n    rawData = convertUnsignedIntToFixedPoint(0);\n    convertedData = performFixedPointMultiplication(rawData, DAT_08002ca8);\n    convertedData = performFixedPointMultiplication(convertedData, 0.375);\n    convertedData = performFixedPointAddition(convertedData, *(unsigned int *)(PTR_s____Src_MPU9250_c_08002c9c + 12));\n    PTR_DAT_08002ca4 = PTR_s____Src_MPU9250_c_08002c9c + 16;\n    *(unsigned int *)PTR_s____Src_MPU9250_c_08002c9c = convertedData;\n    rawData = convertUnsignedIntToFixedPoint(local_1c);\n    convertedData = performFixedPointMultiplication(rawData, DAT_08002ca8);\n    convertedData = performFixedPointMultiplication(convertedData, 0.375);\n    convertedData = performFixedPointAddition(convertedData, *(unsigned int *)(PTR_DAT_08002ca0 + 16));\n    *(unsigned int *)(PTR_DAT_08002ca4 + 4) = convertedData;\n    rawData = convertUnsignedIntToFixedPoint(local_20 >> 16);\n    convertedData = performFixedPointMultiplication(rawData, DAT_08002ca8);\n    convertedData = performFixedPointMultiplication(convertedData, 0.375);\n    convertedData = performFixedPointAddition(convertedData, *(unsigned int *)(PTR_DAT_08002ca0 + 20));\n    *(unsigned int *)(PTR_DAT_08002ca4 + 8) = convertedData;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "readAndProcessMPU9250Data_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "process_MPU9250_data_08002ad0",
                "PTR_s____Src_MPU9250_c_08002b44": "MPU9250_src_data",
                "check_and_process_data_0800407c": "check_and_process_data",
                "process_i2c_data_and_print_results_0800403c": "process_i2c_data_and_print_results"
            },
            "code": "void process_MPU9250_data_08002ad0()\n{\n  check_and_process_data(0xd0, 0x75, PTR_s____Src_MPU9250_c_08002b44, 0x3b);\n  process_i2c_data_and_print_results(0xd0, 0x6b, 0x80, 1);\n  process_i2c_data_and_print_results(0xd0, 0x6b, 1);\n  process_i2c_data_and_print_results(0xd0, 0x6c, 0, 1);\n  process_i2c_data_and_print_results(0xd0, 0x19, 0, 1);\n  process_i2c_data_and_print_results(0xd0, 0x1d, 3, 1);\n  process_i2c_data_and_print_results(0xd0, 0x1a, 3, 1);\n  process_i2c_data_and_print_results(0xd0, 0x1b, 0x10, 1);\n  process_i2c_data_and_print_results(0xd0, 0x1c, 8, 1);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "process_MPU9250_data_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_values_for_swap_08001050",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "code": "bool check_values_for_swap_08001050(void)\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  concatenate_values_and_swap_params_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "check_values_for_swap_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_for_identical_values_and_return_param_08000990_08000990_and_return_false_if_CY_true_080009c8",
                "in_ZR": "is_ZR",
                "in_CY": "is_CY"
            },
            "code": "bool check_for_identical_values_and_return_param_08000990_08000990_and_return_false_if_CY_true_080009c8(void)\n{\n  undefined is_ZR;\n  undefined is_CY;\n  check_for_identical_values_and_return_param_08000990_08000990();\n  return (bool)is_ZR || !(bool)is_CY;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "check_for_identical_values_and_return_param_08000990_08000990_and_return_false_if_CY_true_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_new_value_08002ed4",
                "puVar1": "data_pointer",
                "uVar2": "third_value",
                "uVar3": "first_value",
                "uVar4": "second_value"
            },
            "code": "void calculate_new_value_08002ed4(void)\n{\n  undefined *data_pointer;\n  undefined4 first_value;\n  undefined4 second_value;\n  undefined4 third_value;\n  \n  data_pointer = PTR_DAT_08002ee4;\n  second_value = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n  first_value = *(undefined4 *)PTR_DAT_08002ee0;\n  \n  third_value = FUNC_08000ad8(0x3f800000, second_value);\n  third_value = FUNC_08000cec(third_value, first_value);\n  first_value = FUNC_08000cec(second_value, *(undefined4 *)data_pointer);\n  third_value = FUNC_08000adc(first_value, third_value);\n  *(undefined4 *)data_pointer = third_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "num1",
                "param_2": "num2",
                "uVar2": "num1_doubled",
                "uVar3": "num2_doubled",
                "uVar4": "num1_or_num2",
                "bVar1": "has_overflow",
                "bVar5": "is_num1_or_num2_zero"
            },
            "code": "uint calculate_result_08000f9c(uint num1, uint num2)\n{\n  bool has_overflow;\n  uint num1_doubled = num1 * 2;\n  uint num2_doubled = num2 * 2;\n  \n  if (((int)num1_doubled >> 0x18 == -1 || (int)num2_doubled >> 0x18 == -1) &&\n     ((((int)num1_doubled >> 0x18 == -1 && ((num1 & 0x7fffff) != 0)) ||\n      (((int)num2_doubled >> 0x18 == -1 && ((num2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  \n  uint num1_or_num2 = num1_doubled | num2 & 0x7fffffff;\n  bool is_num1_or_num2_zero = num1_or_num2 == 0;\n  if (!is_num1_or_num2_zero) {\n    num1_or_num2 = num1 ^ num2;\n    is_num1_or_num2_zero = num1_or_num2 == 0;\n  }\n  has_overflow = -1 < (int)num1_or_num2;\n  if (has_overflow) {\n    num1 = num1_doubled + num2 * -2;\n    is_num1_or_num2_zero = num1 == 0;\n  }\n  if ((has_overflow && num2_doubled <= num1_doubled) && !is_num1_or_num2_zero) {\n    num1 = (int)num2 >> 0x1f;\n  }\n  if (!has_overflow || num2_doubled > num1_doubled) {\n    num1 = ~((int)num2 >> 0x1f);\n  }\n  if (!is_num1_or_num2_zero) {\n    num1 = num1 | 1;\n  }\n  return num1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = calculate_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = calculate_shifted_value_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = check_if_string_is_empty_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = check_for_identical_values_and_return_param_08000990_08000990_and_return_false_if_CY_true_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = calculate_number_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = shift_left_64_bits_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_08000168",
                "FUN_08000404",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080071c0",
                "FUN_080070a4",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_value_08000c3c",
                "param_1": "input_param",
                "iVar1": "leading_zero_count",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "left_shifted",
                "0U": "right_shifted",
                "result": "result",
                "carry": "carry"
            },
            "code": "uint calculate_value_08000c3c(uint input_param)\n{\n  int leading_zero_count = count_leading_zeroes(input_param);\n  uint shift_amount = leading_zero_count - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zero_count > 7) {\n    uint left_shifted = input_param << (shift_amount & 0xff);\n    uint right_shifted = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < (0 << (shift_amount & 0xff)));\n    uint result = multiplier + left_shifted + right_shifted + carry;\n    if ((0 << (shift_amount & 0xff)) == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint left_shifted = input_param << ((leading_zero_count + 0x18U) & 0xff);\n  uint right_shifted = (input_param >> (0x20 - ((leading_zero_count + 0x18U) & 0xff))) - ((int)left_shifted >> 0x1f);\n  uint carry = ~(left_shifted >> 0x1f);\n  uint result = multiplier + right_shifted & carry;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_value_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "process_and_send_data_080043bc",
                "uVar1": "first_half",
                "uVar2": "second_half",
                "puVar3": "data_ptr1",
                "puVar4": "data_ptr2",
                "local_24": "data_array",
                "local_1c": "local_array"
            },
            "code": "void process_and_send_data_080043bc(void)\n{\n  undefined4 first_half;\n  undefined4 second_half;\n  undefined4 *data_ptr1;\n  undefined4 *data_ptr2;\n  undefined4 data_array[2];\n  undefined2 local_array[6];\n  \n  data_ptr1 = data_array;\n  data_ptr2 = (undefined4 *)PTR_DAT_080043ec;\n  do {\n    first_half = *data_ptr2;\n    second_half = data_ptr2[1];\n    data_ptr2 = data_ptr2 + 2;\n    *data_ptr1 = first_half;\n    data_ptr1[1] = second_half;\n    data_ptr1 = data_ptr1 + 2;\n  } while (data_ptr2 != (undefined4 *)(PTR_DAT_080043ec + 0x10));\n  *(undefined2 *)data_ptr1 = *(undefined2 *)data_ptr2;\n  process_input_and_string_data_08004300(0x66, data_array, 0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_and_send_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "check_param_08001214",
                "param_1": "param",
                "puVar1": "param_array",
                "iVar2": "var"
            },
            "code": "int check_param_08001214(unsigned int param) {\n  unsigned int* param_array = DAT_08001238;\n  int var = DAT_0800123c;\n  if (param - 1U < 0x1000000) {\n    param_array[1] = param - 1U;\n    *(unsigned char*)(var + 0x23) = 0xf0;\n    param_array[2] = 0;\n    *param_array = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "check_param_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_parameter_in_memory_08003fc4",
                "param_1": "parameter",
                "PTR_DAT_08003fcc": "ptr",
                "offset": "offset",
                "address": "address"
            },
            "code": "void set_parameter_in_memory_08003fc4(int parameter) {\n    int* PTR_DAT_08003fcc = *(int*)PTR_DAT_08003fcc;\n    int offset = 0x40;\n    int* address = PTR_DAT_08003fcc + offset;\n    *address = parameter;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_parameter_in_memory_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "calculate_shifted_value_08000404",
                "param_1": "input_value",
                "uVar1": "shift_amount",
                "uVar2": "abs_input_value",
                "uVar3": "remaining_bits",
                "iVar4": "leading_zeros",
                "uVar5": "shift_amount_minus_11",
                "uVar6": "is_negative_input",
                "in_r12": "unused_register",
                "bVar7": "is_remaining_bits_negative",
                "bVar8": "is_remaining_bits_zero",
                "bVar9": "is_remaining_bits_positive",
                "SBORROW4": "is_subtraction_overflow",
                "SCARRY4": "is_addition_overflow"
            },
            "code": "ulonglong calculate_shifted_value_08000404(uint input_value)\n{\n  uint abs_input_value, leading_zeros, shift_amount, remaining_bits;\n  ulonglong shifted_value = 0;\n  bool is_negative_input = false, is_remaining_bits_negative = false;\n  bool is_remaining_bits_zero = false, is_remaining_bits_positive = false;\n\n  if (input_value == 0) {\n    return 0;\n  }\n\n  is_negative_input = ((int)input_value & 0x80000000) != 0;\n  abs_input_value = is_negative_input ? -input_value : input_value;\n  leading_zeros = count_leading_zeroes(abs_input_value);\n  shift_amount = leading_zeros + 0x15;\n\n  if ((int)shift_amount < 0x20) {\n    shift_amount = shift_amount + 1;\n    remaining_bits = 0x20 - shift_amount;\n    is_remaining_bits_negative = (int)remaining_bits < 0;\n    is_remaining_bits_zero = remaining_bits == 0;\n    is_remaining_bits_positive = !is_remaining_bits_negative && !is_remaining_bits_zero;\n    if (is_remaining_bits_positive) {\n      shifted_value = abs_input_value << (shift_amount & 0xff);\n      abs_input_value = abs_input_value >> ((0xcU - leading_zeros + 1) & 0xff);\n    }\n  }\n\n  if (is_remaining_bits_zero || is_remaining_bits_negative) {\n    remaining_bits = 0x20 - leading_zeros + 0xb;\n    shifted_value = abs_input_value << (leading_zeros & 0xff);\n    if (is_remaining_bits_negative || is_remaining_bits_zero) {\n      shifted_value |= 0U >> (remaining_bits & 0xff);\n    }\n    if (is_remaining_bits_negative || is_remaining_bits_zero) {\n      shifted_value = shifted_value | 0 << (leading_zeros & 0xff);\n    }\n  }\n\n  if ((int)shift_amount < 0x433) {\n    return ((ulonglong)shifted_value << 32) | (abs_input_value + (0x432 - shift_amount) * 0x100000) | (ulonglong)is_negative_input;\n  }\n\n  remaining_bits = ~(0x432 - shift_amount);\n  if (0x1e < (int)remaining_bits) {\n    return ((ulonglong)abs_input_value << 32) | ((shifted_value >> (remaining_bits - 0x1f)) & 0x80000000ffffffff);\n  }\n\n  remaining_bits = remaining_bits - 0x13;\n  if (remaining_bits == 0 || remaining_bits < 0 != SCARRY4(remaining_bits - 0x1f, 0xc)) {\n    remaining_bits = remaining_bits + 1;\n    return ((ulonglong)is_negative_input << 32) | ((shifted_value >> (remaining_bits & 0xff)) | (abs_input_value << (0x20 - remaining_bits & 0xff)));\n  }\n\n  return ((ulonglong)abs_input_value << 32) | ((shifted_value >> (0xcU - (remaining_bits - 0xc) & 0xff)) & 0x80000000ffffffff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "check_and_write_0800209c",
                "param_1": "address",
                "param_2": "size",
                "cVar1": "first_bit",
                "cVar2": "second_bit",
                "puVar3": "data_address",
                "iVar4": "bit31",
                "iVar5": "value",
                "uVar6": "data",
                "uVar7": "leading_zeroes",
                "*puVar3": "*data_address",
                "DAT_08002204": "DAT_address_08002204",
                "DAT_08002208": "DAT_address_08002208",
                "PTR_DAT_08002210": "PTR_data_08002210",
                "PTR_DAT_0800220c": "PTR_data_0800220c",
                "calculate_result_08002008": "calculate_result",
                "count_leading_zeroes": "count_leading_zeroes",
                "get_value_from_pointer_0800115c": "get_value_from_pointer",
                "writeToMemory_08001104": "writeToMemory"
            },
            "code": "int check_and_write_0800209c(uint *address, uint size)\n{\n    char first_bit, second_bit;\n    uint *data_address;\n    int bit31, value;\n    uint data, leading_zeroes, result;\n    data_address = DAT_08002204;\n    if (size <= (*DAT_08002204 & 7) || (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size == (*data_address & 7))) {\n        data = *address;\n        if ((int)(data << 0x1e) < 0) {\n            DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | address[2];\n        }\n        data_address = DAT_08002208;\n        bit31 = data << 0x1f;\n        if (-1 < bit31) {\n            data_address = DAT_08002204;\n            if (size < (*DAT_08002204 & 7) && (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | size, size != (*data_address & 7))) {\n                return 1;\n            }\n            data_address = DAT_08002208;\n            data = *address;\n            if ((data & 4) != 0) {\n                DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | address[3];\n            }\n            if ((int)(data << 0x1c) < 0) {\n                data_address[1] = data_address[1] & 0xffffc7ff | address[4] << 3;\n            }\n            result = calculate_result();\n            leading_zeroes = count_leading_zeroes(0xf000000);\n            *(uint *)PTR_DAT_08002210 = result >> PTR_DAT_0800220c[(data_address[1] & 0xf0) >> (leading_zeroes & 0xff)];\n            writeToMemory(0);\n            return 0;\n        }\n        data = address[1];\n        if (data == 1) {\n            second_bit = 1;\n            first_bit = 0;\n        }\n        else {\n            if (data == 2) {\n                leading_zeroes = *DAT_08002208;\n                goto LAB_08002176;\n            }\n            second_bit = 0;\n            first_bit = 1;\n        }\n        leading_zeroes = count_leading_zeroes((uint)(byte)(first_bit << 6) << 0x18 | (uint)(byte)(second_bit << 6) << 8);\n        leading_zeroes = (*DAT_08002208 >> (leading_zeroes & 0x1f)) << 0x1f;\n        if ((int)leading_zeroes < 0) {\n            DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | data;\n            bit31 = get_value_from_pointer(bit31, leading_zeroes);\n            if (address[1] == 1) {\n                do {\n                    if ((data_address[1] & 0xc) == 4) goto LAB_080020ba;\n                    value = get_value_from_pointer();\n                } while ((uint)(value - bit31) < 0x1389);\n            }\n            else if (address[1] == 2) {\n                do {\n                    if ((data_address[1] & 0xc) == 8) goto LAB_080020ba;\n                    value = get_value_from_pointer();\n                } while ((uint)(value - bit31) < 0x1389);\n            }\n            else {\n                do {\n                    if ((data_address[1] & 0xc) == 0) goto LAB_080020ba;\n                    value = get_value_from_pointer();\n                } while ((uint)(value - bit31) < 0x1389);\n            }\n            return 3;\n        }\n    }\n    return 1;\n}\n",
            "called": [
                "FUN_0800115c",
                "FUN_08002008",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "check_and_write_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "process_i2c_data_and_print_results_0800403c",
                "param_1": "device_address",
                "param_2": "register_address",
                "param_3": "data",
                "param_4": "print_results",
                "local_14": "buffer",
                "iVar1": "status",
                "process_data_08001828": "process_data",
                "process_data_and_print_results_08004490": "print_error",
                "PTR_DAT_08004074": "PTR_data",
                "PTR_s____Src_i2c_c_08004078": "PTR_error_message",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void process_i2c_data_and_print_results_0800403c(undefined4 device_address, undefined4 register_address, undefined data, int print_results)\n{\n  int status;\n  undefined buffer [8];\n  buffer[0] = data;\n  status = process_data(PTR_DAT_08004074, device_address, register_address, 1, buffer, 1, 200);\n  if (status != 0) {\n    print_error(PTR_s____Src_i2c_c_08004078,0x1b);\n  }\n  if (print_results != 0) {\n    do_nothing(0x32);\n  }\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ad0",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "process_i2c_data_and_print_results_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002b48",
                "FUN_08004a30",
                "FUN_08002cb0",
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "result1",
                "uVar6": "result2",
                "uVar7": "temp5",
                "uVar8": "temp6"
            },
            "code": "ulonglong calculate_result_08006070(uint param1, uint param2, uint param3, uint param4) {\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  ulonglong result1;\n  ulonglong result2;\n  undefined8 temp5;\n  undefined8 temp6;\n  result2 = CONCAT44(DAT_08006214, DAT_08006210);\n  result1 = CONCAT44(DAT_08006204, DAT_08006200);\n  temp4 = param4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp4 | (-param3 | param3) >> 0x1f)) || (temp2 = param2 & 0x7fffffff, DAT_08006220 < (temp2 | (-param1 | param1) >> 0x1f))) {\n    result1 = FUNC_0800016c(param1, param2, param3, param4, param4);\n    return result1;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result1 = FUNC_08006d68();\n    return result1;\n  }\n  temp1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | temp2) == 0) {\n    if (temp1 == 2) {\n      return CONCAT44(DAT_080061fc, DAT_080061f8);\n    }\n    if (temp1 != 3) {\n      return CONCAT44(param2, param1);\n    }\n  }\n  else {\n    if ((param3 | temp4) != 0) {\n      if (temp4 == DAT_08006220) {\n        if (temp2 == temp4) {\n          if (temp1 == 2) {\n            return CONCAT44(DAT_080061ec, DAT_080061e8);\n          }\n          if (temp1 == 3) {\n            return CONCAT44(DAT_080061f4, DAT_080061f0);\n          }\n          if (temp1 != 1) {\n            return CONCAT44(DAT_0800621c, DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4, DAT_080061e0);\n        }\n        if (temp1 == 2) {\n          return CONCAT44(DAT_080061fc, DAT_080061f8);\n        }\n        if (temp1 == 3) {\n          return result1;\n        }\n        if (temp1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp2 != DAT_08006220) {\n        temp3 = (int)(temp2 - temp4) >> 0x14;\n        if (temp3 < 0x3d) {\n          if (((int)param4 < 0) && (temp3 + 0x3c < 0 != SCARRY4(temp3, 0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            result2 = FUNC_08006d68();\n          }\n        }\n        temp3 = (int)(result2 >> 0x20);\n        if (temp1 != 1) {\n          if (temp1 == 2) {\n            temp6 = FUNC_08000168((int)result2, temp3, DAT_08006208, DAT_0800620c);\n            temp5 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          else {\n            if (temp1 == 0) {\n              return result2;\n            }\n            temp5 = FUNC_08000168((int)result2, temp3, DAT_08006208, DAT_0800620c);\n            temp6 = CONCAT44(DAT_080061fc, DAT_080061f8);\n          }\n          result1 = FUNC_08000168((int)temp5, (int)((ulonglong)temp5 >> 0x20), (int)temp6, (int)((ulonglong)temp6 >> 0x20));\n          return result1;\n        }\n        return result2 & 0xffffffff | (ulonglong)(temp3 + 0x80000000) << 0x20;\n      }\n    }\n    result1 = result2;\n    if ((int)param2 < 0) {\n      result1 = CONCAT44(DAT_080061dc, DAT_080061d8);\n    }\n  }\n  return result1;\n}",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "iVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "result_1",
                "uVar6": "result_2",
                "uVar7": "temp_5",
                "uVar8": "temp_6"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  int temp_3;\n  uint temp_4;\n  ulonglong result_1;\n  ulonglong result_2;\n  undefined8 temp_5;\n  undefined8 temp_6;\n  \n  result_2 = CONCAT44(DAT_08006214,DAT_08006210);\n  result_1 = CONCAT44(DAT_08006204,DAT_08006200);\n  temp_4 = input_4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp_4 | (-input_3 | input_3) >> 0x1f)) || (temp_2 = input_2 & 0x7fffffff, DAT_08006220 < (temp_2 | (-input_1 | input_1) >> 0x1f))) {\n    result_1 = FUNC_0800016c(input_1,input_2,input_3,input_4,input_4);\n    return result_1;\n  }\n  if ((input_4 + 0xc0100000 | input_3) == 0) {\n    result_1 = FUNC_08006d68();\n    return result_1;\n  }\n  temp_1 = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n  if ((input_1 | temp_2) == 0) {\n    if (temp_1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (temp_1 != 3) {\n      return CONCAT44(input_2,input_1);\n    }\n  }\n  else {\n    if ((input_3 | temp_4) != 0) {\n      if (temp_4 == DAT_08006220) {\n        if (temp_2 == temp_4) {\n          if (temp_1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (temp_1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (temp_1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (temp_1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (temp_1 == 3) {\n          return result_1;\n        }\n        if (temp_1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp_2 != DAT_08006220) {\n        temp_3 = (int)(temp_2 - temp_4) >> 0x14;\n        if (temp_3 < 0x3d) {\n          if (((int)input_4 < 0) && (temp_3 + 0x3c < 0 != SCARRY4(temp_3,0x3c))) {\n            result_2 = 0;\n          }\n          else {\n            FUNC_08000724(input_1,input_2);\n            do_nothing_0800708c();\n            result_2 = FUNC_08006d68();\n          }\n        }\n        temp_3 = (int)(result_2 >> 0x20);\n        if (temp_1 != 1) {\n          if (temp_1 == 2) {\n            temp_6 = FUNC_08000168((int)result_2,temp_3,DAT_08006208,DAT_0800620c);\n            temp_5 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (temp_1 == 0) {\n              return result_2;\n            }\n            temp_5 = FUNC_08000168((int)result_2,temp_3,DAT_08006208,DAT_0800620c);\n            temp_6 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result_1 = FUNC_08000168((int)temp_5,(int)((ulonglong)temp_5 >> 0x20),(int)temp_6,(int)((ulonglong)temp_6 >> 0x20));\n          return result_1;\n        }\n        return result_2 & 0xffffffff | (ulonglong)(temp_3 + 0x80000000) << 0x20;\n      }\n    }\n    result_1 = result_2;\n    if ((int)input_2 < 0) {\n      result_1 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result_1;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "process_and_print_string_data_08004cac",
                "param_1": "data",
                "puVar1": "string_data_ptr",
                "PTR_DAT_08004cc4": "string_data_ptr",
                "PTR_DAT_08004cc8": "format_string_ptr",
                "process_string_data_08004c8c": "print_string_data_08004c8c"
            },
            "code": "void process_and_print_string_data_08004cac(undefined4 data){\n  undefined *PTR_DAT_08004cc4;\n  PTR_DAT_08004cc4 = PTR_DAT_08004cc4;\n  reverse_copy_and_parse_format_string_08004ffc(PTR_DAT_08004cc4,PTR_DAT_08004cc8,data);\n  print_string_data_08004c8c(PTR_DAT_08004cc4);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_and_print_string_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "process_input_data_08004c18",
                "param_1": "input_data",
                "puVar1": "buffer_ptr",
                "iVar2": "buffer_flag",
                "iVar3": "buffer_size",
                "uVar4": "buffer_char",
                "puVar5": "data_ptr"
            },
            "code": "int process_input_data_08004c18(char input_data)\n{\n  unsigned char *buffer_ptr;\n  int buffer_flag;\n  int buffer_size;\n  unsigned char buffer_char;\n  unsigned short *data_ptr;\n  \n  data_ptr = (unsigned short *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = input_data;\n  buffer_ptr = PTR_DAT_08004c2c;\n  buffer_flag = buffer_ptr[0x39];\n  if ((buffer_flag == 1) || (buffer_flag == '\"')) {\n    if (data_ptr == (unsigned short *)0x0) {\n      return 1;\n    }\n    if (buffer_ptr[0x38] != 1) {\n      buffer_ptr[0x38] = 1;\n      *(int *)(buffer_ptr + 0x3c) = 0;\n      *(short *)(buffer_ptr + 0x24) = 1;\n      if (buffer_ptr[0x39] == '\"') {\n        buffer_char = 0x32;\n      }\n      else {\n        buffer_char = 0x12;\n      }\n      *(short *)(buffer_ptr + 0x26) = 1;\n      buffer_ptr[0x39] = buffer_char;\n      while (1) {\n        if (*(short *)(buffer_ptr + 0x26) == 0) {\n          int iVar1 = get_value_from_pointer_0800115c();\n          do {\n            if (**(int **)buffer_ptr << 0x19 < 0) {\n              if (buffer_ptr[0x39] == '2') {\n                buffer_char = 0x22;\n              }\n              else {\n                buffer_char = 1;\n              }\n              buffer_ptr[0x39] = buffer_char;\n              buffer_ptr[0x38] = 0;\n              return 0;\n            }\n            int iVar2 = get_value_from_pointer_0800115c();\n          } while ((unsigned int)(iVar2 - iVar1) < 6);\n          int iVar3 = *(int *)buffer_ptr;\n          *(unsigned int *)(iVar3 + 0xc) = *(unsigned int *)(iVar3 + 0xc) & 0xffffff7f;\n          *(unsigned int *)(iVar3 + 0xc) = *(unsigned int *)(iVar3 + 0xc) & 0xffffffdf;\n          *(unsigned int *)(iVar3 + 0xc) = *(unsigned int *)(iVar3 + 0xc) & 0xfffffeff;\n          *(unsigned int *)(iVar3 + 0x14) = *(unsigned int *)(iVar3 + 0x14) & 0xfffffffe;\n          buffer_ptr[0x39] = 1;\n          buffer_ptr[0x38] = 0;\n          return 3;\n        }\n        *(short *)(buffer_ptr + 0x26) = *(short *)(buffer_ptr + 0x26) + -1;\n        if (*(int *)(buffer_ptr + 8) == 0x1000) {\n          int iVar1 = get_value_from_pointer_0800115c();\n          while (-1 < **(int **)buffer_ptr << 0x18) {\n            int iVar2 = get_value_from_pointer_0800115c();\n            if (5 < (unsigned int)(iVar2 - iVar1)) goto LAB_0800281c;\n          }\n          (*(int **)buffer_ptr)[1] = *data_ptr & 0x1ff;\n          if (*(int *)(buffer_ptr + 0x10) == 0) {\n            data_ptr = (unsigned short *)((int)data_ptr + 2);\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          int iVar1 = get_value_from_pointer_0800115c();\n          while (-1 < **(int **)buffer_ptr << 0x18) {\n            int iVar2 = get_value_from_pointer_0800115c();\n            if (5 < (unsigned int)(iVar2 - iVar1)) goto LAB_0800281c;\n          }\n          (*(int **)buffer_ptr)[1] = (unsigned int)*(unsigned char *)data_ptr;\n        }\n        data_ptr = (unsigned short *)((int)data_ptr + 1);\n      }\n    }\n  }\n  return 2;\n}\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004c8c",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "imported": false,
            "current_name": "process_input_data_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "process_input_0800483c",
                "param_1": "input",
                "uVar1": "fixed_point",
                "iVar3": "input_length",
                "iVar4": "temp",
                "iVar5": "input_string_length",
                "iVar6": "concatenated_string_length",
                "DAT_08004974": "default",
                "DAT_08004964": "null",
                "DAT_08004968": "null",
                "DAT_0800496c": "null",
                "DAT_08004970": "null",
                "param_1[7]": "input_string",
                "param_1[9]": "input_number_length",
                "param_1[10]": "temp2",
                "param_1[1]": "input_string_length",
                "param_1[0xc]": "temp",
                "param_1[0xd]": "temp",
                "param_1[0xe]": "concatenated_string",
                "param_1[0xf]": "input_string",
                "param_1[0x10]": "input_number",
                "param_1[0x12]": "temp",
                "param_1[0x13]": "fixed_point",
                "param_1[0x14]": "null",
                "param_1[0x15]": "input_type",
                "is_input_empty_08001064": "is_input_empty",
                "is_concatenated_string_null_08001028_08001028": "is_concatenated_string_null",
                "FUNC_08000adc": "add_numbers",
                "FUNC_08000ad8": "add_fixed_point",
                "FUNC_08000cec": "concatenate_strings",
                "convert_unsigned_int_to_fixed_point_08000c44": "convert_unsigned_int_to_fixed_point"
            },
            "code": "void process_input_0800483c(int *input)\n{\n    int concatenated_string_length = 0;\n    int concatenated_string = 0;\n    int input_length = 0;\n    int input_type = input[0];\n    int fixed_point = convert_unsigned_int_to_fixed_point(input[19]);\n    int input_string = input[15];\n    int input_string_length = input[16];\n    int input_number = input[17];\n    int input_number_length = input[18];\n    int temp = input[12];\n    int temp2 = input[13];\n    int temp3 = input[14];\n    concatenated_string_length = is_concatenated_string_DAT_08004964(input_string, \"DAT_08004964\");\n    if (concatenated_string_length == 0)\n    {\n        input_length = is_input_empty(input_string, \"DAT_08004964\");\n        if (input_length == 0)\n        {\n            concatenated_string = concatenate_strings(input_string, \"DAT_08004974\");\n            if (input_length == 0)\n            {\n                temp += -2147483648;\n            }\n            temp = add_fixed_point(temp, fixed_point);\n            temp = add_strings(temp, concatenated_string);\n        }\n    }\n    temp2 = concatenate_strings(input_string_length, temp);\n    temp3 = add_numbers(input_number, input_number_length);\n    temp = add_numbers(temp2, temp3);\n    temp = concatenate_strings(temp, \"DAT_08004964\");\n    input[13] = input[12];\n    input[11] = input[10];\n    input[20] = input[21];\n    return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08001064",
                "FUN_08000adc",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_input_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "process_string_data_08004c8c",
                "param_1": "input_str",
                "uVar1": "end_of_str",
                "puVar2": "str_ptr",
                "find_end_of_string_08000150": "find_end_of_string",
                "process_input_data_08004c18": "process_input_data"
            },
            "code": "void process_string_data_08004c8c(const char *input_str) {\n  const char *str_ptr = input_str;\n  while(true) {\n    uint end_of_str = find_end_of_string(str_ptr);\n    if (end_of_str <= (uint)((int)str_ptr - (int)input_str)) break;\n    process_input_data(*str_ptr);\n    str_ptr++;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "imported": false,
            "current_name": "process_string_data_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_parameters_08001460",
                "param_1": "input",
                "param_2": "num_inputs",
                "param_3": "max_iterations",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "mask",
                "puVar4": "data"
            },
            "code": "uint32_t check_parameters_08001460(uint32_t **input, uint32_t num_inputs, uint32_t max_iterations) {\n    int32_t start_time = get_value_from_pointer_0800115c();\n    do {\n        uint32_t *data = *input;\n        uint32_t mask = (num_inputs << 8) >> 0x18 == 1 ? data[5] : data[6];\n        if ((num_inputs & 0xffff & ~mask) == 0) {\n            return 0;\n        }\n        if ((int32_t)(data[5] << 0x15) < 0) {\n            *data = *data | 0x200;\n            data[5] &= 0xfffffbff;\n            input[14] = (uint32_t *)0x4;\n            *(uint8_t *)((int)input + 0x35) = 0x20;\n            *(uint32_t *)(input + 13) = 0;\n            return 1;\n        }\n    } while ((max_iterations == 0xffffffff) || ((max_iterations != 0 && (int32_t)(get_value_from_pointer_0800115c() - start_time) <= max_iterations)));\n    *(uint8_t *)((int)input + 0x35) = 0x20;\n    *(uint32_t *)(input + 13) = 0;\n    return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_parameters_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_input_empty_08001064",
                "in_CY": "input_char",
                "concatenate_values_and_swap_params_08000ffc": "concatenate_and_swap_params"
            },
            "code": "bool is_input_empty_08001064(void)\n{\n  char input_char;\n  concatenate_and_swap_params();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "is_input_empty_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_parameter_value_08003fd0",
                "param_1": "new_value",
                "PTR_DAT_08003fd8": "ptr",
                "offset": "offset"
            },
            "code": "void set_parameter_value_08003fd0(int new_value)\n{\n    int* PTR_DAT_08003fd8 = *(int*)PTR_DAT_08003fd8;\n    int offset = 0x3c;\n    *(int*)(PTR_DAT_08003fd8 + offset) = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_parameter_value_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "temp_2",
                "uVar2": "temp_3",
                "uVar3": "flag_1",
                "in_r12": "flag_2",
                "bVar4": "flag_3"
            },
            "code": "ulonglong calculate_result_08000892(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint flag_1;\n  uint flag_2;\n  uint flag_3;\n  \n  temp_1 = input_4 >> 0x14;\n  temp_2 = input_2;\n  flag_1 = input_4 & 0x80000000;\n  flag_2 = input_2 & 0x80000000;\n  flag_3 = input_3 & 0x80000000;\n  \n  if (input_1 != input_3 || temp_1 != input_3) {\n    if (input_1 == input_3) {\n      if (((input_1 | input_2 << 0xc) == 0) && (input_1 = input_3, temp_2 = input_4, temp_1 != input_3)) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp_1 == input_3) {\n      input_1 = input_3;\n      temp_2 = input_4;\n      if ((input_3 | input_4 << 0xc) == 0) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      flag_1 = (input_1 | input_2 << 1) == 0;\n      if (!flag_1) {\n        flag_1 = (input_3 | input_4 << 1) == 0;\n      }\n      if (!flag_1) {\n        if (input_3 == 0) {\n          temp_2 = input_2 & 0x80000000;\n          do {\n            temp_3 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(temp_3 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | temp_2;\n          if (temp_1 != 0) {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do {\n          temp_2 = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(temp_2 != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((input_3 | input_4 << 1) != 0) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(temp_2,input_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "process_input_and_string_data_08004300_08004458",
                "puVar1": "current_item_ptr",
                "puVar2": "next_item_value",
                "puVar3": "dest_ptr",
                "puVar4": "source_ptr",
                "puVar5": "end_ptr",
                "local_30": "temp_array",
                "local_24": "temp_string"
            },
            "code": "void process_input_and_string_data_08004300_08004458(void)\n{\n  undefined4 *current_item_ptr;\n  undefined4 next_item_value;\n  undefined4 *dest_ptr;\n  undefined4 *source_ptr;\n  undefined4 *end_ptr;\n  undefined4 temp_array [3];\n  undefined2 temp_string [10];\n  \n  current_item_ptr = temp_array;\n  source_ptr = (undefined4 *)original_data_ptr;\n  end_ptr = (undefined4 *)(original_data_ptr + 0x18);\n  do {\n    dest_ptr = current_item_ptr;\n    next_item_value = source_ptr[1];\n    source_ptr += 2;\n    *dest_ptr = *source_ptr;\n    dest_ptr[1] = next_item_value;\n    current_item_ptr = dest_ptr + 2;\n  } while (source_ptr != end_ptr);\n  current_item_ptr[1] = *source_ptr;\n  *(undefined2 *)(current_item_ptr + 2) = *(undefined2 *)(dest_ptr + 2);\n  process_input_and_string_data_08004300_08004458(0x70,temp_array,0x1e);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_08004300_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concat_params_08000134",
                "param_1": "ptr_fun",
                "param_2": "ptr_dat",
                "DAT_08000144": "data_flag",
                "PTR_FUN_0800014c": "function_pointer",
                "PTR_DAT_08000148": "data_pointer"
            },
            "code": "typedef unsigned long long uint64_t;\n\nuint64_t concat_params_08000134(uint64_t* ptr_fun, uint64_t* ptr_dat)\n{\n    if (DAT_08000144 != 0) {\n        ptr_fun = PTR_FUN_0800014c;\n        ptr_dat = PTR_DAT_08000148;\n    }\n    return ((uint64_t)(*ptr_dat) << 32) | *ptr_fun;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "concat_params_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_param_to_64bit_08003eb0",
                "param_1": "param",
                "PTR_DAT_08003ec4": "ptr_dat",
                "CONCAT44": "concatenate_44",
                "ulonglong": "long_long",
                "software_interrupt": "software_interrupt"
            },
            "code": "longlong convert_param_to_64bit_08003eb0(uint32_t param)\n{\n  if (*(int *)PTR_DAT_08003ec4 == 0) {\n    software_interrupt(0x3f);\n    return CONCAT44(param,1);\n  }\n  return (ulonglong)param << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_param_to_64bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = check_if_string_is_empty_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = calculate_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "check_and_concatenate_string_08002ee8",
                "iVar1": "check_result",
                "uVar2": "string_address",
                "check_values_for_swap_08001050": "check_values_for_swap",
                "DAT_08002f1c": "swap_value",
                "is_concatenated_string_null_08001028_08001028": "is_concatenated_string_null",
                "DAT_08002f20": "null_string",
                "FUNC_08000adc": "concatenate_string",
                "DAT_08002f24": "non_null_string"
            },
            "code": "void check_and_concatenate_string_08002ee8(void)\n{\n  int check_result;\n  undefined4 string_address = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  check_result = check_values_for_swap(string_address, DAT_08002f1c);\n  if ((check_result != 0) && (check_result = is_concatenated_string_null(string_address, DAT_08002f20), check_result != 0)) {\n    concatenate_string(string_address, DAT_08002f20);\n    return;\n  }\n  concatenate_string(string_address, DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08001028",
                "FUN_08001050"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "check_and_concatenate_string_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "writeToMemory_08001104",
                "param_1": "destination",
                "uVar1": "value",
                "get_value_from_pointer_08002214": "getValueFromPointer",
                "check_param_08001214": "checkParam",
                "write_to_memory_08001194": "writeToMemoryWithMask"
            },
            "code": "int writeToMemory_08001104(uint32_t* destination)\n{\n    uint32_t value = getValueFromPointer();\n    uint32_t dividedValue = value / 1000;\n    checkParam(dividedValue);\n    writeToMemory_08001104WithMask(0xffffffff, destination, 0);\n    return 0;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "writeToMemory_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c",
                "undefined4": "int",
                "PTR_DAT_08001164": "value_pointer",
                "value_pointer": "value_pointer",
                "value": "value"
            },
            "code": "int get_value_from_pointer_thunk_0800115c() {\n    int* PTR_DAT_08001164 = (int*)PTR_DAT_08001164;\n    int value = *PTR_DAT_08001164;\n    return value;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = check_if_string_is_empty_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "calculateSumAndUpdate_080072b8",
                "param_1": "input",
                "puVar1": "currentPointer"
            },
            "code": "void calculateSumAndUpdate_080072b8(int input) {\n  undefined *currentPointer = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)currentPointer = input + *(int *)currentPointer;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "calculateSumAndUpdate_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "calculateAndUpdateSum_0800581c",
                "param_1": "result",
                "param_2": "input",
                "puVar1": "ptr",
                "iVar2": "sum"
            },
            "code": "void calculateAndUpdateSum_0800581c(int *result, undefined4 input) {\n  undefined *ptr = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  int sum = calculateSumAndUpdate_080072b8(input);\n  if ((sum == -1) && (*(int *)ptr != 0)) {\n    *result = *(int *)ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "calculateAndUpdateSum_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "process_if_match_08004d48",
                "param_1": "input_data_address",
                "param_2": "param_2",
                "local_18": "local_var_1",
                "local_14": "local_var_2",
                "*param_1": "*input_data_address",
                "DAT_08004d80": "target_data",
                "DAT_08004d84": "data_address",
                "3": "data_size"
            },
            "code": "void process_if_match_08004d48(int *input_data, undefined4 param_2)\n{\n  undefined4 local_var_1;\n  undefined4 local_var_2;\n  int DAT_08004d80 = 0x08004d80;\n  int DAT_08004d84 = DAT_08004d84;\n  int data_size = 3;\n  int *input_DAT_08004d84 = input_data;\n  if (*input_DAT_08004d84 == DAT_08004d80) {\n    local_var_1 = 0xc0;\n    local_var_2 = 0x12;\n    process_data_08001264(DAT_08004d84, &local_var_1, *input_DAT_08004d84, data_size, input_DAT_08004d84, param_2);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "process_if_match_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_value_from_ptr_ptr_dat_080072ac",
                "undefined4": "int",
                "PTR_PTR_DAT_080072b4": "PTR_PTR_DAT_080072b4"
            },
            "code": "int get_value_from_ptr_ptr_dat_080072ac() {\n  int *ptr_to_ptr_to_dat = (int *)&PTR_PTR_DAT_080072b4;\n  int value = *ptr_to_ptr_to_dat;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_value_from_ptr_ptr_dat_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "set_bits_and_values_08002280",
                "param_1": "base_address",
                "param_2": "values_array",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "value3",
                "mask1": "mask1",
                "mask2": "mask2",
                "mask3": "mask3",
                "mask4": "mask4"
            },
            "code": "void set_bits_and_values_08002280(int base_address, uint *values_array)\n{\n  uint mask1 = 0xfffffffe;\n  uint mask2 = 0xfffffffd;\n  uint mask3 = 0xfffffff7;\n  uint mask4 = 0xfffffffb;\n  uint value1 = *(uint *)(base_address + 0x20) & mask1;\n  uint value2 = *(uint *)(base_address + 4);\n  uint value3 = *values_array;\n  uint value4 = values_array[2];\n\n  if (base_address == DAT_080022cc)\n  {\n    value4 = (value4 & mask4) | values_array[3];\n    value2 = (value2 & 0xfffffcff) | values_array[5] | values_array[6];\n  }\n\n  value1 = (value1 & mask2) | value4;\n  *(uint *)(base_address + 4) = value2;\n  *(uint *)(base_address + 0x18) = (*(uint *)(base_address + 0x18) & 0xffffff8c) | value3;\n  *(uint *)(base_address + 0x34) = values_array[1];\n  *(uint *)(base_address + 0x20) = value1;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_bits_and_values_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "write_to_memory_08001194",
                "param_1": "address",
                "param_2": "data",
                "param_3": "mask",
                "uVar1": "data_to_write",
                "uVar2": "shift_left",
                "uVar3": "shift_amount",
                "uVar4": "shift_right"
            },
            "code": "void write_to_memory_08001194(uint address, uint data, uint mask){\n        uint shift_amount = (*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n        uint shift_left = 7 - shift_amount;\n        uint shift_right = shift_amount + 4;\n        if (shift_left > 3) {\n            shift_left = 4;\n        }\n        if (shift_right < 7) {\n            shift_amount = 0;\n        }\n        shift_left = (1 << (shift_left & 0xff)) - 1;\n        if (shift_right > 6) {\n            shift_amount = shift_amount - 3;\n        }\n        undefined data_to_write = (undefined)\n            ((mask & (1 << (shift_amount & 0xff)) - 1U | (data & shift_left) << (shift_amount & 0xff)) << 4);\n        if (-1 < (int)address) {\n            address = address + 0xe000e100;\n        }\n        else {\n            address = address & 0xf;\n            mask = DAT_080011f8;\n        }\n        if (-1 < (int)address) {\n            *(undefined *)(address + 0x300) = data_to_write;\n        }\n        else {\n            *(undefined *)(mask + address) = data_to_write;\n        }\n        return;\n    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004ccc",
                "FUN_08004514",
                "FUN_08004e7c",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "write_to_memory_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "process_mpu9250_data_and_print_results_08002cb0",
                "param_1": "address",
                "param_2": "register_address",
                "param_3": "data",
                "param_4": "data_length",
                "local_c": "raw_data",
                "puVar1": "data_pointer",
                "uVar2": "output_data",
                "PTR_s____Src_MPU9250_c_08002d80": "s_mpu9250_data",
                "PTR_DAT_08002d84": "output_pointer"
            },
            "code": "void process_mpu9250_data_and_print_results_08002cb0(uint8_t address, uint8_t register_address, uint8_t data, uint8_t data_length, float *output_data)\n{\n    uint8_t raw_data[data_length];\n    uint8_t *data_pointer = raw_data;\n    uint8_t *PTR_DAT_08002d84 = (uint8_t *)output_data;\n    uint8_t i;\n\n    process_i2c_data_and_print_results(address, register_address, data, data_length);\n\n    check_and_process_data(0x18, 0, PTR_s____Src_MPU9250_c_08002d80, 0xad);\n\n    for (i = 0; i < data_length; i++)\n    {\n        process_i2c_data_and_print_results(0x18, 0xA, i, 1);\n        read_and_process_data(0x18, 0x10, data_pointer, 3, PTR_s____Src_MPU9250_c_08002d80, 0xb6);\n        *PTR_DAT_08002d84 = convert_raw_data_to_float(data_pointer);\n        PTR_DAT_08002d84++;\n        data_pointer += 3;\n    }\n\n    process_i2c_data_and_print_results(0x18, 0xA, 0, 1);\n    process_i2c_data_and_print_results(0x18, 0xA, 0x16, 1);\n}",
            "called": [
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_080040e8",
                "FUN_08000c44",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "process_mpu9250_data_and_print_results_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "process_data_and_strings_08004348",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "unknown_param",
                "puVar1": "data_ptr",
                "local_10": "local_var",
                "local_c": "masked_input",
                "uStack_8": "unknown_stack"
            },
            "code": "void process_data_and_strings_08004348(uint32_t input, uint32_t flag, uint32_t unknown_param) {\n  uint8_t *data_ptr = PTR_DAT_08004380;\n  data_ptr[0] = 0xe9;\n  data_ptr[1] = 3;\n  data_ptr[3] = 4;\n  data_ptr[2] = 0;\n  uint32_t local_var = *(uint32_t *)data_ptr;\n  data_ptr[4] = 0;\n  data_ptr[5] = 0;\n  data_ptr[6] = 0;\n  uint32_t masked_input = flag & 0xff000000 | (uint32_t)*(uint16_t *)(data_ptr + 4);\n  uint32_t unknown_stack = unknown_param;\n  process_input_and_string_data_08004300(100, &local_var, 7);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_and_strings_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_flags_08002324",
                "param_1": "flags_address",
                "param_2": "flag_values",
                "uVar1": "current_flags",
                "iVar2": "first_flag_value",
                "iVar3": "third_flag_value",
                "iVar4": "global_flag_value"
            },
            "code": "void update_flags_08002324(int flags_address, int *flag_values) {\n  uint current_flags = *(uint *)(flags_address + 0x04);\n  int first_flag_value = *flag_values;\n  int third_flag_value = flag_values[2];\n  int global_flag_value = DAT_08002364;\n  if (flags_address == DAT_08002364) {\n    global_flag_value = flag_values[5];\n    current_flags = current_flags & 0xffffbfff;\n  }\n  if (flags_address == DAT_08002364) {\n    current_flags = current_flags | global_flag_value << 6;\n  }\n  *(uint *)(flags_address + 0x04) = current_flags;\n  *(uint *)(flags_address + 0x1c) = *(uint *)(flags_address + 0x1c) & 0xffff8cff | first_flag_value << 8;\n  *(int *)(flags_address + 0x40) = flag_values[1];\n  *(uint *)(flags_address + 0x20) = *(uint *)(flags_address + 0x20) & 0xffffdfff | third_flag_value << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_flags_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "extract_msb_bits_08001078",
                "param_1": "input",
                "uVar1": "msb_bits",
                "uVar2": "shift_amount"
            },
            "code": "uint extract_msb_bits_08001078(uint input)\n{\n    uint msb_bits;\n    uint shift_amount;\n\n    if (input << 1 < 0x7f000000) {\n        return 0;\n    }\n    msb_bits = (input << 1) >> 0x18;\n    shift_amount = 0x9e - msb_bits;\n    if (msb_bits < 0x9f && shift_amount != 0) {\n        msb_bits = (input << 8 | 0x80000000) >> (shift_amount & 0xff);\n        if ((input & 0x80000000) != 0) {\n            msb_bits = -msb_bits;\n        }\n        return msb_bits;\n    }\n    if ((shift_amount == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n        return 0;\n    }\n    input = input & 0x80000000;\n    if (input == 0) {\n        input = 0x7fffffff;\n    }\n    return input;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "extract_msb_bits_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "check_flag_08002564",
                "param_1": "flag_ptr",
                "param_2": "data_ptr",
                "uVar1": "result",
                "*(char *)(param_1 + 0xe)": "*(char *)(flag_ptr + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "*(int *)((int)flag_ptr + 0x39)",
                "*(uint *)(*param_1 + 0x44)": "*(uint *)(*flag_ptr + 0x44)",
                "param_2[1]": "data_ptr[1]",
                "param_2[2]": "data_ptr[2]",
                "param_2[3]": "data_ptr[3]",
                "param_2[4]": "data_ptr[4]",
                "param_2[5]": "data_ptr[5]",
                "param_2[6]": "data_ptr[6]"
            },
            "code": "int check_flag_08002564(int *flag_ptr, uint *data_ptr)\n{\n  int result = 2;\n  if (*(char *)(flag_ptr + 0xe) != '\\x01') {\n    *(int *)((int)flag_ptr + 0x39) = 2;\n    *(uint *)(*flag_ptr + 0x44) =\n         *data_ptr | data_ptr[1] | data_ptr[2] | data_ptr[3] | data_ptr[4] | data_ptr[5] | data_ptr[6];\n    *(int *)((int)flag_ptr + 0x39) = 1;\n    result = 0;\n    *(char *)(flag_ptr + 0xe) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_flag_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "set_param_08001754",
                "param_1": "param_list",
                "uVar1": "quotient",
                "uVar2": "leading_zeroes_shifted",
                "puVar3": "ptr_1",
                "puVar4": "ptr_2",
                "puVar5": "ptr_3",
                "uVar6": "quotient_divisor",
                "uVar7": "leading_zeroes_shifted",
                "DAT_08001820": "ptr_1",
                "DAT_08001824": "quotient_divisor",
                "process_if_match_08004d48": "process"
            },
            "code": "uint32_t set_param_08001754(uint32_t **param_list)\\n{\\n    uint32_t leading_zeroes_shifted;\\n    uint32_t quotient;\\n    uint32_t *DAT_08001820 = NULL;\\n    uint32_t *ptr_2 = NULL;\\n    uint32_t *ptr_3 = NULL;\\n    uint32_t DAT_08001824;\\n    uint32_t quotient_mul_factor;\\n\\n    if (param_list == NULL)\\n    {\\n        return 1;\\n    }\\n\\n    if (*(char *)((int)param_list + 0x35) == \"\\0\")\\n    {\\n        *(undefined *)(param_list + 0xd) = 0;\\n        process_if_match_08004d48();\\n    }\\n\\n    *(undefined *)((int)param_list + 0x35) = 0x24;\\n\\n    DAT_08001820 = DAT_08001820;\\n    **param_list = **param_list & 0xfffffffe;\\n\\n    leading_zeroes_shifted = count_leading_zeroes_and_shift_08002220();\\n    DAT_08001824 = (uint32_t)(leading_zeroes_shifted / DAT_08001824);\\n\\n    if (DAT_08001820 < param_list[1])\\n    {\\n        quotient_mul_factor = 300;\\n    }\\n\\n    ptr_2 = *param_list;\\n\\n    if (DAT_08001820 < param_list[1])\\n    {\\n        quotient_mul_factor = DAT_08001824 * quotient_mul_factor;\\n    }\\n\\n    ptr_2[1] = DAT_08001824;\\n\\n    if (DAT_08001820 < param_list[1])\\n    {\\n        DAT_08001824 = quotient_mul_factor / 1000;\\n    }\\n\\n    ptr_2[8] = DAT_08001824 + 1;\\n\\n    if (DAT_08001820 < param_list[1])\\n    {\\n        if (param_list[2] == NULL)\\n        {\\n            quotient = DAT_08001824 / (uint32_t)((int)param_list[1] * 3) | 0x8000;\\n        }\\n        else\\n        {\\n            quotient = DAT_08001824 / (uint32_t)((int)param_list[1] * 0x19) | 0xc000;\\n        }\\n\\n        if ((quotient & 0xfff) == 0)\\n        {\\n            quotient = 1;\\n        }\\n    }\\n    else\\n    {\\n        quotient = DAT_08001824 / (uint32_t)((int)param_list[1] << 1);\\n\\n        if ((quotient & 0xfff) < 4)\\n        {\\n            quotient = 4;\\n        }\\n    }\\n\\n    ptr_3 = param_list[8];\\n    DAT_08001820 = param_list[7];\\n\\n    ptr_2[7] = quotient;\\n    *ptr_2 = (uint32_t)DAT_08001820 | (uint32_t)ptr_3;\\n    ptr_2[2] = (uint32_t)param_list[4] | (uint32_t)param_list[3];\\n    ptr_2[3] = (uint32_t)param_list[5] | (uint32_t)param_list[6];\\n    *ptr_2 = *ptr_2 | 1;\\n\\n    param_list[0xe] = NULL;\\n    *(undefined *)((int)param_list + 0x35) = 0x20;\\n    *(undefined *)((int)param_list + 0x36) = 0;\\n\\n    return 0;\\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_param_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ee8",
                "FUN_08002ec0",
                "FUN_08002bf0",
                "FUN_0800426c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_08003ec8",
                "param_1": "base_address",
                "param_2": "value",
                "*(short *)(param_1 + 0x804)": "*counter",
                "*(ushort *)(param_1 + 0x802)": "*index",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(char*)(base_address + (uint)*index)",
                "return 1;": "return 1;"
            },
            "code": "int increment_and_store_08003ec8(int base_address, char value) {\n\tshort* counter = (short*)(base_address + 0x804);\n\t*counter = *counter + 1;\n\tushort* index = (ushort*)(base_address + 0x802);\n\t*(char*)(base_address + (uint)*index) = value;\n\t*index = (*index + 1) & 0x7ff;\n\treturn 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "check_and_update_data_08002724",
                "param_1": "data_ptr",
                "iVar1": "data"
            },
            "code": "int check_and_update_data_08002724(int *data_ptr) {\n  int data = *data_ptr;\n  if (data_ptr != NULL) {\n    if (*(char *)((int)data_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_ptr + 0xe) = 0;\n      process_data_and_set_bit_if_match_08004e7c();\n    }\n    *(undefined *)((int)data_ptr + 0x39) = 2;\n    *(uint *)(data + 0xc) = *(uint *)(data + 0xc) & 0xffffdfff;\n    update_values_080025e8(data_ptr);\n    *(uint *)(data + 0x10) = *(uint *)(data + 0x10) & 0xffffb7ff;\n    *(uint *)(data + 0x14) = *(uint *)(data + 0x14) & 0xffffffd5;\n    *(uint *)(data + 0xc) = *(uint *)(data + 0xc) | 0x2000;\n    data_ptr[0xf] = 0;\n    *(undefined *)((int)data_ptr + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_080025e8",
                "FUN_08004e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_and_update_data_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_param_in_memory_08003fe8",
                "param_1": "param",
                "PTR_DAT_08003ff0": "ptr_dat",
                "*": "ptr",
                "offset": "offset",
                "ptr_offset": "ptr_offset"
            },
            "code": "void set_param_in_memory_08003fe8(int* ptr, int param) {\n    int* PTR_DAT_08003ff0 = (int*) PTR_DAT_08003ff0;\n    int offset = 0x3c;\n    int* ptr_offset = (int*) (PTR_DAT_08003ff0 + offset);\n    *ptr_offset = param;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_param_in_memory_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "out_block_start",
                "param_2": "block_size",
                "puVar1": "unused_pointer",
                "uVar2": "checksum",
                "puVar3": "current_block",
                "iVar4": "padding_size",
                "puVar5": "temp_pointer",
                "uVar6": "block_size_difference",
                "puVar7": "previous_block",
                "uVar8": "aligned_block_size"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *out_block_start, uint block_size)\n{\n  uint aligned_block_size = (block_size + 3 & 0xfffffffc) + 8;\n  if (aligned_block_size < 0xc) {\n    aligned_block_size = 0xc;\n  }\n  if (((int)aligned_block_size < 0) || (aligned_block_size < block_size)) {\n    *out_block_start = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    uint *current_block = *(uint **)PTR_DAT_080057c8;\n    uint *previous_block = *(uint **)PTR_DAT_080057c8;\n    while (current_block != (uint *)0x0) {\n      uint block_size_difference = *current_block - aligned_block_size;\n      if (-1 < (int)block_size_difference) {\n        if (block_size_difference < 0xc) {\n          if (previous_block == current_block) {\n            uint next_block = previous_block[1];\n            *(uint *)PTR_DAT_080057c8 = next_block;\n          }\n          else {\n            uint next_block = current_block[1];\n          }\n          if (previous_block != current_block) {\n            previous_block[1] = next_block;\n            previous_block = current_block;\n          }\n        }\n        else {\n          *current_block = block_size_difference;\n          *(uint *)((int)current_block + block_size_difference) = aligned_block_size;\n          previous_block = (uint *)((int)current_block + block_size_difference);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = current_block;\n      current_block = (uint *)current_block[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint checksum = calculateAndUpdateSum_0800581c(out_block_start);\n      *(uint *)PTR_DAT_080057cc = checksum;\n    }\n    uint *new_block = (uint *)calculateAndUpdateSum_0800581c(out_block_start, aligned_block_size);\n    if ((new_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)new_block + 3U & 0xfffffffc), new_block == previous_block ||\n        (int)calculateAndUpdateSum_0800581c(out_block_start, (int)previous_block - (int)new_block) != -1)))) {\n      *previous_block = aligned_block_size;\nLAB_08005778:\n      do_nothing_0800583e(out_block_start);\n      uint block_end = (int)previous_block + 0xbU & 0xfffffff8;\n      int padding_size = block_end - (int)(previous_block + 1);\n      if (padding_size != 0) {\n        *(int *)((int)previous_block + padding_size) = -padding_size;\n        return block_end;\n      }\n      return block_end;\n    }\n    *out_block_start = 0xc;\n    do_nothing_0800583e(out_block_start);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800583e",
                "FUN_0800581c",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_080050fc",
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_ptr",
                "iVar2": "num_functions",
                "iVar3": "i"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  int num_functions = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  undefined *function_ptr = PTR_DAT_08004fec;\n  for (int i = 0; i < num_functions >> 2; i++) {\n    (**(code **)(function_ptr + i * 4))();\n  }\n  do_nothing_080072d4();\n  num_functions = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  function_ptr = PTR_DAT_08004ff4;\n  for (int i = 0; i < num_functions >> 2; i++) {\n    (**(code **)(function_ptr + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "process_input_and_string_data_080043f0",
                "param_1": "data_offset",
                "param_2": "data_ptr",
                "param_3": "data_size",
                "local_10": "local_data_ptr",
                "uStack_c": "local_data_size",
                "auStack_8": "input_data"
            },
            "code": "void process_input_and_string_data_080043f0(undefined4 data_offset, undefined4* data_ptr, undefined4 data_size, undefined4* input_data_ptr)\n{\n  undefined4 local_data_ptr;\n  undefined4 local_data_size;\n  undefined4 input_data[2];\n  \n  local_data_ptr = *data_ptr;\n  local_data_size = *(data_ptr + 1);\n  input_data[0] = *input_data_ptr;\n  process_input_and_string_data_080043f0_08004300(data_offset, &local_data_ptr, data_size, input_data);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_string_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "num",
                "param_2": "N/A",
                "param_3": "N/A",
                "param_4": "N/A",
                "uVar1": "high_bits",
                "uVar2": "low_bits",
                "uVar3": "result",
                "uVar4": "shifted_num",
                "uVar5": "doubled_num",
                "uVar7": "shift_amount",
                "iVar6": "leading_zeroes",
                "bVar8": "is_shift_amount_zero",
                "bVar9": "is_param_4_zero_or_ff",
                "bVar10": "is_shift_amount_negative",
                "in_r12": "N/A"
            },
            "code": "uint64_t reverse_bits_08000428(uint32_t num) {\n    uint32_t reversed = 0;\n    for (int i = 0; i < 32; i++) {\n        if (num & (1 << i)) {\n            reversed |= 1 << (31 - i);\n        }\n    }\n    return (uint64_t)reversed << 32;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "set_flags_and_write_to_memory_08004ccc",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "iVar1": "data_address",
                "uVar2": "flags",
                "uVar3": "flag_value"
            },
            "code": "void set_flags_and_write_to_memory_08004ccc(uint32_t param1, uint32_t param2, uint32_t param3)\n{\n  int32_t data_address = DAT_08004d44;\n  uint32_t flags = *(uint32_t *)(DAT_08004d44 + 0x18) | 1;\n  *(uint32_t *)(DAT_08004d44 + 0x18) = flags;\n  uint32_t flag_value = *(uint32_t *)(data_address + 0x18) & 1;\n  set_param_bits_08001170(3, param2, flags, flag_value, param1, flag_value, param3);\n  write_to_memory_08001194(0xfffffff4, 0);\n  write_to_memory_08001194(0xfffffff5, 0);\n  write_to_memory_08001194(0xfffffff6, 0);\n  write_to_memory_08001194(0xfffffffb, 0);\n  write_to_memory_08001194(0xfffffffc, 0);\n  write_to_memory_08001194(0xfffffffe, 0);\n  write_to_memory_08001194(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_flags_and_write_to_memory_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_float_bits_08000a30",
                "param_1": "float_bits",
                "param_2": "exponent_bits",
                "uVar1": "result_bits",
                "uVar2": "exponent_bits_times_two",
                "uVar3": "normalized_exponent_bits",
                "in_r12": "denormalized_exponent_bits",
                "bVar4": "is_result_zero",
                "bVar5": "is_exponent_small",
                "SCARRY4": "SCARRY4",
                "PTR_0804a9e8": "PTR_0804a9e8",
                "PTR_0804a9f0": "PTR_0804a9f0",
                "PTR_0804a9f8": "PTR_0804a9f8",
                "PTR_0804aa00": "PTR_0804aa00",
                "PTR_0804aa08": "PTR_0804aa08"
            },
            "code": "uint calculate_float_bits_08000a30(uint float_bits, uint exponent_bits)\n{\n  uint exponent_bits_times_two = exponent_bits * 2;\n  bool is_exponent_small = exponent_bits_times_two < 0x70000000;\n  uint normalized_exponent_bits = exponent_bits_times_two + 0x90000000;\n  uint result_bits = normalized_exponent_bits;\n  uint denormalized_exponent_bits = 0;\n  bool is_result_zero = result_bits == 0;\n  if (!is_exponent_small) {\n    denormalized_exponent_bits = exponent_bits_times_two + 0x8fe00000;\n    result_bits = denormalized_exponent_bits;\n  }\n  bool is_exponent_valid = is_exponent_small || normalized_exponent_bits < 0x200000 || 0x1fc00000 < denormalized_exponent_bits || is_result_zero;\n  if (is_exponent_valid) {\n    if ((exponent_bits & 0x40000000) != 0) {\n      if (((int)exponent_bits_times_two >> 0x15 == -1) && ((float_bits | exponent_bits << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return exponent_bits & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(exponent_bits_times_two + 0x92e00000) < 0 != SCARRY4(normalized_exponent_bits,0x2e00000)) {\n      return exponent_bits & 0x80000000;\n    }\n    uint shift_amount = 0x18 - (exponent_bits_times_two + 0x92e00000 >> 0x15);\n    uint mantissa_bits = float_bits >> (shift_amount & 0xff);\n    if (float_bits << (0x20 - shift_amount & 0xff) != 0) {\n      mantissa_bits = mantissa_bits | 1;\n    }\n    normalized_exponent_bits = exponent_bits & 0x1fffff | 0x100000;\n    float_bits = mantissa_bits | normalized_exponent_bits << (0x20 - shift_amount & 0xff);\n    normalized_exponent_bits = (normalized_exponent_bits >> (shift_amount & 0xff)) << 1;\n  }\n  result_bits = (exponent_bits & 0x80000000 | float_bits >> 0x1d) + normalized_exponent_bits * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    result_bits = result_bits & 0xfffffffe;\n  }\n  return result_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_float_bits_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "process_data_080023d0",
                "param_1": "data",
                "*(char *)((int)param_1 + 0x39)": "data[9]",
                "*(undefined *)(param_1 + 0xe)": "data[14]",
                "update_flags_08004d8c()": "update_flags()",
                "*(undefined *)((int)param_1 + 0x39)": "data[9]",
                "update_values_08002368(*param_1,param_1 + 1)": "update_values(data[0], &data[1])"
            },
            "code": "int process_data_080023d0(int *data)\n{\n    if (data != NULL)\n    {\n        if (data[9] == 0)\n        {\n            data[14] = 0;\n            update_flags();\n        }\n        data[9] = 2;\n        update_values(data[0], &data[1]);\n        data[9] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "increment_if_match_08004c30",
                "param_1": "input",
                "puVar1": "data_ptr_1",
                "puVar2": "data_ptr_2",
                "uVar3": "flag",
                "uVar4": "data_1",
                "iVar5": "data_2"
            },
            "code": "int * increment_if_match_08004c30(int *input)\n{\n  undefined *data_ptr_1;\n  undefined *data_ptr_2;\n  undefined flag;\n  uint data_1;\n  int data_2;\n\n  data_ptr_1 = PTR_DAT_08004c58;\n  if (*input != DAT_08004c54) {\n    return input;\n  }\n  increment_and_store_08003ec8(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  data_ptr_2 = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (data_ptr_1 == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4 *)(data_ptr_2 + 0x3c) = 0;\n      *(undefined2 *)(data_ptr_2 + 0x2c) = 1;\n      *(undefined2 *)(data_ptr_2 + 0x2e) = 1;\n      data_ptr_2[0x38] = 0;\n      if (data_ptr_2[0x39] == '\\x12') {\n        flag = 0x32;\n      }\n      else {\n        flag = 0x22;\n      }\n      data_2 = *(int *)data_ptr_2;\n      data_ptr_2[0x39] = flag;\n      data_1 = *(uint *)(data_2 + 0xc);\n      *(undefined **)(data_ptr_2 + 0x28) = data_ptr_1;\n      *(uint *)(data_2 + 0xc) = data_1 | 0x100;\n      *(uint *)(data_2 + 0x14) = *(uint *)(data_2 + 0x14) | 1;\n      *(uint *)(data_2 + 0xc) = *(uint *)(data_2 + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "increment_if_match_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = decode_bits_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_08005900",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080071c0",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_param_in_global_data_08003fdc",
                "param_1": "param",
                "PTR_DAT_08003fe4": "global_ptr",
                "offset": "offset",
                "target_ptr": "target_ptr"
            },
            "code": "void set_param_in_global_data_08003fdc(int param) {\n    int* PTR_DAT_08003fe4 = (int*) PTR_DAT_08003fe4;\n    int offset = 0x38;\n    int* target_ptr = (int*) (PTR_DAT_08003fe4 + offset);\n    *target_ptr = param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_param_in_global_data_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "check_if_string_is_empty_080009f0",
                "in_CY": "input_char"
            },
            "code": "bool check_if_string_is_empty_080009f0(void)\n{\n  char input_char;\n  check_for_identical_values_and_return_param();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08006d68",
                "FUN_08005c70"
            ],
            "imported": false,
            "current_name": "check_if_string_is_empty_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_flags_08004f10",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flags_08004f10(void)\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08004f50;\n  *DAT_08004f50 |= 1;\n  flag_ptr[1] &= DAT_08004f54;\n  *flag_ptr &= 0xfef6ffff;\n  *flag_ptr &= 0xfffbffff;\n  flag_ptr[1] &= 0xff80ffff;\n  flag_ptr[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_flags_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "reverse_copy_data_08005044",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "param_3": "input_length",
                "param_4": "output_offset",
                "iVar1": "allocated_memory_block",
                "iVar4": "input_offset",
                "uVar2": "required_output_length",
                "uVar3": "available_output_space"
            },
            "code": "uint32_t reverse_copy_data_08005044(uint32_t *output_buffer, int *input_buffer, uint32_t input_length, uint32_t output_offset)\n{\n    int input_offset = input_buffer[4];\n    uint32_t required_output_length = (uint32_t)(input_buffer[5] * 3) / 2 + output_offset + 1 - input_offset;\n\n    if (input_buffer[2] <= input_length && (*(uint16_t *)(input_buffer + 3) & 0x480) != 0)\n    {\n        if ((int)((uint32_t)*(uint16_t *)(input_buffer + 3) << 0x15) < 0)\n        {\n            uint32_t allocated_memory_block = allocate_memory_block(output_buffer, required_output_length);\n            if (allocated_memory_block == 0)\n            {\n                *output_buffer = 0xc;\n                *(uint16_t *)(input_buffer + 3) = *(uint16_t *)(input_buffer + 3) | 0x40;\n                return 0xffffffff;\n            }\n            copy_data_to_buffer(allocated_memory_block, input_buffer[4], input_offset);\n            *(uint16_t *)(input_buffer + 3) = *(uint16_t *)(input_buffer + 3) & 0xfb7f | 0x80;\n            input_buffer[4] = allocated_memory_block;\n        }\n        else\n        {\n            uint32_t allocated_and_copied_data = allocate_and_copy_data(output_buffer, input_buffer[4], required_output_length);\n            if (allocated_and_copied_data == 0)\n            {\n                insert_node(output_buffer, input_buffer[4]);\n                *output_buffer = 0xc;\n                *(uint16_t *)(input_buffer + 3) = *(uint16_t *)(input_buffer + 3) | 0x40;\n                return 0xffffffff;\n            }\n            input_buffer[4] = allocated_and_copied_data;\n        }\n        input_buffer[5] = required_output_length;\n        input_buffer[2] = required_output_length - input_offset;\n    }\n\n    if (input_length <= input_buffer[2])\n    {\n        input_buffer[2] -= input_length;\n    }\n    else\n    {\n        input_length = input_buffer[2];\n    }\n    reverse_copy(input_buffer[0], output_offset, input_length);\n    input_buffer[2] -= input_length;\n    input_buffer[0] += input_length;\n    return 0;\n}",
            "called": [
                "FUN_08005646",
                "FUN_080057d0",
                "FUN_08005630",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "reverse_copy_data_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initializeSensorsAndData_08004194",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "uVar5": "var1",
                "uVar6": "var2",
                "uVar7": "var3",
                "uVar8": "var4"
            },
            "code": "void initializeSensorsAndData_08004194(){\n    runExperiment();\n    initializeAndCheckArray();\n    processAndStoreMPU9250Data();\n    readMS5611DataAndStore();\n    undefined *ptr1 = PTR_DAT_080049f0;\n    undefined *ptr2 = PTR_DAT_080049ec;\n    undefined *ptr3 = PTR_DAT_080049e8;\n    *(undefined4 *)(PTR_DAT_080049ec + 0x4c) = 1;\n    *(undefined4 *)(ptr3 + 0x4c) = 1;\n    *(undefined4 *)(ptr1 + 0x4c) = 0xffffffff;\n    undefined4 var1 = DAT_080049f8;\n    undefined *ptr4 = PTR_DAT_080049f4;\n    *(undefined4 *)(PTR_DAT_080049f4 + 0x4c) = 1;\n    undefined4 var2 = DAT_08004a00;\n    *(undefined4 *)(ptr2 + 0x20) = DAT_080049fc;\n    *(undefined4 *)(ptr3 + 0x20) = DAT_08004a0c;\n    *(undefined4 *)(ptr2 + 4) = var1;\n    *(undefined4 *)(ptr2 + 8) = DAT_08004a10;\n    *(undefined4 *)(ptr2 + 0xc) = var2;\n    *(undefined4 *)(ptr2 + 0x10) = DAT_08004a08;\n    *(undefined4 *)(ptr2 + 0x14) = DAT_08004a10;\n    *(undefined4 *)(ptr2 + 0x18) = DAT_08004a14;\n    *(undefined4 *)(ptr1 + 4) = DAT_08004a18;\n    *(undefined4 *)(ptr1 + 8) = DAT_08004a10;\n    *(undefined4 *)(ptr1 + 0xc) = DAT_08004a1c;\n    *(undefined4 *)(ptr1 + 0x10) = DAT_08004a18;\n    *(undefined4 *)(ptr1 + 0x14) = DAT_08004a10;\n    *(undefined4 *)(ptr1 + 0x18) = DAT_08004a20;\n    *(undefined4 *)(ptr3 + 4) = DAT_08004a24;\n    *(undefined4 *)(ptr3 + 8) = DAT_08004a28;\n    *(undefined4 *)(ptr3 + 0xc) = var2;\n    *(undefined4 *)(ptr4 + 4) = DAT_08004a2c;\n}",
            "called": [
                "FUN_08002ea0",
                "FUN_08004028",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initializeSensorsAndData_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "toggle_bit_2_of_global_variable_08001240",
                "param_1": "param",
                "*DAT_08001254": "global_variable",
                "uVar1": "old_value"
            },
            "code": "void toggle_bit_2_of_*toggle_bit_2_of_global_variable_08001240(int param) {\n  uint32_t old_value;\n  if (param == 4) {\n    old_value = **toggle_bit_2_of_global_variable_08001240 | 0x04;\n  }\n  else {\n    old_value = **toggle_bit_2_of_global_variable_08001240 & 0xFFFFFFFB;\n  }\n  **toggle_bit_2_of_global_variable_08001240 = old_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "toggle_bit_2_of_global_variable_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_updated_value_08005840",
                "param_1": "initial_value",
                "param_2": "ptr_to_value",
                "iVar1": "updated_value",
                "*(int *)(param_2 + -4)": "*(ptr_to_value - 1)",
                "*(int *)(param_2 + iVar1)": "*(ptr_to_value + updated_value / sizeof(int))"
            },
            "code": "int calculate_updated_value_08005840(int initial_value, int* ptr_to_value){\n  int updated_value = *(ptr_to_value - 1) - 4;\n  if (*(ptr_to_value - 1) < 0) {\n    updated_value += *(ptr_to_value + updated_value / sizeof(int));\n  }\n  return updated_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_updated_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "string",
                "pcVar2": "current_pos",
                "pcVar3": "current_char_pos",
                "cVar1": "current_char"
            },
            "code": "char* find_end_of_string_08000150(char *string) {\n  char current_char;\n  char *current_pos = string;\n  do {\n    current_pos++;\n    current_char = *current_pos;\n  } while (current_char != '\\0');\n  return current_pos + (-1 - (int)string);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "set_param_values_08003f3c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "uVar1": "ptr1",
                "uVar2": "leading_zeroes",
                "DAT_08003f78": "DAT_ptr"
            },
            "code": "void set_param_values_08003f3c(uint32_t value1, uint32_t value2, uint32_t value3)\n{\n  uint32_t ptr1 = DAT_08003f78;\n  uint32_t leading_zeroes1 = count_leading_zeroes(value1);\n  set_param_08001424(DAT_08003f78,0x8000,leading_zeroes1 >> 5);\n  uint32_t leading_zeroes2 = count_leading_zeroes(value2);\n  set_param_08001424(ptr1,0x4000,leading_zeroes2 >> 5);\n  uint32_t leading_zeroes3 = count_leading_zeroes(value3);\n  set_param_08001424(ptr1,0x2000,leading_zeroes3 >> 5);\n  return;\n}",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "set_param_values_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_value_from_pointer_08002214",
                "undefined4": "int",
                "PTR_DAT_0800221c": "value_pointer",
                "*": "dereference_operator"
            },
            "code": "int get_value_from_pointer_08002214() {\n  int* PTR_DAT_0800221c = PTR_DAT_0800221c;\n  return *PTR_DAT_0800221c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_values_08001004",
                "param_1": "first_value",
                "param_2": "second_value",
                "CONCAT44": "bitwise_concatenation",
                "calculate_result_08000f9c": "calculate_result"
            },
            "code": "uint64_t concatenate_values_08001004(uint32_t first_value, uint32_t second_value) {\n  calculate_result();\n  return ((uint64_t)second_value << 32) | first_value;\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "imported": false,
            "current_name": "concatenate_values_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "set_bits_in_data_08003ff4",
                "puVar1": "data_ptr"
            },
            "code": "void set_bits_in_data_08003ff4(void)\n{\n  undefined *data_ptr;\n  data_ptr = PTR_DATA_0800401c;\n  set_bit_at_position_08002538(PTR_DATA_08004020,4);\n  set_bit_at_position_08002538(PTR_DATA_08004024,8);\n  set_bit_at_position_08002538(data_ptr,8);\n  set_bit_at_position_08002538(data_ptr,0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "set_bits_in_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "runSensorDataLoop_080041ae",
                "convert_param_to_64bit_08003eb0": "convertParameterTo64Bit",
                "initializeSensorsAndData_08004194": "initializeSensorsAndData",
                "increment_ptr_dat_value_0800114c": "incrementDataPointer",
                "FUNC_0800411c": "processSensorData"
            },
            "code": "void runSensorDataLoop_080041ae(void)\n{\n  convertParameterTo64Bit(0);\n  initializeSensorsAndData();\n  do {\n    incrementDataPointer();\n    processSensorData();\n  } while (true);\n}",
            "called": [
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_08003eb0",
                "FUN_0800114c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "runSensorDataLoop_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "initialize_program_08001128",
                "set_param_bits_08001170": "set_param_bits",
                "writeToMemory_08001104": "write_to_memory",
                "set_flags_and_write_to_memory_08004ccc": "set_flags_and_write_to_memory",
                "DAT_08001148": "data_pointer",
                "*DAT_08001148": "*data_pointer",
                "param_bits": "param_bits"
            },
            "code": "int initialize_program_08001128(void)\n{\n    int* DAT_08001148 = DAT_08001148;\n    int param_bits = 3;\n    writeToMemory_08001104(0);\n    set_flags_and_write_to_memory_08004ccc();\n    *DAT_08001148 |= 0x10;\n    return 0;\n}",
            "called": [
                "FUN_08004ccc",
                "FUN_08001170",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_program_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "process_peripherals_08004514",
                "iVar1": "success",
                "uVar2": "value",
                "uVar3": "constant_60",
                "iVar4": "counter",
                "local_44": "constant_15",
                "local_40": "success",
                "local_3c": "success",
                "local_34": "success",
                "local_30": "array",
                "local_20": "constant_1",
                "local_1c": "constant_16",
                "local_14": "constant_2",
                "local_10": "constant_0",
                "local_c": "constant_0x380000",
                "FUNC_08001b58": "check_array_08001b58",
                "process_data_and_print_results_08004490": "process_data_and_print_results_08004490",
                "get_value_from_pointer_08002214": "get_value_from_pointer_08002214",
                "check_param_08001214": "check_param_08001214",
                "toggle_bit_2_of_global_variable_08001240": "toggle_bit_2_of_global_variable_08001240",
                "write_to_memory_08001194": "write_to_memory_08001194",
                "PTR_s____Src_peripherals_c_08004588": "PTR_s____Src_peripherals_c_08004588"
            },
            "code": "void process_peripherals_08004514(void)\n{\n    int success;\n    uint32_t value;\n    uint32_t constant_1 = 1;\n    uint32_t constant_16 = 0x10;\n    int counter = 2;\n    uint32_t constant_0 = 0;\n    uint32_t array[4] = {2, 0, 0, 0};\n    uint32_t constant_2 = 2;\n    uint32_t constant_0x380000 = 0x380000;\n    success = check_array_08001b58(array);\n    if (success == 0) goto end;\n    uint32_t constant_60 = 0x3c;\n    while(1) {\n        success = process_data_and_print_results_08004490(PTR_s____Src_peripherals_c_08004588, constant_60);\n        uint32_t constant_73 = 0x49;\n        uint32_t temp = check_and_write_0800209c(&constant_15, counter, success, success);\n        if (temp == 0) break;\n        counter = temp;\n        constant_60 = constant_73;\n    }\n    value = get_value_from_pointer_08002214();\n    check_param_08001214(value / 1000);\n    toggle_bit_2_of_global_variable_08001240(4);\n    write_to_memory_08001194(0xffffffff, constant_0, constant_0);\n    end:\n    return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_08001214",
                "FUN_08002214",
                "FUN_08001240"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_peripherals_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "process_input_and_update_data_if_needed_08004a84",
                "uVar7": "result",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "puVar5": "ptr5",
                "iVar8": "is_input_empty",
                "DAT_08004c00": "null_string",
                "DAT_08004bfc": "empty_input",
                "calculate_result_08002ec0": "calculate_result",
                "calculate_new_value_08002ed4": "calculate_new_value",
                "check_and_concatenate_string_08002ee8": "check_and_concatenate_string",
                "update_data_if_needed_08004a30": "update_data_if_needed",
                "is_input_empty_08001064": "is_input_empty",
                "is_concatenated_string_null_08001028_08001028": "is_concatenated_string_null",
                "set_param_values_08003f3c": "set_param_values",
                "process_input_0800483c": "process_input",
                "PTR_DAT_08004c04": "ptr4",
                "PTR_DAT_08004c08": "ptr5",
                "set_parameters_in_memory_and_global_data_080041c4": "set_parameters_in_memory_and_global_data",
                "calculate_params_and_store_in_memory_0800426c": "calculate_params_and_store_in_memory",
                "FUNC_08000adc": "shift_and_add",
                "FUNC_08000cec": "shift_and_store",
                "calculate_shifted_value_080010c4": "calculate_shifted_value"
            },
            "code": "void process_input_and_update_data_if_needed_08004a84(void)\n{\n    int result = calculate_result();\n    int *ptr1 = PTR_08004bf0;\n    int *ptr2 = PTR_08004bf4;\n    int *ptr3 = PTR_08004bf8;\n    ptr1[12] = result;\n    int new_value = calculate_new_value();\n    ptr2[12] = new_value;\n    int concatenated_string = check_and_concatenate_string();\n    ptr3[12] = concatenated_string;\n    update_data_if_needed();\n    int is_input_empty = is_input_empty_08001064(ptr1[12], 0);\n    if (is_input_empty == 0)\n    {\n        int is_concatenated_string_null = is_concatenated_string_null_08001028_08001028(ptr1[12], DAT_08004c00);\n        if (is_concatenated_string_null != 0)\n        {\n            is_input_empty = is_input_empty_08001064(ptr1[12], DAT_08004bfc);\n        }\n    }\n    if (is_input_empty == 0)\n    {\n        int is_input_empty_2 = is_input_empty_08001064(ptr2[12], 0);\n        if (is_input_empty_2 == 0)\n        {\n            int is_concatenated_string_null_2 = is_concatenated_string_null_08001028_08001028(ptr2[12], DAT_08004c00);\n            if (is_concatenated_string_null_2 != 0)\n            {\n                is_input_empty_2 = is_input_empty_08001064(ptr2[12], DAT_08004bfc);\n            }\n        }\n        if (is_input_empty_2 == 0)\n        {\n            set_param_values_08003f3c(1, 1);\n            process_input_0800483c(ptr1);\n            process_input_0800483c(ptr2);\n            process_input_0800483c(ptr3);\n            int *PTR_DAT_08004c04 = PTR_08004c04;\n            if (PTR_DAT_08004c04[1] != 0)\n            {\n                process_input_0800483c(PTR_08004c08);\n                int shifted_value = calculate_shifted_value_080010c4();\n                PTR_DAT_08004c08[12] = FUNC_08000adc(PTR_DAT_08004c08[12], DAT_08004c0c);\n            }\n            PTR_DAT_08004c08[12] = PTR_DAT_08004c04[4];\n            if (*PTR_DAT_08004c04 == 0)\n            {\n                set_parameters_in_memory_and_global_data_080041c4();\n            }\n            else\n            {\n                calculate_params_and_store_in_memory_0800426c(PTR_DAT_08004c08[12], ptr1[12], ptr2[12], ptr3[12]);\n            }\n            FUNC_08000cec(ptr1[4], DAT_08004c10);\n            int shifted_value = calculate_shifted_value_080010c4();\n            int *ptr6 = PTR_08004c14;\n            ptr6[3] = shifted_value;\n            FUNC_08000cec(ptr1[8], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[4] = shifted_value;\n            FUNC_08000cec(ptr2[4], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            *ptr6 = shifted_value;\n            FUNC_08000cec(ptr2[8], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[1] = shifted_value;\n            FUNC_08000cec(ptr2[12], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[2] = shifted_value;\n            FUNC_08000cec(ptr3[4], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[6] = shifted_value;\n            FUNC_08000cec(ptr3[8], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[7] = shifted_value;\n            FUNC_08000cec(ptr3[12], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[8] = shifted_value;\n            FUNC_08000cec(PTR_DAT_08004c08[4], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[9] = shifted_value;\n            FUNC_08000cec(PTR_DAT_08004c08[8], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[10] = shifted_value;\n            FUNC_08000cec(PTR_DAT_08004c08[12], DAT_08004c10);\n            shifted_value = calculate_shifted_value_080010c4();\n            ptr6[11] = shifted_value;\n            return;\n        }\n    }\n    set_parameters_in_memory_and_global_data_080041c4();\n    set_param_values_08003f3c(0, 1);\n}",
            "called": [
                "FUN_08000cec",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0",
                "FUN_08001028",
                "FUN_0800483c",
                "FUN_08004a30",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_input_and_update_data_if_needed_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "set_parameters_in_memory_and_global_data_080041c4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "result"
            },
            "code": "void set_parameters_in_memory_and_global_data_080041c4(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4)\n{\n    uint32_t result = 0;\n    set_parameter_in_memory(param1);\n    set_parameter_value(param2);\n    set_param_in_global_data(result);\n    set_param_in_memory(param3, result, param3, param4);\n}",
            "called": [
                "FUN_08003fd0",
                "FUN_08003fdc",
                "FUN_08003fc4",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "set_parameters_in_memory_and_global_data_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = find_character_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = process_data_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_08005614",
                "FUN_080052e4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "allocate_and_copy_data_080057d0",
                "param_1": "memory_block",
                "param_2": "data_address",
                "param_3": "data_size",
                "param_4": "additional_param",
                "uVar1": "allocated_block",
                "uVar2": "updated_value"
            },
            "code": "uint allocate_and_copy_data_080057d0(uint memory_block, uint data_address, uint data_size, uint additional_param) {\n  uint allocated_block;\n  uint updated_value;\n  if (data_address != 0) {\n    if (data_size == 0) {\n      insert_node();\n      allocated_block = data_size;\n    }\n    else {\n      updated_value = calculate_updated_value();\n      allocated_block = data_address;\n      if ((updated_value < data_size) && (allocated_block = allocate_memory_block(memory_block, data_size), allocated_block != 0)) {\n        copy_data_to_buffer(allocated_block, data_address, data_size);\n        insert_node(memory_block, data_address);\n      }\n    }\n    return allocated_block;\n  }\n  allocated_block = allocate_memory_block(memory_block, data_size, data_size, additional_param);\n  return allocated_block;\n}",
            "called": [
                "FUN_08005840",
                "FUN_08005630",
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "allocate_and_copy_data_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "insert_node_0800567c",
                "param_1": "head",
                "param_2": "key",
                "param_3": "value",
                "param_4": "error_code",
                "puVar1": "new_head",
                "extraout_r1": "new_node",
                "ppiVar2": "current",
                "ppiVar3": "prev",
                "piVar4": "temp",
                "ppiVar5": "temp_head",
                "ppiVar6": "temp_node",
                "ppiVar7": "node"
            },
            "code": "void insert_node_0800567c(int **head, int key, int value, int *error_code) {\n  if (key == 0) {\n    *error_code = 1;\n    return;\n  }\n  int **new_node = malloc(sizeof(int*) * 2);\n  if (new_node == NULL) {\n    *error_code = 2;\n    return;\n  }\n  new_node[0] = (int*)key;\n  new_node[1] = (int*)value;\n  if (*head == NULL) {\n    *head = new_node;\n    return;\n  }\n  int **current = *head;\n  int **prev = NULL;\n  while (current != NULL && (int)current[0] < key) {\n    prev = current;\n    current = (int**)current[1];\n  }\n  if (current != NULL && (int)current[0] == key) {\n    *error_code = 3;\n    return;\n  }\n  if (prev == NULL) {\n    new_node[1] = (int*)*head;\n    *head = new_node;\n  } else {\n    prev[1] = (int*)new_node;\n    new_node[1] = (int*)current;\n  }\n}",
            "called": [
                "FUN_0800583e",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "insert_node_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  initialize_program_08001128();\n  process_peripherals_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  set_param_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  set_param_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  process_data_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  process_data_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = set_param_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = process_data_and_print_results_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = check_and_update_data_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = process_data_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = initialize_data_structure_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = set_bits_flags_and_values_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = check_flag_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        process_data_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = process_data_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = initialize_data_structure_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = set_bits_flags_and_values_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  process_data_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = process_data_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = initialize_data_structure_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = set_bits_flags_and_values_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = set_bits_flags_and_values_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          process_data_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = process_data_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = initialize_data_structure_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = set_bits_flags_and_values_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = set_bits_flags_and_values_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  process_data_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001424",
                "FUN_080023d0",
                "FUN_080025a4",
                "FUN_08002564",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08004490",
                "FUN_08001128",
                "FUN_08001754",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_0800245c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08000110",
                "FUN_08000134",
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ee8",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_0800426c",
                "FUN_08003330",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "concatenate_values_and_swap_params_08000ffc",
                "param_1": "value1",
                "param_2": "value2",
                "concatenate_values_08001004": "concatenate_values"
            },
            "code": "void concatenate_values_and_swap_params_08000ffc(int value1, int value2)\n{\n  concatenate_values(value2, value1);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001064",
                "FUN_08001050"
            ],
            "imported": false,
            "current_name": "concatenate_values_and_swap_params_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_value_and_update_status_080016f4",
                "param_1": "pointer_array",
                "param_2": "array_length",
                "iVar1": "start_value",
                "iVar2": "current_pointer",
                "get_value_from_pointer_0800115c": "get_value_from_pointer",
                "status": "status"
            },
            "code": "int check_value_and_update_status_080016f4(int *pointer_array, uint32_t array_length)\n{\n    int start_value = get_value_from_pointer();\n    while (true)\n    {\n        int current_pointer = *pointer_array;\n        uint32_t status = *(uint *)(current_pointer + 0x14);\n        if ((status & 0x40) != 0)\n        {\n            return 0;\n        }\n        if ((*(int *)(current_pointer + 0x14) << 0x1b) < 0 || (array_length != 0 && (get_value_from_pointer() - start_value) >= array_length))\n        {\n            pointer_array[0xe] |= 0x20;\n            *(undefined *)((int)pointer_array + 0x35) = 0x20;\n            *(undefined *)(pointer_array + 0xd) = 0;\n            return 3;\n        }\n    }\n    *(uint *)(current_pointer + 0x14) &= 0xffffffef;\n    pointer_array[0xe] = 0;\n    *(undefined *)(pointer_array + 0xd) = 0;\n    *(undefined *)((int)pointer_array + 0x35) = 0x20;\n    return 1;\n}\n",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_value_and_update_status_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "initialize_data_structure_080025a4",
                "param_1": "data",
                "param_2": "config",
                "uVar1": "config_value_1",
                "uVar2": "return_value",
                "iVar3": "data_structure_address",
                "uVar4": "config_value_2"
            },
            "code": "int initialize_data_structure_080025a4(int *data, uint *config) {\n    uint config_value_1;\n    int data_structure_address = *data;\n    uint config_value_2 = *config;\n    uint config_value_3 = config[1];\n    if (*(char *)(data + 0xe) != '\\x01') {\n        *(undefined *)((int)data + 0x39) = 2;\n        *(uint *)(data_structure_address + 4) = *(uint *)(data_structure_address + 4) & 0xffffff8f;\n        *(uint *)(data_structure_address + 4) = *(uint *)(data_structure_address + 4) | config_value_2;\n        *(uint *)(data_structure_address + 8) = *(uint *)(data_structure_address + 8) & 0xffffff7f;\n        *(uint *)(data_structure_address + 8) = *(uint *)(data_structure_address + 8) | config_value_3;\n        *(undefined *)((int)data + 0x39) = 1;\n        *(undefined *)(data + 0xe) = 0;\n        return 0;\n    }\n    else {\n        return 2;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "initialize_data_structure_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "count_leading_zeroes_and_shift_08002220",
                "uVar1": "leading_zeroes",
                "PTR_DAT_0800224c": "ptr_dat_0800224c",
                "PTR_DAT_08002248": "ptr_dat_08002248",
                "DAT_08002244": "dat_08002244"
            },
            "code": "uint count_leading_zeroes_and_shift_08002220(uint value_to_shift) {\n    uint leading_zeroes = count_leading_zeroes(0xe00000);\n    uint shift_amount = (*(uint *)PTR_DAT_0800224c >> PTR_DAT_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (leading_zeroes & 0xff)]);\n    return value_to_shift >> shift_amount;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_080025e8",
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_and_shift_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "process_and_concat_data_08003034",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "param_4": "data_4",
                "local_c": "concatenated_data"
            },
            "code": "uint process_and_concat_data_08003034(uint32_t param_1, uint32_t param_2, uint32_t param_3, uint32_t param_4) {\n  uint32_t concatenated_data;\n  concatenated_data = param_4;\n  process_data_if_valid(0xee, 0, &concatenated_data, 3, PTR_s____Src_MS5611_c_08003064, 0x8c, param_3);\n  return (uint)CONCAT12((undefined)concatenated_data, CONCAT11(concatenated_data._1_1_, concatenated_data._2_1_));\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_and_concat_data_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "process_data_and_set_bit_if_match_08004e7c",
                "param_1": "user_input",
                "local_18": "data_to_process_1",
                "local_14": "data_to_process_3",
                "local_10": "data_to_process_4",
                "local_c": "data_to_process_5",
                "*param_1": "*user_input",
                "DAT_08004edc": "data_address",
                "DAT_08004ee0": "data_to_process_address"
            },
            "code": "void process_data_and_set_bit_if_match_08004e7c(int *user_input)\n{\n    uint32_t DAT_08004edc = DAT_08004edc;\n    uint32_t data_value = *(uint32_t *)(DAT_08004edc);\n    uint32_t bit_to_set = 0x25;\n    uint32_t bit_mask = 0x4000;\n    if (data_value == *user_input) {\n        *(uint32_t *)(DAT_08004edc + 0xd818) |= bit_mask;\n        uint32_t data_to_process_1 = 0x200;\n        uint32_t data_to_process_2 = 0x400;\n        uint32_t data_to_process_3 = 2;\n        uint32_t data_to_process_4 = 0;\n        uint32_t data_to_process_5 = 3;\n        process_data_08001264(DAT_08004ee0, &data_to_process_1);\n        process_data_08001264(DAT_08004ee0, &data_to_process_2);\n        write_to_memory_08001194(bit_to_set, data_to_process_3, data_to_process_4);\n        set_bit_080011fc(bit_to_set);\n    }\n}",
            "called": [
                "FUN_08001194",
                "FUN_080011fc",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "process_data_and_set_bit_if_match_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "enable_and_check_08001530",
                "param_1": "pointer_to_pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4",
                "iVar1": "var1",
                "puVar3": "inner_pointer",
                "ppuVar4": "pointer",
                "uVar5": "param1",
                "uVar6": "param2",
                "iVar2": "check_result"
            },
            "code": "int enable_and_check_08001530(uint **pointer_to_pointer, uint value1, uint value2, int value3, uint value4) {\n  int result = 0;\n  uint **pointer = pointer_to_pointer;\n  uint param1 = value1;\n  uint param2 = value2;\n  int var1 = get_value_from_pointer_0800115c();\n  do {\n    uint *inner_pointer = *pointer;\n    do {\n      if ((int)(inner_pointer[5] << 0x1f) < 0) {\n        inner_pointer[4] = value1 & 0xfe;\n        int check_result = check_parameters_08001460(pointer, DAT_080015e4, value4, inner_pointer, pointer_to_pointer, param1, param2);\n        if (check_result == 0) {\n          check_result = check_value_and_disable_080014e2(pointer, value4, (*pointer)[5], (*pointer)[6]);\n          if (check_result == 0) {\n            inner_pointer = *pointer;\n            if (value3 == 1) {\n              goto set_value1;\n            }\n            inner_pointer[4] = value2 >> 8;\n            check_result = check_value_and_disable_080014e2(pointer, value4);\n            if (check_result == 0) {\n              inner_pointer = *pointer;\n              goto set_value1;\n            }\n          }\n          if (pointer[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **pointer = **pointer | 0x200;\n        }\n        else if (pointer[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (value4 == 0xffffffff);\n    if ((value4 == 0) || (int value2 = get_value_from_pointer_0800115c(), value4 < (uint)(value2 - var1))) {\n      *(undefined *)((int)pointer + 0x35) = 0x20;\n      *(undefined *)(pointer + 0xd) = 0;\n      return 3;\n    }\n  } while(true);\n\nset_value1:\n  inner_pointer[4] = value1 & 0xff;\n  return check_result;\n}\n",
            "called": [
                "FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "enable_and_check_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_data_in_pointer_08003314",
                "param_1": "data",
                "PTR_DAT_0800331c": "pointer_data"
            },
            "code": "void set_data_in_pointer_08003314(void* data)\n{\n  *(void**)PTR_DAT_0800331c = data;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_data_in_pointer_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "validate_and_shift_input": "validate_and_shift_input",
                "param_1": "input1",
                "param_2": "input2",
                "puVar1": "ptr",
                "iVar2": "isStringEmpty",
                "puVar3": "valuePtr",
                "piVar4": "piVar4",
                "uVar5": "result",
                "uVar6": "doNothingResult",
                "local_48": "local_48",
                "local_44": "local_44",
                "local_40": "local_40",
                "uStack_3c": "uStack_3c",
                "local_38": "local_38",
                "uStack_34": "uStack_34",
                "local_30": "shiftedResult",
                "FUN_08005854": "validate_and_shift_input_08005854"
            },
            "code": "undefined8 validate_and_shift_input_08005854(undefined4 input1, undefined4 input2)\n{\n  int isValidInput;\n  int isStringEmpty;\n  undefined8 result = FUN_get_current_time();\n  undefined *ptr = PTR_DAT_080058f8;\n  if (*ptr == -1) {\n    return result;\n  }\n  isValidInput = FUN_is_valid_input(input1, input2, input1, input2);\n  if (isValidInput != 0) {\n    return result;\n  }\n  undefined8 doNothingResult = FUN_do_nothing(input1, input2);\n  isStringEmpty = FUN_check_if_string_is_empty((int)doNothingResult, (int)((ulonglong)doNothingResult >> 0x20), 0, DAT_080058ec);\n  if (isStringEmpty == 0) {\n    return result;\n  }\n  undefined4 local_48 = 1;\n  undefined *local_44 = PTR_DAT_080058f0;\n  undefined4 local_40 = input1;\n  undefined4 uStack_3c = input2;\n  undefined4 local_38 = input1;\n  undefined4 uStack_34 = input2;\n  undefined8 shiftedResult = FUN_shift_left_64_bits(PTR_DAT_080058f4);\n  if (*ptr != '\\x02') {\n    int zero = FUN_get_zero(&local_48);\n    if (zero != 0) goto LAB_080058d0;\n  }\n  undefined4 *valuePtr = (undefined4 *)FUN_get_value_from_ptr_ptr_dat_080072ac();\n  *valuePtr = 0x21;\nLAB_080058d0:\n  if (isValidInput != 0) {\n    int *piVar4 = (int *)FUN_get_value_from_ptr_ptr_dat_080072ac();\n    *piVar4 = isValidInput;\n  }\n  return shiftedResult;\n}",
            "called": [
                "FUN_08000a04",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_080070a4",
                "FUN_080009f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "validate_and_shift_input_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "check_if_concatenated_values_not_empty_08001014",
                "in_ZR": "input_char",
                "concatenate_values_08001004": "concatenate_values"
            },
            "code": "bool check_if_concatenated_values_not_empty_08001014(void)\\n{\\n  char input_char;\\n  concatenate_values();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "check_if_concatenated_values_not_empty_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_number_080071c0",
                "param_1": "lower",
                "param_2": "upper",
                "param_3": "shift",
                "param_4": "parameter",
                "uVar1": "shift_result",
                "uVar3": "uVar3",
                "uVar4": "uVar4",
                "uVar5": "upper_bits",
                "iVar2": "shifted"
            },
            "code": "unsigned long long calculate_number_080071c0(uint32_t lower, uint32_t upper, int shift, undefined4 parameter) {\n    unsigned long long number = ((unsigned long long) upper << 32) | lower;\n    uint32_t shift_result = (upper << 1) >> 21;\n    if (shift_result == 0) {\n        if ((upper & 0x7fffffff) | lower == 0) {\n            return number;\n        }\n        number = calculate_080004d0(lower, upper, 0, DAT_08007290);\n        unsigned int uVar3 = DAT_08007280;\n        unsigned int uVar4 = DAT_08007284;\n        if (shift < DAT_08007294) {\n            goto LAB_0800722e;\n        }\n        shift_result = (((unsigned int) (number >> 32) << 1) >> 21) - 54;\n    } else if (shift_result == 2047) {\n        return calculate_0800016c(lower, upper, lower, upper, parameter);\n    }\n    uint32_t upper_bits = (uint32_t) (number >> 32);\n    int shifted = shift_result + shift;\n    if (shifted < 2047) {\n        if (shifted > 0) {\n            return number & 0xffffffff | (unsigned long long) ((upper_bits & 0x800fffff) | shifted * 0x100000) << 32;\n        }\n        if ((shifted + 53 < 0) == SCARRY4(shifted, 53)) {\n            number = number & 0xffffffff | (unsigned long long) ((upper_bits & 0x800fffff) | (shifted + 54) * 0x100000) << 32;\n            uVar3 = 0;\n            uVar4 = DAT_08007298;\n            goto LAB_0800722e;\n        }\n        if (shift < 49937) {\n            number = do_nothing_0800729c(DAT_08007280, DAT_08007284, (int) number, upper_bits);\n            uVar3 = DAT_08007280;\n            uVar4 = DAT_08007284;\n            goto LAB_0800722e;\n        }\n    }\n    number = do_nothing_0800729c(DAT_08007288, DAT_0800728c, (int) number, upper_bits);\n    uVar3 = DAT_08007288;\n    uVar4 = DAT_0800728c;\nLAB_0800722e:\n    number = calculate_080004d0((int) number, (int) (number >> 32), uVar3, uVar4);\n    return number;\n}",
            "called": [
                "FUN_0800729c",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_number_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_character_08005614",
                "param_1": "string",
                "param_2": "character_to_find",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char * find_character_08005614(char *string, char character_to_find, int string_length) {\n  char *current_char = string;\n  do {\n    if (current_char == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char++;\n  } while (*current_char != character_to_find);\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_character_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculate_result_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08005900",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08003330",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_64_bits_080070a4",
                "DAT_080070ac": "data",
                "ulonglong": "unsigned long long",
                "PTR_": "no change",
                "DAT_": "no change"
            },
            "code": "unsigned long long shift_left_64_bits_080070a4(unsigned int DAT_080070ac) {\n    unsigned long long shifted_DAT_080070ac = (unsigned long long) DAT_080070ac << 0x20;\n    return shifted_DAT_080070ac;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08006228",
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "shift_left_64_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "check_and_process_data_0800407c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "output_1",
                "param_4": "output_2",
                "iVar1": "result",
                "local_14": "buffer",
                "FUNC_08001938": "check_data",
                "PTR_DAT_080040b4": "data_pointer",
                "process_data_and_print_results_08004490": "process_and_print_results"
            },
            "code": "int check_and_process_data_0800407c(undefined4 input_1, undefined4 input_2, undefined4 output_1, undefined4 output_2)\n{\n  int result = 0;\n  undefined buffer[8];\n  buffer[0] = 0;\n  result = check_data(PTR_DAT_080040b4, input_1, input_2, 1, buffer, 1, 200);\n  if (result != 0) {\n    process_data_and_print_results_08004490(output_1, output_2);\n  }\n  return buffer[0];\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_080040e8",
                "FUN_08002ad0",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "check_and_process_data_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = set_and_check_parameters_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = check_value_and_update_status_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = check_value_and_update_status_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = get_value_from_pointer_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = get_value_from_pointer_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080016f4",
                "FUN_0800115c",
                "FUN_080015e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_sensor_data_08002f28();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_input_and_update_data_if_needed_08004a84();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    process_data_and_strings_08004348();\n    process_input_and_string_data_08004384();\n    process_input_and_string_data_080043f0();\n    process_input_and_string_data_08004410();\n    process_input_and_string_data_08004434();\n    process_and_send_data_080043bc();\n    process_input_and_string_data_08004300_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = convert_unsigned_int_to_fixed_point_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = convert_unsigned_int_to_fixed_point_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = reverse_bits_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = calculate_float_bits_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = extract_msb_bits_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    process_i2c_data_and_print_results_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = process_and_concat_data_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    process_i2c_data_and_print_results_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = process_and_concat_data_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "thunk_FUN_0800115c",
                "FUN_08004434",
                "FUN_08003034",
                "FUN_08000adc",
                "FUN_080043bc",
                "FUN_08001078",
                "FUN_08000c44",
                "FUN_08004384",
                "FUN_08000a30",
                "FUN_0800403c",
                "FUN_08000168",
                "FUN_08004458",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08005900",
                "FUN_08004a84",
                "FUN_08004410",
                "FUN_08000e54",
                "FUN_08000428",
                "FUN_08004348",
                "FUN_08002f28"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_values_080022d0",
                "param_1": "device_address",
                "param_2": "new_values",
                "uVar1": "new_value1",
                "uVar2": "old_value2",
                "uVar3": "old_value3",
                "mask1": "mask1",
                "mask2": "mask2",
                "mask3": "mask3",
                "mask4": "mask4",
                "*(uint *)(param_1 + 0x20)": "*(uint *)(device_address + 0x20)",
                "*(uint *)(param_1 + 4)": "*(uint *)(device_address + 4)",
                "*(uint *)(param_1 + 0x1c)": "*(uint *)(device_address + 0x1c)",
                "param_2[2]": "new_values[2]",
                "param_2[3]": "new_values[3]",
                "param_2[5]": "new_values[5]",
                "param_2[6]": "new_values[6]",
                "device_address == DAT_08002320": "device_address == PTR_DAT_08002320",
                "*(uint *)(param_1 + 0x20) & mask1 | param_2[2] << 8": "new_value1",
                "uVar2 & 0xffffcfff | (param_2[5] | param_2[6]) << 4": "new_value2",
                "new_value1 & mask3 | param_2[3] << 8": "new_value1 & mask3",
                "new_value1 & mask4": "new_value1 &= mask4",
                "*(uint *)(param_1 + 0x20) = new_value1": "*(uint *)(device_address + 0x20) = new_value1",
                "*(uint *)(param_1 + 4) = uVar2": "*(uint *)(device_address + 4) = new_value2",
                "*(uint *)(param_1 + 0x1c) = old_value3 & 0xffffff8c | uVar3": "*(uint *)(device_address + 0x1c) = (old_value3 & 0xffffff8c) | new_values[0]",
                "*(uint *)(param_1 + 0x3c) = param_2[1]": "*(uint *)(device_address + 0x3c) = new_values[1]"
            },
            "code": "void update_values_080022d0(int device_address, uint *new_values)\n{\n  uint mask1 = 0xfffffeff;\n  uint mask2 = 0xfffffdff;\n  uint mask3 = 0xfffff7ff;\n  uint mask4 = 0xfffffbff;\n  uint old_value1 = *(uint *)(device_address + 0x20);\n  uint old_value2 = *(uint *)(device_address + 4);\n  uint old_value3 = *(uint *)(device_address + 0x1c);\n  uint new_value1 = (old_value1 & mask1) | (new_values[2] << 8);\n  uint new_value2 = old_value2 & 0xffffcfff | ((new_values[5] | new_values[6]) << 4);\n  if (device_address == DAT_08002320) {\n    new_value1 = (new_value1 & mask3) | (new_values[3] << 8);\n    new_value1 &= mask4;\n  }\n  *(uint *)(device_address + 0x20) = new_value1;\n  *(uint *)(device_address + 4) = new_value2;\n  *(uint *)(device_address + 0x1c) = (old_value3 & 0xffffff8c) | new_values[0];\n  *(uint *)(device_address + 0x3c) = new_values[1];\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_values_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "calculate_shifted_value_080010c4",
                "param_1": "input_value",
                "uVar1": "shift_amount",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "uint calculate_shifted_value_080010c4(uint input_value)\n{\n    uint shifted_value;\n    uint shift_amount = 0x9e - ((input_value << 1) >> 0x18);\n\n    if (((input_value & 0x80000000) != 0) || (input_value << 1 < 0x7f000000)) {\n        return 0;\n    }\n\n    if (shift_amount >= 0) {\n        shifted_value = (input_value << 8 | 0x80000000) >> (shift_amount & 0xff);\n        return shifted_value;\n    }\n\n    if ((shift_amount == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n        return 0;\n    }\n\n    return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "process_data_if_valid_080040b8",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "param_4": "data_4",
                "param_5": "data_5",
                "param_6": "data_6",
                "iVar1": "result",
                "FUNC_08001938": "call_function",
                "PTR_DAT_080040e4": "PTR_DATA_ARRAY",
                "process_data_and_print_results_08004490": "process_data_and_print_results"
            },
            "code": "void process_data_if_valid_080040b8(int data_1, int data_2, int data_3, int data_4, int data_5, int data_6)\n{\n  int result = call_function(PTR_DAT_080040e4, data_1, data_2, 1, data_3, data_4, 200, data_4);\n  if (result != 0) {\n    process_data_and_print_results(data_5, data_6);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "process_data_if_valid_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "set_bits_flags_and_values_0800245c",
                "param_1": "param_array",
                "param_2": "unused_param",
                "param_3": "case_value",
                "extraout_r1": "bits_values_extraout_r1",
                "extraout_r1_00": "flags_values_extraout_r1",
                "extraout_r1_01": "values_extraout_r1",
                "extraout_r1_02": "flags_extraout_r1",
                "iVar1": "flags_values_iVar",
                "iVar3": "values_iVar",
                "iVar5": "flags_iVar",
                "uVar2": "bits_values_uVar",
                "uVar4": "values_uVar",
                "uVar6": "flags_uVar"
            },
            "code": "void set_bits_flags_and_values_0800245c(int *param_array, int unused_param, int case_value) {\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  int extraout_r1_02;\n  int array_0 = param_array[0];\n  if (*(char *)(array_0 + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)array_0 + 0x39) = 2;\n  *(undefined *)(array_0 + 0xe) = 1;\n  switch(case_value) {\n  case 0:\n    set_bits_and_values_08002280(param_array[0]);\n    uint uVar2 = *(uint *)(extraout_r1 + 0x10);\n    *(uint *)(array_0 + 0x18) = (*(uint *)(array_0 + 0x18) & 0xfffffff7) | uVar2;\n    break;\n  case 4:\n    set_flags_and_values_08002404(param_array[0]);\n    int iVar3 = *(int *)(extraout_r1_00 + 0x10);\n    *(uint *)(array_0 + 0x18) = (*(uint *)(array_0 + 0x18) & 0xfffffbff) | iVar3 << 8;\n    break;\n  case 8:\n    update_values_080022d0(param_array[0]);\n    uint uVar4 = *(uint *)(extraout_r1_01 + 0x10);\n    *(uint *)(array_0 + 0x1c) = (*(uint *)(array_0 + 0x1c) & 0xfffffff7) | uVar4;\n    break;\n  case 0xc:\n    update_flags_08002324(param_array[0]);\n    int iVar5 = *(int *)(extraout_r1_02 + 0x10);\n    *(uint *)(array_0 + 0x1c) = (*(uint *)(array_0 + 0x1c) & 0xfffffbff) | iVar5 << 8;\n    uint uVar6 = *(uint *)(array_0 + 0x1c);\n    *(uint *)(array_0 + 0x1c) = uVar6;\n    break;\n  }\n  *(undefined *)((int)array_0 + 0x39) = 1;\n  *(undefined *)(array_0 + 0xe) = 0;\n  return;\n}",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002280",
                "FUN_08002404"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_bits_flags_and_values_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "process_data_and_print_results_08004490",
                "param_1": "input_data",
                "param_2": "output_data",
                "DAT_08004508": "data",
                "set_param_08001424": "set_parameter",
                "PTR_s_Error_with_08004510": "error_msg",
                "PTR_s__at_line__0800450c": "line_msg",
                "xor_with_value_at_offset_0800142e": "xor_with_value_at_offset",
                "process_string_data_08004c8c": "process_string_data",
                "process_and_print_string_data_08004cac": "process_and_print_string_data",
                "process_input_data_08004c18": "process_input_data",
                "thunk_do_nothing_08001168": "thunk_do_nothing"
            },
            "code": "void process_data_and_print_results_08004490(undefined4 input_DAT_08004508, undefined4 output_DAT_08004508) {\n  undefined4 DAT_08004508 = DAT_08004508;\n  set_param_08001424(DAT_08004508, 0x4000, 1);\n  set_param_08001424(DAT_08004508, 0x8000, 0);\n  set_param_08001424(DAT_08004508, 0x2000, 0);\n  undefined *PTR_s_Error_with_08004510 = PTR_s_Error_with_08004510;\n  undefined *PTR_s__at_line__0800450c = PTR_s__at_line__0800450c;\n  do {\n    xor_with_value_at_offset_0800142e(DAT_08004508, 0x4000);\n    xor_with_value_at_offset_0800142e(DAT_08004508, 0x8000);\n    xor_with_value_at_offset_0800142e(DAT_08004508, 0x2000);\n    process_string_DAT_08004508_08004c8c(PTR_s_Error_with_08004510);\n    process_string_DAT_08004508_08004c8c(input_DAT_08004508);\n    process_string_DAT_08004508_08004c8c(PTR_s__at_line__0800450c);\n    process_and_print_string_DAT_08004508_08004cac(output_DAT_08004508);\n    process_input_DAT_08004508_08004c18(10);\n    thunk_do_nothing_08001168(500);\n  } while(true);\n}",
            "called": [
                "FUN_08001424",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08004c18",
                "FUN_08004cac",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_0800403c",
                "FUN_080040b8",
                "FUN_0800458c",
                "FUN_0800407c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "process_data_and_print_results_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800411c",
                "FUN_08002f28",
                "FUN_08003330",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "set_and_check_parameters_080015e8",
                "param_1": "parameters",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "param4",
                "puVar3": "params",
                "ppuVar4": "param_ptr",
                "uVar5": "param5",
                "uVar6": "param6",
                "iVar1": "value",
                "params2": "params2",
                "check_params": "check_params",
                "check_value": "check_value",
                "params3": "params3",
                "check_value2": "check_value2",
                "check_value3": "check_value3",
                "new_value": "new_value",
                "check_params2": "check_params2"
            },
            "code": "uint32_t set_and_check_parameters_080015e8(uint32_t **parameters, uint32_t param1, uint32_t param2, int param3, uint32_t param4)\n{\n    uint32_t *params = *parameters;\n    params[0] |= 0x400;\n    params[0] |= 0x100;\n    uint32_t **param_ptr = parameters;\n    uint32_t param5 = param1;\n    uint32_t param6 = param2;\n    int value = get_value_from_pointer();\n\nloop:\n    uint32_t *params2 = *parameters;\n    while (-1 < (int)(params2[5] << 0x1f)) {\n        if (param4 != 0xffffffff) {\n            goto code_r0x08001658;\n        }\n    }\n    params2[4] = param1 & 0xfe;\n    int check_params = check_parameters(parameters, DAT_080016f0, param4, params2, param_ptr, param5, param6);\n    if (check_params != 0) {\n        goto LAB_080016ba;\n    }\n    int check_value = check_value_and_disable(parameters, param4, (*parameters)[5], (*parameters)[6]);\n    if (check_value == 0) {\n        uint32_t *params3 = *parameters;\n        if (param3 != 1) {\n            params3[4] = param2 >> 8;\n            int check_value2 = check_value_and_disable(parameters, param4);\n            if (check_value2 != 0) {\n                goto LAB_08001642;\n            }\n            params3 = *parameters;\n        }\n        params3[4] = param2 & 0xff;\n        int check_value3 = check_value_and_disable(parameters, param4);\n        if (check_value3 == 0) {\n            **parameters = **parameters | 0x100;\n            int new_value = get_value_from_pointer();\n            do {\n                do {\n                    if ((int)((*parameters)[5] << 0x1f) < 0) {\n                        (*parameters)[4] = param1 & 0xff | 1;\n                        int check_params2 = check_parameters(parameters, DAT_080016f0, param4);\n                        if (check_params2 == 0) {\n                            return 0;\n                        }\n                        LAB_080016ba:\n                        if (parameters[0xe] != (uint32_t *)0x4) {\n                            return 3;\n                        }\n                        return 1;\n                    }\n                } while (param4 == 0xffffffff);\n            } while ((param4 != 0) && (int)(get_value_from_pointer() - new_value) <= param4);\n            code_r0x08001658:\n            *(undefined *)((int)parameters + 0x35) = 0x20;\n            *(undefined *)(parameters + 0xd) = 0;\n            return 3;\n        }\n    }\n    LAB_08001642:\n    if (parameters[0xe] == (uint32_t *)0x4) {\n        **parameters = **parameters | 0x200;\n        return 1;\n    }\n    return 3;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "set_and_check_parameters_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "process_data_08004e14",
                "param_1": "data_ptr",
                "uVar1": "data_value",
                "iVar2": "data",
                "local_18": "data_type",
                "local_14": "constant_one",
                "uStack_10": "param_3_copy",
                "local_c": "constant_two"
            },
            "code": "void process_data_08004e14(int *data_ptr, undefined4 param_2, undefined4 param_3) {\n  undefined4 data_value;\n  int data = *data_ptr;\n  undefined4 local_18;\n  undefined4 local_14;\n  undefined4 param_3_copy;\n  undefined4 local_c;\n  \n  data_value = DAT_08004e6c;\n  if (data == DAT_08004e68) {\n    local_18 = 0x800;\n  }\n  else if (data == 0x40000000) {\n    local_18 = 2;\n  }\n  else {\n    data_value = DAT_08004e74;\n    if (data == DAT_08004e70) {\n      local_18 = 3;\n    }\n    else {\n      if (data != DAT_08004e78) {\n        return;\n      }\n      local_18 = 0x300;\n    }\n  }\n  local_c = 2;\n  local_14 = 2;\n  param_3_copy = param_3;\n  process_data_08004e14_08001264(data_value, &local_18);\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_08004e14"
        }
    },
    "used_tokens": 152351,
    "layers": [
        [
            "FUN_08003320",
            "FUN_08001264",
            "FUN_080070b0",
            "FUN_08001424",
            "FUN_080006ac",
            "FUN_08004c64",
            "FUN_08007092",
            "FUN_08005630",
            "FUN_08002368",
            "FUN_08002520",
            "FUN_08002008",
            "FUN_08002404",
            "FUN_08001436",
            "FUN_08000904",
            "FUN_0800114c",
            "FUN_080052e4",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08006c0c",
            "FUN_0800115c",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_08001170",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08000134",
            "FUN_08003eb0",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08003ec8",
            "FUN_08003fe8",
            "FUN_08004fb4",
            "FUN_08000428",
            "FUN_08000a30",
            "FUN_08003fdc",
            "FUN_08004f10",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08002214",
            "FUN_0800567c",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003314",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_080022d0",
            "FUN_080010c4"
        ],
        [
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_080014e2",
            "FUN_08000990",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080025e8",
            "FUN_08004c18",
            "FUN_08001460",
            "FUN_08001104",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_08004ccc",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003f3c",
            "FUN_08001004",
            "FUN_080041c4",
            "FUN_080016f4",
            "FUN_08004e7c",
            "FUN_0800245c",
            "FUN_08004e14"
        ],
        [
            "FUN_08001028",
            "FUN_0800290c",
            "FUN_080009a0",
            "FUN_08000980",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_0800209c",
            "FUN_08004c8c",
            "FUN_08001754",
            "FUN_08002724",
            "FUN_08005714",
            "FUN_08003ff4",
            "FUN_08001128",
            "FUN_08000ffc",
            "FUN_08001530",
            "FUN_08001014",
            "FUN_080015e8"
        ],
        [
            "FUN_08001828",
            "FUN_08004300",
            "FUN_08004028",
            "FUN_08005bc8",
            "FUN_0800299a",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_080009f0",
            "FUN_080057d0"
        ],
        [
            "FUN_08004410",
            "FUN_08004384",
            "FUN_08004434",
            "FUN_080043bc",
            "FUN_0800483c",
            "FUN_08004458",
            "FUN_08002ee8",
            "FUN_08004348",
            "FUN_080043f0",
            "FUN_08005044",
            "FUN_08005854"
        ],
        [
            "FUN_080050fc",
            "FUN_08004a84"
        ],
        [
            "FUN_08004ffc"
        ],
        [
            "FUN_08004cac"
        ],
        [
            "FUN_08004490"
        ],
        [
            "FUN_0800403c",
            "FUN_08004514",
            "FUN_0800407c",
            "FUN_080040b8"
        ],
        [
            "FUN_080040e8",
            "FUN_08002ad0",
            "FUN_08003034"
        ],
        [
            "FUN_08003298",
            "FUN_08002d88",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0"
        ],
        [
            "FUN_08002ea0",
            "FUN_08002f28"
        ],
        [
            "FUN_08004194"
        ],
        [
            "FUN_080041ae"
        ],
        [
            "FUN_08004f68"
        ],
        [
            "FUN_08005854"
        ]
    ],
    "locked_functions": []
}