{
    "functions": {
        "I2C_RequestMemoryRead": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_RequestMemoryRead\n          (I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n          uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint32_t tmpreg;\n  \n  pIVar4 = hi2c->Instance;\n  pIVar4->CR1 = pIVar4->CR1 | 0x400;\n  pIVar4->CR1 = pIVar4->CR1 | 0x100;\n  uVar2 = HAL_GetTick();\nLAB_0800160e:\n  while (-1 < (int)(hi2c->Instance->SR1 << 0x1f)) {\n    if (Timeout != 0xffffffff) goto code_r0x08001658;\n  }\n  hi2c->Instance->DR = (byte)DevAddress & 0xfe;\n  HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_080016f0,Timeout);\n  if (HVar1 != HAL_OK) goto LAB_080016ba;\n  HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n  if (HVar1 == HAL_OK) {\n    pIVar4 = hi2c->Instance;\n    if (MemAddSize != 1) {\n      pIVar4->DR = (uint)(MemAddress >> 8);\n      HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n      if (HVar1 != HAL_OK) goto LAB_08001642;\n      pIVar4 = hi2c->Instance;\n    }\n    pIVar4->DR = (uint)(byte)MemAddress;\n    HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar1 == HAL_OK) {\n      hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x100;\n      uVar2 = HAL_GetTick();\n      do {\n        do {\n          if ((int)(hi2c->Instance->SR1 << 0x1f) < 0) {\n            hi2c->Instance->DR = (byte)DevAddress | 1;\n            HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_080016f0,Timeout);\n            if (HVar1 == HAL_OK) {\n              return HAL_OK;\n            }\nLAB_080016ba:\n            if (hi2c->ErrorCode != 4) {\n              return HAL_TIMEOUT;\n            }\n            return HAL_ERROR;\n          }\n        } while (Timeout == 0xffffffff);\n      } while ((Timeout != 0) && (uVar3 = HAL_GetTick(), uVar3 - uVar2 <= Timeout));\nLAB_0800165a:\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\nLAB_08001642:\n  if (hi2c->ErrorCode == 4) {\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n    return HAL_ERROR;\n  }\n  return HAL_TIMEOUT;\ncode_r0x08001658:\n  if ((Timeout == 0) || (uVar3 = HAL_GetTick(), Timeout < uVar3 - uVar2)) goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n", 
            "called": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080015e8", 
            "calling": [
                "HAL_I2C_Mem_Read"
            ], 
            "imported": false, 
            "current_name": "I2C_RequestMemoryRead"
        }, 
        "HAL_RCC_GetSysClockFreq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetSysClockFreq(void)\n\n{\n  undefined4 uVar1;\n  uint32_t uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  undefined4 *puVar7;\n  undefined4 *puVar8;\n  uint8_t aPredivFactorTable [2];\n  uint8_t aPLLMULFactorTable [16];\n  \n  puVar8 = (undefined4 *)aPLLMULFactorTable;\n  puVar7 = (undefined4 *)PTR_DAT_0800208c;\n  do {\n    uVar1 = *puVar7;\n    uVar3 = puVar7[1];\n    puVar7 = puVar7 + 2;\n    *puVar8 = uVar1;\n    puVar8[1] = uVar3;\n    puVar8 = puVar8 + 2;\n  } while (puVar7 != (undefined4 *)(PTR_DAT_0800208c + 0x10));\n  aPredivFactorTable[0] = '\\x01';\n  aPredivFactorTable[1] = '\\x02';\n  uVar4 = *(uint *)(DAT_08002090 + 4);\n  uVar2 = DAT_08002094;\n  if ((uVar4 & 0xc) == 8) {\n    uVar5 = count_leading_zeroes(0x3c00);\n    uVar6 = DAT_08002098;\n    if ((int)(uVar4 << 0xf) < 0) {\n      uVar6 = count_leading_zeroes(0x4000);\n      uVar6 = DAT_08002094 /\n              aPredivFactorTable[(*(uint *)(DAT_08002090 + 4) & 0x20000) >> (uVar6 & 0xff)];\n    }\n    uVar2 = uVar6 * aPLLMULFactorTable[(uVar4 & 0x3c0000) >> (uVar5 & 0xff)];\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002008", 
            "calling": [
                "HAL_RCC_ClockConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetSysClockFreq"
        }, 
        "rint": {
            "renaming": {}, 
            "code": "\ndouble rint(double __x)\n\n{\n  int iVar1;\n  uint in_r0;\n  uint in_r1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  double in_d0;\n  double dVar6;\n  undefined8 uVar7;\n  \n  uVar5 = (in_r1 << 1) >> 0x15;\n  uVar4 = uVar5 - 0x3ff;\n  iVar1 = (int)in_r1 >> 0x1f;\n  if ((int)uVar4 < 0x14) {\n    if ((int)uVar4 < 0) {\n      if ((in_r1 & 0x7fffffff | in_r0) == 0) {\n        return in_d0;\n      }\n      uVar4 = in_r1 & 0xfffff | in_r0;\n      uVar2 = *(undefined4 *)(PTR_TWO52_080071b8 + iVar1 * -8);\n      uVar3 = *(undefined4 *)((int)(PTR_TWO52_080071b8 + iVar1 * -8) + 4);\n      uVar7 = __aeabi_dadd(in_r0,(-uVar4 | uVar4) >> 0xc & 0x80000 | in_r1 & 0xfffe0000,uVar2,uVar3)\n      ;\n      dVar6 = (double)__subdf3((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),uVar2,uVar3);\n      return dVar6;\n    }\n    uVar5 = DAT_080071bc >> (uVar4 & 0xff);\n    if ((in_r1 & uVar5 | in_r0) == 0) {\n      return in_d0;\n    }\n    uVar5 = uVar5 >> 1;\n    in_r0 = in_r1 & uVar5 | in_r0;\n    if (in_r0 != 0) {\n      if (uVar4 == 0x13) {\n        in_r0 = 0x80000000;\n      }\n      else {\n        in_r0 = 0;\n      }\n      in_r1 = 0x40000 >> (uVar4 & 0xff) | in_r1 & ~uVar5;\n    }\n  }\n  else {\n    if (0x33 < (int)uVar4) {\n      if (uVar4 != 0x400) {\n        return in_d0;\n      }\n      dVar6 = (double)__aeabi_dadd();\n      return dVar6;\n    }\n    uVar5 = uVar5 - 0x413;\n    uVar4 = 0xffffffff >> (uVar5 & 0xff);\n    if ((in_r0 & uVar4) == 0) {\n      return in_d0;\n    }\n    uVar4 = uVar4 >> 1;\n    if ((in_r0 & uVar4) != 0) {\n      in_r0 = 0x40000000 >> (uVar5 & 0xff) | in_r0 & ~uVar4;\n    }\n  }\n  uVar2 = *(undefined4 *)(PTR_TWO52_080071b8 + iVar1 * -8);\n  uVar3 = *(undefined4 *)((int)(PTR_TWO52_080071b8 + iVar1 * -8) + 4);\n  uVar7 = __aeabi_dadd(in_r0,in_r1,uVar2,uVar3);\n  dVar6 = (double)__subdf3((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),uVar2,uVar3);\n  return dVar6;\n}\n\n", 
            "called": [
                "__subdf3", 
                "__aeabi_dadd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080070b0", 
            "calling": [
                "pow"
            ], 
            "imported": false, 
            "current_name": "rint"
        }, 
        "NMI_Handler": {
            "renaming": {}, 
            "code": "\nvoid NMI_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ee4", 
            "calling": [], 
            "imported": false, 
            "current_name": "NMI_Handler"
        }, 
        "HAL_NVIC_SetPriorityGrouping": {
            "renaming": {}, 
            "code": "\nvoid HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)\n\n{\n  *(uint *)(DAT_08001190 + 0xc) =\n       *(uint *)(DAT_08001190 + 0xc) & 0xf8ff | 0x5fa0000 | (PriorityGroup & 7) << 8;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001170", 
            "calling": [
                "HAL_Init", 
                "HAL_MspInit"
            ], 
            "imported": false, 
            "current_name": "HAL_NVIC_SetPriorityGrouping"
        }, 
        "__aeabi_cfcmpeq": {
            "renaming": {}, 
            "code": "\nundefined8 __aeabi_cfcmpeq(undefined4 param_1,undefined4 param_2)\n\n{\n  __cmpsf2();\n  return CONCAT44(param_2,param_1);\n}\n\n", 
            "called": [
                "__cmpsf2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001004", 
            "calling": [
                "__aeabi_fcmple", 
                "__aeabi_fcmpeq", 
                "__aeabi_cfrcmple", 
                "__aeabi_fcmplt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfcmpeq"
        }, 
        "_malloc_usable_size_r": {
            "renaming": {}, 
            "code": "\nint _malloc_usable_size_r(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_2 + -4) + -4;\n  if (*(int *)(param_2 + -4) < 0) {\n    iVar1 = iVar1 + *(int *)(param_2 + iVar1);\n  }\n  return iVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005840", 
            "calling": [
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_usable_size_r"
        }, 
        "FUN_080006ac": {
            "renaming": {}, 
            "code": "\nulonglong FUN_080006ac(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 = in_r12 & param_4 >> 0x14;\n  if (unaff_r4 != in_r12 && uVar2 != in_r12) {\n    bVar4 = (param_1 | param_2 << 1) == 0;\n    if (!bVar4) {\n      bVar4 = (param_3 | param_4 << 1) == 0;\n    }\n    if (bVar4) {\n      return (ulonglong)((param_2 ^ param_4) & 0x80000000) << 0x20;\n    }\n    if (unaff_r4 == 0) {\n      uVar3 = param_2 & 0x80000000;\n      do {\n        uVar1 = param_1 & 0x80000000;\n        param_1 = param_1 << 1;\n        param_2 = param_2 * 2 + (uint)(uVar1 != 0);\n      } while ((param_2 & 0x100000) == 0);\n      param_2 = param_2 | uVar3;\n      if (uVar2 != 0) {\n        return CONCAT44(param_2,param_1);\n      }\n    }\n    do {\n      uVar2 = param_3 & 0x80000000;\n      param_3 = param_3 << 1;\n      param_4 = param_4 * 2 + (uint)(uVar2 != 0);\n    } while ((param_4 & 0x100000) == 0);\n    return CONCAT44(param_2,param_1);\n  }\n  bVar4 = (param_1 | param_2 << 1) == 0;\n  if (bVar4) {\n    param_2 = param_4;\n    param_1 = param_3;\n  }\n  if (!bVar4) {\n    bVar4 = (param_3 | param_4 << 1) == 0;\n  }\n  uVar3 = param_2;\n  if (((!bVar4) && ((unaff_r4 != in_r12 || ((param_1 | param_2 << 0xc) == 0)))) &&\n     ((uVar2 != in_r12 || (param_1 = param_3, uVar3 = param_4, (param_3 | param_4 << 0xc) == 0)))) {\n    return (ulonglong)((param_2 ^ param_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x080006ac", 
            "calling": [
                "__muldf3"
            ], 
            "imported": false, 
            "current_name": "FUN_080006ac"
        }, 
        "I2C_RequestMemoryWrite": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_RequestMemoryWrite\n          (I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n          uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint32_t tmpreg;\n  \n  hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x100;\n  uVar2 = HAL_GetTick();\n  do {\n    do {\n      if ((int)(hi2c->Instance->SR1 << 0x1f) < 0) {\n        hi2c->Instance->DR = DevAddress & 0xfe;\n        HVar1 = I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,DAT_080015e4,Timeout);\n        if (HVar1 == HAL_OK) {\n          HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n          if (HVar1 == HAL_OK) {\n            pIVar4 = hi2c->Instance;\n            if (MemAddSize == 1) {\nLAB_080015ca:\n              pIVar4->DR = (uint)(byte)MemAddress;\n              return HVar1;\n            }\n            pIVar4->DR = (uint)(MemAddress >> 8);\n            HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n            if (HVar1 == HAL_OK) {\n              pIVar4 = hi2c->Instance;\n              goto LAB_080015ca;\n            }\n          }\n          if (hi2c->ErrorCode != 4) {\n            return HAL_TIMEOUT;\n          }\n          hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n        }\n        else if (hi2c->ErrorCode != 4) {\n          return HAL_TIMEOUT;\n        }\n        return HAL_ERROR;\n      }\n    } while (Timeout == 0xffffffff);\n    if ((Timeout == 0) || (uVar3 = HAL_GetTick(), Timeout < uVar3 - uVar2)) {\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  } while( true );\n}\n\n", 
            "called": [
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001530", 
            "calling": [
                "HAL_I2C_Mem_Write"
            ], 
            "imported": false, 
            "current_name": "I2C_RequestMemoryWrite"
        }, 
        "LED_StartupSequence": {
            "renaming": {}, 
            "code": "\nvoid LED_StartupSequence(void)\n\n{\n  int iVar1;\n  \n  iVar1 = 3;\n  do {\n    toggleLED(1,0,0);\n    delay_ms(100);\n    toggleLED(0,1,0);\n    delay_ms(100);\n    toggleLED(0,0,1);\n    delay_ms(100);\n    iVar1 = iVar1 + -1;\n  } while (iVar1 != 0);\n  toggleLED(1,1,1);\n  return;\n}\n\n", 
            "called": [
                "toggleLED", 
                "delay_ms"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003f7c", 
            "calling": [
                "Devices_Init"
            ], 
            "imported": false, 
            "current_name": "LED_StartupSequence"
        }, 
        "MSP_SendIdent": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendIdent(void)\n\n{\n  undefined *puVar1;\n  uint in_r1;\n  undefined4 local_10;\n  uint local_c;\n  \n  puVar1 = PTR_msp_txf_ident_08004380;\n  *PTR_msp_txf_ident_08004380 = 0xe9;\n  puVar1[1] = 3;\n  puVar1[3] = 4;\n  puVar1[2] = 0;\n  local_10 = *(undefined4 *)puVar1;\n  puVar1[4] = 0;\n  puVar1[5] = 0;\n  puVar1[6] = 0;\n  local_c = in_r1 & 0xff000000 | (uint)*(ushort *)(puVar1 + 4);\n  MSP_SendFrame('d',(uint8_t *)&local_10,7);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004348", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendIdent"
        }, 
        "MS5611_Init": {
            "renaming": {}, 
            "code": "\nvoid MS5611_Init(void)\n\n{\n  undefined *file;\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  uint8_t rxbuf [2];\n  \n  iVar3 = 0;\n  I2C_WriteByte(0xee,0x1e,'\\x01','\\x01');\n  delay_ms(10);\n  puVar1 = PTR_MS5611_Coefficients_0800330c;\n  file = PTR_s____Src_MS5611_c_08003308;\n  *PTR_MS5611_OSR_08003304 = 8;\n  do {\n    rxbuf[0] = '\\0';\n    rxbuf[1] = '\\0';\n    I2C_ReadByteArray(0xee,(short)iVar3 + 0xa0,rxbuf,2,file,0x7c);\n    *(ushort *)(puVar1 + iVar3) = CONCAT11(rxbuf[0],rxbuf[1]);\n    puVar2 = PTR_alt_filter_08003310;\n    iVar3 = iVar3 + 2;\n  } while (iVar3 != 0x10);\n  iVar3 = 0;\n  do {\n    *(undefined4 *)(puVar2 + iVar3 * 4) = 0;\n    iVar3 = iVar3 + 1;\n  } while (iVar3 != 0x14);\n  return;\n}\n\n", 
            "called": [
                "I2C_WriteByte", 
                "delay_ms", 
                "I2C_ReadByteArray"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003298", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "MS5611_Init"
        }, 
        "I2C_ReadBytes": {
            "renaming": {}, 
            "code": "\nvoid I2C_ReadBytes(uint16_t device_add,uint16_t register_add,uint8_t *bytes,uint16_t size,char *file\n                  ,int line)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  HVar1 = HAL_I2C_Mem_Read((I2C_HandleTypeDef *)PTR_hi2c1_080040e4,device_add,register_add,1,bytes,\n                           size,200);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(file,line);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_I2C_Mem_Read"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080040b8", 
            "calling": [
                "MS5611_ReadADC"
            ], 
            "imported": false, 
            "current_name": "I2C_ReadBytes"
        }, 
        "Motor_SetSpeed": {
            "renaming": {}, 
            "code": "\nvoid Motor_SetSpeed(int m1,int m2,int m3,int m4)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  uint pwm;\n  \n  puVar1 = PTR_motor_pwm_08004264;\n  if (999 < m1) {\n    m1 = 1000;\n  }\n  if (999 < m2) {\n    m2 = 1000;\n  }\n  if (999 < m3) {\n    m3 = 1000;\n  }\n  if (999 < m4) {\n    m4 = 1000;\n  }\n  pwm = m1 & ~(m1 >> 0x1f);\n  *(int *)(PTR_motor_pwm_08004264 + 8) = m3 & ~(m3 >> 0x1f);\n  *(int *)(puVar1 + 0xc) = m4 & ~(m4 >> 0x1f);\n  *(int *)(puVar1 + 4) = m2 & ~(m2 >> 0x1f);\n  *(uint *)puVar1 = pwm;\n  Motor1_SetPWM(pwm);\n  Motor2_SetPWM(*(int *)(puVar1 + 4));\n  Motor3_SetPWM(*(int *)(puVar1 + 8));\n  Motor4_SetPWM(*(int *)(puVar1 + 0xc));\n  puVar2 = PTR_msp_txf_motor_08004268;\n  *(short *)PTR_msp_txf_motor_08004268 = (short)*(undefined4 *)puVar1 + 1000;\n  *(short *)(puVar2 + 2) = (short)*(undefined4 *)(puVar1 + 4) + 1000;\n  *(short *)(puVar2 + 4) = (short)*(undefined4 *)(puVar1 + 8) + 1000;\n  *(short *)(puVar2 + 6) = (short)*(undefined4 *)(puVar1 + 0xc) + 1000;\n  return;\n}\n\n", 
            "called": [
                "Motor2_SetPWM", 
                "Motor1_SetPWM", 
                "Motor3_SetPWM", 
                "Motor4_SetPWM"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080041e4", 
            "calling": [
                "Motor_DistributeSpeed"
            ], 
            "imported": false, 
            "current_name": "Motor_SetSpeed"
        }, 
        "HAL_TIM_PWM_MspInit": {
            "renaming": {}, 
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim_pwm)\n\n{\n  TIM_TypeDef *pTVar1;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  uint32_t tmpreg_3;\n  \n  pTVar1 = htim_pwm->Instance;\n  if (pTVar1 == DAT_08004e04) {\n    *(uint *)(DAT_08004e08 + 0x18) = *(uint *)(DAT_08004e08 + 0x18) | 0x800;\n  }\n  else if (pTVar1 == (TIM_TypeDef *)0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (pTVar1 == DAT_08004e0c) {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | 2;\n  }\n  else if (pTVar1 == DAT_08004e10) {\n    *(uint *)(DAT_08004e08 + 0x1c) = *(uint *)(DAT_08004e08 + 0x1c) | 4;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004d8c", 
            "calling": [
                "HAL_TIM_PWM_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_MspInit"
        }, 
        "frame_dummy": {
            "renaming": {}, 
            "code": "\nundefined8 frame_dummy(undefined *param_1,undefined *param_2)\n\n{\n  if (DAT_08000144 != 0) {\n    param_1 = PTR__init_0800014c;\n    param_2 = PTR_object_8677_08000148;\n  }\n  return CONCAT44(param_2,param_1);\n}\n\n", 
            "called": [
                "_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000134", 
            "calling": [
                "__libc_init_array"
            ], 
            "imported": false, 
            "current_name": "frame_dummy"
        }, 
        "HAL_SYSTICK_Callback": {
            "renaming": {}, 
            "code": "\nvoid HAL_SYSTICK_Callback(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001258", 
            "calling": [
                "HAL_SYSTICK_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_Callback"
        }, 
        "__aeabi_dcmpgt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpgt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdrcmple();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009f0", 
            "calling": [
                "__ieee754_asin", 
                "atan", 
                "__ieee754_pow", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmpgt"
        }, 
        "IMU_Init": {
            "renaming": {}, 
            "code": "\nvoid IMU_Init(void)\n\n{\n  float _beta;\n  float _deltat;\n  \n  MPU9250_Init();\n  AK8963_Init();\n  MadgwickSetBeta(_beta);\n  MadgwickSetDelta(_deltat);\n  return;\n}\n\n", 
            "called": [
                "MPU9250_Init", 
                "MadgwickSetBeta", 
                "AK8963_Init", 
                "MadgwickSetDelta"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ea0", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "IMU_Init"
        }, 
        "lowPassFilter": {
            "renaming": {}, 
            "code": "\nfloat lowPassFilter(LPF *var,float current)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  float fVar3;\n  float extraout_s0;\n  \n  fVar3 = var->beta;\n  __aeabi_fsub(0x3f800000,fVar3);\n  uVar1 = __aeabi_fmul();\n  uVar2 = __aeabi_fmul(fVar3,var->last);\n  fVar3 = (float)__addsf3(uVar2,uVar1);\n  var->last = fVar3;\n  return extraout_s0;\n}\n\n", 
            "called": [
                "__aeabi_fsub", 
                "__aeabi_fmul", 
                "__addsf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003f0e", 
            "calling": [
                "AHRS_GetRoll", 
                "AHRS_GetPitch"
            ], 
            "imported": false, 
            "current_name": "lowPassFilter"
        }, 
        "HAL_RCC_GetPCLK2Freq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetPCLK2Freq(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = count_leading_zeroes(0x1c0000);\n  return *(uint *)PTR_SystemCoreClock_0800227c >>\n         PTR_APBPrescTable_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (uVar1 & 0xff)];\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002250", 
            "calling": [
                "UART_SetConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetPCLK2Freq"
        }, 
        "__fixunssfsi": {
            "renaming": {}, 
            "code": "\nuint __fixunssfsi(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 & 0x80000000) != 0) || (param_1 << 1 < 0x7f000000)) {\n    return 0;\n  }\n  uVar1 = 0x9e - ((param_1 << 1) >> 0x18);\n  if (-1 < (int)uVar1) {\n    return (param_1 << 8 | 0x80000000) >> (uVar1 & 0xff);\n  }\n  if ((uVar1 == 0xffffff9f) && ((param_1 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080010c4", 
            "calling": [
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "__fixunssfsi"
        }, 
        "HAL_InitTick": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = HAL_RCC_GetHCLKFreq();\n  HAL_SYSTICK_Config(uVar1 / 1000);\n  HAL_NVIC_SetPriority(SysTick_IRQn,TickPriority,0);\n  return HAL_OK;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_Config", 
                "HAL_RCC_GetHCLKFreq", 
                "HAL_NVIC_SetPriority"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001104", 
            "calling": [
                "HAL_RCC_ClockConfig", 
                "HAL_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_InitTick"
        }, 
        "HAL_GPIO_TogglePin": {
            "renaming": {}, 
            "code": "\nvoid HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx,uint16_t GPIO_Pin)\n\n{\n  GPIOx->ODR = (uint)GPIO_Pin ^ GPIOx->ODR;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800142e", 
            "calling": [
                "_Error_Handler"
            ], 
            "imported": false, 
            "current_name": "HAL_GPIO_TogglePin"
        }, 
        "HAL_RCC_GetHCLKFreq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetHCLKFreq(void)\n\n{\n  return *(uint32_t *)PTR_SystemCoreClock_0800221c;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002214", 
            "calling": [
                "SystemClock_Config", 
                "HAL_InitTick"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetHCLKFreq"
        }, 
        "startForkserver": {
            "renaming": {}, 
            "code": "\nint startForkserver(int ticks)\n\n{\n  uint32_t uVar1;\n  \n  if (*(int *)PTR_noHyperCall_08003ec4 == 0) {\n    uVar1 = aflCall(1,ticks,0);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
            "called": [
                "aflCall"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003eb0", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "startForkserver"
        }, 
        "__aeabi_f2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_f2d(uint param_1,undefined4 param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar5 = param_1 << 1;\n  bVar9 = uVar5 == 0;\n  uVar1 = (uint)((param_1 & 0x80000000) != 0) << 0x1f;\n  uVar4 = (uint)((int)uVar5 >> 3) >> 1;\n  uVar3 = uVar1 | uVar4;\n  param_1 = param_1 << 0x1d;\n  if (!bVar9) {\n    param_4 = uVar5 & 0xff000000;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(uVar3,param_1) ^ 0x3800000000000000;\n  }\n  if (uVar5 == 0 || param_4 == 0xff000000) {\n    return CONCAT44(uVar3,param_1);\n  }\n  uVar2 = param_1;\n  uVar5 = uVar4;\n  if (uVar4 == 0) {\n    uVar2 = 0;\n    uVar5 = param_1;\n  }\n  iVar6 = count_leading_zeroes(uVar5);\n  if (uVar4 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar7 = iVar6 - 0xb;\n  bVar10 = SBORROW4(uVar7,0x20);\n  uVar4 = iVar6 - 0x2b;\n  bVar9 = (int)uVar4 < 0;\n  bVar8 = uVar4 == 0;\n  if ((int)uVar7 < 0x20) {\n    bVar10 = SCARRY4(uVar4,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar9 = iVar6 < 0;\n    bVar8 = iVar6 == 0;\n    uVar4 = uVar7;\n    if (!bVar8 && bVar9 == bVar10) {\n      uVar2 = uVar5 << (uVar7 & 0xff);\n      uVar5 = uVar5 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    in_r12 = 0x20 - uVar4;\n  }\n  uVar5 = uVar5 << (uVar4 & 0xff);\n  if (bVar8 || bVar9 != bVar10) {\n    uVar5 = uVar5 | uVar2 >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    uVar2 = uVar2 << (uVar4 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar7 < 0x381) {\n    return CONCAT44(uVar5 + (0x380 - uVar7) * 0x100000 | uVar1,uVar2);\n  }\n  uVar4 = ~(0x380 - uVar7);\n  if ((int)uVar4 < 0x1f) {\n    iVar6 = uVar4 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar4 - 0x1f,0xc)) {\n      return CONCAT44(uVar3,uVar2 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar5 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar4 = uVar4 + 1;\n    return CONCAT44(uVar1 | uVar5 >> (uVar4 & 0xff),\n                    uVar2 >> (uVar4 & 0xff) | uVar5 << (0x20 - uVar4 & 0xff));\n  }\n  return CONCAT44(uVar3,uVar5 >> (uVar4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000428", 
            "calling": [
                "MS5611_Update", 
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "__aeabi_f2d"
        }, 
        "HAL_NVIC_SetPriority": {
            "renaming": {}, 
            "code": "\nvoid HAL_NVIC_SetPriority(IRQn_Type IRQn,uint32_t PreemptPriority,uint32_t SubPriority)\n\n{\n  uint uVar1;\n  undefined uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar1 = (uint)IRQn;\n  uVar4 = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n  uVar3 = 7 - uVar4;\n  uVar5 = uVar4 + 4;\n  if (3 < uVar3) {\n    uVar3 = 4;\n  }\n  if (uVar5 < 7) {\n    uVar4 = 0;\n  }\n  uVar3 = (1 << (uVar3 & 0xff)) - 1;\n  if (6 < uVar5) {\n    uVar4 = uVar4 - 3;\n  }\n  uVar2 = (undefined)\n          ((SubPriority & (1 << (uVar4 & 0xff)) - 1U | (PreemptPriority & uVar3) << (uVar4 & 0xff))\n          << 4);\n  if (-1 < (int)uVar1) {\n    uVar4 = uVar1 + 0xe000e100;\n  }\n  else {\n    uVar4 = uVar1 & 0xf;\n    uVar3 = DAT_080011f8;\n  }\n  if (-1 < (int)uVar1) {\n    *(undefined *)(uVar4 + 0x300) = uVar2;\n  }\n  else {\n    *(undefined *)(uVar3 + uVar4) = uVar2;\n  }\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001194", 
            "calling": [
                "SystemClock_Config", 
                "HAL_InitTick", 
                "HAL_UART_MspInit", 
                "HAL_MspInit"
            ], 
            "imported": false, 
            "current_name": "HAL_NVIC_SetPriority"
        }, 
        "__aeabi_fcmpgt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpgt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfrcmple();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001064", 
            "calling": [
                "PID_Compute", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmpgt"
        }, 
        "MPU9250_Init": {
            "renaming": {}, 
            "code": "\nvoid MPU9250_Init(void)\n\n{\n  I2C_ReadByte(0xd0,0x75,PTR_s____Src_MPU9250_c_08002b44,0x3b);\n  I2C_WriteByte(0xd0,0x6b,0x80,'\\x01');\n  I2C_WriteByte(0xd0,0x6b,'\\x01','\\x01');\n  I2C_WriteByte(0xd0,0x6c,'\\0','\\x01');\n  I2C_WriteByte(0xd0,0x19,'\\0','\\x01');\n  I2C_WriteByte(0xd0,0x1d,'\\x03','\\x01');\n  I2C_WriteByte(0xd0,0x1a,'\\x03','\\x01');\n  I2C_WriteByte(0xd0,0x1b,'\\x10','\\x01');\n  I2C_WriteByte(0xd0,0x1c,'\\b','\\x01');\n  return;\n}\n\n", 
            "called": [
                "I2C_WriteByte", 
                "I2C_ReadByte"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ad0", 
            "calling": [
                "IMU_Init"
            ], 
            "imported": false, 
            "current_name": "MPU9250_Init"
        }, 
        "__cmpsf2": {
            "renaming": {}, 
            "code": "\nuint __cmpsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f9c", 
            "calling": [
                "__aeabi_cfcmpeq"
            ], 
            "imported": false, 
            "current_name": "__cmpsf2"
        }, 
        "toggleLED": {
            "renaming": {}, 
            "code": "\nvoid toggleLED(int led_white,int led_red,int led_blue)\n\n{\n  GPIO_TypeDef *GPIOx;\n  uint uVar1;\n  \n  GPIOx = DAT_08003f78;\n  uVar1 = count_leading_zeroes(led_white);\n  HAL_GPIO_WritePin(DAT_08003f78,0x8000,(GPIO_PinState)(uVar1 >> 5));\n  uVar1 = count_leading_zeroes(led_red);\n  HAL_GPIO_WritePin(GPIOx,0x4000,(GPIO_PinState)(uVar1 >> 5));\n  uVar1 = count_leading_zeroes(led_blue);\n  HAL_GPIO_WritePin(GPIOx,0x2000,(GPIO_PinState)(uVar1 >> 5));\n  return;\n}\n\n", 
            "called": [
                "HAL_GPIO_WritePin"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003f3c", 
            "calling": [
                "LED_StartupSequence", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "toggleLED"
        }, 
        "USBWakeUp_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid USBWakeUp_IRQHandler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "USBWakeUp_IRQHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004fb0", 
            "calling": [
                "USBWakeUp_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "USBWakeUp_IRQHandler"
        }, 
        "__aeabi_fsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000ad8", 
            "calling": [
                "AHRS_GetYaw", 
                "PID_Compute", 
                "lowPassFilter", 
                "Motor_DistributeSpeed", 
                "AK8963_ReadData", 
                "MadgwickQuaternionUpdate", 
                "MPU9250_ReadGyroData"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fsub"
        }, 
        "HAL_I2C_MspInit": {
            "renaming": {}, 
            "code": "\n/* WARNING: Variable defined which should be unmapped: GPIO_InitStruct */\n\nvoid HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)\n\n{\n  uint32_t tmpreg;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  if (hi2c->Instance == DAT_08004d80) {\n    GPIO_InitStruct.Pin = 0xc0;\n    GPIO_InitStruct.Mode = 0x12;\n    GPIO_InitStruct.Speed = 3;\n    HAL_GPIO_Init(DAT_08004d84,&GPIO_InitStruct);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_GPIO_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004d48", 
            "calling": [
                "HAL_I2C_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_MspInit"
        }, 
        "__aeabi_fcmpge": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpge(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001050", 
            "calling": [
                "AHRS_GetYaw"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmpge"
        }, 
        "PID_Compute": {
            "renaming": {}, 
            "code": "\nvoid PID_Compute(PID_TypeDef *pid)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  undefined4 uVar3;\n  float fVar4;\n  float fVar5;\n  float fVar6;\n  \n  fVar4 = pid->input;\n  uVar1 = __addsf3(pid->set_point,pid->offset);\n  fVar4 = (float)__aeabi_fsub(uVar1,fVar4);\n  pid->error = fVar4;\n  if (pid->instance == 3) {\n    iVar2 = __aeabi_fcmpgt(pid->error,0);\n    if (iVar2 == 0) {\n      iVar2 = __aeabi_fcmplt(pid->error,DAT_08004974);\n    }\n    else {\n      iVar2 = __aeabi_fcmpgt(pid->error,DAT_08004964);\n    }\n    if (iVar2 != 0) {\n      fVar5 = pid->error;\n      uVar1 = __aeabi_fmul(pid->error,DAT_08004968);\n      iVar2 = __aeabi_fcmpgt(pid->error,0);\n      fVar4 = pid->error;\n      if (iVar2 == 0) {\n        fVar4 = (float)((int)fVar4 + -0x80000000);\n      }\n      uVar1 = __aeabi_fdiv(uVar1,fVar4);\n      fVar4 = (float)__aeabi_fsub(fVar5,uVar1);\n      pid->error = fVar4;\n    }\n  }\n  fVar6 = pid->con_KI;\n  fVar5 = pid->con_KD;\n  fVar4 = (float)__aeabi_fmul(pid->con_KP,pid->error);\n  pid->proportional = fVar4;\n  fVar4 = (float)__addsf3(pid->error,pid->integral);\n  pid->integral = fVar4;\n  iVar2 = __aeabi_fcmplt(pid->integral,DAT_0800496c);\n  fVar4 = DAT_0800496c;\n  if ((iVar2 == 0) &&\n     (iVar2 = __aeabi_fcmpgt(pid->integral,DAT_08004970), fVar4 = DAT_08004970, iVar2 == 0)) {\n    fVar4 = pid->integral;\n  }\n  pid->integral = fVar4;\n  fVar4 = (float)__aeabi_fsub(pid->input,pid->last_input);\n  pid->derivative = fVar4;\n  fVar4 = pid->proportional;\n  uVar1 = __aeabi_fmul(fVar6,pid->integral);\n  uVar1 = __addsf3(uVar1,fVar4);\n  uVar3 = __aeabi_fmul(fVar5,pid->derivative);\n  fVar4 = (float)__aeabi_fsub(uVar1,uVar3);\n  pid->output = fVar4;\n  uVar1 = __floatsisf(pid->direction);\n  iVar2 = __aeabi_fcmplt(pid->output,DAT_0800496c);\n  fVar4 = DAT_0800496c;\n  if ((iVar2 == 0) &&\n     (iVar2 = __aeabi_fcmpgt(pid->output,DAT_08004970), fVar4 = DAT_08004970, iVar2 == 0)) {\n    fVar4 = pid->output;\n  }\n  fVar4 = (float)__aeabi_fmul(fVar4,uVar1);\n  pid->output = fVar4;\n  pid->last_input = pid->input;\n  pid->last_error = pid->error;\n  pid->last_time = pid->time;\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fdiv", 
                "__aeabi_fsub", 
                "__aeabi_fcmpgt", 
                "__aeabi_fmul", 
                "__addsf3", 
                "__floatsisf", 
                "__aeabi_fcmplt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800483c", 
            "calling": [
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "PID_Compute"
        }, 
        "__aeabi_fdiv": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fdiv(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000e54", 
            "calling": [
                "MS5611_Update", 
                "PID_Compute", 
                "AHRS_ComputeAngles", 
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fdiv"
        }, 
        "taskScheduler": {
            "renaming": {}, 
            "code": "\nvoid taskScheduler(void)\n\n{\n  undefined *puVar1;\n  uint32_t uVar2;\n  \n  uVar2 = millis();\n  puVar1 = PTR_last_tick1_08004188;\n  if (1 < uVar2 - *(int *)PTR_last_tick1_08004188) {\n    uVar2 = millis();\n    *(uint32_t *)puVar1 = uVar2;\n    AHRS_ComputeAngles();\n  }\n  uVar2 = millis();\n  puVar1 = PTR_last_tick3_0800418c;\n  if (2 < uVar2 - *(int *)PTR_last_tick3_0800418c) {\n    uVar2 = millis();\n    *(uint32_t *)puVar1 = uVar2;\n    PID_Update();\n  }\n  uVar2 = millis();\n  puVar1 = PTR_last_tick2_08004190;\n  if (3 < uVar2 - *(int *)PTR_last_tick2_08004190) {\n    uVar2 = millis();\n    *(uint32_t *)puVar1 = uVar2;\n    MSP_SendIdent();\n    MSP_SendStatus();\n    MSP_SendMotor();\n    MSP_SendAttitude();\n    MSP_SendAltitude();\n    MSP_SendRawIMU();\n    MSP_SendPID();\n  }\n  MS5611_Update();\n  return;\n}\n\n", 
            "called": [
                "MSP_SendStatus", 
                "millis", 
                "MS5611_Update", 
                "MSP_SendAltitude", 
                "MSP_SendRawIMU", 
                "AHRS_ComputeAngles", 
                "MSP_SendAttitude", 
                "MSP_SendIdent", 
                "PID_Update", 
                "MSP_SendMotor", 
                "MSP_SendPID"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800411c", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "taskScheduler"
        }, 
        "HAL_TIM_PWM_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)\n\n{\n  if (htim != (TIM_HandleTypeDef *)0x0) {\n    if (htim->State == HAL_TIM_STATE_RESET) {\n      htim->Lock = HAL_UNLOCKED;\n      HAL_TIM_PWM_MspInit(htim);\n    }\n    htim->State = HAL_TIM_STATE_BUSY;\n    TIM_Base_SetConfig(htim->Instance,&htim->Init);\n    htim->State = HAL_TIM_STATE_READY;\n    return HAL_OK;\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_TIM_PWM_MspInit", 
                "TIM_Base_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080023d0", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_Init"
        }, 
        "MSP_SendAltitude": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendAltitude(void)\n\n{\n  uint in_r1;\n  undefined4 local_10;\n  uint local_c;\n  \n  local_10 = *(undefined4 *)PTR_msp_txf_altitude_08004454;\n  local_c = in_r1 & 0xffff0000 | (uint)*(ushort *)(PTR_msp_txf_altitude_08004454 + 4);\n  MSP_SendFrame('m',(uint8_t *)&local_10,6);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004434", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendAltitude"
        }, 
        "serialWrite": {
            "renaming": {}, 
            "code": "\nvoid serialWrite(uchar ch)\n\n{\n  undefined *pData;\n  \n  pData = PTR_tx_buffer_08004c28;\n  *PTR_tx_buffer_08004c28 = ch;\n  HAL_UART_Transmit((UART_HandleTypeDef *)PTR_huart1_08004c2c,pData,1,5);\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_Transmit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004c18", 
            "calling": [
                "_Error_Handler", 
                "MSP_SendFrame", 
                "serialPrint"
            ], 
            "imported": false, 
            "current_name": "serialWrite"
        }, 
        "pow": {
            "renaming": {}, 
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\ndouble pow(double __x,double __y)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 uVar7;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  double extraout_d0_03;\n  double extraout_d0_04;\n  double extraout_d0_05;\n  double extraout_d0_06;\n  double extraout_d0_07;\n  double extraout_d0_08;\n  double extraout_d0_09;\n  double extraout_d0_10;\n  double extraout_d0_11;\n  double extraout_d0_12;\n  double dVar8;\n  undefined8 uVar9;\n  undefined local_50 [24];\n  undefined8 local_38;\n  int local_30;\n  \n  dVar8 = (double)__ieee754_pow();\n  puVar2 = PTR___fdlib_version_08005ba8;\n  cVar1 = *PTR___fdlib_version_08005ba8;\n  if (cVar1 == -1) {\n    return extraout_d0;\n  }\n  local_30 = __unorddf2();\n  if (local_30 != 0) {\n    return extraout_d0_00;\n  }\n  iVar3 = __unorddf2();\n  if (iVar3 != 0) {\n    iVar3 = __aeabi_dcmpeq();\n    if (iVar3 == 0) {\n      return extraout_d0_01;\n    }\n    local_50._0_4_ = 1;\n    local_50._4_4_ = PTR_DAT_08005bac;\n    local_38 = (double)((ulonglong)DAT_08005bb0 << 0x20);\n    if (cVar1 == '\\x02') {\n      return extraout_d0_01;\n    }\n    goto LAB_08005978;\n  }\n  iVar4 = __aeabi_dcmpeq();\n  if (iVar4 == 0) {\n    iVar3 = finite(dVar8);\n    if ((iVar3 == 0) && (iVar4 = finite(dVar8), iVar4 != 0)) {\n      iVar4 = finite(dVar8);\n      if (iVar4 == 0) goto LAB_08005b4c;\n      local_30 = __unorddf2(SUB84(dVar8,0),(int)((ulonglong)dVar8 >> 0x20));\n      cVar1 = *puVar2;\n      if (local_30 != 0) {\n        local_50._4_4_ = PTR_DAT_08005bac;\n        local_50._0_4_ = 1;\n        local_30 = iVar3;\n        if (cVar1 == '\\0') goto LAB_08005a22;\n        local_38 = (double)__divdf3(0,0,0,0);\n        goto LAB_08005a32;\n      }\n      local_50._4_4_ = PTR_DAT_08005bac;\n      local_50._0_4_ = 3;\n      if (cVar1 != '\\0') {\n        local_38._0_4_ = 0;\n        local_38._4_4_ = DAT_08005bc4;\n        iVar3 = __aeabi_dcmplt();\n        if (iVar3 != 0) {\n          uVar9 = __muldf3();\n          uVar7 = (int)uVar9;\n          rint(dVar8);\n          iVar3 = __aeabi_dcmpeq((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,extraout_r1_00);\n          if (iVar3 == 0) {\n            local_38._0_4_ = 0;\n            local_38._4_4_ = DAT_08005bb4;\n          }\n        }\n        goto LAB_08005afa;\n      }\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = __aeabi_dcmplt();\n      if (iVar3 != 0) {\n        uVar9 = __muldf3();\n        uVar7 = (int)uVar9;\n        rint(dVar8);\n        iVar3 = __aeabi_dcmpeq((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,extraout_r1);\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = matherr((exception *)local_50);\n      dVar8 = extraout_d0_12;\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\nLAB_08005b4c:\n      iVar3 = __aeabi_dcmpeq(SUB84(dVar8,0),(int)((ulonglong)dVar8 >> 0x20),0,0);\n      if (iVar3 == 0) {\n        return extraout_d0_09;\n      }\n      iVar3 = finite(dVar8);\n      if (iVar3 == 0) {\n        return extraout_d0_10;\n      }\n      iVar3 = finite(dVar8);\n      if (iVar3 == 0) {\n        return extraout_d0_11;\n      }\n      local_50._0_4_ = 4;\n      local_50._4_4_ = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)__errno();\n    uVar7 = 0x22;\n    dVar8 = extraout_d0_08;\n  }\n  else {\n    local_30 = __aeabi_dcmpeq();\n    if (local_30 == 0) {\n      iVar3 = finite(dVar8);\n      if (iVar3 == 0) {\n        return extraout_d0_05;\n      }\n      iVar3 = __aeabi_dcmplt();\n      if (iVar3 == 0) {\n        return extraout_d0_06;\n      }\n      local_50._0_4_ = 1;\n      local_50._4_4_ = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') {\nLAB_08005a22:\n        local_50._0_4_ = 1;\n        local_38 = 0.0;\n        local_50._4_4_ = PTR_DAT_08005bac;\n        goto LAB_08005978;\n      }\n      local_38 = (double)((ulonglong)DAT_08005bb4 << 0x20);\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n    }\n    else {\n      local_50._0_4_ = 1;\n      local_50._4_4_ = PTR_DAT_08005bac;\n      local_38 = 0.0;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = (double)((ulonglong)DAT_08005bb0 << 0x20);\n        dVar8 = extraout_d0_03;\n        goto LAB_080059d0;\n      }\nLAB_08005978:\n      iVar3 = matherr((exception *)local_50);\n      dVar8 = extraout_d0_02;\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    puVar6 = (undefined4 *)__errno();\n    uVar7 = 0x21;\n    dVar8 = extraout_d0_07;\n  }\n  *puVar6 = uVar7;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)__errno();\n    *piVar5 = local_30;\n    dVar8 = extraout_d0_04;\n  }\n  return dVar8;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__unorddf2", 
                "finite", 
                "rint", 
                "__errno", 
                "__aeabi_dcmpeq", 
                "matherr", 
                "__aeabi_dcmplt", 
                "__ieee754_pow", 
                "__muldf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005900", 
            "calling": [
                "MS5611_Update"
            ], 
            "imported": false, 
            "current_name": "pow"
        }, 
        "__ledf2": {
            "renaming": {}, 
            "code": "\nuint __ledf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080008fc", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ledf2"
        }, 
        "HAL_IncTick": {
            "renaming": {}, 
            "code": "\nvoid HAL_IncTick(void)\n\n{\n  *(int *)PTR_uwTick_08001158 = *(int *)PTR_uwTick_08001158 + 1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800114c", 
            "calling": [
                "SysTick_Handler", 
                "main"
            ], 
            "imported": false, 
            "current_name": "HAL_IncTick"
        }, 
        "__ltsf2": {
            "renaming": {}, 
            "code": "\nuint __ltsf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f94", 
            "calling": [], 
            "imported": false, 
            "current_name": "__ltsf2"
        }, 
        "fabs": {
            "renaming": {}, 
            "code": "\ndouble fabs(double __x)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800708c", 
            "calling": [
                "__ieee754_asin", 
                "__ieee754_atan2", 
                "atan", 
                "__ieee754_pow", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "fabs"
        }, 
        "__aeabi_cdcmpeq": {
            "renaming": {}, 
            "code": "\nundefined4 __aeabi_cdcmpeq(undefined4 param_1)\n\n{\n  __nedf2();\n  return param_1;\n}\n\n", 
            "called": [
                "__nedf2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000990", 
            "calling": [
                "__aeabi_cdrcmple", 
                "__aeabi_dcmpeq", 
                "__aeabi_dcmple", 
                "__aeabi_dcmplt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cdcmpeq"
        }, 
        "MPU9250_ReadAccelData": {
            "renaming": {}, 
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid MPU9250_ReadAccelData(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  uint in_r3;\n  uint8_t raw_data [6];\n  \n  raw_data._0_4_ = 0;\n  stack0xffffffec = in_r3 & 0xffff0000;\n  I2C_ReadByteArray(0xd0,0x3b,raw_data,6,PTR_s____Src_MPU9250_c_08002be4,0x58);\n  puVar1 = PTR_accelRaw_08002be8;\n  *(ushort *)PTR_accelRaw_08002be8 = CONCAT11(raw_data[0],raw_data[1]);\n  *(short *)(puVar1 + 2) = CONCAT11(raw_data[2],raw_data[3]);\n  *(short *)(puVar1 + 4) = CONCAT11(raw_data[4],raw_data[5]);\n  uVar2 = __floatsisf();\n  uVar2 = __aeabi_fmul(uVar2,0x40800000);\n  uVar2 = __aeabi_fmul(uVar2,0x38000000);\n  puVar1 = PTR_accelData_08002bec;\n  *(undefined4 *)PTR_accelData_08002bec = uVar2;\n  uVar2 = __floatsisf((int)CONCAT11(raw_data[2],raw_data[3]));\n  uVar2 = __aeabi_fmul(uVar2,0x40800000);\n  uVar2 = __aeabi_fmul(uVar2,0x38000000);\n  *(undefined4 *)(puVar1 + 4) = uVar2;\n  uVar2 = __floatsisf((int)CONCAT11(raw_data[4],raw_data[5]));\n  uVar2 = __aeabi_fmul(uVar2,0x40800000);\n  uVar2 = __aeabi_fmul(uVar2,0x38000000);\n  *(undefined4 *)(puVar1 + 8) = uVar2;\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fmul", 
                "__floatsisf", 
                "I2C_ReadByteArray"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002b48", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "MPU9250_ReadAccelData"
        }, 
        "DebugMon_Handler": {
            "renaming": {}, 
            "code": "\nvoid DebugMon_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ef0", 
            "calling": [], 
            "imported": false, 
            "current_name": "DebugMon_Handler"
        }, 
        "HAL_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_MspInit(void)\n\n{\n  uint32_t tmpreg;\n  \n  *(uint *)(DAT_08004d44 + 0x18) = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  HAL_NVIC_SetPriorityGrouping(3);\n  HAL_NVIC_SetPriority(MemoryManagement_IRQn,0,0);\n  HAL_NVIC_SetPriority(BusFault_IRQn,0,0);\n  HAL_NVIC_SetPriority(UsageFault_IRQn,0,0);\n  HAL_NVIC_SetPriority(SVCall_IRQn,0,0);\n  HAL_NVIC_SetPriority(DebugMonitor_IRQn,0,0);\n  HAL_NVIC_SetPriority(PendSV_IRQn,0,0);\n  HAL_NVIC_SetPriority(SysTick_IRQn,0,0);\n  return;\n}\n\n", 
            "called": [
                "HAL_NVIC_SetPriority", 
                "HAL_NVIC_SetPriorityGrouping"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ccc", 
            "calling": [
                "HAL_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_MspInit"
        }, 
        "serialFlush": {
            "renaming": {}, 
            "code": "\nvoid serialFlush(void)\n\n{\n  CB_Init((CircularBuffer *)PTR_rxc_08004c6c);\n  return;\n}\n\n", 
            "called": [
                "CB_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004c64", 
            "calling": [
                "serialBegin"
            ], 
            "imported": false, 
            "current_name": "serialFlush"
        }, 
        "__ieee754_sqrt": {
            "renaming": {}, 
            "code": "\nundefined8 __ieee754_sqrt(uint param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  uint uVar11;\n  uint uVar12;\n  undefined8 uVar13;\n  \n  if ((DAT_08006d60 & ~param_2) == 0) {\n    uVar13 = __muldf3(param_1,param_2,param_1,param_2);\n    uVar13 = __aeabi_dadd(param_1,param_2,(int)uVar13,(int)((ulonglong)uVar13 >> 0x20));\n    return uVar13;\n  }\n  if ((int)param_2 < 1) {\n    if ((param_2 & 0x7fffffff | param_1) == 0) {\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != 0) {\n      uVar13 = __subdf3(param_1,param_2,param_1,param_2);\n      uVar1 = (undefined4)((ulonglong)uVar13 >> 0x20);\n      uVar13 = __divdf3((int)uVar13,uVar1,(int)uVar13,uVar1);\n      return uVar13;\n    }\n  }\n  iVar3 = (int)param_2 >> 0x14;\n  if (iVar3 == 0) {\n    while (param_2 == 0) {\n      iVar3 = iVar3 + -0x15;\n      param_2 = param_1 >> 0xb;\n      param_1 = param_1 << 0x15;\n    }\n    uVar2 = 0;\n    for (; -1 < (int)(param_2 << 0xb); param_2 = param_2 << 1) {\n      uVar2 = uVar2 + 1;\n    }\n    iVar3 = iVar3 - (uVar2 - 1);\n    param_2 = param_2 | param_1 >> (0x20 - uVar2 & 0xff);\n    param_1 = param_1 << (uVar2 & 0xff);\n  }\n  iVar7 = 0;\n  uVar2 = param_2 & 0xfffff | 0x100000;\n  if ((iVar3 + -0x3ff) * -0x80000000 < 0) {\n    uVar2 = uVar2 * 2 - ((int)param_1 >> 0x1f);\n    param_1 = param_1 << 1;\n  }\n  uVar2 = uVar2 * 2 - ((int)param_1 >> 0x1f);\n  uVar4 = 0x16;\n  uVar5 = 0;\n  uVar8 = 0x200000;\n  param_1 = param_1 << 1;\n  do {\n    iVar10 = uVar5 + uVar8;\n    if (iVar10 <= (int)uVar2) {\n      uVar2 = uVar2 - iVar10;\n      uVar5 = iVar10 + uVar8;\n      iVar7 = iVar7 + uVar8;\n    }\n    uVar4 = uVar4 - 1;\n    uVar2 = uVar2 * 2 - ((int)param_1 >> 0x1f);\n    uVar8 = uVar8 >> 1;\n    param_1 = param_1 << 1;\n  } while (uVar4 != 0);\n  uVar12 = 0x20;\n  uVar9 = 0x80000000;\n  uVar8 = uVar4;\n  do {\n    uVar11 = uVar9 + uVar8;\n    uVar6 = uVar5;\n    if (((int)uVar5 < (int)uVar2) || ((uVar2 == uVar5 && (uVar11 <= param_1)))) {\n      uVar8 = uVar11 + uVar9;\n      if (((int)uVar11 < 0) && (-1 < (int)uVar8)) {\n        uVar6 = uVar5 + 1;\n      }\n      uVar2 = uVar2 - uVar5;\n      if (param_1 < uVar11) {\n        uVar2 = uVar2 - 1;\n      }\n      param_1 = param_1 - uVar11;\n      uVar4 = uVar4 + uVar9;\n    }\n    uVar2 = uVar2 * 2 - ((int)param_1 >> 0x1f);\n    uVar12 = uVar12 - 1;\n    param_1 = param_1 << 1;\n    uVar9 = uVar9 >> 1;\n    uVar5 = uVar6;\n  } while (uVar12 != 0);\n  if ((param_1 | uVar2) != 0) {\n    if (uVar4 == 0xffffffff) {\n      iVar7 = iVar7 + 1;\n      uVar4 = uVar12;\n    }\n    else {\n      uVar4 = uVar4 + 1 & 0xfffffffe;\n    }\n  }\n  uVar4 = uVar4 >> 1;\n  if (iVar7 << 0x1f < 0) {\n    uVar4 = uVar4 | 0x80000000;\n  }\n  return CONCAT44((iVar7 >> 1) + 0x3fe00000 + (iVar3 + -0x3ff >> 1) * 0x100000,uVar4);\n}\n\n", 
            "called": [
                "__divdf3", 
                "__subdf3", 
                "__aeabi_dadd", 
                "__muldf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08006c0c", 
            "calling": [
                "__ieee754_asin", 
                "sqrt", 
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__ieee754_sqrt"
        }, 
        "__aeabi_cdrcmple": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_cdrcmple(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  __aeabi_cdcmpeq(param_3,param_4,param_1,param_2);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000980", 
            "calling": [
                "__aeabi_dcmpge", 
                "__aeabi_dcmpgt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cdrcmple"
        }, 
        "__aeabi_frsub": {
            "renaming": {}, 
            "code": "\nuint __aeabi_frsub(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_1 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = param_2;\n      if (iVar7 == -1) {\n        uVar4 = uVar2;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        param_2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == param_2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        uVar2 = param_2;\n      }\n      return uVar2;\n    }\n    if (uVar2 != param_2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      param_1 = param_1 << 1;\n      if ((uVar2 & 0x80000000) != 0) {\n        param_1 = param_1 | 0x80000000;\n      }\n      return param_1;\n    }\n    if (uVar4 < 0xfe000000) {\n      return uVar2 + 0x800000;\n    }\n    uVar2 = uVar2 & 0x80000000;\nLAB_08000c12:\n    return uVar2 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_2 = param_2 ^ uVar2;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return uVar2;\n  }\n  uVar4 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  uVar2 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar6 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar6 != 0);\n    uVar6 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar5 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar5 & 0xff);\n      if ((int)uVar6 < (int)uVar5) {\n        uVar4 = uVar4 >> (-(uVar6 - uVar5) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | uVar2;\n    }\n  }\n  else {\n    uVar6 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar6 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar6 != 0) << 0x1f | uVar3 >> 1;\n      uVar6 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | uVar2;\n}\n\n", 
            "called": [
                "__addsf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000ad0", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_frsub"
        }, 
        "MSP_SendFrame": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendFrame(uint8_t code,uint8_t *data,uint16_t data_length)\n\n{\n  byte ch;\n  byte *pbVar1;\n  \n  serialPrint(PTR_DAT_08004344);\n  serialWrite((byte)data_length);\n  ch = (byte)data_length ^ code;\n  serialWrite(code);\n  for (pbVar1 = data; (int)pbVar1 - (int)data < (int)(uint)data_length; pbVar1 = pbVar1 + 1) {\n    serialWrite(*pbVar1);\n    ch = ch ^ *pbVar1;\n  }\n  serialWrite(ch);\n  return;\n}\n\n", 
            "called": [
                "serialWrite", 
                "serialPrint"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004300", 
            "calling": [
                "MSP_SendStatus", 
                "MSP_SendAltitude", 
                "MSP_SendRawIMU", 
                "MSP_SendAttitude", 
                "MSP_SendIdent", 
                "MSP_SendMotor", 
                "MSP_SendPID"
            ], 
            "imported": false, 
            "current_name": "MSP_SendFrame"
        }, 
        "__unorddf2": {
            "renaming": {}, 
            "code": "\nundefined4 __unorddf2(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if ((((param_2 << 1) >> 0x15 != -1) || ((param_1 | param_2 << 0xc) == 0)) &&\n     (((param_4 << 1) >> 0x15 != -1 || ((param_3 | param_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000a04", 
            "calling": [
                "pow", 
                "sqrt", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "__unorddf2"
        }, 
        "memcpy": {
            "renaming": {}, 
            "code": "\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar2 = (undefined *)((int)__dest + -1);\n  puVar1 = (undefined *)(__n + (int)__src);\n  for (; (undefined *)__src != puVar1; __src = (void *)((int)__src + 1)) {\n    puVar2 = puVar2 + 1;\n    *puVar2 = *__src;\n                    /* WARNING: Load size is inaccurate */\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005630", 
            "calling": [
                "__ssputs_r", 
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "memcpy"
        }, 
        "MS5611_ReadADC": {
            "renaming": {}, 
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint32_t MS5611_ReadADC(void)\n\n{\n  undefined4 in_r3;\n  uint8_t rxbuf [3];\n  \n  _rxbuf = in_r3;\n  I2C_ReadBytes(0xee,0,rxbuf,3,PTR_s____Src_MS5611_c_08003064,0x8c);\n  return (uint)CONCAT12(rxbuf[0],CONCAT11(rxbuf[1],rxbuf[2]));\n}\n\n", 
            "called": [
                "I2C_ReadBytes"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003034", 
            "calling": [
                "MS5611_Update"
            ], 
            "imported": false, 
            "current_name": "MS5611_ReadADC"
        }, 
        "__aeabi_fcmpeq": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmpeq(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cfcmpeq();\n  return in_ZR != '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001014", 
            "calling": [
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmpeq"
        }, 
        "AK8963_ReadData": {
            "renaming": {}, 
            "code": "\nvoid AK8963_ReadData(void)\n\n{\n  short sVar1;\n  short sVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  byte bVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  uint8_t raw_data [7];\n  \n  puVar3 = PTR_s____Src_MPU9250_c_08002e80;\n  raw_data._0_2_ = 0;\n  raw_data[2] = '\\0';\n  raw_data[3] = '\\0';\n  raw_data[4] = '\\0';\n  raw_data[5] = '\\0';\n  raw_data[6] = '\\0';\n  bVar7 = I2C_ReadByte(0x18,2,PTR_s____Src_MPU9250_c_08002e80,0xd7);\n  if ((int)((uint)bVar7 << 0x1f) < 0) {\n    I2C_ReadByteArray(0x18,3,raw_data,7,puVar3,0xda);\n    puVar3 = PTR_magRaw_08002e84;\n    if ((int)((uint)raw_data[6] << 0x1c) < 0) {\n      *(short *)(PTR_msp_txf_status_08002e94 + 2) = *(short *)(PTR_msp_txf_status_08002e94 + 2) + 1;\n    }\n    else {\n      sVar1 = CONCAT11(raw_data[3],raw_data[2]);\n      sVar2 = CONCAT11(raw_data[5],raw_data[4]);\n      *(undefined2 *)PTR_magRaw_08002e84 = raw_data._0_2_;\n      *(short *)(puVar3 + 2) = sVar1;\n      *(short *)(puVar3 + 4) = sVar2;\n      puVar6 = PTR_magBias_08002e9c;\n      puVar5 = PTR_magCalib_08002e98;\n      uVar9 = *(undefined4 *)PTR_mRes_08002e88;\n      uVar8 = __floatsisf();\n      uVar8 = __aeabi_fmul(uVar8,uVar9);\n      puVar3 = PTR_magScale_08002e8c;\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)puVar5);\n      uVar8 = __aeabi_fsub(uVar8,*(undefined4 *)puVar6);\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)puVar3);\n      puVar4 = PTR_magData_08002e90;\n      *(undefined4 *)PTR_magData_08002e90 = uVar8;\n      uVar8 = __floatsisf((int)sVar1);\n      uVar8 = __aeabi_fmul(uVar8,uVar9);\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)(puVar5 + 4));\n      uVar8 = __aeabi_fsub(uVar8,*(undefined4 *)(puVar6 + 4));\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)(puVar3 + 4));\n      *(undefined4 *)(puVar4 + 4) = uVar8;\n      uVar8 = __floatsisf((int)sVar2);\n      uVar8 = __aeabi_fmul(uVar8,uVar9);\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)(puVar5 + 8));\n      uVar8 = __aeabi_fsub(uVar8,*(undefined4 *)(puVar6 + 8));\n      uVar8 = __aeabi_fmul(uVar8,*(undefined4 *)(puVar3 + 8));\n      *(undefined4 *)(puVar4 + 8) = uVar8;\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fsub", 
                "__aeabi_fmul", 
                "__floatsisf", 
                "I2C_ReadByte", 
                "I2C_ReadByteArray"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002d88", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "AK8963_ReadData"
        }, 
        "_init": {
            "renaming": {}, 
            "code": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  return (int)ctx;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080072d4", 
            "calling": [
                "__libc_init_array", 
                "frame_dummy", 
                "__do_global_dtors_aux"
            ], 
            "imported": false, 
            "current_name": "_init"
        }, 
        "__floatundidf": {
            "renaming": {}, 
            "code": "\nulonglong __floatundidf(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  iVar7 = 0x432;\n  uVar8 = param_2 >> 0x16;\n  if (uVar8 != 0) {\n    iVar7 = 3;\n    if (param_2 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (param_2 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)param_2 >> 0x1f);\n    uVar8 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | param_2 << (0x20 - uVar4 & 0xff);\n    param_2 = param_2 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < param_2) {\n    if (0x1fffff < param_2) {\n      uVar4 = param_2 & 1;\n      param_2 = param_2 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar8 = (uint)(bVar1 & 1) << 0x1f | uVar8 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return 0x7ff0000000000000;\n      }\n    }\nLAB_08000278:\n    bVar10 = 0x7fffffff < uVar8;\n    if (uVar8 == 0x80000000) {\n      bVar10 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(param_2 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar10),param_1 + bVar10\n                   );\n  }\n  bVar9 = (uVar8 & 0x80000000) != 0;\n  uVar8 = uVar8 << 1;\n  uVar4 = param_1 * 2;\n  bVar10 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar9;\n  param_2 = param_2 * 2 + (uint)(bVar10 || CARRY4(uVar4,(uint)bVar9));\n  iVar7 = iVar7 + -1;\n  if ((param_2 & 0x100000) != 0) goto LAB_08000278;\n  uVar2 = param_1;\n  uVar4 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = count_leading_zeroes(uVar4);\n  if (param_2 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar11 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar10 = (int)uVar3 < 0;\n  bVar9 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar11 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar10 = iVar5 < 0;\n    bVar9 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && bVar10 == bVar11) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar8 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar9 || bVar10 != bVar11) {\n    uVar4 = uVar4 | uVar2 >> (uVar8 & 0xff);\n  }\n  if (bVar9 || bVar10 != bVar11) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000,uVar2);\n  }\n  uVar8 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar8) {\n    return (ulonglong)(uVar4 >> (uVar8 - 0x1f & 0xff));\n  }\n  iVar7 = uVar8 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar8 - 0x1f,0xc)) {\n    uVar8 = uVar8 + 1;\n    return CONCAT44(uVar4 >> (uVar8 & 0xff),uVar2 >> (uVar8 & 0xff) | uVar4 << (0x20 - uVar8 & 0xff)\n                   );\n  }\n  return (ulonglong)(uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff));\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000464", 
            "calling": [], 
            "imported": false, 
            "current_name": "__floatundidf"
        }, 
        "HAL_I2C_Mem_Read": {
            "renaming": {}, 
            "code": "\n/* WARNING: Type propagation algorithm not settling */\n\nHAL_StatusTypeDef\nHAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize\n                ,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint8_t *puVar1;\n  HAL_StatusTypeDef HVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  I2C_TypeDef *pIVar5;\n  uint uVar6;\n  uint8_t *puVar7;\n  bool bVar8;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  \n  if (hi2c->State != HAL_I2C_STATE_READY) {\n    return HAL_BUSY;\n  }\n  if (pData == (uint8_t *)0x0) {\n    return HAL_ERROR;\n  }\n  if (Size == 0) {\n    return HAL_ERROR;\n  }\n  uVar3 = HAL_GetTick();\n  while (pIVar5 = hi2c->Instance, (~pIVar5->SR2 & 2) == 0) {\n    uVar4 = HAL_GetTick();\n    if (10000 < uVar4 - uVar3) {\n      hi2c->Lock = HAL_UNLOCKED;\n      hi2c->State = HAL_I2C_STATE_READY;\n      return HAL_BUSY;\n    }\n  }\n  if (hi2c->Lock == HAL_LOCKED) {\n    return HAL_BUSY;\n  }\n  uVar6 = pIVar5->CR1;\n  hi2c->Lock = HAL_LOCKED;\n  pIVar5->CR1 = uVar6 & 0xfffff7ff;\n  hi2c->State = HAL_I2C_STATE_BUSY_RX;\n  hi2c->Mode = HAL_I2C_MODE_MEM;\n  hi2c->ErrorCode = 0;\n  HVar2 = I2C_RequestMemoryRead(hi2c,DevAddress,MemAddress,MemAddSize,Timeout);\n  if (HVar2 != HAL_OK) {\n    hi2c->Lock = HAL_UNLOCKED;\n    if (hi2c->ErrorCode == 4) {\n      return HAL_ERROR;\n    }\n    return HAL_TIMEOUT;\n  }\n  pIVar5 = hi2c->Instance;\n  uVar6 = pIVar5->CR1;\n  if (Size == 1) {\n    pIVar5->CR1 = uVar6 & 0xfffffbff;\n    disableIRQinterrupts();\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n    enableIRQinterrupts();\n    HVar2 = I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar2 == HAL_OK) {\n      *pData = (uint8_t)hi2c->Instance->DR;\nLAB_08001ab8:\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Mode = HAL_I2C_MODE_NONE;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_OK;\n    }\nLAB_08001a18:\n    if (hi2c->ErrorCode != 0x20) {\n      return HAL_ERROR;\n    }\n    return HAL_TIMEOUT;\n  }\n  if (Size == 2) {\n    pIVar5->CR1 = uVar6 | 0x800;\n    disableIRQinterrupts();\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    pIVar5->CR1 = uVar6 | 0x400;\n    while (3 < Size) {\n      HVar2 = I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout);\n      if (HVar2 != HAL_OK) goto LAB_08001a18;\n      *pData = (uint8_t)hi2c->Instance->DR;\n      pIVar5 = hi2c->Instance;\n      bVar8 = (int)(pIVar5->SR1 << 0x1d) < 0;\n      if (bVar8) {\n        pIVar5 = (I2C_TypeDef *)pIVar5->DR;\n        puVar7 = pData + 2;\n        Size = Size - 2;\n      }\n      else {\n        puVar7 = pData + 1;\n        Size = Size - 1;\n      }\n      puVar1 = pData + 1;\n      pData = puVar7;\n      if (bVar8) {\n        *puVar1 = (uint8_t)pIVar5;\n      }\n    }\n    if (Size != 2) {\n      uVar3 = HAL_GetTick();\n      do {\n        pIVar5 = hi2c->Instance;\n        do {\n          if ((int)(pIVar5->SR1 << 0x1d) < 0) {\n            pIVar5->CR1 = pIVar5->CR1 & 0xfffffbff;\n            disableIRQinterrupts();\n            *pData = (uint8_t)hi2c->Instance->DR;\n            uVar3 = HAL_GetTick();\n            goto LAB_08001b3a;\n          }\n        } while (Timeout == 0xffffffff);\n      } while ((Timeout != 0) && (uVar4 = HAL_GetTick(), uVar4 - uVar3 <= Timeout));\n      goto LAB_08001afa;\n    }\n  }\n  uVar3 = HAL_GetTick();\n  do {\n    do {\n      if ((int)(hi2c->Instance->SR1 << 0x1d) < 0) {\n        disableIRQinterrupts();\n        pIVar5 = hi2c->Instance;\n        pIVar5->CR1 = pIVar5->CR1 | 0x200;\n        *pData = (uint8_t)pIVar5->DR;\n        enableIRQinterrupts();\n        pData[1] = (uint8_t)hi2c->Instance->DR;\n        goto LAB_08001ab8;\n      }\n    } while (Timeout == 0xffffffff);\n  } while ((Timeout != 0) && (uVar4 = HAL_GetTick(), uVar4 - uVar3 <= Timeout));\nLAB_08001afa:\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Lock = HAL_UNLOCKED;\n  return HAL_TIMEOUT;\nLAB_08001b3a:\n  do {\n    pIVar5 = hi2c->Instance;\n    do {\n      if ((int)(pIVar5->SR1 << 0x1d) < 0) {\n        pIVar5->CR1 = pIVar5->CR1 | 0x200;\n        pData[1] = (uint8_t)pIVar5->DR;\n        enableIRQinterrupts();\n        pData[2] = (uint8_t)hi2c->Instance->DR;\n        goto LAB_08001ab8;\n      }\n    } while (Timeout == 0xffffffff);\n  } while ((Timeout != 0) && (uVar4 = HAL_GetTick(), uVar4 - uVar3 <= Timeout));\n  goto LAB_08001afa;\n}\n\n", 
            "called": [
                "I2C_RequestMemoryRead", 
                "I2C_WaitOnRXNEFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001938", 
            "calling": [
                "I2C_ReadBytes", 
                "I2C_ReadByte"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Mem_Read"
        }, 
        "UsageFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid UsageFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "UsageFault_Handler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004eec", 
            "calling": [
                "UsageFault_Handler"
            ], 
            "imported": false, 
            "current_name": "UsageFault_Handler"
        }, 
        "serialInt": {
            "renaming": {}, 
            "code": "\nvoid serialInt(int val)\n\n{\n  undefined *data;\n  \n  data = PTR_tx_buffer_08004cc4;\n  siprintf(PTR_tx_buffer_08004cc4,PTR_DAT_08004cc8,val);\n  serialPrint(data);\n  return;\n}\n\n", 
            "called": [
                "siprintf", 
                "serialPrint"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004cac", 
            "calling": [
                "_Error_Handler"
            ], 
            "imported": false, 
            "current_name": "serialInt"
        }, 
        "__malloc_lock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_lock(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800583c", 
            "calling": [
                "_free_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_lock"
        }, 
        "Motor3_SetPWM": {
            "renaming": {}, 
            "code": "\nvoid Motor3_SetPWM(int pwm)\n\n{\n  *(int *)(*(int *)PTR_htim2_08003fe4 + 0x38) = pwm;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003fdc", 
            "calling": [
                "Motor_StopAll", 
                "Motor_SetSpeed"
            ], 
            "imported": false, 
            "current_name": "Motor3_SetPWM"
        }, 
        "strlen": {
            "renaming": {}, 
            "code": "\nsize_t strlen(char *__s)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  pcVar3 = __s;\n  do {\n    pcVar2 = pcVar3 + 1;\n    cVar1 = *pcVar3;\n    pcVar3 = pcVar2;\n  } while (cVar1 != '\\0');\n  return (size_t)(pcVar2 + (-1 - (int)__s));\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000150", 
            "calling": [
                "serialPrint"
            ], 
            "imported": false, 
            "current_name": "strlen"
        }, 
        "__aeabi_dadd": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_dadd(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800016c", 
            "calling": [
                "scalbn", 
                "__ieee754_asin", 
                "__ieee754_sqrt", 
                "rint", 
                "__ieee754_atan2", 
                "atan", 
                "__aeabi_drsub", 
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dadd"
        }, 
        "Motor4_SetPWM": {
            "renaming": {}, 
            "code": "\nvoid Motor4_SetPWM(int pwm)\n\n{\n  *(int *)(*(int *)PTR_htim3_08003ff0 + 0x3c) = pwm;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003fe8", 
            "calling": [
                "Motor_StopAll", 
                "Motor_SetSpeed"
            ], 
            "imported": false, 
            "current_name": "Motor4_SetPWM"
        }, 
        "HAL_UART_ErrorCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002998", 
            "calling": [
                "HAL_UART_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_ErrorCallback"
        }, 
        "Motor1_SetPWM": {
            "renaming": {}, 
            "code": "\nvoid Motor1_SetPWM(int pwm)\n\n{\n  *(int *)(*(int *)PTR_htim4_08003fcc + 0x40) = pwm;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003fc4", 
            "calling": [
                "Motor_StopAll", 
                "Motor_SetSpeed"
            ], 
            "imported": false, 
            "current_name": "Motor1_SetPWM"
        }, 
        "PendSV_Handler": {
            "renaming": {}, 
            "code": "\nvoid PendSV_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ef2", 
            "calling": [], 
            "imported": false, 
            "current_name": "PendSV_Handler"
        }, 
        "_sbrk_r": {
            "renaming": {}, 
            "code": "\nvoid _sbrk_r(int *param_1,intptr_t param_2)\n\n{\n  undefined *puVar1;\n  void *pvVar2;\n  \n  puVar1 = PTR_errno_08005838;\n  *(undefined4 *)PTR_errno_08005838 = 0;\n  pvVar2 = _sbrk(param_2);\n  if ((pvVar2 == (void *)0xffffffff) && (*(int *)puVar1 != 0)) {\n    *param_1 = *(int *)puVar1;\n  }\n  return;\n}\n\n", 
            "called": [
                "_sbrk"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800581c", 
            "calling": [
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk_r"
        }, 
        "__libc_init_array": {
            "renaming": {}, 
            "code": "\nvoid __libc_init_array(EVP_PKEY_CTX *param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  \n  puVar1 = PTR___frame_dummy_init_array_entry_08004fec;\n  iVar2 = (int)PTR___frame_dummy_init_array_entry_08004ff0 -\n          (int)PTR___frame_dummy_init_array_entry_08004fec;\n  for (iVar3 = 0; iVar3 != iVar2 >> 2; iVar3 = iVar3 + 1) {\n    param_1 = (EVP_PKEY_CTX *)(**(code **)(puVar1 + iVar3 * 4))();\n  }\n  _init(param_1);\n  puVar1 = PTR___frame_dummy_init_array_entry_08004ff4;\n  iVar2 = (int)PTR___do_global_dtors_aux_fini_array_entry_08004ff8 -\n          (int)PTR___frame_dummy_init_array_entry_08004ff4;\n  for (iVar3 = 0; iVar3 != iVar2 >> 2; iVar3 = iVar3 + 1) {\n    (**(code **)(puVar1 + iVar3 * 4))();\n  }\n  return;\n}\n\n", 
            "called": [
                "_init", 
                "frame_dummy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004fb4", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "__libc_init_array"
        }, 
        "HAL_UART_TxCpltCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_TxCpltCallback(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800290a", 
            "calling": [
                "HAL_UART_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_TxCpltCallback"
        }, 
        "finite": {
            "renaming": {}, 
            "code": "\nint finite(double __value)\n\n{\n  uint in_r1;\n  \n  return (in_r1 | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08007092", 
            "calling": [
                "pow"
            ], 
            "imported": false, 
            "current_name": "finite"
        }, 
        "Devices_Init": {
            "renaming": {}, 
            "code": "\nvoid Devices_Init(void)\n\n{\n  Peripherals_Init();\n  PWM_Init();\n  LED_StartupSequence();\n  return;\n}\n\n", 
            "called": [
                "PWM_Init", 
                "LED_StartupSequence", 
                "Peripherals_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004028", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "Devices_Init"
        }, 
        "HAL_RCC_GetPCLK1Freq": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_RCC_GetPCLK1Freq(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = count_leading_zeroes(0xe00000);\n  return *(uint *)PTR_SystemCoreClock_0800224c >>\n         PTR_APBPrescTable_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (uVar1 & 0xff)];\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002220", 
            "calling": [
                "HAL_I2C_Init", 
                "UART_SetConfig"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_GetPCLK1Freq"
        }, 
        "UART_Receive_IT": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)\n\n{\n  uint32_t uVar1;\n  byte bVar2;\n  USART_TypeDef *pUVar3;\n  uint16_t uVar4;\n  ushort *puVar5;\n  ushort *puVar6;\n  bool bVar7;\n  \n  if ((huart->State & 0xef) != 0x22) {\n    return HAL_BUSY;\n  }\n  uVar1 = (huart->Init).Parity;\n  pUVar3 = huart->Instance;\n  puVar5 = (ushort *)huart->pRxBuffPtr;\n  if ((huart->Init).WordLength == 0x1000) {\n    if (uVar1 == 0) {\n      puVar6 = puVar5 + 1;\n      *puVar5 = (ushort)((pUVar3->DR << 0x17) >> 0x17);\n    }\n    else {\n      puVar6 = (ushort *)((int)puVar5 + 1);\n      *puVar5 = (ushort)pUVar3->DR & 0xff;\n    }\n    huart->pRxBuffPtr = (uint8_t *)puVar6;\n  }\n  else {\n    if (uVar1 == 0) {\n      bVar2 = (byte)pUVar3->DR;\n      huart->pRxBuffPtr = (uint8_t *)((int)puVar5 + 1);\n    }\n    else {\n      uVar1 = pUVar3->DR;\n      huart->pRxBuffPtr = (uint8_t *)((int)puVar5 + 1);\n      bVar2 = (byte)uVar1 & 0x7f;\n    }\n    *(byte *)puVar5 = bVar2;\n  }\n  uVar4 = huart->RxXferCount - 1;\n  huart->RxXferCount = uVar4;\n  if (uVar4 == 0) {\n    pUVar3 = huart->Instance;\n    pUVar3->CR1 = pUVar3->CR1 & 0xffffffdf;\n    uVar1 = (uint32_t)huart->State;\n    bVar7 = uVar1 != 0x32;\n    if (bVar7) {\n      uVar1 = pUVar3->CR1 & 0xfffffeff;\n    }\n    else {\n      pUVar3 = (USART_TypeDef *)0x12;\n    }\n    if (bVar7) {\n      pUVar3->CR1 = uVar1;\n      uVar1 = pUVar3->CR3 & 0xfffffffe;\n    }\n    if (bVar7) {\n      pUVar3->CR3 = uVar1;\n      pUVar3 = (USART_TypeDef *)0x1;\n    }\n    huart->State = (HAL_UART_StateTypeDef)pUVar3;\n    HAL_UART_RxCpltCallback(huart);\n  }\n  return HAL_OK;\n}\n\n", 
            "called": [
                "HAL_UART_RxCpltCallback"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800290c", 
            "calling": [
                "HAL_UART_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "UART_Receive_IT"
        }, 
        "HAL_GetTick": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_GetTick(void)\n\n{\n  return *(uint32_t *)PTR_uwTick_08001164;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800115c", 
            "calling": [
                "HAL_I2C_Mem_Write", 
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead", 
                "millis", 
                "HAL_UART_Transmit", 
                "I2C_WaitOnRXNEFlagUntilTimeout", 
                "HAL_I2C_Mem_Read", 
                "I2C_WaitOnMasterAddressFlagUntilTimeout", 
                "HAL_RCC_ClockConfig", 
                "HAL_RCC_OscConfig", 
                "micros"
            ], 
            "imported": false, 
            "current_name": "HAL_GetTick"
        }, 
        "TIM_CCxChannelCmd": {
            "renaming": {}, 
            "code": "\nvoid TIM_CCxChannelCmd(TIM_TypeDef *TIMx,uint32_t Channel,uint32_t ChannelState)\n\n{\n  TIMx->CCER = TIMx->CCER & ~(1 << (Channel & 0xff));\n  TIMx->CCER = ChannelState << (Channel & 0xff) | TIMx->CCER;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002520", 
            "calling": [
                "HAL_TIM_PWM_Start"
            ], 
            "imported": false, 
            "current_name": "TIM_CCxChannelCmd"
        }, 
        "BusFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid BusFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "BusFault_Handler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004eea", 
            "calling": [
                "BusFault_Handler"
            ], 
            "imported": false, 
            "current_name": "BusFault_Handler"
        }, 
        "__aeabi_fmul": {
            "renaming": {}, 
            "code": "\nuint __aeabi_fmul(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000cec", 
            "calling": [
                "PID_Compute", 
                "MPU9250_ReadAccelData", 
                "lowPassFilter", 
                "AHRS_ComputeAngles", 
                "PID_UpdateAltitude", 
                "AK8963_ReadData", 
                "MadgwickQuaternionUpdate", 
                "MPU9250_ReadGyroData", 
                "PID_Update", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fmul"
        }, 
        "serialPrint": {
            "renaming": {}, 
            "code": "\nvoid serialPrint(char *data)\n\n{\n  size_t sVar1;\n  uchar *puVar2;\n  \n  for (puVar2 = (uchar *)data; sVar1 = strlen(data), (uint)((int)puVar2 - (int)data) < sVar1;\n      puVar2 = puVar2 + 1) {\n    serialWrite(*puVar2);\n  }\n  return;\n}\n\n", 
            "called": [
                "serialWrite", 
                "strlen"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004c8c", 
            "calling": [
                "_Error_Handler", 
                "MSP_SendFrame", 
                "serialInt"
            ], 
            "imported": false, 
            "current_name": "serialPrint"
        }, 
        "aflCall": {
            "renaming": {}, 
            "code": "\nuint32_t aflCall(uint32_t a0,uint32_t a1,int32_t a2)\n\n{\n  software_interrupt(0x3f);\n  return a0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003eac", 
            "calling": [
                "startForkserver"
            ], 
            "imported": false, 
            "current_name": "aflCall"
        }, 
        "HAL_TIMEx_ConfigBreakDeadTime": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIMEx_ConfigBreakDeadTime\n          (TIM_HandleTypeDef *htim,TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  HVar1 = HAL_BUSY;\n  if (htim->Lock != HAL_LOCKED) {\n    htim->State = HAL_TIM_STATE_BUSY;\n    htim->Instance->BDTR =\n         sBreakDeadTimeConfig->OffStateRunMode | sBreakDeadTimeConfig->OffStateIDLEMode |\n         sBreakDeadTimeConfig->LockLevel | sBreakDeadTimeConfig->DeadTime |\n         sBreakDeadTimeConfig->BreakState | sBreakDeadTimeConfig->BreakPolarity |\n         sBreakDeadTimeConfig->AutomaticOutput;\n    htim->State = HAL_TIM_STATE_READY;\n    HVar1 = HAL_OK;\n    htim->Lock = HAL_UNLOCKED;\n  }\n  return HVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002564", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_ConfigBreakDeadTime"
        }, 
        "TIM_OC4_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC4_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  TIM_TypeDef *pTVar4;\n  \n  TIMx->CCER = TIMx->CCER & 0xffffefff;\n  uVar1 = TIMx->CR2;\n  uVar2 = OC_Config->OCMode;\n  uVar3 = OC_Config->OCPolarity;\n  pTVar4 = DAT_08002364;\n  if (TIMx == DAT_08002364) {\n    pTVar4 = (TIM_TypeDef *)OC_Config->OCIdleState;\n    uVar1 = uVar1 & 0xffffbfff;\n  }\n  if (TIMx == DAT_08002364) {\n    uVar1 = uVar1 | (int)pTVar4 << 6;\n  }\n  TIMx->CR2 = uVar1;\n  TIMx->CCMR2 = TIMx->CCMR2 & 0xffff8cff | uVar2 << 8;\n  TIMx->CCR4 = OC_Config->Pulse;\n  TIMx->CCER = TIMx->CCER & 0xffffdfff | uVar3 << 0xc;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002324", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC4_SetConfig"
        }, 
        "HAL_I2C_Mem_Write": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,\n                 uint16_t MemAddSize,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint uVar5;\n  \n  if (hi2c->State == HAL_I2C_STATE_READY) {\n    if (pData == (uint8_t *)0x0) {\n      return HAL_ERROR;\n    }\n    if (Size == 0) {\n      return HAL_ERROR;\n    }\n    uVar2 = HAL_GetTick();\n    do {\n      pIVar4 = hi2c->Instance;\n      if ((~pIVar4->SR2 & 2) != 0) {\n        if (hi2c->Lock == HAL_LOCKED) {\n          return HAL_BUSY;\n        }\n        uVar5 = pIVar4->CR1;\n        hi2c->Lock = HAL_LOCKED;\n        pIVar4->CR1 = uVar5 & 0xfffff7ff;\n        hi2c->State = HAL_I2C_STATE_BUSY_TX;\n        hi2c->Mode = HAL_I2C_MODE_MEM;\n        hi2c->ErrorCode = 0;\n        HVar1 = I2C_RequestMemoryWrite(hi2c,DevAddress,MemAddress,MemAddSize,Timeout);\n        if (HVar1 != HAL_OK) {\n          hi2c->Lock = HAL_UNLOCKED;\n          if (hi2c->ErrorCode == 4) {\n            return HAL_ERROR;\n          }\n          return HAL_TIMEOUT;\n        }\n        goto LAB_080018e2;\n      }\n      uVar3 = HAL_GetTick();\n    } while (uVar3 - uVar2 < 0x2711);\n    hi2c->Lock = HAL_UNLOCKED;\n    hi2c->State = HAL_I2C_STATE_READY;\n  }\n  return HAL_BUSY;\n  while (Size != 0) {\nLAB_080018e2:\n    HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar1 != HAL_OK) goto LAB_080018ee;\n    pIVar4 = hi2c->Instance;\n    pIVar4->DR = (uint)*pData;\n    if ((int)(pIVar4->SR1 << 0x1d) < 0) {\n      if ((uint16_t)(Size - 1) == 0) break;\n      Size = Size - 2;\n      pIVar4->DR = (uint)pData[1];\n      pData = pData + 2;\n    }\n    else {\n      pData = pData + 1;\n      Size = Size - 1;\n    }\n  }\n  HVar1 = I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n  if (HVar1 == HAL_OK) {\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n    hi2c->Lock = HAL_UNLOCKED;\n    hi2c->State = HAL_I2C_STATE_READY;\n    hi2c->Mode = HAL_I2C_MODE_NONE;\n    return HAL_OK;\n  }\nLAB_080018ee:\n  if (hi2c->ErrorCode == 4) {\n    hi2c->Instance->CR1 = hi2c->Instance->CR1 | 0x200;\n    return HAL_ERROR;\n  }\n  return HAL_TIMEOUT;\n}\n\n", 
            "called": [
                "I2C_RequestMemoryWrite", 
                "I2C_WaitOnTXEFlagUntilTimeout", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001828", 
            "calling": [
                "I2C_WriteByte"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Mem_Write"
        }, 
        "Reset_Handler": {
            "renaming": {}, 
            "code": "\nvoid Reset_Handler(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; puVar2 = (undefined4 *)PTR_completed_8672_08004fa8,\n      PTR_gyroBias_08004fa0 + iVar1 < PTR_completed_8672_08004fa4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(PTR_gyroBias_08004fa0 + iVar1) = *(undefined4 *)(PTR__sidata_08004f9c + iVar1);\n  }\n  for (; puVar2 < PTR__ebss_08004fac; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n", 
            "called": [
                "__libc_init_array", 
                "SystemInit", 
                "main"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f68", 
            "calling": [], 
            "imported": false, 
            "current_name": "Reset_Handler"
        }, 
        "AK8963_Init": {
            "renaming": {}, 
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid AK8963_Init(void)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  uint in_r3;\n  uint8_t rawData [3];\n  \n  _rawData = in_r3;\n  I2C_WriteByte(0xd0,0x37,'\\\"','\\x01');\n  puVar1 = PTR_s____Src_MPU9250_c_08002d80;\n  I2C_WriteByte(0xd0,0x6a,'\\x01','\\x01');\n  I2C_ReadByte(0x18,0,puVar1,0xad);\n  I2C_WriteByte(0x18,0xb,'\\x01','\\x01');\n  I2C_WriteByte(0x18,10,'\\0','\\x01');\n  I2C_WriteByte(0x18,10,'\\x0f','\\x01');\n  I2C_ReadByteArray(0x18,0x10,rawData,3,puVar1,0xb6);\n  puVar1 = PTR_magCalib_08002d84;\n  uVar2 = __floatsisf((_rawData & 0xff) - 0x80);\n  uVar2 = __aeabi_fmul(uVar2,0x3b800000);\n  uVar2 = __addsf3(uVar2,0x3f800000);\n  *(undefined4 *)puVar1 = uVar2;\n  uVar2 = __floatsisf((_rawData >> 8 & 0xff) - 0x80);\n  uVar2 = __aeabi_fmul(uVar2,0x3b800000);\n  uVar2 = __addsf3(uVar2,0x3f800000);\n  *(undefined4 *)(puVar1 + 4) = uVar2;\n  uVar2 = __floatsisf(rawData[2] - 0x80);\n  uVar2 = __aeabi_fmul(uVar2,0x3b800000);\n  uVar2 = __addsf3(uVar2,0x3f800000);\n  *(undefined4 *)(puVar1 + 8) = uVar2;\n  I2C_WriteByte(0x18,10,'\\0','\\x01');\n  I2C_WriteByte(0x18,10,'\\x16','\\x01');\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fmul", 
                "I2C_WriteByte", 
                "__addsf3", 
                "__floatsisf", 
                "I2C_ReadByte", 
                "I2C_ReadByteArray"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002cb0", 
            "calling": [
                "IMU_Init"
            ], 
            "imported": false, 
            "current_name": "AK8963_Init"
        }, 
        "HAL_SYSTICK_CLKSourceConfig": {
            "renaming": {}, 
            "code": "\nvoid HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)\n\n{\n  uint uVar1;\n  \n  if (CLKSource == 4) {\n    uVar1 = *DAT_08001254 | 4;\n  }\n  else {\n    uVar1 = *DAT_08001254 & 0xfffffffb;\n  }\n  *DAT_08001254 = uVar1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001240", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_CLKSourceConfig"
        }, 
        "Peripherals_Init": {
            "renaming": {}, 
            "code": "\nvoid Peripherals_Init(void)\n\n{\n  GPIO_TypeDef *GPIOx;\n  undefined4 uVar1;\n  undefined *huart;\n  HAL_StatusTypeDef HVar2;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  TIM_MasterConfigTypeDef sMasterConfig;\n  TIM_OC_InitTypeDef sConfigOC;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  undefined *puVar3;\n  \n  HAL_Init();\n  SystemClock_Config();\n  GPIOx = DAT_08004800;\n  iVar5 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  uVar6 = 2;\n  *(uint *)(iVar5 + 0x18) = *(uint *)(iVar5 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar5 + 0x18) = *(uint *)(iVar5 + 0x18) | 8;\n  HAL_GPIO_WritePin(GPIOx,0xe000,GPIO_PIN_RESET);\n  HAL_GPIO_WritePin(DAT_08004808,0x20,GPIO_PIN_RESET);\n  GPIO_InitStruct.Pin = 0xe000;\n  GPIO_InitStruct.Mode = 1;\n  GPIO_InitStruct.Speed = 2;\n  HAL_GPIO_Init(DAT_08004800,&GPIO_InitStruct);\n  GPIO_InitStruct.Pin = 0x20;\n  GPIO_InitStruct.Mode = 1;\n  GPIO_InitStruct.Speed = 2;\n  HAL_GPIO_Init(DAT_08004808,&GPIO_InitStruct);\n  puVar3 = PTR_hi2c1_0800480c;\n  *(undefined4 *)PTR_hi2c1_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar3 + 4) = uVar1;\n  *(undefined4 *)(puVar3 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar3 + 8) = 0;\n  *(undefined4 *)(puVar3 + 0xc) = 0;\n  *(undefined4 *)(puVar3 + 0x14) = 0;\n  *(undefined4 *)(puVar3 + 0x18) = 0;\n  *(undefined4 *)(puVar3 + 0x1c) = 0;\n  *(undefined4 *)(puVar3 + 0x20) = 0;\n  HVar2 = HAL_I2C_Init((I2C_HandleTypeDef *)puVar3);\n  puVar3 = (undefined *)(uint)HVar2;\n  if (puVar3 == (undefined *)0x0) goto LAB_0800463a;\n  iVar5 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  puVar3 = PTR_s____Src_peripherals_c_08004814;\n                                  _Error_Handler(PTR_s____Src_peripherals_c_08004814,iVar5);\nLAB_0800463a:\n                                  uVar1 = DAT_0800481c;\n                                  huart = PTR_huart1_08004818;\n                                  *(undefined **)(PTR_huart1_08004818 + 8) = puVar3;\n                                  *(undefined **)(huart + 0xc) = puVar3;\n                                  *(undefined **)(huart + 0x10) = puVar3;\n                                  *(undefined **)(huart + 0x18) = puVar3;\n                                  *(undefined **)(huart + 0x1c) = puVar3;\n                                  *(undefined4 *)huart = uVar1;\n                                  *(undefined4 *)(huart + 4) = 0x1c200;\n                                  *(undefined4 *)(huart + 0x14) = 0xc;\n                                  HVar2 = HAL_UART_Init((UART_HandleTypeDef *)huart);\n                                  uVar1 = DAT_08004824;\n                                  puVar3 = PTR_htim1_08004820;\n                                  if (HVar2 == HAL_OK) break;\n                                  iVar5 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_htim1_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar3 + 0x10) = 0;\n                                *(undefined4 *)(puVar3 + 0x14) = 0;\n                                *(undefined4 *)puVar3 = uVar1;\n                                *(uint *)(puVar3 + 4) = uVar6;\n                                *(undefined4 *)(puVar3 + 0xc) = 1000;\n                                HVar2 = HAL_TIM_PWM_Init((TIM_HandleTypeDef *)puVar3);\n                                uVar4 = (uint)HVar2;\n                                if (uVar4 == 0) break;\n                                iVar5 = 0x88;\n                              }\n                              sMasterConfig.MasterOutputTrigger = uVar4;\n                              sMasterConfig.MasterSlaveMode = uVar4;\n                              HVar2 = HAL_TIMEx_MasterConfigSynchronization\n                                                ((TIM_HandleTypeDef *)puVar3,&sMasterConfig);\n                              uVar4 = (uint)HVar2;\n                              if (uVar4 == 0) break;\n                              iVar5 = 0x8f;\n                            }\n                            sConfigOC.OCMode = 0x60;\n                            sConfigOC.Pulse = uVar4;\n                            sConfigOC.OCPolarity = uVar4;\n                            sConfigOC.OCFastMode = uVar4;\n                            sConfigOC.OCIdleState = uVar4;\n                            sConfigOC.OCNIdleState = uVar4;\n                            HVar2 = HAL_TIM_PWM_ConfigChannel\n                                              ((TIM_HandleTypeDef *)puVar3,&sConfigOC,0xc);\n                            uVar4 = (uint)HVar2;\n                            if (uVar4 == 0) break;\n                            iVar5 = 0x9a;\n                          }\n                          GPIO_InitStruct.Pin = uVar4;\n                          GPIO_InitStruct.Mode = uVar4;\n                          GPIO_InitStruct.Pull = uVar4;\n                          GPIO_InitStruct.Speed = uVar4;\n                          HVar2 = HAL_TIMEx_ConfigBreakDeadTime\n                                            ((TIM_HandleTypeDef *)puVar3,\n                                             (TIM_BreakDeadTimeConfigTypeDef *)&GPIO_InitStruct);\n                          if (HVar2 == HAL_OK) break;\n                          iVar5 = 0xa6;\n                        }\n                        HAL_TIM_MspPostInit((TIM_HandleTypeDef *)puVar3);\n                        puVar3 = PTR_htim2_08004828;\n                        *(undefined4 *)PTR_htim2_08004828 = 0x40000000;\n                        *(uint *)(puVar3 + 4) = uVar6;\n                        *(undefined4 *)(puVar3 + 8) = 0;\n                        *(undefined4 *)(puVar3 + 0xc) = 1000;\n                        *(undefined4 *)(puVar3 + 0x10) = 0;\n                        HVar2 = HAL_TIM_PWM_Init((TIM_HandleTypeDef *)puVar3);\n                        uVar4 = (uint)HVar2;\n                        if (uVar4 == 0) break;\n                        iVar5 = 0xc3;\n                      }\n                      sConfigOC.OCMode = uVar4;\n                      sConfigOC.Pulse = uVar4;\n                      HVar2 = HAL_TIMEx_MasterConfigSynchronization\n                                        ((TIM_HandleTypeDef *)puVar3,\n                                         (TIM_MasterConfigTypeDef *)&sConfigOC);\n                      uVar4 = (uint)HVar2;\n                      if (uVar4 == 0) break;\n                      iVar5 = 0xca;\n                    }\n                    GPIO_InitStruct.Pin = 0x60;\n                    GPIO_InitStruct.Mode = uVar4;\n                    GPIO_InitStruct.Pull = uVar4;\n                    HVar2 = HAL_TIM_PWM_ConfigChannel\n                                      ((TIM_HandleTypeDef *)puVar3,\n                                       (TIM_OC_InitTypeDef *)&GPIO_InitStruct,4);\n                    if (HVar2 == HAL_OK) break;\n                    iVar5 = 0xd3;\n                  }\n                  HAL_TIM_MspPostInit((TIM_HandleTypeDef *)puVar3);\n                  uVar1 = DAT_08004830;\n                  puVar3 = PTR_htim3_0800482c;\n                  *(undefined4 *)(PTR_htim3_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar3 = uVar1;\n                  *(uint *)(puVar3 + 4) = uVar6;\n                  *(undefined4 *)(puVar3 + 8) = 0;\n                  *(undefined4 *)(puVar3 + 0x10) = 0;\n                  HVar2 = HAL_TIM_PWM_Init((TIM_HandleTypeDef *)puVar3);\n                  if (HVar2 == HAL_OK) break;\n                  iVar5 = 0xf0;\n                }\n                sConfigOC.OCMode = 0;\n                sConfigOC.Pulse = 0;\n                HVar2 = HAL_TIMEx_MasterConfigSynchronization\n                                  ((TIM_HandleTypeDef *)PTR_htim3_0800482c,\n                                   (TIM_MasterConfigTypeDef *)&sConfigOC);\n                uVar4 = (uint)HVar2;\n                if (uVar4 == 0) break;\n                iVar5 = 0xf7;\n              }\n              GPIO_InitStruct.Pin = 0x60;\n              GPIO_InitStruct.Mode = uVar4;\n              GPIO_InitStruct.Pull = uVar4;\n              HVar2 = HAL_TIM_PWM_ConfigChannel\n                                ((TIM_HandleTypeDef *)PTR_htim3_0800482c,\n                                 (TIM_OC_InitTypeDef *)&GPIO_InitStruct,8);\n              if (HVar2 == HAL_OK) break;\n              iVar5 = 0x100;\n            }\n            HVar2 = HAL_TIM_PWM_ConfigChannel\n                              ((TIM_HandleTypeDef *)PTR_htim3_0800482c,\n                               (TIM_OC_InitTypeDef *)&GPIO_InitStruct,0xc);\n            uVar6 = (uint)HVar2;\n            if (uVar6 == 0) break;\n            iVar5 = 0x105;\n          }\n          HAL_TIM_MspPostInit((TIM_HandleTypeDef *)PTR_htim3_0800482c);\n          puVar3 = PTR_htim4_08004834;\n          *(undefined4 *)PTR_htim4_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar3 + 4) = 2;\n          *(undefined4 *)(puVar3 + 8) = 0;\n          *(undefined4 *)(puVar3 + 0xc) = 1000;\n          *(undefined4 *)(puVar3 + 0x10) = 0;\n          HVar2 = HAL_TIM_PWM_Init((TIM_HandleTypeDef *)puVar3);\n          uVar4 = (uint)HVar2;\n          if (uVar4 == 0) break;\n          iVar5 = 0x122;\n        }\n        sConfigOC.OCMode = uVar4;\n        sConfigOC.Pulse = uVar4;\n        HVar2 = HAL_TIMEx_MasterConfigSynchronization\n                          ((TIM_HandleTypeDef *)puVar3,(TIM_MasterConfigTypeDef *)&sConfigOC);\n        uVar4 = (uint)HVar2;\n        if (uVar4 == 0) break;\n        iVar5 = 0x129;\n      }\n      GPIO_InitStruct.Pin = 0x60;\n      GPIO_InitStruct.Mode = uVar4;\n      GPIO_InitStruct.Pull = uVar4;\n      HVar2 = HAL_TIM_PWM_ConfigChannel\n                        ((TIM_HandleTypeDef *)puVar3,(TIM_OC_InitTypeDef *)&GPIO_InitStruct,8);\n      if (HVar2 == HAL_OK) break;\n      iVar5 = 0x132;\n    }\n    HVar2 = HAL_TIM_PWM_ConfigChannel\n                      ((TIM_HandleTypeDef *)puVar3,(TIM_OC_InitTypeDef *)&GPIO_InitStruct,0xc);\n    if (HVar2 == HAL_OK) break;\n    iVar5 = 0x137;\n  }\n  HAL_TIM_MspPostInit((TIM_HandleTypeDef *)puVar3);\n  return;\n}\n\n", 
            "called": [
                "SystemClock_Config", 
                "_Error_Handler", 
                "HAL_TIM_PWM_ConfigChannel", 
                "HAL_TIM_PWM_Init", 
                "HAL_TIMEx_MasterConfigSynchronization", 
                "HAL_TIMEx_ConfigBreakDeadTime", 
                "HAL_GPIO_WritePin", 
                "HAL_Init", 
                "HAL_UART_Init", 
                "HAL_TIM_MspPostInit", 
                "HAL_GPIO_Init", 
                "HAL_I2C_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800458c", 
            "calling": [
                "Devices_Init"
            ], 
            "imported": false, 
            "current_name": "Peripherals_Init"
        }, 
        "_sbrk": {
            "renaming": {}, 
            "code": "\nvoid * _sbrk(intptr_t __delta)\n\n{\n  undefined *puVar1;\n  void *pvVar2;\n  \n  puVar1 = PTR_heap_end_4116_080072cc;\n  if (*(int *)PTR_heap_end_4116_080072cc == 0) {\n    *(undefined **)PTR_heap_end_4116_080072cc = PTR__ebss_080072d0;\n  }\n  pvVar2 = *(void **)puVar1;\n  *(intptr_t *)puVar1 = __delta + (int)pvVar2;\n  return pvVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080072b8", 
            "calling": [
                "_sbrk_r"
            ], 
            "imported": false, 
            "current_name": "_sbrk"
        }, 
        "HardFault_Handler": {
            "renaming": {}, 
            "code": "\nvoid HardFault_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "HardFault_Handler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ee6", 
            "calling": [
                "HardFault_Handler"
            ], 
            "imported": false, 
            "current_name": "HardFault_Handler"
        }, 
        "__aeabi_dcmpeq": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpeq(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cdcmpeq();\n  return in_ZR != '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009a0", 
            "calling": [
                "pow"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmpeq"
        }, 
        "HAL_UART_MspInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_MspInit(UART_HandleTypeDef *huart)\n\n{\n  uint32_t tmpreg;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  if (huart->Instance == DAT_08004edc) {\n    DAT_08004edc[0x7b7].CR3 = DAT_08004edc[0x7b7].CR3 | 0x4000;\n    GPIO_InitStruct.Pin = 0x200;\n    GPIO_InitStruct.Mode = 2;\n    GPIO_InitStruct.Speed = 3;\n    HAL_GPIO_Init(DAT_08004ee0,&GPIO_InitStruct);\n    GPIO_InitStruct.Pin = 0x400;\n    GPIO_InitStruct.Mode = 0;\n    GPIO_InitStruct.Pull = 0;\n    HAL_GPIO_Init(DAT_08004ee0,&GPIO_InitStruct);\n    HAL_NVIC_SetPriority(USART1_IRQn,0,0);\n    HAL_NVIC_EnableIRQ(USART1_IRQn);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_NVIC_SetPriority", 
                "HAL_NVIC_EnableIRQ", 
                "HAL_GPIO_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004e7c", 
            "calling": [
                "HAL_UART_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_MspInit"
        }, 
        "SystemInit": {
            "renaming": {}, 
            "code": "\nvoid SystemInit(void)\n\n{\n  uint *puVar1;\n  \n  puVar1 = DAT_08004f50;\n  *DAT_08004f50 = *DAT_08004f50 | 1;\n  puVar1[1] = DAT_08004f54 & puVar1[1];\n  *puVar1 = *puVar1 & 0xfef6ffff;\n  *puVar1 = *puVar1 & 0xfffbffff;\n  puVar1[1] = puVar1[1] & 0xff80ffff;\n  puVar1[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f10", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "SystemInit"
        }, 
        "PID_Init": {
            "renaming": {}, 
            "code": "\nvoid PID_Init(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  \n  puVar3 = PTR_pid_yaw_080049f0;\n  puVar2 = PTR_pid_pitch_080049ec;\n  puVar1 = PTR_pid_roll_080049e8;\n  *(undefined4 *)(PTR_pid_pitch_080049ec + 0x4c) = 1;\n  *(undefined4 *)(puVar1 + 0x4c) = 1;\n  *(undefined4 *)(puVar3 + 0x4c) = 0xffffffff;\n  uVar5 = DAT_080049f8;\n  puVar4 = PTR_pid_altitude_080049f4;\n  *(undefined4 *)(PTR_pid_altitude_080049f4 + 0x4c) = 1;\n  uVar6 = DAT_08004a00;\n  *(undefined4 *)(puVar2 + 0x20) = DAT_080049fc;\n  uVar7 = DAT_08004a08;\n  *(undefined4 *)(puVar1 + 0x20) = DAT_08004a04;\n  *(undefined4 *)(puVar3 + 0x20) = DAT_08004a0c;\n  *(undefined4 *)(puVar4 + 0x20) = 0;\n  *(undefined4 *)(puVar2 + 4) = uVar5;\n  uVar5 = DAT_08004a10;\n  *(undefined4 *)(puVar2 + 8) = DAT_08004a10;\n  *(undefined4 *)(puVar2 + 0xc) = uVar6;\n  *(undefined4 *)(puVar2 + 0x10) = uVar7;\n  uVar7 = DAT_08004a14;\n  *(undefined4 *)(puVar2 + 0x14) = uVar5;\n  *(undefined4 *)(puVar2 + 0x18) = uVar7;\n  uVar8 = DAT_08004a1c;\n  uVar7 = DAT_08004a18;\n  *(undefined4 *)(puVar1 + 4) = DAT_08004a18;\n  *(undefined4 *)(puVar1 + 8) = uVar5;\n  *(undefined4 *)(puVar1 + 0xc) = uVar8;\n  *(undefined4 *)(puVar1 + 0x10) = uVar7;\n  uVar7 = DAT_08004a20;\n  *(undefined4 *)(puVar1 + 0x14) = uVar5;\n  *(undefined4 *)(puVar1 + 0x18) = uVar7;\n  *(undefined4 *)(puVar3 + 4) = DAT_08004a24;\n  *(undefined4 *)(puVar3 + 8) = DAT_08004a28;\n  *(undefined4 *)(puVar3 + 0xc) = uVar6;\n  *(undefined4 *)(puVar3 + 0x10) = 0;\n  *(undefined4 *)(puVar3 + 0x14) = 0;\n  *(undefined4 *)(puVar3 + 0x18) = 0;\n  *(undefined4 *)(puVar4 + 4) = DAT_08004a2c;\n  *(undefined4 *)(puVar4 + 8) = 0;\n  *(undefined4 *)(puVar4 + 0xc) = 0;\n  *(undefined4 *)(puVar4 + 0x10) = 0;\n  *(undefined4 *)(puVar4 + 0x14) = 0;\n  *(undefined4 *)(puVar4 + 0x18) = 0;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004978", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "PID_Init"
        }, 
        "__addsf3": {
            "renaming": {}, 
            "code": "\nuint __addsf3(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000adc", 
            "calling": [
                "AHRS_GetYaw", 
                "MS5611_Update", 
                "PID_Compute", 
                "lowPassFilter", 
                "Motor_DistributeSpeed", 
                "MadgwickQuaternionUpdate", 
                "PID_Update", 
                "__aeabi_frsub", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "__addsf3"
        }, 
        "UART_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid UART_SetConfig(UART_HandleTypeDef *huart)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  int iVar4;\n  uint32_t uVar5;\n  int iVar6;\n  USART_TypeDef *pUVar7;\n  \n  pUVar7 = huart->Instance;\n  uVar3 = (huart->Init).Parity;\n  pUVar7->CR2 = pUVar7->CR2 & 0xffffcfff | (huart->Init).StopBits;\n  pUVar7->CR1 = (huart->Init).WordLength | uVar3 | (huart->Init).Mode | pUVar7->CR1 & 0xffffe9f3;\n  pUVar7->CR3 = pUVar7->CR3 & 0xfffffcff | (huart->Init).HwFlowCtl;\n  if (pUVar7 == DAT_08002720) {\n    uVar1 = HAL_RCC_GetPCLK2Freq();\n    iVar4 = (int)(((ulonglong)(uVar1 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) / 100);\n    uVar1 = HAL_RCC_GetPCLK2Freq();\n    uVar5 = (huart->Init).BaudRate;\n    uVar2 = HAL_RCC_GetPCLK2Freq();\n    iVar6 = (uVar1 * 0x19) / (uVar5 << 2) +\n            (int)(((ulonglong)(uVar2 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) / 100) *\n            -100;\n    uVar1 = HAL_RCC_GetPCLK2Freq();\n    uVar3 = (uVar1 * 0x19) / ((huart->Init).BaudRate << 2);\n    uVar1 = HAL_RCC_GetPCLK2Freq();\n  }\n  else {\n    uVar1 = HAL_RCC_GetPCLK1Freq();\n    iVar4 = (int)(((ulonglong)(uVar1 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) / 100);\n    uVar1 = HAL_RCC_GetPCLK1Freq();\n    uVar5 = (huart->Init).BaudRate;\n    uVar2 = HAL_RCC_GetPCLK1Freq();\n    iVar6 = (uVar1 * 0x19) / (uVar5 << 2) +\n            (int)(((ulonglong)(uVar2 * 0x19) / (ulonglong)((huart->Init).BaudRate << 2)) / 100) *\n            -100;\n    uVar1 = HAL_RCC_GetPCLK1Freq();\n    uVar3 = (uVar1 * 0x19) / ((huart->Init).BaudRate << 2);\n    uVar1 = HAL_RCC_GetPCLK1Freq();\n  }\n  pUVar7->BRR = (((uVar3 + (int)(((ulonglong)(uVar1 * 0x19) /\n                                 (ulonglong)((huart->Init).BaudRate << 2)) / 100) * -100) * 0x10 +\n                 0x32) / 100 & 0xf | (iVar6 * 0x10 + 0x32U) / 100 & 0xf0) + iVar4 * 0x10;\n  return;\n}\n\n", 
            "called": [
                "HAL_RCC_GetPCLK2Freq", 
                "HAL_RCC_GetPCLK1Freq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080025e8", 
            "calling": [
                "HAL_UART_Init"
            ], 
            "imported": false, 
            "current_name": "UART_SetConfig"
        }, 
        "Motor_StopAll": {
            "renaming": {}, 
            "code": "\nvoid Motor_StopAll(void)\n\n{\n  Motor1_SetPWM(0);\n  Motor2_SetPWM(0);\n  Motor3_SetPWM(0);\n  Motor4_SetPWM(0);\n  return;\n}\n\n", 
            "called": [
                "Motor2_SetPWM", 
                "Motor1_SetPWM", 
                "Motor3_SetPWM", 
                "Motor4_SetPWM"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080041c4", 
            "calling": [
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "Motor_StopAll"
        }, 
        "__aeabi_dcmpge": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmpge(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cdrcmple"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009dc", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_dcmpge"
        }, 
        "HAL_RCC_ClockConfig": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef *RCC_ClkInitStruct,uint32_t FLatency)\n\n{\n  char cVar1;\n  char cVar2;\n  uint *puVar3;\n  uint32_t uVar4;\n  uint32_t uVar5;\n  uint uVar6;\n  uint uVar7;\n  \n  puVar3 = DAT_08002204;\n  if ((FLatency <= (*DAT_08002204 & 7)) ||\n     (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | FLatency, FLatency == (*puVar3 & 7))) {\n    uVar5 = RCC_ClkInitStruct->ClockType;\n    if ((int)(uVar5 << 0x1e) < 0) {\n      DAT_08002208[1] = DAT_08002208[1] & 0xffffff0f | RCC_ClkInitStruct->AHBCLKDivider;\n    }\n    puVar3 = DAT_08002208;\n    if (-1 < (int)(uVar5 << 0x1f)) {\nLAB_080020ba:\n      puVar3 = DAT_08002204;\n      if ((FLatency < (*DAT_08002204 & 7)) &&\n         (*DAT_08002204 = *DAT_08002204 & 0xfffffff8 | FLatency, FLatency != (*puVar3 & 7))) {\n        return HAL_ERROR;\n      }\n      puVar3 = DAT_08002208;\n      uVar6 = RCC_ClkInitStruct->ClockType;\n      if ((uVar6 & 4) != 0) {\n        DAT_08002208[1] = DAT_08002208[1] & 0xfffff8ff | RCC_ClkInitStruct->APB1CLKDivider;\n      }\n      if ((int)(uVar6 << 0x1c) < 0) {\n        puVar3[1] = puVar3[1] & 0xffffc7ff | RCC_ClkInitStruct->APB2CLKDivider << 3;\n      }\n      uVar5 = HAL_RCC_GetSysClockFreq();\n      uVar6 = count_leading_zeroes(0xf000000);\n      *(uint32_t *)PTR_SystemCoreClock_08002210 =\n           uVar5 >> PTR_AHBPrescTable_0800220c[(puVar3[1] & 0xf0) >> (uVar6 & 0xff)];\n      HAL_InitTick(0);\n      return HAL_OK;\n    }\n    uVar6 = RCC_ClkInitStruct->SYSCLKSource;\n    if (uVar6 == 1) {\n      cVar2 = '\\x01';\n      cVar1 = '\\0';\n    }\n    else {\n      if (uVar6 == 2) goto LAB_08002176;\n      cVar2 = '\\0';\n      cVar1 = '\\x01';\n    }\n    uVar7 = count_leading_zeroes((uint)(byte)(cVar1 << 6) << 0x18 | (uint)(byte)(cVar2 << 6) << 8);\n    if ((int)((*DAT_08002208 >> (uVar7 & 0x1f)) << 0x1f) < 0) {\nLAB_08002176:\n      DAT_08002208[1] = DAT_08002208[1] & 0xfffffffc | uVar6;\n      uVar5 = HAL_GetTick();\n      if (RCC_ClkInitStruct->SYSCLKSource == 1) {\n        do {\n          if ((puVar3[1] & 0xc) == 4) goto LAB_080020ba;\n          uVar4 = HAL_GetTick();\n        } while (uVar4 - uVar5 < 0x1389);\n      }\n      else if (RCC_ClkInitStruct->SYSCLKSource == 2) {\n        do {\n          if ((puVar3[1] & 0xc) == 8) goto LAB_080020ba;\n          uVar4 = HAL_GetTick();\n        } while (uVar4 - uVar5 < 0x1389);\n      }\n      else {\n        do {\n          if ((puVar3[1] & 0xc) == 0) goto LAB_080020ba;\n          uVar4 = HAL_GetTick();\n        } while (uVar4 - uVar5 < 0x1389);\n      }\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_InitTick", 
                "HAL_GetTick", 
                "HAL_RCC_GetSysClockFreq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800209c", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_ClockConfig"
        }, 
        "MadgwickSetBeta": {
            "renaming": {}, 
            "code": "\nvoid MadgwickSetBeta(float _beta)\n\n{\n  undefined4 in_r0;\n  \n  *(undefined4 *)PTR_beta_0800331c = in_r0;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003314", 
            "calling": [
                "IMU_Init"
            ], 
            "imported": false, 
            "current_name": "MadgwickSetBeta"
        }, 
        "__malloc_unlock": {
            "renaming": {}, 
            "code": "\nvoid __malloc_unlock(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800583e", 
            "calling": [
                "_free_r", 
                "_malloc_r"
            ], 
            "imported": false, 
            "current_name": "__malloc_unlock"
        }, 
        "setup": {
            "renaming": {}, 
            "code": "\nvoid setup(void)\n\n{\n  Devices_Init();\n  serialBegin();\n  IMU_Init();\n  MS5611_Init();\n  PID_Init();\n  return;\n}\n\n", 
            "called": [
                "Devices_Init", 
                "PID_Init", 
                "MS5611_Init", 
                "serialBegin", 
                "IMU_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004194", 
            "calling": [
                "main"
            ], 
            "imported": false, 
            "current_name": "setup"
        }, 
        "USART1_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid USART1_IRQHandler(void)\n\n{\n  HAL_UART_IRQHandler((UART_HandleTypeDef *)PTR_huart1_08004f0c);\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_IRQHandler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f04", 
            "calling": [], 
            "imported": false, 
            "current_name": "USART1_IRQHandler"
        }, 
        "asin": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080058d4) */\n\ndouble asin(double __x)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  double dVar4;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  int in_stack_ffffffb8;\n  char *in_stack_ffffffbc;\n  \n  dVar4 = (double)__ieee754_asin();\n  puVar1 = PTR___fdlib_version_080058f8;\n  if ((*PTR___fdlib_version_080058f8 != -1) &&\n     (iVar2 = __unorddf2(), dVar4 = extraout_d0, iVar2 == 0)) {\n    fabs((double)CONCAT44(in_stack_ffffffbc,in_stack_ffffffb8));\n    iVar2 = __aeabi_dcmpgt();\n    dVar4 = extraout_d0_00;\n    if ((iVar2 != 0) &&\n       ((nan(PTR_DAT_080058f4), *puVar1 == '\\x02' ||\n        (iVar2 = matherr((exception *)&stack0xffffffb8), dVar4 = extraout_d0_02, iVar2 == 0)))) {\n      puVar3 = (undefined4 *)__errno();\n      *puVar3 = 0x21;\n      dVar4 = extraout_d0_01;\n    }\n  }\n  return dVar4;\n}\n\n", 
            "called": [
                "__unorddf2", 
                "__ieee754_asin", 
                "__errno", 
                "matherr", 
                "nan", 
                "__aeabi_dcmpgt", 
                "fabs"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005854", 
            "calling": [
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "asin"
        }, 
        "I2C_WriteByte": {
            "renaming": {}, 
            "code": "\nvoid I2C_WriteByte(uint16_t device_add,uint16_t register_add,uint8_t register_val,uint8_t delay_mode\n                  )\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint8_t byte [1];\n  \n  byte[0] = register_val;\n  HVar1 = HAL_I2C_Mem_Write((I2C_HandleTypeDef *)PTR_hi2c1_08004074,device_add,register_add,1,byte,1\n                            ,200);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(PTR_s____Src_i2c_c_08004078,0x1b);\n  }\n  if (delay_mode != '\\0') {\n    delay_ms(0x32);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_I2C_Mem_Write", 
                "_Error_Handler", 
                "delay_ms"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800403c", 
            "calling": [
                "MS5611_Update", 
                "MPU9250_Init", 
                "MS5611_Init", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "I2C_WriteByte"
        }, 
        "__divdf3": {
            "renaming": {}, 
            "code": "\nulonglong __divdf3(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n", 
            "called": [
                "FUN_08000892"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000724", 
            "calling": [
                "__ieee754_asin", 
                "__ieee754_sqrt", 
                "pow", 
                "MadgwickQuaternionUpdate", 
                "__ieee754_atan2", 
                "atan", 
                "sqrt", 
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__divdf3"
        }, 
        "siprintf": {
            "renaming": {}, 
            "code": "\nint siprintf(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  undefined4 in_r2;\n  undefined4 in_r3;\n  char *local_78 [2];\n  undefined4 local_70;\n  undefined2 local_6c;\n  undefined2 local_6a;\n  char *local_68;\n  undefined4 local_64;\n  char *pcStack_c;\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  local_6c = 0x208;\n  local_70 = 0x7fffffff;\n  local_64 = 0x7fffffff;\n  local_6a = 0xffff;\n  local_78[0] = __s;\n  local_68 = __s;\n  pcStack_c = __format;\n  uStack_8 = in_r2;\n  uStack_4 = in_r3;\n  iVar1 = _svfiprintf_r(*(undefined4 *)PTR__impure_ptr_08005040,local_78,__format);\n  *local_78[0] = '\\0';\n  return iVar1;\n}\n\n", 
            "called": [
                "_svfiprintf_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ffc", 
            "calling": [
                "serialInt"
            ], 
            "imported": false, 
            "current_name": "siprintf"
        }, 
        "TIM_OC2_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC2_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  \n  TIMx->CCER = TIMx->CCER & 0xffffffef;\n  uVar2 = TIMx->CR2;\n  uVar3 = OC_Config->OCMode;\n  uVar1 = TIMx->CCER & 0xffffffdf | OC_Config->OCPolarity << 4;\n  if (TIMx == DAT_08002458) {\n    uVar1 = (uVar1 & 0xffffff7f | OC_Config->OCNPolarity << 4) & 0xffffffbf;\n    uVar2 = uVar2 & 0xfffff3ff | (OC_Config->OCIdleState | OC_Config->OCNIdleState) << 2;\n  }\n  TIMx->CR2 = uVar2;\n  TIMx->CCMR1 = TIMx->CCMR1 & 0xffff8cff | uVar3 << 8;\n  TIMx->CCR2 = OC_Config->Pulse;\n  TIMx->CCER = uVar1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002404", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC2_SetConfig"
        }, 
        "__floatunsidf": {
            "renaming": {}, 
            "code": "\nulonglong __floatunsidf(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint in_r12;\n  bool bVar5;\n  bool bVar6;\n  bool bVar7;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar1 = 0;\n  iVar3 = count_leading_zeroes(param_1);\n  uVar4 = iVar3 + 0x15;\n  bVar7 = SBORROW4(uVar4,0x20);\n  uVar2 = iVar3 - 0xb;\n  bVar5 = (int)uVar2 < 0;\n  bVar6 = uVar2 == 0;\n  if ((int)uVar4 < 0x20) {\n    bVar7 = SCARRY4(uVar2,0xc);\n    iVar3 = iVar3 + 1;\n    bVar5 = iVar3 < 0;\n    bVar6 = iVar3 == 0;\n    uVar2 = uVar4;\n    if (!bVar6 && bVar5 == bVar7) {\n      uVar1 = param_1 << (uVar4 & 0xff);\n      param_1 = param_1 >> (0xcU - iVar3 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar6 || bVar5 != bVar7) {\n    in_r12 = 0x20 - uVar2;\n  }\n  param_1 = param_1 << (uVar2 & 0xff);\n  if (bVar6 || bVar5 != bVar7) {\n    param_1 = param_1 | 0U >> (in_r12 & 0xff);\n  }\n  if (bVar6 || bVar5 != bVar7) {\n    uVar1 = 0 << (uVar2 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar4 < 0x433) {\n    return CONCAT44(param_1 + (0x432 - uVar4) * 0x100000,uVar1);\n  }\n  uVar2 = ~(0x432 - uVar4);\n  if (0x1e < (int)uVar2) {\n    return (ulonglong)(param_1 >> (uVar2 - 0x1f & 0xff));\n  }\n  iVar3 = uVar2 - 0x13;\n  if (iVar3 == 0 || iVar3 < 0 != SCARRY4(uVar2 - 0x1f,0xc)) {\n    uVar2 = uVar2 + 1;\n    return CONCAT44(param_1 >> (uVar2 & 0xff),\n                    uVar1 >> (uVar2 & 0xff) | param_1 << (0x20 - uVar2 & 0xff));\n  }\n  return (ulonglong)(uVar1 >> (0x20 - (0xcU - iVar3) & 0xff) | param_1 << (0xcU - iVar3 & 0xff));\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080003e4", 
            "calling": [], 
            "imported": false, 
            "current_name": "__floatunsidf"
        }, 
        "_printf_common": {
            "renaming": {}, 
            "code": "\nundefined4\n_printf_common(undefined4 param_1,uint *param_2,uint *param_3,undefined4 param_4,code *param_5)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  bool bVar4;\n  \n  uVar2 = param_2[4];\n  if ((int)param_2[4] < (int)param_2[2]) {\n    uVar2 = param_2[2];\n  }\n  *param_3 = uVar2;\n  if (*(char *)((int)param_2 + 0x43) != '\\0') {\n    *param_3 = uVar2 + 1;\n  }\n  if ((int)(*param_2 << 0x1a) < 0) {\n    *param_3 = *param_3 + 2;\n  }\n  uVar2 = *param_2 & 6;\n  if (uVar2 == 0) {\n    for (; (int)uVar2 < (int)(param_2[3] - *param_3); uVar2 = uVar2 + 1) {\n      iVar1 = (*param_5)(param_1,param_4,(int)param_2 + 0x19,1);\n      if (iVar1 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar2 = (uint)*(byte *)((int)param_2 + 0x43);\n  if (uVar2 != 0) {\n    uVar2 = 1;\n  }\n  uVar3 = uVar2;\n  if ((int)(*param_2 << 0x1a) < 0) {\n    *(undefined *)((int)param_2 + uVar2 + 0x43) = 0x30;\n    uVar3 = uVar2 + 2;\n    *(undefined *)((int)param_2 + uVar2 + 0x44) = *(undefined *)((int)param_2 + 0x45);\n  }\n  iVar1 = (*param_5)(param_1,param_4,(int)param_2 + 0x43,uVar3);\n  if (iVar1 != -1) {\n    uVar2 = param_2[3];\n    bVar4 = (*param_2 & 6) != 4;\n    if (bVar4) {\n      uVar2 = 0;\n    }\n    uVar3 = 0;\n    if (!bVar4) {\n      uVar2 = uVar2 - *param_3;\n    }\n    if (!bVar4) {\n      uVar2 = uVar2 & ~((int)uVar2 >> 0x1f);\n    }\n    if ((int)param_2[4] < (int)param_2[2]) {\n      uVar2 = uVar2 + (param_2[2] - param_2[4]);\n    }\n    while( true ) {\n      if (uVar2 == uVar3) {\n        return 0;\n      }\n      iVar1 = (*param_5)(param_1,param_4,(int)param_2 + 0x1a,1);\n      if (iVar1 == -1) break;\n      uVar3 = uVar3 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080052e4", 
            "calling": [
                "_printf_i"
            ], 
            "imported": false, 
            "current_name": "_printf_common"
        }, 
        "__gedf2": {
            "renaming": {}, 
            "code": "\nuint __gedf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 0xffffffff;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080008f4", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gedf2"
        }, 
        "sqrt": {
            "renaming": {}, 
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\ndouble sqrt(double __x)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  double dVar5;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  double extraout_d0_03;\n  undefined local_50 [24];\n  undefined8 local_38;\n  int local_30;\n  \n  dVar5 = (double)__ieee754_sqrt();\n  cVar1 = *PTR___fdlib_version_08005c68;\n  if (cVar1 == -1) {\n    return dVar5;\n  }\n  local_30 = __unorddf2();\n  if (local_30 != 0) {\n    return extraout_d0;\n  }\n  iVar2 = __aeabi_dcmplt();\n  if (iVar2 == 0) {\n    return extraout_d0_00;\n  }\n  local_50._0_4_ = 1;\n  local_50._4_4_ = PTR_DAT_08005c6c;\n  if (cVar1 == '\\0') {\n    local_38 = 0.0;\nLAB_08005c26:\n    iVar2 = matherr((exception *)local_50);\n    dVar5 = extraout_d0_01;\n    if (iVar2 != 0) goto LAB_08005c2e;\n  }\n  else {\n    local_38 = (double)__divdf3(0,0,0,0);\n    if (cVar1 != '\\x02') goto LAB_08005c26;\n  }\n  puVar4 = (undefined4 *)__errno();\n  *puVar4 = 0x21;\n  dVar5 = extraout_d0_03;\nLAB_08005c2e:\n  if (local_30 != 0) {\n    piVar3 = (int *)__errno();\n    *piVar3 = local_30;\n    dVar5 = extraout_d0_02;\n  }\n  return dVar5;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__unorddf2", 
                "__ieee754_sqrt", 
                "__errno", 
                "matherr", 
                "__aeabi_dcmplt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005bc8", 
            "calling": [
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "sqrt"
        }, 
        "nan": {
            "renaming": {}, 
            "code": "\ndouble nan(char *__tagb)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080070a4", 
            "calling": [
                "__ieee754_pow", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "nan"
        }, 
        "atan2": {
            "renaming": {}, 
            "code": "\nundefined8 atan2(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  undefined4 uVar1;\n  undefined4 extraout_r1;\n  int extraout_r1_00;\n  undefined4 unaff_r4;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  \n  uVar7 = CONCAT44(DAT_08006204,DAT_08006200);\n  uVar6 = param_4 & 0x7fffffff;\n  if ((DAT_08006220 < (uVar6 | (-param_3 | param_3) >> 0x1f)) ||\n     (uVar4 = param_2 & 0x7fffffff, DAT_08006220 < (uVar4 | (-param_1 | param_1) >> 0x1f))) {\n    uVar7 = __aeabi_dadd(param_1,param_2);\n    return uVar7;\n  }\n  if ((param_4 + 0xc0100000 | param_3) == 0) {\n    atan(param_5);\n    return CONCAT44(extraout_r1,param_1);\n  }\n  uVar3 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n  if ((param_1 | uVar4) == 0) {\n    if (uVar3 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (uVar3 != 3) {\n      return CONCAT44(param_2,param_1);\n    }\n  }\n  else {\n    if ((param_3 | uVar6) != 0) {\n      if (uVar6 == DAT_08006220) {\n        if (uVar4 == uVar6) {\n          if (uVar3 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (uVar3 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (uVar3 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (uVar3 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (uVar3 == 3) {\n          return uVar7;\n        }\n        if (uVar3 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (uVar4 != DAT_08006220) {\n        iVar5 = (int)(uVar4 - uVar6) >> 0x14;\n        uVar1 = DAT_08006210;\n        iVar2 = DAT_08006214;\n        if (iVar5 < 0x3d) {\n          if (((int)param_4 < 0) && (iVar5 + 0x3c < 0 != SCARRY4(iVar5,0x3c))) {\n            uVar1 = 0;\n            iVar2 = 0;\n          }\n          else {\n            uVar1 = __divdf3(param_1,param_2);\n            fabs((double)CONCAT44(unaff_r4,param_4));\n            atan((double)CONCAT44(unaff_r4,param_4));\n            iVar2 = extraout_r1_00;\n          }\n        }\n        if (uVar3 != 1) {\n          if (uVar3 == 2) {\n            uVar8 = __subdf3(uVar1,iVar2,DAT_08006208,DAT_0800620c);\n            uVar7 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (uVar3 == 0) {\n              return CONCAT44(iVar2,uVar1);\n            }\n            uVar7 = __subdf3(uVar1,iVar2,DAT_08006208,DAT_0800620c);\n            uVar8 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          uVar7 = __subdf3((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),(int)uVar8,\n                           (int)((ulonglong)uVar8 >> 0x20));\n          return uVar7;\n        }\n        return CONCAT44(iVar2 + -0x80000000,uVar1);\n      }\n    }\n    uVar7 = CONCAT44(DAT_08006214,DAT_08006210);\n    if ((int)param_2 < 0) {\n      uVar7 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return uVar7;\n}\n\n", 
            "called": [
                "__ieee754_atan2"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080058fc", 
            "calling": [
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "atan2"
        }, 
        "HAL_SYSTICK_Config": {
            "renaming": {}, 
            "code": "\nuint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  \n  iVar2 = DAT_0800123c;\n  puVar1 = DAT_08001238;\n  if (TicksNumb - 1 < 0x1000000) {\n    DAT_08001238[1] = TicksNumb - 1;\n    *(undefined *)(iVar2 + 0x23) = 0xf0;\n    puVar1[2] = 0;\n    *puVar1 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001214", 
            "calling": [
                "SystemClock_Config", 
                "HAL_InitTick"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_Config"
        }, 
        "MS5611_GetFilteredAltitude": {
            "renaming": {}, 
            "code": "\nfloat MS5611_GetFilteredAltitude(void)\n\n{\n  float in_s0;\n  \n  return in_s0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003068", 
            "calling": [
                "PID_UpdateAltitude"
            ], 
            "imported": false, 
            "current_name": "MS5611_GetFilteredAltitude"
        }, 
        "PID_Update": {
            "renaming": {}, 
            "code": "\nvoid PID_Update(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  undefined uVar6;\n  undefined4 in_r0;\n  int iVar7;\n  undefined4 uVar8;\n  float extraout_s0;\n  float extraout_s0_00;\n  float throttle;\n  float extraout_s1;\n  float extraout_s1_00;\n  float pitch;\n  float extraout_s2;\n  float extraout_s2_00;\n  float roll;\n  float extraout_s3;\n  float extraout_s3_00;\n  float yaw;\n  \n  AHRS_GetPitch();\n  puVar2 = PTR_pid_roll_08004bf4;\n  puVar1 = PTR_pid_pitch_08004bf0;\n  *(undefined4 *)(PTR_pid_pitch_08004bf0 + 0x30) = in_r0;\n  AHRS_GetRoll();\n  *(undefined4 *)(puVar2 + 0x30) = in_r0;\n  AHRS_GetYaw();\n  puVar3 = PTR_pid_yaw_08004bf8;\n  *(undefined4 *)(PTR_pid_yaw_08004bf8 + 0x30) = in_r0;\n  PID_UpdateAltitude();\n  iVar7 = __aeabi_fcmpgt(*(undefined4 *)(puVar1 + 0x30),0);\n  if (iVar7 == 0) {\n    iVar7 = __aeabi_fcmplt(*(undefined4 *)(puVar1 + 0x30),DAT_08004c00);\n  }\n  else {\n    iVar7 = __aeabi_fcmpgt(*(undefined4 *)(puVar1 + 0x30),DAT_08004bfc);\n  }\n  if (iVar7 == 0) {\n    iVar7 = __aeabi_fcmpgt(*(undefined4 *)(puVar2 + 0x30),0);\n    if (iVar7 == 0) {\n      iVar7 = __aeabi_fcmplt(*(undefined4 *)(puVar2 + 0x30),DAT_08004c00);\n    }\n    else {\n      iVar7 = __aeabi_fcmpgt(*(undefined4 *)(puVar2 + 0x30),DAT_08004bfc);\n    }\n    if (iVar7 == 0) {\n      toggleLED(1,1,1);\n      PID_Compute((PID_TypeDef *)PTR_pid_pitch_08004bf0);\n      puVar4 = PTR_joystick_08004c04;\n      PID_Compute((PID_TypeDef *)PTR_pid_roll_08004bf4);\n      PID_Compute((PID_TypeDef *)PTR_pid_yaw_08004bf8);\n      puVar5 = PTR_pid_altitude_08004c08;\n      throttle = extraout_s0;\n      pitch = extraout_s1;\n      roll = extraout_s2;\n      yaw = extraout_s3;\n      if (puVar4[1] != '\\0') {\n        PID_Compute((PID_TypeDef *)PTR_pid_altitude_08004c08);\n        uVar8 = __addsf3(*(undefined4 *)(puVar5 + 0x48),DAT_08004c0c);\n        *(undefined4 *)(puVar5 + 0x48) = uVar8;\n        throttle = extraout_s0_00;\n        pitch = extraout_s1_00;\n        roll = extraout_s2_00;\n        yaw = extraout_s3_00;\n      }\n      *(undefined4 *)(puVar5 + 0x48) = *(undefined4 *)(puVar4 + 4);\n      if (*puVar4 == '\\0') {\n        Motor_StopAll();\n      }\n      else {\n        Motor_DistributeSpeed(throttle,pitch,roll,yaw);\n      }\n      __aeabi_fmul(*(undefined4 *)(puVar1 + 4),DAT_08004c10);\n      uVar6 = __fixunssfsi();\n      puVar4 = PTR_msp_txf_pid_08004c14;\n      uVar8 = DAT_08004c10;\n      PTR_msp_txf_pid_08004c14[3] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar1 + 8),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[4] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar2 + 4),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      *puVar4 = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar2 + 8),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[1] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar2 + 0xc),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[2] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar3 + 4),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[6] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar3 + 8),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[7] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar3 + 0xc),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[8] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar5 + 4),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[9] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar5 + 8),uVar8);\n      uVar6 = __fixunssfsi();\n      uVar8 = DAT_08004c10;\n      puVar4[10] = uVar6;\n      __aeabi_fmul(*(undefined4 *)(puVar5 + 0xc),uVar8);\n      uVar6 = __fixunssfsi();\n      puVar4[0xb] = uVar6;\n      return;\n    }\n  }\n  Motor_StopAll();\n  toggleLED(0,1,0);\n  return;\n}\n\n", 
            "called": [
                "AHRS_GetYaw", 
                "PID_Compute", 
                "AHRS_GetRoll", 
                "__fixunssfsi", 
                "__aeabi_fcmpgt", 
                "__aeabi_fmul", 
                "PID_UpdateAltitude", 
                "Motor_StopAll", 
                "AHRS_GetPitch", 
                "toggleLED", 
                "Motor_DistributeSpeed", 
                "__addsf3", 
                "__aeabi_fcmplt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004a84", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "PID_Update"
        }, 
        "HAL_UART_RxCpltCallback": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)\n\n{\n  undefined *pData;\n  \n  pData = PTR_rx_buffer_08004c58;\n  if (huart->Instance == DAT_08004c54) {\n    CB_Write((CircularBuffer *)PTR_rxc_08004c5c,*PTR_rx_buffer_08004c58);\n    HAL_UART_Receive_IT((UART_HandleTypeDef *)PTR_huart1_08004c60,pData,1);\n    return;\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_Receive_IT", 
                "CB_Write"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004c30", 
            "calling": [
                "UART_Receive_IT"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_RxCpltCallback"
        }, 
        "_Error_Handler": {
            "renaming": {}, 
            "code": "\nvoid _Error_Handler(char *file,int line)\n\n{\n  GPIO_TypeDef *GPIOx;\n  undefined *data;\n  undefined *data_00;\n  \n  HAL_GPIO_WritePin(DAT_08004508,0x4000,GPIO_PIN_SET);\n  HAL_GPIO_WritePin(DAT_08004508,0x8000,GPIO_PIN_RESET);\n  HAL_GPIO_WritePin(DAT_08004508,0x2000,GPIO_PIN_RESET);\n  data_00 = PTR_s_Error_with_08004510;\n  data = PTR_s__at_line__0800450c;\n  GPIOx = DAT_08004508;\n  do {\n    HAL_GPIO_TogglePin(GPIOx,0x4000);\n    HAL_GPIO_TogglePin(GPIOx,0x8000);\n    HAL_GPIO_TogglePin(GPIOx,0x2000);\n    serialPrint(data_00);\n    serialPrint(file);\n    serialPrint(data);\n    serialInt(line);\n    serialWrite('\\n');\n    delay_ms(500);\n  } while( true );\n}\n\n", 
            "called": [
                "HAL_GPIO_TogglePin", 
                "serialWrite", 
                "HAL_GPIO_WritePin", 
                "delay_ms", 
                "serialInt", 
                "serialPrint"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004490", 
            "calling": [
                "SystemClock_Config", 
                "I2C_ReadBytes", 
                "I2C_WriteByte", 
                "Peripherals_Init", 
                "I2C_ReadByte"
            ], 
            "imported": false, 
            "current_name": "_Error_Handler"
        }, 
        "I2C_WaitOnTXEFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  \n  uVar2 = HAL_GetTick();\n  while( true ) {\n    if ((int)(hi2c->Instance->SR1 << 0x18) < 0) {\n      return HAL_OK;\n    }\n    HVar1 = I2C_IsAcknowledgeFailed(hi2c);\n    if (HVar1 != HAL_OK) break;\n    if ((Timeout != 0xffffffff) &&\n       ((Timeout == 0 || (uVar3 = HAL_GetTick(), Timeout < uVar3 - uVar2)))) {\n      hi2c->ErrorCode = hi2c->ErrorCode | 0x20;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "I2C_IsAcknowledgeFailed", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080014e2", 
            "calling": [
                "HAL_I2C_Mem_Write", 
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnTXEFlagUntilTimeout"
        }, 
        "MSP_SendPID": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendPID(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 *puVar5;\n  undefined4 local_30 [3];\n  undefined2 local_24 [10];\n  \n  puVar1 = local_30;\n  puVar5 = (undefined4 *)PTR_msp_txf_pid_0800448c;\n  do {\n    puVar4 = puVar5;\n    puVar3 = puVar1;\n    uVar2 = puVar4[1];\n    puVar5 = puVar4 + 2;\n    *puVar3 = *puVar4;\n    puVar3[1] = uVar2;\n    puVar1 = puVar3 + 2;\n  } while (puVar5 != (undefined4 *)(PTR_msp_txf_pid_0800448c + 0x18));\n  puVar3[2] = *puVar5;\n  *(undefined2 *)(puVar3 + 3) = *(undefined2 *)(puVar4 + 3);\n  MSP_SendFrame('p',(uint8_t *)local_30,0x1e);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004458", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendPID"
        }, 
        "SysTick_Handler": {
            "renaming": {}, 
            "code": "\nvoid SysTick_Handler(void)\n\n{\n  HAL_IncTick();\n  HAL_SYSTICK_IRQHandler();\n  return;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_IRQHandler", 
                "HAL_IncTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ef4", 
            "calling": [], 
            "imported": false, 
            "current_name": "SysTick_Handler"
        }, 
        "__muldf3": {
            "renaming": {}, 
            "code": "\nulonglong __muldf3(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n", 
            "called": [
                "FUN_080006ac"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080004d0", 
            "calling": [
                "MS5611_Update", 
                "scalbn", 
                "__ieee754_asin", 
                "__ieee754_sqrt", 
                "pow", 
                "MadgwickQuaternionUpdate", 
                "atan", 
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__muldf3"
        }, 
        "CB_Init": {
            "renaming": {}, 
            "code": "\nvoid CB_Init(CircularBuffer *cb)\n\n{\n  int iVar1;\n  \n  iVar1 = 0;\n  cb->head = 0;\n  cb->tail = 0;\n  cb->size = 0;\n  do {\n    cb->buffer[iVar1] = '\\0';\n    iVar1 = iVar1 + 1;\n  } while (iVar1 != 0x800);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003ef2", 
            "calling": [
                "serialFlush"
            ], 
            "imported": false, 
            "current_name": "CB_Init"
        }, 
        "I2C_ReadByte": {
            "renaming": {}, 
            "code": "\nuint8_t I2C_ReadByte(uint16_t device_add,uint16_t register_add,char *file,int line)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint8_t byte [1];\n  \n  byte[0] = '\\0';\n  HVar1 = HAL_I2C_Mem_Read((I2C_HandleTypeDef *)PTR_hi2c1_080040b4,device_add,register_add,1,byte,1,\n                           200);\n  if (HVar1 != HAL_OK) {\n    _Error_Handler(file,line);\n  }\n  return byte[0];\n}\n\n", 
            "called": [
                "_Error_Handler", 
                "HAL_I2C_Mem_Read"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800407c", 
            "calling": [
                "MPU9250_Init", 
                "AK8963_ReadData", 
                "I2C_ReadByteArray", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "I2C_ReadByte"
        }, 
        "TIM_OC1_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC1_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  \n  TIMx->CCER = TIMx->CCER & 0xfffffffe;\n  uVar2 = TIMx->CR2;\n  uVar3 = OC_Config->OCMode;\n  uVar1 = TIMx->CCER & 0xfffffffd | OC_Config->OCPolarity;\n  if (TIMx == DAT_080022cc) {\n    uVar1 = (uVar1 & 0xfffffff7 | OC_Config->OCNPolarity) & 0xfffffffb;\n    uVar2 = uVar2 & 0xfffffcff | OC_Config->OCIdleState | OC_Config->OCNIdleState;\n  }\n  TIMx->CR2 = uVar2;\n  TIMx->CCMR1 = TIMx->CCMR1 & 0xffffff8c | uVar3;\n  TIMx->CCR1 = OC_Config->Pulse;\n  TIMx->CCER = uVar1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002280", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC1_SetConfig"
        }, 
        "__nedf2": {
            "renaming": {}, 
            "code": "\nuint __nedf2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 << 1) >> 0x15 == -1 || (int)(param_4 << 1) >> 0x15 == -1) &&\n     ((((int)(param_2 << 1) >> 0x15 == -1 && ((param_1 | param_2 << 0xc) != 0)) ||\n      (((int)(param_4 << 1) >> 0x15 == -1 && ((param_3 | param_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  bVar2 = (param_1 | param_2 << 1) == 0;\n  if (bVar2) {\n    bVar2 = (param_3 | param_4 << 1) == 0;\n  }\n  if (!bVar2) {\n    bVar2 = param_2 == param_4;\n  }\n  if (bVar2) {\n    bVar2 = param_1 == param_3;\n  }\n  if (!bVar2) {\n    uVar1 = param_2 ^ param_4;\n    bVar2 = uVar1 == 0;\n    if (-1 < (int)uVar1) {\n      bVar2 = param_2 == param_4;\n    }\n    bVar3 = -1 < (int)uVar1 && param_4 <= param_2;\n    if (bVar2) {\n      bVar3 = param_3 <= param_1;\n    }\n    param_4 = (int)param_4 >> 0x1f;\n    if (!bVar3) {\n      param_4 = ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000904", 
            "calling": [
                "__aeabi_cdcmpeq"
            ], 
            "imported": false, 
            "current_name": "__nedf2"
        }, 
        "__truncdfsf2": {
            "renaming": {}, 
            "code": "\nuint __truncdfsf2(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  bool bVar5;\n  \n  uVar2 = param_2 * 2;\n  bVar5 = uVar2 < 0x70000000;\n  uVar3 = uVar2 + 0x90000000;\n  uVar1 = uVar3;\n  if (!bVar5) {\n    in_r12 = uVar2 + 0x8fe00000;\n    uVar1 = in_r12;\n  }\n  bVar4 = uVar1 == 0;\n  if (!bVar5 && uVar3 >= 0x200000) {\n    bVar4 = in_r12 == 0x1fc00000;\n  }\n  if (((bVar5 || uVar3 < 0x200000) || 0x1fc00000 < in_r12) || bVar4) {\n    if ((param_2 & 0x40000000) != 0) {\n      if (((int)uVar2 >> 0x15 == -1) && ((param_1 | param_2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return param_2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(uVar2 + 0x92e00000) < 0 != SCARRY4(uVar3,0x2e00000)) {\n      return param_2 & 0x80000000;\n    }\n    uVar2 = 0x18 - (uVar2 + 0x92e00000 >> 0x15);\n    uVar1 = param_1 >> (uVar2 & 0xff);\n    if (param_1 << (0x20 - uVar2 & 0xff) != 0) {\n      uVar1 = uVar1 | 1;\n    }\n    uVar3 = param_2 & 0x1fffff | 0x100000;\n    param_1 = uVar1 | uVar3 << (0x20 - uVar2 & 0xff);\n    uVar3 = (uVar3 >> (uVar2 & 0xff)) << 1;\n  }\n  uVar1 = (param_2 & 0x80000000 | param_1 >> 0x1d) + uVar3 * 4 + (uint)(0x7fffffff < param_1 * 8);\n  if (param_1 * 8 == 0x80000000) {\n    uVar1 = uVar1 & 0xfffffffe;\n  }\n  return uVar1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000a30", 
            "calling": [
                "MS5611_Update", 
                "MadgwickQuaternionUpdate"
            ], 
            "imported": false, 
            "current_name": "__truncdfsf2"
        }, 
        "PID_UpdateAltitude": {
            "renaming": {}, 
            "code": "\nvoid PID_UpdateAltitude(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined4 uVar4;\n  \n  puVar3 = PTR_pid_altitude_08004a7c;\n  puVar2 = PTR_ALT_FLAG_08004a78;\n  puVar1 = PTR_joystick_08004a74;\n  if (PTR_joystick_08004a74[1] != '\\0') {\n    if (*PTR_ALT_FLAG_08004a78 == '\\0') {\n      MS5611_GetFilteredAltitude();\n      uVar4 = __aeabi_fmul();\n      *(undefined4 *)(puVar3 + 0x1c) = uVar4;\n      *puVar2 = 1;\n    }\n    else {\n      MS5611_GetFilteredAltitude();\n      uVar4 = __aeabi_fmul();\n      *(undefined4 *)(puVar3 + 0x30) = uVar4;\n    }\n  }\n  if (puVar1[1] == '\\0') {\n    if (*PTR_ALT_FLAG_08004a78 != '\\0') {\n      *PTR_ALT_FLAG_08004a78 = 0;\n    }\n    *(undefined4 *)(PTR_pid_altitude_08004a7c + 0x48) = *(undefined4 *)(puVar1 + 4);\n  }\n  return;\n}\n\n", 
            "called": [
                "MS5611_GetFilteredAltitude", 
                "__aeabi_fmul"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004a30", 
            "calling": [
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "PID_UpdateAltitude"
        }, 
        "HAL_UART_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)\n\n{\n  USART_TypeDef *pUVar1;\n  \n  if (huart != (UART_HandleTypeDef *)0x0) {\n    if (huart->State == HAL_UART_STATE_RESET) {\n      huart->Lock = HAL_UNLOCKED;\n      HAL_UART_MspInit(huart);\n    }\n    huart->State = HAL_UART_STATE_BUSY;\n    huart->Instance->CR1 = huart->Instance->CR1 & 0xffffdfff;\n    UART_SetConfig(huart);\n    pUVar1 = huart->Instance;\n    pUVar1->CR2 = pUVar1->CR2 & 0xffffb7ff;\n    pUVar1->CR3 = pUVar1->CR3 & 0xffffffd5;\n    pUVar1->CR1 = pUVar1->CR1 | 0x2000;\n    huart->ErrorCode = 0;\n    huart->State = HAL_UART_STATE_READY;\n    return HAL_OK;\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_UART_MspInit", 
                "UART_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002724", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_Init"
        }, 
        "delay_ms": {
            "renaming": {}, 
            "code": "\nvoid delay_ms(uint32_t Delay)\n\n{\n  return;\n}\n\n", 
            "called": [
                "HAL_Delay"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f64", 
            "calling": [
                "_Error_Handler", 
                "MS5611_Init", 
                "I2C_WriteByte", 
                "LED_StartupSequence"
            ], 
            "imported": false, 
            "current_name": "delay_ms"
        }, 
        "TIM_Base_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_Base_SetConfig(TIM_TypeDef *TIMx,TIM_Base_InitTypeDef *Structure)\n\n{\n  uint32_t uVar1;\n  TIM_TypeDef *pTVar2;\n  \n  uVar1 = TIMx->CR1;\n  if ((((TIMx == DAT_080023cc) || (TIMx == (TIM_TypeDef *)0x40000000)) ||\n      (TIMx == (TIM_TypeDef *)&DAT_080023cc[-0x387].DMAR)) ||\n     (TIMx == (TIM_TypeDef *)&DAT_080023cc[-0x37a].SMCR)) {\n    uVar1 = uVar1 & 0xffffff8f | Structure->CounterMode;\n    if (((TIMx == DAT_080023cc) || (TIMx == (TIM_TypeDef *)0x40000000)) ||\n       ((TIMx == (TIM_TypeDef *)&DAT_080023cc[-0x387].DMAR ||\n        (TIMx == (TIM_TypeDef *)&DAT_080023cc[-0x37a].SMCR)))) {\n      uVar1 = uVar1 & 0xfffffcff | Structure->ClockDivision;\n    }\n  }\n  TIMx->CR1 = uVar1;\n  TIMx->ARR = Structure->Period;\n  TIMx->PSC = Structure->Prescaler;\n  pTVar2 = DAT_080023cc;\n  if (TIMx == DAT_080023cc) {\n    pTVar2 = (TIM_TypeDef *)Structure->RepetitionCounter;\n  }\n  if (TIMx == DAT_080023cc) {\n    TIMx->RCR = (uint32_t)pTVar2;\n  }\n  TIMx->EGR = 1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002368", 
            "calling": [
                "HAL_TIM_PWM_Init"
            ], 
            "imported": false, 
            "current_name": "TIM_Base_SetConfig"
        }, 
        "__subdf3": {
            "renaming": {}, 
            "code": "\nulonglong __subdf3(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000168", 
            "calling": [
                "MS5611_Update", 
                "__ieee754_asin", 
                "__ieee754_sqrt", 
                "rint", 
                "__ieee754_atan2", 
                "atan", 
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__subdf3"
        }, 
        "__aeabi_l2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_l2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar5 = param_2 & 0x80000000;\n  if ((int)uVar5 < 0) {\n    bVar8 = param_1 != 0;\n    param_1 = -param_1;\n    param_2 = -param_2 - (uint)bVar8;\n  }\n  uVar2 = param_1;\n  uVar1 = param_2;\n  if (param_2 == 0) {\n    uVar2 = 0;\n    uVar1 = param_1;\n  }\n  uVar5 = uVar5 | 0x5b000000;\n  if (param_2 == 0) {\n    uVar5 = uVar5 + 0xf0000000;\n  }\n  iVar3 = count_leading_zeroes(uVar1);\n  uVar4 = iVar3 - 8;\n  iVar6 = (uVar5 - 0x800000) + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar1 << (iVar3 + 0x18U & 0xff);\n    uVar5 = iVar6 + ((uVar1 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar2 | uVar4 << 1) == 0) {\n      uVar5 = uVar5 & ~(uVar4 >> 0x1f);\n    }\n    return uVar5;\n  }\n  uVar7 = uVar2 << (uVar4 & 0xff);\n  uVar5 = iVar6 + (uVar1 << (uVar4 & 0xff)) +\n          (uVar2 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar7);\n  if (uVar7 == 0x80000000) {\n    uVar5 = uVar5 & 0xfffffffe;\n  }\n  return uVar5;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c70", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_l2f"
        }, 
        "HAL_TIMEx_MasterConfigSynchronization": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIMEx_MasterConfigSynchronization\n          (TIM_HandleTypeDef *htim,TIM_MasterConfigTypeDef *sMasterConfig)\n\n{\n  uint uVar1;\n  HAL_StatusTypeDef HVar2;\n  TIM_TypeDef *pTVar3;\n  uint uVar4;\n  \n  HVar2 = HAL_BUSY;\n  if (htim->Lock != HAL_LOCKED) {\n    htim->State = HAL_TIM_STATE_BUSY;\n    pTVar3 = htim->Instance;\n    uVar4 = sMasterConfig->MasterOutputTrigger;\n    uVar1 = sMasterConfig->MasterSlaveMode;\n    pTVar3->CR2 = pTVar3->CR2 & 0xffffff8f;\n    pTVar3->CR2 = pTVar3->CR2 | uVar4;\n    pTVar3->SMCR = pTVar3->SMCR & 0xffffff7f;\n    pTVar3->SMCR = pTVar3->SMCR | uVar1;\n    htim->State = HAL_TIM_STATE_READY;\n    HVar2 = HAL_OK;\n    htim->Lock = HAL_UNLOCKED;\n  }\n  return HVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080025a4", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIMEx_MasterConfigSynchronization"
        }, 
        "__aeabi_l2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_l2d(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  bool bVar12;\n  \n  if ((param_1 | param_2) == 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  uVar8 = param_2 & 0x80000000;\n  uVar3 = param_2;\n  if ((int)uVar8 < 0) {\n    bVar11 = param_1 != 0;\n    param_1 = -param_1;\n    uVar3 = -param_2 - (uint)bVar11;\n  }\n  iVar7 = 0x432;\n  uVar9 = uVar3 >> 0x16;\n  if (uVar9 != 0) {\n    iVar7 = 3;\n    if (uVar3 >> 0x19 != 0) {\n      iVar7 = 6;\n    }\n    if (uVar3 >> 0x1c != 0) {\n      iVar7 = iVar7 + 3;\n    }\n    uVar4 = iVar7 - ((int)uVar3 >> 0x1f);\n    uVar9 = param_1 << (0x20 - uVar4 & 0xff);\n    param_1 = param_1 >> (uVar4 & 0xff) | uVar3 << (0x20 - uVar4 & 0xff);\n    uVar3 = uVar3 >> (uVar4 & 0xff);\n    iVar7 = uVar4 + 0x432;\n  }\n  if (0xfffff < uVar3) {\n    if (0x1fffff < uVar3) {\n      uVar4 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      bVar1 = (byte)param_1;\n      param_1 = (uint)(uVar4 != 0) << 0x1f | param_1 >> 1;\n      uVar9 = (uint)(bVar1 & 1) << 0x1f | uVar9 >> 1;\n      iVar7 = iVar7 + 1;\n      if (0xffbfffff < (uint)(iVar7 * 0x200000)) {\n        return (ulonglong)(uVar8 | 0x7ff00000) << 0x20;\n      }\n    }\nLAB_08000278:\n    bVar11 = 0x7fffffff < uVar9;\n    if (uVar9 == 0x80000000) {\n      bVar11 = (param_1 & 1) != 0;\n    }\n    return CONCAT44(uVar3 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar11) | uVar8,\n                    param_1 + bVar11);\n  }\n  bVar10 = (uVar9 & 0x80000000) != 0;\n  uVar9 = uVar9 << 1;\n  uVar4 = param_1 * 2;\n  bVar11 = CARRY4(param_1,param_1);\n  param_1 = param_1 * 2 + (uint)bVar10;\n  uVar3 = uVar3 * 2 + (uint)(bVar11 || CARRY4(uVar4,(uint)bVar10));\n  iVar7 = iVar7 + -1;\n  if ((uVar3 & 0x100000) != 0) goto LAB_08000278;\n  uVar2 = param_1;\n  uVar4 = uVar3;\n  if (uVar3 == 0) {\n    uVar2 = 0;\n    uVar4 = param_1;\n  }\n  iVar5 = count_leading_zeroes(uVar4);\n  if (uVar3 == 0) {\n    iVar5 = iVar5 + 0x20;\n  }\n  uVar6 = iVar5 - 0xb;\n  bVar12 = SBORROW4(uVar6,0x20);\n  uVar3 = iVar5 - 0x2b;\n  bVar11 = (int)uVar3 < 0;\n  bVar10 = uVar3 == 0;\n  if ((int)uVar6 < 0x20) {\n    bVar12 = SCARRY4(uVar3,0xc);\n    iVar5 = iVar5 + -0x1f;\n    bVar11 = iVar5 < 0;\n    bVar10 = iVar5 == 0;\n    uVar3 = uVar6;\n    if (!bVar10 && bVar11 == bVar12) {\n      uVar2 = uVar4 << (uVar6 & 0xff);\n      uVar4 = uVar4 >> (0xcU - iVar5 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar9 = 0x20 - uVar3;\n  }\n  uVar4 = uVar4 << (uVar3 & 0xff);\n  if (bVar10 || bVar11 != bVar12) {\n    uVar4 = uVar4 | uVar2 >> (uVar9 & 0xff);\n  }\n  if (bVar10 || bVar11 != bVar12) {\n    uVar2 = uVar2 << (uVar3 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar6 <= iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000 | uVar8,uVar2);\n  }\n  uVar3 = ~(iVar7 - uVar6);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_2,uVar4 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar7 = uVar3 - 0x13;\n  if (iVar7 == 0 || iVar7 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar8 | uVar4 >> (uVar3 & 0xff),\n                    uVar2 >> (uVar3 & 0xff) | uVar4 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_2,uVar2 >> (0x20 - (0xcU - iVar7) & 0xff) | uVar4 << (0xcU - iVar7 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000474", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_l2d"
        }, 
        "AHRS_GetRoll": {
            "renaming": {}, 
            "code": "\nfloat AHRS_GetRoll(void)\n\n{\n  float in_s0;\n  float fVar1;\n  \n  fVar1 = lowPassFilter((LPF *)PTR_lpf_roll_08002ee4,in_s0);\n  return fVar1;\n}\n\n", 
            "called": [
                "lowPassFilter"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ed4", 
            "calling": [
                "AHRS_ComputeAngles", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "AHRS_GetRoll"
        }, 
        "Motor_DistributeSpeed": {
            "renaming": {}, 
            "code": "\nvoid Motor_DistributeSpeed(float throttle,float pitch,float roll,float yaw)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int m4;\n  int m3;\n  int m2;\n  int m1;\n  \n  uVar1 = __aeabi_fsub();\n  uVar2 = __addsf3();\n  __aeabi_fsub(uVar1);\n  uVar3 = __addsf3();\n  __aeabi_fsub(uVar3,DAT_080042fc);\n  m4 = __aeabi_f2iz();\n  __aeabi_fsub(uVar2);\n  uVar2 = __aeabi_fsub();\n  __aeabi_fsub(uVar2,DAT_080042fc);\n  m3 = __aeabi_f2iz();\n  __addsf3(uVar1);\n  uVar1 = __aeabi_fsub();\n  __aeabi_fsub(uVar1,DAT_080042fc);\n  m2 = __aeabi_f2iz();\n  __addsf3();\n  uVar1 = __addsf3();\n  __aeabi_fsub(uVar1,DAT_080042fc);\n  m1 = __aeabi_f2iz();\n  Motor_SetSpeed(m1,m2,m3,m4);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fsub", 
                "Motor_SetSpeed", 
                "__addsf3", 
                "__aeabi_f2iz"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800426c", 
            "calling": [
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "Motor_DistributeSpeed"
        }, 
        "HAL_UART_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid HAL_UART_IRQHandler(UART_HandleTypeDef *huart)\n\n{\n  uint uVar1;\n  uint16_t uVar2;\n  uint uVar3;\n  ushort *puVar4;\n  HAL_UART_StateTypeDef HVar5;\n  USART_TypeDef *pUVar6;\n  uint32_t uVar7;\n  uint uVar8;\n  bool bVar9;\n  \n  pUVar6 = huart->Instance;\n  uVar3 = pUVar6->SR;\n  uVar1 = pUVar6->CR1;\n  if ((uVar3 & 0xf) == 0) {\n    if (((int)(uVar3 << 0x1a) < 0) && ((int)(uVar1 << 0x1a) < 0)) {\n      UART_Receive_IT(huart);\n      return;\n    }\n  }\n  else {\n    uVar8 = pUVar6->CR3 & 1;\n    if ((uVar8 != 0) || ((uVar1 & 0x120) != 0)) {\n      uVar7 = uVar3 << 0x1f;\n      if ((int)uVar7 < 0) {\n        bVar9 = (int)(uVar1 << 0x17) < 0;\n        if (bVar9) {\n          uVar7 = huart->ErrorCode | 1;\n        }\n        if (bVar9) {\n          huart->ErrorCode = uVar7;\n        }\n      }\n      if (((int)(uVar3 << 0x1d) < 0) && (uVar8 != 0)) {\n        huart->ErrorCode = huart->ErrorCode | 2;\n      }\n      if (((int)(uVar3 << 0x1e) < 0) && (uVar8 != 0)) {\n        huart->ErrorCode = huart->ErrorCode | 4;\n      }\n      if (((int)(uVar3 << 0x1c) < 0) && (uVar8 != 0)) {\n        huart->ErrorCode = huart->ErrorCode | 8;\n      }\n      if (huart->ErrorCode == 0) {\n        return;\n      }\n      if (((int)(uVar3 << 0x1a) < 0) && ((int)(uVar1 << 0x1a) < 0)) {\n        UART_Receive_IT(huart);\n      }\n      pUVar6 = huart->Instance;\n      if ((-1 < (int)(huart->ErrorCode << 0x1c)) && ((pUVar6->CR3 & 0x40) == 0)) {\n        HAL_UART_ErrorCallback(huart);\n        huart->ErrorCode = 0;\n        return;\n      }\n      pUVar6->CR1 = pUVar6->CR1 & 0xfffffedf;\n      pUVar6->CR3 = pUVar6->CR3 & 0xfffffffe;\n      huart->State = HAL_UART_STATE_READY;\n      HAL_UART_ErrorCallback(huart);\n      return;\n    }\n  }\n  if (((int)(uVar3 << 0x18) < 0) && ((int)(uVar1 << 0x18) < 0)) {\n    if ((huart->State & 0xdf) == 0x12) {\n      puVar4 = (ushort *)huart->pTxBuffPtr;\n      if ((huart->Init).WordLength == 0x1000) {\n        pUVar6->DR = *puVar4 & 0x1ff;\n        if ((huart->Init).Parity == 0) {\n          puVar4 = puVar4 + 1;\n        }\n        else {\n          puVar4 = (ushort *)((int)puVar4 + 1);\n        }\n        huart->pTxBuffPtr = (uint8_t *)puVar4;\n      }\n      else {\n        huart->pTxBuffPtr = (byte *)((int)puVar4 + 1);\n        pUVar6->DR = (uint)*(byte *)puVar4;\n      }\n      uVar2 = huart->TxXferCount - 1;\n      huart->TxXferCount = uVar2;\n      if (uVar2 == 0) {\n        pUVar6->CR1 = pUVar6->CR1 & 0xffffff7f;\n        pUVar6->CR1 = pUVar6->CR1 | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(uVar3 << 0x19) < 0) && ((int)(uVar1 << 0x19) < 0)) {\n    pUVar6->CR1 = pUVar6->CR1 & 0xffffffbf;\n    if (huart->State == HAL_UART_STATE_BUSY_TX_RX) {\n      HVar5 = HAL_UART_STATE_BUSY_RX;\n    }\n    else {\n      HVar5 = HAL_UART_STATE_READY;\n    }\n    huart->State = HVar5;\n    HAL_UART_TxCpltCallback(huart);\n  }\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_TxCpltCallback", 
                "HAL_UART_ErrorCallback", 
                "UART_Receive_IT"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800299a", 
            "calling": [
                "USART1_IRQHandler"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_IRQHandler"
        }, 
        "copysign": {
            "renaming": {}, 
            "code": "\ndouble copysign(double __x,double __y)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800729c", 
            "calling": [
                "scalbn"
            ], 
            "imported": false, 
            "current_name": "copysign"
        }, 
        "__errno": {
            "renaming": {}, 
            "code": "\nundefined4 __errno(void)\n\n{\n  return *(undefined4 *)PTR__impure_ptr_080072b4;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080072ac", 
            "calling": [
                "pow", 
                "sqrt", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "__errno"
        }, 
        "__aeabi_drsub": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_drsub(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar4 = param_2 ^ 0x80000000;\n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((uVar4 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = uVar4;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((uVar4 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        uVar4 = param_4;\n      }\n      return CONCAT44(uVar4,param_1);\n    }\n    if (uVar4 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(uVar4,uVar4) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(uVar4 + 0x100000,param_1);\n    }\n    uVar4 = uVar4 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(uVar4 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar12 = uVar4;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar12 = param_4;\n    param_3 = param_1;\n    param_4 = uVar4;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar12,uVar8);\n  }\n  uVar9 = uVar12 & 0xfffff | 0x100000;\n  if ((uVar12 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar4 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar4 = uVar4 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar5 = uVar4 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar5;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar4 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar11 = uVar4 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar4 = (int)uVar4 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar4;\n    uVar9 = uVar9 + ((int)uVar4 >> 0x1f) + (uint)CARRY4(uVar8,uVar4);\n  }\n  uVar4 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | uVar4,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar3 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar3 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar3 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar3 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar3 = uVar3 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | uVar4,uVar3);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar3 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(uVar4 | uVar7 >> (uVar10 & 0xff),\n                    uVar3 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n", 
            "called": [
                "__aeabi_dadd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000160", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_drsub"
        }, 
        "HAL_Delay": {
            "renaming": {}, 
            "code": "\nvoid HAL_Delay(uint32_t Delay)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001168", 
            "calling": [
                "HAL_RCC_OscConfig", 
                "delay_ms"
            ], 
            "imported": false, 
            "current_name": "HAL_Delay"
        }, 
        "MSP_SendAttitude": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendAttitude(void)\n\n{\n  uint in_r1;\n  undefined4 local_10;\n  uint local_c;\n  \n  local_10 = *(undefined4 *)PTR_msp_txf_attitude_08004430;\n  local_c = in_r1 & 0xffff0000 | (uint)*(ushort *)(PTR_msp_txf_attitude_08004430 + 4);\n  MSP_SendFrame('l',(uint8_t *)&local_10,6);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004410", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendAttitude"
        }, 
        "HAL_I2C_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)\n\n{\n  uint32_t uVar1;\n  uint extraout_r1;\n  uint uVar2;\n  I2C_TypeDef *pIVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  \n  if (hi2c == (I2C_HandleTypeDef *)0x0) {\n    return HAL_ERROR;\n  }\n  if (hi2c->State == HAL_I2C_STATE_RESET) {\n    hi2c->Lock = HAL_UNLOCKED;\n    HAL_I2C_MspInit(hi2c);\n  }\n  hi2c->State = HAL_I2C_STATE_BUSY;\n  uVar5 = DAT_08001820;\n  hi2c->Instance->CR1 = hi2c->Instance->CR1 & 0xfffffffe;\n  uVar1 = HAL_RCC_GetPCLK1Freq();\n  uVar4 = (hi2c->Init).ClockSpeed;\n  uVar6 = uVar1 / DAT_08001824;\n  uVar2 = extraout_r1;\n  if (uVar5 < uVar4) {\n    uVar2 = 300;\n  }\n  pIVar3 = hi2c->Instance;\n  if (uVar5 < uVar4) {\n    uVar2 = uVar6 * uVar2;\n  }\n  pIVar3->CR2 = uVar6;\n  if (uVar5 < uVar4) {\n    uVar6 = uVar2 / 1000;\n  }\n  pIVar3->TRISE = uVar6 + 1;\n  if (uVar5 < uVar4) {\n    if ((hi2c->Init).DutyCycle == 0) {\n      uVar1 = uVar1 / (uVar4 * 3) | 0x8000;\n    }\n    else {\n      uVar1 = uVar1 / (uVar4 * 0x19) | 0xc000;\n    }\n    if ((uVar1 & 0xfff) == 0) {\n      uVar1 = 1;\n    }\n  }\n  else {\n    uVar1 = uVar1 / (uVar4 << 1);\n    if ((uVar1 & 0xfff) < 4) {\n      uVar1 = 4;\n    }\n  }\n  uVar6 = (hi2c->Init).NoStretchMode;\n  uVar5 = (hi2c->Init).GeneralCallMode;\n  pIVar3->CCR = uVar1;\n  pIVar3->CR1 = uVar5 | uVar6;\n  pIVar3->OAR1 = (hi2c->Init).AddressingMode | (hi2c->Init).OwnAddress1;\n  pIVar3->OAR2 = (hi2c->Init).DualAddressMode | (hi2c->Init).OwnAddress2;\n  pIVar3->CR1 = pIVar3->CR1 | 1;\n  hi2c->ErrorCode = 0;\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Mode = HAL_I2C_MODE_NONE;\n  return HAL_OK;\n}\n\n", 
            "called": [
                "HAL_RCC_GetPCLK1Freq", 
                "HAL_I2C_MspInit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001754", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_I2C_Init"
        }, 
        "__floatunsisf": {
            "renaming": {}, 
            "code": "\nuint __floatunsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar3 = uVar2 * -0x800000 + 0x4a800000;\n  if (7 < iVar1) {\n    uVar4 = 0 << (uVar2 & 0xff);\n    uVar2 = iVar3 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar4);\n    if (uVar4 == 0x80000000) {\n      uVar2 = uVar2 & 0xfffffffe;\n    }\n    return uVar2;\n  }\n  uVar4 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar2 = iVar3 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n  if ((uVar4 & 0x7fffffff) == 0) {\n    uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c3c", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "__floatunsisf"
        }, 
        "TIM_OC3_SetConfig": {
            "renaming": {}, 
            "code": "\nvoid TIM_OC3_SetConfig(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  \n  TIMx->CCER = TIMx->CCER & 0xfffffeff;\n  uVar2 = TIMx->CR2;\n  uVar3 = OC_Config->OCMode;\n  uVar1 = TIMx->CCER & 0xfffffdff | OC_Config->OCPolarity << 8;\n  if (TIMx == DAT_08002320) {\n    uVar1 = (uVar1 & 0xfffff7ff | OC_Config->OCNPolarity << 8) & 0xfffffbff;\n    uVar2 = uVar2 & 0xffffcfff | (OC_Config->OCIdleState | OC_Config->OCNIdleState) << 4;\n  }\n  TIMx->CR2 = uVar2;\n  TIMx->CCMR2 = TIMx->CCMR2 & 0xffffff8c | uVar3;\n  TIMx->CCR3 = OC_Config->Pulse;\n  TIMx->CCER = uVar1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080022d0", 
            "calling": [
                "HAL_TIM_PWM_ConfigChannel"
            ], 
            "imported": false, 
            "current_name": "TIM_OC3_SetConfig"
        }, 
        "I2C_ReadByteArray": {
            "renaming": {}, 
            "code": "\nvoid I2C_ReadByteArray(uint16_t device_add,uint16_t register_add,uint8_t *byte_array,uint16_t size,\n                      char *file,int line)\n\n{\n  undefined *file_00;\n  uint8_t uVar1;\n  int iVar2;\n  uint8_t *puVar3;\n  \n  file_00 = PTR_s____Src_i2c_c_08004118;\n  puVar3 = byte_array + -1;\n  for (iVar2 = 0; iVar2 < (int)(uint)size; iVar2 = iVar2 + 1) {\n    uVar1 = I2C_ReadByte(device_add,register_add + (short)iVar2,file_00,0x4c);\n    puVar3 = puVar3 + 1;\n    *puVar3 = uVar1;\n  }\n  return;\n}\n\n", 
            "called": [
                "I2C_ReadByte"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080040e8", 
            "calling": [
                "MPU9250_ReadAccelData", 
                "MS5611_Init", 
                "AK8963_ReadData", 
                "MPU9250_ReadGyroData", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "I2C_ReadByteArray"
        }, 
        "I2C_IsAcknowledgeFailed": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)\n\n{\n  I2C_TypeDef *pIVar1;\n  \n  pIVar1 = hi2c->Instance;\n  if ((pIVar1->SR1 & 0x400) != 0) {\n    pIVar1->SR1 = pIVar1->SR1 & 0xfffffbff;\n    hi2c->ErrorCode = 4;\n    hi2c->State = HAL_I2C_STATE_READY;\n    hi2c->Lock = HAL_UNLOCKED;\n    return HAL_ERROR;\n  }\n  return HAL_OK;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001436", 
            "calling": [
                "I2C_WaitOnTXEFlagUntilTimeout"
            ], 
            "imported": false, 
            "current_name": "I2C_IsAcknowledgeFailed"
        }, 
        "MemManage_Handler": {
            "renaming": {}, 
            "code": "\nvoid MemManage_Handler(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
            "called": [
                "MemManage_Handler"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004ee8", 
            "calling": [
                "MemManage_Handler"
            ], 
            "imported": false, 
            "current_name": "MemManage_Handler"
        }, 
        "MadgwickSetDelta": {
            "renaming": {}, 
            "code": "\nvoid MadgwickSetDelta(float _deltat)\n\n{\n  undefined4 in_r0;\n  \n  *(undefined4 *)PTR_deltat_08003328 = in_r0;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003320", 
            "calling": [
                "AHRS_ComputeAngles", 
                "IMU_Init"
            ], 
            "imported": false, 
            "current_name": "MadgwickSetDelta"
        }, 
        "__aeabi_ul2f": {
            "renaming": {}, 
            "code": "\nuint __aeabi_ul2f(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  \n  if ((param_1 | param_2) == 0) {\n    return param_1;\n  }\n  uVar1 = param_1;\n  uVar2 = param_2;\n  if (param_2 == 0) {\n    uVar1 = 0;\n    uVar2 = param_1;\n  }\n  iVar5 = 0x5b000000;\n  if (param_2 == 0) {\n    iVar5 = 0x4b000000;\n  }\n  iVar3 = count_leading_zeroes(uVar2);\n  uVar4 = iVar3 - 8;\n  iVar5 = iVar5 + -0x800000 + uVar4 * -0x800000;\n  if (iVar3 < 8) {\n    uVar4 = uVar2 << (iVar3 + 0x18U & 0xff);\n    uVar2 = iVar5 + ((uVar2 >> (0x20 - (iVar3 + 0x18U) & 0xff)) - ((int)uVar4 >> 0x1f));\n    if ((uVar1 | uVar4 << 1) == 0) {\n      uVar2 = uVar2 & ~(uVar4 >> 0x1f);\n    }\n    return uVar2;\n  }\n  uVar6 = uVar1 << (uVar4 & 0xff);\n  uVar2 = iVar5 + (uVar2 << (uVar4 & 0xff)) +\n          (uVar1 >> (0x20 - uVar4 & 0xff)) + (uint)(0x7fffffff < uVar6);\n  if (uVar6 == 0x80000000) {\n    uVar2 = uVar2 & 0xfffffffe;\n  }\n  return uVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c60", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_ul2f"
        }, 
        "HAL_UART_Receive_IT": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart,uint8_t *pData,uint16_t Size)\n\n{\n  HAL_UART_StateTypeDef HVar1;\n  uint uVar2;\n  USART_TypeDef *pUVar3;\n  \n  if ((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_TX)) {\n    if ((pData == (uint8_t *)0x0) || (Size == 0)) {\n      return HAL_ERROR;\n    }\n    if (huart->Lock != HAL_LOCKED) {\n      huart->Lock = HAL_LOCKED;\n      huart->ErrorCode = 0;\n      huart->RxXferSize = Size;\n      huart->RxXferCount = Size;\n      huart->Lock = HAL_UNLOCKED;\n      if (huart->State == HAL_UART_STATE_BUSY_TX) {\n        HVar1 = HAL_UART_STATE_BUSY_TX_RX;\n      }\n      else {\n        HVar1 = HAL_UART_STATE_BUSY_RX;\n      }\n      pUVar3 = huart->Instance;\n      huart->State = HVar1;\n      uVar2 = pUVar3->CR1;\n      huart->pRxBuffPtr = pData;\n      pUVar3->CR1 = uVar2 | 0x100;\n      pUVar3->CR3 = pUVar3->CR3 | 1;\n      pUVar3->CR1 = pUVar3->CR1 | 0x20;\n      return HAL_OK;\n    }\n  }\n  return HAL_BUSY;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080028a6", 
            "calling": [
                "serialBegin", 
                "HAL_UART_RxCpltCallback"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_Receive_IT"
        }, 
        "memchr": {
            "renaming": {}, 
            "code": "\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  \n  pbVar1 = (byte *)__s;\n  do {\n    pbVar2 = pbVar1;\n    if (pbVar2 == (byte *)(__n + (int)__s)) {\n      return (void *)0x0;\n    }\n    pbVar1 = pbVar2 + 1;\n  } while ((uint)*pbVar2 != (__c & 0xffU));\n  return pbVar2;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005614", 
            "calling": [
                "_svfiprintf_r", 
                "_printf_i"
            ], 
            "imported": false, 
            "current_name": "memchr"
        }, 
        "matherr": {
            "renaming": {}, 
            "code": "\nint matherr(exception *__exc)\n\n{\n  return 0;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800709e", 
            "calling": [
                "pow", 
                "sqrt", 
                "asin"
            ], 
            "imported": false, 
            "current_name": "matherr"
        }, 
        "I2C_WaitOnMasterAddressFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nI2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Flag,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  I2C_TypeDef *pIVar4;\n  \n  uVar1 = HAL_GetTick();\n  do {\n    pIVar4 = hi2c->Instance;\n    if ((Flag << 8) >> 0x18 == 1) {\n      uVar3 = pIVar4->SR1;\n    }\n    else {\n      uVar3 = pIVar4->SR2;\n    }\n    if ((Flag & 0xffff & ~uVar3) == 0) {\n      return HAL_OK;\n    }\n    if ((int)(pIVar4->SR1 << 0x15) < 0) {\n      pIVar4->CR1 = pIVar4->CR1 | 0x200;\n      pIVar4->SR1 = pIVar4->SR1 & 0xfffffbff;\n      hi2c->ErrorCode = 4;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_ERROR;\n    }\n  } while ((Timeout == 0xffffffff) ||\n          ((Timeout != 0 && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout))));\n  hi2c->State = HAL_I2C_STATE_READY;\n  hi2c->Lock = HAL_UNLOCKED;\n  return HAL_TIMEOUT;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001460", 
            "calling": [
                "I2C_RequestMemoryWrite", 
                "I2C_RequestMemoryRead"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnMasterAddressFlagUntilTimeout"
        }, 
        "__aeabi_dcmple": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmple(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009c8", 
            "calling": [
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmple"
        }, 
        "_printf_i": {
            "renaming": {}, 
            "code": "\nuint _printf_i(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  void *pvVar4;\n  int iVar5;\n  undefined *puVar6;\n  uint uVar7;\n  uint **ppuVar8;\n  uint uVar9;\n  uint uVar10;\n  undefined *puVar11;\n  undefined *__s;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  __s = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar6 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar7 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar7 & 0x80) == 0) && ((int)(uVar7 << 0x19) < 0)) {\n            uVar9 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar9 = *puVar3;\n          }\n          if ((int)(uVar7 << 0x1f) < 0) {\n            *param_2 = uVar7 | 0x20;\n          }\n          if (uVar9 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar7 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar9 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar9 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar9 & 0x40) == 0) goto LAB_08005424;\n            uVar9 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar9 = *puVar3;\n          }\n          if ((int)uVar9 < 0) {\n            uVar9 = -uVar9;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar7 = 10;\n          puVar6 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar10 = param_2[1];\n        param_2[2] = uVar10;\n        puVar11 = __s;\n        if ((int)uVar10 < 0) {\n          if (uVar9 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar6;\n          puVar11 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar9 == 0) {\n            if (uVar10 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar10 = uVar9 / uVar7;\n              puVar11 = puVar11 + -1;\n              *puVar11 = puVar6[uVar9 - uVar7 * uVar10];\n              uVar9 = uVar10;\n            } while (uVar10 != 0);\n          }\n        }\n        if (((uVar7 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar11[-1] = 0x30;\n          puVar11 = puVar11 + -1;\n        }\n        param_2[4] = (int)__s - (int)puVar11;\n        __s = puVar11;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      __s = (undefined *)((int)param_2 + 0x42);\n      uVar9 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar9 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar9 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar9 & 0x40) == 0) goto LAB_08005498;\n              uVar9 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar9 = *puVar3;\n            }\n            puVar6 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar7 = 8;\n            }\n            else {\n              uVar7 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar6 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      __s = (undefined *)*puVar3;\n      pvVar4 = memchr(__s,0,param_2[1]);\n      if (pvVar4 != (void *)0x0) {\n        param_2[1] = (int)pvVar4 - (int)__s;\n      }\n      uVar9 = param_2[1];\n    }\n    param_2[4] = uVar9;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar9 = *param_2;\n  ppuVar8 = (uint **)*param_5;\n  uVar7 = param_2[5];\n  if ((uVar9 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar8 + 1);\n    puVar3 = *ppuVar8;\n    if ((uVar9 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar7;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar8 + 1);\n    puVar3 = *ppuVar8;\nLAB_0800557a:\n    *puVar3 = uVar7;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = _printf_common(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,__s,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar9 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar5 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar5 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar9 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar9 = local_24[0];\n    }\n  }\n  return uVar9;\n}\n\n", 
            "called": [
                "memchr", 
                "_printf_common"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080053d4", 
            "calling": [
                "_svfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "_printf_i"
        }, 
        "__aeabi_cfrcmple": {
            "renaming": {}, 
            "code": "\nvoid __aeabi_cfrcmple(undefined4 param_1,undefined4 param_2)\n\n{\n  __aeabi_cfcmpeq(param_2,param_1);\n  return;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000ffc", 
            "calling": [
                "__aeabi_fcmpgt", 
                "__aeabi_fcmpge"
            ], 
            "imported": false, 
            "current_name": "__aeabi_cfrcmple"
        }, 
        "HAL_TIM_MspPostInit": {
            "renaming": {}, 
            "code": "\nvoid HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim)\n\n{\n  GPIO_TypeDef *pGVar1;\n  TIM_TypeDef *pTVar2;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  pTVar2 = htim->Instance;\n  pGVar1 = DAT_08004e6c;\n  if (pTVar2 == DAT_08004e68) {\n    GPIO_InitStruct.Pin = 0x800;\n  }\n  else if (pTVar2 == (TIM_TypeDef *)0x40000000) {\n    GPIO_InitStruct.Pin = 2;\n  }\n  else {\n    pGVar1 = DAT_08004e74;\n    if (pTVar2 == DAT_08004e70) {\n      GPIO_InitStruct.Pin = 3;\n    }\n    else {\n      if (pTVar2 != DAT_08004e78) {\n        return;\n      }\n      GPIO_InitStruct.Pin = 0x300;\n    }\n  }\n  GPIO_InitStruct.Speed = 2;\n  GPIO_InitStruct.Mode = 2;\n  HAL_GPIO_Init(pGVar1,&GPIO_InitStruct);\n  return;\n}\n\n", 
            "called": [
                "HAL_GPIO_Init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004e14", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_MspPostInit"
        }, 
        "HAL_UART_Transmit": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_UART_Transmit(UART_HandleTypeDef *huart,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  HAL_UART_StateTypeDef HVar3;\n  USART_TypeDef *pUVar4;\n  \n  if ((huart->State == HAL_UART_STATE_READY) || (huart->State == HAL_UART_STATE_BUSY_RX)) {\n    if ((pData == (uint8_t *)0x0) || (Size == 0)) {\n      return HAL_ERROR;\n    }\n    if (huart->Lock != HAL_LOCKED) {\n      huart->Lock = HAL_LOCKED;\n      huart->ErrorCode = 0;\n      huart->TxXferSize = Size;\n      if (huart->State == HAL_UART_STATE_BUSY_RX) {\n        HVar3 = HAL_UART_STATE_BUSY_TX_RX;\n      }\n      else {\n        HVar3 = HAL_UART_STATE_BUSY_TX;\n      }\n      huart->TxXferCount = Size;\n      huart->State = HVar3;\nLAB_080027c4:\n      if (huart->TxXferCount == 0) {\n        uVar1 = HAL_GetTick();\n        do {\n          do {\n            if ((int)(huart->Instance->SR << 0x19) < 0) {\n              if (huart->State == HAL_UART_STATE_BUSY_TX_RX) {\n                HVar3 = HAL_UART_STATE_BUSY_RX;\n              }\n              else {\n                HVar3 = HAL_UART_STATE_READY;\n              }\n              huart->State = HVar3;\n              huart->Lock = HAL_UNLOCKED;\n              return HAL_OK;\n            }\n          } while (Timeout == 0xffffffff);\n        } while ((Timeout != 0) && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout));\n      }\n      else {\n        huart->TxXferCount = huart->TxXferCount - 1;\n        if ((huart->Init).WordLength == 0x1000) {\n          uVar1 = HAL_GetTick();\n          do {\n            do {\n              if ((int)(huart->Instance->SR << 0x18) < 0) {\n                huart->Instance->DR = *(ushort *)pData & 0x1ff;\n                if ((huart->Init).Parity == 0) {\n                  pData = (uint8_t *)((int)pData + 2);\n                }\n                else {\nLAB_08002812:\n                  pData = (uint8_t *)((int)pData + 1);\n                }\n                goto LAB_080027c4;\n              }\n            } while (Timeout == 0xffffffff);\n          } while ((Timeout != 0) && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout));\n        }\n        else {\n          uVar1 = HAL_GetTick();\n          do {\n            do {\n              if ((int)(huart->Instance->SR << 0x18) < 0) {\n                huart->Instance->DR = (uint)*pData;\n                goto LAB_08002812;\n              }\n            } while (Timeout == 0xffffffff);\n          } while ((Timeout != 0) && (uVar2 = HAL_GetTick(), uVar2 - uVar1 <= Timeout));\n        }\n      }\n      pUVar4 = huart->Instance;\n      pUVar4->CR1 = pUVar4->CR1 & 0xffffff7f;\n      pUVar4->CR1 = pUVar4->CR1 & 0xffffffdf;\n      pUVar4->CR1 = pUVar4->CR1 & 0xfffffeff;\n      pUVar4->CR3 = pUVar4->CR3 & 0xfffffffe;\n      huart->State = HAL_UART_STATE_READY;\n      huart->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_BUSY;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800277c", 
            "calling": [
                "serialWrite"
            ], 
            "imported": false, 
            "current_name": "HAL_UART_Transmit"
        }, 
        "FUN_08000892": {
            "renaming": {}, 
            "code": "\nulonglong FUN_08000892(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 = in_r12 & param_4 >> 0x14;\n  uVar3 = param_2;\n  if (unaff_r4 != in_r12 || uVar2 != in_r12) {\n    if (unaff_r4 == in_r12) {\n      if (((param_1 | param_2 << 0xc) == 0) && (param_1 = param_3, uVar3 = param_4, uVar2 != in_r12)\n         ) {\nLAB_08000704:\n        return (ulonglong)((param_2 ^ param_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (uVar2 == in_r12) {\n      param_1 = param_3;\n      uVar3 = param_4;\n      if ((param_3 | param_4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((param_2 ^ param_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      bVar4 = (param_1 | param_2 << 1) == 0;\n      if (!bVar4) {\n        bVar4 = (param_3 | param_4 << 1) == 0;\n      }\n      if (!bVar4) {\n        if (unaff_r4 == 0) {\n          uVar3 = param_2 & 0x80000000;\n          do {\n            uVar1 = param_1 & 0x80000000;\n            param_1 = param_1 << 1;\n            param_2 = param_2 * 2 + (uint)(uVar1 != 0);\n          } while ((param_2 & 0x100000) == 0);\n          param_2 = param_2 | uVar3;\n          if (uVar2 != 0) {\n            return CONCAT44(param_2,param_1);\n          }\n        }\n        do {\n          uVar3 = param_3 & 0x80000000;\n          param_3 = param_3 << 1;\n          param_4 = param_4 * 2 + (uint)(uVar3 != 0);\n        } while ((param_4 & 0x100000) == 0);\n        return CONCAT44(param_2,param_1);\n      }\n      if ((param_1 | param_2 << 1) != 0) goto LAB_08000704;\n      if ((param_3 | param_4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": false, 
            "entrypoint": "0x08000892", 
            "calling": [
                "__divdf3"
            ], 
            "imported": false, 
            "current_name": "FUN_08000892"
        }, 
        "__ssputs_r": {
            "renaming": {}, 
            "code": "\nundefined4 __ssputs_r(undefined4 *param_1,void **param_2,void *param_3,void *param_4)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  size_t __n;\n  \n  pvVar2 = param_2[2];\n  if ((pvVar2 <= param_4) && ((*(ushort *)(param_2 + 3) & 0x480) != 0)) {\n    __n = (int)*param_2 - (int)param_2[4];\n    pvVar2 = (void *)((uint)((int)param_2[5] * 3) / 2);\n    pvVar1 = (void *)((int)param_4 + __n + 1);\n    if (pvVar2 < pvVar1) {\n      pvVar2 = pvVar1;\n    }\n    if ((int)((uint)*(ushort *)(param_2 + 3) << 0x15) < 0) {\n      pvVar1 = (void *)_malloc_r(param_1,pvVar2);\n      if (pvVar1 == (void *)0x0) {\nLAB_0800508a:\n        *param_1 = 0xc;\n        *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n        return 0xffffffff;\n      }\n      memcpy(pvVar1,param_2[4],__n);\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      pvVar1 = (void *)_realloc_r(param_1,param_2[4],pvVar2);\n      if (pvVar1 == (void *)0x0) {\n        _free_r(param_1,param_2[4]);\n        goto LAB_0800508a;\n      }\n    }\n    param_2[4] = pvVar1;\n    *param_2 = (void *)((int)pvVar1 + __n);\n    param_2[5] = pvVar2;\n    param_2[2] = (void *)((int)pvVar2 - __n);\n    pvVar2 = param_4;\n  }\n  if (param_4 <= pvVar2) {\n    pvVar2 = param_4;\n  }\n  memmove(*param_2,param_3,(size_t)pvVar2);\n  param_2[2] = (void *)((int)param_2[2] - (int)pvVar2);\n  *param_2 = (void *)((int)pvVar2 + (int)*param_2);\n  return 0;\n}\n\n", 
            "called": [
                "_free_r", 
                "memmove", 
                "_malloc_r", 
                "_realloc_r", 
                "memcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005044", 
            "calling": [
                "_svfiprintf_r"
            ], 
            "imported": false, 
            "current_name": "__ssputs_r"
        }, 
        "__ieee754_pow": {
            "renaming": {}, 
            "code": "\nvoid __ieee754_pow(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  undefined4 extraout_r1;\n  uint extraout_r1_00;\n  undefined4 uVar2;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  uint extraout_r1_03;\n  undefined4 extraout_r1_04;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  longlong lVar16;\n  ulonglong uVar17;\n  undefined8 uVar18;\n  undefined4 uVar19;\n  undefined4 in_stack_ffffff94;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar9 = param_4 & 0x7fffffff;\n  if ((uVar9 | param_3) == 0) {\n    return;\n  }\n  uVar7 = param_2 & 0x7fffffff;\n  if ((int)uVar7 <= (int)DAT_08006428) {\n    if (uVar7 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar7 < uVar9) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar9 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar9) {\n            uVar1 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar9 == DAT_08006428) {\n                return;\n              }\nLAB_0800630c:\n              if (uVar9 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return;\n                }\n                uVar7 = 0;\n                uVar9 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                __ieee754_sqrt(param_1,param_2);\n                return;\n              }\n            }\n          }\n          else {\n            if ((int)uVar9 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              uVar1 = 0;\n              goto LAB_080062ba;\n            }\n            iVar4 = ((int)uVar9 >> 0x14) + -0x3ff;\n            if (0x14 < iVar4) {\n              uVar1 = param_3 >> (0x34U - iVar4 & 0xff);\n              if (param_3 == uVar1 << (0x34U - iVar4 & 0xff)) {\n                uVar1 = 2 - (uVar1 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar5 = (int)uVar9 >> (0x14U - iVar4 & 0xff);\n              uVar1 = param_3;\n              if (uVar9 == uVar5 << (0x14U - iVar4 & 0xff)) {\n                uVar1 = 2 - (uVar5 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            uVar1 = 0;\n          }\n          uVar5 = param_1;\n          fabs((double)CONCAT44(in_stack_ffffff94,uVar1));\n          uVar17 = CONCAT44(param_2,uVar5) & 0x7fffffffffffffff;\n          if ((param_1 == 0) && ((uVar7 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              __divdf3(0,DAT_08006438,uVar5,extraout_r1);\n            }\n            if (-1 < (int)param_2) {\n              return;\n            }\n            if ((uVar1 | uVar7 + 0xc0100000) != 0) {\n              return;\n            }\n          }\n          else {\n            uVar5 = 0xffffffff - ((int)param_2 >> 0x1f);\n            if ((uVar1 | uVar5) != 0) {\n              if (DAT_08006440 < (int)uVar9) {\n                if (DAT_08006440 + 0x2100000 < (int)uVar9) {\n                  if (DAT_08006434 < (int)uVar7) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  if (-1 < (int)param_4) {\n                    return;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar7 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar7) goto LAB_08006418;\n                uVar12 = __subdf3();\n                uVar10 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                uVar8 = (undefined4)uVar12;\n                uVar12 = __muldf3(uVar8,uVar10,DAT_080065a8,DAT_080065ac);\n                uVar13 = __muldf3(uVar8,uVar10,DAT_080065b0,DAT_080065b4);\n                uVar14 = __muldf3(uVar8,uVar10,0,DAT_080065d4);\n                uVar14 = __subdf3(DAT_080065b8,DAT_080065bc,(int)uVar14,\n                                  (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = __muldf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar8,uVar10);\n                uVar14 = __subdf3(0,DAT_080065d8,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar15 = __muldf3(uVar8,uVar10,uVar8,uVar10);\n                uVar14 = __muldf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                  (int)((ulonglong)uVar15 >> 0x20));\n                uVar14 = __muldf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),DAT_080065c0,\n                                  DAT_080065c4);\n                uVar13 = __subdf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar14,\n                                  (int)((ulonglong)uVar14 >> 0x20));\n                __aeabi_dadd((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                             (int)((ulonglong)uVar13 >> 0x20));\n                lVar16 = (ulonglong)extraout_r1_00 << 0x20;\n                uVar9 = extraout_r1_00;\n              }\n              else {\n                local_54 = 0;\n                if (uVar7 < 0x100000) {\n                  uVar17 = __muldf3();\n                  local_54 = -0x35;\n                }\n                uVar9 = (uint)(uVar17 >> 0x20);\n                local_54 = ((int)uVar9 >> 0x14) + -0x3ff + local_54;\n                uVar9 = uVar9 & 0xfffff;\n                uVar7 = uVar9 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar9) {\n                  if (DAT_08006920 < (int)uVar9) {\n                    uVar7 = uVar7 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar4 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar4 = 0;\n                }\n                uVar6 = *(undefined4 *)(PTR_bp_08006924 + iVar4 * 8);\n                uVar19 = *(undefined4 *)((int)(PTR_bp_08006924 + iVar4 * 8) + 4);\n                uVar12 = __subdf3();\n                uVar10 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                uVar13 = __aeabi_dadd((int)uVar17,uVar7,uVar6,uVar19);\n                uVar13 = __divdf3(0,DAT_08006928,(int)uVar13,(int)((ulonglong)uVar13 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar14 = __muldf3((int)uVar12,uVar10,(int)uVar13,uVar11);\n                uVar2 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar8 = (undefined4)uVar14;\n                uVar14 = __muldf3(0,uVar2);\n                uVar12 = __subdf3((int)uVar12,uVar10,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = __subdf3(0,((int)uVar7 >> 1 | 0x20000000U) + 0x80000 + iVar4 * 0x40000,\n                                  uVar6,uVar19);\n                uVar14 = __subdf3((int)uVar17,uVar7,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = __muldf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),0,uVar2);\n                uVar12 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar14,\n                                  (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = __muldf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,uVar11);\n                uVar11 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                uVar13 = __muldf3(uVar8,uVar2);\n                uVar6 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar10 = (undefined4)uVar13;\n                uVar13 = __muldf3(uVar10,uVar6,DAT_080068d0,DAT_080068d4);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar10,uVar6);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar10,uVar6);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar10,uVar6);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar10,uVar6);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar14 = __muldf3(uVar10,uVar6,uVar10,uVar6);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar14,\n                                  (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = __aeabi_dadd(uVar8,uVar2,0,uVar2);\n                uVar14 = __muldf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar12,uVar11);\n                uVar13 = __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar13,\n                                      (int)((ulonglong)uVar13 >> 0x20));\n                uVar10 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar14 = __muldf3(0,uVar2,0,uVar2);\n                uVar6 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = __aeabi_dadd((int)uVar14,uVar6,0,DAT_0800692c);\n                __aeabi_dadd((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar13,uVar10);\n                uVar15 = __muldf3(0,uVar2,0,extraout_r1_01);\n                uVar19 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar18 = __subdf3(0,extraout_r1_01,0,DAT_0800692c);\n                uVar14 = __subdf3((int)uVar18,(int)((ulonglong)uVar18 >> 0x20),(int)uVar14,uVar6);\n                uVar13 = __subdf3((int)uVar13,uVar10,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar8,uVar2);\n                uVar12 = __muldf3((int)uVar12,uVar11,0,extraout_r1_01);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar12,\n                                      (int)((ulonglong)uVar12 >> 0x20));\n                uVar8 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                __aeabi_dadd((int)uVar15,uVar19,(int)uVar13,uVar8);\n                uVar12 = __muldf3(0,extraout_r1_02,DAT_08006900,DAT_08006904);\n                uVar14 = __subdf3(0,extraout_r1_02,(int)uVar15,uVar19);\n                uVar13 = __subdf3((int)uVar13,uVar8,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006908,\n                                  DAT_0800690c);\n                uVar14 = __muldf3(0,extraout_r1_02,DAT_08006910,DAT_08006914);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),\n                                      *(undefined4 *)(PTR_dp_l_08006930 + iVar4 * 8),\n                                      *(undefined4 *)((int)(PTR_dp_l_08006930 + iVar4 * 8) + 4));\n                uVar14 = __aeabi_i2d(local_54);\n                uVar8 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar10 = *(undefined4 *)(PTR_dp_h_08006934 + iVar4 * 8);\n                uVar11 = *(undefined4 *)((int)(PTR_dp_h_08006934 + iVar4 * 8) + 4);\n                uVar15 = __aeabi_dadd((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                                      (int)((ulonglong)uVar13 >> 0x20));\n                uVar15 = __aeabi_dadd((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar10,uVar11);\n                __aeabi_dadd((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,uVar8);\n                uVar14 = __subdf3(0,extraout_r1_03,(int)uVar14,uVar8);\n                lVar16 = __subdf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar10,uVar11);\n                uVar9 = extraout_r1_03;\n              }\n              uVar12 = __subdf3((int)lVar16,(int)((ulonglong)lVar16 >> 0x20),(int)uVar12,\n                                (int)((ulonglong)uVar12 >> 0x20));\n              uVar12 = __subdf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar12,\n                                (int)((ulonglong)uVar12 >> 0x20));\n              uVar8 = DAT_080065dc;\n              if ((uVar1 - 1 | uVar5) != 0) {\n                uVar8 = DAT_080065d0;\n              }\n              uVar19 = 0;\n              uVar13 = __subdf3(param_3,param_4,0,param_4);\n              uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar9);\n              uVar12 = __muldf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),param_3,param_4);\n              uVar12 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar12,\n                                    (int)((ulonglong)uVar12 >> 0x20));\n              uVar2 = (undefined4)((ulonglong)uVar12 >> 0x20);\n              uVar10 = (undefined4)uVar12;\n              uVar12 = __muldf3(0,uVar9,0,param_4);\n              uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n              uVar11 = (undefined4)uVar12;\n              lVar16 = __aeabi_dadd(uVar10,uVar2,uVar11,uVar6);\n              uVar7 = (uint)((ulonglong)lVar16 >> 0x20);\n              uVar9 = (uint)lVar16;\n              if (DAT_080065e0 < (int)uVar7) {\n                if ((uVar7 + 0xbf700000 | uVar9) == 0) {\n                  uVar13 = __aeabi_dadd(uVar10,uVar2,DAT_08006ba8,DAT_08006bac);\n                  uVar14 = __subdf3(uVar9,uVar7,uVar11,uVar6);\n                  iVar4 = __aeabi_dcmpgt((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar14,\n                                         (int)((ulonglong)uVar14 >> 0x20));\n                  if (iVar4 == 0) goto LAB_08006968;\n                }\n                __muldf3(uVar19,uVar8,DAT_080065c8,DAT_080065cc);\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar7 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar7 | uVar9) == 0) {\n                  uVar13 = __subdf3(uVar9,uVar7,uVar11,uVar6);\n                  iVar4 = __aeabi_dcmple(uVar10,uVar2,(int)uVar13,(int)((ulonglong)uVar13 >> 0x20));\n                  if (iVar4 == 0) goto LAB_08006968;\n                }\n                __muldf3(uVar19,uVar8,DAT_08006bf0,DAT_08006bf4);\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar7 & 0x7fffffff)) {\n                  uVar7 = (0x100000 >> (((int)(uVar7 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar7;\n                  uVar9 = (uVar7 * 2 >> 0x15) - 0x3ff;\n                  iVar4 = (int)(uVar7 & 0xfffff | 0x100000) >> (0x14 - uVar9 & 0xff);\n                  if (lVar16 < 0) {\n                    iVar4 = -iVar4;\n                  }\n                  uVar12 = __subdf3(uVar11,uVar6,0,uVar7 & ~(DAT_08006bfc >> (uVar9 & 0xff)));\n                }\n                else {\n                  iVar4 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                local_68 = (undefined4)uVar12;\n                __aeabi_dadd(local_68,local_64,uVar10,uVar2);\n                uVar12 = __muldf3(0,extraout_r1_04,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                uVar13 = __subdf3(0,extraout_r1_04,local_68,local_64);\n                uVar13 = __subdf3(uVar10,uVar2,(int)uVar13,(int)((ulonglong)uVar13 >> 0x20));\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006bb8,\n                                  DAT_08006bbc);\n                uVar14 = __muldf3(0,extraout_r1_04,DAT_08006bc0,DAT_08006bc4);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar2 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar14 = __aeabi_dadd((int)uVar12,uVar11,(int)uVar13,uVar2);\n                uVar6 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar10 = (undefined4)uVar14;\n                uVar12 = __subdf3(uVar10,uVar6,(int)uVar12,uVar11);\n                uVar12 = __subdf3((int)uVar13,uVar2,(int)uVar12,(int)((ulonglong)uVar12 >> 0x20));\n                uVar2 = (undefined4)((ulonglong)uVar12 >> 0x20);\n                uVar13 = __muldf3(uVar10,uVar6,uVar10,uVar6);\n                uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar11 = (undefined4)uVar13;\n                uVar13 = __muldf3(uVar11,uVar3,DAT_08006bc8,DAT_08006bcc);\n                uVar13 = __subdf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006bd0,\n                                  DAT_08006bd4);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar11,uVar3);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar11,uVar3);\n                uVar13 = __subdf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006be0,\n                                  DAT_08006be4);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar11,uVar3);\n                uVar13 = __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar13 = __muldf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar11,uVar3);\n                uVar13 = __subdf3(uVar10,uVar6,(int)uVar13,(int)((ulonglong)uVar13 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar13 >> 0x20);\n                uVar14 = __muldf3(uVar10,uVar6,(int)uVar13,uVar11);\n                uVar13 = __subdf3((int)uVar13,uVar11,0,0x40000000);\n                uVar13 = __divdf3((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar13,\n                                  (int)((ulonglong)uVar13 >> 0x20));\n                uVar14 = __muldf3(uVar10,uVar6,(int)uVar12,uVar2);\n                uVar12 = __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar12,uVar2\n                                     );\n                uVar12 = __subdf3((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),(int)uVar12,\n                                  (int)((ulonglong)uVar12 >> 0x20));\n                uVar12 = __subdf3((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar10,uVar6);\n                uVar12 = __subdf3(0,DAT_08006c00,(int)uVar12,(int)((ulonglong)uVar12 >> 0x20));\n                if ((int)((ulonglong)uVar12 >> 0x20) + iVar4 * 0x100000 < 0x100000) {\n                  scalbn((double)CONCAT44(uVar8,uVar19),(int)uVar12);\n                }\n              }\nLAB_0800634a:\n              __muldf3();\n              return;\n            }\n          }\n          uVar12 = __subdf3();\n          uVar9 = (uint)((ulonglong)uVar12 >> 0x20);\n          uVar7 = (uint)uVar12;\n          param_1 = uVar7;\n          param_2 = uVar9;\nLAB_08006320:\n          __divdf3(uVar7,uVar9,param_1,param_2);\n          return;\n        }\n      }\n    }\n    else if ((int)uVar9 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar7 + 0xc0100000 | param_1) == 0) {\n    return;\n  }\nLAB_08006278:\n  nan(PTR_DAT_0800642c);\n  return;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__aeabi_i2d", 
                "__subdf3", 
                "scalbn", 
                "__ieee754_sqrt", 
                "__aeabi_dadd", 
                "__aeabi_dcmple", 
                "nan", 
                "__muldf3", 
                "__aeabi_dcmpgt", 
                "fabs"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08006228", 
            "calling": [
                "pow"
            ], 
            "imported": false, 
            "current_name": "__ieee754_pow"
        }, 
        "main": {
            "renaming": {}, 
            "code": "\nint main(void)\n\n{\n  startForkserver(0);\n  setup();\n  do {\n    HAL_IncTick();\n    taskScheduler();\n  } while( true );\n}\n\n", 
            "called": [
                "setup", 
                "startForkserver", 
                "taskScheduler", 
                "HAL_IncTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080041ae", 
            "calling": [
                "Reset_Handler"
            ], 
            "imported": false, 
            "current_name": "main"
        }, 
        "_free_r": {
            "renaming": {}, 
            "code": "\nvoid _free_r(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined *puVar1;\n  int **extraout_r1;\n  int **ppiVar2;\n  int **ppiVar3;\n  int *piVar4;\n  int **ppiVar5;\n  int **ppiVar6;\n  int **ppiVar7;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  ppiVar7 = (int **)(param_2 + -4);\n  if (*(int *)(param_2 + -4) < 0) {\n    ppiVar7 = (int **)((int)ppiVar7 + *(int *)(param_2 + -4));\n  }\n  __malloc_lock();\n  puVar1 = PTR___malloc_free_list_08005710;\n  ppiVar5 = *(int ***)PTR___malloc_free_list_08005710;\n  if (ppiVar5 == (int **)0x0) {\n    ppiVar7[1] = (int *)0x0;\n    *(int ***)puVar1 = ppiVar7;\n    ppiVar2 = extraout_r1;\n    ppiVar3 = (int **)puVar1;\n  }\n  else if (ppiVar7 < ppiVar5) {\n    ppiVar2 = (int **)*ppiVar7;\n    ppiVar3 = (int **)((int)ppiVar7 + (int)ppiVar2);\n    if (ppiVar5 == ppiVar3) {\n      piVar4 = *ppiVar5;\n      ppiVar5 = (int **)ppiVar5[1];\n      ppiVar3 = (int **)((int)piVar4 + (int)ppiVar2);\n      *ppiVar7 = (int *)ppiVar3;\n    }\n    ppiVar7[1] = (int *)ppiVar5;\n    *(int ***)puVar1 = ppiVar7;\n  }\n  else {\n    do {\n      ppiVar6 = ppiVar5;\n      ppiVar3 = (int **)ppiVar6[1];\n      if (ppiVar3 == (int **)0x0) break;\n      ppiVar5 = ppiVar3;\n    } while (ppiVar3 <= ppiVar7);\n    ppiVar2 = (int **)*ppiVar6;\n    if ((int **)((int)ppiVar6 + (int)ppiVar2) == ppiVar7) {\n      ppiVar2 = (int **)((int)ppiVar2 + (int)*ppiVar7);\n      *ppiVar6 = (int *)ppiVar2;\n      if (ppiVar3 == (int **)((int)ppiVar6 + (int)ppiVar2)) {\n        piVar4 = *ppiVar3;\n        ppiVar3 = (int **)ppiVar3[1];\n        ppiVar2 = (int **)((int)ppiVar2 + (int)piVar4);\n        *ppiVar6 = (int *)ppiVar2;\n        ppiVar6[1] = (int *)ppiVar3;\n      }\n    }\n    else if (ppiVar7 < (int **)((int)ppiVar6 + (int)ppiVar2)) {\n      *param_1 = 0xc;\n    }\n    else {\n      ppiVar2 = (int **)((int)ppiVar7 + (int)*ppiVar7);\n      if (ppiVar3 == ppiVar2) {\n        piVar4 = *ppiVar3;\n        ppiVar3 = (int **)ppiVar3[1];\n        ppiVar2 = (int **)((int)piVar4 + (int)*ppiVar7);\n        *ppiVar7 = (int *)ppiVar2;\n      }\n      ppiVar7[1] = (int *)ppiVar3;\n      ppiVar6[1] = (int *)ppiVar7;\n    }\n  }\n  __malloc_unlock(param_1,ppiVar2,ppiVar3,param_4);\n  return;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800567c", 
            "calling": [
                "__ssputs_r", 
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "_free_r"
        }, 
        "__ieee754_atan2": {
            "renaming": {}, 
            "code": "\nundefined8 __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  undefined4 uVar1;\n  undefined4 extraout_r1;\n  int extraout_r1_00;\n  undefined4 unaff_r4;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  \n  uVar7 = CONCAT44(DAT_08006204,DAT_08006200);\n  uVar6 = param_4 & 0x7fffffff;\n  if ((DAT_08006220 < (uVar6 | (-param_3 | param_3) >> 0x1f)) ||\n     (uVar4 = param_2 & 0x7fffffff, DAT_08006220 < (uVar4 | (-param_1 | param_1) >> 0x1f))) {\n    uVar7 = __aeabi_dadd(param_1,param_2);\n    return uVar7;\n  }\n  if ((param_4 + 0xc0100000 | param_3) == 0) {\n    atan(param_5);\n    return CONCAT44(extraout_r1,param_1);\n  }\n  uVar3 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n  if ((param_1 | uVar4) == 0) {\n    if (uVar3 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (uVar3 != 3) {\n      return CONCAT44(param_2,param_1);\n    }\n  }\n  else {\n    if ((param_3 | uVar6) != 0) {\n      if (uVar6 == DAT_08006220) {\n        if (uVar4 == uVar6) {\n          if (uVar3 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (uVar3 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (uVar3 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (uVar3 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (uVar3 == 3) {\n          return uVar7;\n        }\n        if (uVar3 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (uVar4 != DAT_08006220) {\n        iVar5 = (int)(uVar4 - uVar6) >> 0x14;\n        uVar1 = DAT_08006210;\n        iVar2 = DAT_08006214;\n        if (iVar5 < 0x3d) {\n          if (((int)param_4 < 0) && (iVar5 + 0x3c < 0 != SCARRY4(iVar5,0x3c))) {\n            uVar1 = 0;\n            iVar2 = 0;\n          }\n          else {\n            uVar1 = __divdf3(param_1,param_2);\n            fabs((double)CONCAT44(unaff_r4,param_4));\n            atan((double)CONCAT44(unaff_r4,param_4));\n            iVar2 = extraout_r1_00;\n          }\n        }\n        if (uVar3 != 1) {\n          if (uVar3 == 2) {\n            uVar8 = __subdf3(uVar1,iVar2,DAT_08006208,DAT_0800620c);\n            uVar7 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (uVar3 == 0) {\n              return CONCAT44(iVar2,uVar1);\n            }\n            uVar7 = __subdf3(uVar1,iVar2,DAT_08006208,DAT_0800620c);\n            uVar8 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          uVar7 = __subdf3((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),(int)uVar8,\n                           (int)((ulonglong)uVar8 >> 0x20));\n          return uVar7;\n        }\n        return CONCAT44(iVar2 + -0x80000000,uVar1);\n      }\n    }\n    uVar7 = CONCAT44(DAT_08006214,DAT_08006210);\n    if ((int)param_2 < 0) {\n      uVar7 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return uVar7;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__subdf3", 
                "atan", 
                "__aeabi_dadd", 
                "fabs"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08006070", 
            "calling": [
                "atan2"
            ], 
            "imported": false, 
            "current_name": "__ieee754_atan2"
        }, 
        "atan": {
            "renaming": {}, 
            "code": "\ndouble atan(double __x)\n\n{\n  int in_r0;\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint in_r1;\n  undefined4 extraout_r1;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 in_r3;\n  undefined4 unaff_r4;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  double in_d0;\n  double extraout_d0;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  \n  uVar11 = CONCAT44(in_r1,in_r0);\n  uVar8 = in_r1 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (in_r0 != 0)))) {\n      in_d0 = (double)__aeabi_dadd();\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      fabs((double)CONCAT44(unaff_r4,in_r3));\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar11 = __divdf3(0,DAT_0800707c,in_r0,extraout_r1);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = __subdf3();\n          uVar10 = __muldf3(in_r0,extraout_r1,0,DAT_08007078);\n          uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800706c);\n          uVar11 = __divdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar10,\n                            (int)((ulonglong)uVar10 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = __subdf3();\n        uVar10 = __aeabi_dadd(in_r0,extraout_r1,0,DAT_0800706c);\n        uVar11 = __divdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar10,\n                          (int)((ulonglong)uVar10 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = __aeabi_dadd();\n        uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar10 = __aeabi_dadd(in_r0,extraout_r1,0,0x40000000);\n        uVar11 = __divdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar10,\n                          (int)((ulonglong)uVar10 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar10 = __aeabi_dadd(in_r0,in_r1,DAT_08006ff8,DAT_08006ffc);\n        iVar1 = __aeabi_dcmpgt((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return extraout_d0;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar6 = (undefined4)uVar11;\n    uVar11 = __muldf3(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = __muldf3(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = __muldf3(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = __muldf3(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = __aeabi_dadd((int)uVar11,uVar2,(int)uVar10,uVar3);\n      uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      in_d0 = (double)__subdf3(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = __aeabi_dadd((int)uVar11,uVar2,(int)uVar10,uVar3);\n      uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_atanhi_08007080 + iVar1 * 8);\n      uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                        *(undefined4 *)(PTR_atanlo_08007084 + iVar1 * 8),\n                        *(undefined4 *)((int)(PTR_atanlo_08007084 + iVar1 * 8) + 4));\n      uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      in_d0 = (double)__subdf3(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n  }\n  return in_d0;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__subdf3", 
                "__aeabi_dadd", 
                "__muldf3", 
                "fabs", 
                "__aeabi_dcmpgt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08006d68", 
            "calling": [
                "__ieee754_atan2"
            ], 
            "imported": false, 
            "current_name": "atan"
        }, 
        "__aeabi_i2d": {
            "renaming": {}, 
            "code": "\nulonglong __aeabi_i2d(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint in_r12;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar6 = param_1 & 0x80000000;\n  uVar2 = param_1;\n  if ((int)uVar6 < 0) {\n    uVar2 = -param_1;\n  }\n  uVar1 = 0;\n  iVar4 = count_leading_zeroes(uVar2);\n  uVar5 = iVar4 + 0x15;\n  bVar9 = SBORROW4(uVar5,0x20);\n  uVar3 = iVar4 - 0xb;\n  bVar7 = (int)uVar3 < 0;\n  bVar8 = uVar3 == 0;\n  if ((int)uVar5 < 0x20) {\n    bVar9 = SCARRY4(uVar3,0xc);\n    iVar4 = iVar4 + 1;\n    bVar7 = iVar4 < 0;\n    bVar8 = iVar4 == 0;\n    uVar3 = uVar5;\n    if (!bVar8 && bVar7 == bVar9) {\n      uVar1 = uVar2 << (uVar5 & 0xff);\n      uVar2 = uVar2 >> (0xcU - iVar4 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    in_r12 = 0x20 - uVar3;\n  }\n  uVar2 = uVar2 << (uVar3 & 0xff);\n  if (bVar8 || bVar7 != bVar9) {\n    uVar2 = uVar2 | 0U >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar7 != bVar9) {\n    uVar1 = 0 << (uVar3 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar5 < 0x433) {\n    return CONCAT44(uVar2 + (0x432 - uVar5) * 0x100000 | uVar6,uVar1);\n  }\n  uVar3 = ~(0x432 - uVar5);\n  if (0x1e < (int)uVar3) {\n    return CONCAT44(param_1,uVar2 >> (uVar3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  iVar4 = uVar3 - 0x13;\n  if (iVar4 == 0 || iVar4 < 0 != SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 = uVar3 + 1;\n    return CONCAT44(uVar6 | uVar2 >> (uVar3 & 0xff),\n                    uVar1 >> (uVar3 & 0xff) | uVar2 << (0x20 - uVar3 & 0xff));\n  }\n  return CONCAT44(param_1,uVar1 >> (0x20 - (0xcU - iVar4) & 0xff) | uVar2 << (0xcU - iVar4 & 0xff))\n         & 0x80000000ffffffff;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000404", 
            "calling": [
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "__aeabi_i2d"
        }, 
        "__aeabi_f2iz": {
            "renaming": {}, 
            "code": "\nuint __aeabi_f2iz(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 << 1 < 0x7f000000) {\n    return 0;\n  }\n  uVar1 = (param_1 << 1) >> 0x18;\n  uVar2 = 0x9e - uVar1;\n  if (uVar1 < 0x9f && uVar2 != 0) {\n    uVar1 = (param_1 << 8 | 0x80000000) >> (uVar2 & 0xff);\n    if ((param_1 & 0x80000000) != 0) {\n      uVar1 = -uVar1;\n    }\n    return uVar1;\n  }\n  if ((uVar2 == 0xffffff9f) && ((param_1 & 0x7fffff) != 0)) {\n    return 0;\n  }\n  param_1 = param_1 & 0x80000000;\n  if (param_1 == 0) {\n    param_1 = 0x7fffffff;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001078", 
            "calling": [
                "MS5611_Update", 
                "AHRS_ComputeAngles", 
                "Motor_DistributeSpeed"
            ], 
            "imported": false, 
            "current_name": "__aeabi_f2iz"
        }, 
        "Motor2_SetPWM": {
            "renaming": {}, 
            "code": "\nvoid Motor2_SetPWM(int pwm)\n\n{\n  *(int *)(*(int *)PTR_htim4_08003fd8 + 0x3c) = pwm;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003fd0", 
            "calling": [
                "Motor_StopAll", 
                "Motor_SetSpeed"
            ], 
            "imported": false, 
            "current_name": "Motor2_SetPWM"
        }, 
        "HAL_GPIO_Init": {
            "renaming": {}, 
            "code": "\nvoid HAL_GPIO_Init(GPIO_TypeDef *GPIOx,GPIO_InitTypeDef *GPIO_Init)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint32_t uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  GPIO_TypeDef *unaff_r10;\n  int iVar11;\n  uint32_t tmpreg;\n  \n  uVar3 = DAT_08001418;\n  uVar2 = DAT_08001414;\n  puVar1 = DAT_08001404;\n  uVar4 = 0;\n  uVar8 = 0;\n  do {\n    uVar9 = 1 << (uVar8 & 0xff);\n    uVar5 = uVar9 & GPIO_Init->Pin;\n    if (uVar9 == uVar5) {\n      uVar6 = GPIO_Init->Mode;\n      if (uVar6 == 0x12) {\n        uVar4 = GPIO_Init->Speed + 0xc;\n      }\n      else if (uVar6 < 0x13) {\n        if (uVar6 == 2) {\n          uVar4 = GPIO_Init->Speed + 8;\n        }\n        else if (uVar6 < 3) {\n          if (uVar6 == 0) goto LAB_080013be;\n          if (uVar6 == 1) {\n            uVar4 = GPIO_Init->Speed;\n          }\n        }\n        else if (uVar6 == 3) {\n          uVar4 = 0;\n        }\n        else if (uVar6 == 0x11) {\n          uVar4 = GPIO_Init->Speed + 4;\n        }\n      }\n      else {\n        if (uVar6 != DAT_08001410) {\n          if (DAT_08001410 < uVar6) {\n            if ((uVar6 != uVar2) && (uVar10 = DAT_08001420, uVar6 != uVar3)) goto LAB_080013b8;\n          }\n          else if (uVar6 != DAT_0800141c) {\n            uVar10 = DAT_0800141c + 0x10000;\nLAB_080013b8:\n            if (uVar6 != uVar10) goto LAB_080012a8;\n          }\n        }\nLAB_080013be:\n        uVar4 = GPIO_Init->Pull;\n        if (uVar4 == 0) {\n          uVar4 = 4;\n        }\n        else {\n          if (uVar4 == 1) {\n            GPIOx->BSRR = uVar9;\n          }\n          if (uVar4 != 1) {\n            GPIOx->BRR = uVar9;\n          }\n          uVar4 = 8;\n        }\n      }\nLAB_080012a8:\n      if (uVar5 < 0x100) {\n        uVar9 = GPIOx->CRL;\n        uVar6 = uVar8 << 2;\n        unaff_r10 = GPIOx;\n      }\n      else {\n        uVar9 = GPIOx->CRH;\n        uVar6 = (uVar8 + 0x3ffffff8) * 4;\n      }\n      if (0xff < uVar5) {\n        unaff_r10 = (GPIO_TypeDef *)&GPIOx->CRH;\n      }\n      unaff_r10->CRL = uVar9 & ~(0xf << (uVar6 & 0xff)) | uVar4 << (uVar6 & 0xff);\n      unaff_r10 = (GPIO_TypeDef *)GPIO_Init->Mode;\n      if (((uint)unaff_r10 & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        iVar11 = (uVar8 & 3) << 2;\n        if (GPIOx == DAT_0800140c) {\n          iVar7 = 0;\n        }\n        else if (GPIOx == (GPIO_TypeDef *)&DAT_0800140c[0x24].BSRR) {\n          iVar7 = 1;\n        }\n        else if (GPIOx == (GPIO_TypeDef *)&DAT_0800140c[0x49].CRH) {\n          iVar7 = 2;\n        }\n        else if (GPIOx == (GPIO_TypeDef *)&DAT_0800140c[0x6d].BRR) {\n          iVar7 = 3;\n        }\n        else {\n          iVar7 = 4;\n        }\n        *(uint *)(&DAT_40010008 + (uVar8 & 0xfffffffc)) =\n             iVar7 << iVar11 | *(uint *)(&DAT_40010008 + (uVar8 & 0xfffffffc)) & ~(0xf << iVar11);\n        if (((uint)unaff_r10 & 0x10000) == 0) {\n          uVar9 = *puVar1 & ~uVar5;\n        }\n        else {\n          uVar9 = *puVar1 | uVar5;\n        }\n        *puVar1 = uVar9;\n        if (((uint)unaff_r10 & 0x20000) == 0) {\n          uVar9 = puVar1[1] & ~uVar5;\n        }\n        else {\n          uVar9 = puVar1[1] | uVar5;\n        }\n        puVar1[1] = uVar9;\n        if (((uint)unaff_r10 & 0x100000) == 0) {\n          uVar9 = puVar1[2] & ~uVar5;\n        }\n        else {\n          uVar9 = puVar1[2] | uVar5;\n        }\n        puVar1[2] = uVar9;\n        if (((uint)unaff_r10 & 0x200000) == 0) {\n          uVar5 = puVar1[3] & ~uVar5;\n        }\n        else {\n          uVar5 = uVar5 | puVar1[3];\n        }\n        puVar1[3] = uVar5;\n      }\n    }\n    uVar8 = uVar8 + 1;\n    if (uVar8 == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001264", 
            "calling": [
                "HAL_UART_MspInit", 
                "HAL_TIM_MspPostInit", 
                "Peripherals_Init", 
                "HAL_I2C_MspInit"
            ], 
            "imported": false, 
            "current_name": "HAL_GPIO_Init"
        }, 
        "I2C_WaitOnRXNEFlagUntilTimeout": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  I2C_TypeDef *pIVar3;\n  \n  uVar1 = HAL_GetTick();\n  while( true ) {\n    pIVar3 = hi2c->Instance;\n    if ((pIVar3->SR1 & 0x40) != 0) {\n      return HAL_OK;\n    }\n    if ((int)(pIVar3->SR1 << 0x1b) < 0) break;\n    if ((Timeout == 0) || (uVar2 = HAL_GetTick(), Timeout < uVar2 - uVar1)) {\n      hi2c->ErrorCode = hi2c->ErrorCode | 0x20;\n      hi2c->State = HAL_I2C_STATE_READY;\n      hi2c->Lock = HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  pIVar3->SR1 = pIVar3->SR1 & 0xffffffef;\n  hi2c->ErrorCode = 0;\n  hi2c->Lock = HAL_UNLOCKED;\n  hi2c->State = HAL_I2C_STATE_READY;\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080016f4", 
            "calling": [
                "HAL_I2C_Mem_Read"
            ], 
            "imported": false, 
            "current_name": "I2C_WaitOnRXNEFlagUntilTimeout"
        }, 
        "__aeabi_fcmplt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmplt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfcmpeq();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001028", 
            "calling": [
                "AHRS_GetYaw", 
                "PID_Compute", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "__aeabi_fcmplt"
        }, 
        "__gesf2": {
            "renaming": {}, 
            "code": "\nuint __gesf2(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 = param_1 * 2;\n  uVar3 = param_2 * 2;\n  if (((int)uVar2 >> 0x18 == -1 || (int)uVar3 >> 0x18 == -1) &&\n     ((((int)uVar2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) ||\n      (((int)uVar3 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))) {\n    return 0xffffffff;\n  }\n  uVar4 = uVar2 | param_2 & 0x7fffffff;\n  bVar5 = uVar4 == 0;\n  if (!bVar5) {\n    uVar4 = param_1 ^ param_2;\n    bVar5 = uVar4 == 0;\n  }\n  bVar1 = -1 < (int)uVar4;\n  if (bVar1) {\n    param_1 = uVar2 + param_2 * -2;\n    bVar5 = param_1 == 0;\n  }\n  if ((bVar1 && uVar3 <= uVar2) && !bVar5) {\n    param_1 = (int)param_2 >> 0x1f;\n  }\n  if (!bVar1 || uVar3 > uVar2) {\n    param_1 = ~((int)param_2 >> 0x1f);\n  }\n  if (!bVar5) {\n    param_1 = param_1 | 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000f8c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__gesf2"
        }, 
        "__aeabi_fcmple": {
            "renaming": {}, 
            "code": "\nbool __aeabi_fcmple(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n", 
            "called": [
                "__aeabi_cfcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800103c", 
            "calling": [], 
            "imported": false, 
            "current_name": "__aeabi_fcmple"
        }, 
        "HAL_Init": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_Init(void)\n\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  HAL_NVIC_SetPriorityGrouping(3);\n  HAL_InitTick(0);\n  HAL_MspInit();\n  return HAL_OK;\n}\n\n", 
            "called": [
                "HAL_InitTick", 
                "HAL_NVIC_SetPriorityGrouping", 
                "HAL_MspInit"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001128", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_Init"
        }, 
        "HAL_SYSTICK_IRQHandler": {
            "renaming": {}, 
            "code": "\nvoid HAL_SYSTICK_IRQHandler(void)\n\n{\n  HAL_SYSTICK_Callback();\n  return;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_Callback"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800125a", 
            "calling": [
                "SysTick_Handler"
            ], 
            "imported": false, 
            "current_name": "HAL_SYSTICK_IRQHandler"
        }, 
        "HAL_RCC_OscConfig": {
            "renaming": {}, 
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nHAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef *RCC_OscInitStruct)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  int iVar5;\n  uint uVar6;\n  uint32_t tmpreg;\n  \n  puVar1 = DAT_08001e70;\n  if ((int)(RCC_OscInitStruct->OscillatorType << 0x1f) < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar6 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar6 & 0x1f)) << 0x1f) < 0) &&\n         (RCC_OscInitStruct->HSEState == 0)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      uVar3 = RCC_OscInitStruct->HSEState;\n      if (uVar3 == 0x10000) {\nLAB_08001c1e:\n        uVar6 = *puVar1 | 0x10000;\n      }\n      else {\n        if (uVar3 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          uVar3 = HAL_GetTick();\n          while (uVar6 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f) < 0) {\n            uVar4 = HAL_GetTick();\n            if (100 < uVar4 - uVar3) {\n              return HAL_TIMEOUT;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (uVar3 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar6 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar6;\n      uVar3 = HAL_GetTick();\n      while (uVar6 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f))\n      {\n        uVar4 = HAL_GetTick();\n        if (100 < uVar4 - uVar3) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if ((int)(RCC_OscInitStruct->OscillatorType << 0x1e) < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar6 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar6 & 0x1f)) << 0x1f) < 0) &&\n         (RCC_OscInitStruct->HSIState != 1)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      if (RCC_OscInitStruct->HSIState == 0) {\n        iVar5 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar5 * 4 + 0x42420000) = 0;\n        uVar3 = HAL_GetTick();\n        while (uVar6 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f) < 0) {\n          uVar4 = HAL_GetTick();\n          if (2 < uVar4 - uVar3) {\n            return HAL_TIMEOUT;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar5 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar5 * 4 + 0x42420000) = 1;\n      uVar3 = HAL_GetTick();\n      while (uVar6 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f)) {\n        uVar4 = HAL_GetTick();\n        if (2 < uVar4 - uVar3) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    uVar6 = count_leading_zeroes(0x1f000000);\n    *puVar1 = RCC_OscInitStruct->HSICalibrationValue << (uVar6 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if ((int)(RCC_OscInitStruct->OscillatorType << 0x1c) < 0) {\n    if (RCC_OscInitStruct->LSIState == 0) {\n      iVar5 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar5 * 4) = 0;\n      uVar3 = HAL_GetTick();\n      while (uVar6 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar6 & 0x1f)) << 0x1f) < 0) {\n        uVar4 = HAL_GetTick();\n        if (2 < uVar4 - uVar3) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      iVar5 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar5 * 4) = 1;\n      uVar3 = HAL_GetTick();\n      while (uVar6 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar6 & 0x1f)) << 0x1f)) {\n        uVar4 = HAL_GetTick();\n        if (2 < uVar4 - uVar3) {\n          return HAL_TIMEOUT;\n        }\n      }\n      HAL_Delay(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < (int)(RCC_OscInitStruct->OscillatorType << 0x1d)) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  uVar3 = HAL_GetTick();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    uVar4 = HAL_GetTick();\n    if (100 < uVar4 - uVar3) {\n      return HAL_TIMEOUT;\n    }\n  }\n  uVar3 = RCC_OscInitStruct->LSEState;\n  if (uVar3 == 1) {\nLAB_08001e1a:\n    uVar6 = puVar1[8] | 1;\n  }\n  else {\n    if (uVar3 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      uVar3 = HAL_GetTick();\n      while (uVar6 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar6 & 0x1f)) << 0x1f) < 0) {\n        uVar4 = HAL_GetTick();\n        if (5000 < uVar4 - uVar3) {\n          return HAL_TIMEOUT;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (uVar3 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar6 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar6;\n  uVar3 = HAL_GetTick();\n  while (uVar6 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar6 & 0x1f)) << 0x1f)\n        ) {\n    uVar4 = HAL_GetTick();\n    if (5000 < uVar4 - uVar3) {\n      return HAL_TIMEOUT;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  uVar3 = (RCC_OscInitStruct->PLL).PLLState;\n  if (uVar3 == 0) {\n    return HAL_OK;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (uVar3 != 2) {\n      iVar5 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar5 * 4 + 0x42420000) = 0;\n      uVar3 = HAL_GetTick();\n      do {\n        uVar6 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f)) {\n          return HAL_OK;\n        }\n        uVar4 = HAL_GetTick();\n      } while (uVar4 - uVar3 < 3);\n      return HAL_TIMEOUT;\n    }\n    iVar5 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar5 * 4 + 0x42420000) = 0;\n    uVar3 = HAL_GetTick();\n    do {\n      uVar6 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f)) {\n        uVar6 = (RCC_OscInitStruct->PLL).PLLSource;\n        if (uVar6 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | RCC_OscInitStruct->HSEPredivValue;\n        }\n        puVar1[1] = uVar6 | (RCC_OscInitStruct->PLL).PLLMUL | puVar1[1] & 0xffc2ffff;\n        iVar5 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar5 * 4 + 0x42420000) = 1;\n        uVar3 = HAL_GetTick();\n        do {\n          uVar6 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar6 & 0x1f)) << 0x1f) < 0) {\n            return HAL_OK;\n          }\n          uVar4 = HAL_GetTick();\n        } while (uVar4 - uVar3 < 3);\n        return HAL_TIMEOUT;\n      }\n      uVar4 = HAL_GetTick();\n    } while (uVar4 - uVar3 < 3);\n    return HAL_TIMEOUT;\n  }\n  return HAL_ERROR;\n}\n\n", 
            "called": [
                "HAL_Delay", 
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001b58", 
            "calling": [
                "SystemClock_Config"
            ], 
            "imported": false, 
            "current_name": "HAL_RCC_OscConfig"
        }, 
        "__aeabi_dcmplt": {
            "renaming": {}, 
            "code": "\nbool __aeabi_dcmplt(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdcmpeq();\n  return in_CY == '\\0';\n}\n\n", 
            "called": [
                "__aeabi_cdcmpeq"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080009b4", 
            "calling": [
                "pow", 
                "sqrt"
            ], 
            "imported": false, 
            "current_name": "__aeabi_dcmplt"
        }, 
        "memmove": {
            "renaming": {}, 
            "code": "\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  \n  puVar3 = (undefined *)((int)__src + __n);\n  if ((__src < __dest) && (__dest < puVar3)) {\n    puVar1 = (undefined *)((int)__dest + __n);\n    iVar2 = __n - (int)puVar3;\n    while (puVar3 + iVar2 != (undefined *)0x0) {\n      puVar3 = puVar3 + -1;\n      puVar1 = puVar1 + -1;\n      *puVar1 = *puVar3;\n    }\n    return __dest;\n  }\n  puVar1 = (undefined *)((int)__dest + -1);\n  for (; (undefined *)__src != puVar3; __src = (void *)((int)__src + 1)) {\n    puVar1 = puVar1 + 1;\n    *puVar1 = *__src;\n                    /* WARNING: Load size is inaccurate */\n  }\n  return __dest;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005646", 
            "calling": [
                "__ssputs_r"
            ], 
            "imported": false, 
            "current_name": "memmove"
        }, 
        "CB_Write": {
            "renaming": {}, 
            "code": "\nint CB_Write(CircularBuffer *cb,uint8_t data)\n\n{\n  cb->size = cb->size + 1;\n  cb->buffer[cb->tail] = data;\n  cb->tail = cb->tail + 1 & 0x7ff;\n  return 1;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003ec8", 
            "calling": [
                "HAL_UART_RxCpltCallback"
            ], 
            "imported": false, 
            "current_name": "CB_Write"
        }, 
        "AHRS_ComputeAngles": {
            "renaming": {}, 
            "code": "\nvoid AHRS_ComputeAngles(void)\n\n{\n  short sVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined2 uVar5;\n  uint32_t uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  float _deltat;\n  float ax;\n  float ay;\n  float az;\n  float gx;\n  float gy;\n  float gz;\n  float mx;\n  float my;\n  \n  MPU9250_ReadAccelData();\n  MPU9250_ReadGyroData();\n  AK8963_ReadData();\n  uVar6 = micros();\n  puVar3 = PTR_AHRS_timeNow_08003004;\n  puVar2 = PTR_AHRS_lastUpdate_08003000;\n  iVar8 = *(int *)PTR_AHRS_lastUpdate_08003000;\n  *(uint32_t *)PTR_AHRS_timeNow_08003004 = uVar6;\n  uVar7 = __floatunsisf(uVar6 - iVar8);\n  _deltat = (float)__aeabi_fdiv(uVar7,DAT_08003008);\n  MadgwickSetDelta(_deltat);\n  puVar4 = PTR_accelData_0800300c;\n  *(undefined4 *)puVar2 = *(undefined4 *)puVar3;\n  MadgwickQuaternionUpdate\n            (ax,ay,az,gx,gy,gz,mx,my,(float)(*(int *)(puVar4 + 4) + -0x80000000),\n             (float *)(*(int *)puVar4 + -0x80000000));\n  puVar4 = PTR_msp_txf_attitude_08003024;\n  puVar3 = PTR_msp_txf_raw_imu_08003020;\n  puVar2 = PTR_accelRaw_0800301c;\n  *(short *)PTR_msp_txf_raw_imu_08003020 = (short)((uint)(int)*(short *)PTR_accelRaw_0800301c / 100)\n  ;\n  sVar1 = *(short *)(puVar2 + 2);\n  *(short *)(puVar3 + 4) = (short)((uint)(int)*(short *)(puVar2 + 4) / 100);\n  puVar2 = PTR_gyroRaw_08003028;\n  *(short *)(puVar3 + 2) = (short)((uint)(int)sVar1 / 100);\n  *(undefined2 *)(puVar3 + 6) = *(undefined2 *)puVar2;\n  uVar5 = *(undefined2 *)(puVar2 + 4);\n  *(undefined2 *)(puVar3 + 8) = *(undefined2 *)(puVar2 + 2);\n  *(undefined2 *)(puVar3 + 10) = uVar5;\n  puVar2 = PTR_magRaw_0800302c;\n  *(undefined2 *)(puVar3 + 0xc) = *(undefined2 *)PTR_magRaw_0800302c;\n  uVar5 = *(undefined2 *)(puVar2 + 4);\n  *(undefined2 *)(puVar3 + 0xe) = *(undefined2 *)(puVar2 + 2);\n  *(undefined2 *)(puVar3 + 0x10) = uVar5;\n  AHRS_GetRoll();\n  __aeabi_fmul();\n  uVar5 = __aeabi_f2iz();\n  *(undefined2 *)puVar4 = uVar5;\n  AHRS_GetPitch();\n  __aeabi_fmul();\n  uVar5 = __aeabi_f2iz();\n  *(undefined2 *)(puVar4 + 2) = uVar5;\n  AHRS_GetYaw();\n  uVar5 = __aeabi_f2iz();\n  *(undefined2 *)(puVar4 + 4) = uVar5;\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fdiv", 
                "AHRS_GetYaw", 
                "AHRS_GetRoll", 
                "MPU9250_ReadAccelData", 
                "__aeabi_fmul", 
                "MadgwickQuaternionUpdate", 
                "MPU9250_ReadGyroData", 
                "MadgwickSetDelta", 
                "__aeabi_f2iz", 
                "__floatunsisf", 
                "AHRS_GetPitch", 
                "AK8963_ReadData", 
                "micros"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002f28", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "AHRS_ComputeAngles"
        }, 
        "millis": {
            "renaming": {}, 
            "code": "\nuint32_t millis(void)\n\n{\n  return *(uint32_t *)PTR_uwTick_08001164;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f5c", 
            "calling": [
                "MS5611_Update", 
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "millis"
        }, 
        "MSP_SendRawIMU": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendRawIMU(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 *puVar3;\n  undefined4 *puVar4;\n  undefined4 local_24 [2];\n  undefined2 local_1c [6];\n  \n  puVar3 = local_24;\n  puVar4 = (undefined4 *)PTR_msp_txf_raw_imu_080043ec;\n  do {\n    uVar1 = *puVar4;\n    uVar2 = puVar4[1];\n    puVar4 = puVar4 + 2;\n    *puVar3 = uVar1;\n    puVar3[1] = uVar2;\n    puVar3 = puVar3 + 2;\n  } while (puVar4 != (undefined4 *)(PTR_msp_txf_raw_imu_080043ec + 0x10));\n  *(undefined2 *)puVar3 = *(undefined2 *)puVar4;\n  MSP_SendFrame('f',(uint8_t *)local_24,0x12);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080043bc", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendRawIMU"
        }, 
        "_malloc_r": {
            "renaming": {}, 
            "code": "\nuint _malloc_r(undefined4 *param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  uint *puVar3;\n  int iVar4;\n  uint *puVar5;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  \n  uVar8 = (param_2 + 3 & 0xfffffffc) + 8;\n  if (uVar8 < 0xc) {\n    uVar8 = 0xc;\n  }\n  if (((int)uVar8 < 0) || (uVar8 < param_2)) {\n    *param_1 = 0xc;\n  }\n  else {\n    __malloc_lock();\n    puVar1 = PTR___malloc_sbrk_start_080057cc;\n    puVar3 = *(uint **)PTR___malloc_free_list_080057c8;\n    puVar7 = *(uint **)PTR___malloc_free_list_080057c8;\n    while (puVar5 = puVar3, puVar5 != (uint *)0x0) {\n      uVar6 = *puVar5 - uVar8;\n      if (-1 < (int)uVar6) {\n        if (uVar6 < 0xc) {\n          if (puVar7 == puVar5) {\n            uVar8 = puVar7[1];\n            *(uint *)PTR___malloc_free_list_080057c8 = uVar8;\n          }\n          else {\n            uVar8 = puVar5[1];\n          }\n          if (puVar7 != puVar5) {\n            puVar7[1] = uVar8;\n            puVar7 = puVar5;\n          }\n        }\n        else {\n          *puVar5 = uVar6;\n          *(uint *)((int)puVar5 + uVar6) = uVar8;\n          puVar7 = (uint *)((int)puVar5 + uVar6);\n        }\n        goto LAB_08005778;\n      }\n      puVar7 = puVar5;\n      puVar3 = (uint *)puVar5[1];\n    }\n    if (*(int *)PTR___malloc_sbrk_start_080057cc == 0) {\n      uVar2 = _sbrk_r(param_1);\n      *(undefined4 *)puVar1 = uVar2;\n    }\n    puVar3 = (uint *)_sbrk_r(param_1,uVar8);\n    if ((puVar3 != (uint *)0xffffffff) &&\n       ((puVar7 = (uint *)((int)puVar3 + 3U & 0xfffffffc), puVar3 == puVar7 ||\n        (iVar4 = _sbrk_r(param_1,(int)puVar7 - (int)puVar3), iVar4 != -1)))) {\n      *puVar7 = uVar8;\nLAB_08005778:\n      __malloc_unlock(param_1);\n      uVar8 = (int)puVar7 + 0xbU & 0xfffffff8;\n      iVar4 = uVar8 - (int)(puVar7 + 1);\n      if (iVar4 != 0) {\n        *(int *)((int)puVar7 + iVar4) = -iVar4;\n        return uVar8;\n      }\n      return uVar8;\n    }\n    *param_1 = 0xc;\n    __malloc_unlock(param_1);\n  }\n  return 0;\n}\n\n", 
            "called": [
                "__malloc_lock", 
                "__malloc_unlock", 
                "_sbrk_r"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005714", 
            "calling": [
                "__ssputs_r", 
                "_svfiprintf_r", 
                "_realloc_r"
            ], 
            "imported": false, 
            "current_name": "_malloc_r"
        }, 
        "__ieee754_asin": {
            "renaming": {}, 
            "code": "\nulonglong __ieee754_asin(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 in_stack_ffffffc8;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = __subdf3(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = __divdf3((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = __muldf3(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = __muldf3(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = __aeabi_dadd((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = __muldf3(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = __muldf3(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = __muldf3(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n        uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n        uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = __divdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = __aeabi_dadd(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = __aeabi_dcmpgt((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    fabs((double)CONCAT44(param_2,in_stack_ffffffc8));\n    uVar10 = __subdf3(0,DAT_08005f98,param_1,extraout_r1);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = __muldf3(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = __muldf3(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = __subdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = __muldf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = __ieee754_sqrt(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = __divdf3((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = __aeabi_dadd((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = __divdf3((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = __aeabi_dadd(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = __muldf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = __muldf3(0,uVar6,0,uVar6);\n      uVar11 = __subdf3(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = __aeabi_dadd(uVar7,uVar6,0,uVar6);\n      uVar11 = __divdf3((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                        (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = __aeabi_dadd((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = __subdf3(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = __aeabi_dadd(0,uVar6,0,uVar6);\n      uVar11 = __subdf3(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = __subdf3((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = __subdf3(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n", 
            "called": [
                "__divdf3", 
                "__subdf3", 
                "__ieee754_sqrt", 
                "__aeabi_dadd", 
                "__muldf3", 
                "fabs", 
                "__aeabi_dcmpgt"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08005c70", 
            "calling": [
                "asin"
            ], 
            "imported": false, 
            "current_name": "__ieee754_asin"
        }, 
        "AHRS_GetYaw": {
            "renaming": {}, 
            "code": "\nfloat AHRS_GetYaw(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  float fVar3;\n  \n  uVar2 = *(undefined4 *)(PTR_AHRS_Angle_08002f18 + 8);\n  iVar1 = __aeabi_fcmpge(uVar2,DAT_08002f1c);\n  if ((iVar1 != 0) && (iVar1 = __aeabi_fcmplt(uVar2,DAT_08002f20), iVar1 != 0)) {\n    fVar3 = (float)__addsf3(uVar2,DAT_08002f20);\n    return fVar3;\n  }\n  fVar3 = (float)__aeabi_fsub(uVar2,DAT_08002f24);\n  return fVar3;\n}\n\n", 
            "called": [
                "__aeabi_fsub", 
                "__addsf3", 
                "__aeabi_fcmplt", 
                "__aeabi_fcmpge"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ee8", 
            "calling": [
                "AHRS_ComputeAngles", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "AHRS_GetYaw"
        }, 
        "HAL_GPIO_WritePin": {
            "renaming": {}, 
            "code": "\nvoid HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx,uint16_t GPIO_Pin,GPIO_PinState PinState)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 = (uint32_t)GPIO_Pin;\n  if (PinState == GPIO_PIN_RESET) {\n    uVar1 = uVar1 << 0x10;\n  }\n  GPIOx->BSRR = uVar1;\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08001424", 
            "calling": [
                "_Error_Handler", 
                "toggleLED", 
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_GPIO_WritePin"
        }, 
        "micros": {
            "renaming": {}, 
            "code": "\nuint32_t micros(void)\n\n{\n  return *(uint32_t *)PTR_uwTick_08001164;\n}\n\n", 
            "called": [
                "HAL_GetTick"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004f60", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "micros"
        }, 
        "scalbn": {
            "renaming": {}, 
            "code": "\ndouble scalbn(double __x,int __n)\n\n{\n  uint in_r1;\n  int extraout_r1;\n  int in_r2;\n  uint uVar1;\n  int iVar2;\n  undefined4 in_r3;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 unaff_r6;\n  double in_d0;\n  double dVar3;\n  \n  uVar1 = (in_r1 << 1) >> 0x15;\n  if (uVar1 == 0) {\n    if ((in_r1 & 0x7fffffff | __n) == 0) {\n      return in_d0;\n    }\n    in_d0 = (double)__muldf3(__n,in_r1,0,DAT_08007290);\n    if (in_r2 < DAT_08007294) goto LAB_0800722e;\n    uVar1 = ((uint)(extraout_r1 << 1) >> 0x15) - 0x36;\n  }\n  else if (uVar1 == 0x7ff) {\n    dVar3 = (double)__aeabi_dadd(__n,in_r1,__n);\n    return dVar3;\n  }\n  iVar2 = uVar1 + in_r2;\n  if (iVar2 < 0x7ff) {\n    if (0 < iVar2) {\n      return in_d0;\n    }\n    if (iVar2 + 0x35 < 0 == SCARRY4(iVar2,0x35)) goto LAB_0800722e;\n    if (in_r2 < 0xc351) {\n      copysign((double)CONCAT44(unaff_r4,in_r3),(double)CONCAT44(unaff_r6,unaff_r5));\n      goto LAB_0800722e;\n    }\n  }\n  copysign((double)CONCAT44(unaff_r4,in_r3),(double)CONCAT44(unaff_r6,unaff_r5));\nLAB_0800722e:\n  dVar3 = (double)__muldf3();\n  return dVar3;\n}\n\n", 
            "called": [
                "copysign", 
                "__aeabi_dadd", 
                "__muldf3"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080071c0", 
            "calling": [
                "__ieee754_pow"
            ], 
            "imported": false, 
            "current_name": "scalbn"
        }, 
        "MSP_SendMotor": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendMotor(void)\n\n{\n  undefined4 local_10;\n  undefined4 uStack_c;\n  \n  local_10 = *(undefined4 *)PTR_msp_txf_motor_0800440c;\n  uStack_c = *(undefined4 *)(PTR_msp_txf_motor_0800440c + 4);\n  MSP_SendFrame('h',(uint8_t *)&local_10,8);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080043f0", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendMotor"
        }, 
        "HAL_TIM_PWM_ConfigChannel": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef\nHAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,TIM_OC_InitTypeDef *sConfig,uint32_t Channel)\n\n{\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  uint uVar1;\n  int extraout_r1_02;\n  int iVar2;\n  uint32_t uVar3;\n  TIM_TypeDef *pTVar4;\n  \n  if (htim->Lock == HAL_LOCKED) {\n    return HAL_BUSY;\n  }\n  htim->State = HAL_TIM_STATE_BUSY;\n  htim->Lock = HAL_LOCKED;\n  switch(Channel) {\n  case 0:\n    TIM_OC1_SetConfig(htim->Instance,sConfig);\n    pTVar4 = htim->Instance;\n    uVar1 = *(uint *)(extraout_r1 + 0x10);\n    pTVar4->CCMR1 = pTVar4->CCMR1 | 8;\n    pTVar4->CCMR1 = pTVar4->CCMR1 & 0xfffffffb;\n    uVar3 = pTVar4->CCMR1 | uVar1;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    TIM_OC2_SetConfig(htim->Instance,sConfig);\n    pTVar4 = htim->Instance;\n    iVar2 = *(int *)(extraout_r1_00 + 0x10);\n    pTVar4->CCMR1 = pTVar4->CCMR1 | 0x800;\n    pTVar4->CCMR1 = pTVar4->CCMR1 & 0xfffffbff;\n    uVar3 = pTVar4->CCMR1 | iVar2 << 8;\n    break;\n  case 8:\n    TIM_OC3_SetConfig(htim->Instance,sConfig);\n    pTVar4 = htim->Instance;\n    uVar1 = *(uint *)(extraout_r1_01 + 0x10);\n    pTVar4->CCMR2 = pTVar4->CCMR2 | 8;\n    pTVar4->CCMR2 = pTVar4->CCMR2 & 0xfffffffb;\n    uVar3 = pTVar4->CCMR2 | uVar1;\n    goto LAB_080024fa;\n  case 0xc:\n    TIM_OC4_SetConfig(htim->Instance,sConfig);\n    pTVar4 = htim->Instance;\n    iVar2 = *(int *)(extraout_r1_02 + 0x10);\n    pTVar4->CCMR2 = pTVar4->CCMR2 | 0x800;\n    pTVar4->CCMR2 = pTVar4->CCMR2 & 0xfffffbff;\n    uVar3 = pTVar4->CCMR2 | iVar2 << 8;\nLAB_080024fa:\n    pTVar4->CCMR2 = uVar3;\n    goto switchD_0800247a_caseD_1;\n  }\n  pTVar4->CCMR1 = uVar3;\nswitchD_0800247a_caseD_1:\n  htim->State = HAL_TIM_STATE_READY;\n  htim->Lock = HAL_UNLOCKED;\n  return HAL_OK;\n}\n\n", 
            "called": [
                "TIM_OC1_SetConfig", 
                "TIM_OC2_SetConfig", 
                "TIM_OC3_SetConfig", 
                "TIM_OC4_SetConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x0800245c", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_ConfigChannel"
        }, 
        "MS5611_Update": {
            "renaming": {}, 
            "code": "\nvoid MS5611_Update(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  uint32_t uVar13;\n  undefined4 extraout_r1;\n  uint uVar14;\n  undefined4 unaff_r4;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r5;\n  undefined4 unaff_r6;\n  undefined4 unaff_r7;\n  int iVar19;\n  int iVar20;\n  int iVar21;\n  bool bVar22;\n  undefined8 uVar23;\n  \n  puVar6 = PTR_PRESSURE_READY_08003254;\n  puVar5 = PTR_TEMP_READY_08003250;\n  if ((*PTR_TEMP_READY_08003250 != '\\0') && (*PTR_PRESSURE_READY_08003254 != '\\0')) {\n    iVar21 = *(int *)PTR_MS5611_RawTemperature_0800325c +\n             (uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 0xc) *\n                   (longlong)iVar21) >> 0x17 |\n             (int)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 0xc) *\n                   (longlong)iVar21) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 8) *\n                    (longlong)iVar21 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 6) *\n                   (longlong)iVar21) >> 8);\n    iVar19 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 2) * 0x8000;\n    bVar22 = (int)uVar14 < 0;\n    if (1999 < iVar19) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar22 != SBORROW4(iVar19,2000)) {\n      iVar20 = uVar14 * uVar14 * 5;\n      uVar14 = iVar20 >> 2;\n      uVar4 = iVar20 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_MS5611_RawPressure_08003260;\n    iVar20 = *(uint *)PTR_MS5611_RawPressure_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 6) *\n                      (longlong)iVar21 >> 0x28) +\n               (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 2) * 0x8000))\n              - ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar20 * 0x800;\n    uVar10 = __floatsisf(uVar8 - uVar17 >> 0xf |\n                         (((iVar20 >> 0x15) -\n                          ((((int)((longlong)\n                                   (int)(uint)*(ushort *)(PTR_MS5611_Coefficients_08003258 + 8) *\n                                   (longlong)iVar21 >> 0x27) +\n                            (uint)CARRY4(uVar15,(uint)*(ushort *)\n                                                       (PTR_MS5611_Coefficients_08003258 + 4) *\n                                                0x10000)) - ((int)uVar4 >> 0x1f)) -\n                          (uint)(uVar16 < uVar4))) - (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar11 = __aeabi_fdiv(uVar10,DAT_08003264);\n    *(undefined4 *)PTR_MS5611_CompensatedPressure_08003268 = uVar11;\n    uVar10 = __floatsisf(iVar19);\n    uVar12 = __aeabi_fdiv(uVar10,DAT_08003264);\n    uVar10 = DAT_08003270;\n    *(undefined4 *)PTR_MS5611_CompensatedTemperature_0800326c = uVar12;\n    __aeabi_fdiv(uVar11,uVar10);\n    uVar10 = __aeabi_f2d();\n    pow((double)CONCAT44(unaff_r5,unaff_r4),(double)CONCAT44(unaff_r7,unaff_r6));\n    uVar23 = __subdf3(0,DAT_08003274,uVar10,extraout_r1);\n    __muldf3((int)uVar23,(int)((ulonglong)uVar23 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar10 = __truncdfsf2();\n    puVar7 = PTR_alt_filter_08003278;\n    *(undefined4 *)PTR_MS5611_Altitude_0800327c = uVar10;\n    uVar11 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar11 = __addsf3(uVar11);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar10;\n    uVar10 = __addsf3(uVar11,uVar10);\n    uVar10 = __aeabi_fdiv(uVar10,DAT_08003280);\n    *(undefined4 *)PTR_MS5611_FilteredAltitude_08003284 = uVar10;\n    iVar19 = __aeabi_f2iz();\n    puVar7 = PTR_MS5611_OSR_0800328c;\n    *(int *)PTR_msp_txf_altitude_08003288 = iVar19 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    I2C_WriteByte(0xee,bVar2 + 0x50,'\\x01','\\0');\n    uVar13 = millis();\n    *(uint32_t *)PTR_temp_time_08003290 = uVar13;\n  }\n  uVar13 = millis();\n  puVar6 = PTR_pressure_time_08003294;\n  if (((10 < uVar13 - *(int *)PTR_temp_time_08003290) && (*puVar5 == '\\0')) &&\n     (*PTR_PRESSURE_READY_08003254 == '\\0')) {\n    uVar13 = MS5611_ReadADC();\n    puVar7 = PTR_MS5611_RawTemperature_0800325c;\n    *puVar5 = 1;\n    *(uint32_t *)puVar7 = uVar13;\n    I2C_WriteByte(0xee,(byte)*PTR_MS5611_OSR_0800328c + 0x40,'\\x01','\\0');\n    uVar13 = millis();\n    *(uint32_t *)puVar6 = uVar13;\n  }\n  uVar13 = millis();\n  puVar7 = PTR_PRESSURE_READY_08003254;\n  if (((10 < uVar13 - *(int *)puVar6) && (*puVar5 != '\\0')) &&\n     (*PTR_PRESSURE_READY_08003254 == '\\0')) {\n    uVar13 = MS5611_ReadADC();\n    *(uint32_t *)PTR_MS5611_RawPressure_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fdiv", 
                "millis", 
                "__subdf3", 
                "I2C_WriteByte", 
                "pow", 
                "__aeabi_f2d", 
                "__truncdfsf2", 
                "__addsf3", 
                "__floatsisf", 
                "__muldf3", 
                "MS5611_ReadADC", 
                "__aeabi_f2iz"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003078", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MS5611_Update"
        }, 
        "MPU9250_ReadGyroData": {
            "renaming": {}, 
            "code": "\nvoid MPU9250_ReadGyroData(void)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined4 uVar3;\n  uint8_t raw_data [6];\n  \n  raw_data._0_4_ = 0;\n  raw_data._4_2_ = 0;\n  I2C_ReadByteArray(0xd0,0x43,raw_data,6,PTR_s____Src_MPU9250_c_08002c9c,0x7b);\n  puVar1 = PTR_gyroRaw_08002ca0;\n  *(ushort *)PTR_gyroRaw_08002ca0 = CONCAT11(raw_data[0],raw_data[1]);\n  *(short *)(puVar1 + 2) = CONCAT11(raw_data[2],raw_data[3]);\n  *(short *)(puVar1 + 4) = CONCAT11(raw_data[4],raw_data[5]);\n  uVar3 = __floatsisf();\n  puVar1 = PTR_gyroBias_08002ca4;\n  uVar3 = __aeabi_fmul(uVar3,DAT_08002ca8);\n  uVar3 = __aeabi_fmul(uVar3,0x38000000);\n  uVar3 = __aeabi_fsub(uVar3,*(undefined4 *)puVar1);\n  puVar2 = PTR_gyroData_08002cac;\n  *(undefined4 *)PTR_gyroData_08002cac = uVar3;\n  uVar3 = __floatsisf((int)CONCAT11(raw_data[2],raw_data[3]));\n  uVar3 = __aeabi_fmul(uVar3,DAT_08002ca8);\n  uVar3 = __aeabi_fmul(uVar3,0x38000000);\n  uVar3 = __aeabi_fsub(uVar3,*(undefined4 *)(puVar1 + 4));\n  *(undefined4 *)(puVar2 + 4) = uVar3;\n  uVar3 = __floatsisf((int)CONCAT11(raw_data[4],raw_data[5]));\n  uVar3 = __aeabi_fmul(uVar3,DAT_08002ca8);\n  uVar3 = __aeabi_fmul(uVar3,0x38000000);\n  uVar3 = __aeabi_fsub(uVar3,*(undefined4 *)(puVar1 + 8));\n  *(undefined4 *)(puVar2 + 8) = uVar3;\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fsub", 
                "__aeabi_fmul", 
                "__floatsisf", 
                "I2C_ReadByteArray"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002bf0", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "MPU9250_ReadGyroData"
        }, 
        "AHRS_GetPitch": {
            "renaming": {}, 
            "code": "\nfloat AHRS_GetPitch(void)\n\n{\n  float in_s0;\n  float fVar1;\n  \n  fVar1 = lowPassFilter((LPF *)PTR_lpf_pitch_08002ed0,in_s0);\n  return fVar1;\n}\n\n", 
            "called": [
                "lowPassFilter"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002ec0", 
            "calling": [
                "AHRS_ComputeAngles", 
                "PID_Update"
            ], 
            "imported": false, 
            "current_name": "AHRS_GetPitch"
        }, 
        "SVC_Handler": {
            "renaming": {}, 
            "code": "\nvoid SVC_Handler(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004eee", 
            "calling": [], 
            "imported": false, 
            "current_name": "SVC_Handler"
        }, 
        "_realloc_r": {
            "renaming": {}, 
            "code": "\nvoid * _realloc_r(undefined4 param_1,void *param_2,void *param_3,undefined4 param_4)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  \n  if (param_2 != (void *)0x0) {\n    if (param_3 == (void *)0x0) {\n      _free_r();\n      pvVar1 = param_3;\n    }\n    else {\n      pvVar2 = (void *)_malloc_usable_size_r();\n      pvVar1 = param_2;\n      if ((pvVar2 < param_3) && (pvVar1 = (void *)_malloc_r(param_1,param_3), pvVar1 != (void *)0x0)\n         ) {\n        memcpy(pvVar1,param_2,(size_t)param_3);\n        _free_r(param_1,param_2);\n      }\n    }\n    return pvVar1;\n  }\n  pvVar1 = (void *)_malloc_r(param_1,param_3,param_3,param_4);\n  return pvVar1;\n}\n\n", 
            "called": [
                "_free_r", 
                "_malloc_usable_size_r", 
                "_malloc_r", 
                "memcpy"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080057d0", 
            "calling": [
                "__ssputs_r"
            ], 
            "imported": false, 
            "current_name": "_realloc_r"
        }, 
        "HAL_TIM_PWM_Start": {
            "renaming": {}, 
            "code": "\nHAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim,uint32_t Channel)\n\n{\n  TIM_TypeDef *pTVar1;\n  TIM_TypeDef *pTVar2;\n  \n  TIM_CCxChannelCmd(htim->Instance,Channel,1);\n  pTVar2 = htim->Instance;\n  pTVar1 = DAT_08002560;\n  if (pTVar2 == DAT_08002560) {\n    pTVar1 = (TIM_TypeDef *)(pTVar2->BDTR | 0x8000);\n  }\n  if (pTVar2 == DAT_08002560) {\n    pTVar2->BDTR = (uint32_t)pTVar1;\n  }\n  pTVar2->CR1 = pTVar2->CR1 | 1;\n  return HAL_OK;\n}\n\n", 
            "called": [
                "TIM_CCxChannelCmd"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08002538", 
            "calling": [
                "PWM_Init"
            ], 
            "imported": false, 
            "current_name": "HAL_TIM_PWM_Start"
        }, 
        "MSP_SendStatus": {
            "renaming": {}, 
            "code": "\nvoid MSP_SendStatus(void)\n\n{\n  undefined *puVar1;\n  uint in_r3;\n  undefined4 local_14;\n  undefined4 uStack_10;\n  uint local_c;\n  \n  puVar1 = PTR_msp_txf_status_080043b8;\n  PTR_msp_txf_status_080043b8[4] = 7;\n  puVar1[5] = 0;\n  puVar1[6] = 0x2a;\n  puVar1[7] = 0;\n  local_14 = *(undefined4 *)puVar1;\n  uStack_10 = *(undefined4 *)(puVar1 + 4);\n  puVar1[8] = 0;\n  puVar1[9] = 0;\n  puVar1[10] = 0;\n  local_c = in_r3 & 0xff000000 | (uint)*(ushort *)(puVar1 + 8);\n  MSP_SendFrame('e',(uint8_t *)&local_14,0xb);\n  return;\n}\n\n", 
            "called": [
                "MSP_SendFrame"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004384", 
            "calling": [
                "taskScheduler"
            ], 
            "imported": false, 
            "current_name": "MSP_SendStatus"
        }, 
        "SystemClock_Config": {
            "renaming": {}, 
            "code": "\nvoid SystemClock_Config(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar3;\n  int line;\n  uint FLatency;\n  RCC_ClkInitTypeDef RCC_ClkInitStruct;\n  RCC_OscInitTypeDef RCC_OscInitStruct;\n  undefined *puVar2;\n  \n  RCC_OscInitStruct.HSIState = 1;\n  RCC_OscInitStruct.HSICalibrationValue = 0x10;\n  FLatency = 2;\n  RCC_OscInitStruct.PLL.PLLSource = 0;\n  RCC_OscInitStruct.OscillatorType = 2;\n  RCC_OscInitStruct.PLL.PLLState = 2;\n  RCC_OscInitStruct.PLL.PLLMUL = 0x380000;\n  HVar1 = HAL_RCC_OscConfig(&RCC_OscInitStruct);\n  puVar2 = (undefined *)(uint)HVar1;\n  if (puVar2 == (undefined *)0x0) goto LAB_08004540;\n  line = 0x3c;\n  while( true ) {\n    puVar2 = PTR_s____Src_peripherals_c_08004588;\n    _Error_Handler(PTR_s____Src_peripherals_c_08004588,line);\nLAB_08004540:\n    RCC_ClkInitStruct.ClockType = 0xf;\n    RCC_ClkInitStruct.APB1CLKDivider = 0x400;\n    RCC_ClkInitStruct.SYSCLKSource = FLatency;\n    RCC_ClkInitStruct.AHBCLKDivider = (uint32_t)puVar2;\n    RCC_ClkInitStruct.APB2CLKDivider = (uint32_t)puVar2;\n    HVar1 = HAL_RCC_ClockConfig(&RCC_ClkInitStruct,FLatency);\n    FLatency = (uint)HVar1;\n    if (FLatency == 0) break;\n    line = 0x49;\n  }\n  uVar3 = HAL_RCC_GetHCLKFreq();\n  HAL_SYSTICK_Config(uVar3 / 1000);\n  HAL_SYSTICK_CLKSourceConfig(4);\n  HAL_NVIC_SetPriority(SysTick_IRQn,0,0);\n  return;\n}\n\n", 
            "called": [
                "HAL_SYSTICK_Config", 
                "_Error_Handler", 
                "HAL_SYSTICK_CLKSourceConfig", 
                "HAL_RCC_ClockConfig", 
                "HAL_RCC_GetHCLKFreq", 
                "HAL_NVIC_SetPriority", 
                "HAL_RCC_OscConfig"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004514", 
            "calling": [
                "Peripherals_Init"
            ], 
            "imported": false, 
            "current_name": "SystemClock_Config"
        }, 
        "__floatsisf": {
            "renaming": {}, 
            "code": "\nuint __floatsisf(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  \n  uVar3 = param_1 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    param_1 = -param_1;\n  }\n  if (param_1 == 0) {\n    return 0;\n  }\n  iVar1 = count_leading_zeroes(param_1);\n  uVar2 = iVar1 - 8;\n  iVar4 = ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 < iVar1) {\n    uVar5 = 0 << (uVar2 & 0xff);\n    uVar3 = iVar4 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar5);\n    if (uVar5 == 0x80000000) {\n      uVar3 = uVar3 & 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 = param_1 << (iVar1 + 0x18U & 0xff);\n  uVar3 = iVar4 + ((param_1 >> (0x20 - (iVar1 + 0x18U) & 0xff)) - ((int)uVar2 >> 0x1f));\n  if ((uVar2 & 0x7fffffff) == 0) {\n    uVar3 = uVar3 & ~(uVar2 >> 0x1f);\n  }\n  return uVar3;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000c44", 
            "calling": [
                "MS5611_Update", 
                "PID_Compute", 
                "MPU9250_ReadAccelData", 
                "AK8963_ReadData", 
                "MPU9250_ReadGyroData", 
                "AK8963_Init"
            ], 
            "imported": false, 
            "current_name": "__floatsisf"
        }, 
        "serialBegin": {
            "renaming": {}, 
            "code": "\nvoid serialBegin(void)\n\n{\n  serialFlush();\n  HAL_UART_Receive_IT((UART_HandleTypeDef *)PTR_huart1_08004c88,PTR_rx_buffer_08004c84,1);\n  return;\n}\n\n", 
            "called": [
                "HAL_UART_Receive_IT", 
                "serialFlush"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08004c70", 
            "calling": [
                "setup"
            ], 
            "imported": false, 
            "current_name": "serialBegin"
        }, 
        "MadgwickQuaternionUpdate": {
            "renaming": {}, 
            "code": "\nvoid MadgwickQuaternionUpdate\n               (float ax,float ay,float az,float gx,float gy,float gz,float mx,float my,float mz,\n               float *angle)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 in_r2;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  undefined4 in_stack_00000000;\n  undefined4 in_stack_00000004;\n  undefined4 in_stack_00000008;\n  undefined4 in_stack_0000000c;\n  undefined4 in_stack_00000010;\n  undefined4 *in_stack_00000014;\n  undefined4 in_stack_ffffff78;\n  float hy;\n  float hx;\n  \n  uVar28 = *(undefined4 *)PTR_q_080035d8;\n  iVar29 = *(int *)(PTR_q_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_q_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_q_080035d8 + 0xc);\n  uVar2 = __aeabi_fmul(ax,mz,mz);\n  uVar3 = __aeabi_fmul(angle);\n  uVar2 = __addsf3(uVar2,uVar3);\n  uVar3 = __aeabi_fmul(in_r2);\n  __addsf3(uVar2,uVar3);\n  __aeabi_f2d();\n  sqrt((double)CONCAT44(iVar29,in_stack_ffffff78));\n  uVar2 = __truncdfsf2();\n  iVar4 = __aeabi_fcmpeq(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = __aeabi_fmul(in_stack_00000008);\n    uVar5 = __aeabi_fmul(in_stack_0000000c);\n    uVar3 = __addsf3(uVar3,uVar5);\n    uVar5 = __aeabi_fmul(in_stack_00000010);\n    __addsf3(uVar3,uVar5);\n    __aeabi_f2d();\n    sqrt((double)CONCAT44(iVar29,in_stack_ffffff78));\n    uVar3 = __truncdfsf2();\n    iVar4 = __aeabi_fcmpeq(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = __aeabi_f2d();\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = __truncdfsf2();\n      uVar32 = __aeabi_f2d(in_stack_00000000);\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = __truncdfsf2();\n      uVar32 = __aeabi_f2d(in_stack_00000004);\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = __truncdfsf2();\n      iVar4 = __addsf3(uVar28);\n      uVar8 = __addsf3(iVar29);\n      iVar9 = __addsf3(uVar31,uVar31);\n      uVar10 = __addsf3(uVar30,uVar30);\n      uVar11 = __aeabi_fmul(uVar28);\n      uVar12 = __aeabi_fmul(uVar28,iVar29);\n      uVar13 = __aeabi_fmul(uVar28,uVar31);\n      uVar14 = __aeabi_fmul(iVar29);\n      uVar15 = __aeabi_fmul(iVar29,uVar30);\n      uVar16 = __aeabi_fmul(uVar31,uVar31);\n      uVar17 = __aeabi_fmul(uVar30,uVar30);\n      uVar2 = __aeabi_fdiv(0x3f800000,uVar2);\n      uVar3 = __aeabi_fdiv(0x3f800000,uVar3);\n      uVar18 = __aeabi_fmul(in_stack_00000008,uVar3);\n      uVar19 = __aeabi_fmul(in_stack_0000000c,uVar3);\n      uVar3 = __aeabi_fmul(in_stack_00000010,uVar3);\n      iVar20 = __aeabi_fmul(iVar4,uVar18);\n      uVar21 = __aeabi_fmul(iVar4,uVar19);\n      uVar22 = __aeabi_fmul(iVar4,uVar3);\n      uVar23 = __aeabi_fmul(uVar8,uVar18);\n      uVar24 = __aeabi_fmul(uVar11,uVar18);\n      uVar25 = __aeabi_fmul(uVar30,uVar21);\n      uVar24 = __aeabi_fsub(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar31,uVar22);\n      uVar24 = __addsf3(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar14,uVar18);\n      uVar24 = __addsf3(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar8,uVar19);\n      uVar25 = __aeabi_fmul(uVar25,uVar31);\n      uVar24 = __addsf3(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar8,uVar3);\n      uVar25 = __aeabi_fmul(uVar25,uVar30);\n      uVar24 = __addsf3(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar16,uVar18);\n      uVar24 = __aeabi_fsub(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar17,uVar18);\n      uVar24 = __aeabi_fsub(uVar24,uVar25);\n      uVar25 = __aeabi_fmul(uVar30,iVar20);\n      uVar26 = __aeabi_fmul(uVar11,uVar19);\n      uVar25 = __addsf3(uVar25,uVar26);\n      uVar22 = __aeabi_fmul(iVar29,uVar22);\n      uVar22 = __aeabi_fsub(uVar25,uVar22);\n      uVar25 = __aeabi_fmul(uVar31,uVar23);\n      uVar22 = __addsf3(uVar22,uVar25);\n      uVar25 = __aeabi_fmul(uVar14,uVar19);\n      uVar22 = __aeabi_fsub(uVar22,uVar25);\n      uVar25 = __aeabi_fmul(uVar16,uVar19);\n      uVar22 = __addsf3(uVar22,uVar25);\n      uVar25 = __aeabi_fmul(iVar9,uVar3);\n      uVar25 = __aeabi_fmul(uVar25,uVar30);\n      uVar22 = __addsf3(uVar22,uVar25);\n      uVar25 = __aeabi_fmul(uVar17,uVar19);\n      uVar22 = __aeabi_fsub(uVar22,uVar25);\n      uVar24 = __aeabi_fmul(uVar24,uVar24);\n      uVar22 = __aeabi_fmul(uVar22,uVar22);\n      __addsf3(uVar24,uVar22);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(iVar29,in_stack_ffffff78));\n      iVar27 = __truncdfsf2();\n      uVar22 = __aeabi_fmul(iVar20 + -0x80000000,uVar31);\n      uVar21 = __aeabi_fmul(iVar29,uVar21);\n      uVar21 = __addsf3(uVar22,uVar21);\n      uVar11 = __aeabi_fmul(uVar11,uVar3);\n      uVar11 = __addsf3(uVar21,uVar11);\n      uVar21 = __aeabi_fmul(uVar30,uVar23);\n      uVar11 = __addsf3(uVar11,uVar21);\n      uVar21 = __aeabi_fmul(uVar14,uVar3);\n      uVar11 = __aeabi_fsub(uVar11,uVar21);\n      uVar21 = __aeabi_fmul(iVar9,uVar19);\n      uVar21 = __aeabi_fmul(uVar21,uVar30);\n      uVar11 = __addsf3(uVar11,uVar21);\n      uVar21 = __aeabi_fmul(uVar16,uVar3);\n      uVar11 = __aeabi_fsub(uVar11,uVar21);\n      uVar21 = __aeabi_fmul(uVar17,uVar3);\n      uVar11 = __addsf3(uVar11,uVar21);\n      uVar21 = __addsf3(uVar11,uVar11);\n      uVar22 = __addsf3(uVar15);\n      uVar23 = __aeabi_fmul(uVar31,iVar4);\n      uVar22 = __aeabi_fsub(uVar22,uVar23);\n      uVar23 = __aeabi_fmul(mz,uVar2);\n      uVar22 = __aeabi_fsub(uVar22,uVar23);\n      uVar23 = __aeabi_fmul(uVar30,iVar9);\n      uVar24 = __addsf3(uVar12);\n      uVar23 = __addsf3(uVar23,uVar24);\n      uVar24 = __aeabi_fmul(angle,uVar2);\n      uVar23 = __aeabi_fsub(uVar23,uVar24);\n      uVar24 = __aeabi_fmul(uVar31,uVar11);\n      uVar25 = __aeabi_fsub(0x3f000000,uVar16);\n      uVar17 = __aeabi_fsub(uVar25,uVar17);\n      uVar17 = __aeabi_fmul(uVar17,iVar27);\n      uVar25 = __aeabi_fsub(uVar15,uVar13);\n      uVar25 = __aeabi_fmul(uVar25,uVar11);\n      uVar17 = __addsf3(uVar17,uVar25);\n      uVar17 = __aeabi_fsub(uVar17,uVar18);\n      uVar18 = __aeabi_fmul(iVar29,uVar11);\n      uVar25 = __aeabi_fmul(iVar29,uVar31);\n      uVar26 = __aeabi_fmul(uVar28,uVar30);\n      uVar25 = __aeabi_fsub(uVar25,uVar26);\n      uVar25 = __aeabi_fmul(uVar25,iVar27);\n      uVar26 = __aeabi_fmul(uVar31,uVar30);\n      uVar12 = __addsf3(uVar26,uVar12);\n      uVar12 = __aeabi_fmul(uVar12,uVar11);\n      uVar12 = __addsf3(uVar25,uVar12);\n      uVar12 = __aeabi_fsub(uVar12,uVar19);\n      uVar19 = __aeabi_fmul(uVar31,iVar27);\n      uVar25 = __aeabi_fsub(0x3f000000,uVar14);\n      uVar25 = __aeabi_fsub(uVar25,uVar16);\n      uVar25 = __aeabi_fmul(uVar25,uVar11);\n      uVar13 = __addsf3(uVar13,uVar15);\n      uVar13 = __aeabi_fmul(uVar13,iVar27);\n      uVar13 = __addsf3(uVar25,uVar13);\n      uVar3 = __aeabi_fsub(uVar13,uVar3);\n      uVar13 = __aeabi_fmul(iVar9 + -0x80000000,uVar22);\n      uVar15 = __aeabi_fmul(uVar8,uVar23);\n      uVar13 = __addsf3(uVar13,uVar15);\n      uVar15 = __aeabi_fmul(uVar24,uVar17);\n      uVar13 = __aeabi_fsub(uVar13,uVar15);\n      uVar15 = __aeabi_fmul(uVar30,iVar27 + -0x80000000);\n      uVar15 = __addsf3(uVar15,uVar18);\n      uVar15 = __aeabi_fmul(uVar15,uVar12);\n      uVar13 = __addsf3(uVar13,uVar15);\n      uVar15 = __aeabi_fmul(uVar19,uVar3);\n      uVar13 = __addsf3(uVar13,uVar15);\n      uVar14 = __addsf3(uVar14);\n      uVar14 = __aeabi_fsub(0x3f800000,uVar14);\n      uVar15 = __addsf3(uVar16);\n      uVar14 = __aeabi_fsub(uVar14,uVar15);\n      uVar2 = __aeabi_fmul(in_r2,uVar2);\n      uVar2 = __aeabi_fsub(uVar14,uVar2);\n      uVar14 = __aeabi_fmul(uVar30,uVar11);\n      uVar11 = __aeabi_fmul(uVar28,uVar11);\n      uVar15 = __aeabi_fmul(uVar10,uVar22);\n      uVar16 = __aeabi_fmul(iVar4,uVar23);\n      uVar15 = __addsf3(uVar15,uVar16);\n      uVar16 = __aeabi_fmul(iVar29,0x40800000);\n      uVar16 = __aeabi_fmul(uVar16,uVar2);\n      uVar15 = __aeabi_fsub(uVar15,uVar16);\n      uVar16 = __aeabi_fmul(uVar17,uVar14);\n      uVar15 = __addsf3(uVar15,uVar16);\n      uVar16 = __addsf3(uVar19,uVar11);\n      uVar16 = __aeabi_fmul(uVar16,uVar12);\n      uVar15 = __addsf3(uVar15,uVar16);\n      uVar16 = __aeabi_fmul(uVar30,iVar27);\n      uVar19 = __aeabi_fmul(iVar29,uVar21);\n      uVar16 = __aeabi_fsub(uVar16,uVar19);\n      uVar16 = __aeabi_fmul(uVar16,uVar3);\n      uVar15 = __addsf3(uVar15,uVar16);\n      iVar20 = __addsf3(iVar27,iVar27);\n      uVar16 = __aeabi_fmul(iVar29,iVar27);\n      uVar19 = __aeabi_fmul(iVar4 + -0x80000000,uVar22);\n      uVar10 = __aeabi_fmul(uVar10,uVar23);\n      uVar10 = __addsf3(uVar19,uVar10);\n      uVar19 = __aeabi_fmul(uVar31,0x40800000);\n      uVar2 = __aeabi_fmul(uVar19,uVar2);\n      uVar2 = __aeabi_fsub(uVar10,uVar2);\n      uVar10 = __aeabi_fmul(uVar31,iVar20 + -0x80000000);\n      uVar10 = __aeabi_fsub(uVar10,uVar11);\n      uVar10 = __aeabi_fmul(uVar10,uVar17);\n      uVar2 = __addsf3(uVar2,uVar10);\n      uVar10 = __addsf3(uVar14,uVar16);\n      uVar10 = __aeabi_fmul(uVar10,uVar12);\n      uVar2 = __addsf3(uVar2,uVar10);\n      uVar10 = __aeabi_fmul(uVar28,iVar27);\n      uVar11 = __aeabi_fmul(uVar31,uVar21);\n      uVar10 = __aeabi_fsub(uVar10,uVar11);\n      uVar10 = __aeabi_fmul(uVar10,uVar3);\n      uVar2 = __addsf3(uVar2,uVar10);\n      uVar8 = __aeabi_fmul(uVar8,uVar22);\n      uVar10 = __aeabi_fmul(iVar9,uVar23);\n      uVar8 = __addsf3(uVar8,uVar10);\n      uVar10 = __aeabi_fmul(uVar30,iVar20 + -0x80000000);\n      uVar10 = __addsf3(uVar10,uVar18);\n      uVar10 = __aeabi_fmul(uVar10,uVar17);\n      uVar8 = __addsf3(uVar8,uVar10);\n      uVar10 = __aeabi_fmul(uVar28,iVar27 + -0x80000000);\n      uVar10 = __addsf3(uVar10,uVar24);\n      uVar10 = __aeabi_fmul(uVar10,uVar12);\n      uVar8 = __addsf3(uVar8,uVar10);\n      uVar3 = __aeabi_fmul(uVar3,uVar16);\n      uVar3 = __addsf3(uVar8,uVar3);\n      uVar8 = __aeabi_fmul(uVar13);\n      uVar10 = __aeabi_fmul(uVar15);\n      uVar8 = __addsf3(uVar8,uVar10);\n      uVar10 = __aeabi_fmul(uVar2,uVar2);\n      uVar8 = __addsf3(uVar8,uVar10);\n      uVar10 = __aeabi_fmul(uVar3,uVar3);\n      __addsf3(uVar8,uVar10);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(iVar29,in_stack_ffffff78));\n      uVar8 = __truncdfsf2();\n      uVar8 = __aeabi_fdiv(0x3f800000,uVar8);\n      puVar1 = PTR_deltat_08003d84;\n      uVar12 = *(undefined4 *)PTR_beta_08003d80;\n      uVar14 = *(undefined4 *)PTR_beta_08003d80;\n      uVar16 = *(undefined4 *)PTR_beta_08003d80;\n      uVar17 = *(undefined4 *)PTR_beta_08003d80;\n      uVar10 = __aeabi_fmul(iVar29 + -0x80000000,uVar5);\n      uVar11 = __aeabi_fmul(uVar31,uVar6);\n      uVar10 = __aeabi_fsub(uVar10,uVar11);\n      uVar11 = __aeabi_fmul(uVar30,uVar7);\n      uVar10 = __aeabi_fsub(uVar10,uVar11);\n      uVar10 = __aeabi_fmul(uVar10,0x3f000000);\n      uVar11 = __aeabi_fmul(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = __aeabi_fmul(uVar11,uVar12);\n      uVar10 = __aeabi_fsub(uVar10,uVar11);\n      uVar10 = __aeabi_fmul(uVar10,uVar13);\n      uVar10 = __addsf3(uVar10,uVar28);\n      uVar11 = __aeabi_fmul(uVar28,uVar5);\n      uVar12 = __aeabi_fmul(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = __addsf3(uVar11,uVar12);\n      uVar12 = __aeabi_fmul(uVar30,uVar6);\n      uVar11 = __aeabi_fsub(uVar11,uVar12);\n      uVar11 = __aeabi_fmul(uVar11,0x3f000000);\n      uVar12 = __aeabi_fmul(uVar15,uVar8);\n      uVar12 = __aeabi_fmul(uVar12,uVar14);\n      uVar11 = __aeabi_fsub(uVar11,uVar12);\n      uVar11 = __aeabi_fmul(uVar11,uVar13);\n      uVar11 = __addsf3(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = __aeabi_fmul(uVar28,uVar6);\n      uVar13 = __aeabi_fmul(iVar29,uVar7);\n      uVar12 = __aeabi_fsub(uVar12,uVar13);\n      uVar13 = __aeabi_fmul(uVar30,uVar5);\n      uVar12 = __addsf3(uVar12,uVar13);\n      uVar12 = __aeabi_fmul(uVar12,0x3f000000);\n      uVar2 = __aeabi_fmul(uVar2,uVar8);\n      uVar2 = __aeabi_fmul(uVar2,uVar16);\n      uVar2 = __aeabi_fsub(uVar12,uVar2);\n      uVar2 = __aeabi_fmul(uVar2,uVar14);\n      uVar2 = __addsf3(uVar2,uVar31);\n      uVar28 = __aeabi_fmul(uVar28,uVar7);\n      uVar6 = __aeabi_fmul(iVar29,uVar6);\n      uVar28 = __addsf3(uVar28,uVar6);\n      uVar31 = __aeabi_fmul(uVar31,uVar5);\n      uVar31 = __aeabi_fsub(uVar28,uVar31);\n      uVar31 = __aeabi_fmul(uVar31,0x3f000000);\n      uVar3 = __aeabi_fmul(uVar3,uVar8);\n      uVar3 = __aeabi_fmul(uVar3,uVar17);\n      uVar5 = *(undefined4 *)puVar1;\n      uVar3 = __aeabi_fsub(uVar31,uVar3);\n      uVar3 = __aeabi_fmul(uVar3,uVar5);\n      uVar3 = __addsf3(uVar3,uVar30);\n      uVar30 = __aeabi_fmul(uVar10,uVar10);\n      uVar31 = __aeabi_fmul(uVar11,uVar11);\n      uVar30 = __addsf3(uVar30,uVar31);\n      uVar31 = __aeabi_fmul(uVar2,uVar2);\n      uVar30 = __addsf3(uVar30,uVar31);\n      uVar31 = __aeabi_fmul(uVar3,uVar3);\n      __addsf3(uVar30,uVar31);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(uVar28,in_stack_ffffff78));\n      uVar30 = __truncdfsf2();\n      uVar30 = __aeabi_fdiv(0x3f800000,uVar30);\n      uVar31 = __aeabi_fmul(uVar10,uVar30);\n      puVar1 = PTR_q_08003d88;\n      *(undefined4 *)PTR_q_08003d88 = uVar31;\n      uVar5 = __aeabi_fmul(uVar11,uVar30);\n      *(undefined4 *)(puVar1 + 4) = uVar5;\n      uVar2 = __aeabi_fmul(uVar2,uVar30);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = __aeabi_fmul(uVar3,uVar30);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = __aeabi_fmul(uVar5,uVar3);\n      uVar2 = __aeabi_fmul(uVar31,uVar2);\n      uVar2 = __aeabi_fsub(uVar3,uVar2);\n      __addsf3(uVar2,uVar2);\n      __aeabi_f2d();\n      asin((double)CONCAT44(uVar28,in_stack_ffffff78));\n      uVar32 = __muldf3();\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = __truncdfsf2();\n      *in_stack_00000014 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = __aeabi_fmul(uVar31,uVar31);\n      uVar3 = __aeabi_fmul(uVar5,uVar5);\n      uVar2 = __aeabi_fsub(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = __aeabi_fmul(uVar28,uVar28);\n      uVar2 = __aeabi_fsub(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = __aeabi_fmul(uVar30,uVar30);\n      __addsf3(uVar2,uVar3);\n      uVar32 = __aeabi_f2d();\n      uVar2 = __aeabi_fmul(uVar31,uVar5);\n      uVar3 = __aeabi_fmul(uVar28,uVar30);\n      uVar2 = __addsf3(uVar2,uVar3);\n      __addsf3(uVar2,uVar2);\n      uVar33 = __aeabi_f2d();\n      uVar32 = atan2((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                     (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = __truncdfsf2();\n      in_stack_00000014[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = __aeabi_fmul(uVar30,uVar30);\n      uVar3 = __aeabi_fmul(uVar31,uVar31);\n      uVar2 = __addsf3(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = __aeabi_fmul(uVar5,uVar5);\n      uVar2 = __aeabi_fsub(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = __aeabi_fmul(uVar28,uVar28);\n      __aeabi_fsub(uVar2,uVar3);\n      uVar32 = __aeabi_f2d();\n      uVar2 = __aeabi_fmul(uVar31,uVar5);\n      uVar3 = __aeabi_fmul(uVar30,uVar28);\n      uVar2 = __addsf3(uVar2,uVar3);\n      __addsf3(uVar2,uVar2);\n      uVar33 = __aeabi_f2d();\n      uVar32 = atan2((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                     (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = __muldf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = __truncdfsf2();\n      in_stack_00000014[2] = uVar2;\n    }\n  }\n  return;\n}\n\n", 
            "called": [
                "__aeabi_fdiv", 
                "__divdf3", 
                "__aeabi_fsub", 
                "__aeabi_fmul", 
                "__aeabi_f2d", 
                "__addsf3", 
                "__truncdfsf2", 
                "__aeabi_fcmpeq", 
                "sqrt", 
                "__muldf3", 
                "atan2", 
                "asin"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003330", 
            "calling": [
                "AHRS_ComputeAngles"
            ], 
            "imported": false, 
            "current_name": "MadgwickQuaternionUpdate"
        }, 
        "__do_global_dtors_aux": {
            "renaming": {}, 
            "code": "\nundefined * __do_global_dtors_aux(undefined *param_1)\n\n{\n  if (*PTR_completed_8672_08000128 == '\\0') {\n    if (DAT_0800012c != 0) {\n      param_1 = PTR__init_08000130;\n    }\n    *PTR_completed_8672_08000128 = 1;\n  }\n  return param_1;\n}\n\n", 
            "called": [
                "_init"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08000110", 
            "calling": [], 
            "imported": false, 
            "current_name": "__do_global_dtors_aux"
        }, 
        "PWM_Init": {
            "renaming": {}, 
            "code": "\nvoid PWM_Init(void)\n\n{\n  undefined *htim;\n  \n  htim = PTR_htim4_0800401c;\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)PTR_htim2_08004020,4);\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)PTR_htim3_08004024,8);\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)htim,8);\n  HAL_TIM_PWM_Start((TIM_HandleTypeDef *)htim,0xc);\n  return;\n}\n\n", 
            "called": [
                "HAL_TIM_PWM_Start"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x08003ff4", 
            "calling": [
                "Devices_Init"
            ], 
            "imported": false, 
            "current_name": "PWM_Init"
        }, 
        "_svfiprintf_r": {
            "renaming": {}, 
            "code": "\nint _svfiprintf_r(undefined4 *param_1,int *param_2,byte *param_3,int *param_4)\n\n{\n  bool bVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  void *pvVar5;\n  undefined4 *puVar6;\n  int *piVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  undefined4 *unaff_r9;\n  int *local_8c;\n  uint local_88;\n  int local_84;\n  undefined4 local_80;\n  int local_7c;\n  int local_74;\n  byte local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  local_8c = param_4;\n  if (((int)((uint)*(ushort *)(param_2 + 3) << 0x18) < 0) && (param_2[4] == 0)) {\n    iVar3 = _malloc_r(param_1,0x40);\n    *param_2 = iVar3;\n    param_2[4] = iVar3;\n    if (iVar3 == 0) {\n      *param_1 = 0xc;\n      return -1;\n    }\n    param_2[5] = 0x40;\n  }\n  local_74 = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  pbVar8 = param_3;\nLAB_08005146:\n  pbVar9 = pbVar8;\n  if (*pbVar9 != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  pbVar8 = pbVar9 + 1;\n  if (*pbVar9 != 0x25) goto LAB_08005146;\nLAB_08005150:\n  iVar3 = (int)pbVar9 - (int)param_3;\n  if (iVar3 != 0) {\n    iVar4 = __ssputs_r(param_1,param_2,param_3,iVar3);\n    if (iVar4 == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(param_2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return local_74;\n    }\n    local_74 = local_74 + iVar3;\n  }\n  if (*pbVar9 == 0) goto LAB_080052ac;\n  local_88 = 0;\n  local_7c = 0;\n  local_84 = -1;\n  local_80 = 0;\n  local_45 = 0;\n  local_30 = 0;\n  pbVar8 = pbVar9 + 1;\n  while( true ) {\n    pvVar5 = memchr(PTR_DAT_080052d0,(uint)*pbVar8,5);\n    puVar2 = PTR_DAT_080052d4;\n    param_3 = pbVar8 + 1;\n    if (pvVar5 == (void *)0x0) break;\n    local_88 = 1 << ((int)pvVar5 - (int)PTR_DAT_080052d0 & 0xffU) | local_88;\n    pbVar8 = param_3;\n  }\n  if ((int)(local_88 << 0x1b) < 0) {\n    local_45 = 0x20;\n  }\n  if ((int)(local_88 << 0x1c) < 0) {\n    local_45 = 0x2b;\n  }\n  if (*pbVar8 == 0x2a) {\n    piVar7 = local_8c + 1;\n    iVar3 = *local_8c;\n    local_8c = piVar7;\n    if (-1 < iVar3) goto LAB_080051ee;\n    local_7c = -iVar3;\n    local_88 = local_88 | 2;\n  }\n  else {\n    bVar1 = false;\n    iVar3 = local_7c;\n    param_3 = pbVar8;\n    while( true ) {\n      if (9 < *param_3 - 0x30) break;\n      iVar3 = iVar3 * 10 + (*param_3 - 0x30);\n      bVar1 = true;\n      param_3 = param_3 + 1;\n    }\n    if (bVar1) {\nLAB_080051ee:\n      local_7c = iVar3;\n    }\n  }\n  if (*param_3 == 0x2e) {\n    if (param_3[1] == 0x2a) {\n      param_3 = param_3 + 2;\n      piVar7 = local_8c + 1;\n      local_84 = *local_8c;\n      local_8c = piVar7;\n      if (local_84 < 0) {\n        local_84 = -1;\n      }\n    }\n    else {\n      bVar1 = false;\n      iVar3 = 0;\n      local_84 = 0;\n      while( true ) {\n        param_3 = param_3 + 1;\n        if (9 < *param_3 - 0x30) break;\n        iVar3 = iVar3 * 10 + (*param_3 - 0x30);\n        bVar1 = true;\n      }\n      if (bVar1) {\n        local_84 = iVar3;\n      }\n    }\n  }\n  pvVar5 = memchr(PTR_DAT_080052d4,(uint)*param_3,3);\n  if (pvVar5 != (void *)0x0) {\n    param_3 = param_3 + 1;\n    local_88 = local_88 | 0x40 << ((int)pvVar5 - (int)puVar2 & 0xffU);\n  }\n  local_70 = *param_3;\n  param_3 = param_3 + 1;\n  pvVar5 = memchr(PTR_s_efgEFG_080052d8,(uint)local_70,6);\n  if (pvVar5 == (void *)0x0) {\n    puVar6 = (undefined4 *)_printf_i(param_1,&local_88,param_2,DAT_080052e0,&local_8c);\n  }\n  else {\n    puVar6 = param_1;\n    if (DAT_080052dc == 0) {\n      local_8c = (int *)(((int)local_8c + 7U & 0xfffffff8) + 8);\n      puVar6 = unaff_r9;\n      goto LAB_08005260;\n    }\n  }\n  if (puVar6 == (undefined4 *)0xffffffff) goto LAB_080052ac;\nLAB_08005260:\n  local_74 = local_74 + (int)puVar6;\n  pbVar8 = param_3;\n  unaff_r9 = puVar6;\n  goto LAB_08005146;\n}\n\n", 
            "called": [
                "__ssputs_r", 
                "memchr", 
                "_malloc_r", 
                "_printf_i"
            ], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080050fc", 
            "calling": [
                "siprintf"
            ], 
            "imported": false, 
            "current_name": "_svfiprintf_r"
        }, 
        "_fini": {
            "renaming": {}, 
            "code": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080072e0", 
            "calling": [], 
            "imported": false, 
            "current_name": "_fini"
        }, 
        "HAL_NVIC_EnableIRQ": {
            "renaming": {}, 
            "code": "\nvoid HAL_NVIC_EnableIRQ(IRQn_Type IRQn)\n\n{\n  *(int *)(DAT_08001210 + ((uint)(int)IRQn >> 5) * 4) = 1 << ((int)IRQn & 0x1fU);\n  return;\n}\n\n", 
            "called": [], 
            "skipped": false, 
            "tags": [], 
            "improved": true, 
            "entrypoint": "0x080011fc", 
            "calling": [
                "HAL_UART_MspInit"
            ], 
            "imported": false, 
            "current_name": "HAL_NVIC_EnableIRQ"
        }
    }, 
    "locked_functions": [], 
    "used_tokens": 0, 
    "layers": []
}