{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_flag_status_0800192c",
                "PTR_DAT_08001954": "flag_array",
                "PTR_DAT_08001958": "flag_array_value"
            },
            "code": "void check_flag_status_0800192c(void)\n{\n  if ((PTR_DAT_08001954[0x28] & 8) == 0) {\n    *(int *)PTR_DAT_08001958 = 0;\n  }\n  else {\n    *(int *)PTR_DAT_08001958 = 1;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_flag_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "set_bits_of_uint_at_offset_08006950",
                "param_1": "value",
                "PTR_DAT_08006994": "ptr",
                "DAT_08006994": "offset",
                "mask": "mask",
                "shifted_value": "shifted_value",
                "final_value": "final_value"
            },
            "code": "void set_bits_of_uint_at_offset_08006950(uint DAT_08006994, uint value) {\n    uint* PTR_DAT_08006994 = (uint*)(DAT_08006994 + 0xc);\n    uint mask = 0xf8ff;\n    uint shifted_value = (value & 7) << 8;\n    uint final_value = shifted_value | 0x5fa0000;\n    *PTR_DAT_08006994 = (*PTR_DAT_08006994 & mask) | final_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "set_bits_of_uint_at_offset_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "convert_to_int_08008ba0",
                "param_1": "num1",
                "param_2": "num2",
                "uVar1": "result",
                "iVar2": "temp",
                "uVar3": "abs_temp",
                "shifted_num1": "shifted_num1",
                "shifted_num2": "shifted_num2"
            },
            "code": "uint convert_to_int_08008ba0(uint num1, uint num2)\n{\n    uint result;\n    int temp = num2 * 2 + 0x200000;\n    if (num2 * 2 < 0xffe00000) {\n        if (temp >= 0) {\n            return 0;\n        }\n        uint abs_temp = -temp - 0x3e1;\n        if (abs_temp != 0 && abs_temp < 0xfffffc20) {\n            uint shifted_num1 = num1 >> 0x15;\n            uint shifted_num2 = num2 << 0xb | 0x80000000 | shifted_num1;\n            shifted_num2 = shifted_num2 >> (abs_temp & 0xff);\n            if ((num2 & 0x80000000) != 0) {\n                shifted_num2 = -shifted_num2;\n            }\n            result = shifted_num2;\n        }\n    }\n    else if ((num1 | num2 << 0xc) == 0) {\n        result = 0;\n    }\n    else {\n        if ((num2 & 0x80000000) == 0) {\n            result = 0x7fffffff;\n        }\n        else {\n            result = num2;\n        }\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800a348",
                "FUN_080005b4",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08003004",
                "FUN_0800adf0",
                "FUN_080095b8",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_to_int_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "check_interrupt_08005984",
                "param_1": "param",
                "uVar1": "return_value",
                "PTR_DAT_080059b0": "interrupt_flag"
            },
            "code": "int check_interrupt_08005984(int param)\n{\n    int PTR_DAT_080059b0 = *(int *)PTR_DAT_080059b0;\n    if (PTR_DAT_080059b0 == 0) {\n        return print_interrupt_message(1, param, 0);\n    }\n    else {\n        return 0;\n    }\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "check_interrupt_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_bit_08007a10",
                "param_1": "bit_value",
                "DAT_08007a64": "ptr"
            },
            "code": "void set_bit_08007a10(uint32_t bit_value)\n{\n    uint32_t* DAT_08007a64 = (uint32_t*)(DAT_08007a64 + 0x40);\n    if (bit_value == 0x40000000) {\n        *DAT_08007a64 |= 1;\n    }\n    else if (bit_value == DAT_08007a68) {\n        *DAT_08007a64 |= 2;\n    }\n    else if (bit_value == DAT_08007a6c) {\n        *DAT_08007a64 |= 4;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007ad0",
                "FUN_08007d08"
            ],
            "imported": false,
            "current_name": "set_bit_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "reverse_bits_0800856c",
                "param_1": "number",
                "uVar1": "high_bits",
                "uVar2": "abs_num",
                "uVar3": "shift_amount",
                "iVar4": "num_leading_zeros",
                "uVar5": "shift_amount_2",
                "uVar6": "sign_bit",
                "in_r12": "unused",
                "bVar7": "is_negative_shift",
                "bVar8": "is_zero_shift",
                "bVar9": "is_carry_shifted"
            },
            "code": "ulonglong reverse_bits_0800856c(uint number)\n{\n    if (number == 0) {\n        return 0;\n    }\n    uint abs_num = (number & 0x80000000) ? -number : number;\n    uint num_leading_zeros = count_leading_zeroes(abs_num);\n    uint shift_amount = (num_leading_zeros < 0xb) ? 0xb - num_leading_zeros : num_leading_zeros - 0x15;\n    uint shifted_num = abs_num << shift_amount;\n    uint high_bits = (shift_amount < 0x20) ? shifted_num : 0;\n    uint low_bits = (shift_amount < 0x20) ? (abs_num >> (0x20 - shift_amount)) | (0U >> shift_amount) : (shifted_num >> (shift_amount - 0x20));\n    if (shift_amount >= 0x433) {\n        uint shift_amount_inv = ~(0x432 - shift_amount);\n        if (shift_amount_inv > 0x1e) {\n            return (number & 0x80000000ffffffff) | (shifted_num >> (shift_amount_inv - 0x1f));\n        }\n        uint shift_amount_2 = shift_amount_inv - 0x13;\n        if (shift_amount_2 == 0 || (shift_amount_inv - 0x1f < 0xc) != (shift_amount_2 < 0)) {\n            return (number & 0x80000000ffffffff) | ((high_bits >> shift_amount_2) | (low_bits << (0x20 - shift_amount_2)));\n        }\n        return (number & 0x80000000ffffffff) | ((high_bits >> (0xc - shift_amount_2)) | (low_bits << shift_amount_2));\n    }\n    return (shifted_num + (0x432 - shift_amount) * 0x100000 | (number & 0x80000000)) | ((ulonglong)high_bits << 32);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "reverse_bits_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "compare_and_return_08008b00",
                "param_1": "param",
                "compare_uints_08008a74": "compare_values"
            },
            "code": "int compare_and_return_08008b00(int param){\n  compare_values();\n  return param;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b24",
                "FUN_08008af0",
                "FUN_08008b10"
            ],
            "imported": false,
            "current_name": "compare_and_return_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "execute_if_flags_set_0800585c",
                "PTR_DAT_08005878": "flags"
            },
            "code": "void execute_if_flags_set_0800585c(void)\n{\n    if (PTR_DAT_08005878[1] == 2) {\n        PTR_DAT_08005878[1] = 3;\n        execute_if_flags_set_0800585c();\n    }\n    return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "execute_if_flags_set_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "print_interrupt_message_0800597c"
            },
            "code": "void print_interrupt_message_0800597c(void)\n{\n  software_interrupt(0x3f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "print_interrupt_message_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "calculate_number_08009798",
                "param_1": "first_number",
                "param_2": "second_number",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "exponent",
                "uVar2": "shifted_second_number",
                "lVar3": "result",
                "DAT_08009814": "DAT_08009814"
            },
            "code": "long long calculate_number_08009798(uint32_t first_number, uint32_t second_number, undefined4 param_3, undefined4 param_4)\n{\n  uint32_t shifted_second_number = (second_number << 1) >> 21;\n  uint32_t exponent = shifted_second_number - 1023;\n  if ((int)exponent < 20) {\n    if ((int)exponent < 0) {\n      return ((uint64_t)second_number & 0x80000000) << 32;\n    }\n    long long result = (uint64_t)(second_number & ~(DAT_08009814 >> (exponent & 0xff))) << 32;\n  }\n  else {\n    if ((int)exponent < 52) {\n      return CONCAT44(second_number,first_number & ~(0xffffffffU >> (shifted_second_number - 1043 & 0xff)));\n    }\n    if (exponent != 1024) {\n      return CONCAT44(second_number,first_number);\n    }\n    long long result = FUNC_080082d4(first_number, second_number, first_number, second_number, param_4);\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_number_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08002408",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "process_data_08007930",
                "puVar1": "data_ptr",
                "uVar2": "bits",
                "uVar3": "sum_of_four_values",
                "uVar4": "previous_sum",
                "iVar5": "current_index"
            },
            "code": "void process_data_08007930()\n{\n  uint sum_of_four_values;\n  uint previous_sum;\n  int current_index;\n  undefined *data_ptr;\n  undefined4 bits;\n  \n  data_ptr = PTR_DAT_080079b8;\n  if (*(int *)PTR_DAT_080079bc != 0) {\n    current_index = *(int *)(data_ptr + 0x14);\n    bits = get_bits();\n    *(undefined4 *)(data_ptr + current_index * 4) = bits;\n    if (*(int *)(data_ptr + 0x14) == 3) {\n      current_index = 0;\n    }\n    else {\n      current_index = *(int *)(data_ptr + 0x14) + 1;\n    }\n    *(int *)(data_ptr + 0x14) = current_index;\n    sum_of_four_values = calculate_sum_of_four_values();\n    previous_sum = *(uint *)(data_ptr + 0x10);\n    if (sum_of_four_values != previous_sum) {\n      if ((~previous_sum & sum_of_four_values) != 0) {\n        set_flags_based_on_difference(~previous_sum & sum_of_four_values);\n      }\n      if ((~sum_of_four_values & previous_sum) != 0) {\n        set_short_if_odd(~sum_of_four_values & previous_sum);\n      }\n      *(uint *)(data_ptr + 0x10) = sum_of_four_values;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "process_data_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "check_and_return_value_if_not_null_08000188",
                "param_1": "value",
                "PTR_DAT_080001a0": "data_pointer",
                "DAT_080001a4": "non_zero_value",
                "PTR_FUN_080001a8": "function_pointer"
            },
            "code": "undefined* check_and_return_value_if_not_null_08000188(undefined* value) {\\n    if (*PTR_DAT_080001a0 == \"\\0\") {\\n        if (DAT_080001a4 != 0) {\\n            value = PTR_FUN_080001a8;\\n        }\\n        *PTR_DAT_080001a0 = 1;\\n    }\\n    return value;\\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "check_and_return_value_if_not_null_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_08009410",
                "FUN_08009990",
                "FUN_080096e8",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_08009d78",
                "FUN_08003004",
                "FUN_08001f00",
                "FUN_08009b24",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_0800adf0"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "check_string_08009318",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "iVar1": "index",
                "uVar2": "difference",
                "uVar3": "shift",
                "bVar4": "carry_occurred",
                "uVar5": "value5",
                "lVar6": "result",
                "DAT_08009400": "constant1",
                "DAT_08009404": "constant2",
                "DAT_08009408": "constant3",
                "DAT_0800940c": "constant4",
                "is_end_of_string_08008b60": "is_end_of_string",
                "FUNC_080082d4": "get_value"
            },
            "code": "longlong check_string_08009318(uint value1, uint value2, undefined4 value3, undefined4 value4)\n{\n    int index;\n    uint shift = (value2 << 1) >> 0x15;\n    uint difference = shift - 0x3ff;\n    longlong result;\n    if ((int)difference < 0x14) {\n        if ((int)difference < 0) {\n            undefined8 value5 = FUNC_080082d4(value1, value2, DAT_08009400, DAT_08009404, value4);\n            index = is_end_of_string_08008b60((int)value5, (int)((ulonglong)value5 >> 0x20), 0, 0);\n            result = CONCAT44(value2, value1);\n            if (index != 0) {\n                if ((int)value2 < 0) {\n                    result = -0x8000000000000000;\n                }\n                else {\n                    value1 = value1 | value2;\n                    result = CONCAT44(value1, value1);\n                    if (value1 != 0) {\n                        result = (ulonglong)DAT_0800940c << 0x20;\n                    }\n                }\n            }\n        }\n        else {\n            uint value6 = DAT_08009408 >> (difference & 0xff);\n            result = CONCAT44(value2, value1);\n            if ((value2 & value6 | value1) != 0) {\n                undefined8 value5 = FUNC_080082d4(value1, value2, DAT_08009400, DAT_08009404, value4);\n                index = is_end_of_string_08008b60((int)value5, (int)((ulonglong)value5 >> 0x20), 0, 0);\n                result = CONCAT44(value2, value1);\n                if (index != 0) {\n                    if (0 < (int)value2) {\n                        value2 = value2 + (0x100000 >> (difference & 0xff));\n                    }\n                    result = (ulonglong)(value2 & ~value6) << 0x20;\n                }\n            }\n        }\n    }\n    else if ((int)difference < 0x34) {\n        uint value6 = 0xffffffff >> (shift - 0x413 & 0xff);\n        result = CONCAT44(value2, value1);\n        if ((value6 & value1) != 0) {\n            undefined8 value5 = FUNC_080082d4(value1, value2, DAT_08009400, DAT_08009404, value4);\n            index = is_end_of_string_08008b60((int)value5, (int)((ulonglong)value5 >> 0x20), 0, 0);\n            result = CONCAT44(value2, value1);\n            if (index != 0) {\n                if (0 < (int)value2) {\n                    if (difference == 0x14) {\n                        value2 = value2 + 1;\n                    }\n                    else {\n                        uint carry = 1 << (0x34 - difference & 0xff);\n                        bool carry_occurred = CARRY4(carry, value1);\n                        value1 = carry + value1;\n                        if (carry_occurred != false) {\n                            value2 = value2 + 1;\n                        }\n                    }\n                }\n                result = CONCAT44(value2, value1 & ~value6);\n            }\n        }\n    }\n    else {\n        result = CONCAT44(value2, value1);\n        if (difference == 0x400) {\n            result = FUNC_080082d4();\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08003004",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "check_string_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "update_parameter_080018cc",
                "param_1": "new_param",
                "DAT_080018f8": "ptr_base_address"
            },
            "code": "void update_parameter_080018cc(uint new_param) {\n    uint* ptr = (uint*)(DAT_080018f8 + 0x14);\n    uint current_value = *ptr;\n    *ptr = new_param | (current_value & 0xfffffaaf);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_parameter_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_at_index_080079e0",
                "param_1": "bit_index",
                "DAT_08007a0c": "data_ptr"
            },
            "code": "void set_bit_at_index_080079e0(int bit_index) {\n    int* ptr = (int*)(DAT_08007a0c + (bit_index >> 5) * 4);\n    int bit_mask = 1 << (bit_index & 0x1f);\n    *ptr = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "bit_index",
                "DAT_08006a88": "array_start_ptr"
            },
            "code": "void set_bit_in_array_08006a58(byte bit_index)\n{\n    uint32_t* array_ptr = (uint32_t*)(DAT_08006a88 + (((uint32_t)bit_index >> 5) + 0x40) * 4);\n    uint32_t bit_mask = 1 << (bit_index & 0x1f);\n    *array_ptr = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_value_08005a84",
                "PTR_DAT_08005a94": "PTR_DATA_VALUE"
            },
            "code": "uint32_t get_value_08005a84(void)\n{\n    uint32_t *ptr_value = (uint32_t *)PTR_DAT_08005a94;\n    return *ptr_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_08005a98",
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08000268",
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "get_value_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "compare_and_return_result_08008b10",
                "in_ZR": "input_char"
            },
            "code": "bool compare_and_return_result_08008b10() {\\n\\tchar input_char;\\n\\tcompare_and_return();\\n\\treturn input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "compare_and_return_result_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = check_for_zero_or_carry_flag_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = is_end_of_string_reached_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_double_precision_number_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_number_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_double_precision_number_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_double_precision_number_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_double_precision_number_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = check_input_is_not_null_08009214_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = check_input_is_not_null_08009214_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = check_input_is_not_null_08009214_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = check_input_is_not_null_08009214_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    check_flag_status_0800192c();\n    break;\n  case 0x11:\n    iVar4 = check_input_is_not_null_08009214_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_number_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_double_precision_number_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = reverseBits_08008590(param_2);\n    uVar5 = calculate_number_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  store_data_and_process_input_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08008590",
                "FUN_0800192c",
                "FUN_08009214",
                "FUN_08009798",
                "FUN_08008bf0",
                "FUN_08009228",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "convert_float_to_uint32_08008c30",
                "param_1": "float_value",
                "param_2": "sign_bit",
                "uVar1": "exponent",
                "uVar2": "mantissa",
                "uVar3": "shifted_mantissa",
                "in_r12": "shifted_exponent",
                "bVar4": "is_denormal",
                "bVar5": "is_nan_or_inf"
            },
            "code": "uint convert_float_to_uint32_08008c30(uint float_value, uint sign_bit) {\n  uint exponent, mantissa, shifted_mantissa, shifted_exponent;\n  bool is_denormal, is_nan_or_inf;\n\n  exponent = float_value >> 23;\n  mantissa = float_value & 0x7FFFFF;\n  is_denormal = exponent == 0;\n  is_nan_or_inf = exponent == 0xFF;\n\n  if (is_nan_or_inf || exponent >= 0x9E) {\n    if ((sign_bit & 0x40000000) != 0) {\n      if (((int)mantissa >> 0x15 == -1) && ((float_value | sign_bit << 0xc) != 0)) {\n        return 0x7FC00000;\n      }\n      return sign_bit & 0x80000000 | 0x7F800000;\n    }\n    if ((int)(exponent + 0x92E00000) < 0 != SCARRY4(mantissa,0x2E00000)) {\n      return sign_bit & 0x80000000;\n    }\n    shifted_exponent = 0x18 - (exponent + 0x92E00000 >> 0x15);\n    shifted_mantissa = float_value >> (shifted_exponent & 0xFF);\n    if (float_value << (0x20 - shifted_exponent & 0xFF) != 0) {\n      shifted_mantissa = shifted_mantissa | 1;\n    }\n    mantissa = mantissa & 0x1FFFFF | 0x100000;\n    mantissa = shifted_mantissa | mantissa << (0x20 - shifted_exponent & 0xFF);\n    mantissa = (mantissa >> (shifted_exponent & 0xFF)) << 1;\n  }\n\n  exponent = (sign_bit & 0x80000000 | float_value >> 0x1D) + mantissa * 4 + (uint)(0x7FFFFFFF < float_value * 8);\n  if (float_value * 8 == 0x80000000) {\n    exponent = exponent & 0xFFFFFFFE;\n  }\n  return exponent;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_080044e8",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "convert_float_to_uint32_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08009990",
                "FUN_0800af78",
                "FUN_08009d78",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_08009b24",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_08009798",
                "FUN_0800adf0",
                "FUN_08009654"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "set_lowest_value_08007bf0",
                "param_1": "value",
                "_DAT_4000002c": "lowest_value_pointer",
                "_DAT_40000024": "lowest_value_in_memory"
            },
            "code": "void set_lowest_value_08007bf0(uint value){\n  PTR_DAT_4000002c = value;\n  if (value <= PTR_DAT_40000024) {\n    PTR_DAT_40000024 = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "set_lowest_value_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "reverseBits_08008590",
                "param_1": "num",
                "param_2": "N/A",
                "param_3": "N/A",
                "param_4": "N/A",
                "uVar1": "N/A",
                "uVar2": "N/A",
                "uVar3": "reversed",
                "uVar4": "N/A",
                "uVar5": "N/A",
                "uVar7": "N/A",
                "in_r12": "N/A",
                "bVar8": "N/A",
                "bVar9": "N/A",
                "bVar10": "N/A",
                "count_leading_zeroes": "N/A"
            },
            "code": "uint64_t reverseBits_08008590(uint32_t num) {\n    uint32_t reversed = 0;\n    for (int i = 0; i < 32; i++) {\n        reversed <<= 1;\n        if (num & 1) reversed |= 1;\n        num >>= 1;\n    }\n    return (uint64_t)reversed << 32;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "reverseBits_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_registers_08007ad0",
                "_DAT_40000000": "register_0",
                "_DAT_40000004": "register_1",
                "_DAT_40000008": "register_2",
                "_DAT_4000000c": "register_3",
                "_DAT_40000010": "register_4",
                "_DAT_40000018": "register_5",
                "_DAT_4000001c": "register_6",
                "_DAT_40000020": "register_7",
                "_DAT_40000024": "register_8",
                "_DAT_40000028": "register_9",
                "_DAT_4000002c": "register_10",
                "_DAT_40000034": "register_11",
                "_DAT_40000038": "register_12",
                "_DAT_4000003c": "register_13",
                "_DAT_40000040": "register_14",
                "_DAT_40000048": "register_15",
                "_DAT_4000004c": "register_16",
                "set_bit_08007a10": "set_bit",
                "PTR_DAT_08007b68": "pointer_1",
                "PTR_DAT_08007b6c": "pointer_2",
                "set_local_c_08007a70": "set_local_variable"
            },
            "code": "void initialize_registers_08007ad0()\n{\n  set_bit(0x40000000);\n  uint64_t* ptr = (uint64_t*)0x40000000;\n  for(int i = 0; i < 10; i++){\n    ptr[i] = 0;\n  }\n  ptr[9] = (uint64_t)(*(uint32_t*)0x08007b68) * (uint64_t)(*(uint32_t*)0x08007b6c) - 1;\n  set_local_variable(0x40000000,0,0);\n  return;\n}",
            "called": [
                "FUN_08007a70",
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_registers_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    fill_memory_with_value_0800b430(auStack_70 + 3,0,0xc);\n    fill_memory_with_value_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = check_and_convert_input_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = reverseBits_08008590(local_58);\n      uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = convert_to_int_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          set_params_and_return_08000478(0,1,2);\n          break;\n        case 0x12:\n          set_params_and_return_08000478(2,0,1);\n          break;\n        case 0x13:\n          set_params_and_return_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = reverseBits_08008590(uVar4);\n          uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = convert_to_int_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = reverseBits_08008590(uVar4);\n          uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = convert_to_int_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = check_and_convert_input_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = check_for_zero_or_carry_flag_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = reverse_and_convert_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = reverse_and_convert_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = reverse_and_convert_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = reverseBits_08008590(local_58);\n          uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = calculate_shifted_value_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = reverse_and_convert_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = is_end_of_string_reached_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = is_end_of_string_reached_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = reverseBits_08008590(local_58);\n          uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = calculate_shifted_value_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = reverse_and_convert_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = reverse_and_convert_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = reverse_and_convert_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          checkAndUpdateStatus_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          check_and_update_status_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = validate_input_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = is_end_of_string_reached_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              decode_and_display_alarm_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = reverseBits_08008590(local_34);\n          uVar7 = calculate_number_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = convert_to_int_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = validate_input_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              process_input_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            checkAndUpdateStatus_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = validate_input_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = validate_input_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          checkAndUpdateStatus_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            process_input_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            process_input_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          fill_memory_with_value_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = is_end_of_string_reached_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          display_alarm_and_update_status_until_complete_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            set_flag_if_condition_met_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08002fd4",
                "FUN_08008590",
                "FUN_08008bf0",
                "FUN_08000220",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08001f00",
                "FUN_080025e8",
                "FUN_08001e98",
                "FUN_08000478",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_0800525c",
                "FUN_08004bf4",
                "FUN_080098d0",
                "FUN_08009228",
                "FUN_0800056c",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_0800184c",
                "FUN_0800923c",
                "FUN_08008894",
                "FUN_08002408"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_and_print_help_message_080039a0",
                "initialize_pointers_to_zero_08003980": "initialize_pointers_to_zero",
                "print_help_message_08004228": "print_help_message"
            },
            "code": "void initialize_and_print_help_message_080039a0(void)\n{\n  initialize_pointers_to_zero();\n  print_help_message();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_and_print_help_message_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concatenate_32bit_to_64bit_08009204",
                "param_1": "first_half",
                "param_2": "second_half",
                "CONCAT44": "concatenate_32bit_to_64bit"
            },
            "code": "uint64_t concatenate_32bit_to_64bit_08009204(uint32_t first_half, uint32_t second_half)\n{\n  check_overflow_and_return_result();\n  uint64_t result = ((uint64_t)second_half << 32) | first_half;\n  return result;\n}",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_0800923c"
            ],
            "imported": false,
            "current_name": "concatenate_32bit_to_64bit_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "process_input_and_calculate_result_080029d8",
                "param_1": "input_param",
                "param_2": "input_struct_addr",
                "param_3": "output_struct_addr",
                "iVar1": "is_input_valid",
                "uVar2": "calculated_result",
                "uVar3": "input_string"
            },
            "code": "void process_input_and_calculate_result_080029d8(undefined4 input_param,int input_struct_addr,int output_struct_addr)\\n{\\n  int is_input_valid;\\n  undefined4 calculated_result;\\n  undefined4 input_string;\\n  if (((input_struct_addr != 0) && (output_struct_addr != 0)) &&\\n     (is_input_valid = validate_input_08009214_08009214(*(undefined4 *)(input_struct_addr + 0x18),*(undefined4 *)(input_struct_addr + 0x1c)),\\n     is_input_valid == 0)) {\\n    if ((*(char *)(input_struct_addr + 0x25) == \"\\0\") &&\\n       (is_input_valid = check_input_is_empty_08009264(*(undefined4 *)(input_struct_addr + 0x1c),*(undefined4 *)(output_struct_addr + 0x18)),\\n       is_input_valid != 0)) {\\n      input_string = *(undefined4 *)(input_struct_addr + 0x1c);\\n      calculated_result = calculate_result_from_parameters_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000,\\n                           *(undefined4 *)(output_struct_addr + 0x18),*(undefined4 *)(input_struct_addr + 0x20));\\n      is_input_valid = check_end_of_string_reached_08009228(input_string,calculated_result);\\n      if (is_input_valid == 0) {\\n        calculated_result = calculate_result_from_parameters_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000,\\n                             *(undefined4 *)(output_struct_addr + 0x18),*(undefined4 *)(input_struct_addr + 0x20));\\n      }\\n      else {\\n        calculated_result = *(undefined4 *)(input_struct_addr + 0x1c);\\n      }\\n      *(undefined4 *)(input_struct_addr + 0x18) = calculated_result;\\n    }\\n    else {\\n      *(undefined4 *)(input_struct_addr + 0x18) = *(undefined4 *)(input_struct_addr + 0x1c);\\n    }\\n    *(undefined *)(input_struct_addr + 0x24) = 1;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "process_input_and_calculate_result_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value",
                "_DAT_40000038": "global_variable"
            },
            "code": "void set_global_variable_08007c5e(undefined4 value)\n{\n  _DAT_40000038 = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_variable_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "set_param_from_pointer_08005760",
                "PTR_DAT_08005774": "PTR_DATA",
                "set_param_080052ac": "set_param"
            },
            "code": "void set_param_from_pointer_08005760(void)\n{\n  unsigned short value = *(unsigned short *)(PTR_DAT_08005774 + 0x18);\n  set_param(value);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "set_param_from_pointer_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "is_end_of_input_08008b24",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_input_08008b24(void)\n{\n  char current_char;\n  compare_and_return_if_end_of_input();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08004148",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_if_condition_met_0800587c",
                "PTR_DAT_0800589c": "data_array"
            },
            "code": "void update_data_if_condition_met_0800587c(void)\n{\n  if (PTR_DAT_0800589c[1] == 3) {\n    PTR_DAT_0800589c[1] = 4;\n    PTR_DAT_0800589c[16] = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_condition_met_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_result_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp3",
                "unaff_r4": "temp4",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "temp5",
                "bVar4": "check"
            },
            "code": "ulonglong calculate_result_08008a02(uint input1,uint input2,uint input3,uint input4)\n{\n  uint temp1, temp2, temp3, temp4;\n  bool check;\n  temp1 = input4 >> 0x14;\n  temp2 = input2;\n  if (input3 != input4 || temp1 != input4) {\n    if (input3 == input4) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp2 = input4, temp1 != input4)) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == input4) {\n      input1 = input3;\n      temp2 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      check = (input1 | input2 << 1) == 0;\n      if (!check) {\n        check = (input3 | input4 << 1) == 0;\n      }\n      if (!check) {\n        if (input3 == 0) {\n          temp2 = input2 & 0x80000000;\n          do {\n            temp3 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(temp3 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp2;\n          if (temp1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp2,input1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "calculate_result_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "string_to_process",
                "local_c": "current_char"
            },
            "code": "void process_string_0800369c(char *string_to_process)\n{\n  char *current_char = string_to_process;\n  while (*current_char != '\\0') {\n    wait_for_flag_and_return_08008250(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "wait_until_sum_exceeds_param_plus_initial_value_08005a98",
                "param_1": "target_sum",
                "iVar1": "initial_value",
                "uVar2": "current_value",
                "get_value_08005a84": "get_current_value"
            },
            "code": "void wait_until_sum_exceeds_param_plus_initial_value_08005a98(int target_sum)\n{\n  int initial_value = get_initial_value();\n  uint current_value;\n  \n  do {\n    current_value = get_current_value();\n  } while (current_value < (uint)(target_sum + initial_value));\n  return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "wait_until_sum_exceeds_param_plus_initial_value_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "process_input_and_print_results_080044e8",
                "PTR_s__G92__080046c8": "input_type_strings",
                "PTR_DAT_080046bc": "global_data",
                "PTR_DAT_080046cc": "input_values_pointer",
                "PTR_DAT_08004698": "invalid_input_string",
                "PTR_DAT_0800469c": "input_type_0_string",
                "PTR_DAT_080046a0": "input_type_1_string",
                "PTR_DAT_080046a4": "input_type_2_string",
                "PTR_DAT_080046a8": "input_type_3_string",
                "PTR_DAT_080046ac": "input_type_4_string",
                "PTR_DAT_080046b0": "input_type_5_string",
                "PTR_DAT_080046b4": "input_type_6_string",
                "PTR_DAT_080046b8": "input_type_7_string",
                "validate_input_08004d7c": "validate_input",
                "process_string_080036c6": "print_string",
                "print_float_08003826": "print_float",
                "reverseBits_08008590": "reverse_bits",
                "FUNC_08008640": "process_value",
                "convert_float_to_uint32_08008c30": "convert_float_to_uint32",
                "print_error_message_08004030": "print_error_message"
            },
            "code": "void process_input_and_print_results_080044e8(void)\n{\n  int input_index;\n  undefined4 input_values[3];\n  byte output_index;\n  byte should_reverse;\n  \n  output_index = 0;\n  while (true) {\n    if (output_index > 7) {\n      print_results();\n      return;\n    }\n    if (!validate_input(output_index, input_values)) {\n      print_error_message(10);\n      return;\n    }\n    print_input_type(output_index);\n    should_reverse = PTR_DAT_080046bc[0x28] & 1;\n    for (input_index = 0; input_index < 3; input_index++) {\n      if (!should_reverse) {\n        print_float(input_values[input_index]);\n      } else {\n        u64 reversed_bits = reverse_bits(input_values[input_index]);\n        u64 processed_value = process_value(reversed_bits);\n        u32 final_value = convert_float_to_uint32(processed_value);\n        print_float(final_value);\n      }\n      print_separator(input_index);\n    }\n    output_index++;\n  }\n}\n",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_input_and_print_results_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "check_param_is_valid_08006c9c",
                "param_1": "param",
                "bVar1": "is_valid"
            },
            "code": "bool check_param_is_valid_08006c9c(int param) {\n  bool is_valid = param < 0x1000000;\n  if (is_valid) {\n    DAT_08006cdc[1] = param - 1;\n    set_byte_at_offset_08006b00(0xffffffff,0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return !is_valid;\n}",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "check_param_is_valid_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = reverse_bits_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        convert_to_int_08008ba0();\n        uVar25 = reverse_bits_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = convert_to_int_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = calculate_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = decode_string_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = convert_to_int_08008ba0();\n    uVar25 = reverse_bits_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = should_return_true_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = calculate_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = compare_and_return_result_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = calculate_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = should_return_true_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = convert_to_int_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = convert_to_int_08008ba0();\n        uVar26 = reverse_bits_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = convert_to_int_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = reverse_bits_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = calculate_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = reverse_bits_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_080094c0",
                "FUN_0800856c",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800b2e8",
                "FUN_08008b10"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_condition_and_set_flag_if_met_0800195c",
                "PTR_DAT_08001990": "data_array",
                "set_flag_if_condition_met_080025e8": "set_flag_if_condition_met"
            },
            "code": "void check_condition_and_set_flag_if_met_0800195c(void)\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    set_flag_if_condition_met();\n    PTR_DAT_08001990[2] |= 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_condition_and_set_flag_if_met_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "check_input_is_not_null_08009214_08009214",
                "in_ZR": "input_char"
            },
            "code": "bool check_input_is_not_null_08009214_08009214(void)\n{\n  char input_char;\n  concatenate_32bit_to_64bit_08009204();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_input_is_not_null_08009214_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_input_values_08004dd2",
                "bVar1": "input_value",
                "iVar2": "check_result",
                "PTR_DAT_08004e2c": "PTR_DATA",
                "get_value_from_array_08000310": "get_value_from_array",
                "check_values_080003ec": "check_values",
                "store_data_and_process_input_08004c48": "store_input_data_and_process"
            },
            "code": "int check_input_values_08004dd2() {\n    byte input_value = get_value_from_array(0);\n    if (input_value == 5) {\n        int check_result = check_values(PTR_DAT_08004e2c, 1, 0x40);\n        if (check_result == 0) {\n            return 0;\n        }\n    }\n    else {\n        if (input_value > 4) {\n            return 0;\n        }\n        int check_result = check_values(PTR_DAT_08004e2c, 1, 0x28);\n        if (check_result == 0) {\n            return 0;\n        }\n        store_input_data_and_process(0);\n    }\n    return 1;\n}",
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_input_values_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "set_param_from_pointer_08005778",
                "PTR_DAT_0800578c": "pointer_to_data",
                "set_param_080052ac": "set_parameter",
                "data": "data_from_pointer"
            },
            "code": "void set_param_from_pointer_08005778(void)\n{\n    int* PTR_DAT_0800578c = (int*)PTR_DAT_0800578c;\n    int data = *(int*)PTR_DAT_0800578c;\n    set_param_080052ac((short)data);\n    return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "set_param_from_pointer_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "A",
                "param_2": "B",
                "param_3": "C",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "FUNC_08008eec": "perform_operation",
                "FUNC_08008cd8": "combine_results",
                "FUNC_08008cdc": "perform_operation",
                "FUNC_08009054": "finalize_result"
            },
            "code": "int calculate_result_080028bc(int A, int B, int C) {\n  int result_1 = perform_operation(A, A);\n  int result_2 = perform_operation(B, B);\n  int result_3 = combine_results(result_1, result_2);\n  int result_4 = perform_operation(C, C);\n  int final_result = finalize_result(result_3, result_4);\n  return final_result;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "calculate_result": "calculate_result",
                "uVar1": "result",
                "uVar2": "leading_zeroes",
                "PTR_DAT_0800667c": "result_ptr",
                "PTR_DAT_08006678": "shift_amount_arr",
                "DAT_08006674": "data",
                "calculate_result_080064ec": "calculate",
                "count_leading_zeroes": "count_leading_zeroes",
                "FUN_08006628": "calculate_result_08006628"
            },
            "code": "uint32_t calculate_result_08006628(void)\n{\n    uint32_t result = calculate_result_080064ec();\n    uint32_t leading_zeroes = count_leading_zeroes(0xf000000);\n    uint32_t shift_amount = PTR_DAT_08006678[(*(uint32_t *)(DAT_08006674 + 8) & 0xf0) >> (leading_zeroes & 0xff)];\n    *(uint32_t *)PTR_DAT_0800667c = result >> shift_amount;\n    return *(uint32_t *)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "imported": false,
            "current_name": "calculate_result_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "set_and_do_nothing_if_bit_set_0800738e",
                "param_1": "input_value",
                "DAT_080073bc": "data_pointer",
                "PTR_080073bc": "data_pointer",
                "*(uint *)(DAT_080073bc + 0x14)": "bit_mask"
            },
            "code": "void set_and_do_nothing_if_bit_set_0800738e(uint16_t input_value)\n{\n  uint32_t* DAT_080073bc = (uint32_t *)(DAT_080073bc + 0x14);\n  uint32_t *(uint *)(DAT_080073bc + 0x14) = *DAT_080073bc;\n  if(((uint32_t)input_value & *(uint *)(DAT_080073bc + 0x14)) != 0)\n  {\n    *DAT_080073bc = (uint32_t)input_value;\n    do_nothing_080073c0(input_value);\n  }\n  return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "set_and_do_nothing_if_bit_set_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  set_param_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = get_pointer_if_not_equal_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      clear_bits_and_check_condition_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        calculate_and_set_value_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = check_if_threshold_exceeded_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            calculate_and_set_value_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            clear_bits_and_check_condition_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = check_if_threshold_exceeded_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          calculate_and_set_value_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          calculate_and_set_value_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = check_if_threshold_exceeded_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          calculate_and_set_value_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      check_and_reset_value_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_080052dc",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080057e4",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "copy_data_and_initialize_080092c4",
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void copy_data_and_initialize_080092c4(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (index = 0; PTR_DAT_08009304 + index < PTR_DAT_08009308; index += 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + index) = *(undefined4 *)(DAT_08009300 + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_0800930c; data_ptr < PTR_DAT_08009310; data_ptr++) {\n    *data_ptr = 0;\n  }\n  set_flag_and_initialize_data_0800756c();\n  execute_functions_0800b3e8();\n  jump_table = (code *)0x80092fa;\n  main_08007540();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_08007540",
                "FUN_0800756c",
                "FUN_0800b3e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_initialize_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "wait_for_flag_and_return_08008250",
                "param_1": "flag_ptr"
            },
            "code": "void wait_for_flag_and_return_08008250(undefined flag_ptr){\n  wait_for_flag_08007e1c(flag_ptr);\n  return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "imported": false,
            "current_name": "wait_for_flag_and_return_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "check_and_convert_input_0800184c",
                "param_1": "output",
                "param_2": "input_len",
                "param_3": "input_len",
                "param_4": "input",
                "uVar2": "status",
                "iVar1": "status",
                "*PTR_DAT_080018c8": "*error_code",
                "*param_1": "*output",
                "*param_4": "*input",
                "(uint)*param_4": "index"
            },
            "code": "int check_and_convert_input_0800184c(byte *output, int input_len, int *PTR_DAT_080018c8, byte *input) {\n  int index = (int)*input;\n  if (*(char *)(input_len + index) == '\\0') {\n    *PTR_DAT_080018c8 = 0;\n    return 0;\n  }\n  else {\n    *output = *(byte *)(input_len + index);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      *PTR_DAT_080018c8 = 2;\n      return 0;\n    }\n    else {\n      *input = *input + 1;\n      int status = parse_and_convert_input(input_len, input, output);\n      if (status == 0) {\n        *PTR_DAT_080018c8 = 1;\n        return 0;\n      }\n      else {\n        return 1;\n      }\n    }\n  }\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_convert_input_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = reverseBits_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = reverseBits_08008590(uVar1);\n  uVar5 = thunk_calculate_value_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = check_for_zero_or_carry_flag_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = reverseBits_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = check_concatenation_result_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = reverseBits_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = reverseBits_08008590(uVar1);\n  uVar6 = reverseBits_08008590(local_34 & 0x7fffffff);\n  uVar5 = calculate_hypotenuse_and_set_sign_bit_to_one_and_shift_right_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = check_input_is_not_null_08009214_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = reverseBits_08008590(uVar1);\n    uVar5 = decode_string_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = calculate_shifted_value_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = convert_to_big_endian_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = convert_to_big_endian_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = convert_to_big_endian_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = reverseBits_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = reverseBits_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = convert_to_big_endian_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = reverseBits_08008590(uVar1);\n        uVar5 = calculate_hash_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = convert_to_big_endian_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = reverseBits_08008590(uVar1);\n        uVar5 = calculate_hash_from_data_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = convert_float_to_uint32_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      checkAndUpdateStatus_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    checkAndUpdateStatus_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009250",
                "FUN_08009410",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_080096e8",
                "FUN_08008640",
                "FUN_08008bf0",
                "thunk_FUN_08009990",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_0800923c",
                "FUN_0800981c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "set_bits_of_uint_at_offset_08006ce0",
                "param_1": "value"
            },
            "code": "void set_bits_of_uint_at_offset_08006ce0(uint32_t value) {\n  set_bits_of_uint_at_offset_08006ce0_08006950(value);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "set_bits_of_uint_at_offset_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "set_bit_08006d4a",
                "param_1": "bit_position",
                "set_bit_at_position_080069e4": "set_bit_at_position"
            },
            "code": "void set_bit_08006d4a(char bit_position){\n  set_bit_08006d4a_at_position(bit_position);\n  return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculate_result_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_0800a1bc",
                "FUN_080098d0",
                "FUN_08009990",
                "FUN_0800af78",
                "FUN_080005b4",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_input_08000374",
                "param_1": "input_length",
                "param_2": "input_data",
                "param_3": "output_address",
                "local_1c": "current_length",
                "local_18": "current_char",
                "local_14": "current_address",
                "local_9": "checksum"
            },
            "code": "void process_input_08000374(int input_length, char *input_data, int output_address)\n{\n  int current_length;\n  char *current_char;\n  int current_address;\n  char checksum = '\\0';\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    initialize_memory_and_set_flag_080002f0();\n    current_char = input_data;\n    current_address = output_address;\n  }\n  for (current_length = input_length; current_length != 0; current_length--) {\n    checksum = (checksum != '\\0') + *current_char;\n    store_data_in_memory_08000340(current_address, *current_char);\n    current_char++;\n    current_address++;\n  }\n  store_data_in_memory_08000340(current_address, checksum);\n  return;\n}",
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004bc0",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "process_input_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "number",
                "local_c": "absolute_value"
            },
            "code": "void print_absolute_value_080037fc(int number)\n{\n  int absolute_value;\n  absolute_value = number;\n  if (number < 0) {\n    wait_for_flag_and_return_08008250(0x2d);\n    absolute_value = -number;\n  }\n  print_digits_of_number_08003778(absolute_value);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_0800a1bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "result_1",
                "uVar2": "var_2",
                "iVar3": "var_1",
                "uVar4": "var_5",
                "uVar5": "var_11",
                "uVar6": "var_3",
                "uVar7": "var_7",
                "uVar8": "result_1",
                "uVar9": "var_9",
                "uVar10": "var_10",
                "uVar11": "var_11",
                "uVar12": "var_10",
                "uVar13": "var_9",
                "uVar14": "var_11"
            },
            "code": "uint calculate_0800a1bc(uint input_1, uint input_2)\n{\n  uint result_1;\n  uint result_2;\n  int var_1;\n  uint var_2;\n  uint var_3;\n  uint var_4;\n  uint var_5;\n  uint var_6;\n  uint var_7;\n  uint var_8;\n  uint var_9;\n  uint var_10;\n  undefined8 var_11;\n  if ((DAT_0800a340 & ~input_2) == 0) {\n    var_11 = FUNC_08008640(input_1,input_2,input_1,input_2);\n    result_1 = FUNC_080082d4((int)var_11,(int)((ulonglong)var_11 >> 0x20),input_1,input_2);\n    return result_1;\n  }\n  if ((int)input_2 < 1) {\n    if ((input_2 & 0x7fffffff | input_1) == 0) {\n      return input_1;\n    }\n    if (input_2 != 0) {\n      var_11 = FUNC_080082d0(input_1,input_2,input_1);\n      result_2 = (uint)((ulonglong)var_11 >> 0x20);\n      result_1 = FUNC_08008894((int)var_11,result_2,(int)var_11,result_2);\n      return result_1;\n    }\n    do {\n      var_6 = input_1;\n      result_1 = var_6 >> 0xb;\n      input_2 = input_2 - 0x15;\n      input_1 = var_6 << 0x15;\n    } while (result_1 == 0);\n    var_2 = input_2;\n    if (-1 < (int)var_6) goto LAB_0800a290;\n    var_7 = 0x20;\n    var_3 = 0xffffffff;\n    var_6 = input_1;\n  }\n  else {\n    var_2 = (int)input_2 >> 0x14;\n    result_1 = input_2;\n    var_6 = input_1;\n    if (var_2 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    var_6 = 0;\n    var_7 = result_1;\n    do {\n      var_3 = var_6;\n      result_1 = var_7 << 1;\n      var_1 = var_7 << 0xc;\n      var_6 = var_3 + 1;\n      var_7 = result_1;\n    } while (-1 < var_1);\n    var_7 = 0x20 - var_6;\n    input_2 = var_2;\n    var_6 = input_1 << (var_6 & 0xff);\n  }\n  result_1 = input_1 >> (var_7 & 0xff) | result_1;\n  var_2 = input_2 - var_3;\nLAB_0800a1da:\n  result_1 = result_1 & 0xfffff | 0x100000;\n  if (-1 < (int)(var_2 << 0x1f)) {\n    result_1 = result_1 * 2 - ((int)var_6 >> 0x1f);\n    var_6 = var_6 << 1;\n  }\n  var_9 = 0;\n  result_1 = result_1 * 2 - ((int)var_6 >> 0x1f);\n  var_6 = var_6 << 1;\n  var_2 = 0;\n  var_7 = 0x16;\n  var_3 = 0x200000;\n  do {\n    var_1 = var_2 + var_3;\n    if (var_1 <= (int)result_1) {\n      result_1 = result_1 - var_1;\n      var_2 = var_1 + var_3;\n      var_9 = var_9 + var_3;\n    }\n    var_7 = var_7 - 1;\n    result_1 = result_1 * 2 - ((int)var_6 >> 0x1f);\n    var_3 = var_3 >> 1;\n    var_6 = var_6 << 1;\n  } while (var_7 != 0);\n  var_4 = 0x20;\n  var_8 = 0x80000000;\n  var_3 = var_7;\n  do {\n    var_5 = var_8 + var_7;\n    var_10 = var_2;\n    if ((int)var_2 < (int)result_1) {\n      if ((int)var_5 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(var_5 + var_8)) {\n          var_10 = var_2 + 1;\n        }\n      }\n      var_9 = var_1 - var_2;\n      var_2 = var_10;\n      if (var_6 < var_5) {\n        var_9 = var_9 - 1;\n      }\nLAB_0800a262:\n      var_7 = var_5 + var_8;\n      var_6 = var_6 - var_5;\n      var_3 = var_3 + var_8;\n      result_1 = var_9;\n    }\n    else if ((result_1 == var_2) && (var_5 <= var_6)) {\n      if ((int)var_5 < 0) goto LAB_0800a26a;\n      var_9 = 0;\n      var_2 = result_1;\n      goto LAB_0800a262;\n    }\n    var_4 = var_4 - 1;\n    var_8 = var_8 >> 1;\n    result_1 = result_1 * 2 - ((int)var_6 >> 0x1f);\n    var_6 = var_6 << 1;\n    if (var_4 == 0) {\n      if ((result_1 | var_6) == 0) {\n        var_4 = var_3 >> 1;\n      }\n      else if (var_3 == 0xffffffff) {\n        var_9 = var_9 + 1;\n      }\n      else {\n        var_4 = var_3 + 1 >> 1;\n      }\n      if ((var_9 & 1) != 0) {\n        var_4 = var_4 | 0x80000000;\n      }\n      return var_4;\n    }\n  } while( true );\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "checkAndUpdateStatus_0800525c",
                "param_1": "inputChar",
                "PTR_DAT_080052a8": "PTR_DAT_080052a8",
                "display_alarm_and_update_status_until_complete_08002fd4": "displayAlarmAndUpdateStatusUntilComplete",
                "do_nothing_and_return_08005250": "doNothingAndReturn",
                "do_nothing_0800522c": "doNothing",
                "do_nothing_08005220": "doSomething",
                "do_nothing_08005208": "doAnotherThing"
            },
            "code": "void checkAndUpdateStatus_0800525c(char inputChar) {\n  int currentChar = (int)inputChar;\n  int storedChar = (uint)(byte)*PTR_DAT_080052a8;\n  if (currentChar != storedChar) {\n    displayAlarmAndUpdateStatusUntilComplete();\n    if (inputChar == '\\0') {\n      doNothingAndReturn();\n    }\n    else {\n      if (inputChar < '\\x01') {\n        doNothing();\n      }\n      else {\n        doSomething();\n      }\n      doAnotherThing();\n    }\n    *PTR_DAT_080052a8 = inputChar;\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c",
                "FUN_08005220",
                "FUN_08005208"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "checkAndUpdateStatus_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_short_at_address_080073d4",
                "param_1": "address"
            },
            "code": "void set_short_at_address_080073d4(uint address)\n{\n    uint offset = address >> 4;\n    uint base_address = (offset * 0x400) + 0x4002001a;\n    uint bit_position = address & 0xf;\n    short value = 1 << bit_position;\n    *(short*)base_address = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_short_at_address_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "set_bit_in_array_08006dfe",
                "param_1": "character",
                "set_bit_in_array_08006a8c": "set_bit_in_array_helper"
            },
            "code": "void set_bit_in_array_08006dfe(char character) {\n    set_bit_in_array_08006dfe_helper((int) character);\n}\n",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_in_array_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "synchronize_data_and_return_08006d66"
            },
            "code": "void synchronize_data_and_return_08006d66(void)\n{\n  synchronize_data_08006c70();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "synchronize_data_and_return_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "update_registers_08006e88",
                "param_1": "register_values",
                "param_2": "mask_values",
                "uVar1": "mask_value",
                "uVar2": "mask_result",
                "iVar3": "register_index",
                "local_c": "mask_bit"
            },
            "code": "void update_registers_08006e88(uint *register_values, uint *mask_values)\n{\n  uint mask_bit;\n  uint mask_value;\n  int register_index;\n  for (mask_bit = 0; mask_bit < 0x10; mask_bit++) {\n    mask_value = 1 << (mask_bit & 0xff);\n    if ((*mask_values & mask_value) == mask_value) {\n      if ((mask_values[1] == 2) || (mask_values[1] == 0x12)) {\n        uint register_value = mask_values[4];\n        register_values[(mask_bit >> 3) + 8] &= ~(0xf << ((mask_bit & 7) << 2));\n        register_values[(mask_bit >> 3) + 8] |= register_value << ((mask_bit & 7) << 2);\n      }\n      *register_values &= ~(3 << ((mask_bit & 0x7f) << 1));\n      *register_values |= (mask_values[1] & 3) << ((mask_bit & 0x7f) << 1);\n      if ((((mask_values[1] == 1) || (mask_values[1] == 2)) || (mask_values[1] == 0x11)) || (mask_values[1] == 0x12)) {\n        register_values[2] &= ~(3 << ((mask_bit & 0x7f) << 1));\n        register_values[2] |= mask_values[3] << ((mask_bit & 0x7f) << 1);\n        register_values[1] &= ~(1 << (mask_bit & 0xff));\n        register_values[1] |= (mask_values[1] >> 4 & 1) << (mask_bit & 0xff);\n      }\n      register_values[3] &= ~(3 << ((mask_bit & 0x7f) << 1));\n      register_values[3] |= mask_values[2] << ((mask_bit & 0x7f) << 1);\n      if ((mask_values[1] & 0x10000000) != 0) {\n        *(uint *)(PTR_DAT_0800719c + 0x44) |= 0x4000;\n        *(uint *)(PTR_DAT_080071a0 + ((mask_bit >> 2) + 2) * 4) = ~(0xf << ((mask_bit & 3) << 2)) & *(uint *)(PTR_DAT_080071a0 + ((mask_bit >> 2) + 2) * 4);\n        if (register_values == PTR_DAT_080071a4) {\n          register_index = 0;\n        }\n        else if (register_values == PTR_DAT_080071a8) {\n          register_index = 1;\n        }\n        else if (register_values == PTR_DAT_080071ac) {\n          register_index = 2;\n        }\n        else if (register_values == PTR_DAT_080071b0) {\n          register_index = 3;\n        }\n        else if (register_values == PTR_DAT_080071b4) {\n          register_index = 4;\n        }\n        else if (register_values == PTR_DAT_080071b8) {\n          register_index = 5;\n        }\n        else if (register_values == PTR_DAT_080071bc) {\n          register_index = 6;\n        }\n        else if (register_values == PTR_DAT_080071c0) {\n          register_index = 7;\n        }\n        else if (register_values == PTR_DAT_080071c4) {\n          register_index = 8;\n        }\n        else {\n          register_index = 10;\n        }\n        *(uint *)(PTR_DAT_080071a0 + ((mask_bit >> 2) + 2) * 4) = register_index << ((mask_bit & 3) << 2) | *(uint *)(PTR_DAT_080071a0 + ((mask_bit >> 2) + 2) * 4);\n        *PTR_DAT_080071cc = ~mask_value & *PTR_DAT_080071cc;\n        PTR_DAT_080071cc[1] = ~mask_value & PTR_DAT_080071cc[1];\n        if ((mask_values[1] & 0x10000) != 0) {\n          *PTR_DAT_080071cc = mask_value | *PTR_DAT_080071cc;\n        }\n        if ((mask_values[1] & 0x20000) != 0) {\n          PTR_DAT_080071cc[1] = mask_value | PTR_DAT_080071cc[1];\n        }\n        PTR_DAT_080071cc[2] = ~mask_value & PTR_DAT_080071cc[2];\n        PTR_DAT_080071cc[3] = ~mask_value & PTR_DAT_080071cc[3];\n        if ((mask_values[1] & 0x100000) != 0) {\n          PTR_DAT_080071cc[2] = mask_value | PTR_DAT_080071cc[2];\n        }\n        if ((mask_values[1] & 0x200000) != 0) {\n          PTR_DAT_080071cc[3] = mask_value | PTR_DAT_080071cc[3];\n        }\n      }\n    }\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_registers_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "num_bits",
                "local_10": "i",
                "local_c": "mask",
                "uVar1": "character"
            },
            "code": "void print_binary_representation_080036f0(uint number, int num_bits) {\n    uint mask = 1 << (num_bits - 1);\n    for (int i = 0; i < num_bits; i++) {\n        if ((mask & number) == 0) {\n            putchar('0');\n        }\n        else {\n            putchar('1');\n        }\n        mask = mask >> 1;\n    }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": false,
            "current_name": "print_binary_representation_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "process_input_and_calculate_result_08002edc",
                "process_input_and_calculate_result_08002a94": "process_input",
                "process_input_data_08002ba8": "process_input_data",
                "calculate_hash_and_shift_08002e08": "calculate_hash_and_shift"
            },
            "code": "void process_input_and_calculate_result_08002edc(void)\n{\n  process_input();\n  calculate_result();\n}\n\nvoid process_input_data(void)\n{\n  validate_input();\n  sanitize_input();\n}\n\nvoid calculate_hash_and_shift(void)\n{\n  calculate_hash();\n  perform_shift();\n}\n",
            "called": [
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002a94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "process_input_and_calculate_result_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "print_binary_representation_0800375c",
                "param_1": "input",
                "0x10": "num_bits"
            },
            "code": "void print_binary_representation_0800375c(uint16_t input, uint8_t num_bits){\n    print_binary_representation_0800375c_080036f0(input, num_bits);\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "print_binary_representation_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_value_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "result",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp6"
            },
            "code": "uint calculate_value_08009990(uint input1, uint input2, uint input3, uint input4)\n{\n  int temp1;\n  undefined4 temp2;\n  uint result;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp6 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (temp4 | (-input3 | input3) >> 0x1f)) ||\n     (temp5 = input2 & 0x7fffffff, DAT_08009b18 < (temp5 | (-input1 | input1) >> 0x1f))) {\n    temp4 = FUNC_080082d4(input3,input4,input1,input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUNC_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      temp4 = DAT_08009af0;\n      if ((temp3 != 2) && (temp4 = input1, temp3 == 3)) {\n        temp4 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == DAT_08009b18) {\n          temp3 = temp3 - 1;\n          if (temp5 == temp4) {\n            if (2 < temp3) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + temp3 * 8);\n          }\n          if (temp3 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != DAT_08009b18) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUNC_08008894(input1,input2,input3,input4,input4);\n              do_nothing_0800b2cc();\n              temp6 = FUNC_0800af78();\n            }\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUNC_080082d0(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n            temp4 = FUNC_080082d0(DAT_08009af0,DAT_08009af4,(int)temp6,\n                                 (int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUNC_080082d0(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n          temp4 = FUNC_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),DAT_08009af0,DAT_08009af4)\n          ;\n          return temp4;\n        }\n      }\n      temp4 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        temp4 = DAT_08009b00;\n      }\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_0800b2cc",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "calculate_value_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58",
                "*DAT_08007e80": "data",
                "0x20": "bit_position"
            },
            "code": "bool is_bit_set_08007e58(uint8_t **DAT_08007e80, uint8_t bit_position) {\n    return (**DAT_08007e80 & (1 << bit_position)) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "is_bit_set_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "initialize_data_buffer_080059f8",
                "DAT_08005a4c": "data_buffer_ptr"
            },
            "code": "int initialize_data_buffer_080059f8(void)\n{\n    int* DAT_08005a4c = (int*)(DAT_08005a4c);\n    * (DAT_08005a4c + 5) = -1;\n    * (DAT_08005a4c + 5) = 0;\n    * (DAT_08005a4c + 6) = -1;\n    * (DAT_08005a4c + 6) = 0;\n    * (DAT_08005a4c + 4) = -1;\n    * (DAT_08005a4c + 4) = 0;\n    * (DAT_08005a4c + 5) = -1;\n    * (DAT_08005a4c + 5) = 0;\n    * (DAT_08005a4c + 3) = -1;\n    * (DAT_08005a4c + 3) = 0;\n    do_nothing_08005a5c();\n    return 0;\n}",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_buffer_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "handle_user_input_08003f34",
                "bVar1": "current_char",
                "bVar2": "special_char_result",
                "uVar3": "command_result",
                "*PTR_DAT_08004020": "command_result",
                "*PTR_DAT_08004024": "input_pointers.buffer",
                "*PTR_DAT_0800401c": "status",
                "*PTR_DAT_08004028": "is_parsing_command",
                "initialize_pointers_to_zero_08003980": "reset_input_pointers",
                "parse_input_and_execute_command_08003b98": "execute_command",
                "print_error_message_08004030": "print_error_message",
                "display_alarm_and_update_status_if_needed_08003a74": "display_alarm_and_update_status",
                "undefined4": "int",
                "byte": "char",
                "true": "1",
                "false": "0"
            },
            "code": "void handle_user_input_08003f34(void)\n{\n  char current_char;\n  char special_char_result;\n  int *PTR_DAT_08004020;\n  int current_index;\n  int *PTR_DAT_08004028 = 0;\n  while (1) {\n    current_char = getchar();\n    special_char_result = check_for_special_chars();\n    if (special_char_result == 0xff) {\n      return;\n    }\n    if ((special_char_result == 10) || (special_char_result == 0xd)) {\n      continue;\n    }\n    if (*PTR_DAT_08004028 == 0) {\n      if (current_index == 0) {\n        if ((current_char > 0x20) && (current_char != 0x2f)) {\n          if (current_char == 0x28) {\n            *PTR_DAT_08004028 = 1;\n          }\n          else if (*PTR_DAT_08004020 == -1) {\n            print_error_message(0xd);\n            reset_input_pointers();\n          }\n          else if ((current_char < 0x61) || (current_char > 0x7a)) {\n            input_pointers.current_index = current_index + 1;\n            *PTR_DAT_08004024[current_index] = current_char;\n          }\n          else {\n            input_pointers.current_index = current_index + 1;\n            *PTR_DAT_08004024[current_index] = current_char - 0x20;\n          }\n        }\n      }\n      else if (current_char == 0x29) {\n        *PTR_DAT_08004028 = 0;\n      }\n    }\n    else {\n      if (current_char == 0x29) {\n        *PTR_DAT_08004028 = 0;\n        execute_command(*PTR_DAT_08004024);\n        reset_input_pointers();\n      }\n      else {\n        input_pointers.current_index = current_index + 1;\n        *PTR_DAT_08004024[current_index] = current_char;\n      }\n    }\n  }\n}\n",
            "called": [
                "FUN_08008286",
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "handle_user_input_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "carryCheck",
                "uVar2": "shiftValue",
                "uVar3": "normalizedInput",
                "iVar4": "signMultiplier",
                "uVar5": "difference"
            },
            "code": "int calculate_080095b8(uint input1, uint input2)\n{\n  uint shiftValue;\n  uint normalizedInput;\n  uint signMultiplier;\n  uint result;\n  shiftValue = (input2 << 1) >> 0x15;\n  normalizedInput = input2 & 0xfffff | 0x100000;\n  if ((int)(shiftValue - 0x3ff) < 0x14)\n  {\n    if ((int)(shiftValue - 0x3ff) < 0)\n    {\n      if (shiftValue - 0x3ff != 0xffffffff)\n      {\n        signMultiplier = 0;\n      }\n      else\n      {\n        signMultiplier = -1;\n      }\n      result = signMultiplier;\n    }\n    else\n    {\n      result = normalizedInput + (0x80000 >> (shiftValue & 0xff)) >> (0x14 - shiftValue & 0xff);\n    }\n  }\n  else if ((int)(shiftValue - 0x3ff) < 0x34)\n  {\n    uint carryCheck = 0x80000000 >> (shiftValue - 0x413 & 0xff);\n    if ((carryCheck + input1) < carryCheck)\n    {\n      normalizedInput += 1;\n    }\n    result = (normalizedInput << (shiftValue - 0x413 & 0xff)) | (carryCheck + input1) >> (0x34 - (shiftValue - 0x3ff) & 0xff);\n  }\n  else\n  {\n    result = normalizedInput << (shiftValue - 0x413 & 0xff) | input1 << (shiftValue - 0x433 & 0xff);\n  }\n  if ((int)input2 < 0)\n  {\n    result = -result;\n  }\n  return result;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "set_byte_at_offset_08006cf6",
                "param_1": "offset",
                "param_2": "bits",
                "param_3": "mask",
                "uVar1": "masked_bits",
                "get_bits_from_uint_08006998": "get_bits_from_uint",
                "apply_mask_08006ba0": "apply_mask",
                "set_byte_at_offset_08006b00": "set_byte_at_offset"
            },
            "code": "void set_byte_at_offset_08006cf6(int offset, unsigned int bits)\n{\n  unsigned int masked_bits = get_bits_from_uint();\n  masked_bits = apply_mask(masked_bits, offset, bits);\n  set_byte_at_offset_08006cf6(masked_bits, offset);\n  return;\n}",
            "called": [
                "FUN_08006998",
                "FUN_08006ba0",
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_byte_at_offset_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_and_reset_value_08002ef0",
                "*PTR_DAT_08002f1c": "*copied_value_ptr",
                "*PTR_DAT_08002f18": "*original_value_ptr",
                "increment_and_reset_08002870": "increment_and_reset",
                "*PTR_DAT_08002f20": "N/A"
            },
            "code": "void copy_and_reset_value_08002ef0(void)\n{\n  int original_value = *PTR_DAT_08002f18;\n  int incremented_value = increment_and_reset(original_value);\n  *PTR_DAT_08002f1c = incremented_value;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "copy_and_reset_value_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "execute_function_08001d4c",
                "local_9": "loop_counter",
                "cVar1": "current_char",
                "execute_if_flags_set_08005790": "execute_if_flags_set",
                "FUNC_08001994": "execute_function_with_args",
                "do_nothing_08002814": "do_nothing",
                "PTR_DAT_08001dd8": "PTR_DAT",
                "clear_bits_and_check_condition_080057e4": "clear_bits_and_check_condition"
            },
            "code": "void execute_function_08001d4c(void)\n{\n  char current_char;\n  char loop_counter = 2;\n  execute_if_flags_set();\n  execute_function_08001d4c_with_args(4, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\n  execute_function_08001d4c_with_args(3, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x30));\n  do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n  while( loop_counter ) {\n    current_char = loop_counter - 1;\n    execute_function_08001d4c_with_args(7, 0, 1, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\n    do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n    loop_counter = current_char;\n    if (current_char > 0) {\n      execute_function_08001d4c_with_args(7, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8_08001dd8 + 0x2c));\n      do_nothing(*(undefined2 *)(PTR_DAT_08001dd8_08001dd8 + 0x34));\n    }\n  }\n  clear_bits_and_check_condition();\n  return;\n}",
            "called": [
                "FUN_08001994",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "execute_function_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_value_08000268",
                "iVar1": "value",
                "get_value_08005a84": "get_current_value",
                "DAT_0800029c": "PTR_DAT_0800029c",
                "DAT_08000298": "PTR_DAT_08000298",
                "factor": "factor",
                "product": "product",
                "(uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21)": "(uint)((ulonglong)PTR_DAT_0800029c * (ulonglong)factor >> 0x21)"
            },
            "code": "int calculate_value_08000268(void)\n{\n  int value = get_current_value();\n  int result = (value + 1) * 1000;\n  int factor = *(uint *)(DAT_08000298 + 8) >> 3;\n  int product = (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21);\n  return result - product;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_value_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_digits_of_number_08003778",
                "param_1": "number",
                "local_1c": "quotient",
                "acStack_15": "digits",
                "local_9": "remainder"
            },
            "code": "void print_digits_of_number_08003778(uint number) {\n  uint quotient;\n  uint remainder;\n  char digits[12];\n  uint index = 0;\n  if (number == 0) {\n    wait_for_flag_and_return_08008250(0x30);\n  }\n  else {\n    quotient = number;\n    while (quotient != 0) {\n      remainder = quotient % 10;\n      quotient = quotient / 10;\n      digits[index] = remainder + '0';\n      index++;\n    }\n    while (index != 0) {\n      index--;\n      wait_for_flag_and_return_08008250(digits[index]);\n    }\n  }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "print_digits_of_number_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_value_from_pointer_array_0800b3dc",
                "PTR_PTR_DAT_0800b3e4": "pointer_array_pointer",
                "pointer_array": "pointer_array",
                "value": "value"
            },
            "code": "int get_value_from_pointer_array_0800b3dc(){\n  int* pointer_array = *(int**)PTR_PTR_DAT_0800b3e4;\n  int value = *pointer_array;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_array_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "print_info_080046d0",
                "bVar1": "value_1",
                "cVar2": "value_9",
                "uVar3": "uint32",
                "uVar4": "converted_float"
            },
            "code": "void print_info_080046d0()\n{\n    byte value_1 = PTR_DAT_08004890[1];\n    if (value_1 > 4) {\n        process_string_080036c6(PTR_DAT_080048a8);\n        byte value_2 = PTR_DAT_08004890[0x1c] + 0x36;\n        print_absolute_value_080037fc(value_2);\n        byte value_3 = PTR_DAT_08004890[0x19];\n        if (value_3 == 0) {\n            byte value_4 = PTR_DAT_08004890[0x1a];\n            if (value_4 == 1) {\n                process_string_080036c6(PTR_DAT_080048ac);\n            }\n            else {\n                process_string_080036c6(PTR_DAT_080048b0);\n            }\n        }\n        else {\n            process_string_080036c6(PTR_DAT_080048b4);\n        }\n        byte value_5 = PTR_DAT_08004890[3];\n        if (value_5 == 0) {\n            process_string_080036c6(PTR_DAT_080048bc);\n        }\n        else {\n            process_string_080036c6(PTR_DAT_080048b8);\n        }\n        byte value_6 = PTR_DAT_08004890[4];\n        if (value_6 == 0) {\n            process_string_080036c6(PTR_DAT_080048c4);\n        }\n        else {\n            process_string_080036c6(PTR_DAT_080048c0);\n        }\n        byte value_7 = PTR_DAT_08004890[2];\n        if (value_7 == 0) {\n            process_string_080036c6(PTR_DAT_080048cc);\n        }\n        else {\n            process_string_080036c6(PTR_DAT_080048c8);\n        }\n        byte value_8 = PTR_DAT_08004890[5];\n        if (value_8 == 2) {\n            process_string_080036c6(PTR_DAT_080048d8);\n        }\n        else if (value_8 < 3) {\n            if (value_8 == 0) {\n                process_string_080036c6(PTR_DAT_080048d0);\n            }\n            else if (value_8 == 1) {\n                process_string_080036c6(PTR_DAT_080048d4);\n            }\n        }\n        char value_9 = PTR_DAT_08004890[6];\n        if (value_9 == 1) {\n            process_string_080036c6(PTR_DAT_080048dc);\n        }\n        else if (value_9 < 2) {\n            if (value_9 == -1) {\n                process_string_080036c6(PTR_DAT_080048e0);\n            }\n            else if (value_9 == 0) {\n                process_string_080036c6(PTR_DAT_080048e4);\n            }\n        }\n        byte value_10 = PTR_DAT_08004890[7];\n        if (value_10 == 2) {\n            process_string_080036c6(PTR_DAT_080048f0);\n        }\n        else if (value_10 < 3) {\n            if (value_10 == 0) {\n                process_string_080036c6(PTR_DAT_080048e8);\n            }\n            else if (value_10 == 1) {\n                process_string_080036c6(PTR_DAT_080048ec);\n            }\n        }\n        process_string_080036c6(PTR_DAT_080048f4);\n        byte value_11 = PTR_DAT_08004890[0x18];\n        print_absolute_value_080037fc(value_11);\n        process_string_080036c6(PTR_DAT_080048f8);\n        if (PTR_DAT_08004890[3] == 0) {\n            print_float_08003826(*(undefined4 *)(PTR_DAT_08004890 + 8));\n        }\n        else {\n            undefined4 reversed_bits = reverseBits_08008590(*(undefined4 *)(PTR_DAT_08004890 + 8));\n            undefined4 converted_float = FUNC_08008640((int)reversed_bits, (int)((ulonglong)reversed_bits >> 0x20), DAT_08004888, DAT_0800488c);\n            undefined4 uint32 = convert_float_to_uint32_08008c30((int)converted_float, (int)((ulonglong)converted_float >> 0x20));\n            print_float_08003826(uint32);\n        }\n        process_string_080036c6(PTR_DAT_080048fc);\n    }\n    else {\n        (*(code *)(&switchD_080046de::switchdataD_080046e4)[value_1])();\n    }\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_080037fc",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_info_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "is_param_valid_08006d72",
                "param_1": "param",
                "uVar1": "is_valid",
                "check_param_is_valid_08006c9c": "check_if_param_is_valid"
            },
            "code": "bool is_param_valid_08006d72(uint32_t param) {\n  bool is_valid = check_if_param_is_valid(param);\n  return is_valid;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "is_param_valid_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_flag_and_initialize_data_0800756c",
                "DAT_080075bc": "flag_ptr",
                "DAT_080075c0": "flag_data",
                "DAT_080075c4": "data_ptr"
            },
            "code": "void set_flag_and_initialize_data_0800756c(void)\n{\n  int* DAT_080075bc = DAT_080075bc;\n  *DAT_080075bc |= 1;\n  DAT_080075bc[2] = 0;\n  *DAT_080075bc &= 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  *DAT_080075bc &= 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  int* DAT_080075c4 = DAT_080075c4 + 8;\n  *DAT_080075c4 = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "set_flag_and_initialize_data_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "clear_pointer_and_do_nothing_twice_080001f8",
                "PTR_DAT_0800020c": "pointer_to_data",
                "do_nothing_twice_08000210": "do_nothing"
            },
            "code": "void clear_pointer_and_do_nothing_twice_080001f8(void)\n{\n  *PTR_DAT_0800020c = 0;\n  do_nothing();\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "clear_pointer_and_do_nothing_twice_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "get_pointer_if_not_equal_08002f74",
                "*PTR_DAT_08002fa0": "*PTR_CURRENT",
                "*PTR_DAT_08002fa4": "*PTR_OTHER",
                "puVar1": "pointer",
                "PTR_DAT_08002fa8": "PTR_OFFSET"
            },
            "code": "undefined * get_pointer_if_not_equal_08002f74(void)\n{\n  undefined *pointer;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\n    pointer = (undefined *)0x0;\n  }\n  else {\n    pointer = PTR_DAT_08002fa8 + (uint)(byte)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return pointer;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": false,
            "current_name": "get_pointer_if_not_equal_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "index",
                "ppcVar2": "function_ptr",
                "iVar3": "num_functions",
                "do_nothing_0800b5b0": "do_nothing",
                "PTR_DAT_0800b420": "PTR_FUNCTION_END",
                "PTR_DAT_0800b424": "PTR_FUNCTION_START",
                "code": "function",
                "PTR_DAT_0800b42c": "PTR_OTHER_FUNCTION_START",
                "PTR_DAT_0800b428": "PTR_OTHER_FUNCTION_END",
                "num_other_functions": "num_other_functions",
                "i": "index"
            },
            "code": "void execute_functions_0800b3e8(void)\n{\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_ptr = (code **)PTR_DAT_0800b424;\n    while (i != num_functions) {\n      (**function_ptr)();\n      function_ptr++;\n      i++;\n    }\n  }\n  function_ptr = (code **)PTR_DAT_0800b42c;\n  int num_other_functions = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c >> 2;\n  do_nothing();\n  num_other_functions = num_other_functions >> 2;\n  if (num_other_functions != 0) {\n    int i = 0;\n    while (i != num_other_functions) {\n      (**function_ptr)();\n      function_ptr++;\n      i++;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_080001ac",
                "FUN_0800b5b0",
                "FUN_0800b4d0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "calculate_hash_from_data_080096e8",
                "param_1": "data",
                "param_2": "length",
                "uVar1": "result",
                "uVar2": "hash_type",
                "local_28": "hash_data[0]",
                "uStack_24": "hash_data[1]",
                "local_20": "hash_result[0]",
                "uStack_1c": "hash_result[1]",
                "DAT_08009790": "max_length",
                "DAT_08009794": "min_length",
                "FUNC_080082d0": "hash_data_080082d0",
                "FUNC_08009d78": "calculate_hash_type",
                "FUNC_0800a348": "hash_data_0800a348",
                "calculate_hash_0800adf0": "calculate_hash_0800adf0"
            },
            "code": "uint32_t calculate_hash_from_data_080096e8(uint32_t data, uint32_t length)\n{\n  uint32_t result;\n  uint32_t hash_type;\n  uint32_t hash_data[2];\n  uint32_t hash_result[2];\n  \n  if (DAT_08009790 < (int)(length & 0x7fffffff)) {\n    if (DAT_08009794 < (int)(length & 0x7fffffff)) {\n      result = hash_data_080082d0(data,length,data,length);\n    }\n    else {\n      hash_type = calculate_hash_type(data, length, hash_data, hash_result);\n      if (hash_type == 1) {\n        result = hash_data_0800a348(hash_data[0],hash_data[1],hash_result[0],hash_result[1]);\n      }\n      else if (hash_type == 2 || hash_type == 0) {\n        result = calculate_hash_0800adf0(hash_data[0],hash_data[1],hash_result[0],hash_result[1],1);\n      }\n      else {\n        result = hash_data_0800a348(hash_data[0],hash_data[1],hash_result[0],hash_result[1]);\n      }\n    }\n    return result;\n  }\n  result = calculate_hash_0800adf0(data,length,0,0,0);\n  return result;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_hash_from_data_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "is_bit_set_in_array_08006a18",
                "param_1": "bit_index",
                "*(uint *)(DAT_08006a54 + (((uint)(int)(char)param_1 >> 5) + 0x40) * 4)": "*array_address",
                "1 << (param_1 & 0x1f)": "mask"
            },
            "code": "bool is_bit_set_in_array_08006a18(uint8_t bit_index) {\n  uint32_t* array_address = (uint32_t*)(DAT_08006a54 + (((uint32_t)bit_index >> 5) + 0x40) * 4);\n  uint32_t mask = 1 << (bit_index & 0x1f);\n  return ((*(uint *)(DAT_08006a54 + (((uint)(int)(char)param_1 >> 5) + 0x40) * 4)) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "is_bit_set_in_array_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_hash_and_shift_08002c18",
                "param_1": "input",
                "param_2": "shift_val",
                "param_3": "hash_val",
                "uVar1": "hash",
                "iVar2": "converted_int",
                "uVar3": "hash_val",
                "uVar4": "converted_int",
                "uVar5": "PTR_DAT_08002e04",
                "uVar6": "final_int",
                "uVar7": "reversed_hash"
            },
            "code": "void calculate_hash_and_shift_08002c18(int input, uint32_t shift_val, uint32_t hash_val)\n{\n    uint32_t hash = calculate_hash(input);\n    uint32_t shifted_hash = shift_hash(hash, shift_val);\n    uint32_t reversed_hash = reverse_bits(shifted_hash);\n    uint32_t checked_hash = check_string(reversed_hash);\n    uint32_t shifted_checked_hash = shift_hash(checked_hash, shift_val);\n    uint32_t hash2 = calculate_hash(input);\n    uint32_t shifted_hash2 = shift_hash(hash2, shift_val);\n    uint32_t reversed_hash2 = reverse_bits(shifted_hash2);\n    uint32_t checked_hash2 = check_string(reversed_hash2);\n    uint32_t shifted_checked_hash2 = shift_hash(checked_hash2, shift_val);\n    uint32_t multiplied_hash = multiply_bits(input);\n    int converted_int = convert_to_int(multiplied_hash);\n    uint32_t result_hash = calculate_result(shifted_checked_hash, hash_val, convert_to_big_endian(converted_int));\n    uint32_t reversed_result_hash = reverse_bits(result_hash);\n    uint32_t decoded_hash = decode_string(reversed_result_hash);\n    uint32_t converted_decoded_hash = convert_to_int(decoded_hash);\n    uint32_t final_hash = calculate_final_hash(shifted_checked_hash2, hash_val, convert_to_big_endian(-converted_int), convert_to_big_endian(*(uint32_t*)(input + 0x10)));\n    uint32_t reversed_final_hash = reverse_bits(final_hash);\n    uint32_t checked_final_hash = check_string(reversed_final_hash);\n    uint32_t final_int = convert_to_int(checked_final_hash);\n    uint32_t final_1c = *(uint32_t*)(input + 0x10);\n    if (final_int > final_1c)\n    {\n        final_1c = final_int & ~(final_int >> 0x1f);\n        final_int = 0;\n    }\n    *(uint32_t*)(input + 0x34) = final_1c;\n    *(uint32_t*)(input + 0x38) = final_int + final_1c;\n}",
            "called": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_0800856c",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_hash_and_shift_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "is_bit_set_08006ac0",
                "param_1": "byte_value",
                "DAT_08006afc": "data_pointer",
                "uint": "uint32_t",
                "bit_position": "bit_position",
                "index": "index",
                "bit_mask": "bit_mask"
            },
            "code": "bool is_bit_set_08006ac0(uint8_t byte_value, uint8_t bit_position) {\n    uint8_t *DAT_08006afc = (uint8_t *)DAT_08006afc;\n    uint32_t index = (((uint32_t)byte_value >> 5) + 0x80) * 4;\n    uint32_t bit_mask = 1 << (bit_position & 0x1f);\n    return ((*(uint32_t *)(DAT_08006afc + index)) & bit_mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "is_bit_set_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "process_input_data_08002ba8",
                "puVar1": "current_input_byte",
                "puVar2": "previous_input_buffer",
                "puVar3": "last_input_buffer",
                "local_14": "previous_input_buffer",
                "local_10": "current_input_buffer",
                "local_9": "current_byte_value"
            },
            "code": "void process_input_data_08002ba8(void)\n{\n  undefined *current_input_byte;\n  undefined *previous_input_byte;\n  undefined *previous_input_buffer;\n  undefined *current_input_buffer;\n  undefined *last_input_buffer;\n  byte current_byte_value;\n  \n  current_byte_value = *PTR_DAT_08002c0c;\n  previous_input_buffer = (undefined *)0x0;\n  current_input_buffer = (undefined *)0x0;\n  last_input_buffer = (undefined *)0x0;\n  while (current_byte_value != *PTR_DAT_08002c14) {\n    previous_input_byte = current_input_buffer;\n    current_input_byte = PTR_DAT_08002c10 + (uint)current_byte_value * 0x40;\n    process_input_08002afc(previous_input_buffer,current_input_buffer,current_input_byte);\n    current_byte_value = increment_and_reset_08002870(current_byte_value);\n    last_input_buffer = previous_input_buffer;\n    current_input_buffer = current_input_byte;\n  }\n  process_input_08002afc(previous_input_buffer,current_input_buffer,0,last_input_buffer,previous_input_buffer);\n  return;\n}",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_input_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "check_overflow_and_return_result_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "result_1",
                "uVar3": "result_2",
                "uVar4": "temp_result",
                "bVar1": "is_positive_result_2",
                "bVar5": "is_zero_result_1"
            },
            "code": "uint check_overflow_and_return_result_0800919c(uint input_1,uint input_2) {\n  bool is_overflowed_1 = ((int)(input_1 * 2) >> 0x18 == -1);\n  bool is_overflowed_2 = ((int)(input_2 * 2) >> 0x18 == -1);\n  \n  if (is_overflowed_1 || is_overflowed_2) {\n    if ((is_overflowed_1 && ((input_1 & 0x7fffff) != 0)) || (is_overflowed_2 && ((input_2 & 0x7fffff) != 0))) {\n      return 1;\n    }\n  }\n  \n  uint result_1 = input_1 * 2 | input_2 & 0x7fffffff;\n  bool is_zero_result_1 = (result_1 == 0);\n  \n  if (!is_zero_result_1) {\n    uint result_2 = input_1 ^ input_2;\n    bool is_zero_result_2 = (result_2 == 0);\n    bool is_positive_result_2 = (-1 < (int)result_2);\n    \n    if (is_positive_result_2 && input_2 <= input_1 && !is_zero_result_2) {\n      return (int)input_2 >> 0x1f;\n    }\n    \n    if (!is_positive_result_2 || input_2 > input_1) {\n      return ~((int)input_2 >> 0x1f);\n    }\n  }\n  \n  if (!is_zero_result_1) {\n    return input_1 | 1;\n  }\n  \n  return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "check_overflow_and_return_result_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_0800af78",
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "reverseBits_0800854c",
                "param_1": "num",
                "uVar1": "upperBits",
                "uVar2": "shiftAmount",
                "iVar3": "leadingZeroes",
                "uVar4": "mask",
                "bVar5": "isShiftAmountNegative",
                "bVar6": "isShiftAmountZero",
                "bVar7": "isMaskNegative",
                "in_r12": "unused",
                "SBORROW4": "unused",
                "SCARRY4": "unused",
                "CONCAT44": "unused",
                "ulonglong": "unsigned long long",
                "uint": "unsigned int"
            },
            "code": "ulonglong reverseBits_0800854c(uint num)\n{\n  uint leadingZeroes = 0;\n  uint shiftAmount = 0;\n  uint mask = 0;\n  uint upperBits = 0;\n  uint lowerBits = 0;\n  if (num == 0) {\n    return 0;\n  }\n  leadingZeroes = count_leading_zeroes(num);\n  shiftAmount = leadingZeroes + 21;\n  if (shiftAmount < 32) {\n    mask = (1 << shiftAmount) - 1;\n    upperBits = num << shiftAmount;\n    lowerBits = num >> (11 - leadingZeroes);\n    return ((ulonglong)upperBits | lowerBits) & mask;\n  }\n  else if (shiftAmount < 1075) {\n    shiftAmount = 1074 - shiftAmount;\n    mask = (1 << shiftAmount) - 1;\n    upperBits = num >> shiftAmount;\n    lowerBits = num << (32 - shiftAmount);\n    return ((ulonglong)upperBits | lowerBits) & 0xFFFFFFFF;\n  }\n  else {\n    shiftAmount = shiftAmount - 1074;\n    upperBits = num >> shiftAmount;\n    lowerBits = num << (12 - shiftAmount);\n    return ((ulonglong)upperBits | lowerBits) & 0xFFFFFFFF;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "reverseBits_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "convert_to_big_endian_08008e44",
                "param_1": "num",
                "iVar1": "num_leading_zeroes",
                "uVar2": "shift_amount",
                "iVar4": "iVar4",
                "uVar3": "uVar3",
                "uVar5": "uVar5",
                "count_leading_zeroes": "count_leading_zeroes",
                "0x80000000": "0x80000000",
                "0": "0U",
                "7": "7",
                "0xfffffffe": "0xfffffffe",
                "uint": "uint32_t",
                "int": "int32_t"
            },
            "code": "uint32_t convert_to_big_endian_08008e44(uint32_t num)\n{\n    int num_leading_zeroes = count_leading_zeroes(num);\n    int shift_amount = 24 - num_leading_zeroes;\n    uint32_t big_endian_num = 0;\n    if (num_leading_zeroes > 7) {\n        big_endian_num = (num << shift_amount) | (0U >> (8 - shift_amount));\n        if (big_endian_num == 0x80000000) {\n            big_endian_num = big_endian_num & 0xfffffffe;\n        }\n    }\n    else {\n        uint32_t shifted_num = num << (num_leading_zeroes + 24);\n        int32_t signed_shifted_num = (int32_t)shifted_num;\n        big_endian_num = (0x4b000000 | ((num_leading_zeroes - 8) * -0x800000)) + \n                         ((signed_shifted_num >> 31) ^ shifted_num);\n        if ((shifted_num & 0x7fffffff) == 0) {\n            big_endian_num = big_endian_num & ~(shifted_num >> 31);\n        }\n    }\n    return big_endian_num;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_to_big_endian_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "set_param_value_0800733e",
                "param_1": "struct_ptr",
                "param_2": "value",
                "param_3": "param_type",
                "undefined2": "unsigned short",
                "*(undefined2 *)(param_1 + 0x1a)": "*(unsigned short *)(struct_ptr + 0x1a)",
                "*(undefined2 *)(param_1 + 0x18)": "*(unsigned short *)(struct_ptr + 0x18)"
            },
            "code": "void set_param_value_0800733e(int struct_ptr, unsigned short value, char param_type){\n    if (param_type == '\\0') {\n        *(unsigned short *)(struct_ptr + 0x1a) = value;\n    }\n    else {\n        *(unsigned short *)(struct_ptr + 0x18) = value;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "set_param_value_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "set_parameters_and_execute_if_flags_set_0800583c",
                "set_param_080052ac": "set_parameter",
                "execute_if_flags_set_08005790": "execute_if_flags_set",
                "clear_bits_and_check_condition_080057e4": "clear_bits_and_check_condition",
                "PTR_DAT_08005858": "PTR_DATA"
            },
            "code": "void set_parameters_and_execute_if_flags_set_0800583c(void)\n{\n  int parameter_value = *(int *)(PTR_DAT_08005858 + 0x18);\n  set_parameter(parameter_value);\n  execute_if_flags_set();\n  clear_bits_and_check_condition();\n  return;\n}",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "set_parameters_and_execute_if_flags_set_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "checkAndUpdateStatus_08001e98",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "arePointersEqual"
            },
            "code": "void checkAndUpdateStatus_08001e98(int param1, int param2, int param3, int param4, char param5) {\\n  int arePointersEqual;\\n  if (PTR_DAT_08001efc[1] != \"\\a\") {\\n    do {\\n      displayAlarmAndUpdateStatusIfNeeded();\\n      if (*PTR_DAT_08001efc != \"\\0\") {\\n        return;\\n      }\\n      arePointersEqual = arePointersEqual_08002fac();\\n    } while (arePointersEqual != 0);\\n    executeFunction(param1, param2, param3, param4, param5);\\n    if (PTR_DAT_08001efc[1] == \"\\0\") {\\n      PTR_DAT_08001efc[1] = 2;\\n    }\\n    if (PTR_DAT_08001efc[0x10] != \"\\0\") {\\n      executeIfFlagsSet();\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002fac",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "checkAndUpdateStatus_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_at_position_080069e4",
                "param_1": "position",
                "DAT_08006a14": "target_array",
                "uint": "unsigned_integer",
                "int": "signed_integer",
                "char": "character",
                "bit_mask": "bit_mask",
                "target_address": "target_address"
            },
            "code": "void set_bit_at_position_080069e4(byte position) {\n    int* target_address = (int*)(DAT_08006a14 + (((uint)(int)(char)position >> 5) + 0x20) * 4);\n    int bit_mask = 1 << (position & 0x1f);\n    *target_address = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_sign_bit_to_one_and_shift_right_0800b2d4",
                "param_1": "num_to_modify",
                "param_2": "num_of_bits_to_shift_right"
            },
            "code": "uint set_sign_bit_to_one_and_shift_right_0800b2d4(uint num_to_modify, uint num_of_bits_to_shift_right) {\n\tuint sign_bit = 0x80000000;\n\tuint modified_num = num_to_modify | sign_bit;\n\tuint shifted_num = modified_num + 0x100000 >> num_of_bits_to_shift_right;\n\treturn shifted_num;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "set_sign_bit_to_one_and_shift_right_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "shifted_input"
            },
            "code": "uint calculate_hash_08008e3c(uint input)\n{\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  uint shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint result = multiplier + shifted_input + shifted_zeroes + (uint)(0x7fffffff < (0 << (shift_amount & 0xff)));\n    if ((0 << (shift_amount & 0xff)) == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_multiplier = input >> (0x20 - (leading_zeroes + 0x18U) & 0xff);\n  int shifted_output = (int)shifted_input >> 0x1f;\n  uint result = multiplier + (shifted_multiplier - shifted_output);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    result = result & ~(shifted_input >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_double_precision_number_08009654",
                "param_1": "first_half",
                "param_2": "second_half",
                "uVar1": "exponent",
                "uVar2": "shifted_second_half",
                "lVar3": "result",
                "DAT_080096e4": "mask"
            },
            "code": "longlong calculate_double_precision_number_08009654(uint first_half, uint second_half)\n{\n  longlong result = CONCAT44(second_half, first_half);\n  uint shifted_second_half = (second_half << 1) >> 0x15;\n  uint exponent = shifted_second_half - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      second_half = second_half & 0x80000000;\n      if (exponent == 0xffffffff) {\n        second_half = second_half | 0x3ff00000;\n      }\n      result = (ulonglong)second_half << 0x20;\n    }\n    else {\n      uint shift = exponent & 0xff;\n      uint DAT_080096e4 = DAT_080096e4 >> shift;\n      if ((second_half & DAT_080096e4 | first_half) != 0) {\n        uint increment = 0x80000 >> shift;\n        second_half = second_half + increment & ~DAT_080096e4;\n        result = (ulonglong)second_half << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    uint shift = 0x33 - exponent & 0xff;\n    uint DAT_080096e4 = 0xffffffff >> (shifted_second_half - 0x413 & 0xff);\n    if ((first_half & DAT_080096e4) != 0) {\n      uint increment = 1 << shift;\n      if (CARRY4(first_half, increment) != false) {\n        second_half = second_half + 1;\n      }\n      result = CONCAT44(second_half, first_half + increment & ~DAT_080096e4);\n    }\n  }\n  else {\n    if (exponent == 0x400) {\n      result = FUNC_080082d4();\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "calculate_double_precision_number_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_bits_08007bc2",
                "_DAT_40000000": "PTR_DATA_40000000",
                "_DAT_4000000c": "PTR_DATA_4000000c"
            },
            "code": "void clear_bits_08007bc2(void)\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "clear_bits_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "calculate_hash_08009410",
                "param_1": "data",
                "param_2": "length",
                "DAT_080094b4": "MAX_DATA_SIZE",
                "DAT_080094b8": "MAX_DATA_SIZE",
                "local_28": "local_data",
                "uStack_24": "local_length",
                "local_20": "local_var_10",
                "uStack_1c": "local_var_14",
                "FUNC_080082d0": "hash_data",
                "FUNC_08009d78": "get_hash_type",
                "calculate_hash_0800adf0": "calculate_hash"
            },
            "code": "int calculate_hash_08009410(uint32_t data, uint32_t length)\n{\n  int result;\n  uint32_t local_data;\n  uint32_t local_length;\n  uint32_t local_var_10;\n  uint32_t local_var_14;\n  \n  if (DAT_080094b4 < (int)(length & 0x7fffffff)) {\n    if (DAT_080094b4 < (int)(length & 0x7fffffff)) {\n      result = hash_data(data, length, data, length);\n    }\n    else {\n      uint32_t hash_type = get_hash_type(data, length, &local_data);\n      hash_type &= 3;\n      if (hash_type == 1) {\n        result = calculate_hash_08009410_0800adf0(local_data, local_var_10, local_var_14, 1);\n      }\n      else if (hash_type == 2) {\n        result = hash_data(local_data, local_var_10, local_var_14, 0);\n      }\n      else if (hash_type == 0) {\n        result = hash_data(local_data, local_var_10, local_var_14, 0);\n      }\n      else {\n        result = calculate_hash_08009410_0800adf0(local_data, local_var_10, local_var_14, 1);\n      }\n    }\n    return result;\n  }\n  result = hash_data(data, length, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_hash_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "save_params_to_memory_080035ec",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "PTR_DAT_08003614": "ptr_data"
            },
            "code": "void save_params_to_memory_080035ec(int param1, int param2, int param3) {\n  int* PTR_DAT_08003614 = (int*)PTR_DAT_08003614;\n  *PTR_DAT_08003614 = param1;\n  *(PTR_DAT_08003614 + 1) = param2;\n  *(PTR_DAT_08003614 + 2) = param3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "save_params_to_memory_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "synchronize_data_08006c70",
                "PTR_08006c94": "data_pointer",
                "DAT_08006c98": "data_value"
            },
            "code": "void synchronize_data_08006c70(void)\n{\n  DataSynchronizationBarrier(0xf);\n  uint* data_ptr = (uint *)(DAT_08006c94 + 0xc);\n  uint mask = *data_ptr & 0x700;\n  uint data = DAT_08006c98;\n  *data_ptr = data | mask;\n  DataSynchronizationBarrier(0xf);\n  while(true) {}\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "synchronize_data_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "extract_bits_from_shifted_value_08006d98",
                "param_1": "character",
                "param_2": "start_bit",
                "param_3": "end_bit",
                "param_4": "destination",
                "uVar1": "shifted_value",
                "get_shifted_value_08006b54": "get_shifted_value",
                "extract_bits_08006c04": "extract_bits"
            },
            "code": "void extract_bits_from_shifted_value_08006d98(char character, unsigned int start_bit, unsigned int end_bit, unsigned int destination)\n{\n    unsigned int shifted_value = get_shifted_value(character);\n    extract_bits(shifted_value, start_bit, end_bit, destination);\n    return;\n}",
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "extract_bits_from_shifted_value_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_pointer_value_08005a68",
                "PTR_DAT_08005a80": "ptr"
            },
            "code": "void increment_pointer_value_08005a68(void)\n{\n  int* PTR_DAT_08005a80 = (int*)PTR_DAT_08005a80;\n  *PTR_DAT_08005a80 = *PTR_DAT_08005a80 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_pointer_value_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initializeMemory_080079c0",
                "PTR_DAT_080079d8": "PTR_DATA_ARRAY",
                "PTR_DAT_080079dc": "PTR_FLAG"
            },
            "code": "void initializeMemory_080079c0(void)\n{\n  // Fill memory with zeros\n  fillMemoryWithValue(PTR_DAT_080079d8, 0, ARRAY_SIZE);\n  // Set first element to 1\n  *(int *)PTR_DAT_080079dc = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initializeMemory_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "get_zero_0800b2e0"
            },
            "code": "int get_zero_0800b2e0() {\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_zero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "intermediate_1",
                "uVar2": "intermediate_2",
                "uVar3": "intermediate_3",
                "uVar4": "intermediate_4",
                "uVar5": "intermediate_5",
                "uVar6": "intermediate_6",
                "uVar7": "intermediate_7",
                "uVar8": "result"
            },
            "code": "float calculate_result_08002908(float input_1, float input_2, float input_3, float input_4){\n    float intermediate_1 = FUNC_08008cdc(input_3, input_3);\n    float intermediate_2 = FUNC_08008eec(intermediate_1, input_4);\n    float intermediate_3 = FUNC_08008eec(input_1, input_1);\n    float intermediate_4 = FUNC_08008cd8(intermediate_2, intermediate_3);\n    float intermediate_5 = FUNC_08008eec(input_2, input_2);\n    float intermediate_6 = FUNC_08008cdc(intermediate_4, intermediate_5);\n    float intermediate_7 = FUNC_08008eec(input_3, 0x40800000);\n    float result = FUNC_08009054(intermediate_6, intermediate_7);\n    return result;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_global_variable_08007c40",
                "param_1": "value",
                "_DAT_40000034": "GLOBAL_VARIABLE"
            },
            "code": "void set_global_variable_08007c40(undefined4 value)\n{\n    _DAT_40000034 = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_variable_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "decode_string_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "index",
                "uVar2": "shift",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "result",
                "lVar6": "output"
            },
            "code": "longlong decode_string_080094c0(uint input1, uint input2, undefined4 input3, undefined4 input4)\n{\n  int index;\n  uint shift;\n  uint mask;\n  bool carry;\n  undefined8 result;\n  longlong output;\n\n  shift = (input2 << 1) >> 0x15;\n  index = shift - 0x3ff;\n\n  if (index < 0x14) {\n    if (index < 0) {\n      result = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, input4);\n      if (is_end_of_string_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0) != 0) {\n        if ((int)input2 < 0 && (input1 | input2 & 0x7fffffff) != 0) {\n          input2 = DAT_080095b4;\n          output = (longlong)input2 << 0x20;\n        }\n        else {\n          output = 0;\n        }\n      }\n      else {\n        output = (longlong)input2 << 0x20;\n      }\n    }\n    else {\n      mask = DAT_080095b0 >> (index & 0xff);\n      if ((input2 & mask | input1) != 0) {\n        result = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, input4);\n        if (is_end_of_string_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0) != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (index & 0xff));\n          }\n          output = (longlong)(input2 & ~mask) << 0x20;\n        }\n        else {\n          output = (longlong)input2 << 0x20;\n        }\n      }\n      else {\n        output = CONCAT44(input2, input1);\n      }\n    }\n  }\n  else if (index < 0x34) {\n    mask = 0xffffffff >> (shift - 0x413 & 0xff);\n    if ((mask & input1) != 0) {\n      result = FUNC_080082d4(input1, input2, DAT_080095a8, DAT_080095ac, input4);\n      if (is_end_of_string_08008b60((int)result, (int)((ulonglong)result >> 0x20), 0, 0) != 0) {\n        if ((int)input2 < 0) {\n          if (index == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            mask = 1 << (0x34 - index & 0xff);\n            carry = (mask + input1) < input1;\n            input1 = mask + input1;\n            if (carry) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        output = CONCAT44(input2, input1 & ~mask);\n      }\n      else {\n        output = CONCAT44(input2, input1);\n      }\n    }\n    else {\n      output = CONCAT44(input2, input1);\n    }\n  }\n  else {\n    if (index == 0x400) {\n      output = FUNC_080082d4();\n    }\n    else {\n      output = CONCAT44(input2, input1);\n    }\n  }\n  return output;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "decode_string_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_08003826",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_shifted_value_08006b54",
                "param_1": "input_value",
                "bVar1": "shifted_value",
                "DAT_08006b98": "ptr_data_1",
                "DAT_08006b9c": "ptr_data_2"
            },
            "code": "byte get_shifted_value_08006b54(byte input_value) {\\n  byte shifted_value;\\n  if ((char)input_value < \"\\0\") {\\n    shifted_value = *(byte *)((input_value & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    shifted_value = *(byte *)((char)input_value + DAT_08006b9c + 0x300);\\n  }\\n  return shifted_value >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_dat_value_08007e84",
                "DAT_08007ea0": "dat_pointer"
            },
            "code": "uint get_dat_value_08007e84(void)\n{\n    uint* DAT_08007ea0 = (uint*)(DAT_08007ea0 + 4);\n    uint dat_value = *DAT_08007ea0 & 0xff;\n    return dat_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_dat_value_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "clear_bits_and_check_condition_080057e4",
                "PTR_DAT_0800580c": "PTR_DATA_0800580c",
                "PTR_DAT_08005810": "PTR_DATA_08005810",
                "clear_bits_08007bc2": "clear_bits",
                "do_nothing_0800530c": "do_nothing"
            },
            "code": "void clear_bits_and_check_condition_080057e4(void)\n{\n  clear_bits();\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_08005810[2] & 0x20) != 0)) {\n    do_nothing();\n  }\n  return;\n}",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_08001d4c",
                "FUN_0800583c"
            ],
            "imported": false,
            "current_name": "clear_bits_and_check_condition_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_bits_08006d8a",
                "uVar1": "bits",
                "get_bits_from_uint_08006998": "get_bits_from_uint"
            },
            "code": "uint32_t get_bits_08006d8a(void)\n{\n  uint32_t bits;\n  bits = get_bits_08006d8a_from_uint();\n  return bits;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_bits_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_0800b2e8",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "shifted_num2",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "combined_nums"
            },
            "code": "uint calculate_0800b2e8(uint num1, uint num2, int num3, undefined4 num4)\n{\n  uint result1;\n  int result2;\n  uint result3;\n  ulonglong combined_nums = CONCAT44(num2, num1);\n  uint shifted_num2 = (num2 << 1) >> 0x15;\n  if (shifted_num2 == 0) {\n    if ((num1 | num2 & 0x7fffffff) == 0) {\n      return num1;\n    }\n    combined_nums = FUNC_08008640(num1, num2, 0, DAT_0800b3c8);\n    if (num3 < DAT_0800b3cc) goto LAB_0800b34a;\n    shifted_num2 = ((uint)((int)(combined_nums >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_num2 == 0x7ff) {\n    result1 = FUNC_080082d4(num1, num2, num1, num2, num4);\n    return result1;\n  }\n  result3 = (uint)(combined_nums >> 0x20);\n  result2 = shifted_num2 + num3;\n  if (result2 < 0x7ff) {\n    if (0 < result2) {\n      return (uint)combined_nums;\n    }\n    if (result2 + 0x35 < 0 == SCARRY4(result2, 0x35)) {\n      result1 = FUNC_08008640((uint)combined_nums, result3 & 0x800fffff | (result2 + 0x36) * 0x100000, 0, DAT_0800b3d8);\n      return result1;\n    }\n    if (num3 < 0xc351) {\n      combined_nums = combined_nums & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      goto LAB_0800b34a;\n    }\n  }\n  result1 = FUNC_08008640(DAT_0800b3d4, result3 & 0x80000000 | 0x7e37e43c, DAT_0800b3c0, DAT_0800b3c4);\n  return result1;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "set_short_if_odd_08007520",
                "param_1": "param"
            },
            "code": "void set_short_if_odd_08007520(uint param)\n{\n  if ((param & 1) != 0) {\n    set_short_at_address_080073d4(0x3e);\n  }\n  return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "set_short_if_odd_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "get_bits_08007884",
                "iVar1": "bit_1",
                "iVar2": "bit_2",
                "iVar3": "bit_3",
                "iVar4": "bit_4",
                "iVar5": "bit_5",
                "uVar6": "bit_0",
                "get_bit_08007854": "get_bit"
            },
            "code": "uint get_bits_08007884(void)\n{\n  int bit_0 = get_bit(0);\n  int bit_1 = get_bit(0x36);\n  int bit_2 = get_bit(0x37);\n  int bit_3 = get_bit(0x38);\n  int bit_4 = get_bit(0x39);\n  int bit_5 = get_bit(0xf);\n  uint result = bit_0 | bit_1 << 4 | bit_2 << 3 | bit_3 << 2 | bit_4 << 1 | bit_5 << 7;\n  return result;\n}",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "get_bits_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "print_configuration_settings_08004250"
            },
            "code": "void print_configuration_settings_08004250(void)\n{\n    float x_step_mm = *(float *)PTR_DAT_08004474;\n    float y_step_mm = *(float *)(PTR_DAT_08004474 + 4);\n    float z_step_mm = *(float *)(PTR_DAT_08004474 + 8);\n    int step_pulse_usec = PTR_DAT_08004474[0xd];\n    float default_feed_mm_min = *(float *)(PTR_DAT_08004474 + 0x14);\n    int step_port_invert_mask = *(int *)(PTR_DAT_08004474 + 0x18);\n    int n_decimals = PTR_DAT_08004474[0x28];\n    int homing_cycle = *(int *)(PTR_DAT_08004474 + 0x2a);\n    float homing_feed_mm_min = *(float *)(PTR_DAT_08004474 + 0x30);\n    int homing_seek_mm_min = *(int *)(PTR_DAT_08004474 + 0x34);\n    float homing_debounce_msec = *(float *)(PTR_DAT_08004474 + 0x38);\n    float homing_pull_off_mm = *(float *)(PTR_DAT_08004474 + 0x1a);\n    int dir_port_invert_mask = *(int *)(PTR_DAT_08004474 + 0x1a);\n\n    process_string_080036c6(PTR_DAT_08004470);\n    print_float_08003826(x_step_mm);\n    process_string_080036c6(PTR_s___x__step_mm___1__08004478);\n    print_float_08003826(y_step_mm);\n    process_string_080036c6(PTR_s___y__step_mm___2__0800447c);\n    print_float_08003826(z_step_mm);\n    process_string_080036c6(PTR_s___z__step_mm___3__08004480);\n    print_absolute_value_080037fc(step_pulse_usec);\n    process_string_080036c6(PTR_s___step_pulse__usec___4__08004484);\n    print_float_08003826(default_feed_mm_min);\n    process_string_080036c6(PTR_s___default_feed__mm_min___5__08004488);\n    print_absolute_value_080037fc(step_port_invert_mask);\n    process_string_080036c6(PTR_s___step_port_invert_mask__int__08004490);\n    print_absolute_value_080037fc(PTR_DAT_08004474[0x3c]);\n    process_string_080036c6(PTR_s____7__08004494);\n    print_float_08003826(homing_pull_off_mm);\n    process_string_080036c6(PTR_s___homing_pull_off__mm___23__080044dc);\n    print_float_08003826(homing_debounce_msec);\n    process_string_080036c6(PTR_s___homing_debounce__msec___22__080044d8);\n    print_absolute_value_080037fc(homing_seek_mm_min);\n    process_string_080036c6(PTR_s___homing_seek__mm_min___21__080044d4);\n    print_float_08003826(homing_feed_mm_min);\n    process_string_080036c6(PTR_s___homing_feed__mm_min___20__080044d0);\n    print_absolute_value_080037fc(homing_cycle);\n    process_string_080036c6(PTR_s___homing_cycle__bool___18__080044c4);\n    print_binary_representation_0800375c(dir_port_invert_mask);\n    process_string_080036c6(PTR_s___dir_port_invert_mask__int__080044e0);\n    print_absolute_value_080037fc(n_decimals & 1);\n    process_string_080036c6(PTR_s___n_decimals__int___13__080044b0);\n    print_absolute_value_080037fc(n_decimals & 2);\n    process_string_080036c6(PTR_s___report_inches__bool___14__080044b4);\n    print_absolute_value_080037fc(n_decimals & 4);\n    process_string_080036c6(PTR_s___auto_start__bool___15__080044b8);\n    print_absolute_value_080037fc(n_decimals & 8);\n    process_string_080036c6(PTR_s___invert_step_enable__bool___16__080044bc);\n    print_absolute_value_080037fc(n_decimals & 0x10);\n    process_string_080036c6(PTR_s___hard_limits__bool___17__080044c0);\n    process_string_080036c6(PTR_s___acceleration__mm_sec_2___9__080044a0);\n    print_float_08003826(*(float *)(PTR_DAT_08004474 + 0x24));\n    process_string_080036c6(PTR_s___junction_deviation__mm___10__080044a4);\n    print_float_08003826(*(float *)(PTR_DAT_08004474 + 0x1c));\n    process_string_080036c6(PTR_s___arc__mm_segment___11__080044a8);\n    print_absolute_value_080037fc(PTR_DAT_08004474[0x3e]);\n    process_string_080036c6(PTR_s___n_arc_correction__int___12__080044ac);\n    print_absolute_value_080037fc(PTR_DAT_08004474[0x3d]);\n}",
            "called": [
                "FUN_0800375c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08009054",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_configuration_settings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "set_bit_in_array_08006dc4",
                "param_1": "character",
                "set_bit_in_array_08006a58": "set_bit_in_array_helper"
            },
            "code": "void set_bit_in_array_08006dc4(char character)\n{\n  set_bit_in_array_08006dc4_helper((int)character);\n  return;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_in_array_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_in_short_array_08007402",
                "param_1": "bit_index",
                "PTR_": "array_ptr",
                "DAT_": "array_offset",
                "short": "short",
                "uint": "uint",
                "*": "*",
                ">>": ">>",
                "<<": "<<",
                "&": "&",
                "|": "|",
                "=": "=",
                "+": "+",
                "1": "1"
            },
            "code": "void set_bit_in_short_array_08007402(uint bit_index)\n{\n  uint array_index = bit_index >> 4;\n  uint DAT_ = array_index * 0x400 + 0x18;\n  short* PTR_ = (short*) (DAT_ + 0x40020000);\n  uint bit_mask = 1 << (bit_index & 0xf);\n  *PTR_ = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_array_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_and_reset_08002870",
                "param_1": "input_char",
                "local_9": "incremented_char"
            },
            "code": "char increment_and_reset_08002870(char input_char)\n{\n  char incremented_char;\n  incremented_char = input_char + 1;\n  if (incremented_char == 18) {\n    incremented_char = 0;\n  }\n  return incremented_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": false,
            "current_name": "increment_and_reset_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "do_nothing_twice_08000210",
                "do_nothing_080001ec": "do_nothing",
                "do_nothing_080001d4": "do_nothing"
            },
            "code": "void do_nothing_twice_08000210(void)\n{\n  do_nothing();\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_twice_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "check_special_chars_08005900",
                "param_1": "input_char",
                "PTR_DAT_08005978": "special_chars",
                "set_flag_if_condition_met_080025e8": "set_flag_if_condition_met"
            },
            "code": "int check_special_chars_08005900(char input_char) {\n  if (input_char == '~') {\n    PTR_DAT_08005978[2] |= 0x02;\n    return 1;\n  }\n  if (input_char < 0x7f) {\n    if (input_char == '?') {\n      PTR_DAT_08005978[2] |= 0x01;\n      return 1;\n    }\n    if (input_char < 0x40) {\n      if (input_char == 0x18) {\n        set_flag_if_condition_met();\n        return 1;\n      }\n      if (input_char == '!') {\n        PTR_DAT_08005978[2] |= 0x08;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "check_special_chars_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_and_convert_input_08002638",
                "param_1": "input_start_address",
                "param_2": "input_data",
                "param_3": "output_value",
                "local_14": "converted_value",
                "local_15": "num_decimal_places",
                "local_16": "num_digits",
                "local_c": "current_char_ptr",
                "local_d": "current_byte",
                "pcVar5": "next_char_ptr",
                "pcVar6": "current_char_ptr",
                "bVar1": "digit_value",
                "bVar2": "is_negative",
                "bVar3": "found_decimal_point",
                "uVar7": "return_value",
                "uVar8": "processed_bits",
                "local_1c": "hash_value",
                "iVar4": "is_input_valid"
            },
            "code": "uint32_t parse_and_convert_input_08002638(int input_start_address, byte *input_data, uint32_t *output_value)\n{\n  byte current_byte;\n  bool is_negative = false;\n  int current_digit = 0;\n  int num_digits = 0;\n  int num_decimal_places = 0;\n  uint32_t converted_value = 0;\n  bool found_decimal_point = false;\n  char *current_char_ptr = (char *)(input_start_address + (uint32_t)*input_data);\n  char *next_char_ptr = current_char_ptr + 1;\n  current_byte = *current_char_ptr;\n  if (current_byte == '-') {\n    is_negative = true;\n    current_byte = *next_char_ptr;\n    current_char_ptr += 2;\n  }\n  else {\n    if (current_byte == '+') {\n      current_char_ptr += 2;\n      current_byte = *next_char_ptr;\n    }\n  }\n  while (true) {\n    if (current_byte >= '0' && current_byte <= '9') {\n      num_digits++;\n      if (num_digits < 9) {\n        if (found_decimal_point) {\n          num_decimal_places--;\n        }\n        converted_value = (uint32_t)(current_byte - '0') + converted_value * 10;\n      }\n      else if (!found_decimal_point) {\n        num_decimal_places++;\n      }\n    }\n    else {\n      if ((current_byte != 0xfe) || (found_decimal_point)) {\n        if (num_digits == 0) {\n          return 0;\n        }\n        uint32_t hash_value = calculate_hash_08008e3c(converted_value);\n        int is_input_valid = check_input_is_not_null_08009214_08009214(hash_value, 0);\n        if (is_input_valid == 0) {\n          while (num_decimal_places < -1) {\n            uint64_t reversed_bits = reverseBits_08008590(hash_value);\n            uint64_t processed_bits = FUNC_08008640((int)(reversed_bits & 0xffffffff), (int)(reversed_bits >> 32), DAT_08002800, DAT_08002804);\n            hash_value = convert_float_to_uint32_08008c30((int)(processed_bits & 0xffffffff), (int)(processed_bits >> 32));\n            num_decimal_places += 2;\n          }\n          if (num_decimal_places < 0) {\n            uint64_t reversed_bits = reverseBits_08008590(hash_value);\n            uint64_t processed_bits = FUNC_08008640((int)(reversed_bits & 0xffffffff), (int)(reversed_bits >> 32), DAT_08002808, DAT_0800280c);\n            hash_value = convert_float_to_uint32_08008c30((int)(processed_bits & 0xffffffff), (int)(processed_bits >> 32));\n          }\n          else {\n            for (; num_decimal_places > 0; num_decimal_places--) {\n              hash_value = FUNC_08008eec(hash_value, DAT_08002810);\n            }\n          }\n        }\n        if (is_negative) {\n          *output_value = hash_value ^ 0x80000000;\n        }\n        else {\n          *output_value = hash_value;\n        }\n        *input_data = (char *)current_char_ptr - (char *)input_start_address - 1;\n        return 1;\n      }\n      found_decimal_point = true;\n    }\n    current_byte = *current_char_ptr;\n    current_char_ptr++;\n  }\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "parse_and_convert_input_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "validate_inputs_and_print_configuration_settings_080051b4",
                "iVar1": "input_check_result",
                "auStack_18": "input_values",
                "local_9": "input_index",
                "check_input_values_08004dd2": "check_input_values",
                "print_error_message_08004030": "print_error_message",
                "store_data_and_process_input_08004c48": "store_data_and_process_input",
                "print_configuration_settings_08004250": "print_configuration_settings",
                "validate_input_08004d7c": "validate_input"
            },
            "code": "void validate_inputs_and_print_configuration_settings_080051b4(void)\n{\n    int input_check_result;\n    undefined input_values[15];\n    byte input_index;\n    \n    input_check_result = check_input_values_08004dd2();\n    if (input_check_result == 0)\n    {\n        print_error_message_08004030(10);\n        store_data_and_process_input_08004c48(1);\n        print_configuration_settings_08004250();\n    }\n    for (input_index = 0; input_index < 8; input_index++)\n    {\n        input_check_result = validate_input_08004d7c(input_index, input_values);\n        if (input_check_result == 0)\n        {\n            print_error_message_08004030(10);\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "validate_inputs_and_print_configuration_settings_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "calculate_result_and_store_in_memory_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "input_type",
                "uVar2": "result",
                "iVar3": "is_input_valid",
                "puVar4": "pointer_to_memory",
                "piVar5": "pointer_to_integer",
                "local_50": "memory_1",
                "local_4c": "memory_2",
                "local_48": "memory_3",
                "uStack_44": "input2_copy",
                "local_40": "input1_copy",
                "uStack_3c": "memory_2_copy",
                "local_38": "memory_4",
                "local_30": "end_of_input"
            },
            "code": "undefined4 calculate_result_and_store_in_memory_080098d0(undefined4 input1, undefined4 input2)\n{\n    char input_type;\n    undefined4 result;\n    int is_input_valid;\n    undefined4 *pointer_to_memory;\n    int *pointer_to_integer;\n    undefined4 memory_1;\n    undefined *memory_2;\n    undefined4 memory_3;\n    undefined4 input1_copy;\n    undefined4 input2_copy;\n    undefined8 memory_4;\n    int end_of_input;\n    \n    result = calculate_0800a1bc();\n    input_type = *PTR_DAT_08009988;\n    if (input_type == -1 || (is_input_valid = is_valid_input_08008b74(input1, input2, input1, input2), is_input_valid != 0) || (end_of_input = is_end_of_input_08008b24(input1, input2, 0, 0), end_of_input == 0)) {\n        return result;\n    }\n    \n    memory_1 = 1;\n    memory_2 = PTR_DAT_0800998c;\n    memory_3 = input1;\n    input1_copy = input1;\n    input2_copy = input2;\n    \n    if (input_type == '\\0') {\n        memory_4 = 0;\n        \n        while (get_zero_0800b2e0(&memory_1) != 0) {}\n    }\n    else {\n        memory_4 = FUNC_08008894(0, 0, 0, 0);\n        \n        if (input_type != '\\x02') {\n            goto LAB_0800996c;\n        }\n    }\n    \n    pointer_to_memory = (undefined4 *)get_value_from_pointer_array_0800b3dc();\n    *pointer_to_memory = 0x21;\n    \n    if (is_input_valid != 0) {\n        pointer_to_integer = (int *)get_value_from_pointer_array_0800b3dc();\n        *pointer_to_integer = is_input_valid;\n    }\n    \n    return (undefined4)memory_4;\n}\n",
            "called": [
                "FUN_08008b74",
                "FUN_0800a1bc",
                "FUN_08008b24",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002978"
            ],
            "imported": false,
            "current_name": "calculate_result_and_store_in_memory_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "is_param_less_than_16_million_08005c30",
                "param_1": "param",
                "bVar1": "is_less_than",
                "DAT_08005c70": "data_array",
                "set_byte_value_08005bdc": "set_byte_value"
            },
            "code": "bool is_param_less_than_16_million_08005c30(int param) {\n  bool is_less_than = param < 0x1000000;\n  if (is_less_than) {\n    DAT_08005c70[1] = param - 1;\n    set_byte_value(0xffffffff, 0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return !is_less_than;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "is_param_less_than_16_million_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "reverse_and_convert_0800056c",
                "param_1": "input",
                "uVar1": "result",
                "reverseBits_08008590": "reverse_bits",
                "FUNC_08008640": "process_input",
                "DAT_080005a8": "input_constant_1",
                "DAT_080005ac": "input_constant_2",
                "convert_float_to_uint32_08008c30": "convert_float_to_uint32"
            },
            "code": "uint32_t reverse_and_convert_0800056c(uint32_t input)\\n{\\n    uint32_t result = input;\\n    if (PTR_DAT_080005b0[3] != \"\\0\") {\\n        uint32_t reversed_input = reverse_bits(input);\\n        uint64_t extended_input = (uint64_t)reversed_input;\\n        uint32_t processed_input = process_input(extended_input, DAT_080005a8, DAT_080005ac);\\n        result = convert_float_to_uint32(processed_input);\\n    }\\n    return result;\\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "reverse_and_convert_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "reset_and_fill_memory_08002f24",
                "copy_and_reset_value_08002ef0": "copy_and_reset_value",
                "fill_memory_with_value_0800b430": "fill_memory_with_value",
                "PTR_DAT_08002f3c": "PTR_DATA"
            },
            "code": "void reset_and_fill_memory_08002f24(void)\n{\n  copy_and_reset_value();\n  fill_memory_with_value(PTR_DAT_08002f3c, 0, 0x1c);\n  return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "reset_and_fill_memory_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_and_set_sign_bit_to_one_and_shift_right_0800981c",
                "param_1": "x1",
                "param_2": "x2",
                "param_3": "y1",
                "param_4": "y2",
                "cVar1": "operation_type",
                "puVar2": "pointer_array",
                "iVar3": "shift_result",
                "puVar4": "pointer_to_result",
                "piVar5": "pointer_to_shifted_value",
                "uVar6": "result",
                "local_50": "constant_1",
                "puStack_4c": "pointer_to_constant_2",
                "local_48": "x1_copy",
                "uStack_44": "x2_copy",
                "local_40": "y1_copy",
                "uStack_3c": "y2_copy",
                "local_30": "shift_result"
            },
            "code": "undefined8 calculate_hypotenuse_and_set_sign_bit_to_one_and_shift_right_0800981c(undefined4 x1, undefined4 x2, undefined4 y1, undefined4 y2)\n{\n    char operation_type;\n    undefined *pointer_array;\n    int shift_result;\n    undefined4 *pointer_to_result;\n    int *pointer_to_shifted_value;\n    undefined8 result;\n    undefined4 constant_1 = 3;\n    undefined *pointer_to_constant_2 = PTR_s_hypot_080098c0;\n    undefined4 x1_copy = x1;\n    undefined4 x2_copy = x2;\n    undefined4 y1_copy = y1;\n    undefined4 y2_copy = y2;\n    pointer_array = PTR_DAT_080098cc;\n    result = FUNC_08009b24();\n    if (*pointer_array == -1) {\n        return result;\n    }\n    shift_result = set_sign_bit_to_one_and_shift_right_0800b2d4();\n    if (shift_result != 0) {\n        return result;\n    }\n    shift_result = set_sign_bit_to_one_and_shift_right_0800b2d4(x1_copy, x2_copy);\n    if (shift_result == 0) {\n        return result;\n    }\n    shift_result = set_sign_bit_to_one_and_shift_right_0800b2d4(y1_copy, y2_copy);\n    if (shift_result == 0) {\n        return result;\n    }\n    operation_type = *pointer_array;\n    if (operation_type == '\\0') {\n        undefined4 constant_3 = 0xe0000000;\n        undefined4 constant_4 = DAT_080098c8;\n        goto LAB_080098aa;\n    }\n    else {\n        undefined4 constant_3 = 0;\n        undefined4 constant_4 = DAT_080098c4;\n        if (operation_type != '\\x02') {\n            goto LAB_080098aa;\n        }\n    }\n    pointer_to_result = (undefined4 *)get_value_from_pointer_array_0800b3dc();\n    *pointer_to_result = 0x22;\nLAB_080098aa:\n    shift_result = get_zero_0800b2e0(&constant_1);\n    if (shift_result != 0) {\n        goto LAB_08009896;\n    }\nLAB_08009896:\n    result = CONCAT44(constant_4, constant_3);\n    if (shift_result != 0) {\n        pointer_to_shifted_value = (int *)get_value_from_pointer_array_0800b3dc();\n        result = CONCAT44(constant_4, constant_3);\n        *pointer_to_shifted_value = shift_result;\n    }\n    return result;\n}\n",
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b2e0",
                "FUN_0800b3dc",
                "FUN_08009b24"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_hypotenuse_and_set_sign_bit_to_one_and_shift_right_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "set_flags_and_call_functions_080059b4",
                "is_param_valid_08006d72": "is_parameter_valid",
                "set_bits_of_uint_at_offset_08006ce0": "set_bits_of_uint_at_offset",
                "do_nothing_08005a50": "do_nothing",
                "*DAT_080059f4": "data_ptr"
            },
            "code": "int set_flags_and_call_functions_080059b4(void)\n{\n    int* *DAT_080059f4 = DAT_080059f4;\n    **DAT_080059f4 |= 0x200;\n    **DAT_080059f4 |= 0x400;\n    **DAT_080059f4 |= 0x100;\n    is_parameter_valid(16000);\n    set_bits_of_uint_at_offset(3);\n    do_nothing();\n    return 0;\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "num_bits",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "shift_amount"
            },
            "code": "void extract_bits_08006c04(uint input, uint num_bits, uint *output1, uint *output2)\n{\n  uint shift_amount = 7 - (num_bits & 7);\n  if (shift_amount > 3) {\n    shift_amount = 4;\n  }\n  if ((num_bits + 4) < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = num_bits - 3;\n  }\n  *output1 = (1 << (shift_amount & 0xff)) - 1U & input >> (num_bits & 0xff);\n  *output2 = (1 << (num_bits & 0xff)) - 1U & input;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "extract_bits_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "calculate_hash_and_shift_08002e08",
                "uVar1": "first_param",
                "uVar2": "second_param",
                "puVar3": "current_ptr",
                "local_18": "previous_ptr",
                "local_11": "current_byte"
            },
            "code": "void calculate_hash_and_shift_08002e08(void)\\n{\\n  undefined4 first_param;\\n  undefined4 second_param;\\n  undefined *current_ptr;\\n  undefined *previous_ptr;\\n  byte current_byte;\\n  current_byte = *PTR_DAT_08002ed0;\\n  previous_ptr = (undefined *)0x0;\\n  while (current_byte != *PTR_DAT_08002ed8) {\\n    current_ptr = PTR_DAT_08002ed4 + (uint)current_byte * 0x40;\\n    if ((previous_ptr != (undefined *)0x0) && ((previous_ptr[0x24] != \"\\0\" || (current_ptr[0x24] != \"\\0\")))) {\\n      first_param = FUNC_08009054(*(undefined4 *)(previous_ptr + 0x18),*(undefined4 *)(previous_ptr + 0x14));\\n      second_param = FUNC_08009054(*(undefined4 *)(current_ptr + 0x18),*(undefined4 *)(previous_ptr + 0x14));\\n      calculate_hash_and_shift_08002e08_08002c18(previous_ptr,first_param,second_param);\\n      previous_ptr[0x24] = 0;\\n    }\\n    current_byte = increment_and_reset_08002870(current_byte);\\n    previous_ptr = current_ptr;\\n  }\\n  first_param = FUNC_08009054(*(undefined4 *)(previous_ptr + 0x18),*(undefined4 *)(previous_ptr + 0x14));\\n  second_param = FUNC_08009054(0,*(undefined4 *)(previous_ptr + 0x14));\\n  calculate_hash_and_shift_08002e08_08002c18(previous_ptr,first_param,second_param);\\n  previous_ptr[0x24] = 0;\\n  return;\\n}",
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "calculate_hash_and_shift_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "get_shift_amount_08006680",
                "uVar1": "func_result",
                "uVar2": "zeroes_count",
                "PTR_DAT_080066c8": "ptr_dat_arr",
                "DAT_080066c4": "dat_arr"
            },
            "code": "uint get_shift_amount_08006680(void)\n{\n  uint func_result = call_func_1();\n  uint zeroes_count = count_leading_zeroes(0x380000);\n  uint ptr_dat_val = *(uint *)(DAT_080066c4 + 8);\n  uint shifted_val = (ptr_dat_val & 0x1c00) >> (zeroes_count & 0xff);\n  return func_result >> PTR_DAT_080066c8[shifted_val];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shift_amount_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_data_in_memory_08000340",
                "param_1": "memory_location",
                "param_2": "data",
                "PTR_DAT_0800036c": "flag_memory_initialized",
                "initialize_memory_and_set_flag_080002f0": "initialize_memory_and_set_flag",
                "PTR_DAT_08000370": "memory_array"
            },
            "code": "void store_data_in_memory_08000340(uint memory_location, undefined data) {\n  if (*PTR_DAT_0800036c == 0) {\n    initialize_memory_and_set_flag();\n  }\n  PTR_DAT_08000370[memory_location & 0x3ff] = data;\n  return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "store_data_in_memory_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "difference",
                "uVar2": "result1",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result2",
                "uVar6": "combined_params"
            },
            "code": "uint calculate_result_thunk_08009990(uint param1, uint param2, uint param3, uint param4)\n{\n    int difference;\n    undefined4 result1;\n    uint result2;\n    uint result3;\n    uint result4;\n    undefined8 combined_params = CONCAT44(DAT_08009b04, DAT_08009b00);\n    \n    result4 = param4 & 0x7fffffff;\n    if ((DAT_08009b18 < (result4 | (-param3 | param3) >> 0x1f)) || (result3 = param2 & 0x7fffffff, DAT_08009b18 < (result3 | (-param1 | param1) >> 0x1f))) {\n        result4 = calculate_result_thunk_08009990(param3, param4, param1, param2);\n    }\n    else {\n        if ((param4 + 0xc0100000 | param3) == 0) {\n            result4 = FUNC_0800af78();\n            return result4;\n        }\n        result2 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n        if ((result3 | param1) == 0) {\n            result4 = DAT_08009af0;\n            if ((result2 != 2) && (result4 = param1, result2 == 3)) {\n                result4 = DAT_08009af8;\n            }\n        }\n        else {\n            if ((result4 | param3) != 0) {\n                if (result4 == DAT_08009b18) {\n                    result2 = result2 - 1;\n                    if (result3 == result4) {\n                        if (2 < result2) {\n                            return DAT_08009b10;\n                        }\n                        return *(uint *)(PTR_DAT_08009b20 + result2 * 8);\n                    }\n                    if (result2 < 3) {\n                        return *(uint *)(PTR_DAT_08009b1c + result2 * 8);\n                    }\n                    return 0;\n                }\n                if (result3 != DAT_08009b18) {\n                    difference = (int)(result3 - result4) >> 0x14;\n                    if ((int)(result3 - result4) < 0x3d00000) {\n                        if (((int)param4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference, 0x3c))) {\n                            combined_params = 0;\n                        }\n                        else {\n                            FUNC_08008894(param1, param2, param3, param4, param4);\n                            do_nothing_0800b2cc();\n                            combined_params = FUNC_0800af78();\n                        }\n                    }\n                    result1 = (undefined4)((ulonglong)combined_params >> 0x20);\n                    result4 = (uint)combined_params;\n                    if (result2 == 1) {\n                        return result4;\n                    }\n                    if (result2 == 2) {\n                        combined_params = FUNC_080082d0(result4, result1, DAT_08009ae8, DAT_08009aec);\n                        result4 = FUNC_080082d0(DAT_08009af0, DAT_08009af4, (int)combined_params, (int)((ulonglong)combined_params >> 0x20));\n                        return result4;\n                    }\n                    if (result2 == 0) {\n                        return result4;\n                    }\n                    combined_params = FUNC_080082d0(result4, result1, DAT_08009ae8, DAT_08009aec);\n                    result4 = FUNC_080082d0((int)combined_params, (int)((ulonglong)combined_params >> 0x20), DAT_08009af0, DAT_08009af4);\n                    return result4;\n                }\n            }\n            result4 = DAT_08009b08;\n            if (-1 < (int)param2) {\n                result4 = DAT_08009b00;\n            }\n        }\n    }\n    return result4;\n}",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "process_input_08004bf4",
                "param_1": "input",
                "param_2": "param_2",
                "process_input_08000374": "process_input_subroutine",
                "processed_input": "processed_input"
            },
            "code": "void process_input_08004bf4(byte input, undefined4 param_2) {\n    ushort processed_input = (ushort)input * 0xd + 0x200;\n    process_input_08004bf4_08000374(processed_input, param_2, 0xc);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": false,
            "current_name": "process_input_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "validate_input_08004d7c",
                "param_1": "input_value",
                "param_2": "memory_address",
                "iVar1": "check_result",
                "check_values_080003ec": "check_values",
                "fill_memory_with_value_0800b430": "fill_memory_with_zero",
                "process_input_08004bf4": "process_input"
            },
            "code": "bool validate_input_08004d7c(byte input_value, undefined4 memory_address){\n\tint check_result = check_values(memory_address, (ushort)input_value * 0xd + 0x200, 0xc);\n\tif (check_result == 0){\n\t\tfill_memory_with_zero(memory_address, 0xc);\n\t\tprocess_input(input_value, memory_address);\n\t}\n\treturn check_result != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "validate_input_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_to_signed_int_08009278",
                "param_1": "sign_bit",
                "uVar1": "shifted_value",
                "uVar2": "shift_amount_complement"
            },
            "code": "uint convert_to_signed_int_08009278(uint unsigned_int) {\n    uint sign_bit = unsigned_int & 0x80000000;\n    if (unsigned_int << 1 < 0x7f000000) {\n        return 0;\n    }\n    uint shift_amount = (unsigned_int << 1) >> 0x18;\n    uint shift_amount_complement = 0x9e - shift_amount;\n    if (shift_amount < 0x9f && shift_amount_complement != 0) {\n        uint shifted_value = (unsigned_int << 8 | 0x80000000) >> (shift_amount_complement & 0xff);\n        if ((unsigned_int & 0x80000000) != 0) {\n            shifted_value = -shifted_value;\n        }\n        return shifted_value;\n    }\n    if (shift_amount_complement == 0xffffff9f && ((unsigned_int & 0x7fffff) != 0)) {\n        return 0;\n    }\n    if (sign_bit == 0) {\n        return 0x7fffffff;\n    }\n    return sign_bit;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_to_signed_int_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "convert_params_to_big_endian_and_store_in_data_section_080004fc",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "big_endian_param_1, big_endian_param_2, big_endian_param_3",
                "PTR_DAT_08000564": "data_section",
                "PTR_DAT_08000568": "data_section"
            },
            "code": "void convert_params_to_big_endian_and_store_in_data_section_080004fc(uint32_t param_1, uint32_t param_2, uint32_t param_3)\n{\n  uint32_t big_endian_param_1 = convert_to_big_endian(param_1);\n  uint32_t big_endian_param_2 = convert_to_big_endian(param_2);\n  uint32_t big_endian_param_3 = convert_to_big_endian(param_3);\n  *(uint32_t *)(PTR_DAT_08000564 + 0xc) = FUNC_08009054(big_endian_param_1,*(uint32_t *)PTR_DAT_08000564);\n  *(uint32_t *)(PTR_DAT_08000564 + 0x10) = FUNC_08009054(big_endian_param_2,*(uint32_t *)(PTR_DAT_08000564 + 4));\n  *(uint32_t *)(PTR_DAT_08000564 + 0x14) = FUNC_08009054(big_endian_param_3,*(uint32_t *)(PTR_DAT_08000564 + 8));\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "convert_params_to_big_endian_and_store_in_data_section_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "check_and_update_status_08000220",
                "param_1": "new_status",
                "*PTR_DAT_08000264": "*PTR_STATUS",
                "display_alarm_and_update_status_until_complete_08002fd4": "display_alarm_and_update_status_until_complete",
                "'\\x01'": "'1'",
                "'\\x02'": "'2'",
                "do_nothing_080001c8": "do_nothing",
                "do_nothing_twice_08000210": "do_something_twice",
                "do_nothing_080001e0": "do_something"
            },
            "code": "void check_and_update_status_08000220(char new_status) {\n  if (new_status != *PTR_DAT_08000264) {\n    display_alarm_and_update_status_until_complete();\n    if (new_status == '1') {\n      do_nothing();\n    }\n    else if (new_status == '2') {\n      do_something();\n    }\n    else {\n      do_something_twice();\n    }\n    *PTR_DAT_08000264 = new_status;\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_update_status_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "reset_pointer_and_return_08005238",
                "PTR_DAT_0800524c": "pointer_to_data",
                "do_nothing_and_return_08005250": "do_nothing_and_return"
            },
            "code": "void reset_pointer_and_return_08005238(void)\n{\n  *PTR_DAT_0800524c = 0;\n  do_nothing_and_return();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "reset_pointer_and_return_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_flag_and_bit_08007da8",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flag_and_bit_08007da8()\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *flag_ptr |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "set_flag_and_bit_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "alarm_code",
                "process_string_080036c6": "display_message",
                "PTR_s_ALARM__08004190": "ALARM",
                "PTR_s_Abort_during_cycle_08004198": "ABORT_MSG",
                "PTR_s_Hard_limit_08004194": "HARD_LIMIT_MSG",
                "PTR_s___MPos__0800419c": "CURR_POS_MSG",
                "do_nothing_08002814": "wait"
            },
            "code": "void display_alarm_message_08004148(char alarm_code) {\n  display_message(\"PTR_s_ALARM__08004190:\");\n  if (alarm_code == -2) {\n    display_message(\"Abort during cycle\");\n  }\n  else if (alarm_code == -1) {\n    display_message(\"Hard limit reached\");\n  }\n  display_message(\"Current position:\");\n  wait(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_alarm_message_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "print_float_values_08004940",
                "uVar1": "big_endian_value",
                "uVar2": "index",
                "uVar3": "converted_value",
                "uVar4": "reversed_value_1",
                "uVar5": "reversed_value_2",
                "auStack_2c": "stack_values",
                "local_11": "loop_index"
            },
            "code": "void print_float_values_08004940(void)\n{\n  undefined4 big_endian_value;\n  uint index;\n  undefined4 converted_value;\n  undefined8 reversed_value_1;\n  undefined8 reversed_value_2;\n  undefined4 stack_values[6];\n  byte loop_index;\n  stack_values[3] = *(undefined4 *)(PTR_DAT_08004b88 + 4);\n  stack_values[4] = *(undefined4 *)(PTR_DAT_08004b88 + 8);\n  stack_values[5] = *(undefined4 *)(PTR_DAT_08004b88 + 0xc);\n  if ((byte)PTR_DAT_08004b88[1] < 8) {\n    (*(code *)(&switchD_0800495e::switchdataD_08004964)[(byte)PTR_DAT_08004b88[1]])();\n    return;\n  }\n  process_string_080036c6(PTR_s__MPos__08004ba8);\n  for (loop_index = 0; loop_index < 3; loop_index++) {\n    big_endian_value = convert_to_big_endian_08008e44(stack_values[loop_index + 3]);\n    index = (uint)loop_index;\n    converted_value = FUNC_08009054(big_endian_value, *(undefined4 *)(PTR_DAT_08004bac + (uint)loop_index * 4));\n    stack_values[index] = converted_value;\n    if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n      reversed_value_1 = reverseBits_08008590(stack_values[loop_index]);\n      reversed_value_1 = FUNC_08008640((int)reversed_value_1, (int)((ulonglong)reversed_value_1 >> 0x20), DAT_08004b80, DAT_08004b84);\n      index = (uint)loop_index;\n      converted_value = convert_float_to_uint32_08008c30((int)reversed_value_1, (int)((ulonglong)reversed_value_1 >> 0x20));\n      stack_values[index] = converted_value;\n    }\n    print_float_08003826(stack_values[loop_index]);\n    process_string_080036c6(PTR_DAT_08004bb0);\n  }\n  process_string_080036c6(PTR_s_WPos__08004bb4);\n  for (loop_index = 0; loop_index < 3; loop_index++) {\n    if ((PTR_DAT_08004bac[0x28] & 1) == 0) {\n      converted_value = stack_values[loop_index];\n      big_endian_value = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08004bb8 + (loop_index + 8) * 4), *(undefined4 *)(PTR_DAT_08004bb8 + (loop_index + 10) * 4 + 4));\n      index = (uint)loop_index;\n      converted_value = FUNC_08008cd8(converted_value, big_endian_value);\n      stack_values[index] = converted_value;\n    }\n    else {\n      reversed_value_1 = reverseBits_08008590(stack_values[loop_index]);\n      big_endian_value = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08004bb8 + (loop_index + 8) * 4), *(undefined4 *)(PTR_DAT_08004bb8 + (loop_index + 10) * 4 + 4));\n      reversed_value_2 = reverseBits_08008590(big_endian_value);\n      reversed_value_2 = FUNC_08008640((int)reversed_value_2, (int)((ulonglong)reversed_value_2 >> 0x20), DAT_08004b80, DAT_08004b84);\n      reversed_value_1 = FUNC_080082d0((int)reversed_value_1, (int)((ulonglong)reversed_value_1 >> 0x20), (int)reversed_value_2, (int)((ulonglong)reversed_value_2 >> 0x20));\n      index = (uint)loop_index;\n      converted_value = convert_float_to_uint32_08008c30((int)reversed_value_1, (int)((ulonglong)reversed_value_1 >> 0x20));\n      stack_values[index] = converted_value;\n    }\n    print_float_08003826(stack_values[loop_index]);\n    if (loop_index < 2) {\n      process_string_080036c6(PTR_DAT_08004bb0);\n    }\n  }\n  process_string_080036c6(PTR_DAT_08004bbc);\n  return;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "print_float_values_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "compare_uints_08008a74",
                "param_1": "left",
                "param_2": "right",
                "param_3": "left_shifted",
                "param_4": "right_shifted",
                "uVar1": "xor_result",
                "bVar2": "left_and_right_zero",
                "bVar3": "left_greater_than_right"
            },
            "code": "uint compare_uints_08008a74(uint left, uint right, uint left_shifted, uint right_shifted)\n{\n    bool left_shifted_is_negative = ((int)(left_shifted << 1) >> 0x15 == -1);\n    bool right_shifted_is_negative = ((int)(right_shifted << 1) >> 0x15 == -1);\n    if (left_shifted_is_negative || right_shifted_is_negative)\n    {\n        if (left_shifted_is_negative && (left | (left_shifted << 0xc)) != 0)\n        {\n            return 1;\n        }\n        if (right_shifted_is_negative && (right | (right_shifted << 0xc)) != 0)\n        {\n            return 1;\n        }\n    }\n    else\n    {\n        bool left_and_right_zero = ((left | (left_shifted << 1)) == 0) && ((right | (right_shifted << 1)) == 0);\n        bool left_and_right_equal = (left == right) && (left_shifted == right_shifted);\n        if (!left_and_right_zero && !left_and_right_equal)\n        {\n            uint xor_result = left_shifted ^ right_shifted;\n            bool xor_result_is_zero = (xor_result == 0);\n            bool xor_result_is_positive = (-1 < (int)xor_result);\n            bool right_greater_than_left = (xor_result_is_positive && (right > left));\n            bool left_greater_than_right = (xor_result_is_zero || ((xor_result_is_positive || right_greater_than_left) && (left > right)));\n            bool result = !left_greater_than_right;\n            return result | 1;\n        }\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "compare_uints_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "display_alarm_and_update_status_until_complete_08002fd4",
                "iVar1": "pointer_value",
                "get_pointer_if_not_equal_08002f74": "get_pointer_if_not_equal",
                "PTR_DAT_08003000": "PTR_DAT",
                "display_alarm_and_update_status_if_needed_08003a74": "display_alarm_and_update_status_if_needed"
            },
            "code": "void display_alarm_and_update_status_until_complete_08002fd4(void)\\n{\\n  int pointer_value;\\n  while ((pointer_value = get_pointer_if_not_equal(), pointer_value != 0 || (PTR_DAT_08003000_08003000[1] == \"\\x03\")))\\n  {\\n    display_alarm_and_update_status_if_needed();\\n    if (*PTR_DAT_08003000_08003000 != \"\\0\")\\n    {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "display_alarm_and_update_status_until_complete_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "decode_and_display_alarm_08002408",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "encoded_value",
                "uVar3": "big_endian_value",
                "uVar4": "decoded_value",
                "local_12": "shifted_value",
                "DAT_080024b8": "encoded_value_key",
                "DAT_080024bc": "encoded_value_key_2",
                "PTR_DAT_080024c0": "status_pointer",
                "FUNC_08008eec": "encode_value_with_key",
                "reverseBits_08008590": "reverse_bits",
                "decode_string_080094c0": "decode_string",
                "calculate_shifted_value_08008bf0": "calculate_shifted_value",
                "display_alarm_and_update_status_until_complete_08002fd4": "display_alarm_and_update_status_until_complete",
                "convert_to_big_endian_08008e44": "convert_to_big_endian",
                "FUNC_08008cd8": "encode_value_with_key_2",
                "do_nothing_08002814": "do_nothing",
                "display_alarm_and_update_status_if_needed_08003a74": "display_alarm_and_update_status_if_needed",
                "wait_until_sum_exceeds_param_plus_initial_value_080002a0": "wait_until_sum_exceeds_param_plus_initial_value"
            },
            "code": "void decode_and_display_alarm_08002408(uint32_t input_value)\\n{\\n  uint32_t encoded_value = FUNC_08008eec(input_value, DAT_080024b8);\\n  uint64_t decoded_value = reverseBits_08008590(encoded_value);\\n  decoded_value = decode_string_080094c0((int)decoded_value, (int)(decoded_value >> 0x20));\\n  uint16_t shifted_value = calculate_shifted_value_08008bf0((int)decoded_value, (int)(decoded_value >> 0x20));\\n  display_alarm_and_update_status_until_complete_08002fd4();\\n  encoded_value = FUNC_08008eec(input_value, DAT_080024bc);\\n  uint32_t big_endian_value = convert_to_big_endian_08008e44(shifted_value * 0x32);\\n  encoded_value = FUNC_08008cd8(encoded_value, big_endian_value);\\n  decoded_value = reverseBits_08008590(encoded_value);\\n  decoded_value = decode_string_080094c0((int)decoded_value, (int)(decoded_value >> 0x20));\\n  uint16_t new_shifted_value = calculate_shifted_value_08008bf0((int)decoded_value, (int)(decoded_value >> 0x20));\\n  do_nothing_08002814(new_shifted_value);\\n  while ((shifted_value != 0 && (display_alarm_and_update_status_if_needed_08003a74(), *PTR_DAT_080024c0 == \"\\0\"))) {\\n    wait_until_sum_exceeds_param_plus_initial_value_080002a0(0x32);\\n    shifted_value = shifted_value - 1;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_08008e44",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "decode_and_display_alarm_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "process_input_and_calculate_result_08002a94",
                "puVar1": "previous_result_ptr",
                "puVar2": "current_result_ptr",
                "local_18": "previous_input_ptr",
                "local_14": "current_input_ptr",
                "local_9": "current_input_byte"
            },
            "code": "void process_input_and_calculate_result_08002a94(void)\n{\n  undefined *previous_result_ptr;\n  undefined *current_result_ptr;\n  undefined *previous_input_ptr;\n  undefined *current_input_ptr;\n  byte current_input_byte;\n\n  current_input_byte = *DAT_08002af0;\n  previous_result_ptr = (undefined *)0x0;\n  previous_input_ptr = (undefined *)0x0;\n  while (current_input_byte != *DAT_08002af8) {\n    current_input_byte = replace_null_with_0x12_and_decrement(current_input_byte);\n    previous_input_ptr = previous_result_ptr;\n    current_result_ptr = DAT_08002af4 + (uint)current_input_byte * 0x40;\n    process_input_and_calculate_result_08002a94_080029d8(current_result_ptr,previous_result_ptr,previous_input_ptr);\n    previous_result_ptr = current_result_ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_input_and_calculate_result_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "calculate_result_and_process_input_08003618",
                "param_1": "input",
                "puVar2": "DAT_VALUES",
                "bVar1": "index",
                "uVar3": "big_endian_input",
                "uVar4": "value_from_data"
            },
            "code": "void calculate_result_and_process_input_08003618(uint32_t input) {\n    uint8_t index = *DAT_INDEX;\n    uint8_t offset = index * 0x40;\n    uint32_t current_value = *(uint32_t *)(DAT_VALUES + offset + 0x20);\n    uint32_t big_endian_input = convert_to_big_endian(input);\n    uint32_t intermediate_result = calculate_intermediate_result(current_value, big_endian_input);\n    uint32_t value_from_data = convert_to_big_endian(*(uint32_t *)(DAT_VALUES + offset + 0x10));\n    uint32_t final_result = calculate_final_result(intermediate_result, value_from_data);\n    *(uint32_t *)(DAT_VALUES + offset + 0x20) = final_result;\n    *(uint32_t *)(DAT_VALUES + offset + 0x10) = input;\n    *(uint32_t *)(DAT_VALUES + offset + 0x18) = 0;\n    *(uint32_t *)(DAT_VALUES + offset + 0x1c) = 0;\n    DAT_VALUES[offset + 0x25] = 0;\n    DAT_VALUES[offset + 0x24] = 1;\n    process_input_and_calculate_result();\n}\n",
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08002edc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "calculate_result_and_process_input_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = is_end_of_string_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_0800b2cc",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_device_08007d08",
                "puVar1": "device_registers",
                "DAT_08007d9c": "device_register_address",
                "set_bit_08007a10": "set_bit",
                "PTR_DAT_08007da0": "device_pointer_1",
                "DAT_08007da4": "device_register_1"
            },
            "code": "void initialize_device_08007d08(void)\n{\n  uint32_t *device_registers = DAT_08007d9c;\n  set_bit(device_registers);\n  device_registers[0] = 0x80;\n  device_registers[1] = 0;\n  device_registers[2] = 0;\n  device_registers[3] = 0;\n  device_registers[4] = 0;\n  device_registers[6] = 0x6800;\n  device_registers[7] = 0;\n  device_registers[8] = 0;\n  device_registers[9] = 0;\n  device_registers[10] = (uint32_t)(((uint64_t)DAT_08007da4 * (uint64_t)*PTR_DAT_08007da0) >> 0x35) - 1;\n  device_registers[0xb] = 199;\n  device_registers[0xd] = 0;\n  device_registers[0xe] = 100;\n  device_registers[0xf] = 0;\n  device_registers[0x10] = 0;\n  device_registers[0x12] = 0;\n  device_registers[0x13] = 0;\n  device_registers[5] = 1;\n  return;\n}",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_device_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "concatenate_32bit_to_64bit_080091fc",
                "param_1": "ptr_src",
                "param_2": "ptr_dest"
            },
            "code": "void concatenate_32bit_to_64bit_080091fc(uint32_t* ptr_src, uint64_t* ptr_dest){\n    *ptr_dest |= (uint64_t)(*ptr_src);\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "concatenate_32bit_to_64bit_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "calculate_and_set_result_if_input_valid_080058a0",
                "PTR_DAT_080058f0": "ptr_dat_080058f0",
                "PTR_DAT_080058f4": "ptr_dat_080058f4",
                "PTR_DAT_080058fc": "PTR_DAT_080058fc",
                "calculate_result_and_process_input_08003618": "calculate_result_and_process_input",
                "DAT_080058f8": "DAT_080058f8",
                "calculate_and_set_value_08005324": "calculate_and_set_value"
            },
            "code": "void calculate_and_set_result_if_input_valid_080058a0() {\n    int* PTR_DAT_080058f0 = *(int **)PTR_DAT_080058f0;\n    int* PTR_DAT_080058f4 = PTR_DAT_080058f4;\n    if (*PTR_DAT_080058f0 == 0) {\n        PTR_DAT_080058fc[1] = 0;\n    }\n    else {\n        int input_difference = *(int *)(PTR_DAT_080058f0[4]) - *(int *)(PTR_DAT_080058f4 + 16);\n        calculate_result_and_process_input_08003618(input_difference);\n        *(int *)(PTR_DAT_080058f4 + 28) = 0;\n        calculate_and_set_value_08005324(*(int *)(PTR_DAT_080058f4 + 28));\n        *(int *)(PTR_DAT_080058f4 + 24) = DAT_080058f8;\n        *(int *)(PTR_DAT_080058f4 + 16) = 0;\n        PTR_DAT_080058fc[1] = 2;\n    }\n}",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "calculate_and_set_result_if_input_valid_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "input_string",
                "local_c": "current_char"
            },
            "code": "void process_string_080036c6(char *input_string)\\n{\\n  char *current_char;\\n  current_char = input_string;\\n  while (*current_char != \"\\0\") {\\n    wait_for_flag_and_return_08008250(*current_char);\\n    current_char = current_char + 1;\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004228",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "set_shift_and_value_08008190",
                "puVar1": "data_ptr",
                "DAT_08008240": "data_array",
                "calculate_shift_amount_and_set_value_08007f54": "calculate_shift_and_value",
                "0x1c200": "shift_value"
            },
            "code": "void set_shift_and_value_08008190(void)\n{\n  uint *data_ptr;\n  data_ptr = DAT_08008240;\n  set_bit(DAT_08008240);\n  data_ptr[3] &= 0xffffdfff;\n  data_ptr[3] &= 0xffff400c | 0xc;\n  data_ptr[4] &= 0xffff8090;\n  data_ptr[5] &= 0xfffff000;\n  *data_ptr &= 0xfffffc00;\n  calculate_shift_and_value(data_ptr, 0x1c200);\n  data_ptr[6] = data_ptr[6];\n  data_ptr[3] |= 0x2000;\n  return;\n}",
            "called": [
                "FUN_08007f54",
                "FUN_08007ea4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_shift_and_value_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "set_flags_based_on_param_080074c8",
                "param_1": "param_flags",
                "set_bit_in_short_array_08007402": "set_bit_in_short_array",
                "check_condition_and_set_flag_if_met_0800195c": "check_condition_and_set_flag_if_met",
                "set_flag_08003a18": "set_flag"
            },
            "code": "void set_flags_based_on_param_080074c8(uint param_flags)\n{\n  if ((param_flags & 0x01) != 0) {\n    set_bit_in_short_array(0x3e);\n  }\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((param_flags & 0x1e) != 0)) {\n    check_condition_and_set_flag_if_met();\n  }\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((param_flags & 0x80) != 0)) {\n    set_flag(param_flags);\n  }\n  return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "set_flags_based_on_param_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "fill_memory_with_value_0800b430",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "current_memory",
                "puVar2": "end_memory",
                "uVar3": "remaining_size",
                "uVar4": "value_32",
                "bVar5": "is_remaining_size_zero",
                "PTR_0804a010": "byte_memory"
            },
            "code": "void fill_memory_with_value_0800b430(unsigned int *memory, unsigned char value, unsigned int size) {\n  unsigned int *current_memory = memory;\n  unsigned int *end_memory = memory + size / sizeof(unsigned int);\n  unsigned char *PTR_0804a010;\n  unsigned int value_32 = (value << 24) | (value << 16) | (value << 8) | value;\n  \n  while (current_memory < end_memory) {\n    *current_memory = value_32;\n    current_memory++;\n  }\n  \n  PTR_0804a010 = (unsigned char *)current_memory;\n  \n  while ((unsigned int)PTR_0804a010 < (unsigned int)memory + size) {\n    *PTR_0804a010 = value;\n    PTR_0804a010++;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_080079c0",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_080024c4",
                "FUN_08002f24",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "fill_memory_with_value_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "error_code",
                "process_string_080036c6": "print_message",
                "PTR_DAT_08004108": "default_error_message",
                "PTR_s_error__0800410c": "error_prefix",
                "PTR_s_Bad_number_format_08004110": "bad_number_format_error",
                "PTR_s_Expected_command_letter_08004114": "expected_command_letter_error",
                "PTR_s_Unsupported_statement_08004118": "unsupported_statement_error",
                "PTR_s_Invalid_radius_0800411c": "invalid_radius_error",
                "PTR_s_Modal_group_violation_08004120": "modal_group_violation_error",
                "PTR_s_Invalid_statement_08004124": "invalid_statement_error",
                "PTR_s_Setting_disabled_08004128": "setting_disabled_error",
                "PTR_s_Value___0_0_0800412c": "zero_value_error",
                "PTR_s_Value___3_usec_08004130": "three_usec_value_error",
                "PTR_s_EEPROM_read_fail__Using_defaults_08004134": "eeprom_read_fail_error",
                "PTR_s_Busy_or_queued_08004138": "busy_or_queued_error",
                "PTR_s_Alarm_lock_0800413c": "alarm_lock_error",
                "PTR_s_Line_overflow_08004140": "line_overflow_error",
                "PTR_DAT_08004144": "default_error_message_suffix"
            },
            "code": "void print_error_message_08004030(char error_code)\n{\n    if (error_code == '\\0') {\n        print_message(PTR_DAT_08004108);\n    }\n    else {\n        print_message(PTR_s_error__0800410c);\n        switch(error_code) {\n            case '\\x01':\n                print_message(PTR_s_Bad_number_format_08004110);\n                break;\n            case '\\x02':\n                print_message(PTR_s_Expected_command_letter_08004114);\n                break;\n            case '\\x03':\n                print_message(PTR_s_Unsupported_statement_08004118);\n                break;\n            case '\\x04':\n                print_message(PTR_s_Invalid_radius_0800411c);\n                break;\n            case '\\x05':\n                print_message(PTR_s_Modal_group_violation_08004120);\n                break;\n            case '\\x06':\n                print_message(PTR_s_Invalid_statement_08004124);\n                break;\n            case '\\a':\n                print_message(PTR_s_Setting_disabled_08004128);\n                break;\n            case '\\b':\n                print_message(PTR_s_Value___0_0_0800412c);\n                break;\n            case '\\t':\n                print_message(PTR_s_Value___3_usec_08004130);\n                break;\n            case '\\n':\n                print_message(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n                break;\n            case '\\v':\n                print_message(PTR_s_Busy_or_queued_08004138);\n                break;\n            case '\\f':\n                print_message(PTR_s_Alarm_lock_0800413c);\n                break;\n            case '\\r':\n                print_message(PTR_s_Line_overflow_08004140);\n        }\n        print_message(PTR_DAT_08004144);\n    }\n    return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_error_message_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "check_if_threshold_exceeded_08005360",
                "DAT_0800539c": "threshold",
                "PTR_DAT_08005398": "data_ptr",
                "*PTR_DAT_08005398 + 0x14": "current_value_ptr",
                "*PTR_DAT_08005398 + 0x18": "threshold_ptr",
                "uVar1": "threshold",
                "uVar2": "current_threshold_value"
            },
            "code": "bool check_if_threshold_exceeded_08005360(void)\n{\n  int* *PTR_DAT_08005398 + 0x14 = PTR_DAT_08005398 + 0x14;\n  int* *PTR_DAT_08005398 + 0x18 = PTR_DAT_08005398 + 0x18;\n  **PTR_DAT_08005398 + 0x18 += **PTR_DAT_08005398 + 0x14;\n  uint DAT_0800539c = DAT_0800539c;\n  uint current_DAT_0800539c_value = **PTR_DAT_08005398 + 0x18;\n  if (DAT_0800539c < current_DAT_0800539c_value) {\n    **PTR_DAT_08005398 + 0x18 -= 420000;\n  }\n  return DAT_0800539c < current_DAT_0800539c_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_if_threshold_exceeded_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "initialize_pointers_to_zero_08003980",
                "PTR_DAT_08003998": "pointer_data_1",
                "PTR_DAT_0800399c": "pointer_data_2"
            },
            "code": "void initialize_pointers_to_zero_08003980(void)\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "initialize_pointers_to_zero_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "is_bit_set_08006de0",
                "param_1": "bit_index",
                "uVar1": "is_set",
                "is_bit_set_in_array_08006a18": "is_bit_set_in_array"
            },
            "code": "int is_bit_set_08006de0(int bit_index)\n{\n    int is_set = is_bit_set_08006de0_in_array(bit_index);\n    return is_set;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "is_bit_set_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "main_08007540",
                "set_flags_and_call_functions_080059b4": "call_flag_functions",
                "initialize_system_08007436": "initialize_system",
                "update_registers_and_set_param_values_0800778c": "update_registers_and_set_params",
                "initialize_and_set_device_flags_08007e08": "initialize_and_set_device_flags",
                "initializeMemory_080079c0": "initialize_memory",
                "set_shift_and_value_08008190": "set_shift_and_value",
                "check_interrupt_08005984": "check_interrupt",
                "run_application_08001ddc": "run_application"
            },
            "code": "int main_08007540(void)\n{\n    call_flag_functions();\n    initialize_system();\n    update_registers_and_set_params();\n    initialize_and_set_device_flags();\n    initialize_memory();\n    set_shift_and_value();\n    check_interrupt(0);\n    run_application();\n    return 0;\n}",
            "called": [
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08007436",
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_08005984",
                "FUN_0800778c",
                "FUN_08001ddc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "main_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_param_080052dc",
                "param_1": "new_param",
                "DAT_08005308": "data_ptr"
            },
            "code": "void set_param_080052dc(uint new_param) {\n    uint* ptr = (uint*)(DAT_08005308 + 0x14);\n    uint current_value = *ptr;\n    uint mask = 0xfffff55f;\n    uint masked_value = current_value & mask;\n    uint new_value = new_param | masked_value;\n    *ptr = new_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "set_param_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_result_080064ec",
                "uVar1": "mask",
                "uVar2": "factor",
                "local_c": "result"
            },
            "code": "uint calculate_result_080064ec(void)\n{\n  uint mask;\n  uint factor;\n  uint result;\n  \n  mask = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (mask == 8) {\n    factor = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    mask = count_leading_zeroes(0x200);\n    if ((*(uint *)(DAT_0800661c + 4) & 0x400000) >> (mask & 0xff) == 0) {\n      mask = count_leading_zeroes(0x3fe0000);\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (mask & 0xff)) * (DAT_08006620 / factor);\n    }\n    else {\n      mask = count_leading_zeroes(0x3fe0000);\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (mask & 0xff)) * (DAT_08006624 / factor);\n    }\n    mask = count_leading_zeroes(0xc000);\n    return result / ((((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (mask & 0xff)) + 1) * 2);\n  }\n  if (mask < 9) {\n    if (mask == 0) {\n      return DAT_08006620;\n    }\n    if (mask == 4) {\n      return DAT_08006624;\n    }\n  }\n  return DAT_08006620;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_result_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "apply_mask_08006ba0",
                "param_1": "mask",
                "param_2": "value",
                "param_3": "shift",
                "uVar1": "remaining_bits",
                "shift_amount": "shift_amount"
            },
            "code": "uint apply_mask_08006ba0(uint mask, uint value, uint shift) {\n  uint shift_amount = shift & 7;\n  uint remaining_bits = 7 - shift_amount;\n  if (remaining_bits > 3) {\n    remaining_bits = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  return mask & ((1U << (shift_amount & 0xff)) - 1U) | ((1U << (remaining_bits & 0xff)) - 1U & value) << (shift_amount & 0xff);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "apply_mask_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "check_values_080003ec",
                "param_1": "string",
                "param_2": "length",
                "param_3": "array_index",
                "cVar1": "current_char",
                "uVar2": "expected_count",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_string",
                "local_9": "count"
            },
            "code": "bool check_values_080003ec(char *string, int length, int array_index)\n{\n  char current_char;\n  uint8_t count = 0;\n  int remaining_length = length;\n  int current_index = array_index;\n  char *current_string = string;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initialize_memory_and_set_flag_080002f0();\n    current_index = array_index;\n    current_string = string;\n  }\n  while (remaining_length != 0) {\n    current_char = get_value_from_array_08000310(current_index);\n    count += (current_char != 0);\n    *current_string = current_char;\n    current_index++;\n    current_string++;\n    remaining_length--;\n  }\n  uint8_t expected_count = get_value_from_array_08000310(current_index);\n  return count == expected_count;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d2c",
                "FUN_08004d7c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "check_values_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "replace_null_with_0x12_and_decrement_08002896",
                "param_1": "input_char",
                "local_9": "output_char"
            },
            "code": "char replace_null_with_0x12_and_decrement_08002896(char input_char) {\n  char output_char;\n  output_char = input_char;\n  if (input_char == '\\0') {\n    output_char = '\\x12';\n  }\n  return output_char - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "replace_null_with_0x12_and_decrement_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = convert_to_int_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_pointers_080001ac",
                "param_1": "first_pointer",
                "param_2": "second_pointer",
                "DAT_080001bc": "global_variable",
                "PTR_FUN_080001c4": "global_first_pointer",
                "PTR_DAT_080001c0": "global_second_pointer"
            },
            "code": "uint64_t concatenate_pointers_080001ac(uint8_t *first_pointer, uint8_t *second_pointer)\n{\n    if (DAT_080001bc != 0) {\n        first_pointer = PTR_FUN_080001c4;\n        second_pointer = PTR_DAT_080001c0;\n    }\n    return ((uint64_t)second_pointer << 32) | (uint64_t)first_pointer;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "concatenate_pointers_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "print_binary_representation_08003740",
                "param_1": "data"
            },
            "code": "void print_binary_representation_08003740(unsigned char* data, int length){\n    print_binary_representation_08003740_080036f0(data, length);\n    return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "print_binary_representation_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_params_and_return_08000478",
                "param_1": "first_parameter",
                "param_2": "second_parameter",
                "param_3": "third_parameter",
                "PTR_DAT_080004a8": "global_params"
            },
            "code": "void set_params_and_return_08000478(undefined param_1, undefined param_2, undefined param_3) {\n  PTR_DAT_080004a8[25] = param_1;\n  PTR_DAT_080004a8[26] = param_2;\n  PTR_DAT_080004a8[27] = param_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "set_params_and_return_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "set_bit_in_array_08006d2e",
                "param_1": "character",
                "set_bit_in_array_080069b4": "set_bit_in_array_helper"
            },
            "code": "void set_bit_in_array_08006d2e(char character) {\n    set_bit_in_array_08006d2e_helper((int)character);\n}\n",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_in_array_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "wait_for_flag_08007e1c",
                "param_1": "flag",
                "DAT_08007e48": "status_register"
            },
            "code": "void wait_for_flag_08007e1c(byte flag){\n  while((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)flag;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": false,
            "current_name": "wait_for_flag_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "calculate_hash_0800adf0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "iVar1": "convert_result",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "uVar8": "result8"
            },
            "code": "uint32_t calculate_hash_0800adf0(uint32_t input1, uint32_t input2, uint32_t input3, uint32_t input4, int flag) {\n  int convert_result;\n  uint64_t result1, result2, result3, result4, result5, result6, result7, result8;\n  if ((input2 & 0x7fffffff) < 0x3e400000) {\n    convert_result = convert_to_int();\n    if (convert_result == 0) {\n      return input1;\n    }\n  }\n  result1 = FUNC_08008640(input1, input2, input1);\n  result2 = result1 >> 0x20;\n  result3 = result1;\n  result4 = FUNC_08008640(input1, input2, result3, result2);\n  result5 = result4 >> 0x20;\n  result6 = result4;\n  result7 = FUNC_08008640(result3, result2, PTR_DAT_0800af40, PTR_DAT_0800af44);\n  result7 = FUNC_080082d0(result7, result7 >> 0x20, PTR_DAT_0800af48, PTR_DAT_0800af4c);\n  result7 = FUNC_08008640(result7, result7 >> 0x20, result3, result2);\n  result7 = FUNC_080082d4(result7, result7 >> 0x20, PTR_DAT_0800af50, PTR_DAT_0800af54);\n  result7 = FUNC_08008640(result7, result7 >> 0x20, result3, result2);\n  result7 = FUNC_080082d0(result7, result7 >> 0x20, PTR_DAT_0800af58, PTR_DAT_0800af5c);\n  result7 = FUNC_08008640(result7, result7 >> 0x20, result3, result2);\n  result7 = FUNC_080082d4(result7, result7 >> 0x20, PTR_DAT_0800af60, PTR_DAT_0800af64);\n  result8 = result7 >> 0x20;\n  if (flag != 0) {\n    result2 = FUNC_08008640(input3, input4, 0, PTR_DAT_0800af70);\n    result7 = FUNC_08008640(result3, result2, result6, result5);\n    result7 = FUNC_080082d0(result2 >> 0x20, result2, result7 >> 0x20, result7);\n    result7 = FUNC_08008640(result7, result7 >> 0x20, result3, result2);\n    result7 = FUNC_080082d0(result7 >> 0x20, result7, input3, input4);\n    result2 = FUNC_08008640(result6, result5, PTR_DAT_0800af68, PTR_DAT_0800af6c);\n    result7 = FUNC_080082d4(result7 >> 0x20, result7, result2 >> 0x20, result2);\n    result3 = FUNC_080082d0(input1, input2, result7 >> 0x20, result7);\n    return result3;\n  }\n  result7 = FUNC_08008640(result3, result2, result6, result8);\n  result7 = FUNC_080082d0(result7 >> 0x20, result7, PTR_DAT_0800af68, PTR_DAT_0800af6c);\n  result7 = FUNC_08008640(result7, result7 >> 0x20, result6, result5);\n  result3 = FUNC_080082d4(result7 >> 0x20, result7, input1, input2);\n  return result3;\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "display_alarm_and_update_status_if_needed_08003a74",
                "PTR_DAT_08003b90": "PTR_ALARM_STATUS",
                "PTR_DAT_08003b94": "PTR_FLAGS",
                "display_alarm_message_08004148": "display_alarm_message",
                "display_message_080041a0": "display_message",
                "print_float_values_08004940": "print_float_values",
                "update_data_if_condition_met_0800587c": "update_data_if_condition_met",
                "calculate_and_set_result_if_input_valid_080058a0": "calculate_and_set_result_if_input_valid",
                "execute_if_flags_set_0800585c": "execute_if_flags_set"
            },
            "code": "void display_alarm_and_update_status_if_needed_08003a74(void)\\n{\\n  byte alarm_status;\\n  alarm_status = PTR_DAT_08003b90[2];\\n  if (alarm_status != \"\\0\") {\\n    if ((alarm_status & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((alarm_status & 0x40) == 0) {\\n        display_alarm_message(0xfffffffe);\\n      }\\n      else {\\n        display_alarm_message(0xffffffff);\\n        display_message(1);\\n        PTR_DAT_08003b90[2] = alarm_status & 0xef;\\n        while ((PTR_DAT_08003b90[2] & 0x10) == 0);\\n      }\\n      PTR_DAT_08003b90[2] &= 0x9f;\\n    }\\n    if ((alarm_status & 0x10) == 0) {\\n      if ((alarm_status & 1) != 0) {\\n        print_float_values();\\n        PTR_DAT_08003b90[2] &= 0xfe;\\n      }\\n      if ((alarm_status & 8) != 0) {\\n        update_data_if_condition_met();\\n        PTR_DAT_08003b90[2] &= 0xf7;\\n      }\\n      if ((alarm_status & 4) != 0) {\\n        calculate_and_set_result_if_input_valid();\\n        PTR_DAT_08003b90[2] &= 0xfb;\\n      }\\n      if ((alarm_status & 2) != 0) {\\n        execute_if_flags_set();\\n        if ((PTR_DAT_08003b90[40] & 2) != 0) {\\n          PTR_DAT_08003b90[16] = 1;\\n        }\\n        PTR_DAT_08003b90[2] &= 0xfd;\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080058a0",
                "FUN_08004940",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002fd4",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "display_alarm_and_update_status_if_needed_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = get_value_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = get_value_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = get_value_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = get_value_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = get_value_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = get_value_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = get_value_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = get_value_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = get_value_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = get_value_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = get_value_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = get_value_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = get_value_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = get_value_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "set_byte_at_offset_08006b00",
                "param_1": "offset",
                "param_2": "value",
                "DAT_08006b4c": "data_offset_1",
                "DAT_08006b50": "data_offset_2"
            },
            "code": "void set_byte_at_offset_08006b00(byte offset, uint value) {\n  if (offset < 0) {\n    *(char *)((offset & 0xf) + DAT_08006b4c + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)offset + DAT_08006b50 + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006c9c"
            ],
            "imported": false,
            "current_name": "set_byte_at_offset_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "check_data_presence_0800b4d0",
                "DAT_0800b4dc": "data_present",
                "add_to_list_0800b524": "add_to_list",
                "PTR_LAB_0800b4f0_1_0800b4e0": "label_ptr"
            },
            "code": "void check_data_presence_0800b4d0(void)\n{\n    if (DAT_0800b4dc != 0) {\n        add_to_list(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n        return;\n    }\n    return;\n}",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "check_data_presence_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculate_shift_amount_and_set_value_08007f54",
                "param_1": "input_1",
                "param_2": "input_2",
                "lVar1": "calculated_value_1",
                "iVar2": "calculated_value_2",
                "iVar3": "calculated_value_3",
                "uVar4": "value_to_set",
                "PTR_DAT_08008184": "PTR_DAT_08008184",
                "PTR_DAT_08008188": "PTR_DAT_08008188",
                "PTR_DAT_0800818c": "PTR_DAT_0800818c",
                "get_shift_amount_08006680": "calculate_shift_amount",
                "calculate_shift_amount_080066cc": "calculate_shift_amount"
            },
            "code": "void calculate_shift_amount_and_set_value_08007f54(int input_1, int input_2)\n{\n  long long calculated_value_1;\n  int calculated_value_2;\n  int calculated_value_3;\n  undefined8 value_to_set;\n  \n  if ((*(uint *)(input_1 + 0xc) & 0x8000) == 0) {\n    if ((input_1 != PTR_DAT_08008184) && (input_1 != PTR_DAT_08008188)) {\n      int shift_amount = calculate_shift_amount();\n      calculated_value_1 = (ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)((int)shift_amount * 0x19) / (ulonglong)(uint)(input_2 << 2));\n      calculated_value_2 = calculate_shift_amount(shift_amount, (int)((ulonglong)shift_amount >> 0x20), (int)calculated_value_1);\n      calculated_value_3 = calculate_shift_amount();\n      value_to_set = (uint)((ulonglong)calculated_value_1 >> 0x25) << 4 | (uint)((ulonglong)PTR_DAT_0800818c * (ulonglong)(((uint)(calculated_value_2 * 0x19) / (uint)(input_2 << 2) + (uint)((ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)(calculated_value_3 * 0x19) / (ulonglong)(uint)(input_2 << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      *(uint *)(input_1 + 8) = value_to_set;\n      return;\n    }\n    int shift_amount = calculate_shift_amount_080066cc();\n    calculated_value_1 = (ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)((int)shift_amount * 0x19) / (ulonglong)(uint)(input_2 << 2));\n    calculated_value_2 = calculate_shift_amount_080066cc(shift_amount, (int)((ulonglong)shift_amount >> 0x20), (int)calculated_value_1);\n    calculated_value_3 = calculate_shift_amount_080066cc();\n    value_to_set = (uint)((ulonglong)calculated_value_1 >> 0x25) << 4 | (uint)((ulonglong)PTR_DAT_0800818c * (ulonglong)(((uint)(calculated_value_2 * 0x19) / (uint)(input_2 << 2) + (uint)((ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)(calculated_value_3 * 0x19) / (ulonglong)(uint)(input_2 << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    *(uint *)(input_1 + 8) = value_to_set;\n  }\n  else {\n    if ((input_1 != PTR_DAT_08008184) && (input_1 != PTR_DAT_08008188)) {\n      int shift_amount = calculate_shift_amount();\n      calculated_value_1 = (ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)((int)shift_amount * 0x19) / (ulonglong)(uint)(input_2 << 1));\n      calculated_value_2 = calculate_shift_amount(shift_amount, (int)((ulonglong)shift_amount >> 0x20), (int)calculated_value_1);\n      calculated_value_3 = calculate_shift_amount();\n      value_to_set = (uint)((ulonglong)calculated_value_1 >> 0x25) << 4 | (uint)((ulonglong)PTR_DAT_0800818c * (ulonglong)(((uint)(calculated_value_2 * 0x19) / (uint)(input_2 << 1) + (uint)((ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)(calculated_value_3 * 0x19) / (ulonglong)(uint)(input_2 << 1)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      *(uint *)(input_1 + 8) = value_to_set;\n      return;\n    }\n    int shift_amount = calculate_shift_amount_080066cc();\n    calculated_value_1 = (ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)((int)shift_amount * 0x19) / (ulonglong)(uint)(input_2 << 1));\n    calculated_value_2 = calculate_shift_amount_080066cc(shift_amount, (int)((ulonglong)shift_amount >> 0x20), (int)calculated_value_1);\n    calculated_value_3 = calculate_shift_amount_080066cc();\n    value_to_set = (uint)((ulonglong)calculated_value_1 >> 0x25) << 4 | (uint)((ulonglong)PTR_DAT_0800818c * (ulonglong)(((uint)(calculated_value_2 * 0x19) / (uint)(input_2 << 1) + (uint)((ulonglong)PTR_DAT_0800818c * ((ulonglong)(uint)(calculated_value_3 * 0x19) / (ulonglong)(uint)(input_2 << 1)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    *(uint *)(input_1 + 8) = value_to_set;\n  }\n  return;\n}",
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_and_set_value_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "parse_input_and_execute_command_08003b98",
                "param_1": "input",
                "bVar1": "first_byte",
                "iVar2": "int_value",
                "uVar3": "return_value",
                "uVar4": "return_value",
                "uVar5": "long_value",
                "local_14": "local_var_14",
                "local_10": "local_var_10",
                "local_a": "local_var_a",
                "local_9": "local_var_9"
            },
            "code": "uint parse_input_and_execute_command_08003b98(char *input)\n{\n    byte first_char = input[0];\n    int int_value;\n    uint return_value;\n    undefined8 long_value;\n    undefined4 local_var_14;\n    undefined4 local_var_10;\n    byte local_var_a;\n    byte local_var_9;\n\n    if (first_char != '$') {\n        return FUNC_080005b4(input);\n    }\n    local_var_a = 1;\n    local_var_9 = 0;\n    byte second_char = input[1];\n    if (second_char == 0) {\n        print_grbl_settings_0800423c();\n        return 0;\n    }\n    if ((0x58 < second_char) || (second_char < 0x23)) {\n        goto switchD_08003bdc_caseD_25;\n    }\n    switch (second_char) {\n        case 0x23:\n            local_var_a = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            process_input_and_print_results_080044e8();\n            break;\n        case 0x24:\n            local_var_a = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            print_configuration_settings_08004250();\n            break;\n        case 0x43:\n            local_var_a = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            if (PTR_DAT_08003f2c[1] == '\\a') {\n                set_flag_if_condition_met_080025e8();\n                display_message_080041a0(5);\n            }\n            else {\n                if (PTR_DAT_08003f2c[1] != '\\0') {\n                    return 0xb;\n                }\n                PTR_DAT_08003f2c[1] = 7;\n                display_message_080041a0(4);\n            }\n            break;\n        case 0x47:\n            local_var_a = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            print_info_080046d0();\n            break;\n        case 0x48:\n            if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n                return 7;\n            }\n            if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n                return 0xb;\n            }\n            check_and_update_status_080024c4();\n            if (*PTR_DAT_08003f2c == '\\0') {\n                validate_and_process_strings_080039bc();\n            }\n            break;\n        case 0x4e:\n            local_var_a = 2;\n            if (input[2] == '\\0') {\n                for (local_var_9 = 0; local_var_9 < 2; local_var_9++) {\n                    int_value = validate_input_08004d2c(local_var_9, input);\n                    if (int_value == 0) {\n                        print_error_message_08004030(10);\n                    }\n                    else {\n                        print_absolute_value_and_process_string_08004900(local_var_9, input);\n                    }\n                }\n                return 0;\n            }\n            local_var_9 = '\\x01';\n        default:\n            switchD_08003bdc_caseD_25:\n                int_value = parse_and_convert_input_08002638(input, &local_var_a, &local_var_10);\n                if (int_value == 0) {\n                    return 1;\n                }\n                byte equals_char = input[local_var_a];\n                local_var_a++;\n                if (equals_char != '=') {\n                    return 3;\n                }\n                if (local_var_9 == 0) {\n                    int_value = parse_and_convert_input_08002638(input, &local_var_a, &local_var_14);\n                    if (int_value == 0) {\n                        return 1;\n                    }\n                    if (input[local_var_a] == '\\0') {\n                        int signed_int_value = convert_to_signed_int_08009278(local_var_10);\n                        return_value = FUNC_08004e30(signed_int_value, local_var_14);\n                        return return_value;\n                    }\n                    return 3;\n                }\n                do {\n                    input[local_var_a - local_var_a] = input[local_var_a];\n                    return_value = local_var_a;\n                    local_var_a++;\n                } while (input[return_value] != '\\0');\n                local_var_9 = local_var_a;\n                return_value = FUNC_080005b4(input);\n                if (return_value != 0) {\n                    return return_value;\n                }\n                long_value = reverseBits_08008590(local_var_10);\n                long_value = calculate_number_08009798((int) long_value, (int) ((ulonglong) long_value >> 0x20));\n                local_var_9 = calculate_shifted_value_08008bf0((int) long_value, (int) ((ulonglong) long_value >> 0x20));\n                process_input_from_byte_08004bc0(local_var_9, input);\n                break;\n        case 0x58:\n            local_var_a = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            if (PTR_DAT_08003f2c[1] == '\\x06') {\n                display_message_080041a0(3);\n                PTR_DAT_08003f2c[1] = 0;\n            }\n    }\n    return 0;\n}",
            "called": [
                "FUN_080046d0",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080025e8",
                "FUN_08004250",
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080041a0",
                "FUN_08004900",
                "FUN_080044e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "parse_input_and_execute_command_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "checkAndUpdateStatus_080024c4",
                "PTR_DAT_080025d8": "status_array",
                "PTR_DAT_080025dc": "data_array",
                "PTR_DAT_080025e0": "data_array2",
                "PTR_DAT_080025e4": "data_array3",
                "execute_function_08001d4c": "execute_startup_function",
                "display_alarm_and_update_status_if_needed_08003a74": "check_for_alarm_and_update_status",
                "fill_memory_with_value_0800b430": "fill_memory_with_value",
                "save_and_convert_params_0800283a": "save_and_convert_parameters",
                "convert_to_big_endian_08008e44": "convert_to_big_endian",
                "FUNC_08008eec": "check_and_update_status",
                "checkAndUpdateStatus_08001e98": "check_and_update_status",
                "execute_if_flags_set_0800585c": "execute_if_flags_set",
                "display_alarm_and_update_status_until_complete_08002fd4": "display_alarm_and_update_status_until_complete"
            },
            "code": "void checkAndUpdateStatus_080024c4()\n{\n  int status = 5;\n  int zero = 0;\n  char flag1, flag2, flag3;\n  \n  PTR_DAT_080025d8[1] = status;\n  *(int *)PTR_DAT_080025dc = zero;\n  execute_startup_function();\n  check_for_alarm_and_update_status();\n  if (*PTR_DAT_080025d8 == 0) {\n    fill_memory_with_value(PTR_DAT_080025e0, 0, 12);\n    save_and_convert_parameters();\n    PTR_DAT_080025d8[1] = 0;\n    if ((*(unsigned short *)(PTR_DAT_080025e0 + 42) & 0x20) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = 1;\n    }\n    if ((*(unsigned short *)(PTR_DAT_080025e0 + 42) & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = 1;\n    }\n    if ((*(unsigned short *)(PTR_DAT_080025e0 + 42) & 0x200) == 0) {\n      flag3 = -1;\n    }\n    else {\n      flag3 = 1;\n    }\n    int big_endian_flag1 = convert_to_big_endian(flag1);\n    int big_endian_flag2 = convert_to_big_endian(flag2);\n    int big_endian_flag3 = convert_to_big_endian(flag3);\n    int param1 = *(int *)(PTR_DAT_080025e0 + 56);\n    int param2 = *(int *)(PTR_DAT_080025e0 + 48);\n    check_and_update_status(big_endian_flag1, big_endian_flag2, big_endian_flag3, param1, 0);\n    execute_if_flags_set();\n    display_alarm_and_update_status_until_complete();\n    save_and_convert_parameters();\n    if ((PTR_DAT_080025e0[40] & 8) != 0) {\n      *(int *)PTR_DAT_080025dc = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_0800585c",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "checkAndUpdateStatus_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "check_and_reset_value_08002f40",
                "uVar1": "new_value",
                "*PTR_DAT_08002f6c": "*PTR_CURRENT_VALUE",
                "*PTR_DAT_08002f70": "*PTR_EXPECTED_VALUE",
                "increment_and_reset_08002870": "increment_and_reset_value"
            },
            "code": "void check_and_reset_value_08002f40(void)\n{\n  undefined new_value;\n  if (*PTR_DAT_08002f6c != *PTR_DAT_08002f70) {\n    new_value = increment_and_reset_value(*PTR_DAT_08002f70);\n    *PTR_DAT_08002f70 = new_value;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_and_reset_value_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08004250",
                "FUN_08001994",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08002908",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "set_flag_if_condition_met_080025e8",
                "PTR_DAT_08002634": "status_flags",
                "do_nothing_and_return_08005250": "do_nothing_and_return",
                "do_nothing_twice_08000210": "do_nothing_twice",
                "clear_bits_and_check_condition_080057e4": "clear_bits_and_check_condition"
            },
            "code": "void set_flag_if_condition_met_080025e8(void)\n{\n  if ((PTR_DAT_08002634[2] & 0x10) == 0) {\n    PTR_DAT_08002634[2] |= 0x10;\n    do_nothing_and_return();\n    do_nothing_twice();\n    if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\n      PTR_DAT_08002634[2] |= 0x20;\n      clear_bits_and_check_condition();\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_080057e4",
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "imported": false,
            "current_name": "set_flag_if_condition_met_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_and_return_08005250",
                "do_nothing_08005214": "do_nothing"
            },
            "code": "void do_nothing_and_return_08005250(void)\n{\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "loop_forever_08007430"
            },
            "code": "void loop_forever_08007430(void)\n{\n  while(true) {\n    // Do nothing block with infinite loop\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "loop_forever_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = calculate_result_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080046d0",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_08009d78",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_0800b2e8",
                "FUN_08002638",
                "FUN_08001f00",
                "FUN_08009b24",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "local_var1",
                "local_48": "local_var2",
                "local_34": "local_var3",
                "local_30": "local_var4",
                "local_2c": "local_var5",
                "local_28": "local_var6",
                "local_24": "local_var7",
                "local_20": "local_var8",
                "iVar1": "status",
                "local_1c": "local_var9",
                "local_18": "local_var10",
                "local_14": "local_var11",
                "local_10": "local_var12",
                "local_c": "local_var13"
            },
            "code": "void initialize_system_08007436(void)\n{\n  int status;\n  uint32_t reg1;\n  uint16_t reg2;\n  uint32_t local_var1 = 1;\n  uint32_t local_var2 = 1;\n  uint32_t local_var3 = 2;\n  uint32_t local_var4 = 4194304;\n  uint32_t local_var5 = 8;\n  uint32_t local_var6 = 336;\n  uint32_t local_var7 = 2;\n  uint32_t local_var8 = 7;\n  status = FUNC_08005cec(&local_var1);\n  if (status != 0) {\n    loop_forever();\n  }\n  uint32_t local_var9 = 15;\n  uint32_t local_var10 = 2;\n  uint32_t local_var11 = 0;\n  uint32_t local_var12 = 5120;\n  uint32_t local_var13 = 4096;\n  status = process_data(&local_var9,5);\n  if (status != 0) {\n    loop_forever();\n  }\n}\n",
            "called": [
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_system_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_values_08005814",
                "PTR_DAT_08005834": "PTR_DATA_VALUES",
                "calculate_and_set_value_08005324": "calculate_and_set_value",
                "PTR_CALCULATED_VALUE": "PTR_CALCULATED_VALUE",
                "*(undefined4 *)PTR_DAT_08005838": "*(undefined4 *)PTR_DATA_INITIALIZED_FLAG",
                "0": "0",
                "0x24": "0x24"
            },
            "code": "void initialize_values_08005814(void)\n{\n  // Fill memory with 0x24\n  fill_memory_with_value(PTR_DAT_08005834, 0, 0x24);\n  // Calculate and set value to 800\n  calculate_and_set_value(PTR_CALCULATED_VALUE, 800);\n  // Initialize value to 0\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_values_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "set_byte_value_08005bdc",
                "param_1": "address",
                "param_2": "value",
                "DAT_08005c28": "data_address_1",
                "DAT_08005c2c": "data_address_2"
            },
            "code": "void set_byte_value_08005bdc(byte address, uint value) {\n  if (address < 0) {\n    *(char *)((address & 0xf) + DAT_08005c28 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + DAT_08005c2c + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "set_byte_value_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "initialize_memory_and_set_flag_080002f0",
                "PTR_DAT_08000308": "PTR_DATA",
                "PTR_DAT_0800030c": "PTR_FLAG"
            },
            "code": "void initialize_memory_and_set_flag_080002f0(void)\n{\n  fill_memory_with_value(PTR_DAT_08000308, 0xff, 4);\n  *(unsigned int *)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "imported": false,
            "current_name": "initialize_memory_and_set_flag_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "update_registers_and_set_param_values_0800778c",
                "local_24": "shift_amount",
                "local_20": "param_value_offset_1",
                "local_1c": "param_value_offset_2",
                "local_18": "param_value_offset_3",
                "local_14": "param_value_offset_4",
                "local_10": "instruction_ptr",
                "local_c": "instruction_offset",
                "DAT_08007850": "data_08007850",
                "PTR_DAT_0800784c": "ptr_data_0800784c"
            },
            "code": "void update_registers_and_set_param_values_0800778c() {\n  int shift_amount;\n  uint bit_mask;\n  uint param_value_1;\n  uint param_value_2;\n  uint param_value_3;\n  uint param_value_4;\n  uint *instruction_ptr;\n  uint instruction_offset;\n  uint param_value_offset_1;\n  uint param_value_offset_2;\n  uint param_value_offset_3;\n  uint param_value_offset_4;\n\n  for (instruction_offset = 0; instruction_offset < 0x11; instruction_offset++) {\n    instruction_ptr = (uint *)(PTR_DAT_0800784c + instruction_offset * 0x18);\n    bit_mask = 1 << (*instruction_ptr >> 4 & 0xff);\n    *(uint *)(DAT_08007850 + 0x30) |= bit_mask;\n    shift_amount = *instruction_ptr & 0xf;\n    param_value_offset_1 = instruction_ptr[1];\n    param_value_offset_2 = instruction_ptr[2];\n    param_value_offset_3 = instruction_ptr[3];\n    param_value_offset_4 = instruction_ptr[4];\n    update_registers_08006e88(((*instruction_ptr >> 4) + 0x100080) * 0x400, &bit_mask);\n    if ((int)instruction_ptr[5] >= 0) {\n      param_value_1 = 1 << shift_amount & 0xffff;\n      param_value_2 = instruction_ptr[5] & 0xff;\n      set_param_value_0800733e(((*instruction_ptr >> 4) + 0x100080) * 0x400, param_value_1, param_value_2);\n    }\n  }\n}",
            "called": [
                "FUN_0800733e",
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "update_registers_and_set_param_values_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "run_application_08001ddc",
                "PTR_DAT_08001e90": "memory_ptr",
                "PTR_DAT_08001e94": "flag_ptr",
                "validate_inputs_and_print_configuration_settings_080051b4": "validate_inputs_and_print_config",
                "set_parameters_and_execute_if_flags_set_0800583c": "set_params_and_execute_if_flags_set",
                "fill_memory_with_value_0800b430": "fill_memory_with_value",
                "do_nothing_08008244": "do_nothing",
                "do_nothing_080082ba": "do_nothing",
                "reset_and_fill_memory_08002f24": "reset_and_fill_memory",
                "initialize_data_and_validate_input_080004ac": "initialize_data_and_validate_input",
                "initialize_and_print_help_message_080039a0": "initialize_and_print_help",
                "reset_pointer_and_return_08005238": "reset_pointer_and_return",
                "clear_pointer_and_do_nothing_twice_080001f8": "clear_pointer_and_do_nothing_twice",
                "check_flag_status_0800192c": "check_flag_status",
                "initialize_values_08005814": "initialize_values",
                "save_and_convert_params_0800283a": "save_and_convert_params",
                "validate_and_process_strings_080039bc": "validate_and_process_strings",
                "display_message_080041a0": "display_message",
                "display_alarm_and_update_status_if_needed_08003a74": "display_alarm_and_update_status",
                "handle_user_input_08003f34": "handle_user_input"
            },
            "code": "void run_application_08001ddc(void)\n{\n  do_nothing();\n  validate_inputs_and_print_configuration_settings();\n  set_parameters_and_execute_if_flags_set();\n  fill_memory_with_value(PTR_DAT_08001e90, 0, 0x14);\n  *PTR_DAT_08001e90 = 1;\n  PTR_DAT_08001e90[1] = 1;\n  do {\n    if (*PTR_DAT_08001e90 != '\\0') {\n      do_nothing();\n      reset_and_fill_memory();\n      initialize_data_and_validate_input();\n      initialize_and_print_help_message();\n      reset_pointer_and_return();\n      clear_pointer_and_do_nothing_twice();\n      check_flag_status();\n      initialize_values();\n      save_and_convert_params();\n      *PTR_DAT_08001e90 = 0;\n      PTR_DAT_08001e90[2] = 0;\n      if ((PTR_DAT_08001e90[4] & 2) != 0) {\n        PTR_DAT_08001e90[16] = 1;\n      }\n      if ((PTR_DAT_08001e90[1] == '\\x01') && ((PTR_DAT_08001e90[4] & 0x10) != 0)) {\n        PTR_DAT_08001e90[1] = 6;\n      }\n      if (PTR_DAT_08001e90[1] == '\\x06') {\n        display_message(2);\n      }\n      else {\n        PTR_DAT_08001e90[1] = 0;\n        validate_and_process_strings();\n      }\n    }\n    display_alarm_and_update_status_if_needed();\n    handle_user_input();\n  } while( true );\n}\n",
            "called": [
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_080039bc",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_08005814",
                "FUN_0800b430",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_08005238",
                "FUN_0800192c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "run_application_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_in_array_080069b4",
                "param_1": "bit_position",
                "PTR_DAT_080069e0": "array_ptr",
                "DAT_080069e0": "array_start_address"
            },
            "code": "void set_bit_in_array_080069b4(byte bit_position) {\n    int* PTR_DAT_080069e0 = (int*)(DAT_080069e0 + ((uint)(int)(char)bit_position >> 5) * 4);\n    int mask = 1 << (bit_position & 0x1f);\n    *PTR_DAT_080069e0 = mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "is_end_of_string_reached_08009228",
                "in_CY": "current_char"
            },
            "code": "bool is_end_of_string_reached_08009228(void)\n{\n  char current_char;\n  concatenate_32bit_to_64bit();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08003004",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "is_end_of_string_reached_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "check_and_set_params_08007c7c",
                "_DAT_40000010": "_param1",
                "_DAT_4000000c": "_param2",
                "set_param_from_pointer_08005778": "set_param1_from_pointer",
                "set_param_from_pointer_08005760": "set_param2_from_pointer",
                "FUNC_080053a0": "call_function_080053a0"
            },
            "code": "void check_and_set_params_08007c7c(void)\n{\n  bool param1_set = (_DAT_40000010 & 2) != 0;\n  bool param2_set = (_DAT_4000000c & 2) != 0;\n  if (param1_set && param2_set) {\n    _DAT_40000010 &= 0xfffffffd;\n    set_param_from_pointer_08005778();\n  }\n  param1_set = (_DAT_40000010 & 4) != 0;\n  param2_set = (_DAT_4000000c & 4) != 0;\n  if (param1_set && param2_set) {\n    _DAT_40000010 &= 0xfffffffb;\n    set_param_from_pointer_08005760();\n  }\n  param1_set = (_DAT_40000010 & 1) != 0;\n  param2_set = (_DAT_4000000c & 1) != 0;\n  if (param1_set && param2_set) {\n    _DAT_40000010 &= 0xfffffffe;\n    call_function_080053a0();\n  }\n  return;\n}",
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "check_and_set_params_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "set_flags_based_on_globals_08007b70",
                "_DAT_40000034": "global_flag_a",
                "_DAT_40000038": "global_flag_b",
                "_DAT_4000000c": "global_var_c",
                "_DAT_40000000": "global_var_d"
            },
            "code": "// Set the flags based on the values of two global variables\nvoid set_flags_based_on_globals_08007b70(void)\n{\n  uint32_t flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags |= 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags |= 4;\n  }\n  _DAT_4000000c |= flags;\n  _DAT_40000000 |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_flags_based_on_globals_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "validate_input_08004d2c",
                "param_1": "input",
                "param_2": "data",
                "iVar1": "check_result",
                "check_values_080003ec": "check_input",
                "process_input_from_byte_08004bc0": "process_input"
            },
            "code": "bool validate_input_08004d2c(byte input, undefined *data)\n{\n  int check_result = check_input(data, (ushort)input * 0x101 + 0x300, 0x100);\n  if (check_result == 0) {\n    *data = 0;\n    process_input(input, data);\n  }\n  return check_result != 0;\n}",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "validate_input_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = reverseBits_08008590(uVar3);\n  iVar4 = calculate_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = reverseBits_08008590(uVar3);\n  iVar5 = calculate_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = reverseBits_08008590(uVar3);\n  iVar6 = calculate_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = convert_to_big_endian_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = convert_to_big_endian_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = convert_to_big_endian_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = reverseBits_08008590(uVar9);\n    uVar15 = calculate_result_and_store_in_memory_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = convert_float_to_uint32_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = convert_to_big_endian_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = reverseBits_08008590(uVar10);\n    uVar15 = check_string_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = calculate_shifted_value_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = convert_to_big_endian_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = reverseBits_08008590(uVar10);\n    uVar15 = check_string_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = convert_to_int_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = is_input_empty_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = reverseBits_08008590(uVar9);\n      iVar13 = is_end_of_input_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = is_end_of_string_reached_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = reverseBits_08008590(uVar9);\n        iVar13 = is_end_of_string_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = reverseBits_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = calculate_result_and_store_in_memory_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = convert_float_to_uint32_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = reverseBits_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = reverseBits_08008590(uVar10);\n          uVar17 = reverseBits_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = calculate_result_and_store_in_memory_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = is_end_of_input_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = reverseBits_08008590(uVar10);\n            uVar16 = reverseBits_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = calculate_result_and_store_in_memory_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = convert_float_to_uint32_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = calculate_result_from_parameters_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = is_end_of_string_reached_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = check_concatenation_result_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = increment_and_reset_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    process_input_and_calculate_result_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08009250",
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_08008bf0",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08002edc",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "calculate_shift_amount_080066cc",
                "uVar1": "function_result",
                "uVar2": "leading_zeroes_count",
                "calculate_result": "get_function_result",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_08006714": "PTR_DAT_08006714",
                "DAT_08006710": "DAT_08006710"
            },
            "code": "uint calculate_shift_amount_080066cc(void)\n{\n  uint function_result;\n  uint leading_zeroes_count;\n  \n  function_result = get_function_result();\n  leading_zeroes_count = count_leading_zeroes(0x70000);\n  return function_result >> PTR_DAT_08006714[(*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leading_zeroes_count & 0xff)];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "set_param_080018fc",
                "param_1": "new_param",
                "DAT_08001928": "data_start",
                "PTR_0800193c": "ptr",
                "PTR_08001940": "old_value",
                "PTR_08001944": "mask",
                "PTR_08001948": "new_value"
            },
            "code": "void set_param_080018fc(uint new_param)\n{\n    uint* PTR_0800193c = (uint*)(DAT_08001928 + 0x14);\n    uint PTR_08001940 = *PTR_0800193c;\n    uint PTR_08001944 = 0xfffff55f;\n    uint PTR_08001948 = (new_param | (PTR_08001940 & PTR_08001944));\n    *PTR_0800193c = PTR_08001948;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "set_param_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "validate_and_process_strings_080039bc",
                "local_9": "string_index",
                "iVar1": "validation_result",
                "uVar2": "error_code",
                "validate_input_08004d2c": "validate_input",
                "PTR_DAT_08003a14": "PTR_DATA_ARRAY",
                "print_error_message_08004030": "display_error_message",
                "process_string_0800369c": "process_string",
                "FUNC_080005b4": "get_error_code"
            },
            "code": "void validate_and_process_strings_080039bc(void)\\n{\\n  int validation_result;\\n  undefined4 error_code;\\n  byte string_index;\\n  for (string_index = 0; string_index < 2; string_index++) {\\n    validation_result = validate_input(PTR_DAT_08003a14[string_index], PTR_NULL_TERMINATOR);\\n    if (validation_result == 0) {\\n      display_error_message(10);\\n    }\\n    else if (*PTR_DAT_08003a14[string_index] != \"\\0\") {\\n      process_string(PTR_DAT_08003a14[string_index]);\\n      error_code = get_error_code(PTR_DAT_08003a14[string_index]);\\n      display_error_message(error_code);\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08004d2c",
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "validate_and_process_strings_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "process_data_0800618c",
                "param_1": "data",
                "param_2": "size",
                "uVar3": "value",
                "uVar4": "wait_time",
                "DAT_08006404": "status",
                "DAT_08006400": "size_limit",
                "iVar2": "get_value_result",
                "uVar5": "result",
                "lVar1": "multiplication_result"
            },
            "code": "uint32_t process_data_0800618c(uint32_t *data, uint32_t size)\n{\n  uint32_t value;\n  uint32_t wait_time;\n  uint32_t *DAT_08006404 = (uint32_t *)DAT_08006404;\n  uint32_t *DAT_08006400 = (uint32_t *)DAT_08006400;\n\n  if ((*DAT_08006400 & 0xf) < size) {\n    *(char *)DAT_08006400 = (char)size;\n    if (size != (*DAT_08006400 & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((*DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((data[1] != 2) && ((*DAT_08006404 & 2) == 0)) {\n        return 1;\n      }\n      DAT_08006404[2] = data[1] | DAT_08006404[2] & 0xfffffffc;\n      wait_time = get_value_08005a84() + 5000;\n      if (data[1] == 1) {\n        while ((DAT_08006404[2] & 0xc) != 4) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((DAT_08006404[2] & 0xc) != 8) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((DAT_08006404[2] & 0xc) != 0) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((*DAT_08006404 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (data[1] == 2) {\n        if ((*DAT_08006404 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((*DAT_08006404 & 2) == 0) {\n        return 1;\n      }\n      DAT_08006404[2] = data[1] | DAT_08006404[2] & 0xfffffffc;\n      wait_time = get_value_08005a84() + 5000;\n      if (data[1] == 1) {\n        while ((DAT_08006404[2] & 0xc) != 4) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((DAT_08006404[2] & 0xc) != 8) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((DAT_08006404[2] & 0xc) != 0) {\n          value = get_value_08005a84();\n          if (wait_time <= value) {\n            return 3;\n          }\n        }\n      }\n    }\n    *(char *)DAT_08006400 = (char)size;\n    if (size != (*DAT_08006400 & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    DAT_08006404[2] = data[2] | DAT_08006404[2] & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    DAT_08006404[2] = data[3] | DAT_08006404[2] & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    DAT_08006404[2] = data[4] << 3 | DAT_08006404[2] & 0xffff1fff;\n  }\n  uint32_t result = calculate_result();\n  uint32_t multiplication_result = (uint32_t)DAT_08006408 * (result & 0xffffffff);\n  is_param_less_than_16_million_08005c30((uint32_t)((uint64_t)multiplication_result >> 0x26),(int)(result >> 0x20),(int)multiplication_result);\n  return 0;\n}",
            "called": [
                "FUN_08006628",
                "FUN_08005c30",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "process_data_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_bits_from_uint_08006998",
                "DAT_080069b0": "PTR_data"
            },
            "code": "uint get_bits_from_uint_08006998(void)\n{\n    uint data = *(uint *)(DAT_080069b0 + 0xc);\n    uint bits = (data >> 8) & 7;\n    return bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "get_bits_from_uint_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "initialize_data_and_validate_input_080004ac",
                "PTR_DAT_080004f0": "PTR_DATA_1",
                "PTR_DAT_080004f4": "PTR_DATA_2",
                "PTR_DAT_080004f8": "PTR_DATA_3",
                "validate_input_08004d7c": "validate_input",
                "print_error_message_08004030": "print_error_message",
                "iVar1": "input_validation_result"
            },
            "code": "void initialize_data_and_validate_input_080004ac(void)\n{\n  int input_validation_result;\n  \n  // fill memory with zeros\n  fill_memory_with_value(PTR_DAT_080004f0, 0, 0x38);\n  \n  // copy value from PTR_DAT_080004f4 to PTR_DAT_080004f0[2]\n  *(int *)(PTR_DAT_080004f0 + 8) = *(int *)(PTR_DAT_080004f4 + 0x10);\n  \n  // set parameters and return value\n  set_params_and_return(0, 1, 2);\n  \n  // set PTR_DAT_080004f0[4] to 1\n  PTR_DAT_080004f0[4] = 1;\n  \n  // validate input\n  input_validation_result = validate_input(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f8);\n  if (input_validation_result == 0) {\n    print_error_message(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_and_validate_input_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_sum_of_four_values_080078f4",
                "local_10": "index",
                "local_c": "sum"
            },
            "code": "uint calculate_sum_of_four_values_080078f4(void)\n{\n  int index;\n  uint sum = 0;\n  for (index = 0; index < 4; index++) {\n    sum = *(uint *)(PTR_DAT_0800792c + index * 4) | sum;\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_four_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "message_type",
                "process_string_080036c6": "display_string",
                "PTR_DAT_0800420c": "message_welcome",
                "PTR_s_Reset_to_continue_08004210": "message_reset",
                "PTR_s___H____X__to_unlock_08004214": "message_unlock",
                "PTR_s_Caution__Unlocked_08004218": "message_caution",
                "PTR_s_Enabled_0800421c": "message_enabled",
                "PTR_s_Disabled_08004220": "message_disabled",
                "PTR_DAT_08004224": "message_press_any_key"
            },
            "code": "void display_message_080041a0(int message_type) {\n    display_string(\"Welcome to the system!\");\n    switch(message_type) {\n        case 1:\n            display_string(\"Reset to continue\");\n            break;\n        case 2:\n            display_string(\"Press H+X to unlock\");\n            break;\n        case 3:\n            display_string(\"Caution: Unlocked\");\n            break;\n        case 4:\n            display_string(\"Enabled\");\n            break;\n        case 5:\n            display_string(\"Disabled\");\n    }\n    display_string(\"Press any key to continue...\");\n    return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "value",
                "param_2": "shift_amount",
                "iVar1": "intermediate_value",
                "uVar2": "shifted_value"
            },
            "code": "uint calculate_shifted_value_08008bf0(uint value, uint shift_amount)\n{\n    int intermediate_value;\n    uint shifted_value;\n\n    if (shift_amount & 0x80000000) {\n        return 0;\n    }\n    intermediate_value = shift_amount * 2 + 0x200000;\n    if (shift_amount * 2 < 0xffe00000) {\n        if (-1 < intermediate_value) {\n            return 0;\n        }\n        shifted_value = -(intermediate_value >> 0x15) - 0x3e1;\n        if (-1 < (int)shifted_value) {\n            return (shift_amount << 0xb | 0x80000000 | value >> 0x15) >> (shifted_value & 0xff);\n        }\n    }\n    else if ((value | shift_amount << 0xc) != 0) {\n        return 0;\n    }\n    return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "set_flag_08003a18",
                "param_1": "flags"
            },
            "code": "void set_flag_08003a18(uint8_t flags)\n{\n    if (!(flags & 0x80))\n    {\n        if (!(flags & 0x40))\n        {\n            if (flags & 0x20)\n            {\n                PTR_DAT_08003a70[2] |= 2;\n            }\n        }\n        else\n        {\n            PTR_DAT_08003a70[2] |= 8;\n        }\n    }\n    else\n    {\n        set_flag_08003a18_if_condition_met_080025e8();\n    }\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_flag_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "execute_if_flags_set_08005790",
                "PTR_DAT_080057d4": "second_ptr",
                "PTR_DAT_080057dc": "third_ptr",
                "PTR_DAT_080057e0": "fourth_ptr",
                "set_global_variable_08007c40": "set_global_variable",
                "set_global_variable_08007c5e": "set_global_variable_2",
                "set_flags_based_on_globals_08007b70": "set_flags_based_on_globals"
            },
            "code": "void execute_if_flags_set_08005790()\n{\n  do_nothing();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d4 + 0x18);\n    *(undefined2 *)PTR_DAT_080057e0 = *(undefined2 *)(PTR_DAT_080057d4 + 0x1a);\n    set_global_variable(0x69);\n    set_global_variable_2(((byte)PTR_DAT_080057d4[0xd] + 5) * 0x15);\n    set_flags_based_on_globals();\n  }\n  return;\n}",
            "called": [
                "FUN_08007b70",
                "FUN_08007c5e",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": false,
            "current_name": "execute_if_flags_set_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  fill_memory_with_value_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverseBits_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = calculate_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverseBits_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = calculate_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = reverseBits_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = calculate_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = reverseBits_0800854c(local_40);\n  uVar4 = reverseBits_0800854c(local_11);\n  uVar4 = calculate_result_and_store_in_memory_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = convert_float_to_uint32_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = reverseBits_08008590(uVar1);\n  uVar3 = check_string_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = calculate_shifted_value_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = reverseBits_0800854c(local_11);\n  uVar3 = calculate_result_and_store_in_memory_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = reverseBits_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = convert_float_to_uint32_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = reverseBits_08008590(uVar1);\n  local_4c = calculate_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  set_param_080018fc(local_1a);\n  update_parameter_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = calculate_sum_of_four_values_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    update_parameter_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    update_parameter_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008640",
                "FUN_080078f4",
                "FUN_08008bf0",
                "FUN_0800b430",
                "FUN_080018fc",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08002828",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_08007854",
                "param_1": "num",
                "PTR_": "ptr",
                "DAT_": "value",
                "uint": "unsigned int",
                "0x400": "1024",
                "0x40020010": "1073741840"
            },
            "code": "uint get_bit_08007854(uint num) {\n    uint base_addr = ((int)num >> 4) * 0x400 + 0x40020010;\n    uint bit_offset = num & 0xf;\n    uint *PTR_ = (uint *)base_addr;\n    uint DAT_ = *PTR_ >> bit_offset & 1;\n    return DAT_;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "print_absolute_value_and_process_string_08004900",
                "param_1": "input_string",
                "param_2": "input_value",
                "process_string_080036c6": "process_string",
                "PTR_DAT_08004934": "string_1",
                "PTR_DAT_08004938": "string_2",
                "process_string_0800369c": "process_string_with_input_value",
                "PTR_DAT_0800493c": "string_3"
            },
            "code": "void print_absolute_value_and_process_string_08004900(undefined input_string, undefined4 input_value) {\n  process_string(PTR_DAT_08004934);\n  print_absolute_value(input_string);\n  process_string(PTR_DAT_08004938);\n  process_string_0800369c(input_value);\n  process_string(PTR_DAT_0800493c);\n  return;\n}",
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_absolute_value_and_process_string_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "print_help_message_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "GRBL_HELP_STRING",
                "process_string_080036c6": "process_string_for_help"
            },
            "code": "void print_help_message_08004228(void)\n{\n  process_string_for_help(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "print_help_message_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = is_end_of_input_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = calculate_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = calculate_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008b24"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "set_bit_at_position_080076c8",
                "param_1": "position",
                "PTR_": "ptr",
                "DAT_": "current_value"
            },
            "code": "void set_bit_at_position_080076c8(uint position) {\n    uint* PTR_ = (uint*)((int)position >> 4) * 0x400 + 0x40020014;\n    uint DAT_ = *PTR_;\n    uint mask = 1 << (position & 0xF);\n    uint new_value = DAT_ ^ mask;\n    *PTR_ = new_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_in_array_08006a8c",
                "param_1": "bit_position",
                "DAT_08006abc": "array_ptr",
                "index": "index",
                "target_ptr": "target_ptr",
                "bit_mask": "bit_mask"
            },
            "code": "void set_bit_in_array_08006a8c(byte bit_position){\n  int* DAT_08006abc = DAT_08006abc;\n  uint index = (((uint)(int)(char)bit_position >> 5) + 0x60) * 4;\n  int* target_ptr = DAT_08006abc + index;\n  int bit_mask = 1 << (bit_position & 0x1f);\n  *target_ptr = bit_mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "save_and_convert_params_0800283a",
                "PTR_DAT_08002868": "ptr_dat",
                "save_params_to_memory_080035ec": "save_params_to_memory",
                "convert_params_to_big_endian_and_store_in_data_section_080004fc": "convert_params_to_big_endian_and_store_in_data_section",
                "param1": "param_1",
                "param2": "param_2",
                "param3": "param_3"
            },
            "code": "void save_and_convert_params_0800283a(void)\n{\n  int param1 = *(int *)(PTR_DAT_08002868 + 4);\n  int param2 = *(int *)(PTR_DAT_08002868 + 8);\n  int param3 = *(int *)(PTR_DAT_08002868 + 0xc);\n  save_params_to_memory_080035ec(param1, param2, param3);\n  convert_params_to_big_endian_and_store_in_data_section_080004fc(param1, param2, param3);\n  return;\n}",
            "called": [
                "FUN_080004fc",
                "FUN_080035ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "save_and_convert_params_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "unaff_r4": "mask_1",
                "in_r12": "mask_2",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "bVar4": "condition_1"
            },
            "code": "ulonglong calculate_result_0800881c(uint input_1, uint input_2, uint input_3, uint input_4) {\n  uint mask_1 = 0x80000000;\n  uint mask_2 = 0x100000;\n  uint shift_1 = 0x14;\n  uint shift_2 = 0xc;\n  uint result_1 = 0;\n  uint result_2 = 0;\n  uint temp_1 = input_1;\n  uint temp_2 = input_2;\n  uint temp_3 = input_3;\n  uint temp_4 = input_4;\n  bool condition_1 = (input_1 | (input_2 << 1)) == 0;\n  bool condition_2 = (input_3 | (input_4 << 1)) == 0;\n  bool condition_3 = (temp_2 ^ temp_4) & mask_1;\n  if (input_2 & mask_1) {\n    result_1 = temp_1;\n    result_2 = temp_2;\n  }\n  else if ((input_4 >> shift_1) != input_4 && (input_4 >> shift_1) != input_4) {\n    if (condition_1 || condition_2) {\n      return (ulonglong)condition_3 << 0x20;\n    }\n    if (input_4 == 0) {\n      while ((temp_2 & mask_2) == 0) {\n        temp_1 = temp_1 << 1;\n        temp_2 = (temp_2 << 1) | (temp_1 >> 0x1f);\n      }\n      temp_2 |= (input_2 & mask_1);\n      if ((input_4 >> shift_1) != 0) {\n        return ((ulonglong)temp_2 << 0x20) | temp_1;\n      }\n    }\n    while ((temp_4 & mask_2) == 0) {\n      temp_3 = temp_3 << 1;\n      temp_4 = (temp_4 << 1) | (temp_3 >> 0x1f);\n    }\n    return ((ulonglong)temp_2 << 0x20) | temp_1;\n  }\n  else if (condition_1) {\n    temp_2 = input_4;\n    temp_1 = input_3;\n  }\n  else if (!condition_2) {\n    if ((input_1 | (input_2 << shift_2)) == 0 || ((input_4 >> shift_1) == input_4 && (input_3 | (input_4 << shift_2)) != 0)) {\n      return ((ulonglong)condition_3 | 0x7ff00000) << 0x20;\n    }\n    else {\n      result_1 = input_3;\n      result_2 = input_4;\n    }\n  }\n  else {\n    temp_1 = input_3;\n    temp_2 = input_4;\n  }\n  return ((ulonglong)result_2 << 0x20) | result_1 | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "process_input_from_byte_08004bc0",
                "param_1": "input_byte",
                "param_2": "input_value"
            },
            "code": "void process_input_from_byte_08004bc0(byte input_byte,undefined4 input_value)\n{\n  ushort input_short = (ushort)input_byte * 0x101 + 0x300;\n  process_input_08000374(input_short,input_value,0x100);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_input_from_byte_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "should_return_true_08008b4c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "compare_and_return_08008af0": "compare_and_return"
            },
            "code": "bool should_return_true_08008b4c(void)\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  compare_and_return();\n  return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "should_return_true_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "store_data_and_process_input_08004c2a",
                "PTR_DAT_08004c44": "ptr_data",
                "store_data_in_memory_08000340": "store_data_in_memory",
                "process_input_08000374": "process_input"
            },
            "code": "void store_data_and_process_input_08004c2a(void)\n{\n  store_data_in_memory(0, 5);\n  process_input(1, PTR_DAT_08004c44, 0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "store_data_and_process_input_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "wait_and_return_zero_0800826a",
                "param_1": "flag",
                "wait_for_flag_08007e1c": "wait_for_flag"
            },
            "code": "int wait_and_return_zero_0800826a(int flag)\n{\n\twait_for_flag(flag);\n\treturn 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "wait_and_return_zero_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "current_char",
                "compare_and_return_08008af0": "compare_and_return"
            },
            "code": "bool is_end_of_string_08008b60(void)\n{\n  char current_char;\n  compare_and_return();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_0800af78",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_and_set_value_08005324",
                "param_1": "current_value",
                "local_14": "minimum_value",
                "DAT_08005358": "dividend",
                "PTR_DAT_0800535c": "pointer",
                "set_lowest_value_08007bf0": "set_lowest_value"
            },
            "code": "void calculate_and_set_value_08005324(uint current_value){\n  uint minimum_value = 800;\n  if (current_value < minimum_value) {\n    current_value = minimum_value;\n  }\n  uint calculated_value = DAT_08005358 / current_value;\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculated_value;\n  set_lowest_value_08007bf0(calculated_value);\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_and_set_value_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_value_from_array_08000310",
                "param_1": "index",
                "PTR_DAT_08000338": "memory_flag",
                "initialize_memory_and_set_flag_080002f0": "initialize_memory_and_set_flag",
                "PTR_DAT_0800033c": "array"
            },
            "code": "int get_value_from_array_08000310(uint index) {\n  if (*PTR_DAT_08000338 == 0) {\n    initialize_memory_and_set_flag();\n  }\n  return PTR_DAT_0800033c[index & 0x3ff];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_value_from_array_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "set_local_c_08007a70",
                "param_1": "input",
                "param_2": "offset",
                "param_3": "bit_index",
                "local_c": "local_c",
                "DAT_08007ac8": "DAT_08007ac8",
                "DAT_08007acc": "DAT_08007acc",
                "set_byte_at_offset_08006cf6": "set_byte_at_offset_08006cf6",
                "set_bit_at_index_080079e0": "set_bit_at_index_080079e0"
            },
            "code": "void set_local_c_08007a70(int input, int offset, int bit_index) {\n  int local_c = 0;\n  if (input == 0x40000000) {\n    local_c = 0x1c;\n  }\n  else if (input == DAT_08007ac8) {\n    local_c = 0x1d;\n  }\n  else {\n    if (input != DAT_08007acc) {\n      return;\n    }\n    local_c = 0x1e;\n  }\n  set_byte_at_offset_08006cf6(local_c, offset, bit_index);\n  set_bit_at_index_080079e0(local_c);\n  return;\n}",
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "set_local_c_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_080001ac",
                "FUN_0800b3e8",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_result_from_parameters_08002978",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "intermediate_result1",
                "uVar2": "intermediate_result2",
                "uVar3": "reversed_bits",
                "FUNC_08008eec": "calculate_intermediate_result1",
                "FUNC_08008cdc": "calculate_intermediate_result2",
                "FUNC_08008cd8": "calculate_final_result",
                "reverseBits_08008590": "reverse_bits",
                "calculate_result_and_store_in_memory_080098d0": "store_result_in_memory",
                "convert_float_to_uint32_08008c30": "convert_result_to_uint32"
            },
            "code": "uint32_t calculate_result_from_parameters_08002978(uint32_t param1, uint32_t param2, uint32_t param3) {\n    uint32_t intermediate_result1 = FUNC_08008eec(param2, param2);\n    uint32_t intermediate_result2 = FUNC_08008cdc(param1, param1);\n    intermediate_result2 = FUNC_08008eec(intermediate_result2, param3);\n    uint32_t final_result = FUNC_08008cd8(intermediate_result1, intermediate_result2);\n    uint64_t reversed_bits = reverseBits_08008590(final_result);\n    reversed_bits = calculate_result_and_store_in_memory_080098d0((int)reversed_bits, (int)(reversed_bits >> 0x20));\n    uint32_t converted_result = convert_float_to_uint32_08008c30((int)reversed_bits, (int)(reversed_bits >> 0x20));\n    return converted_result;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_result_from_parameters_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    convert_to_int_08008ba0();\n    local_40 = reverse_bits_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    convert_to_int_08008ba0();\n    local_38 = reverse_bits_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    compare_and_return_result_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = convert_to_int_08008ba0();\n  uVar11 = reverse_bits_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_0800a5a0",
                "FUN_08008640",
                "FUN_08008b10"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_float_08003826",
                "param_1": "float_value",
                "iVar1": "is_end_of_string",
                "uVar2": "integer_value",
                "bVar3": "buffer_index",
                "uVar4": "temp",
                "local_24": "value",
                "acStack_1d": "buffer",
                "local_10": "integer_part",
                "local_a": "buffer_digit",
                "local_9": "float_digits"
            },
            "code": "void print_float_08003826(uint float_value) {\n  int is_end_of_string = is_end_of_string_reached(float_value, 0);\n  uint value = float_value;\n  if (is_end_of_string != 0) {\n    wait_for_flag_and_return(0x2d);\n    value = float_value ^ 0x80000000;\n  }\n  for (byte i = float_digits[0x3d]; i > 1; i -= 2) {\n    value = multiply_and_round(value, FLOAT_MULTIPLIER_1);\n  }\n  if (i != 0) {\n    value = multiply_and_round(value, FLOAT_MULTIPLIER_2);\n  }\n  uint integer_part = convert_to_signed_int(value);\n  char buffer[float_digits[0x3d] + 2];\n  buffer[float_digits[0x3d] + 1] = '.';\n  byte buffer_index = 0;\n  while (integer_part != 0) {\n    if (buffer_index == float_digits[0x3d]) {\n      buffer_index++;\n    }\n    buffer[buffer_index + 1] = (char)integer_part % 10 + '0';\n    integer_part /= 10;\n    buffer_index++;\n  }\n  while (buffer_index < float_digits[0x3d]) {\n    buffer_index++;\n    buffer[buffer_index + 1] = '0';\n  }\n  if (buffer_index == float_digits[0x3d]) {\n    buffer_index += 2;\n    buffer[buffer_index + 1] = '0';\n  }\n  for (; buffer_index != 0; buffer_index--) {\n    wait_for_flag_and_return(buffer[buffer_index]);\n  }\n}\n",
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "print_float_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "check_for_zero_or_carry_flag_0800923c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag",
                "concatenate_32bit_to_64bit_08009204": "concatenate_32bit_to_64bit"
            },
            "code": "bool check_for_zero_or_carry_flag_0800923c(void)\n{\n    undefined zero_flag;\n    undefined carry_flag;\n\n    concatenate_32bit_to_64bit();\n    return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_for_zero_or_carry_flag_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "process_input_08002afc",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "is_end_of_string_reached",
                "uVar2": "result1",
                "uVar3": "result2"
            },
            "code": "void process_input_08002afc(int input1, int input2)\n{\n    int is_end_of_string_reached;\n    undefined4 result1;\n    undefined4 result2;\n    \n    if (input1 != 0 && *(char *)(input1 + 0x25) == '\\0')\n    {\n        is_end_of_string_reached = is_end_of_string_reached_08009228(*(undefined4 *)(input1 + 0x18), *(undefined4 *)(input2 + 0x18));\n        \n        if (is_end_of_string_reached)\n        {\n            result1 = calculate_result_from_parameters_08002978(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000, *(undefined4 *)(input1 + 0x18), *(undefined4 *)(input1 + 0x20));\n            result2 = is_end_of_string_reached_08009228(*(undefined4 *)(input2 + 0x18), result1);\n            \n            if (result2)\n            {\n                result2 = *(undefined4 *)(input_2 + 0x18);\n            }\n            \n            if (!check_input_is_not_null_08009214_08009214(result1, *(undefined4 *)(input2 + 0x18)))\n            {\n                *(undefined4 *)(input2 + 0x18) = result1;\n                *(undefined *)(input2 + 0x24) = 1;\n            }\n        }\n    }\n}\n",
            "called": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "process_input_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "store_data_and_process_input_08004c48",
                "param_1": "input_data",
                "PTR_DAT_08004d0c": "DATA_PTR_1",
                "DAT_08004d10": "DATA_1",
                "DAT_08004d14": "DATA_2",
                "DAT_08004d18": "DATA_3",
                "DAT_08004d1c": "DATA_4",
                "DAT_08004d20": "DATA_5",
                "DAT_08004d24": "DATA_6",
                "DAT_08004d28": "DATA_7"
            },
            "code": "void store_data_and_process_input_08004c48() {\n  if (input_data != '\\0') {\n    // Store data\n    uint32_t* ptr_data = (uint32_t*)PTR_DAT_08004d0c;\n    ptr_data[0] = DAT_08004d10;\n    ptr_data[1] = DAT_08004d10;\n    ptr_data[2] = DAT_08004d10;\n    ptr_data[13] = 10;\n    ptr_data[4] = DAT_08004d14;\n    ptr_data[5] = DAT_08004d18;\n    ptr_data[8] = DAT_08004d1c;\n    ptr_data[7] = DAT_08004d20;\n    ptr_data[6] = 0;\n    ptr_data[9] = 0xa80;\n    ptr_data[10] = DAT_08004d24;\n  }\n  // Process input\n  uint8_t* ptr_input = (uint8_t*)PTR_DAT_08004d0c;\n  ptr_input[40] = 0;\n  ptr_input[40] |= 2;\n  ptr_input[40] |= 0x10;\n  *(uint16_t*)(ptr_input + 42) = 0;\n  *(uint32_t*)(ptr_input + 44) = DAT_08004d28;\n  *(uint32_t*)(ptr_input + 48) = DAT_08004d14;\n  *(uint16_t*)(ptr_input + 52) = 100;\n  *(uint32_t*)(ptr_input + 54) = 0x3f800000;\n  ptr_input[60] = 0x19;\n  ptr_input[61] = 3;\n  ptr_input[62] = 0x19;\n  store_data_and_process_input_08004c48_08004c2a();\n}",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "store_data_and_process_input_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "wait_until_sum_exceeds_param_plus_initial_value_080002a0",
                "param_1": "initial_value",
                "PTR_08005a98": "sum_increment",
                "PTR_08005a9c": "param_value"
            },
            "code": "void wait_until_sum_exceeds_param_plus_initial_value_080002a0(int initial_value){\n    int sum = 0;\n    while(sum <= initial_value + PTR_08005a9c){\n        sum += PTR_08005a98;\n    }\n}\n\nvoid wait_until_sum_exceeds_param_plus_initial_value_080002a0(int initial_value) {\n    wait_until_sum_exceeds_param_plus_initial_value_080002a0(initial_value);\n}",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "wait_until_sum_exceeds_param_plus_initial_value_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "check_concatenation_result_08009250",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag",
                "concatenate_32bit_to_64bit_080091fc": "concatenate_32bit_to_64bit"
            },
            "code": "bool check_concatenation_result_08009250(void)\n{\n  bool carry_flag = false;\n  bool zero_flag = false;\n  concatenate_32bit_to_64bit();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_concatenation_result_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "update_registers_0800640c",
                "param_1": "reg_value",
                "param_2": "param1",
                "param_3": "param2",
                "local_1c": "ptr_local_var3",
                "local_18": "ptr_local_var4",
                "local_14": "ptr_local_var5",
                "local_10": "unused_local_var",
                "local_c": "unused_local_var",
                "DAT_080064b0": "ptr_constant1",
                "DAT_080064b4": "ptr_constant2",
                "DAT_080064b8": "ptr_constant3"
            },
            "code": "void update_registers_0800640c(uint32_t reg_value, uint32_t param1, uint32_t param2) {\n  uint32_t* ptr_local_var1;\n  uint32_t* ptr_local_var2;\n  uint32_t* ptr_local_var3;\n  uint32_t* ptr_local_var4;\n  uint32_t* ptr_local_var5;\n  if (reg_value == 0) {\n    ptr_local_var1 = (uint32_t*)(DAT_080064b0 + 0x30);\n    *ptr_local_var1 = *ptr_local_var1 | 1;\n    ptr_local_var2 = (uint32_t*)(DAT_080064b0 + 8);\n    *ptr_local_var2 = param2 | param1 | (*ptr_local_var2 & 0xf89fffff);\n    ptr_local_var3 = (uint32_t*)(DAT_080064b4);\n    *ptr_local_var3 = 0x100;\n    ptr_local_var4 = (uint32_t*)(DAT_080064b4 + 4);\n    *ptr_local_var4 = 2;\n    ptr_local_var5 = (uint32_t*)(DAT_080064b4 + 8);\n    *ptr_local_var5 = 3;\n  }\n  else {\n    ptr_local_var1 = (uint32_t*)(DAT_080064b0 + 0x30);\n    *ptr_local_var1 = *ptr_local_var1 | 4;\n    ptr_local_var2 = (uint32_t*)(DAT_080064b0 + 8);\n    *ptr_local_var2 = param1 | param2 << 3 | (*ptr_local_var2 & 0x7ffffff);\n    ptr_local_var3 = (uint32_t*)(DAT_080064b8);\n    *ptr_local_var3 = 0x200;\n    ptr_local_var4 = (uint32_t*)(DAT_080064b8 + 4);\n    *ptr_local_var4 = 2;\n    ptr_local_var5 = (uint32_t*)(DAT_080064b8 + 8);\n    *ptr_local_var5 = 3;\n  }\n}",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "update_registers_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "compare_and_return_08008af0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param"
            },
            "code": "void compare_and_return_08008af0(undefined4 first_param, undefined4 second_param, undefined4 third_param, undefined4 fourth_param)\n{\n  compare_and_return_08008af0_08008b00(third_param, fourth_param, first_param, second_param);\n  return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "compare_and_return_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "is_bit_set_08006e1a",
                "param_1": "bit_position",
                "uVar1": "bit_set"
            },
            "code": "bool is_bit_set_08006e1a(int bit_position) {\n    bool bit_set = false;\n    if ((1 << bit_position) & 0xFF) {\n        bit_set = true;\n    }\n    return bit_set;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "is_bit_set_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "set_param_080052ac",
                "param_1": "new_param",
                "PTR_DAT_080052d8": "ptr",
                "DAT_080052d8": "base_address",
                "old_value": "old_value",
                "mask": "mask",
                "new_value": "new_value"
            },
            "code": "void set_param_080052ac(uint new_param)\n{\n  uint* PTR_DAT_080052d8 = (uint*)(DAT_080052d8 + 0x14);\n  uint old_value = *PTR_DAT_080052d8;\n  uint mask = 0xfffffaaf;\n  uint new_value = (new_param | (old_value & mask));\n  *PTR_DAT_080052d8 = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "imported": false,
            "current_name": "set_param_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_for_special_chars_08008286",
                "uVar1": "dat_value",
                "iVar2": "is_bit_set",
                "is_bit_set_08007e58": "is_bit_set",
                "get_dat_value_08007e84": "get_dat_value",
                "check_special_chars_08005900": "check_special_chars"
            },
            "code": "uint8_t check_for_special_chars_08008286(){\n  uint8_t dat_value;\n  int is_bit_set = is_bit_set();\n  if (is_bit_set) {\n    dat_value = get_dat_value();\n    int has_special_chars = check_special_chars(dat_value);\n    if (!has_special_chars) {\n      return dat_value;\n    }\n  }\n  return 0xff;\n}",
            "called": [
                "FUN_08005900",
                "FUN_08007e84",
                "FUN_08007e58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_for_special_chars_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08008b74(uint32_t input1, int32_t input2, uint32_t input3, int32_t input4) {\n\tint32_t left_shifted_input2 = input2 << 1;\n\tint32_t left_shifted_input4 = input4 << 1;\n\tint32_t shifted_input2 = left_shifted_input2 >> 0x15;\n\tint32_t shifted_input4 = left_shifted_input4 >> 0x15;\n\tint32_t bitwise_or_input2 = input1 | (input2 << 0xc);\n\tint32_t bitwise_or_input4 = input3 | (input4 << 0xc);\n\tif ((shifted_input2 != -1 || bitwise_or_input2 == 0) && (shifted_input4 != -1 || bitwise_or_input4 == 0)) {\n\t\treturn 0;\n\t}\n\treturn 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "add_to_list_0800b524",
                "param_1": "list_index",
                "param_2": "value",
                "param_3": "flag1",
                "param_4": "flag2",
                "puVar1": "list_ptr",
                "uVar2": "return_value",
                "uVar3": "bit_flag",
                "iVar4": "list_base",
                "iVar5": "list_end",
                "uVar6": "list_size",
                "PTR_PTR_DAT_0800b5ac": "list_ptr_ptr",
                "PTR_PTR_DAT_0800b5a8": "list_base_ptr"
            },
            "code": "int add_to_list_0800b524(int list_index, int value, int flag1, int flag2) {\n    int *list_ptr = PTR_PTR_DAT_0800b5ac;\n    do_nothing_0800b51c(*(int *)PTR_PTR_DAT_0800b5ac);\n    int list_base = *(int *)PTR_PTR_DAT_0800b5a8;\n    int list_end = *(int *)(list_base + 0x148);\n    if (list_end == 0) {\n        list_end = list_base + 0x14c;\n        *(int *)(list_base + 0x148) = list_end;\n    }\n    uint list_size = *(uint *)(list_end + 4);\n    if ((int)list_size < 0x20) {\n        if (list_index != 0) {\n            int list_item = list_end + list_size * 4;\n            *(int *)(list_item + 0x88) = flag1;\n            uint bit_flag = 1 << (list_size & 0xff);\n            *(uint *)(list_end + 0x188) = *(uint *)(list_end + 0x188) | bit_flag;\n            *(int *)(list_item + 0x108) = flag2;\n            if (list_index == 2) {\n                *(uint *)(list_end + 0x18c) = bit_flag | *(uint *)(list_end + 0x18c);\n            }\n        }\n        int list_item = *(int *)list_ptr;\n        *(uint *)(list_end + 4) = list_size + 1;\n        *(int *)(list_end + (list_size + 2) * 4) = value;\n        do_nothing_0800b520(list_item);\n        return 0;\n    }\n    else {\n        do_nothing_0800b520(*(int *)list_ptr);\n        return -1;\n    }\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "add_to_list_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_bit_08007ea4",
                "param_1": "bit_value",
                "DAT_08007f38": "BIT_1",
                "DAT_08007f40": "BIT_2",
                "DAT_08007f44": "BIT_3",
                "DAT_08007f48": "BIT_4",
                "DAT_08007f4c": "BIT_5",
                "DAT_08007f50": "BIT_6",
                "data_ptr": "data_pointer"
            },
            "code": "void set_bit_08007ea4(uint32_t bit_value){\n    uint32_t* data_ptr = (uint32_t*)DAT_08007f3c;\n    switch(bit_value){\n        case DAT_08007f38:\n            data_ptr[1] |= 0x10;\n            break;\n        case DAT_08007f40:\n            data_ptr[1] |= 0x20000;\n            break;\n        case DAT_08007f44:\n            data_ptr[1] |= 0x40000;\n            break;\n        case DAT_08007f48:\n            data_ptr[1] |= 0x80000;\n            break;\n        case DAT_08007f4c:\n            data_ptr[1] |= 0x100000;\n            break;\n        case DAT_08007f50:\n            data_ptr[1] |= 0x20;\n            break;\n        default:\n            break;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "set_bit_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_data_and_increment_pointer_08007756",
                "uVar1": "data",
                "get_value_08005a84": "get_data",
                "set_bit_at_position_080076c8": "set_bit",
                "process_data_08007930": "process_data",
                "increment_pointer_value_08005a68": "increment_pointer"
            },
            "code": "void check_data_and_increment_pointer_08007756(void)\n{\n  uint data = get_data();\n  if ((data & 0x1ff) == 0) {\n    set_bit(0x3c);\n  }\n  if ((data & 0xf) == 0) {\n    process_data();\n  }\n  increment_pointer();\n  return;\n}",
            "called": [
                "FUN_08007930",
                "FUN_080076c8",
                "FUN_08005a68",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_data_and_increment_pointer_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "print_grbl_settings_0800423c",
                "PTR_s_____view_Grbl_settings______view_0800424": "Grbl_settings",
                "process_string_080036c6": "process_string"
            },
            "code": "void print_grbl_settings_0800423c(void)\n{\n  process_string(PTR_s_____view_Grbl_settings______view_0800424);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_input_empty_08009264",
                "in_CY": "input_char",
                "concatenate_32bit_to_64bit_080091fc": "concatenate_32bit_to_64bit"
            },
            "code": "bool is_input_empty_08009264(void)\n{\n  char input_char;\n  concatenate_32bit_to_64bit();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_input_empty_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "initialize_and_set_device_flags_08007e08",
                "initialize_registers_08007ad0": "initialize_registers",
                "initialize_device_08007d08": "initialize_device",
                "set_flag_and_bit_08007da8": "set_device_flags"
            },
            "code": "void initialize_and_set_device_flags_08007e08(void)\n{\n  initialize_registers();\n  initialize_device();\n  set_device_flags();\n  return;\n}",
            "called": [
                "FUN_08007ad0",
                "FUN_08007d08",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_and_set_device_flags_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "are_pointers_equal_08002fac",
                "PTR_DAT_08002fcc": "pointer1",
                "PTR_DAT_08002fd0": "pointer2"
            },
            "code": "bool are_pointers_equal_08002fac(void)\n{\n  bool result = (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "are_pointers_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "calculate_value_and_wait_until_greater_than_080002b6",
                "param_1": "initial_value",
                "uVar1": "current_value",
                "uVar2": "initial_value_upper",
                "bVar3": "is_greater",
                "lVar4": "calculated_value",
                "uVar5": "calculated_value_2"
            },
            "code": "void calculate_value_and_wait_until_greater_than_080002b6(uint64_t initial_value){\n  uint64_t current_value;\n  uint64_t calculated_value;\n  uint64_t sum;\n  uint64_t initial_value_upper = (uint32_t)(initial_value >> 32);\n  do {\n    calculated_value = calculate_value_08000268();\n    current_value = (uint32_t)(calculated_value >> 32);\n    sum = initial_value_upper + current_value;\n  } while (sum >= initial_value_upper && (uint32_t)(sum << 32) >= (uint32_t)(initial_value + (uint32_t)calculated_value));\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "calculate_value_and_wait_until_greater_than_080002b6"
        }
    },
    "used_tokens": 194696,
    "layers": [
        [
            "FUN_0800192c",
            "FUN_08006950",
            "FUN_08008ba0",
            "FUN_08007a10",
            "FUN_0800856c",
            "FUN_0800597c",
            "FUN_08009798",
            "FUN_08000188",
            "FUN_080018cc",
            "FUN_080079e0",
            "FUN_08006a58",
            "FUN_08005a84",
            "FUN_08008c30",
            "FUN_08007bf0",
            "FUN_08008590",
            "FUN_08007c5e",
            "FUN_0800587c",
            "FUN_08008a02",
            "FUN_080028bc",
            "FUN_0800738e",
            "FUN_0800a1bc",
            "FUN_080073d4",
            "FUN_08006e88",
            "FUN_08009990",
            "FUN_08007e58",
            "FUN_080059f8",
            "FUN_0800b3dc",
            "FUN_0800756c",
            "FUN_08002f74",
            "FUN_0800b3e8",
            "FUN_08006a18",
            "FUN_08006ac0",
            "FUN_0800919c",
            "FUN_0800854c",
            "FUN_08008e44",
            "FUN_0800733e",
            "FUN_080069e4",
            "FUN_0800b2d4",
            "FUN_08008e3c",
            "FUN_08009654",
            "FUN_08007bc2",
            "FUN_080035ec",
            "FUN_08006c70",
            "FUN_08005a68",
            "FUN_0800b2e0",
            "FUN_08002908",
            "FUN_08007c40",
            "FUN_08006b54",
            "FUN_08007e84",
            "FUN_0800b2e8",
            "FUN_08007402",
            "FUN_08002870",
            "FUN_08000210",
            "FUN_08006c04",
            "thunk_FUN_08009990",
            "FUN_08009278",
            "FUN_08007da8",
            "FUN_08008a74",
            "FUN_0800b430",
            "FUN_08005360",
            "FUN_08003980",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_08002896",
            "FUN_080001ac",
            "FUN_08000478",
            "FUN_08007e1c",
            "FUN_08006b00",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08005bdc",
            "FUN_080069b4",
            "FUN_08007b70",
            "FUN_080018fc",
            "FUN_08006998",
            "FUN_080078f4",
            "FUN_08008bf0",
            "FUN_08007854",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800881c",
            "FUN_080052ac",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08002fac"
        ],
        [
            "FUN_08005984",
            "FUN_08008b00",
            "FUN_08009204",
            "FUN_08005760",
            "FUN_08005a98",
            "FUN_08006c9c",
            "FUN_08005778",
            "FUN_08006628",
            "FUN_08008250",
            "FUN_08006ce0",
            "FUN_08006d4a",
            "FUN_08006dfe",
            "FUN_08006d66",
            "FUN_080095b8",
            "FUN_08006cf6",
            "FUN_08002ef0",
            "FUN_08000268",
            "FUN_080001f8",
            "FUN_08006d98",
            "FUN_080079c0",
            "FUN_080057e4",
            "FUN_08006d8a",
            "FUN_08007520",
            "FUN_08007884",
            "FUN_08006dc4",
            "FUN_08005c30",
            "FUN_0800056c",
            "FUN_0800981c",
            "FUN_080004fc",
            "FUN_08005238",
            "FUN_08007d08",
            "FUN_08006de0",
            "FUN_08006d2e",
            "FUN_0800adf0",
            "FUN_0800b4d0",
            "FUN_08002f40",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08005790",
            "FUN_0800826a",
            "FUN_08005324",
            "FUN_0800640c",
            "FUN_08006e1a"
        ],
        [
            "FUN_0800585c",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_0800369c",
            "FUN_08009214",
            "FUN_080036f0",
            "FUN_08001d4c",
            "FUN_08003778",
            "FUN_08006d72",
            "FUN_080096e8",
            "FUN_0800583c",
            "FUN_08009410",
            "FUN_08002f24",
            "FUN_08006680",
            "FUN_08000340",
            "FUN_080091fc",
            "FUN_080036c6",
            "FUN_080025e8",
            "FUN_08005814",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_080066cc",
            "FUN_0800618c",
            "FUN_0800283a",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_0800923c",
            "FUN_080002a0",
            "FUN_08008af0",
            "FUN_080002b6"
        ],
        [
            "FUN_08007ad0",
            "FUN_0800195c",
            "FUN_08000374",
            "FUN_080037fc",
            "FUN_0800375c",
            "FUN_08005900",
            "FUN_08002638",
            "FUN_080098d0",
            "FUN_080059b4",
            "FUN_08004148",
            "FUN_08004030",
            "FUN_080003ec",
            "FUN_08003740",
            "FUN_08007f54",
            "FUN_08007436",
            "FUN_080041a0",
            "FUN_08003a18",
            "FUN_08004228",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08003826",
            "FUN_08009250",
            "FUN_0800423c",
            "FUN_08009264"
        ],
        [
            "FUN_08009318",
            "FUN_080039a0",
            "FUN_0800184c",
            "FUN_080046d0",
            "FUN_080094c0",
            "FUN_08004250",
            "FUN_08004bf4",
            "FUN_08004940",
            "FUN_08008190",
            "FUN_080074c8",
            "FUN_08004900",
            "FUN_08004bc0",
            "FUN_08004c2a",
            "FUN_08002978",
            "FUN_08008286",
            "FUN_08007e08"
        ],
        [
            "FUN_08007930",
            "FUN_080029d8",
            "FUN_08002c18",
            "FUN_08004d7c",
            "FUN_08004d2c",
            "FUN_08002afc",
            "FUN_08004c48"
        ],
        [
            "FUN_080044e8",
            "FUN_08004dd2",
            "FUN_08002ba8",
            "FUN_08002e08",
            "FUN_08002a94",
            "FUN_080039bc",
            "FUN_080004ac",
            "FUN_08007756"
        ],
        [
            "FUN_08002edc",
            "FUN_080051b4"
        ],
        [
            "FUN_08003618"
        ],
        [
            "FUN_080058a0"
        ],
        [
            "FUN_08003a74"
        ],
        [
            "FUN_08001e98",
            "FUN_08002fd4"
        ],
        [
            "FUN_0800525c",
            "FUN_08000220",
            "FUN_08002408",
            "FUN_080024c4"
        ],
        [
            "FUN_08003b98"
        ],
        [
            "FUN_08003f34"
        ],
        [
            "FUN_08001ddc"
        ],
        [
            "FUN_08007540"
        ],
        [
            "FUN_080092c4"
        ],
        [
            "FUN_08006628"
        ]
    ],
    "locked_functions": []
}