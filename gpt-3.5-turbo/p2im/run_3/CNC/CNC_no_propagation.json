{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_64bit_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_64bit_080001ac(undefined4 input_param1,undefined4 input_param2)\n\n{\n  return CONCAT44(input_param2,input_param1);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_64bit_080001ac",
                "param_1": "input_param1",
                "param_2": "input_param2"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_08000210",
            "code": "\nvoid initialize_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_value_08000220",
            "code": "\nvoid updateValue_08000220(char newValue)\n\n{\n  if (newValue != DAT_20000468) {\n    FUN_08002fd4();\n    if (newValue == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newValue;\n    }\n    else if (newValue == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newValue;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_value_08000220",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_function_080002a0",
            "code": "\nvoid executeFunction_080002a0(undefined4 argument)\n\n{\n  FUN_08005a98(argument);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_function_080002a0",
                "param_1": "argument"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "compare_values_080002b6",
            "code": "\nvoid compareValues_080002b6(uint input_value)\n\n{\n  uint upper_value;\n  uint lower_value;\n  bool is_less_or_equal;\n  longlong initial_value;\n  undefined8 current_value;\n  \n  initial_value = FUN_08000268();\n  lower_value = (uint)(initial_value + (ulonglong)input_value >> 0x20);\n  do {\n    current_value = FUN_08000268();\n    upper_value = (uint)((ulonglong)current_value >> 0x20);\n    is_less_or_equal = lower_value <= upper_value;\n    if (upper_value == lower_value) {\n      is_less_or_equal = (uint)(initial_value + (ulonglong)input_value) <= (uint)current_value;\n    }\n  } while (!is_less_or_equal);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "compare_values_080002b6",
                "param_1": "input_value",
                "uVar1": "upper_value",
                "uVar2": "lower_value",
                "bVar3": "is_less_or_equal",
                "lVar4": "initial_value",
                "uVar5": "current_value"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_data_08000310",
            "code": "\nundefined get_data_08000310(uint input_value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[input_value & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_data_08000310",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int dataLength,char *data,int numIterations)\n\n{\n  int remainingIterations;\n  char *currentData;\n  int currentOffset;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingIterations = numIterations;\n  currentData = data;\n  currentOffset = dataLength;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentData = data;\n    currentOffset = dataLength;\n  }\n  for (; remainingIterations != 0; remainingIterations = remainingIterations + -1) {\n    checksum = (checksum != '\\0') + *currentData;\n    FUN_08000340(currentOffset,*currentData);\n    currentData = currentData + 1;\n    currentOffset = currentOffset + 1;\n  }\n  FUN_08000340(currentOffset,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "dataLength",
                "param_2": "data",
                "param_3": "numIterations",
                "local_1c": "remainingIterations",
                "local_18": "currentData",
                "local_14": "currentOffset",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "check_equality_080003ec",
            "code": "\nbool checkEquality_080003ec(char *input_str,int start_index,int length)\n\n{\n  char current_char;\n  uint expected_char;\n  int remaining_length;\n  int current_index;\n  char *output_str;\n  byte result;\n  \n  result = 0;\n  remaining_length = length;\n  current_index = start_index;\n  output_str = input_str;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_index = start_index;\n    output_str = input_str;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    current_char = FUN_08000310(current_index);\n    result = current_char + (result != 0);\n    *output_str = current_char;\n    current_index = current_index + 1;\n    output_str = output_str + 1;\n  }\n  expected_char = FUN_08000310(current_index);\n  return result == expected_char;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "check_equality_080003ec",
                "param_1": "input_str",
                "param_2": "start_index",
                "param_3": "length",
                "cVar1": "current_char",
                "uVar2": "expected_char",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "output_str",
                "local_9": "result"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_variables_08000478",
            "code": "\nvoid initializeVariables_08000478(undefined input_1,undefined input_2,undefined input_3)\n\n{\n  DAT_20000e89 = input_1;\n  DAT_20000e8a = input_2;\n  DAT_20000e8b = input_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_variables_08000478",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int result;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  result = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    FUNC_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08008e44(input1);\n  DAT_20000e7c = FUN_08009054(result,DAT_20000ebc);\n  result = FUN_08008e44(input2);\n  DAT_20000e80 = FUN_08009054(result,DAT_20000ec0);\n  result = FUN_08008e44(input3);\n  DAT_20000e84 = FUN_08009054(result,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 input)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    input = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "process_input_080005b4",
            "code": "\nchar processInput_080005b4(undefined4 input)\n\n{\n  int result;\n  undefined4 tempVar;\n  char errorCode;\n  uint tempVar2;\n  undefined4 tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  undefined8 tempVar6;\n  undefined4 array1 [4];\n  undefined4 tempVar7;\n  undefined4 tempVar8;\n  undefined4 tempVar9;\n  undefined4 tempVar10;\n  undefined4 tempVar11;\n  undefined4 array2 [6];\n  undefined4 tempVar12;\n  byte currentChar;\n  undefined flag1;\n  undefined4 flag2;\n  undefined4 tempVar13;\n  undefined flag3;\n  uint tempVar14;\n  byte tempVar15;\n  byte tempVar16;\n  byte tempVar17;\n  byte tempVar18;\n  char flag4;\n  uint tempVar19;\n  undefined4 tempVar20;\n  sbyte tempVar21;\n  char tempVar22;\n  char tempVar23;\n  undefined4 tempVar24;\n  byte flag5;\n  ushort tempVar25;\n  uint tempVar26;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    errorCode = '\\f';\n  }\n  else {\n    flag1 = 0;\n    tempVar25 = 0;\n    flag5 = 0;\n    tempVar24 = 0xbf800000;\n    tempVar23 = '\\0';\n    tempVar22 = '\\0';\n    FUN_0800b430(array2 + 3,0,0xc);\n    FUN_0800b430(array2,0,0xc);\n    DAT_20000e70 = '\\0';\n    tempVar21 = 0;\n    while (result = FUN_0800184c(&currentChar,array2 + 6,input,&flag1), result != 0) {\n      tempVar4 = FUN_08008590(tempVar12);\n      tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      tempVar26 = FUN_08008ba0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      if (currentChar == 0x47) {\n        switch(tempVar26) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          tempVar21 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          tempVar21 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          tempVar21 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          tempVar21 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          tempVar21 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          tempVar21 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          tempVar21 = 6;\n        }\n        switch(tempVar26) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          tempVar22 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          tempVar22 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          tempVar = FUN_08008eec(tempVar12,0x41200000);\n          tempVar4 = FUN_08008590(tempVar);\n          tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          tempVar26 = FUN_08008ba0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          switch(tempVar26) {\n          case 0x118:\n            tempVar22 = '\\x03';\n            break;\n          case 0x119:\n            tempVar22 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            tempVar22 = '\\x05';\n            break;\n          case 0x12d:\n            tempVar22 = '\\x06';\n          }\n          break;\n        case 0x35:\n          tempVar23 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)tempVar26 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          tempVar = FUN_08008eec(tempVar12,0x41200000);\n          tempVar4 = FUN_08008590(tempVar);\n          tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          tempVar26 = FUN_08008ba0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          if (tempVar26 == 0x398) {\n            tempVar22 = '\\a';\n          }\n          else if (tempVar26 == 0x399) {\n            tempVar22 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (currentChar == 0x4d) {\n        if (tempVar26 == 0x1e) {\nLAB_08000b96:\n          tempVar21 = 5;\n        }\n        else if ((int)tempVar26 < 0x1f) {\n          if ((int)tempVar26 < 3) {\n            if (-1 < (int)tempVar26) goto LAB_08000b96;\n          }\n          else if (tempVar26 - 3 < 3) {\n            tempVar21 = 8;\n          }\n        }\n        switch(tempVar26) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (tempVar21 != 0) {\n        if (((int)(uint)tempVar25 >> tempVar21 & 1U) == 0) {\n          tempVar25 = tempVar25 | (ushort)(1 << tempVar21);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        tempVar21 = 0;\n      }\n    }\n    errorCode = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      tempVar20 = 0;\n      tempVar19 = 0;\n      flag4 = '\\0';\n      flag1 = 0;\nswitchD_08000d18_caseD_47:\n      result = FUN_0800184c(&currentChar,array2 + 6,input,&flag1);\n      if (result != 0) {\n        switch(currentChar) {\n        case 0x46:\n          result = FUN_0800923c(tempVar12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(tempVar12);\n          }\n          else {\n            tempVar24 = FUN_0800056c(tempVar12);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          tempVar2 = (uint)currentChar;\n          tempVar = FUN_0800056c(tempVar12);\n          array2[tempVar2 - 0x49] = tempVar;\n          break;\n        case 0x4c:\n          tempVar4 = FUN_08008590(tempVar12);\n          tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          flag4 = FUN_08008bf0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          break;\n        case 0x50:\n          tempVar20 = tempVar12;\n          break;\n        case 0x52:\n          tempVar19 = FUN_0800056c(tempVar12);\n          break;\n        case 0x53:\n          result = FUN_08009228(tempVar12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = FUN_08009228(tempVar12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          tempVar4 = FUN_08008590(tempVar12);\n          tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          break;\n        case 0x58:\n          array2[3] = FUN_0800056c(tempVar12);\n          flag5 = flag5 | 1;\n          break;\n        case 0x59:\n          array2[4] = FUN_0800056c(tempVar12);\n          flag5 = flag5 | 2;\n          break;\n        case 0x5a:\n          array2[5] = FUN_0800056c(tempVar12);\n          flag5 = flag5 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      errorCode = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((tempVar25 & 0x200) != 0) {\n          result = FUN_08004d7c(DAT_20000e8c,&tempVar9);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = tempVar9;\n          DAT_20000e94 = tempVar10;\n          DAT_20000e98 = tempVar11;\n        }\n        switch(tempVar22) {\n        case '\\x01':\n          result = FUN_08009228(tempVar20,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(tempVar20);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          tempVar4 = FUN_08008590(tempVar20);\n          tempVar4 = FUN_08009798((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          tempVar26 = FUN_08008ba0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          if ((((flag4 == '\\x02') || (flag4 == '\\x14')) && (-1 < (int)tempVar26)) &&\n             ((int)tempVar26 < 7)) {\n            if ((flag5 == 0) && (flag4 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)tempVar26 < 1) {\n                tempVar26 = (uint)DAT_20000e8c;\n              }\n              else {\n                tempVar26 = tempVar26 - 1;\n              }\n              result = FUN_08004d7c(tempVar26 & 0xff,array1);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (tempVar18 = 0; tempVar18 < 3; tempVar18 = tempVar18 + 1) {\n                if (((int)(uint)flag5 >> tempVar18 & 1U) != 0) {\n                  if (flag4 == '\\x14') {\n                    tempVar2 = (uint)tempVar18;\n                    tempVar = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (tempVar18 + 2) * 4),\n                                         array2[tempVar18 + 3]);\n                    array1[tempVar2] = tempVar;\n                  }\n                  else {\n                    array1[tempVar18] = array2[tempVar18 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(tempVar26 & 0xff,array1);\n              if (tempVar26 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          flag5 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (flag5 != 0) {\n            for (tempVar17 = 0; tempVar17 < 3; tempVar17 = tempVar17 + 1) {\n              if (((int)(uint)flag5 >> tempVar17 & 1U) == 0) {\n                array2[tempVar17 + 3] = *(undefined4 *)(&DAT_20000e74 + (tempVar17 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                tempVar2 = (uint)tempVar17;\n                tempVar = FUN_08008cdc(array2[tempVar17 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (tempVar17 + 2) * 4));\n                array2[tempVar2 + 3] = tempVar;\n              }\n              else {\n                tempVar3 = array2[tempVar17 + 3];\n                tempVar = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (tempVar17 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (tempVar17 + 10) * 4));\n                tempVar2 = (uint)tempVar17;\n                tempVar = FUN_08008cdc(tempVar3,tempVar);\n                array2[tempVar2 + 3] = tempVar;\n              }\n            }\n            FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n          }\n          if (tempVar22 == '\\x05') {\n            result = FUN_08004d7c(7,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = FUN_08004d7c(6,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(array1[3],tempVar7,tempVar8,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = tempVar7;\n          DAT_20000e84 = tempVar8;\n          flag5 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (tempVar22 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (flag5 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (tempVar16 = 0; tempVar16 < 3; tempVar16 = tempVar16 + 1) {\n              if (((int)(uint)flag5 >> tempVar16 & 1U) != 0) {\n                tempVar = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (tempVar16 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (tempVar16 + 8) * 4));\n                tempVar2 = (uint)tempVar16;\n                tempVar = FUN_08008cd8(tempVar,array2[tempVar16 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (tempVar2 + 10) * 4) = tempVar;\n              }\n            }\n          }\n          flag5 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((tempVar25 & 4) != 0) || (flag5 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = FUN_08009228(tempVar24,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((tempVar23 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (tempVar15 = 0; tempVar15 < 3; tempVar15 = tempVar15 + 1) {\n            if (((int)(uint)flag5 >> tempVar15 & 1U) == 0) {\n              array2[tempVar15 + 3] = *(undefined4 *)(&DAT_20000e74 + (tempVar15 + 2) * 4);\n            }\n            else if (tempVar23 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                tempVar2 = (uint)tempVar15;\n                tempVar = FUN_08008cdc(array2[tempVar15 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (tempVar15 + 2) * 4));\n                array2[tempVar2 + 3] = tempVar;\n              }\n              else {\n                tempVar3 = array2[tempVar15 + 3];\n                tempVar = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (tempVar15 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (tempVar15 + 10) * 4));\n                tempVar2 = (uint)tempVar15;\n                tempVar = FUN_08008cdc(tempVar3,tempVar);\n                array2[tempVar2 + 3] = tempVar;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (flag5 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (flag5 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              tempVar = tempVar24;\n              if (DAT_20000e72 == '\\0') {\n                tempVar = DAT_20000e78;\n              }\n              FUN_08001e98(array2[3],array2[4],array2[5],tempVar,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            flag5 = flag5 & ~(byte)(1 << DAT_20000e8b);\n            if ((flag5 == 0) ||\n               (((result = FUN_08009214(tempVar19,0), result != 0 &&\n                 (result = FUN_08009214(array2[DAT_20000e89],0), result != 0)) &&\n                (result = FUN_08009214(array2[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = FUN_08009214(tempVar19,0);\n              if (result == 0) {\n                tempVar13 = FUN_08008cd8(array2[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                flag2 = FUN_08008cd8(array2[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(array2,0,0xc);\n                tempVar = FUN_08008eec(tempVar19,0x40800000);\n                tempVar = FUN_08008eec(tempVar,tempVar19);\n                tempVar3 = FUN_08008eec(tempVar13,tempVar13);\n                tempVar = FUN_08008cd8(tempVar,tempVar3);\n                tempVar3 = FUN_08008eec(flag2,flag2);\n                tempVar14 = FUN_08008cd8(tempVar,tempVar3);\n                result = FUN_08009228(tempVar14,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                tempVar4 = FUN_08008590(tempVar14);\n                tempVar4 = FUN_080098d0((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                tempVar5 = FUN_08008590(tempVar13);\n                tempVar6 = FUN_08008590(flag2);\n                tempVar5 = FUN_0800981c((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),(int)tempVar6,\n                                     (int)((ulonglong)tempVar6 >> 0x20));\n                tempVar4 = FUN_08008894((int)tempVar4,(uint)((ulonglong)tempVar4 >> 0x20) ^ 0x80000000,\n                                     (int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20));\n                tempVar14 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  tempVar14 = tempVar14 ^ 0x80000000;\n                }\n                result = FUN_08009228(tempVar19,0);\n                if (result != 0) {\n                  tempVar14 = tempVar14 ^ 0x80000000;\n                  tempVar19 = tempVar19 ^ 0x80000000;\n                }\n                tempVar = FUN_08008eec(flag2,tempVar14);\n                tempVar = FUN_08008cd8(tempVar13,tempVar);\n                tempVar2 = (uint)DAT_20000e89;\n                tempVar = FUN_08008eec(tempVar,0x3f000000);\n                array2[tempVar2] = tempVar;\n                tempVar = FUN_08008eec(tempVar13,tempVar14);\n                tempVar = FUN_08008cdc(tempVar,flag2);\n                tempVar2 = (uint)DAT_20000e8a;\n                tempVar = FUN_08008eec(tempVar,0x3f000000);\n                array2[tempVar2] = tempVar;\n              }\n              else {\n                tempVar4 = FUN_08008590(array2[DAT_20000e89]);\n                tempVar5 = FUN_08008590(array2[DAT_20000e8a]);\n                tempVar4 = FUN_0800981c((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                                     (int)((ulonglong)tempVar5 >> 0x20));\n                tempVar19 = FUN_08008c30((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n              }\n              flag3 = DAT_20000e71 == '\\x02';\n              tempVar = tempVar24;\n              if (DAT_20000e72 == '\\0') {\n                tempVar = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,array2 + 3,array2,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,tempVar,DAT_20000e72,tempVar19,flag3);\n            }\n            break;\n          case '\\x04':\n            if (flag5 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = array2[3];\n          DAT_20000e80 = array2[4];\n          DAT_20000e84 = array2[5];\n        }\n        errorCode = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            errorCode = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            errorCode = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "process_input_080005b4",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "tempVar",
                "cVar3": "errorCode",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4",
                "uVar7": "tempVar5",
                "uVar8": "tempVar6",
                "local_94": "array1",
                "local_84": "tempVar7",
                "local_80": "tempVar8",
                "local_7c": "tempVar9",
                "uStack_78": "tempVar10",
                "uStack_74": "tempVar11",
                "auStack_70": "array2",
                "local_58": "tempVar12",
                "local_52": "currentChar",
                "local_51": "flag1",
                "local_50": "flag2",
                "local_4c": "tempVar13",
                "local_45": "flag3",
                "local_44": "tempVar14",
                "local_3d": "tempVar15",
                "local_3c": "tempVar16",
                "local_3b": "tempVar17",
                "local_3a": "tempVar18",
                "local_39": "flag4",
                "local_38": "tempVar19",
                "local_34": "tempVar20",
                "local_2f": "tempVar21",
                "local_2e": "tempVar22",
                "local_2d": "tempVar23",
                "local_2c": "tempVar24",
                "local_27": "flag5",
                "local_26": "tempVar25",
                "local_24": "tempVar26"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "validate_character_0800184c",
            "code": "\nundefined4 validate_character_0800184c(byte *output,undefined4 param,int input,byte *index)\n\n{\n  int result;\n  undefined4 is_valid;\n  \n  if (*(char *)(input + (uint)*index) == '\\0') {\n    is_valid = 0;\n  }\n  else {\n    *output = *(byte *)(input + (uint)*index);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      is_valid = 0;\n    }\n    else {\n      *index = *index + 1;\n      result = FUN_08002638(input,index,param);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        is_valid = 0;\n      }\n      else {\n        is_valid = 1;\n      }\n    }\n  }\n  return is_valid;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "validate_character_0800184c",
                "param_1": "output",
                "param_2": "param",
                "param_3": "input",
                "param_4": "index",
                "iVar1": "result",
                "uVar2": "is_valid"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_register_value_080018fc",
            "code": "\n\n\nvoid updateRegisterValue_080018fc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_register_value_080018fc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "set_flag_based_on_condition_0800192c",
            "code": "\nvoid setFlagBasedOnCondition_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "set_flag_based_on_condition_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_update_flags_0800195c",
            "code": "\nvoid check_and_update_flags_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_update_flags_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flag,char boolean_1,char boolean_2,undefined4 data)\n\n{\n  undefined4 result;\n  uint maxValue;\n  undefined8 tempResult;\n  undefined8 tempValue;\n  byte tempFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant_1;\n  uint constant_2;\n  int constant_3;\n  undefined4 resultValue;\n  uint tempValue1;\n  uint tempValue2;\n  ushort tempConstant;\n  uint tempConstant1;\n  uint tempConstant2;\n  int tempConstant3;\n  int tempConstant4;\n  int tempConstant5;\n  int tempConstant6;\n  ushort tempConstant7;\n  uint constant_4;\n  char counter;\n  \n  counter = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flag & 1) != 0) {\n    counter = counter + '\\x01';\n    tempResult = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  }\n  if ((flag & 2) != 0) {\n    counter = counter + '\\x01';\n    tempResult = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  }\n  if ((flag & 4) != 0) {\n    counter = counter + '\\x01';\n    tempResult = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  tempValue1 = value1;\n  if (value1 < maxValue) {\n    tempValue1 = maxValue;\n  }\n  tempResult = FUN_0800854c(tempValue1);\n  tempValue = FUN_0800854c(counter);\n  tempValue = FUN_080098d0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  tempResult = FUN_08008894((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)tempValue,\n                       (int)((ulonglong)tempValue >> 0x20));\n  resultValue = FUN_08008c30((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  result = FUN_08008eec(DAT_20000edc,resultValue);\n  result = FUN_08009054(result,0x453b8000);\n  tempResult = FUN_08008590(result);\n  tempResult = FUN_08009318((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  constant_3 = FUN_08008bf0((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  tempResult = FUN_0800854c(counter);\n  tempResult = FUN_080098d0((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  tempValue = FUN_08008590(data);\n  tempResult = FUN_08008640((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)tempValue,\n                       (int)((ulonglong)tempValue >> 0x20));\n  result = FUN_08008c30((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  result = FUN_08008eec(resultValue,result);\n  result = FUN_08009054(0x4c64e1c0,result);\n  tempResult = FUN_08008590(result);\n  constant_2 = FUN_080095b8((int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  constant_4 = 75000;\n  if (constant_2 < 75000) {\n    constant_4 = constant_2;\n  }\n  constant_1 = DAT_20000ed4;\n  tempConstant7 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (boolean_1 == '\\0') {\n    tempConstant7 = tempConstant7 ^ 0xaa0;\n  }\n  FUN_080018fc(tempConstant7);\n  FUN_080018cc(constant_1);\n  tempConstant4 = -(tempValue1 >> 1);\n  tempConstant3 = constant_4 - DAT_20000ec9;\n  tempConstant2 = 0;\n  tempConstant1 = 10000;\n  tempFlag = flag;\n  tempConstant5 = tempConstant4;\n  tempConstant6 = tempConstant4;\n  while( true ) {\n    tempConstant = constant_1;\n    tempValue2 = FUN_080078f4();\n    if (boolean_2 == '\\0') {\n      tempValue2 = tempValue2 ^ 0x1e;\n    }\n    if (((tempFlag & 1) != 0) && (tempConstant6 = tempConstant6 + value1, 0 < tempConstant6)) {\n      if ((tempValue2 & 0x10) == 0) {\n        tempFlag = tempFlag & 0xfe;\n      }\n      else {\n        tempConstant = tempConstant ^ 0x10;\n      }\n      tempConstant6 = tempConstant6 - tempValue1;\n    }\n    if (((tempFlag & 2) != 0) && (tempConstant5 = tempConstant5 + value2, 0 < tempConstant5)) {\n      if ((tempValue2 & 8) == 0) {\n        tempFlag = tempFlag & 0xfd;\n      }\n      else {\n        tempConstant = tempConstant ^ 0x440;\n      }\n      tempConstant5 = tempConstant5 - tempValue1;\n    }\n    if (((tempFlag & 4) != 0) && (tempConstant4 = tempConstant4 + value3, 0 < tempConstant4)) {\n      if ((tempValue2 & 4) == 0) {\n        tempFlag = tempFlag & 0xfb;\n      }\n      else {\n        tempConstant = tempConstant ^ 0x100;\n      }\n      tempConstant4 = tempConstant4 - tempValue1;\n    }\n    if ((tempFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(tempConstant);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant_1);\n    FUNC_08002828(tempConstant3);\n    if ((constant_2 < constant_4) && (tempConstant1 = constant_4 + tempConstant1, 20000 < tempConstant1)) {\n      tempConstant1 = tempConstant1 - 20000;\n      tempConstant2 = constant_3 + tempConstant2;\n      constant_4 = 60000000 / tempConstant2;\n      if (constant_4 < constant_2) {\n        constant_4 = constant_2;\n      }\n      tempConstant3 = constant_4 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flag",
                "param_2": "boolean_1",
                "param_3": "boolean_2",
                "param_4": "data",
                "uVar1": "result",
                "uVar2": "maxValue",
                "uVar3": "tempResult",
                "uVar4": "tempValue",
                "local_61": "tempFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant_1",
                "local_4c": "constant_2",
                "local_48": "constant_3",
                "local_44": "resultValue",
                "local_40": "tempValue1",
                "local_3c": "tempValue2",
                "local_36": "tempConstant",
                "local_34": "tempConstant1",
                "local_30": "tempConstant2",
                "local_2c": "tempConstant3",
                "local_28": "tempConstant4",
                "local_24": "tempConstant5",
                "local_20": "tempConstant6",
                "local_1a": "tempConstant7",
                "local_18": "constant_4",
                "local_11": "counter"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_system_08001d4c",
            "code": "\nvoid initializeSystem_08001d4c(void)\n\n{\n  char prevCount;\n  char count;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  count = '\\x02';\n  while( true ) {\n    prevCount = count + -1;\n    if (count == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    count = prevCount;\n    if ('\\0' < prevCount) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_system_08001d4c",
                "local_9": "count",
                "cVar1": "prevCount"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_08001ddc",
            "code": "\nvoid initialize_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "process_binary_data_08001e98",
            "code": "\nvoid processBinaryData_08001e98(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4,\n                 undefined inputParam5)\n\n{\n  int loopCondition;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      loopCondition = FUN_08002fac();\n    } while (loopCondition != 0);\n    FUN_08003004(inputParam1,inputParam2,inputParam3,inputParam4,inputParam5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "process_binary_data_08001e98",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "param_5": "inputParam5",
                "iVar1": "loopCondition"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_hash_08001f00",
            "code": "\nvoid calculateHash_08001f00(int inputParam1,undefined4 *inputParam2,int inputParam3,byte inputParam4,byte inputParam5,byte inputParam6\n                 ,undefined4 inputParam7,char inputParam8,undefined4 inputParam9,char inputParam10)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int result3;\n  uint result4;\n  undefined8 result5;\n  undefined8 result6;\n  uint localArray1 [4];\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  ushort localVar7;\n  undefined4 localVar8;\n  undefined4 localVar9;\n  undefined4 localVar10;\n  uint localVar11;\n  undefined4 localVar12;\n  undefined4 localVar13;\n  char localChar1;\n  ushort localShort1;\n  undefined4 localVar14;\n  uint localVar15;\n  uint localVar16;\n  \n  localVar13 = FUN_08008cdc(*(undefined4 *)((uint)inputParam4 * 4 + inputParam1),\n                          *(undefined4 *)((uint)inputParam4 * 4 + inputParam3));\n  localVar12 = FUN_08008cdc(*(undefined4 *)((uint)inputParam5 * 4 + inputParam1),\n                          *(undefined4 *)((uint)inputParam5 * 4 + inputParam3));\n  localVar11 = FUN_08008cd8(inputParam2[inputParam6],*(undefined4 *)((uint)inputParam6 * 4 + inputParam1));\n  localVar16 = *(uint *)((uint)inputParam4 * 4 + inputParam3) ^ 0x80000000;\n  localVar15 = *(uint *)((uint)inputParam5 * 4 + inputParam3) ^ 0x80000000;\n  localVar10 = FUN_08008cd8(inputParam2[inputParam4],localVar13);\n  localVar9 = FUN_08008cd8(inputParam2[inputParam5],localVar12);\n  result1 = FUN_08008eec(localVar16,localVar9);\n  result2 = FUN_08008eec(localVar15,localVar10);\n  result1 = FUN_08008cd8(result1,result2);\n  result5 = FUN_08008590(result1);\n  result1 = FUN_08008eec(localVar16,localVar10);\n  result2 = FUN_08008eec(localVar15,localVar9);\n  result1 = FUN_08008cdc(result1,result2);\n  result6 = FUN_08008590(result1);\n  result5 = thunk_FUN_08009990((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,\n                             (int)((ulonglong)result6 >> 0x20));\n  localVar14 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n  if (inputParam10 == '\\0') {\n    result3 = FUN_0800923c(localVar14,0);\n    if (result3 != 0) {\n      result5 = FUN_08008590(localVar14);\n      result5 = FUN_080082d4((int)result5,(int)((ulonglong)result5 >> 0x20),0x54442d18,0x401921fb);\n      localVar14 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n    }\n  }\n  else {\n    result3 = FUN_08009250(localVar14,0);\n    if (result3 != 0) {\n      result5 = FUN_08008590(localVar14);\n      result5 = FUN_080082d0((int)result5,(int)((ulonglong)result5 >> 0x20),0x54442d18,0x401921fb);\n      localVar14 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n    }\n  }\n  result1 = FUN_08008eec(localVar14,inputParam9);\n  result5 = FUN_08008590(result1);\n  result6 = FUN_08008590(localVar11 & 0x7fffffff);\n  result5 = FUN_0800981c((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,\n                       (int)((ulonglong)result6 >> 0x20));\n  localVar8 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n  result3 = FUN_08009214(localVar8,0);\n  if (result3 == 0) {\n    result1 = FUN_08009054(localVar8,DAT_20000ed8);\n    result5 = FUN_08008590(result1);\n    result5 = FUN_080094c0((int)result5,(int)((ulonglong)result5 >> 0x20));\n    localVar7 = FUN_08008bf0((int)result5,(int)((ulonglong)result5 >> 0x20));\n    if (inputParam8 != '\\0') {\n      result1 = FUN_08008e44(localVar7);\n      inputParam7 = FUN_08008eec(inputParam7,result1);\n    }\n    result1 = FUN_08008e44(localVar7);\n    localVar6 = FUN_08009054(localVar14,result1);\n    result1 = FUN_08008e44(localVar7);\n    localVar5 = FUN_08009054(localVar11,result1);\n    result5 = FUN_08008590(localVar6);\n    result5 = FUN_08008640((int)result5,(int)((ulonglong)result5 >> 0x20),0,0x3fe00000);\n    result6 = FUN_08008590(localVar6);\n    result5 = FUN_08008640((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,\n                         (int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_080082d0(0,0x3ff00000,(int)result5,(int)((ulonglong)result5 >> 0x20));\n    localVar4 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n    localVar3 = localVar6;\n    localChar1 = '\\0';\n    localArray1[inputParam6] = *(uint *)(inputParam1 + (uint)inputParam6 * 4);\n    for (localShort1 = 1; localShort1 < localVar7; localShort1 = localShort1 + 1) {\n      if ((int)localChar1 < (int)(uint)DAT_20000efa) {\n        result1 = FUN_08008eec(localVar16,localVar3);\n        result2 = FUN_08008eec(localVar15,localVar4);\n        localArray1[3] = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(localVar16,localVar4);\n        result2 = FUN_08008eec(localVar15,localVar3);\n        localVar16 = FUN_08008cd8(result1,result2);\n        localVar15 = localArray1[3];\n        localChar1 = localChar1 + '\\x01';\n      }\n      else {\n        result1 = FUN_08008e44(localShort1);\n        result1 = FUN_08008eec(result1,localVar6);\n        result5 = FUN_08008590(result1);\n        result5 = FUN_08009410((int)result5,(int)((ulonglong)result5 >> 0x20));\n        localVar2 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n        result1 = FUN_08008e44(localShort1);\n        result1 = FUN_08008eec(result1,localVar6);\n        result5 = FUN_08008590(result1);\n        result5 = FUN_080096e8((int)result5,(int)((ulonglong)result5 >> 0x20));\n        localVar1 = FUN_08008c30((int)result5,(int)((ulonglong)result5 >> 0x20));\n        result1 = FUN_08008eec(*(uint *)((uint)inputParam4 * 4 + inputParam3) ^ 0x80000000,localVar2);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)inputParam5 * 4 + inputParam3),localVar1);\n        localVar16 = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(*(uint *)((uint)inputParam4 * 4 + inputParam3) ^ 0x80000000,localVar1);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)inputParam5 * 4 + inputParam3),localVar2);\n        localVar15 = FUN_08008cd8(result1,result2);\n        localChar1 = '\\0';\n      }\n      result4 = FUN_08008cdc(localVar13,localVar16);\n      localArray1[inputParam4] = result4;\n      result4 = FUN_08008cdc(localVar12,localVar15);\n      localArray1[inputParam5] = result4;\n      result4 = FUN_08008cdc(localArray1[inputParam6],localVar5);\n      localArray1[inputParam6] = result4;\n      FUN_08001e98(localArray1[0],localArray1[1],localArray1[2],inputParam7,inputParam8);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*inputParam2,inputParam2[1],inputParam2[2],inputParam7,inputParam8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_hash_08001f00",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "param_5": "inputParam5",
                "param_6": "inputParam6",
                "param_7": "inputParam7",
                "param_8": "inputParam8",
                "param_9": "inputParam9",
                "param_10": "inputParam10",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "local_6c": "localArray1",
                "local_5c": "localVar1",
                "local_58": "localVar2",
                "local_54": "localVar3",
                "local_50": "localVar4",
                "local_4c": "localVar5",
                "local_48": "localVar6",
                "local_42": "localVar7",
                "local_40": "localVar8",
                "local_3c": "localVar9",
                "local_38": "localVar10",
                "local_34": "localVar11",
                "local_30": "localVar12",
                "local_2c": "localVar13",
                "local_27": "localChar1",
                "local_26": "localShort1",
                "local_24": "localVar14",
                "local_20": "localVar15",
                "local_1c": "localVar16"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 data)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort counter;\n  \n  result2 = FUN_08008eec(data,0x41a00000);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  counter = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUN_08002fd4();\n  result2 = FUN_08008eec(data,0x447a0000);\n  result3 = FUN_08008e44((uint)counter * 0x32);\n  result2 = FUN_08008cd8(result2,result3);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUNC_08002814(result1);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "counter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_application_080024c4",
            "code": "\nvoid initializeApplication_080024c4(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  char isFlag1Set;\n  char isFlag2Set;\n  char isFlag3Set;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isFlag3Set = -1;\n    }\n    else {\n      isFlag3Set = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isFlag2Set = -1;\n    }\n    else {\n      isFlag2Set = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isFlag1Set = -1;\n    }\n    else {\n      isFlag1Set = '\\x01';\n    }\n    result1 = FUN_08008e44((int)isFlag3Set);\n    result1 = FUN_08008eec(result1,DAT_20000ef4);\n    result2 = FUN_08008e44((int)isFlag2Set);\n    result2 = FUN_08008eec(result2,DAT_20000ef4);\n    result3 = FUN_08008e44((int)isFlag1Set);\n    result3 = FUN_08008eec(result3,DAT_20000ef4);\n    FUN_08001e98(result1,result2,result3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_application_080024c4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "local_13": "isFlag1Set",
                "local_12": "isFlag2Set",
                "local_11": "isFlag3Set"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "enable_peripheral_functions_080025e8",
            "code": "\nvoid enablePeripheralFunctions_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "enable_peripheral_functions_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int baseAddress,byte *inputData,uint *outputValue)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isHex;\n  int result;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnVal;\n  undefined8 tempValue;\n  uint temp1;\n  byte digitCount;\n  char leadingZeros;\n  int finalValue;\n  char currentHexChar;\n  char *nextHexChar;\n  \n  nextChar = (char *)(baseAddress + (uint)*inputData);\n  currentChar = nextChar + 1;\n  currentHexChar = *nextChar;\n  isNegative = false;\n  if (currentHexChar == '-') {\n    isNegative = true;\n    currentHexChar = *currentChar;\n    nextHexChar = nextChar + 2;\n  }\n  else {\n    nextHexChar = currentChar;\n    if (currentHexChar == '+') {\n      nextHexChar = nextChar + 2;\n      currentHexChar = *currentChar;\n    }\n  }\n  finalValue = 0;\n  leadingZeros = '\\0';\n  digitCount = 0;\n  isHex = false;\n  do {\n    digit = currentHexChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isHex) {\n          leadingZeros = leadingZeros + -1;\n        }\n        finalValue = (uint)digit + finalValue * 10;\n      }\n      else if (!isHex) {\n        leadingZeros = leadingZeros + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isHex)) {\n        if (digitCount == 0) {\n          returnVal = 0;\n        }\n        else {\n          temp1 = FUN_08008e3c(finalValue);\n          result = FUN_08009214(temp1,0);\n          if (result == 0) {\n            for (; leadingZeros < -1; leadingZeros = leadingZeros + '\\x02') {\n              tempValue = FUN_08008590(temp1);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              temp1 = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (leadingZeros < '\\0') {\n              tempValue = FUN_08008590(temp1);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              temp1 = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < leadingZeros; leadingZeros = leadingZeros + -1) {\n                temp1 = FUN_08008eec(temp1,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *outputValue = temp1 ^ 0x80000000;\n          }\n          else {\n            *outputValue = temp1;\n          }\n          *inputData = ((char)nextHexChar - (char)baseAddress) - 1;\n          returnVal = 1;\n        }\n        return returnVal;\n      }\n      isHex = true;\n    }\n    currentHexChar = *nextHexChar;\n    nextHexChar = nextHexChar + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "baseAddress",
                "param_2": "inputData",
                "param_3": "outputValue",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isHex",
                "iVar4": "result",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnVal",
                "uVar8": "tempValue",
                "local_1c": "temp1",
                "local_16": "digitCount",
                "local_15": "leadingZeros",
                "local_14": "finalValue",
                "local_d": "currentHexChar",
                "local_c": "nextHexChar"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initialize_data_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_reset_08002870",
            "code": "\nchar incrementAndReset_08002870(char value)\n\n{\n  char result;\n  \n  result = value + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_reset_08002870",
                "param_1": "value",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "update_value_08002896",
            "code": "\nchar updateValue_08002896(char inputValue)\n\n{\n  char result;\n  \n  result = inputValue;\n  if (inputValue == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "update_value_08002896",
                "param_1": "inputValue",
                "local_9": "result"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculateResult_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUN_08008cdc(input_3,input_3);\n  result_1 = FUN_08008eec(result_1,input_4);\n  result_2 = FUN_08008eec(input_1,input_1);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  result_2 = FUN_08008eec(input_2,input_2);\n  result_1 = FUN_08008cdc(result_1,result_2);\n  result_2 = FUN_08008eec(input_3,0x40800000);\n  result_1 = FUN_08009054(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 result3;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  result3 = FUN_08008590(result1);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result3,(int)((ulonglong)result3 >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_params_080029d8",
            "code": "\nvoid updateParams_080029d8(undefined4 arg1,int ptr1,int ptr2)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((ptr1 != 0) && (ptr2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(ptr1 + 0x18),*(undefined4 *)(ptr1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(ptr1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(ptr1 + 0x1c),*(undefined4 *)(ptr2 + 0x18)),\n       result != 0)) {\n      updatedValue2 = *(undefined4 *)(ptr1 + 0x1c);\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(ptr2 + 0x18),\n                           *(undefined4 *)(ptr1 + 0x20));\n      result = FUN_08009228(updatedValue2,updatedValue1);\n      if (result == 0) {\n        updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(ptr2 + 0x18),\n                             *(undefined4 *)(ptr1 + 0x20));\n      }\n      else {\n        updatedValue1 = *(undefined4 *)(ptr1 + 0x1c);\n      }\n      *(undefined4 *)(ptr1 + 0x18) = updatedValue1;\n    }\n    else {\n      *(undefined4 *)(ptr1 + 0x18) = *(undefined4 *)(ptr1 + 0x1c);\n    }\n    *(undefined *)(ptr1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_params_080029d8",
                "param_1": "arg1",
                "param_2": "ptr1",
                "param_3": "ptr2",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "update_data_08002a94",
            "code": "\nvoid updateData_08002a94(void)\n\n{\n  undefined *puVar1;\n  undefined *previousData;\n  undefined *currentData;\n  byte currentByte;\n  \n  currentByte = DAT_20000cf0;\n  previousData = (undefined *)0x0;\n  currentData = (undefined *)0x0;\n  while (puVar1 = currentData, currentByte != DAT_20000cf1) {\n    currentByte = FUN_08002896(currentByte);\n    currentData = previousData;\n    FUN_080029d8(&DAT_20000870 + (uint)currentByte * 0x40,previousData,puVar1);\n    previousData = &DAT_20000870 + (uint)currentByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "update_data_08002a94",
                "local_18": "previousData",
                "local_14": "currentData",
                "local_9": "currentByte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "check_and_update_params_08002afc",
            "code": "\nvoid checkAndUpdateParams_08002afc(int ptr1,int ptr2)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((ptr1 != 0) && (*(char *)(ptr1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(ptr1 + 0x18),*(undefined4 *)(ptr2 + 0x18)),\n     result != 0)) {\n    updatedValue2 = *(undefined4 *)(ptr2 + 0x18);\n    updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(ptr1 + 0x18),\n                         *(undefined4 *)(ptr1 + 0x20));\n    result = FUN_08009228(updatedValue2,updatedValue1);\n    if (result == 0) {\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(ptr1 + 0x18),\n                           *(undefined4 *)(ptr1 + 0x20));\n    }\n    else {\n      updatedValue1 = *(undefined4 *)(ptr2 + 0x18);\n    }\n    result = FUN_08009214(updatedValue1,*(undefined4 *)(ptr2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(ptr2 + 0x18) = updatedValue1;\n      *(undefined *)(ptr2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "check_and_update_params_08002afc",
                "param_1": "ptr1",
                "param_2": "ptr2",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint tempVar;\n  undefined *currentPtr;\n  undefined *previousPtr;\n  undefined *previousPtrCopy;\n  undefined *currentPtrCopy;\n  byte currentByte;\n  \n  previousPtrCopy = (undefined *)0x0;\n  currentPtrCopy = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  previousPtr = (undefined *)0x0;\n  while (currentPtr = previousPtrCopy, currentByte != DAT_20000cf0) {\n    previousPtrCopy = currentPtrCopy;\n    tempVar = (uint)currentByte;\n    FUN_08002afc(currentPtr,currentPtrCopy,&DAT_20000870 + tempVar * 0x40);\n    currentByte = FUN_08002870(currentByte);\n    previousPtr = currentPtr;\n    currentPtrCopy = &DAT_20000870 + tempVar * 0x40;\n  }\n  FUN_08002afc(previousPtrCopy,currentPtrCopy,0,previousPtrCopy,previousPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar3": "previousPtr",
                "puVar2": "currentPtr",
                "local_14": "previousPtrCopy",
                "local_10": "currentPtrCopy",
                "local_9": "currentByte",
                "uVar1": "tempVar"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_bounds_08002c18",
            "code": "\nvoid calculateBounds_08002c18(int binaryAddress,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint result6;\n  undefined8 result7;\n  int lowerBound;\n  uint upperBound;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x3c));\n  result1 = FUN_08008eec(result1,parameter2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(binaryAddress + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x3c));\n  result1 = FUN_08008eec(result1,parameter3);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(binaryAddress + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(binaryAddress + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  upperBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = (*(int *)(binaryAddress + 0x10) - upperBound) - lowerBound;\n  if (lowerBound < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(binaryAddress + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(binaryAddress + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = result6 & ~((int)result6 >> 0x1f);\n    upperBound = *(uint *)(binaryAddress + 0x10);\n    if ((int)result6 <= (int)*(uint *)(binaryAddress + 0x10)) {\n      upperBound = result6;\n    }\n    lowerBound = 0;\n  }\n  *(uint *)(binaryAddress + 0x34) = upperBound;\n  *(uint *)(binaryAddress + 0x38) = lowerBound + upperBound;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_bounds_08002c18",
                "param_1": "binaryAddress",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "local_20": "lowerBound",
                "local_1c": "upperBound"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPtr;\n  byte byteValue;\n  \n  dataPtr = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  while (byteValue != DAT_20000cf0) {\n    index = (uint)byteValue * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    byteValue = FUN_08002870(byteValue);\n    dataPtr = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPtr",
                "local_11": "byteValue",
                "iVar3": "index",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_components_08002edc",
            "code": "\nvoid initialize_components_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_components_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_data_if_different_08002f40",
            "code": "\nvoid updateDataIfDifferent_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_data_if_different_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_data_ptr_08002f74",
            "code": "\nundefined * get_data_ptr_08002f74(void)\n\n{\n  undefined *data_ptr;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    data_ptr = (undefined *)0x0;\n  }\n  else {\n    data_ptr = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return data_ptr;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_data_ptr_08002f74",
                "puVar1": "data_ptr"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_data_equal_08002fac",
            "code": "\nbool areDataEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_data_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_some_values_08003004",
            "code": "\nvoid calculateSomeValues_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 temp1;\n  int result1;\n  int result2;\n  int result3;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  uint minValue;\n  int offset;\n  ushort *ptr;\n  int absDiff;\n  uint diff;\n  undefined8 temp6;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined4 variable1;\n  undefined4 variable2;\n  \n  offset = (uint)DAT_20000cf0 * 0x40;\n  ptr = (ushort *)(&DAT_20000870 + offset);\n  temp1 = FUN_08008eec(DAT_20000ebc,input1);\n  temp6 = FUN_08008590(temp1);\n  result1 = FUN_080095b8((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n  temp1 = FUN_08008eec(DAT_20000ec0,input2);\n  temp6 = FUN_08008590(temp1);\n  result2 = FUN_080095b8((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n  temp1 = FUN_08008eec(DAT_20000ec4,input3);\n  temp6 = FUN_08008590(temp1);\n  result3 = FUN_080095b8((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n  *ptr = 0;\n  if (result1 < DAT_20000cf4) {\n    *ptr = *ptr | 0x20;\n  }\n  if (result2 < DAT_20000cf8) {\n    *ptr = *ptr | 0x880;\n  }\n  if (result3 < DAT_20000cfc) {\n    *ptr = *ptr | 0x200;\n  }\n  absDiff = result1 - DAT_20000cf4;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000874 + offset) = absDiff;\n  absDiff = result2 - DAT_20000cf8;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000878 + offset) = absDiff;\n  absDiff = result3 - DAT_20000cfc;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_2000087c + offset) = absDiff;\n  minValue = *(uint *)(&DAT_2000087c + offset);\n  if (*(uint *)(&DAT_2000087c + offset) < *(uint *)(&DAT_20000878 + offset)) {\n    minValue = *(uint *)(&DAT_20000878 + offset);\n  }\n  diff = *(uint *)(&DAT_20000874 + offset);\n  if (*(uint *)(&DAT_20000874 + offset) < minValue) {\n    diff = minValue;\n  }\n  *(uint *)(&DAT_20000880 + offset) = diff;\n  if (*(int *)(&DAT_20000880 + offset) != 0) {\n    temp1 = FUN_08008e44(result1 - DAT_20000cf4);\n    temp1 = FUN_08009054(temp1,DAT_20000ebc);\n    temp2 = FUN_08008e44(result2 - DAT_20000cf8);\n    temp2 = FUN_08009054(temp2,DAT_20000ec0);\n    temp3 = FUN_08008e44(result3 - DAT_20000cfc);\n    temp3 = FUN_08009054(temp3,DAT_20000ec4);\n    temp4 = FUN_08008eec(temp1,temp1);\n    temp5 = FUN_08008eec(temp2,temp2);\n    temp4 = FUN_08008cdc(temp4,temp5);\n    temp5 = FUN_08008eec(temp3,temp3);\n    temp4 = FUN_08008cdc(temp4,temp5);\n    temp6 = FUN_08008590(temp4);\n    temp6 = FUN_080098d0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    temp4 = FUN_08008c30((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + offset) = temp4;\n    temp4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + offset));\n    if (flag == '\\0') {\n      variable2 = FUN_08008eec(input4,temp4);\n    }\n    else {\n      variable2 = FUN_08009054(0x3f800000,input4);\n    }\n    temp5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + offset),variable2);\n    *(undefined4 *)(&DAT_20000884 + offset) = temp5;\n    temp5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    temp5 = FUN_08008eec(temp5,variable2);\n    temp6 = FUN_08008590(temp5);\n    temp6 = FUN_08009318((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    temp5 = FUN_08008bf0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + offset) = temp5;\n    temp5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    temp5 = FUN_08008eec(temp5,temp4);\n    temp5 = FUN_08008eec(temp5,DAT_20000edc);\n    temp5 = FUN_08009054(temp5,0x453b8000);\n    temp6 = FUN_08008590(temp5);\n    temp6 = FUN_08009318((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    temp5 = FUN_08008ba0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + offset) = temp5;\n    minValue = FUN_08008eec(temp1,temp4);\n    temp1 = FUN_08008eec(temp2,temp4);\n    temp2 = FUN_08008eec(temp3,temp4);\n    variable1 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absDiff = FUN_08009264(DAT_20000d0c,0), absDiff != 0)) {\n      temp3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,minValue);\n      temp4 = FUN_08008eec(DAT_20000d04,temp1);\n      temp3 = FUN_08008cd8(temp3,temp4);\n      temp4 = FUN_08008eec(DAT_20000d08,temp2);\n      temp3 = FUN_08008cd8(temp3,temp4);\n      temp6 = FUN_08008590(temp3);\n      absDiff = FUN_08008b24((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x66666666,0x3fee6666);\n      if (absDiff != 0) {\n        absDiff = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + offset));\n        variable1 = DAT_20000d0c;\n        if (absDiff == 0) {\n          variable1 = *(undefined4 *)(&DAT_20000884 + offset);\n        }\n        temp6 = FUN_08008590(temp3);\n        absDiff = FUN_08008b60((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x66666666,0xbfee6666);\n        if (absDiff != 0) {\n          temp6 = FUN_08008590(temp3);\n          temp6 = FUN_080082d0(0,0x3ff00000,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n          temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x3fe00000);\n          temp6 = FUN_080098d0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n          temp3 = FUN_08008c30((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n          temp6 = FUN_08008590(variable1);\n          temp4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          temp4 = FUN_08008eec(temp4,temp3);\n          temp7 = FUN_08008590(temp4);\n          temp8 = FUN_08008590(temp3);\n          temp8 = FUN_080082d0(0,0x3ff00000,(int)temp8,(int)((ulonglong)temp8 >> 0x20));\n          temp7 = FUN_08008894((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                                (int)((ulonglong)temp8 >> 0x20));\n          temp7 = FUN_080098d0((int)temp7,(int)((ulonglong)temp7 >> 0x20));\n          absDiff = FUN_08008b24((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                                (int)((ulonglong)temp7 >> 0x20));\n          if (absDiff == 0) {\n            temp4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            temp4 = FUN_08008eec(temp4,temp3);\n            temp6 = FUN_08008590(temp4);\n            temp7 = FUN_08008590(temp3);\n            temp7 = FUN_080082d0(0,0x3ff00000,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n            temp6 = FUN_08008894((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                                  (int)((ulonglong)temp7 >> 0x20));\n            temp6 = FUN_080098d0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            variable1 = FUN_08008c30((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + offset) = variable1;\n    temp4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + offset));\n    absDiff = FUN_08009228(variable1,temp4);\n    temp3 = temp4;\n    if (absDiff != 0) {\n      temp3 = variable1;\n    }\n    *(undefined4 *)(&DAT_20000888 + offset) = temp3;\n    absDiff = FUN_08009250(temp4,*(undefined4 *)(&DAT_20000884 + offset));\n    if (absDiff == 0) {\n      (&DAT_20000895)[offset] = 0;\n    }\n    else {\n      (&DAT_20000895)[offset] = 1;\n    }\n    (&DAT_20000894)[offset] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + offset);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = minValue;\n    DAT_20000d04 = temp1;\n    DAT_20000d08 = temp2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = result1;\n    DAT_20000cf8 = result2;\n    DAT_20000cfc = result3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_some_values_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "temp1",
                "iVar2": "result1",
                "iVar3": "result2",
                "iVar4": "result3",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "minValue",
                "iVar10": "offset",
                "puVar11": "ptr",
                "iVar12": "absDiff",
                "uVar13": "diff",
                "uVar14": "temp6",
                "uVar15": "temp7",
                "uVar16": "temp8",
                "local_20": "variable1",
                "local_1c": "variable2"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  DAT_20000cf4 = data1;\n  DAT_20000cf8 = data2;\n  DAT_20000cfc = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 inputData)\n\n{\n  undefined4 result_1;\n  int offset;\n  undefined4 value_1;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  value_1 = *(undefined4 *)(&DAT_20000890 + offset);\n  result_1 = FUN_08008e44(inputData);\n  result_1 = FUN_08008eec(value_1,result_1);\n  value_1 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n  result_1 = FUN_08009054(result_1,value_1);\n  *(undefined4 *)(&DAT_20000890 + offset) = result_1;\n  *(undefined4 *)(&DAT_20000880 + offset) = inputData;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "inputData",
                "uVar1": "result_1",
                "iVar2": "offset",
                "uVar3": "value_1"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "process_string_080036c6",
            "code": "\nvoid processString_080036c6(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid printBinaryRepresentation_080036f0(uint number,int bitCount)\n\n{\n  undefined4 binaryDigit;\n  int bitIndex;\n  uint bitMask;\n  \n  bitMask = 1 << (bitCount - 1U & 0xff);\n  for (bitIndex = 0; bitIndex < bitCount; bitIndex = bitIndex + 1) {\n    if ((bitMask & number) == 0) {\n      binaryDigit = 0x30;\n    }\n    else {\n      binaryDigit = 0x31;\n    }\n    FUN_08008250(binaryDigit);\n    bitMask = bitMask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "bitCount",
                "local_10": "bitIndex",
                "local_c": "bitMask",
                "uVar1": "binaryDigit"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_memory_08003740",
            "code": "\nvoid initializeMemory_08003740(undefined memory)\n\n{\n  FUN_080036f0(memory,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_memory_08003740",
                "param_1": "memory"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_buffer_0800375c",
            "code": "\nvoid initialize_buffer_0800375c(undefined2 buffer)\n\n{\n  FUN_080036f0(buffer,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_buffer_0800375c",
                "param_1": "buffer"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "convert_number_to_digits_08003778",
            "code": "\nvoid convertNumberToDigits_08003778(uint number)\n\n{\n  uint count;\n  uint remainder;\n  char digitStack [12];\n  byte digitCount;\n  \n  digitCount = 0;\n  remainder = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remainder != 0; remainder = remainder / 10) {\n      count = (uint)digitCount;\n      digitCount = digitCount + 1;\n      digitStack[count + 1] = (char)(remainder % 10) + '0';\n    }\n    for (; digitCount != 0; digitCount = digitCount - 1) {\n      FUN_08008250(digitStack[digitCount]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "convert_number_to_digits_08003778",
                "param_1": "number",
                "uVar1": "count",
                "local_1c": "remainder",
                "acStack_15": "digitStack",
                "local_9": "digitCount"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int value)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = value;\n  if (value < 0) {\n    FUN_08008250(0x2d);\n    absoluteValue = -value;\n  }\n  FUN_08003778(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absoluteValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "format_and_print_number_08003826",
            "code": "\nvoid formatAndPrintNumber_08003826(uint inputNumber)\n\n{\n  int result;\n  undefined4 formattedNumber;\n  byte tempByte;\n  uint tempUint;\n  uint currentNumber;\n  char formattedOutput [13];\n  uint divisor;\n  byte index;\n  byte loopCounter;\n  \n  result = FUN_08009228(inputNumber,0);\n  currentNumber = inputNumber;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    currentNumber = inputNumber ^ 0x80000000;\n  }\n  for (loopCounter = DAT_20000ef9; 1 < loopCounter; loopCounter = loopCounter - 2) {\n    currentNumber = FUN_08008eec(currentNumber,0x42c80000);\n  }\n  if (loopCounter != 0) {\n    currentNumber = FUN_08008eec(currentNumber,0x41200000);\n  }\n  formattedNumber = FUN_08008cdc(currentNumber,0x3f000000);\n  index = 0;\n  divisor = FUN_08009278(formattedNumber);\n  formattedOutput[DAT_20000ef9 + 1] = '.';\n  for (; divisor != 0; divisor = divisor / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    tempUint = (uint)index;\n    index = index + 1;\n    formattedOutput[tempUint + 1] = (char)(divisor % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    tempUint = (uint)index;\n    index = index + 1;\n    formattedOutput[tempUint + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    tempByte = index + 1;\n    index = index + 2;\n    formattedOutput[tempByte + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(formattedOutput[index]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "format_and_print_number_08003826",
                "param_1": "inputNumber",
                "iVar1": "result",
                "uVar2": "formattedNumber",
                "bVar3": "tempByte",
                "uVar4": "tempUint",
                "local_24": "currentNumber",
                "acStack_1d": "formattedOutput",
                "local_10": "divisor",
                "local_a": "index",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_application_080039a0",
            "code": "\nvoid initializeApplication_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_application_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_data_080039bc",
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int result;\n  undefined4 errorCode;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUNC_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      errorCode = FUN_080005b4(&DAT_20000d10);\n      FUNC_08004030(errorCode);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "iVar1": "result",
                "uVar2": "errorCode",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "update_status_flags_08003a18",
            "code": "\nvoid updateStatusFlags_08003a18(uint statusFlags)\n\n{\n  if ((statusFlags & 0x80) == 0) {\n    if ((statusFlags & 0x40) == 0) {\n      if ((statusFlags & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "update_status_flags_08003a18",
                "param_1": "statusFlags"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "handle_data_processing_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid handleDataProcessing_08003a74(void)\n\n{\n  byte bVar1;\n  \n  bVar1 = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((bVar1 & 0x10) == 0) {\n      if ((bVar1 & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((bVar1 & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((bVar1 & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((bVar1 & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "handle_data_processing_08003a74"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_command_08003b98",
            "code": "\nuint processCommand_08003b98(char *command)\n\n{\n  byte firstChar;\n  int result;\n  undefined4 tempVar;\n  uint returnValue;\n  undefined8 tempVar2;\n  undefined4 parameter1;\n  undefined4 parameter2;\n  byte index;\n  byte flag;\n  \n  if (*command != '$') {\n    returnValue = FUN_080005b4(command);\n    return returnValue;\n  }\n  index = 1;\n  flag = '\\0';\n  firstChar = command[1];\n  if (firstChar == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        result = FUN_08004d2c(flag,command);\n        if (result == 0) {\n          FUNC_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,command);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(command,&index,&parameter2);\n    if (result == 0) {\n      return 1;\n    }\n    firstChar = index + 1;\n    if (command[index] != '=') {\n      return 3;\n    }\n    index = firstChar;\n    if (flag == '\\0') {\n      result = FUN_08002638(command,&index,&parameter1);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[index] == '\\0') {\n        tempVar = FUN_08009278(parameter2);\n        returnValue = FUN_08004e30(tempVar,parameter1);\n        return returnValue;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)index - (uint)firstChar] = command[index];\n      returnValue = (uint)index;\n      index = index + 1;\n    } while (command[returnValue] != '\\0');\n    flag = firstChar;\n    flag = FUN_080005b4(command);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    tempVar2 = FUN_08008590(parameter2);\n    tempVar2 = FUN_08009798((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20));\n    flag = FUN_08008bf0((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20));\n    FUN_08004bc0(flag,command);\n    break;\n  case 0x58:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_command_08003b98",
                "param_1": "command",
                "bVar1": "firstChar",
                "iVar2": "result",
                "uVar3": "tempVar",
                "uVar4": "returnValue",
                "uVar5": "tempVar2",
                "local_14": "parameter1",
                "local_10": "parameter2",
                "local_a": "index",
                "local_9": "flag"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid processInput_08003f34(void)\n\n{\n  byte currentByte;\n  undefined4 returnValue;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      currentByte = FUN_08008286();\n      if (currentByte == 0xff) {\n        return;\n      }\n      if ((currentByte == 10) || (currentByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < currentByte) && (currentByte != 0x2f)) {\n          if (currentByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUNC_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((currentByte < 0x61) || (0x7a < currentByte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = currentByte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = currentByte - 0x20;\n          }\n        }\n      }\n      else if (currentByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUNC_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      returnValue = FUN_08003b98(&DAT_20000d10);\n      FUNC_08004030(returnValue);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "currentByte",
                "uVar2": "returnValue",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "FUNC_08004030",
            "code": "\nvoid FUNC_08004030(char param_1)\n\n{\n  if (param_1 == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(param_1) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "FUNC_08004030"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_message_080041a0",
            "code": "\nvoid displayMessage_080041a0(undefined messageType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(messageType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "messageType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_welcome_message_08004228",
            "code": "\nvoid printWelcomeMessage_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_welcome_message_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_menu_0800423c",
            "code": "\nvoid printMenu_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_menu_0800423c"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configuration_08004250",
            "code": "\nvoid printConfiguration_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configuration_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 convertedValue;\n  undefined8 processedValue;\n  undefined4 dataArray [3];\n  byte index;\n  byte counter;\n  \n  counter = 0;\n  while( true ) {\n    if (7 < counter) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          processedValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n          convertedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n          FUN_08003826(convertedValue);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(counter,dataArray);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(counter) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(dataArray[index]);\n      }\n      else {\n        processedValue = FUN_08008590(dataArray[index]);\n        processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n        convertedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n        FUN_08003826(convertedValue);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    counter = counter + 1;\n  }\n  FUNC_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "convertedValue",
                "uVar3": "processedValue",
                "auStack_18": "dataArray",
                "local_a": "index",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_application_080046d0",
            "code": "\nvoid initializeApplication_080046d0(void)\n\n{\n  undefined4 temporaryVar1;\n  undefined8 temporaryVar2;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    temporaryVar2 = FUN_08008590(DAT_20000e78);\n    temporaryVar2 = FUN_08008640((int)temporaryVar2,(int)((ulonglong)temporaryVar2 >> 0x20),0x57e16865,0x3fa42851);\n    temporaryVar1 = FUN_08008c30((int)temporaryVar2,(int)((ulonglong)temporaryVar2 >> 0x20));\n    FUN_08003826(temporaryVar1);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_application_080046d0",
                "uVar1": "temporaryVar1",
                "uVar2": "temporaryVar2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_components_08004900",
            "code": "\nvoid initializeBinaryComponents_08004900(undefined undefinedParam,undefined4 undefined4Param)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(undefinedParam);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(undefined4Param);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_components_08004900",
                "param_1": "undefinedParam",
                "param_2": "undefined4Param"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "display_status_08004940",
            "code": "\nvoid displayStatus_08004940(void)\n\n{\n  undefined4 result;\n  uint loopIndex;\n  undefined4 tempVar;\n  undefined8 tempVar1;\n  undefined8 tempVar2;\n  undefined4 statusArray [6];\n  byte index;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    result = FUN_08008e44(statusArray[index + 3]);\n    loopIndex = (uint)index;\n    result = FUN_08009054(result,(&DAT_20000ebc)[index]);\n    statusArray[loopIndex] = result;\n    if ((DAT_20000ee4 & 1) != 0) {\n      tempVar1 = FUN_08008590(statusArray[index]);\n      tempVar1 = FUN_08008640((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),0x57e16865,0x3fa42851);\n      loopIndex = (uint)index;\n      result = FUN_08008c30((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n      statusArray[loopIndex] = result;\n    }\n    FUN_08003826(statusArray[index]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      tempVar = statusArray[index];\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      loopIndex = (uint)index;\n      result = FUN_08008cd8(tempVar,result);\n      statusArray[loopIndex] = result;\n    }\n    else {\n      tempVar1 = FUN_08008590(statusArray[index]);\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      tempVar2 = FUN_08008590(result);\n      tempVar2 = FUN_08008640((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20),0x57e16865,0x3fa42851);\n      tempVar1 = FUN_080082d0((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20),(int)tempVar2,\n                           (int)((ulonglong)tempVar2 >> 0x20));\n      loopIndex = (uint)index;\n      result = FUN_08008c30((int)tempVar1,(int)((ulonglong)tempVar1 >> 0x20));\n      statusArray[loopIndex] = result;\n    }\n    FUN_08003826(statusArray[index]);\n    if (index < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "display_status_08004940",
                "auStack_2c": "statusArray",
                "local_11": "index",
                "uVar1": "result",
                "uVar2": "loopIndex",
                "uVar3": "tempVar",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_08004bc0",
            "code": "\nvoid initializeMemory_08004bc0(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,inputValue,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_08004bc0",
                "param_1": "inputByte",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_offset_08004bf4",
            "code": "\nvoid calculateOffset_08004bf4(byte byteValue,undefined4 paramValue)\n\n{\n  FUN_08000374((ushort)byteValue * 0xd + 0x200,paramValue,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_offset_08004bf4",
                "param_1": "byteValue",
                "param_2": "paramValue"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_function_08004c2a",
            "code": "\nvoid initializeFunction_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_function_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char inputFlag)\n\n{\n  if (inputFlag != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "inputFlag"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "validate_and_process_data_08004d2c",
            "code": "\nbool validate_and_process_data_08004d2c(byte input_byte,undefined *buffer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(buffer,(ushort)input_byte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *buffer = 0;\n    FUN_08004bc0(input_byte,buffer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "validate_and_process_data_08004d2c",
                "param_1": "input_byte",
                "param_2": "buffer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_execute_function_08004d7c",
            "code": "\nbool checkAndExecuteFunction_08004d7c(byte inputByte,undefined4 functionPointer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(functionPointer,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(functionPointer,0,0xc);\n    FUN_08004bf4(inputByte,functionPointer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_execute_function_08004d7c",
                "param_1": "inputByte",
                "param_2": "functionPointer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_and_process_data_08004dd2",
            "code": "\nundefined4 check_and_process_data_08004dd2(void)\n\n{\n  byte result;\n  int status;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    status = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (status == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    status = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (status == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_and_process_data_08004dd2",
                "bVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_configuration_08004e30",
            "code": "\nundefined4 updateConfiguration_08004e30(int configType,uint configValue)\n\n{\n  undefined4 returnValue;\n  int functionResult;\n  undefined8 temporaryValue;\n  \n  switch(configType) {\n  case 0:\n  case 1:\n  case 2:\n    functionResult = FUN_0800923c(configValue,0);\n    if (functionResult != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[configType] = configValue;\n    break;\n  case 3:\n    functionResult = FUN_08009228(configValue,0x40400000);\n    if (functionResult != 0) {\n      return 9;\n    }\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009654((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = configValue;\n    break;\n  case 5:\n    DAT_20000ed0 = configValue;\n    break;\n  case 6:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009798((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 7:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009654((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 8:\n    returnValue = FUN_08008eec(configValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(returnValue,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = configValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = configValue;\n    break;\n  case 0xb:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009654((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 0xc:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009654((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 0xd:\n    functionResult = FUN_08009214(configValue,0);\n    if (functionResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    functionResult = FUN_08009214(configValue,0);\n    if (functionResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    functionResult = FUN_08009214(configValue,0);\n    if (functionResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    functionResult = FUN_08009214(configValue,0);\n    if (functionResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    functionResult = FUN_08009214(configValue,0);\n    if (functionResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009798((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = configValue;\n    break;\n  case 0x14:\n    DAT_20000eec = configValue;\n    break;\n  case 0x15:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009654((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = configValue;\n    break;\n  case 0x17:\n    temporaryValue = FUN_08008590(configValue);\n    temporaryValue = FUN_08009798((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_configuration_08004e30",
                "param_1": "configType",
                "param_2": "configValue",
                "uVar1": "returnValue",
                "iVar2": "functionResult",
                "uVar3": "temporaryValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int iVar1;\n  undefined stackBuffer [15];\n  byte counter;\n  \n  iVar1 = FUN_08004dd2();\n  if (iVar1 == 0) {\n    FUNC_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (counter = 0; counter < 8; counter = counter + 1) {\n    iVar1 = FUN_08004d7c(counter,stackBuffer);\n    if (iVar1 == 0) {\n      FUNC_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "auStack_18": "stackBuffer",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_system_08005250",
            "code": "\nvoid initializeSystem_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_system_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "updated_function_0800525c",
            "code": "\nvoid updatedFunction_0800525c(byte inputByte)\n\n{\n  if ((int)(char)inputByte != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputByte == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputByte;\n    }\n    else {\n      if ((char)inputByte < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputByte;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "updated_function_0800525c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_flag_080052ac",
            "code": "\n\n\nvoid updateFlag_080052ac(uint input)\n\n{\n  _DAT_40021014 = input | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_flag_080052ac",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_memory_value_080052dc",
            "code": "\n\n\nvoid updateMemoryValue_080052dc(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_memory_value_080052dc",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_divisor_08005324",
            "code": "\nvoid calculateDivisor_08005324(uint inputValue)\n\n{\n  uint adjustedValue;\n  \n  adjustedValue = inputValue;\n  if (inputValue < 800) {\n    adjustedValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedValue;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_divisor_08005324",
                "param_1": "inputValue",
                "local_14": "adjustedValue"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_excess_08005360",
            "code": "\nbool calculateExcess_08005360(void)\n\n{\n  bool isExcessive;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExcessive = 420000 < DAT_20000e2c;\n  if (isExcessive) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExcessive;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_excess_08005360",
                "bVar1": "isExcessive"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_values_080053a0",
            "code": "\nvoid updateDataValues_080053a0(void)\n\n{\n  int result;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushortValue *)0x0) {\n    DAT_20000e38 = (ushortValue *)FUN_08002f74();\n    if (DAT_20000e38 == (ushortValue *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushortValue *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = FUN_08005360();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushortValue *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_values_080053a0",
                "iVar1": "result",
                "ushort": "ushortValue"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initialize_data_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_data_08005790",
            "code": "\nvoid initializeData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "execute_logic_080057e4",
            "code": "\nvoid executeLogic_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "execute_logic_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_binary_0800583c",
            "code": "\nvoid initializeBinary_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_binary_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid updateStatusAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_data_if_needed_0800587c",
            "code": "\nvoid updateDataIfNeeded_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_data_if_needed_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_and_set_flags_08005900",
            "code": "\nundefined4 checkAndSetFlags_08005900(byte value)\n\n{\n  if (value == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (value < 0x7f) {\n    if (value == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (value < 0x40) {\n      if (value == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (value == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_and_set_flags_08005900",
                "param_1": "value"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "execute_software_interrupt_0800597c",
            "code": "\nvoid executeSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "execute_software_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "check_and_execute_08005984",
            "code": "\nundefined4 checkAndExecute_08005984(undefined4 inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputValue,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "check_and_execute_08005984",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_08005a84",
            "code": "\nundefined4 get_data_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_for_sum_08005a98",
            "code": "\nvoid waitForSum_08005a98(int targetSum)\n\n{\n  int initialSum;\n  uint currentSum;\n  \n  initialSum = FUN_08005a84();\n  do {\n    currentSum = FUN_08005a84();\n  } while (currentSum < (uint)(targetSum + initialSum));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_for_sum_08005a98",
                "param_1": "targetSum",
                "iVar1": "initialSum",
                "uVar2": "currentSum"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "write_data_to_memory_08005bdc",
            "code": "\nvoid writeDataToMemory_08005bdc(byte inputByte,uint dataToWrite)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((dataToWrite & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((dataToWrite & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "write_data_to_memory_08005bdc",
                "param_1": "inputByte",
                "param_2": "dataToWrite"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_param_08005c30",
            "code": "\n\n\nbool checkAndSetParam_08005c30(int inputParam)\n\n{\n  bool isInRange;\n  \n  isInRange = inputParam - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_param_08005c30",
                "param_1": "inputParam",
                "bVar1": "isInRange"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_conditions_08005cec",
            "code": "\n\n\nundefined4 checkConditions_08005cec(uint *flags)\n\n{\n  int counter1;\n  uint counter2;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 5000U <= counter2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        counter1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          counter2 = FUN_08005a84();\n          if (counter1 + 5000U <= counter2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        counter1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          counter2 = FUN_08005a84();\n          if (counter1 + 5000U <= counter2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    counter1 = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      counter2 = FUN_08005a84();\n      if (counter1 + 100U <= counter2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    counter1 = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      counter2 = FUN_08005a84();\n      if (counter1 + 5000U <= counter2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 5000U <= counter2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 5000U <= counter2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      counter1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        counter2 = FUN_08005a84();\n        if (counter1 + 100U <= counter2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_conditions_08005cec",
                "param_1": "flags",
                "iVar1": "counter1",
                "uVar2": "counter2"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "check_and_update_settings_0800618c",
            "code": "\n\n\nundefined4 check_and_update_settings_0800618c(uint *settings,uint num_settings)\n\n{\n  int result;\n  uint current_time;\n  uint timeout;\n  undefined8 elapsed_time;\n  \n  if ((_DAT_40023c00 & 0xf) < num_settings) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)num_settings);\n    if (num_settings != (num_settings & 0xf)) {\n      return 1;\n    }\n    if ((*settings & 1) != 0) {\n      if (settings[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((settings[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = settings[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (settings[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else if (settings[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*settings & 1) != 0) {\n      if (settings[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (settings[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = settings[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (settings[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else if (settings[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          current_time = FUN_08005a84();\n          if (timeout <= current_time) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)num_settings);\n    if (num_settings != (num_settings & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40023808 = settings[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40023808 = settings[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40023808 = settings[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  elapsed_time = FUN_08006628();\n  FUN_08005c30((uint)elapsed_time / 1000,(int)((ulonglong)elapsed_time >> 0x20),(uint)elapsed_time * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "check_and_update_settings_0800618c",
                "param_1": "settings",
                "param_2": "num_settings",
                "iVar1": "result",
                "uVar2": "current_time",
                "uVar3": "timeout",
                "uVar4": "elapsed_time"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "set_configuration_0800640c",
            "code": "\n\n\nvoid setConfiguration_0800640c(int configOption,uint bitmask1,uint bitmask2)\n\n{\n  undefined4 configValue;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  if (configOption == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    configValue = 0x100;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020000,&configValue);\n    _DAT_40023808 = bitmask2 | bitmask1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    configValue = 0x200;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020800,&configValue);\n    _DAT_40023808 = bitmask1 | bitmask2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "set_configuration_0800640c",
                "param_1": "configOption",
                "param_2": "bitmask1",
                "param_3": "bitmask2",
                "local_1c": "configValue",
                "local_18": "constant1",
                "local_14": "constant2",
                "local_10": "constant3",
                "local_c": "constant4"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockConfig;\n  uint frequency;\n  \n  clockConfig = _DAT_40023808 & 0xc;\n  if (clockConfig == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return frequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockConfig < 9) {\n    if (clockConfig == 0) {\n      return 16000000;\n    }\n    if (clockConfig == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockConfig",
                "local_c": "frequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "compute_shifted_value_08006628",
            "code": "\n\n\nuint computeShiftedValue_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "compute_shifted_value_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_shifted_value_08006680",
            "code": "\n\n\nuint getShiftedValue_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "calculate_shifted_value_080066cc",
            "code": "\n\n\nuint calculate_shifted_value_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "calculate_shifted_value_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_configuration_bits_08006950",
            "code": "\n\n\nvoid setConfigurationBits_08006950(uint configValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (configValue & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_configuration_bits_08006950",
                "param_1": "configValue"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_bits_from_register_08006998",
            "code": "\n\n\nuint getBitsFromRegister_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_bits_from_register_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_at_index_080069b4",
            "code": "\nvoid setBitAtIndex_080069b4(byte byteToSet)\n\n{\n  *(integer *)(((unsignedInt)(integer)(character)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_at_index_080069b4",
                "param_1": "byteToSet",
                "uint": "unsignedInt",
                "int": "integer",
                "char": "character"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte byteToSet)\n\n{\n  *(int *)((((uint)(int)(char)byteToSet >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "byteToSet"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool checkBit_08006a18(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_08006a58",
            "code": "\nvoid setBit_08006a58(byte input)\n\n{\n  *(int *)((((uint)(int)(char)input >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_08006a58",
                "param_1": "input"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_in_memory_08006a8c",
            "code": "\nvoid setBitInMemory_08006a8c(byte byteToSet)\n\n{\n  *(int *)((((uint)(int)(char)byteToSet >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "param_1": "byteToSet"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_in_byte_array_08006ac0",
            "code": "\nbool checkBitInByteArray_08006ac0(byte byteToCheck)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteToCheck >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byteToCheck & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_in_byte_array_08006ac0",
                "param_1": "byteToCheck"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_data_08006b00",
            "code": "\nvoid updateData_08006b00(byte dataByte,uint dataValue)\n\n{\n  if ((char)dataByte < '\\0') {\n    *(char *)((dataByte & 0xf) + 0xe000ed14) = (char)((dataValue & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)dataByte + -0x1fff1c00) = (char)((dataValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_data_08006b00",
                "param_1": "dataByte",
                "param_2": "dataValue"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte resultByte;\n  \n  if ((char)inputByte < '\\0') {\n    resultByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    resultByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return resultByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "resultByte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "bitwise_operations_08006ba0",
            "code": "\nuint bitwiseOperations_08006ba0(uint inputBit,uint mask,uint data)\n\n{\n  uint remainingBits;\n  \n  inputBit = inputBit & 7;\n  remainingBits = 7 - inputBit;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (inputBit + 4 < 7) {\n    inputBit = 0;\n  }\n  else {\n    inputBit = inputBit - 3;\n  }\n  return data & (1 << (inputBit & 0xff)) - 1U |\n         ((1 << (remainingBits & 0xff)) - 1U & mask) << (inputBit & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "bitwise_operations_08006ba0",
                "param_1": "inputBit",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "remainingBits"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extractBits_08006c04(uint input,uint startingIndex,uint *output1,uint *output2)\n\n{\n  uint shiftAmount;\n  \n  startingIndex = startingIndex & 7;\n  shiftAmount = 7 - startingIndex;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (startingIndex + 4 < 7) {\n    startingIndex = 0;\n  }\n  else {\n    startingIndex = startingIndex - 3;\n  }\n  *output1 = (1 << (shiftAmount & 0xff)) - 1U & input >> (startingIndex & 0xff);\n  *output2 = (1 << (startingIndex & 0xff)) - 1U & input;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "startingIndex",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "data_synchronization_loop_08006c70",
            "code": "\nvoid data_synchronization_loop_08006c70(void)\n\n{\n  sync_barrier(0xf);\n  sync_barrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "data_synchronization_loop_08006c70",
                "DataSynchronizationBarrier": "sync_barrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_param_and_setup_08006c9c",
            "code": "\n\n\nbool check_param_and_setup_08006c9c(int input_param)\n\n{\n  bool is_valid;\n  \n  is_valid = input_param - 1U < 0x1000000;\n  if (is_valid) {\n    _DAT_e000e014 = input_param + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !is_valid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_param_and_setup_08006c9c",
                "param_1": "input_param",
                "bVar1": "is_valid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_application_08006ce0",
            "code": "\nvoid initializeApplication_08006ce0(undefined4 configData)\n\n{\n  FUN_08006950(configData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_application_08006ce0",
                "param_1": "configData"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char character,undefined4 value1,undefined4 value2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,value1,value2);\n  FUN_08006b00((int)character,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "character",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "initialize_function_08006d2e",
            "code": "\nvoid initializeFunction_08006d2e(char input)\n\n{\n  FUN_080069b4((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "initialize_function_08006d2e",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_function_08006d4a",
            "code": "\nvoid executeFunction_08006d4a(char inputParameter)\n\n{\n  FUN_080069e4((int)inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_function_08006d4a",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_program_08006d66",
            "code": "\nvoid initialize_program_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_program_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_function_08006d72",
            "code": "\nundefined4 processFunction_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_function_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "execute_main_function_08006d8a",
            "code": "\nundefined4 execute_main_function_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "execute_main_function_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "process_data_08006d98",
            "code": "\nvoid processData_08006d98(char input,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006b54((int)input);\n  FUN_08006c04(result,arg1,arg2,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "process_data_08006d98",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "initialize_08006dc4",
            "code": "\nvoid initialize_08006dc4(char input)\n\n{\n  FUN_08006a58((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "initialize_08006dc4",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "decode_character_08006de0",
            "code": "\nundefined4 decode_character_08006de0(char character)\n\n{\n  undefined4 decoded_character;\n  \n  decoded_character = FUN_08006a18((int)character);\n  return decoded_character;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "decode_character_08006de0",
                "param_1": "character",
                "uVar1": "decoded_character"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_data_08006dfe",
            "code": "\nvoid initializeData_08006dfe(char inputData)\n\n{\n  FUN_08006a8c((int)inputData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_data_08006dfe",
                "param_1": "inputData"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "convert_char_to_unsigned_int_08006e1a",
            "code": "\nundefined4 convertCharToUnsignedInt_08006e1a(char inputChar)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006ac0((int)inputChar);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "convert_char_to_unsigned_int_08006e1a",
                "param_1": "inputChar",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_param_08006e88",
            "code": "\n\n\nvoid updateParam_08006e88(uint *param1,uint *param2)\n\n{\n  uint bitMask;\n  uint bitCheck;\n  int index;\n  uint loopIndex;\n  \n  for (loopIndex = 0; loopIndex < 0x10; loopIndex = loopIndex + 1) {\n    bitMask = 1 << (loopIndex & 0xff);\n    bitCheck = *param2 & bitMask;\n    if (bitCheck == bitMask) {\n      if ((param2[1] == 2) || (param2[1] == 0x12)) {\n        bitMask = param2[4];\n        param1[(loopIndex >> 3) + 8] = param1[(loopIndex >> 3) + 8] & ~(0xf << ((loopIndex & 7) << 2));\n        param1[(loopIndex >> 3) + 8] = param1[(loopIndex >> 3) + 8] | bitMask << ((loopIndex & 7) << 2);\n      }\n      *param1 = *param1 & ~(3 << ((loopIndex & 0x7f) << 1));\n      *param1 = *param1 | (param2[1] & 3) << ((loopIndex & 0x7f) << 1);\n      if ((((param2[1] == 1) || (param2[1] == 2)) || (param2[1] == 0x11)) || (param2[1] == 0x12)\n         ) {\n        param1[2] = param1[2] & ~(3 << ((loopIndex & 0x7f) << 1));\n        param1[2] = param1[2] | param2[3] << ((loopIndex & 0x7f) << 1);\n        param1[1] = param1[1] & ~(1 << (loopIndex & 0xff));\n        param1[1] = param1[1] | (param2[1] >> 4 & 1) << (loopIndex & 0xff);\n      }\n      param1[3] = param1[3] & ~(3 << ((loopIndex & 0x7f) << 1));\n      param1[3] = param1[3] | param2[2] << ((loopIndex & 0x7f) << 1);\n      if ((param2[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((loopIndex & 3) << 2)) & *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800);\n        if (param1 == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (param1 == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (param1 == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (param1 == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (param1 == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (param1 == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (param1 == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (param1 == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (param1 == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (param1 == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800) =\n             index << ((loopIndex & 3) << 2) | *(uint *)(((loopIndex >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitCheck & _DAT_40013c00;\n        _DAT_40013c04 = ~bitCheck & _DAT_40013c04;\n        if ((param2[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitCheck | _DAT_40013c00;\n        }\n        if ((param2[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitCheck | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitCheck & _DAT_40013c08;\n        _DAT_40013c0c = ~bitCheck & _DAT_40013c0c;\n        if ((param2[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitCheck | _DAT_40013c08;\n        }\n        if ((param2[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitCheck | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_param_08006e88",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "bitMask",
                "uVar2": "bitCheck",
                "iVar3": "index",
                "local_c": "loopIndex"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "set_data_type_0800733e",
            "code": "\nvoid setDataType_0800733e(int dataStructure,undefined2 dataType,char condition)\n\n{\n  if (condition == '\\0') {\n    *(undefined2 *)(dataStructure + 0x1a) = dataType;\n  }\n  else {\n    *(undefined2 *)(dataStructure + 0x18) = dataType;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "set_data_type_0800733e",
                "param_1": "dataStructure",
                "param_2": "dataType",
                "param_3": "condition"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_and_call_function_if_flag_set_0800738e",
            "code": "\n\n\nvoid updateAndCallFunctionIfFlagSet_0800738e(ushort flag)\n\n{\n  if ((flag & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)flag;\n    FUNC_080073c0(flag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_and_call_function_if_flag_set_0800738e",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_080073d4",
            "code": "\nvoid setBit_080073d4(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x4002001a) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_080073d4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "write_bit_to_memory_08007402",
            "code": "\nvoid writeBitToMemory_08007402(uint inputValue)\n\n{\n  *(short *)(((int)inputValue >> 4) * 0x400 + 0x40020018) = (short)(1 << (inputValue & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "write_bit_to_memory_08007402",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_function_08007436",
            "code": "\n\n\nvoid initializeFunction_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  undefined4 constant6;\n  undefined4 count;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  constant1 = 2;\n  constant2 = 0x400000;\n  constant3 = 8;\n  constant4 = 0x150;\n  constant5 = 2;\n  constant6 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  count = 0xf;\n  value1 = 2;\n  value2 = 0;\n  value3 = 0x1400;\n  value4 = 0x1000;\n  iVar1 = FUN_0800618c(&count,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_function_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "constant1",
                "local_30": "constant2",
                "local_2c": "constant3",
                "local_28": "constant4",
                "local_24": "constant5",
                "local_20": "constant6",
                "local_1c": "count",
                "local_18": "value1",
                "local_14": "value2",
                "local_10": "value3",
                "local_c": "value4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "process_flags_080074c8",
            "code": "\nvoid processFlags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "process_flags_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_call_function_08007520",
            "code": "\nvoid checkAndCallFunction_08007520(uint inputValue)\n\n{\n  if ((inputValue & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_call_function_08007520",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_application_08007540",
            "code": "\nundefined4 initialize_application_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_application_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_0800756c",
            "code": "\n\n\nvoid initialize_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_value_080076c8",
            "code": "\nvoid updateBitValue_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_value_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_perform_actions_08007756",
            "code": "\nvoid checkAndPerformActions_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_perform_actions_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "set_bits_and_call_functions_0800778c",
            "code": "\n\n\nvoid set_bits_and_call_functions_0800778c(void)\n\n{\n  int index;\n  int bit_mask;\n  undefined4 address_1;\n  undefined4 address_2;\n  undefined4 address_3;\n  undefined4 address_4;\n  uint *var_pointer;\n  uint loop_counter;\n  \n  for (loop_counter = 0; loop_counter < 0x11; loop_counter = loop_counter + 1) {\n    index = loop_counter * 0x18;\n    var_pointer = (uint *)(&DAT_0800bcbc + index);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*var_pointer >> 4 & 0xff);\n    bit_mask = 1 << (*var_pointer & 0xf);\n    address_1 = *(undefined4 *)(&DAT_0800bcc0 + index);\n    address_2 = *(undefined4 *)(&DAT_0800bcc4 + index);\n    address_3 = *(undefined4 *)(&DAT_0800bcc8 + index);\n    address_4 = *(undefined4 *)(&DAT_0800bccc + index);\n    FUN_08006e88(((*var_pointer >> 4) + 0x100080) * 0x400,&bit_mask);\n    if (-1 < (int)var_pointer[5]) {\n      FUN_0800733e(((*var_pointer >> 4) + 0x100080) * 0x400,1 << (*var_pointer & 0xf) & 0xffff,\n                   var_pointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "set_bits_and_call_functions_0800778c",
                "local_24": "bit_mask",
                "local_20": "address_1",
                "local_1c": "address_2",
                "local_18": "address_3",
                "local_14": "address_4",
                "local_10": "var_pointer",
                "local_c": "loop_counter",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_08007854",
            "code": "\nuint check_bit_08007854(uint input_value)\n\n{\n  return *(uint *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_08007854",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "calculate_combined_value_08007884",
            "code": "\nuint calculateCombinedValue_08007884(void)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  uint result;\n  \n  value1 = FUN_08007854(0x36);\n  value2 = FUN_08007854(0x37);\n  value3 = FUN_08007854(0x38);\n  value4 = FUN_08007854(0x39);\n  value5 = FUN_08007854(0xf);\n  result = FUN_08007854(0);\n  return result | value1 << 4 | value2 << 3 | value3 << 2 | value4 << 1 | value5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "calculate_combined_value_08007884",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "combine_values_080078f4",
            "code": "\nuint combineValues_080078f4(void)\n\n{\n  int index;\n  uint combinedValue;\n  \n  combinedValue = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    combinedValue = *(uint *)(&DAT_20000e54 + index * 4) | combinedValue;\n  }\n  return combinedValue;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "combine_values_080078f4",
                "local_10": "index",
                "local_c": "combinedValue"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int counter;\n  uint previousValue;\n  undefined4 newValue;\n  uint result;\n  uint bitwiseDifference;\n  \n  counter = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + counter * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    result = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (result != DAT_20000e64) {\n      bitwiseDifference = ~result & DAT_20000e64;\n      if ((~DAT_20000e64 & result) != 0) {\n        FUN_080074c8(~DAT_20000e64 & result);\n      }\n      previousValue = result;\n      if (bitwiseDifference != 0) {\n        FUN_08007520(bitwiseDifference);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "counter",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "result",
                "uVar5": "bitwiseDifference"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_in_memory_080079e0",
            "code": "\nvoid setBitInMemory_080079e0(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_in_memory_080079e0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_data_permissions_08007a10",
            "code": "\n\n\nvoid updateDataPermissions_08007a10(undefined *dataPointer)\n\n{\n  if (dataPointer == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (dataPointer == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (dataPointer == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_data_permissions_08007a10",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "update_value_based_on_param_08007a70",
            "code": "\nvoid updateValueBasedOnParam_08007a70(undefined *inputPointer,undefined4 value2,undefined4 value3)\n\n{\n  undefined updatedValue;\n  \n  if (inputPointer == (undefined *)0x40000000) {\n    updatedValue = 0x1c;\n  }\n  else if (inputPointer == (undefined *)0x40000400) {\n    updatedValue = 0x1d;\n  }\n  else {\n    if (inputPointer != &DAT_40000800) {\n      return;\n    }\n    updatedValue = 0x1e;\n  }\n  FUN_08006cf6(updatedValue,value2,value3);\n  FUN_080079e0(updatedValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "update_value_based_on_param_08007a70",
                "param_1": "inputPointer",
                "param_2": "value2",
                "param_3": "value3",
                "local_c": "updatedValue"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_and_values_08007b70",
            "code": "\n\n\nvoid setFlagsAndValues_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_and_values_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_smallest_value_08007bf0",
            "code": "\n\n\nvoid update_smallest_value_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_smallest_value_08007bf0",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "set_global_value_08007c40",
            "code": "\n\n\nvoid setGlobalValue_08007c40(undefined4 newValue)\n\n{\n  _DAT_40000034 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "set_global_value_08007c40",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_param_in_global_variable_08007c5e",
            "code": "\n\n\nvoid set_param_in_global_variable_08007c5e(undefined4 param_value)\n\n{\n  _DAT_40000038 = param_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_param_in_global_variable_08007c5e",
                "param_1": "param_value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_flags_and_call_functions_08007c7c",
            "code": "\n\n\nvoid updateFlagsAndCallFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_flags_and_call_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_control_registers_08007d08",
            "code": "\n\n\nvoid initializeControlRegisters_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_control_registers_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_and_enable_08007da8",
            "code": "\n\n\nvoid setFlagsAndEnable_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_and_enable_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "execute_initialization_process_08007e08",
            "code": "\nvoid executeInitializationProcess_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "execute_initialization_process_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "wait_for_data_08007e1c",
            "code": "\n\n\nvoid wait_for_data_08007e1c(byte data)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "wait_for_data_08007e1c",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "is_bit_set_08007e58",
            "code": "\n\n\nbool is_bit_set_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "set_data_flags_08007ea4",
            "code": "\n\n\nvoid set_data_flags_08007ea4(undefined *data_ptr)\n\n{\n  if (data_ptr == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (data_ptr == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (data_ptr == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (data_ptr == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (data_ptr == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (data_ptr == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "set_data_flags_08007ea4",
                "param_1": "data_ptr"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_parameter_08007f54",
            "code": "\nvoid calculateParameter_08007f54(int address,int multiplier)\n\n{\n  ulonglong result1;\n  int result2;\n  int result3;\n  undefined8 value;\n  \n  if ((*(uint *)(address + 0xc) & 0x8000) == 0) {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      value = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)value * 0x19) / (ulonglong)(uint)(multiplier << 2);\n      result2 = FUN_08006680((int)value,(int)((ulonglong)value >> 0x20),(int)(result1 * 0x51eb851f));\n      result3 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(multiplier << 2) +\n            (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(multiplier << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    value = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)value * 0x19) / (ulonglong)(uint)(multiplier << 2);\n    result2 = FUN_080066cc((int)value,(int)((ulonglong)value >> 0x20),(int)(result1 * 0x51eb851f));\n    result3 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(multiplier << 2) +\n          (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(multiplier << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      value = FUN_08006680();\n      result1 = (ulonglong)(uint)((int)value * 0x19) / (ulonglong)(uint)(multiplier << 1);\n      result2 = FUN_08006680((int)value,(int)((ulonglong)value >> 0x20),(int)(result1 * 0x51eb851f));\n      result3 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(result1 / 100) << 4 |\n           (((uint)(result2 * 0x19) / (uint)(multiplier << 1) +\n            (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(multiplier << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    value = FUN_080066cc();\n    result1 = (ulonglong)(uint)((int)value * 0x19) / (ulonglong)(uint)(multiplier << 1);\n    result2 = FUN_080066cc((int)value,(int)((ulonglong)value >> 0x20),(int)(result1 * 0x51eb851f));\n    result3 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(result1 / 100) << 4 |\n         (((uint)(result2 * 0x19) / (uint)(multiplier << 1) +\n          (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(multiplier << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_parameter_08007f54",
                "param_1": "address",
                "param_2": "multiplier",
                "uVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_program_08008250",
            "code": "\nvoid initializeProgram_08008250(undefined arg)\n\n{\n  FUN_08007e1c(arg);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_program_08008250",
                "param_1": "arg"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "execute_function_0800826a",
            "code": "\nundefined4 execute_function_0800826a(undefined arg)\n\n{\n  FUN_08007e1c(arg);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "execute_function_0800826a",
                "param_1": "arg"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_and_convert_data_08008286",
            "code": "\nundefined check_and_convert_data_08008286(void)\n\n{\n  undefined converted_data;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    converted_data = FUN_08007e84();\n    result = FUN_08005900(converted_data);\n    if (result == 0) {\n      return converted_data;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_and_convert_data_08008286",
                "iVar2": "result",
                "uVar1": "converted_data"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "binary_arithmetic_080082d0",
            "code": "\nulonglong binary_arithmetic_080082d0(uint operand_1,uint operand_2,uint operand_3,uint operand_4)\n\n{\n  int shift_amount_1;\n  byte carry_bit;\n  uint temp_var_1;\n  uint temp_var_2;\n  uint temp_var_3;\n  uint result_var_1;\n  uint result_var_2;\n  int shift_amount_2;\n  uint result_var_3;\n  uint result_var_4;\n  uint result_var_5;\n  uint result_var_6;\n  bool bool_1;\n  bool bool_2;\n  bool bool_3;\n  \n  result_var_1 = operand_4 ^ 0x80000000;\n  result_var_3 = operand_2 << 1;\n  operand_4 = operand_4 << 1;\n  bool_1 = ((operand_2 ^ result_var_1) & 0x7fffffff) == 0;\n  bool_2 = bool_1 && operand_1 == operand_3;\n  if (!bool_1 || operand_1 != operand_3) {\n    bool_2 = (result_var_3 | operand_1) == 0;\n  }\n  if (!bool_2) {\n    bool_2 = (operand_4 | operand_3) == 0;\n  }\n  shift_amount_2 = (int)result_var_3 >> 0x15;\n  if (!bool_2) {\n    bool_2 = shift_amount_2 == -1;\n  }\n  shift_amount_1 = (int)operand_4 >> 0x15;\n  if (!bool_2) {\n    bool_2 = shift_amount_1 == -1;\n  }\n  if (bool_2) {\n    if (shift_amount_2 == -1 || shift_amount_1 == -1) {\n      result_var_3 = result_var_1;\n      result_var_5 = operand_3;\n      if (shift_amount_2 == -1) {\n        result_var_3 = operand_2;\n        result_var_5 = operand_1;\n      }\n      if (shift_amount_2 != -1 || shift_amount_1 != -1) {\n        operand_3 = result_var_5;\n        result_var_1 = result_var_3;\n      }\n      bool_2 = (result_var_5 | result_var_3 << 0xc) == 0;\n      if (bool_2) {\n        bool_2 = (operand_3 | result_var_1 << 0xc) == 0;\n      }\n      if (bool_2) {\n        bool_2 = result_var_3 == result_var_1;\n      }\n      if (!bool_2) {\n        result_var_3 = result_var_3 | 0x80000;\n      }\n      return CONCAT44(result_var_3,result_var_5);\n    }\n    if (((operand_2 ^ result_var_1) & 0x7fffffff) != 0 || operand_1 != operand_3) {\n      if ((result_var_3 | operand_1) == 0) {\n        operand_1 = operand_3;\n        operand_2 = result_var_1;\n      }\n      return CONCAT44(operand_2,operand_1);\n    }\n    if (operand_2 != result_var_1) {\n      return 0;\n    }\n    if (result_var_3 >> 0x15 == 0) {\n      bool_2 = (operand_1 & 0x80000000) != 0;\n      result_var_1 = operand_2 * 2 + (uint)bool_2;\n      if (CARRY4(operand_2,operand_2) || CARRY4(operand_2 * 2,(uint)bool_2)) {\n        result_var_1 = result_var_1 | 0x80000000;\n      }\n      return CONCAT44(result_var_1,operand_1 << 1);\n    }\n    if (result_var_3 < 0xffc00000) {\n      return CONCAT44(operand_2 + 0x100000,operand_1);\n    }\n    operand_2 = operand_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(operand_2 | 0x7ff00000) << 0x20;\n  }\n  result_var_3 = result_var_3 >> 0x15;\n  operand_4 = operand_4 >> 0x15;\n  result_var_5 = operand_4 - result_var_3;\n  bool_2 = result_var_5 != 0;\n  if (operand_4 < result_var_3) {\n    result_var_5 = -result_var_5;\n  }\n  result_var_4 = operand_1;\n  result_var_2 = operand_2;\n  if (bool_2 && result_var_3 <= operand_4) {\n    result_var_3 = result_var_3 + result_var_5;\n    result_var_4 = operand_3;\n    result_var_2 = result_var_1;\n    operand_3 = operand_1;\n    result_var_1 = operand_2;\n  }\n  if (0x36 < result_var_5) {\n    return CONCAT44(result_var_2,result_var_4);\n  }\n  temp_var_2 = result_var_2 & 0xfffff | 0x100000;\n  if ((result_var_2 & 0x80000000) != 0) {\n    bool_2 = result_var_4 != 0;\n    result_var_4 = -result_var_4;\n    temp_var_2 = -temp_var_2 - (uint)bool_2;\n  }\n  result_var_2 = result_var_1 & 0xfffff | 0x100000;\n  if ((result_var_1 & 0x80000000) != 0) {\n    bool_2 = operand_3 != 0;\n    operand_3 = -operand_3;\n    result_var_2 = -result_var_2 - (uint)bool_2;\n  }\n  if (result_var_3 == result_var_5) {\n    result_var_2 = result_var_2 ^ 0x100000;\n    if (result_var_3 == 0) {\n      temp_var_2 = temp_var_2 ^ 0x100000;\n      result_var_3 = 1;\n    }\n    else {\n      result_var_5 = result_var_5 - 1;\n    }\n  }\n  result_var_1 = -result_var_5 + 0x20;\n  if ((int)result_var_5 < 0x21) {\n    result_var_6 = operand_3 << (result_var_1 & 0xff);\n    operand_3 = operand_3 >> (result_var_5 & 0xff);\n    temp_var_1 = result_var_4 + operand_3;\n    temp_var_3 = result_var_2 << (result_var_1 & 0xff);\n    result_var_1 = temp_var_1 + temp_var_3;\n    temp_var_2 = temp_var_2 + CARRY4(result_var_4,operand_3) + ((int)result_var_2 >> (result_var_5 & 0xff)) +\n            (uint)CARRY4(temp_var_1,temp_var_3);\n  }\n  else {\n    result_var_6 = result_var_2 << (-result_var_5 + 0x40 & 0xff);\n    if (operand_3 != 0) {\n      result_var_6 = result_var_6 | 2;\n    }\n    result_var_2 = (int)result_var_2 >> (result_var_5 - 0x20 & 0xff);\n    result_var_1 = result_var_4 + result_var_2;\n    temp_var_2 = temp_var_2 + ((int)result_var_2 >> 0x1f) + (uint)CARRY4(result_var_4,result_var_2);\n  }\n  operand_2 = temp_var_2 & 0x80000000;\n  result_var_5 = temp_var_2;\n  if ((int)temp_var_2 < 0) {\n    bool_2 = result_var_6 == 0;\n    result_var_6 = -result_var_6;\n    result_var_5 = -result_var_1;\n    result_var_1 = -(uint)!bool_2 - result_var_1;\n    result_var_5 = -(uint)(bool_2 <= result_var_5) - temp_var_2;\n  }\n  if (0xfffff < result_var_5) {\n    result_var_4 = result_var_3 - 1;\n    if (0x1fffff < result_var_5) {\n      result_var_4 = result_var_5 & 1;\n      result_var_5 = result_var_5 >> 1;\n      carry_bit = (byte)result_var_1;\n      result_var_1 = (uint)(result_var_4 != 0) << 0x1f | result_var_1 >> 1;\n      result_var_6 = (uint)(carry_bit & 1) << 0x1f | result_var_6 >> 1;\n      result_var_4 = result_var_3;\n      if (0xffbfffff < result_var_3 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bool_2 = 0x7fffffff < result_var_6;\n    if (result_var_6 == 0x80000000) {\n      bool_2 = (result_var_1 & 1) != 0;\n    }\n    return CONCAT44(result_var_5 + result_var_4 * 0x100000 + (uint)CARRY4(result_var_1,(uint)bool_2) | operand_2,\n                    result_var_1 + bool_2);\n  }\n  bool_1 = (result_var_6 & 0x80000000) != 0;\n  result_var_6 = result_var_6 << 1;\n  result_var_4 = result_var_1 * 2;\n  bool_2 = CARRY4(result_var_1,result_var_1);\n  result_var_1 = result_var_1 * 2 + (uint)bool_1;\n  result_var_5 = result_var_5 * 2 + (uint)(bool_2 || CARRY4(result_var_4,(uint)bool_1));\n  result_var_4 = result_var_3 - 2;\n  if (result_var_3 - 1 != 0 && 0xfffff < result_var_5) goto LAB_080083e0;\n  result_var_2 = result_var_1;\n  result_var_3 = result_var_5;\n  if (result_var_5 == 0) {\n    result_var_2 = 0;\n    result_var_3 = result_var_1;\n  }\n  shift_amount_2 = LZCOUNT(result_var_3);\n  if (result_var_5 == 0) {\n    shift_amount_2 = shift_amount_2 + 0x20;\n  }\n  result_var_5 = shift_amount_2 - 0xb;\n  bool_3 = SBORROW4(result_var_5,0x20);\n  result_var_1 = shift_amount_2 - 0x2b;\n  bool_2 = (int)result_var_1 < 0;\n  bool_1 = result_var_1 == 0;\n  if ((int)result_var_5 < 0x20) {\n    bool_3 = SCARRY4(result_var_1,0xc);\n    shift_amount_2 = shift_amount_2 + -0x1f;\n    bool_2 = shift_amount_2 < 0;\n    bool_1 = shift_amount_2 == 0;\n    result_var_1 = result_var_5;\n    if (!bool_1 && bool_2 == bool_3) {\n      result_var_2 = result_var_3 << (result_var_5 & 0xff);\n      result_var_3 = result_var_3 >> (0xcU - shift_amount_2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bool_1 || bool_2 != bool_3) {\n    result_var_6 = 0x20 - result_var_1;\n  }\n  result_var_3 = result_var_3 << (result_var_1 & 0xff);\n  if (bool_1 || bool_2 != bool_3) {\n    result_var_3 = result_var_3 | result_var_2 >> (result_var_6 & 0xff);\n  }\n  if (bool_1 || bool_2 != bool_3) {\n    result_var_2 = result_var_2 << (result_var_1 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result_var_5 <= (int)result_var_4) {\n    return CONCAT44(result_var_3 + (result_var_4 - result_var_5) * 0x100000 | operand_2,result_var_2);\n  }\n  result_var_1 = ~(result_var_4 - result_var_5);\n  if ((int)result_var_1 < 0x1f) {\n    shift_amount_2 = result_var_1 - 0x13;\n    if (shift_amount_2 != 0 && shift_amount_2 < 0 == SCARRY4(result_var_1 - 0x1f,0xc)) {\n      return CONCAT44(temp_var_2,result_var_2 >> (0x20 - (0xcU - shift_amount_2) & 0xff) | result_var_3 << (0xcU - shift_amount_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result_var_1 = result_var_1 + 1;\n    return CONCAT44(operand_2 | result_var_3 >> (result_var_1 & 0xff),\n                    result_var_2 >> (result_var_1 & 0xff) | result_var_3 << (0x20 - result_var_1 & 0xff));\n  }\n  return CONCAT44(temp_var_2,result_var_3 >> (result_var_1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "binary_arithmetic_080082d0",
                "param_1": "operand_1",
                "param_2": "operand_2",
                "param_3": "operand_3",
                "param_4": "operand_4",
                "iVar1": "shift_amount_1",
                "bVar2": "carry_bit",
                "uVar3": "temp_var_1",
                "uVar4": "temp_var_2",
                "uVar5": "temp_var_3",
                "uVar6": "result_var_1",
                "uVar7": "result_var_2",
                "iVar8": "shift_amount_2",
                "uVar9": "result_var_3",
                "uVar10": "result_var_4",
                "uVar11": "result_var_5",
                "uVar12": "result_var_6",
                "bVar13": "bool_1",
                "bVar14": "bool_2",
                "bVar15": "bool_3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_result_080082d4",
            "code": "\nulonglong calculateResult_080082d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry1;\n  uint result1;\n  uint shiftedOperand;\n  uint result2;\n  int shift2;\n  uint op1Shifted;\n  uint op2Shifted;\n  uint result3;\n  uint difference;\n  uint carry2;\n  uint result4;\n  bool isNegative1;\n  bool isNegative2;\n  bool isNegative3;\n  \n  op1Shifted = input2 << 1;\n  result3 = input4 << 1;\n  isNegative1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  isNegative2 = isNegative1 && input1 == input3;\n  if (!isNegative1 || input1 != input3) {\n    isNegative2 = (op1Shifted | input1) == 0;\n  }\n  if (!isNegative2) {\n    isNegative2 = (result3 | input3) == 0;\n  }\n  shift2 = (int)op1Shifted >> 0x15;\n  if (!isNegative2) {\n    isNegative2 = shift2 == -1;\n  }\n  shift1 = (int)result3 >> 0x15;\n  if (!isNegative2) {\n    isNegative2 = shift1 == -1;\n  }\n  if (isNegative2) {\n    if (shift2 == -1 || shift1 == -1) {\n      result3 = input4;\n      op1Shifted = input3;\n      if (shift2 == -1) {\n        result3 = input2;\n        op1Shifted = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = op1Shifted;\n        input4 = result3;\n      }\n      isNegative2 = (op1Shifted | result3 << 0xc) == 0;\n      if (isNegative2) {\n        isNegative2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (isNegative2) {\n        isNegative2 = result3 == input4;\n      }\n      if (!isNegative2) {\n        result3 = result3 | 0x80000;\n      }\n      return CONCAT44(result3,op1Shifted);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((op1Shifted | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (op1Shifted >> 0x15 == 0) {\n      isNegative2 = (input1 & 0x80000000) != 0;\n      result3 = input2 * 2 + (uint)isNegative2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)isNegative2)) {\n        result3 = result3 | 0x80000000;\n      }\n      return CONCAT44(result3,input1 << 1);\n    }\n    if (op1Shifted < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  op1Shifted = op1Shifted >> 0x15;\n  result3 = result3 >> 0x15;\n  difference = result3 - op1Shifted;\n  isNegative2 = difference != 0;\n  if (result3 < op1Shifted) {\n    difference = -difference;\n  }\n  op2Shifted = input1;\n  result2 = input2;\n  if (isNegative2 && op1Shifted <= result3) {\n    op1Shifted = op1Shifted + difference;\n    op2Shifted = input3;\n    result2 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(result2,op2Shifted);\n  }\n  result3 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    isNegative2 = op2Shifted != 0;\n    op2Shifted = -op2Shifted;\n    result3 = -result3 - (uint)isNegative2;\n  }\n  result2 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    isNegative2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)isNegative2;\n  }\n  if (op1Shifted == difference) {\n    result2 = result2 ^ 0x100000;\n    if (op1Shifted == 0) {\n      result3 = result3 ^ 0x100000;\n      op1Shifted = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result4 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    carry2 = input3 << (result4 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    result1 = op2Shifted + input3;\n    shiftedOperand = result2 << (result4 & 0xff);\n    result4 = result1 + shiftedOperand;\n    result3 = result3 + CARRY4(op2Shifted,input3) + ((int)result2 >> (difference & 0xff)) +\n            (uint)CARRY4(result1,shiftedOperand);\n  }\n  else {\n    carry2 = result2 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      carry2 = carry2 | 2;\n    }\n    result2 = (int)result2 >> (difference - 0x20 & 0xff);\n    result4 = op2Shifted + result2;\n    result3 = result3 + ((int)result2 >> 0x1f) + (uint)CARRY4(op2Shifted,result2);\n  }\n  input2 = result3 & 0x80000000;\n  difference = result3;\n  if ((int)result3 < 0) {\n    isNegative2 = carry2 == 0;\n    carry2 = -carry2;\n    difference = -result4;\n    result4 = -(uint)!isNegative2 - result4;\n    difference = -(uint)(isNegative2 <= difference) - result3;\n  }\n  if (0xfffff < difference) {\n    op2Shifted = op1Shifted - 1;\n    if (0x1fffff < difference) {\n      result3 = difference & 1;\n      difference = difference >> 1;\n      carry1 = (byte)result4;\n      result4 = (uint)(result3 != 0) << 0x1f | result4 >> 1;\n      carry2 = (uint)(carry1 & 1) << 0x1f | carry2 >> 1;\n      op2Shifted = op1Shifted;\n      if (0xffbfffff < op1Shifted * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    isNegative2 = 0x7fffffff < carry2;\n    if (carry2 == 0x80000000) {\n      isNegative2 = (result4 & 1) != 0;\n    }\n    return CONCAT44(difference + op2Shifted * 0x100000 + (uint)CARRY4(result4,(uint)isNegative2) | input2,\n                    result4 + isNegative2);\n  }\n  isNegative1 = (carry2 & 0x80000000) != 0;\n  carry2 = carry2 << 1;\n  op2Shifted = result4 * 2;\n  isNegative2 = CARRY4(result4,result4);\n  result4 = result4 * 2 + (uint)isNegative1;\n  difference = difference * 2 + (uint)(isNegative2 || CARRY4(op2Shifted,(uint)isNegative1));\n  op2Shifted = op1Shifted - 2;\n  if (op1Shifted - 1 != 0 && 0xfffff < difference) goto LAB_080083e0;\n  result2 = result4;\n  op1Shifted = difference;\n  if (difference == 0) {\n    result2 = 0;\n    op1Shifted = result4;\n  }\n  shift2 = LZCOUNT(op1Shifted);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  result4 = shift2 - 0xb;\n  isNegative3 = SBORROW4(result4,0x20);\n  difference = shift2 - 0x2b;\n  isNegative2 = (int)difference < 0;\n  isNegative1 = difference == 0;\n  if ((int)result4 < 0x20) {\n    isNegative3 = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    isNegative2 = shift2 < 0;\n    isNegative1 = shift2 == 0;\n    difference = result4;\n    if (!isNegative1 && isNegative2 == isNegative3) {\n      result2 = op1Shifted << (result4 & 0xff);\n      op1Shifted = op1Shifted >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isNegative1 || isNegative2 != isNegative3) {\n    carry2 = 0x20 - difference;\n  }\n  op1Shifted = op1Shifted << (difference & 0xff);\n  if (isNegative1 || isNegative2 != isNegative3) {\n    op1Shifted = op1Shifted | result2 >> (carry2 & 0xff);\n  }\n  if (isNegative1 || isNegative2 != isNegative3) {\n    result2 = result2 << (difference & 0xff);\n  }\nLAB_08008458:\n  if ((int)result4 <= (int)op2Shifted) {\n    return CONCAT44(op1Shifted + (op2Shifted - result4) * 0x100000 | input2,result2);\n  }\n  difference = ~(op2Shifted - result4);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(result3,result2 >> (0x20 - (0xcU - shift2) & 0xff) | op1Shifted << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | op1Shifted >> (difference & 0xff),\n                    result2 >> (difference & 0xff) | op1Shifted << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(result3,op1Shifted >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_result_080082d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry1",
                "uVar3": "result1",
                "uVar4": "shiftedOperand",
                "uVar5": "result2",
                "iVar6": "shift2",
                "uVar7": "op1Shifted",
                "uVar8": "op2Shifted",
                "uVar9": "result3",
                "uVar10": "difference",
                "uVar11": "carry2",
                "uVar12": "result4",
                "bVar13": "isNegative1",
                "bVar14": "isNegative2",
                "bVar15": "isNegative3"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "reverse_bits_0800854c",
            "code": "\nulonglong reverseBits_0800854c(uint input)\n\n{\n  uint output_high;\n  uint shift_amount;\n  int leading_zeros;\n  uint bit_count;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool subtract;\n  \n  if (input == 0) {\n    return 0;\n  }\n  output_high = 0;\n  leading_zeros = LZCOUNT(input);\n  bit_count = leading_zeros + 0x15;\n  subtract = SBORROW4(bit_count,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (bit_count < 0x20) {\n    subtract = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = bit_count;\n    if (!is_zero && subtract == false) {\n      output_high = input << bit_count;\n      input = input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != subtract) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero || is_negative != subtract) {\n    input = input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != subtract) {\n    output_high = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if (bit_count < 0x433) {\n    return CONCAT44(input + (0x432 - bit_count) * 0x100000,output_high);\n  }\n  shift_amount = ~(0x432 - bit_count);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(input >> (shift_amount & 0xff),\n                    output_high >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(output_high >> (0x20 - (0xcU - leading_zeros) & 0xff) | input << (0xcU - leading_zeros & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "reverse_bits_0800854c",
                "param_1": "input",
                "uVar1": "output_high",
                "uVar2": "shift_amount",
                "iVar3": "leading_zeros",
                "uVar4": "bit_count",
                "in_r12": "remaining_bits",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "subtract"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "bitwise_shift_0800856c",
            "code": "\nulonglong bitwise_shift_0800856c(uint input)\n\n{\n  uint bit_shift_amount;\n  uint abs_input;\n  uint shifted_amount;\n  int leading_zeros;\n  uint adjusted_shift_amount;\n  uint sign_bit;\n  uint shifted_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_negative_overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  bit_shift_amount = 0;\n  leading_zeros = LZCOUNT(abs_input);\n  adjusted_shift_amount = leading_zeros + 0x15;\n  is_negative_overflow = SBORROW4(adjusted_shift_amount,0x20);\n  shifted_amount = leading_zeros - 0xb;\n  is_negative = (int)shifted_amount < 0;\n  is_zero = shifted_amount == 0;\n  if (adjusted_shift_amount < 0x20) {\n    is_negative_overflow = SCARRY4(shifted_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shifted_amount = adjusted_shift_amount;\n    if (!is_zero && is_negative_overflow == false) {\n      bit_shift_amount = abs_input << adjusted_shift_amount;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != is_negative_overflow) {\n    shifted_bits = 0x20 - shifted_amount;\n  }\n  abs_input = abs_input << (shifted_amount & 0xff);\n  if (is_zero || is_negative != is_negative_overflow) {\n    abs_input = abs_input | 0U >> (shifted_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_negative_overflow) {\n    bit_shift_amount = 0 << (shifted_amount & 0xff);\n  }\nLAB_08008458:\n  if (adjusted_shift_amount < 0x433) {\n    return CONCAT44(abs_input + (0x432 - adjusted_shift_amount) * 0x100000 | sign_bit,bit_shift_amount);\n  }\n  shifted_amount = ~(0x432 - adjusted_shift_amount);\n  if (0x1e < (int)shifted_amount) {\n    return CONCAT44(input,abs_input >> (shifted_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shifted_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shifted_amount - 0x1f,0xc)) {\n    shifted_amount = shifted_amount + 1;\n    return CONCAT44(sign_bit | abs_input >> (shifted_amount & 0xff),\n                    bit_shift_amount >> (shifted_amount & 0xff) | abs_input << (0x20 - shifted_amount & 0xff));\n  }\n  return CONCAT44(input,bit_shift_amount >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "bitwise_shift_0800856c",
                "param_1": "input",
                "uVar1": "bit_shift_amount",
                "uVar2": "abs_input",
                "uVar3": "shifted_amount",
                "iVar4": "leading_zeros",
                "uVar5": "adjusted_shift_amount",
                "uVar6": "sign_bit",
                "in_r12": "shifted_bits",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "is_negative_overflow"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "decode_and_shift_08008590",
            "code": "\nulonglong decode_and_shift_08008590(uint input,undefined4 param1,undefined4 param2,uint param3)\n\n{\n  uint upperBit;\n  uint shifted_input;\n  uint result;\n  uint shiftAmount;\n  uint temp;\n  int bitCount;\n  uint temp2;\n  uint remainingBits;\n  bool isZero;\n  bool isAllOnes;\n  bool overflow;\n  \n  temp = input << 1;\n  isAllOnes = temp == 0;\n  upperBit = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftAmount = (uint)((int)temp >> 3) >> 1;\n  result = upperBit | shiftAmount;\n  input = input << 0x1d;\n  if (!isAllOnes) {\n    param3 = temp & 0xff000000;\n    isAllOnes = param3 == 0;\n  }\n  if (!isAllOnes) {\n    isAllOnes = param3 == 0xff000000;\n  }\n  if (!isAllOnes) {\n    return combineBits(result,input) ^ 0x3800000000000000;\n  }\n  if ((temp & 0xffffff) == 0) {\n    return combineBits(result,input);\n  }\n  if (param3 == 0xff000000) {\n    return combineBits(result,input) | 0x8000000000000;\n  }\n  shifted_input = input;\n  temp = shiftAmount;\n  if (shiftAmount == 0) {\n    shifted_input = 0;\n    temp = input;\n  }\n  bitCount = leadingZerosCount(temp);\n  if (shiftAmount == 0) {\n    bitCount = bitCount + 0x20;\n  }\n  temp2 = bitCount - 0xb;\n  overflow = subtractionOverflow(temp2,0x20);\n  shiftAmount = bitCount - 0x2b;\n  isAllOnes = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if ((int)temp2 < 0x20) {\n    overflow = carryOverflow(shiftAmount,0xc);\n    bitCount = bitCount + -0x1f;\n    isAllOnes = bitCount < 0;\n    isZero = bitCount == 0;\n    shiftAmount = temp2;\n    if (!isZero && isAllOnes == overflow) {\n      shifted_input = temp << (temp2 & 0xff);\n      temp = temp >> (0xcU - bitCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isAllOnes != overflow) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  temp = temp << (shiftAmount & 0xff);\n  if (isZero || isAllOnes != overflow) {\n    temp = temp | shifted_input >> (remainingBits & 0xff);\n  }\n  if (isZero || isAllOnes != overflow) {\n    shifted_input = shifted_input << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp2 < 0x381) {\n    return combineBits(temp + (0x380 - temp2) * 0x100000 | upperBit,shifted_input);\n  }\n  shiftAmount = ~(0x380 - temp2);\n  if (0x1e < (int)shiftAmount) {\n    return combineBits(result,temp >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  bitCount = shiftAmount - 0x13;\n  if (bitCount == 0 || bitCount < 0 != carryOverflow(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return combineBits(upperBit | temp >> (shiftAmount & 0xff),\n                    shifted_input >> (shiftAmount & 0xff) | temp << (0x20 - shiftAmount & 0xff));\n  }\n  return combineBits(result,shifted_input >> (0x20 - (0xcU - bitCount) & 0xff) | temp << (0xcU - bitCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "decode_and_shift_08008590",
                "param_1": "input",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar1": "upperBit",
                "uVar2": "shifted_input",
                "uVar3": "result",
                "uVar4": "shiftAmount",
                "uVar5": "temp",
                "iVar6": "bitCount",
                "uVar7": "temp2",
                "in_r12": "remainingBits",
                "bVar8": "isZero",
                "bVar9": "isAllOnes",
                "bVar10": "overflow",
                "CONCAT44": "combineBits",
                "LZCOUNT": "leadingZerosCount",
                "SBORROW4": "subtractionOverflow",
                "SCARRY4": "carryOverflow"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint andResult;\n  uint shiftedVal2;\n  int sum;\n  uint count;\n  uint shiftedVal4;\n  uint bitShift;\n  uint finalValue;\n  bool isZero;\n  bool isNegative;\n  bool isOverflow;\n  ulonglong concatVal;\n  \n  concatVal = CONCAT44(value2,value1);\n  bitShift = 0x7ff;\n  shiftedVal2 = value2 >> 0x14 & 0x7ff;\n  isZero = shiftedVal2 == 0;\n  if (!isZero) {\n    shiftedVal4 = value4 >> 0x14 & 0x7ff;\n    isZero = shiftedVal4 == 0;\n  }\n  if (!isZero) {\n    isZero = shiftedVal2 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = shiftedVal4 == 0x7ff;\n  }\n  if (isZero) {\n    concatVal = FUN_0800881c();\n  }\n  andResult = (uint)(concatVal >> 0x20);\n  sum = shiftedVal2 + shiftedVal4;\n  shiftedVal2 = andResult ^ value4;\n  andResult = andResult & ~(bitShift << 0x15);\n  value4 = value4 & ~(bitShift << 0x15);\n  isZero = ((uint)concatVal | andResult << 0xc) == 0;\n  if (!isZero) {\n    isZero = (value3 | value4 << 0xc) == 0;\n  }\n  andResult = andResult | 0x100000;\n  value4 = value4 | 0x100000;\n  if (isZero) {\n    value3 = (uint)concatVal | value3;\n    value4 = (shiftedVal2 & 0x80000000 | andResult) ^ value4;\n    shiftedVal2 = bitShift >> 1;\n    isOverflow = SBORROW4(sum,shiftedVal2);\n    count = sum - shiftedVal2;\n    isZero = count == 0;\n    andResult = count;\n    if (!isZero && (int)shiftedVal2 <= sum) {\n      isOverflow = SBORROW4(bitShift,count);\n      andResult = bitShift - count;\n      isZero = bitShift == count;\n    }\n    if (!isZero && (int)andResult < 0 == isOverflow) {\n      value4 = value4 | count * 0x100000;\n    }\n    if (!isZero && (int)andResult < 0 == isOverflow) {\n      return CONCAT44(value4,value3);\n    }\n    value4 = value4 | 0x100000;\n    bitShift = 0;\n    isOverflow = SBORROW4(count,1);\n    count = count - 1;\n    isZero = count == 0;\n    shiftedVal2 = count;\n  }\n  else {\n    result = (concatVal & 0xffffffff) * (ulonglong)value3;\n    concatVal = (concatVal & 0xffffffff) * (ulonglong)value4 +\n             (ulonglong)andResult * (ulonglong)value3 + (result >> 0x20);\n    finalValue = (uint)concatVal;\n    temp = (ulonglong)andResult * (ulonglong)value4 + (concatVal >> 0x20);\n    bitShift = (uint)temp;\n    andResult = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      finalValue = finalValue | 1;\n    }\n    count = (sum + -0x3ff) - (uint)(andResult < 0x200);\n    if (andResult < 0x200) {\n      isZero = (finalValue & 0x80000000) != 0;\n      finalValue = finalValue << 1;\n      temp = CONCAT44(andResult * 2 + (uint)(CARRY4(bitShift,bitShift) || CARRY4(bitShift * 2,(uint)isZero)),\n                       bitShift * 2 + (uint)isZero);\n    }\n    value4 = shiftedVal2 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    value3 = (uint)temp << 0xb | finalValue >> 0x15;\n    bitShift = finalValue * 0x800;\n    isNegative = 0xfc < count;\n    isOverflow = SBORROW4(count,0xfd);\n    andResult = count - 0xfd;\n    isZero = andResult == 0;\n    shiftedVal2 = andResult;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < andResult;\n      isOverflow = SBORROW4(andResult,0x700);\n      shiftedVal2 = count - 0x7fd;\n      isZero = andResult == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < bitShift;\n      if (bitShift == 0x80000000) {\n        isZero = (finalValue >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(value4 + count * 0x100000 + (uint)CARRY4(value3,(uint)isZero),value3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)shiftedVal2 < 0 == isOverflow) {\n    return (ulonglong)(value4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(count,0x36);\n  isZero = (int)(count + 0x36) < 0;\n  isOverflow = count == 0xffffffca;\n  if (isOverflow || isZero != isNegative) {\n    value3 = 0;\n  }\n  if (isOverflow || isZero != isNegative) {\n    value4 = value4 & 0x80000000;\n  }\n  if (isOverflow || isZero != isNegative) {\n    return CONCAT44(value4,value3);\n  }\n  shiftedVal2 = -count;\n  andResult = shiftedVal2 - 0x20;\n  if (0x1f < (int)shiftedVal2) {\n    count = value3 >> (andResult & 0xff) | value4 << (0x20 - andResult & 0xff);\n    shiftedVal2 = (value4 >> (andResult & 0xff) & ~((value4 & 0x80000000) >> (andResult & 0xff))) -\n            ((int)count >> 0x1f);\n    if ((bitShift | value3 << (0x20 - andResult & 0xff) | count << 1) == 0) {\n      shiftedVal2 = shiftedVal2 & ~(count >> 0x1f);\n    }\n    return CONCAT44(value4,shiftedVal2) & 0x80000000ffffffff;\n  }\n  sum = shiftedVal2 - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(andResult,0xc)) {\n    finalValue = value3 << (count + 0x20 & 0xff);\n    andResult = value3 >> (shiftedVal2 & 0xff) | value4 << (count + 0x20 & 0xff);\n    count = andResult + -((int)finalValue >> 0x1f);\n    if ((bitShift | finalValue << 1) == 0) {\n      count = count & ~(finalValue >> 0x1f);\n    }\n    return CONCAT44((value4 & 0x80000000) +\n                    ((value4 & 0x7fffffff) >> (shiftedVal2 & 0xff)) +\n                    (uint)CARRY4(andResult,-((int)finalValue >> 0x1f)),count);\n  }\n  shiftedVal2 = 0xc - sum;\n  count = value3 << (shiftedVal2 & 0xff);\n  shiftedVal2 = value3 >> (0x20 - shiftedVal2 & 0xff) | value4 << (shiftedVal2 & 0xff);\n  andResult = shiftedVal2 + -((int)count >> 0x1f);\n  if ((bitShift | count << 1) == 0) {\n    andResult = andResult & ~(count >> 0x1f);\n  }\n  return CONCAT44((value4 & 0x80000000) + (uint)CARRY4(shiftedVal2,-((int)count >> 0x1f)),andResult);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "lVar2": "temp",
                "uVar3": "andResult",
                "uVar4": "shiftedVal2",
                "iVar5": "sum",
                "uVar6": "count",
                "unaff_r5": "shiftedVal4",
                "uVar7": "bitShift",
                "uVar8": "finalValue",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "isOverflow",
                "uVar12": "concatVal"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800056c",
                "FUN_0800a348",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_difference_0800881c",
            "code": "\nulonglong calculate_bitwise_difference_0800881c(uint first_uint,uint second_uint,uint third_uint,uint fourth_uint)\n\n{\n  uint temp_var1;\n  uint temp_var2;\n  uint mask;\n  uint temp_var4;\n  uint temp_var5;\n  bool is_zero;\n  \n  mask = temp_var5 & fourth_uint >> 0x14;\n  if (temp_var2 != temp_var5 && mask != temp_var5) {\n    is_zero = (first_uint | second_uint << 1) == 0;\n    if (!is_zero) {\n      is_zero = (third_uint | fourth_uint << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((second_uint ^ fourth_uint) & 0x80000000) << 0x20;\n    }\n    if (temp_var2 == 0) {\n      temp_var4 = second_uint & 0x80000000;\n      do {\n        temp_var1 = first_uint & 0x80000000;\n        first_uint = first_uint << 1;\n        second_uint = second_uint * 2 + (uint)(temp_var1 != 0);\n      } while ((second_uint & 0x100000) == 0);\n      second_uint = second_uint | temp_var4;\n      if (mask != 0) {\n        return CONCAT44(second_uint,first_uint);\n      }\n    }\n    do {\n      mask = third_uint & 0x80000000;\n      third_uint = third_uint << 1;\n      fourth_uint = fourth_uint * 2 + (uint)(mask != 0);\n    } while ((fourth_uint & 0x100000) == 0);\n    return CONCAT44(second_uint,first_uint);\n  }\n  is_zero = (first_uint | second_uint << 1) == 0;\n  if (is_zero) {\n    second_uint = fourth_uint;\n    first_uint = third_uint;\n  }\n  if (!is_zero) {\n    is_zero = (third_uint | fourth_uint << 1) == 0;\n  }\n  temp_var4 = second_uint;\n  if (((!is_zero) && ((temp_var2 != temp_var5 || ((first_uint | second_uint << 0xc) == 0)))) &&\n     ((mask != temp_var5 || (first_uint = third_uint, temp_var4 = fourth_uint, (third_uint | fourth_uint << 0xc) == 0)))) {\n    return (ulonglong)((second_uint ^ fourth_uint) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_var4,first_uint) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_difference_0800881c",
                "param_1": "first_uint",
                "param_2": "second_uint",
                "param_3": "third_uint",
                "param_4": "fourth_uint",
                "uVar1": "temp_var1",
                "unaff_r4": "temp_var2",
                "uVar2": "mask",
                "uVar3": "temp_var4",
                "in_r12": "temp_var5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_double_value_08008894",
            "code": "\nulonglong calculate_double_value_08008894(undefined4 input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  int temp_8;\n  uint temp_9;\n  uint temp_10;\n  uint temp_11;\n  uint temp_12;\n  uint temp_13;\n  uint temp_14;\n  bool flag_1;\n  bool flag_2;\n  bool flag_3;\n  undefined8 result;\n  \n  result = CONCAT44(input_2,input_1);\n  temp_14 = 0x7ff;\n  temp_7 = input_2 >> 0x14 & 0x7ff;\n  flag_1 = temp_7 == 0;\n  if (!flag_1) {\n    temp_10 = input_4 >> 0x14 & 0x7ff;\n    flag_1 = temp_10 == 0;\n  }\n  if (!flag_1) {\n    flag_1 = temp_7 == 0x7ff;\n  }\n  if (!flag_1) {\n    flag_1 = temp_10 == 0x7ff;\n  }\n  if (flag_1) {\n    result = FUN_08008a02();\n  }\n  temp_9 = (uint)((ulonglong)result >> 0x20);\n  temp_12 = (uint)result;\n  temp_8 = temp_7 - temp_10;\n  if ((input_3 | input_4 << 0xc) == 0) {\n    temp_7 = (temp_9 ^ input_4) & 0x80000000 | temp_9 & 0xfffff;\n    flag_3 = SCARRY4(temp_8,temp_14 >> 1);\n    temp_9 = temp_8 + (temp_14 >> 1);\n    flag_1 = (int)temp_9 < 0;\n    flag_2 = temp_9 == 0;\n    if (!flag_2 && flag_1 == flag_3) {\n      flag_3 = SBORROW4(temp_14,temp_9);\n      flag_1 = (int)(temp_14 - temp_9) < 0;\n      flag_2 = temp_14 == temp_9;\n    }\n    if (!flag_2 && flag_1 == flag_3) {\n      temp_7 = temp_7 | temp_9 * 0x100000;\n    }\n    if (!flag_2 && flag_1 == flag_3) {\n      return CONCAT44(temp_7,temp_12);\n    }\n    temp_7 = temp_7 | 0x100000;\n    temp_14 = 0;\n    flag_2 = SBORROW4(temp_9,1);\n    temp_9 = temp_9 - 1;\n    flag_1 = temp_9 == 0;\n    temp_3 = temp_9;\n  }\n  else {\n    temp_3 = (input_4 << 0xc) >> 4 | 0x10000000 | input_3 >> 0x18;\n    temp_14 = input_3 << 8;\n    temp_11 = (temp_9 << 0xc) >> 4 | 0x10000000 | temp_12 >> 0x18;\n    temp_12 = temp_12 * 0x100;\n    temp_7 = (temp_9 ^ input_4) & 0x80000000;\n    flag_1 = temp_3 <= temp_11;\n    if (temp_11 == temp_3) {\n      flag_1 = temp_14 <= temp_12;\n    }\n    temp_8 = temp_8 + (uint)flag_1;\n    temp_9 = temp_8 + 0x3fd;\n    if (flag_1 == false) {\n      temp_3 = temp_3 >> 1;\n      temp_14 = (uint)((input_3 >> 0x18 & 1) != 0) << 0x1f | temp_14 >> 1;\n    }\n    temp_13 = temp_12 - temp_14;\n    temp_11 = (temp_11 - temp_3) - (uint)(temp_12 < temp_14);\n    temp_4 = temp_3 >> 1;\n    temp_1 = (uint)((temp_3 & 1) != 0) << 0x1f | temp_14 >> 1;\n    temp_12 = 0x100000;\n    temp_3 = 0x80000;\n    while( true ) {\n      flag_1 = temp_1 <= temp_13;\n      if (temp_4 < temp_11 || temp_11 - temp_4 < (uint)flag_1) {\n        temp_13 = temp_13 - temp_1;\n        temp_12 = temp_12 | temp_3;\n        temp_11 = (temp_11 - temp_4) - (uint)!flag_1;\n      }\n      temp_5 = temp_4 >> 1;\n      temp_1 = (uint)((temp_4 & 1) != 0) << 0x1f | temp_1 >> 1;\n      flag_2 = temp_1 <= temp_13;\n      flag_1 = temp_11 - temp_5 < (uint)flag_2;\n      temp_14 = temp_11;\n      if (temp_5 < temp_11 || flag_1) {\n        temp_13 = temp_13 - temp_1;\n        temp_14 = (temp_11 - temp_5) - (uint)!flag_2;\n      }\n      if (temp_5 < temp_11 || flag_1) {\n        temp_12 = temp_12 | temp_3 >> 1;\n      }\n      temp_11 = temp_4 >> 2;\n      temp_2 = (uint)((temp_5 & 1) != 0) << 0x1f | temp_1 >> 1;\n      flag_2 = temp_2 <= temp_13;\n      flag_1 = temp_14 - temp_11 < (uint)flag_2;\n      temp_5 = temp_14;\n      if (temp_11 < temp_14 || flag_1) {\n        temp_13 = temp_13 - temp_2;\n        temp_5 = (temp_14 - temp_11) - (uint)!flag_2;\n      }\n      if (temp_11 < temp_14 || flag_1) {\n        temp_12 = temp_12 | temp_3 >> 2;\n      }\n      temp_6 = temp_4 >> 3;\n      temp_1 = (uint)((temp_11 & 1) != 0) << 0x1f | temp_2 >> 1;\n      flag_2 = temp_1 <= temp_13;\n      flag_1 = temp_5 - temp_6 < (uint)flag_2;\n      temp_11 = temp_5;\n      if (temp_6 < temp_5 || flag_1) {\n        temp_13 = temp_13 - temp_1;\n        temp_11 = (temp_5 - temp_6) - (uint)!flag_2;\n      }\n      if (temp_6 < temp_5 || flag_1) {\n        temp_12 = temp_12 | temp_3 >> 3;\n      }\n      temp_14 = temp_11 | temp_13;\n      if (temp_14 == 0) break;\n      temp_11 = temp_11 << 4 | temp_13 >> 0x1c;\n      temp_13 = temp_13 << 4;\n      temp_4 = temp_4 & 0xfffffff8 | temp_1 >> 0x1d;\n      temp_1 = (temp_2 >> 1) << 3;\n      temp_3 = temp_3 >> 4;\n      if (temp_3 == 0) {\n        temp_6 = temp_4;\n        if ((temp_7 & 0x100000) != 0) goto LAB_080089b2;\n        temp_7 = temp_7 | temp_12;\n        temp_12 = 0;\n        temp_3 = 0x80000000;\n      }\n    }\n    if ((temp_7 & 0x100000) == 0) {\n      temp_7 = temp_7 | temp_12;\n      temp_12 = 0;\n    }\nLAB_080089b2:\n    flag_3 = 0xfc < temp_9;\n    flag_2 = SBORROW4(temp_9,0xfd);\n    temp_4 = temp_8 + 0x300;\n    flag_1 = temp_4 == 0;\n    temp_3 = temp_4;\n    if (flag_3 && !flag_1) {\n      flag_3 = 0x6ff < temp_4;\n      flag_2 = SBORROW4(temp_4,0x700);\n      temp_3 = temp_8 - 0x400;\n      flag_1 = temp_4 == 0x700;\n    }\n    if (!flag_3 || flag_1) {\n      flag_1 = temp_6 <= temp_11;\n      if (temp_11 == temp_6) {\n        flag_1 = temp_1 <= temp_13;\n      }\n      if (temp_11 == temp_6 && temp_13 == temp_1) {\n        flag_1 = (temp_12 & 1) != 0;\n      }\n      return CONCAT44(temp_7 + temp_9 * 0x100000 + (uint)CARRY4(temp_12,(uint)flag_1),temp_12 + flag_1);\n    }\n  }\n  if (!flag_1 && (int)temp_3 < 0 == flag_2) {\n    return (ulonglong)(temp_7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag_3 = SCARRY4(temp_9,0x36);\n  flag_1 = (int)(temp_9 + 0x36) < 0;\n  flag_2 = temp_9 == 0xffffffca;\n  if (flag_2 || flag_1 != flag_3) {\n    temp_12 = 0;\n  }\n  if (flag_2 || flag_1 != flag_3) {\n    temp_7 = temp_7 & 0x80000000;\n  }\n  if (flag_2 || flag_1 != flag_3) {\n    return CONCAT44(temp_7,temp_12);\n  }\n  temp_3 = -temp_9;\n  temp_11 = temp_3 - 0x20;\n  if (0x1f < (int)temp_3) {\n    temp_3 = temp_12 >> (temp_11 & 0xff) | temp_7 << (0x20 - temp_11 & 0xff);\n    temp_9 = (temp_7 >> (temp_11 & 0xff) & ~((temp_7 & 0x80000000) >> (temp_11 & 0xff))) -\n            ((int)temp_3 >> 0x1f);\n    if ((temp_14 | temp_12 << (0x20 - temp_11 & 0xff) | temp_3 << 1) == 0) {\n      temp_9 = temp_9 & ~(temp_3 >> 0x1f);\n    }\n    return CONCAT44(temp_7,temp_9) & 0x80000000ffffffff;\n  }\n  temp_8 = temp_3 - 0x14;\n  if (temp_8 != 0 && temp_8 < 0 == SCARRY4(temp_11,0xc)) {\n    temp_9 = 0xc - temp_8;\n    temp_3 = temp_12 << (temp_9 & 0xff);\n    temp_12 = temp_12 >> (0x20 - temp_9 & 0xff) | temp_7 << (temp_9 & 0xff);\n    temp_9 = temp_12 + -((int)temp_3 >> 0x1f);\n    if ((temp_14 | temp_3 << 1) == 0) {\n      temp_9 = temp_9 & ~(temp_3 >> 0x1f);\n    }\n    return CONCAT44((temp_7 & 0x80000000) + (uint)CARRY4(temp_12,-((int)temp_3 >> 0x1f)),temp_9);\n  }\n  temp_11 = temp_12 << (temp_9 + 0x20 & 0xff);\n  temp_12 = temp_12 >> (temp_3 & 0xff) | temp_7 << (temp_9 + 0x20 & 0xff);\n  temp_9 = temp_12 + -((int)temp_11 >> 0x1f);\n  if ((temp_14 | temp_11 << 1) == 0) {\n    temp_9 = temp_9 & ~(temp_11 >> 0x1f);\n  }\n  return CONCAT44((temp_7 & 0x80000000) +\n                  ((temp_7 & 0x7fffffff) >> (temp_3 & 0xff)) +\n                  (uint)CARRY4(temp_12,-((int)temp_11 >> 0x1f)),temp_9);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_double_value_08008894",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6",
                "uVar7": "temp_7",
                "iVar8": "temp_8",
                "uVar9": "temp_9",
                "unaff_r5": "temp_10",
                "uVar10": "temp_11",
                "uVar11": "temp_12",
                "uVar12": "temp_13",
                "uVar13": "temp_14",
                "bVar14": "flag_1",
                "bVar15": "flag_2",
                "bVar16": "flag_3",
                "uVar17": "result"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "extracted_binary_function_08008a02",
            "code": "\nulonglong extractedBinaryFunction_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool isZero;\n  \n  temp3 = temp5 & input4 >> 0x14;\n  temp4 = input2;\n  if (temp2 != temp5 || temp3 != temp5) {\n    if (temp2 == temp5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp4 = input4, temp3 != temp5)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp3 == temp5) {\n      input1 = input3;\n      temp4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (temp2 == 0) {\n          temp4 = input2 & 0x80000000;\n          do {\n            temp1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(temp1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp4;\n          if (temp3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "extracted_binary_function_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "temp5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "compare_inputs_08008a74",
            "code": "\nuint compare_inputs_08008a74(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  bool areInputsZero;\n  bool isOutputZero;\n  \n  if (((int)(input2 << 1) >> 0x15 == -1 || (int)(input4 << 1) >> 0x15 == -1) &&\n     ((((int)(input2 << 1) >> 0x15 == -1 && ((input1 | input2 << 0xc) != 0)) ||\n      (((int)(input4 << 1) >> 0x15 == -1 && ((input3 | input4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  areInputsZero = (input1 | input2 << 1) == 0;\n  if (areInputsZero) {\n    areInputsZero = (input3 | input4 << 1) == 0;\n  }\n  if (!areInputsZero) {\n    areInputsZero = input2 == input4;\n  }\n  if (areInputsZero) {\n    areInputsZero = input1 == input3;\n  }\n  if (!areInputsZero) {\n    temp1 = input2 ^ input4;\n    areInputsZero = temp1 == 0;\n    if (-1 < signedTemp1) {\n      areInputsZero = input2 == input4;\n    }\n    isOutputZero = -1 < signedTemp1 && input4 <= input2;\n    if (areInputsZero) {\n      isOutputZero = input3 <= input1;\n    }\n    input4 = (int)input4 >> 0x1f;\n    if (!isOutputZero) {\n      input4 = invertedParam4;\n    }\n    return input4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "compare_inputs_08008a74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "bVar2": "areInputsZero",
                "bVar3": "isOutputZero",
                "(int)uVar1": "signedTemp1",
                "~param_4": "invertedParam4"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008b00(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_system_08008b00",
            "code": "\nundefined4 initializeSystem_08008b00(undefined4 inputValue)\n\n{\n  FUN_08008a74();\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_system_08008b00",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_not_null_08008b10",
            "code": "\nbool check_if_not_null_08008b10(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_not_null_08008b10",
                "in_ZR": "input_char"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_null_terminated_08008b24",
            "code": "\nbool is_null_terminated_08008b24(void)\n\n{\n  char character;\n  \n  FUN_08008b00();\n  return character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_null_terminated_08008b24",
                "in_CY": "character"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_zero_carry_08008b4c",
            "code": "\nbool checkZeroCarry_08008b4c(void)\n\n{\n  undefined isZeroResult;\n  undefined isCarryFlag;\n  \n  FUN_08008af0();\n  return !(bool)isCarryFlag || (bool)isZeroResult;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_zero_carry_08008b4c",
                "in_ZR": "isZeroResult",
                "in_CY": "isCarryFlag"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_if_string_is_empty_08008b60",
            "code": "\nbool check_if_string_is_empty_08008b60(void)\n\n{\n  char input_character;\n  \n  FUN_08008af0();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_if_string_is_empty_08008b60",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_parameters_08008b74",
            "code": "\nundefined4 check_parameters_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_parameters_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "scale_and_shift_08008ba0",
            "code": "\nuint scaleAndShift_08008ba0(uint input_1,uint input_2)\n\n{\n  uint scaledValue;\n  int scaledSum;\n  uint shiftAmount;\n  \n  scaledSum = input_2 * 2 + 0x200000;\n  if (input_2 * 2 < 0xffe00000) {\n    if (-1 < scaledSum) {\n      return 0;\n    }\n    scaledValue = scaledSum >> 0x15;\n    shiftAmount = -scaledValue - 0x3e1;\n    if (scaledValue < 0xfffffc20 && shiftAmount != 0) {\n      scaledValue = (input_2 << 0xb | 0x80000000 | input_1 >> 0x15) >> (shiftAmount & 0xff);\n      if ((input_2 & 0x80000000) != 0) {\n        scaledValue = -scaledValue;\n      }\n      return scaledValue;\n    }\n  }\n  else if ((input_1 | input_2 << 0xc) != 0) {\n    return 0;\n  }\n  input_2 = input_2 & 0x80000000;\n  if (input_2 == 0) {\n    input_2 = 0x7fffffff;\n  }\n  return input_2;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "scale_and_shift_08008ba0",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "scaledValue",
                "iVar2": "scaledSum",
                "uVar3": "shiftAmount"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shifted_value_08008bf0",
            "code": "\nuint calculateShiftedValue_08008bf0(uint input1,uint input2)\n\n{\n  int tempVar1;\n  uint tempVar2;\n  \n  if ((input2 & 0x80000000) != 0) {\n    return 0;\n  }\n  tempVar1 = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < tempVar1) {\n      return 0;\n    }\n    tempVar2 = -(tempVar1 >> 0x15) - 0x3e1;\n    if (-1 < (int)tempVar2) {\n      return (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (tempVar2 & 0xff);\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_floating_point_08008c30",
            "code": "\nuint calculateFloatingPoint_08008c30(uint inputA,uint inputB)\n\n{\n  uint result;\n  uint multipliedB;\n  uint shiftedB;\n  uint comparisonValue;\n  bool isZero;\n  bool isLessThanSeven;\n  \n  multipliedB = inputB * 2;\n  isLessThanSeven = multipliedB < 0x70000000;\n  shiftedB = multipliedB + 0x90000000;\n  result = shiftedB;\n  if (!isLessThanSeven) {\n    comparisonValue = multipliedB + 0x8fe00000;\n    result = comparisonValue;\n  }\n  isZero = result == 0;\n  if (!isLessThanSeven && shiftedB >= 0x200000) {\n    isZero = comparisonValue == 0x1fc00000;\n  }\n  if (((isLessThanSeven || shiftedB < 0x200000) || 0x1fc00000 < comparisonValue) || isZero) {\n    if ((inputB & 0x40000000) != 0) {\n      if (((int)multipliedB >> 0x15 == -1) && ((inputA | inputB << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return inputB & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(multipliedB + 0x92e00000) < 0 != calculateOverflow(shiftedB,0x2e00000)) {\n      return inputB & 0x80000000;\n    }\n    multipliedB = 0x18 - (multipliedB + 0x92e00000 >> 0x15);\n    result = inputA >> (multipliedB & 0xff);\n    if (inputA << (0x20 - multipliedB & 0xff) != 0) {\n      result = result | 1;\n    }\n    shiftedB = inputB & 0x1fffff | 0x100000;\n    inputA = result | shiftedB << (0x20 - multipliedB & 0xff);\n    shiftedB = (shiftedB >> (multipliedB & 0xff)) << 1;\n  }\n  result = (inputB & 0x80000000 | inputA >> 0x1d) + shiftedB * 4 + (uint)(0x7fffffff < inputA * 8);\n  if (inputA * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_floating_point_08008c30",
                "param_1": "inputA",
                "param_2": "inputB",
                "uVar1": "result",
                "uVar2": "multipliedB",
                "uVar3": "shiftedB",
                "in_r12": "comparisonValue",
                "bVar4": "isZero",
                "bVar5": "isLessThanSeven",
                "SCARRY4": "calculateOverflow"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_08008cd8",
            "code": "\nuint calculate_08008cd8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shiftedBits;\n  int shiftedBits2;\n  uint xoredBits1;\n  uint xoredBits2;\n  uint leftShiftedInput1;\n  uint adjustedInput1;\n  uint difference;\n  bool isEqual;\n  \n  xoredBits1 = input2 ^ 0x80000000;\n  leftShiftedInput1 = input1 << 1;\n  isEqual = leftShiftedInput1 == 0;\n  if (!isEqual) {\n    input4 = input2 << 1;\n    isEqual = input4 == 0;\n  }\n  if (!isEqual) {\n    isEqual = leftShiftedInput1 == input4;\n  }\n  shiftedBits = (int)leftShiftedInput1 >> 0x18;\n  if (!isEqual) {\n    isEqual = shiftedBits == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)input4 >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shiftedBits2 = (int)(input2 << 1) >> 0x18;\n    if (shiftedBits == -1 || shiftedBits2 == -1) {\n      leftShiftedInput1 = xoredBits1;\n      if (shiftedBits == -1) {\n        leftShiftedInput1 = input1;\n      }\n      if (shiftedBits != -1 || shiftedBits2 != -1) {\n        xoredBits1 = leftShiftedInput1;\n      }\n      isEqual = (leftShiftedInput1 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (xoredBits1 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = leftShiftedInput1 == xoredBits1;\n      }\n      if (!isEqual) {\n        leftShiftedInput1 = leftShiftedInput1 | 0x400000;\n      }\n      return leftShiftedInput1;\n    }\n    if (((input1 ^ xoredBits1) & 0x7fffffff) != 0) {\n      if (leftShiftedInput1 == 0) {\n        input1 = xoredBits1;\n      }\n      return input1;\n    }\n    if (input1 != xoredBits1) {\n      return 0;\n    }\n    if ((leftShiftedInput1 & 0xff000000) == 0) {\n      xoredBits1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        xoredBits1 = xoredBits1 | 0x80000000;\n      }\n      return xoredBits1;\n    }\n    if (leftShiftedInput1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  leftShiftedInput1 = leftShiftedInput1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - leftShiftedInput1;\n  isEqual = difference != 0;\n  adjustedInput1 = leftShiftedInput1;\n  if (isEqual && leftShiftedInput1 <= input4) {\n    adjustedInput1 = leftShiftedInput1 + difference;\n  }\n  if (isEqual && leftShiftedInput1 <= input4) {\n    xoredBits1 = xoredBits1 ^ input1;\n  }\n  if (isEqual && leftShiftedInput1 <= input4) {\n    input1 = input1 ^ xoredBits1;\n  }\n  if (isEqual && leftShiftedInput1 <= input4) {\n    xoredBits1 = xoredBits1 ^ input1;\n  }\n  if (input4 < leftShiftedInput1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  leftShiftedInput1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    leftShiftedInput1 = -leftShiftedInput1;\n  }\n  xoredBits2 = xoredBits1 & 0xffffff | 0x800000;\n  if ((xoredBits1 & 0x80000000) != 0) {\n    xoredBits2 = -xoredBits2;\n  }\n  if (adjustedInput1 == difference) {\n    xoredBits2 = xoredBits2 ^ 0x800000;\n    if (adjustedInput1 == 0) {\n      leftShiftedInput1 = leftShiftedInput1 ^ 0x800000;\n      adjustedInput1 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  leftShiftedInput1 = leftShiftedInput1 + ((int)xoredBits2 >> (difference & 0xff));\n  xoredBits2 = xoredBits2 << (0x20 - difference & 0xff);\n  input1 = leftShiftedInput1 & 0x80000000;\n  if ((int)leftShiftedInput1 < 0) {\n    isEqual = xoredBits2 != 0;\n    xoredBits2 = -xoredBits2;\n    leftShiftedInput1 = -leftShiftedInput1 - (uint)isEqual;\n  }\n  if (leftShiftedInput1 < 0x800000) {\n    xoredBits1 = xoredBits2 & 0x80000000;\n    xoredBits2 = xoredBits2 << 1;\n    leftShiftedInput1 = leftShiftedInput1 * 2 + (uint)(xoredBits1 != 0);\n    xoredBits1 = adjustedInput1 - 2;\n    if (adjustedInput1 - 1 == 0 || leftShiftedInput1 < 0x800000) {\n      difference = leadingZerosCount(leftShiftedInput1) - 8;\n      leftShiftedInput1 = leftShiftedInput1 << (difference & 0xff);\n      if ((int)xoredBits1 < (int)difference) {\n        leftShiftedInput1 = leftShiftedInput1 >> (-(xoredBits1 - difference) & 0xff);\n      }\n      else {\n        leftShiftedInput1 = leftShiftedInput1 + (xoredBits1 - difference) * 0x800000;\n      }\n      return leftShiftedInput1 | input1;\n    }\n  }\n  else {\n    xoredBits1 = adjustedInput1 - 1;\n    if (0xffffff < leftShiftedInput1) {\n      xoredBits1 = leftShiftedInput1 & 1;\n      leftShiftedInput1 = leftShiftedInput1 >> 1;\n      xoredBits2 = (uint)(xoredBits1 != 0) << 0x1f | xoredBits2 >> 1;\n      xoredBits1 = adjustedInput1;\n      if (0xfd < adjustedInput1) goto LAB_08008e12;\n    }\n  }\n  leftShiftedInput1 = leftShiftedInput1 + xoredBits1 * 0x800000 + (uint)(0x7fffffff < xoredBits2);\n  if (xoredBits2 == 0x80000000) {\n    leftShiftedInput1 = leftShiftedInput1 & 0xfffffffe;\n  }\n  return leftShiftedInput1 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_08008cd8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftedBits",
                "iVar2": "shiftedBits2",
                "uVar3": "xoredBits1",
                "uVar4": "xoredBits2",
                "uVar5": "leftShiftedInput1",
                "uVar6": "adjustedInput1",
                "uVar7": "difference",
                "bVar8": "isEqual",
                "LZCOUNT": "leadingZerosCount"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "process_numbers_08008cdc",
            "code": "\nuint processNumbers_08008cdc(uint input1,uint input2,undefined4 unusedVar,uint unusedVar2)\n\n{\n  int shiftedInput1;\n  int shiftedInput2;\n  uint result1;\n  uint shiftedResult1;\n  uint shiftedResult2;\n  uint difference;\n  bool isConditionTrue;\n  \n  shiftedResult1 = input1 << 1;\n  isConditionTrue = shiftedResult1 == 0;\n  if (!isConditionTrue) {\n    unusedVar2 = input2 << 1;\n    isConditionTrue = unusedVar2 == 0;\n  }\n  if (!isConditionTrue) {\n    isConditionTrue = shiftedResult1 == unusedVar2;\n  }\n  shiftedInput1 = (int)shiftedResult1 >> 0x18;\n  if (!isConditionTrue) {\n    isConditionTrue = shiftedInput1 == -1;\n  }\n  if (!isConditionTrue) {\n    isConditionTrue = (int)unusedVar2 >> 0x18 == -1;\n  }\n  if (isConditionTrue) {\n    shiftedInput2 = (int)(input2 << 1) >> 0x18;\n    if (shiftedInput1 == -1 || shiftedInput2 == -1) {\n      shiftedResult1 = input2;\n      if (shiftedInput1 == -1) {\n        shiftedResult1 = input1;\n      }\n      if (shiftedInput1 != -1 || shiftedInput2 != -1) {\n        input2 = shiftedResult1;\n      }\n      isConditionTrue = (shiftedResult1 & 0x7fffff) == 0;\n      if (isConditionTrue) {\n        isConditionTrue = (input2 & 0x7fffff) == 0;\n      }\n      if (isConditionTrue) {\n        isConditionTrue = shiftedResult1 == input2;\n      }\n      if (!isConditionTrue) {\n        shiftedResult1 = shiftedResult1 | 0x400000;\n      }\n      return shiftedResult1;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (shiftedResult1 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((shiftedResult1 & 0xff000000) == 0) {\n      shiftedResult1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        shiftedResult1 = shiftedResult1 | 0x80000000;\n      }\n      return shiftedResult1;\n    }\n    if (shiftedResult1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  shiftedResult1 = shiftedResult1 >> 0x18;\n  unusedVar2 = unusedVar2 >> 0x18;\n  difference = unusedVar2 - shiftedResult1;\n  isConditionTrue = difference != 0;\n  shiftedResult2 = shiftedResult1;\n  if (isConditionTrue && shiftedResult1 <= unusedVar2) {\n    shiftedResult2 = shiftedResult1 + difference;\n  }\n  if (isConditionTrue && shiftedResult1 <= unusedVar2) {\n    input2 = input2 ^ input1;\n  }\n  if (isConditionTrue && shiftedResult1 <= unusedVar2) {\n    input1 = input1 ^ input2;\n  }\n  if (isConditionTrue && shiftedResult1 <= unusedVar2) {\n    input2 = input2 ^ input1;\n  }\n  if (unusedVar2 < shiftedResult1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  shiftedResult1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    shiftedResult1 = -shiftedResult1;\n  }\n  result1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    result1 = -result1;\n  }\n  if (shiftedResult2 == difference) {\n    result1 = result1 ^ 0x800000;\n    if (shiftedResult2 == 0) {\n      shiftedResult1 = shiftedResult1 ^ 0x800000;\n      shiftedResult2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shiftedResult1 = shiftedResult1 + ((int)result1 >> (difference & 0xff));\n  result1 = result1 << (0x20 - difference & 0xff);\n  input1 = shiftedResult1 & 0x80000000;\n  if ((int)shiftedResult1 < 0) {\n    isConditionTrue = result1 != 0;\n    result1 = -result1;\n    shiftedResult1 = -shiftedResult1 - (uint)isConditionTrue;\n  }\n  if (shiftedResult1 < 0x800000) {\n    difference = result1 & 0x80000000;\n    result1 = result1 << 1;\n    shiftedResult1 = shiftedResult1 * 2 + (uint)(difference != 0);\n    difference = shiftedResult2 - 2;\n    if (shiftedResult2 - 1 == 0 || shiftedResult1 < 0x800000) {\n      shiftedResult2 = LZCOUNT(shiftedResult1) - 8;\n      shiftedResult1 = shiftedResult1 << (shiftedResult2 & 0xff);\n      if ((int)difference < (int)shiftedResult2) {\n        shiftedResult1 = shiftedResult1 >> (-(difference - shiftedResult2) & 0xff);\n      }\n      else {\n        shiftedResult1 = shiftedResult1 + (difference - shiftedResult2) * 0x800000;\n      }\n      return shiftedResult1 | input1;\n    }\n  }\n  else {\n    difference = shiftedResult2 - 1;\n    if (0xffffff < shiftedResult1) {\n      difference = shiftedResult1 & 1;\n      shiftedResult1 = shiftedResult1 >> 1;\n      result1 = (uint)(difference != 0) << 0x1f | result1 >> 1;\n      difference = shiftedResult2;\n      if (0xfd < shiftedResult2) goto LAB_08008e12;\n    }\n  }\n  shiftedResult1 = shiftedResult1 + difference * 0x800000 + (uint)(0x7fffffff < result1);\n  if (result1 == 0x80000000) {\n    shiftedResult1 = shiftedResult1 & 0xfffffffe;\n  }\n  return shiftedResult1 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "process_numbers_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unusedVar",
                "param_4": "unusedVar2",
                "iVar1": "shiftedInput1",
                "iVar2": "shiftedInput2",
                "uVar3": "result1",
                "uVar4": "shiftedResult1",
                "uVar5": "shiftedResult2",
                "uVar6": "difference",
                "bVar7": "isConditionTrue"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_new_value_08008e3c",
            "code": "\nuint calculateNewValue_08008e3c(uint inputValue)\n\n{\n  uint leadingZeroCount;\n  uint shiftCount;\n  int intermediateValue;\n  uint bitwiseValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroCount = LZCOUNT(inputValue);\n  shiftCount = leadingZeroCount - 8;\n  intermediateValue = shiftCount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroCount) {\n    bitwiseValue = 0 << (shiftCount & 0xff);\n    leadingZeroCount = intermediateValue + (inputValue << (shiftCount & 0xff)) +\n            (0U >> (0x20 - shiftCount & 0xff)) + (uint)(0x7fffffff < bitwiseValue);\n    if (bitwiseValue == 0x80000000) {\n      leadingZeroCount = leadingZeroCount & 0xfffffffe;\n    }\n    return leadingZeroCount;\n  }\n  shiftCount = inputValue << leadingZeroCount + 0x18;\n  leadingZeroCount = intermediateValue + ((inputValue >> (0x20 - (leadingZeroCount + 0x18) & 0xff)) - ((int)shiftCount >> 0x1f));\n  if ((shiftCount & 0x7fffffff) == 0) {\n    leadingZeroCount = leadingZeroCount & ~(shiftCount >> 0x1f);\n  }\n  return leadingZeroCount;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_new_value_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroCount",
                "uVar2": "shiftCount",
                "iVar3": "intermediateValue",
                "uVar4": "bitwiseValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "calculate_unsigned_magnitude_08008e44",
            "code": "\nuint calculateUnsignedMagnitude_08008e44(uint inputValue)\n\n{\n  uint leadingZeroes;\n  uint shiftAmount;\n  uint inputSignBit;\n  int offset;\n  \n  inputSignBit = inputValue & 0x80000000;\n  if ((int)inputSignBit < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = countLeadingZeroes(inputValue);\n  shiftAmount = leadingZeroes - 8;\n  offset = ((inputSignBit | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeroes) {\n    leadingZeroes = 0 << (shiftAmount & 0xff);\n    inputSignBit = offset + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeroes);\n    if (leadingZeroes == 0x80000000) {\n      inputSignBit = inputSignBit & 0xfffffffe;\n    }\n    return inputSignBit;\n  }\n  shiftAmount = inputValue << leadingZeroes + 0x18;\n  inputSignBit = offset + ((inputValue >> (0x20 - (leadingZeroes + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    inputSignBit = inputSignBit & ~(shiftAmount >> 0x1f);\n  }\n  return inputSignBit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "calculate_unsigned_magnitude_08008e44",
                "param_1": "inputValue",
                "uVar1": "leadingZeroes",
                "uVar2": "shiftAmount",
                "uVar3": "inputSignBit",
                "iVar4": "offset",
                "LZCOUNT": "countLeadingZeroes"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_floating_point_08008eec",
            "code": "\nuint calculateFloatingPoint_08008eec(uint num1,uint num2,undefined4 flag,uint flag2)\n\n{\n  longlong lVar1;\n  uint result;\n  uint exponent1;\n  int exponentSum;\n  int overflow;\n  uint product1;\n  int iterations;\n  uint temp;\n  bool conditionFlag1;\n  bool conditionFlag2;\n  \n  exponent1 = num1 >> 0x17 & 0xff;\n  conditionFlag1 = exponent1 == 0;\n  if (!conditionFlag1) {\n    flag2 = num2 >> 0x17 & 0xff;\n    conditionFlag1 = flag2 == 0;\n  }\n  if (!conditionFlag1) {\n    conditionFlag1 = exponent1 == 0xff;\n  }\n  if (!conditionFlag1) {\n    conditionFlag1 = flag2 == 0xff;\n  }\n  if (conditionFlag1) {\n    flag2 = num2 >> 0x17 & 0xff;\n    if (exponent1 == 0xff || flag2 == 0xff) {\n      conditionFlag1 = num1 == 0 || num1 == 0x80000000;\n      result = num2;\n      if (num1 != 0 && num1 != 0x80000000) {\n        conditionFlag1 = num2 == 0;\n        result = num1;\n      }\n      if (!conditionFlag1) {\n        conditionFlag1 = num2 == 0x80000000;\n      }\n      temp = result;\n      if (((conditionFlag1) || ((exponent1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((flag2 == 0xff && (temp = num2, (num2 & 0x7fffff) != 0)))) {\n        return temp | 0x7fc00000;\n      }\n      result = result ^ num2;\n      goto LAB_0800903c;\n    }\n    conditionFlag1 = (num1 & 0x7fffffff) == 0;\n    if (!conditionFlag1) {\n      conditionFlag1 = (num2 & 0x7fffffff) == 0;\n    }\n    if (conditionFlag1) {\n      return (num1 ^ num2) & 0x80000000;\n    }\n    conditionFlag1 = exponent1 == 0;\n    result = num1 & 0x80000000;\n    while( true ) {\n      if (conditionFlag1) {\n        num1 = num1 << 1;\n        conditionFlag1 = (num1 & 0x800000) == 0;\n      }\n      if (!conditionFlag1) break;\n      exponent1 = exponent1 - 1;\n    }\n    num1 = num1 | result;\n    conditionFlag1 = flag2 == 0;\n    result = num2 & 0x80000000;\n    while( true ) {\n      if (conditionFlag1) {\n        num2 = num2 << 1;\n        conditionFlag1 = (num2 & 0x800000) == 0;\n      }\n      if (!conditionFlag1) break;\n      flag2 = flag2 - 1;\n    }\n    num2 = num2 | result;\n  }\n  exponentSum = exponent1 + flag2;\n  temp = num1 ^ num2;\n  exponent1 = num1 << 9;\n  conditionFlag1 = exponent1 == 0;\n  if (!conditionFlag1) {\n    num2 = num2 << 9;\n    conditionFlag1 = num2 == 0;\n  }\n  if (conditionFlag1) {\n    if (exponent1 == 0) {\n      num2 = num2 << 9;\n    }\n    result = temp & 0x80000000 | num1 & 0x7fffff | num2 >> 9;\n    conditionFlag2 = SBORROW4(exponentSum,0x7f);\n    overflow = exponentSum + -0x7f;\n    conditionFlag1 = overflow == 0;\n    iterations = overflow;\n    if (!conditionFlag1 && 0x7e < exponentSum) {\n      conditionFlag2 = SBORROW4(0xff,overflow);\n      iterations = 0xff - overflow;\n      conditionFlag1 = overflow == 0xff;\n    }\n    if (!conditionFlag1 && iterations < 0 == conditionFlag2) {\n      result = result | overflow * 0x800000;\n    }\n    if (!conditionFlag1 && iterations < 0 == conditionFlag2) {\n      return result;\n    }\n    result = result | 0x800000;\n    product1 = 0;\n    conditionFlag2 = SBORROW4(overflow,1);\n    temp = exponentSum - 0x80;\n    conditionFlag1 = temp == 0;\n    exponent1 = temp;\n  }\n  else {\n    lVar1 = (ulonglong)(exponent1 >> 5 | 0x8000000) * (ulonglong)(num2 >> 5 | 0x8000000);\n    product1 = (uint)lVar1;\n    result = (uint)((ulonglong)lVar1 >> 0x20);\n    conditionFlag1 = result < 0x800000;\n    if (conditionFlag1) {\n      result = result << 1;\n    }\n    if (conditionFlag1) {\n      result = result | product1 >> 0x1f;\n      product1 = product1 << 1;\n    }\n    result = temp & 0x80000000 | result;\n    temp = (exponentSum + -0x7f) - (uint)conditionFlag1;\n    conditionFlag2 = SBORROW4(temp,0xfd);\n    conditionFlag1 = temp == 0xfd;\n    exponent1 = temp - 0xfd;\n    if (temp < 0xfe) {\n      result = result + temp * 0x800000 + (uint)(0x7fffffff < product1);\n      if (product1 == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (conditionFlag1 || (int)exponent1 < 0 != conditionFlag2) {\n    conditionFlag1 = (int)(temp + 0x19) < 0;\n    if (temp == 0xffffffe7 || conditionFlag1 != SCARRY4(temp,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (temp != 0xffffffe7 && conditionFlag1 == SCARRY4(temp,0x19)) {\n      exponent1 = (result << 1) >> (-temp & 0xff);\n      temp = result << (temp + 0x20 & 0xff);\n      exponent1 = ((uint)((result & 0x80000000) != 0) << 0x1f | exponent1 >> 1) + (uint)((byte)exponent1 & 1);\n      if ((product1 | temp << 1) == 0) {\n        exponent1 = exponent1 & ~(temp >> 0x1f);\n      }\n      return exponent1;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_floating_point_08008eec",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "flag",
                "param_4": "flag2",
                "uVar2": "result",
                "uVar3": "exponent1",
                "uVar6": "product1",
                "uVar8": "temp",
                "iVar4": "exponentSum",
                "iVar5": "overflow",
                "iVar7": "iterations",
                "bVar9": "conditionFlag1",
                "bVar10": "conditionFlag2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_operations_08009054",
            "code": "\nuint calculateFloatingPointOperations_08009054(uint input1,uint input2,undefined4 value1,uint value2)\n\n{\n  uint temp1;\n  uint temp2;\n  int difference;\n  uint temp3;\n  int sum;\n  uint result;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp2 = input1 >> 0x17 & 0xff;\n  condition1 = temp2 == 0;\n  if (!condition1) {\n    value2 = input2 >> 0x17 & 0xff;\n    condition1 = value2 == 0;\n  }\n  if (!condition1) {\n    condition1 = temp2 == 0xff;\n  }\n  if (!condition1) {\n    condition1 = value2 == 0xff;\n  }\n  if (condition1) {\n    value2 = input2 >> 0x17 & 0xff;\n    result = input1;\n    if (temp2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (result = input2, value2 == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (value2 == 0xff) {\n        result = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      condition1 = (input1 & 0x7fffffff) == 0;\n      if (!condition1) {\n        condition1 = (input2 & 0x7fffffff) == 0;\n      }\n      if (!condition1) {\n        condition1 = temp2 == 0;\n        result = input1 & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            input1 = input1 << 1;\n            condition1 = (input1 & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          temp2 = temp2 - 1;\n        }\n        input1 = input1 | result;\n        condition1 = value2 == 0;\n        result = input2 & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            input2 = input2 << 1;\n            condition1 = (input2 & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          value2 = value2 - 1;\n        }\n        input2 = input2 | result;\n        goto LAB_0800906c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_0800906c:\n    difference = temp2 - value2;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      condition3 = SCARRY4(difference,0x7f);\n      sum = difference + 0x7f;\n      condition1 = sum < 0;\n      condition2 = sum == 0;\n      if (!condition2 && condition1 == condition3) {\n        condition3 = SBORROW4(0xff,sum);\n        condition1 = 0xff - sum < 0;\n        condition2 = sum == 0xff;\n      }\n      if (!condition2 && condition1 == condition3) {\n        input1 = input1 | sum * 0x800000;\n      }\n      if (!condition2 && condition1 == condition3) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      temp2 = 0;\n      condition2 = SBORROW4(sum,1);\n      temp3 = difference + 0x7e;\n      condition1 = temp3 == 0;\n      result = temp3;\n    }\n    else {\n      temp1 = (input2 << 9) >> 4 | 0x10000000;\n      temp2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      condition1 = temp1 <= temp2;\n      if (!condition1) {\n        temp2 = temp2 << 1;\n      }\n      temp3 = difference + 0x7d + (uint)condition1;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          input1 = input1 | result;\n        }\n        condition1 = temp1 >> 1 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (condition1) {\n          input1 = input1 | result >> 1;\n        }\n        condition1 = temp1 >> 2 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (condition1) {\n          input1 = input1 | result >> 2;\n        }\n        condition1 = temp1 >> 3 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (condition1) {\n          input1 = input1 | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        condition1 = temp2 == 0;\n        if (!condition1) {\n          result = result >> 4;\n          condition1 = result == 0;\n        }\n      } while (!condition1);\n      condition2 = SBORROW4(temp3,0xfd);\n      condition1 = temp3 == 0xfd;\n      result = temp3 - 0xfd;\n      if (temp3 < 0xfe) {\n        input1 = input1 + temp3 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (condition1 || (int)result < 0 != condition2) {\n      condition1 = (int)(temp3 + 0x19) < 0;\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        return input1;\n      }\n      result = (input1 << 1) >> (-temp3 & 0xff);\n      temp3 = input1 << (temp3 + 0x20 & 0xff);\n      result = ((uint)((input1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | temp3 << 1) == 0) {\n        result = result & ~(temp3 >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_operations_08009054",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "difference",
                "uVar4": "temp3",
                "iVar5": "sum",
                "uVar6": "result",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculate_result_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_input;\n  bool is_zero;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_input = double_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_input == 0;\n  if (!is_zero) {\n    combined_input = input_1 ^ input_2;\n    is_zero = combined_input == 0;\n  }\n  is_negative = -1 < (int)combined_input;\n  if (is_negative) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && double_input_2 <= double_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_input",
                "bVar1": "is_negative",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_parameters_080091fc",
            "code": "\nvoid copyParameters_080091fc(undefined4 source,undefined4 destination)\n\n{\n  FUN_08009204(destination,source);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_parameters_080091fc",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_and_return_08009204",
            "code": "\nundefined8 concatenate_and_return_08009204(undefined4 first_value,undefined4 second_value)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_value,first_value);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_and_return_08009204",
                "param_1": "first_value",
                "param_2": "second_value"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_flag_08009214",
            "code": "\nbool check_flag_08009214(void)\n\n{\n  char flag_set;\n  \n  FUN_08009204();\n  return flag_set != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_flag_08009214",
                "in_ZR": "flag_set"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_null_termination_08009228",
            "code": "\nbool check_null_termination_08009228(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_null_termination_08009228",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_and_zr_0800923c",
            "code": "\nbool check_CY_and_ZR_0800923c(void)\n\n{\n  undefined is_zero;\n  undefined is_carry;\n  \n  FUN_08009204();\n  return !(bool)is_carry || (bool)is_zero;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_and_zr_0800923c",
                "in_ZR": "is_zero",
                "in_CY": "is_carry"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_zero_and_carry_08009250",
            "code": "\nbool checkZeroAndCarry_08009250(void)\n\n{\n  undefined isZero;\n  undefined hasCarry;\n  \n  FUN_080091fc();\n  return !(bool)hasCarry || (bool)isZero;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_zero_and_carry_08009250",
                "in_ZR": "isZero",
                "in_CY": "hasCarry"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_for_null_termination_08009264",
            "code": "\nbool check_for_null_termination_08009264(void)\n\n{\n  char input_char;\n  \n  FUN_080091fc();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_for_null_termination_08009264",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "convert_to_signed_int_08009278",
            "code": "\nuint convertToSignedInt_08009278(uint inputValue)\n\n{\n  uint shiftedValue;\n  uint shiftAmount;\n  \n  if (inputValue << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftedValue = (inputValue << 1) >> 0x18;\n  shiftAmount = 0x9e - shiftedValue;\n  if (shiftedValue < 0x9f && shiftAmount != 0) {\n    shiftedValue = (inputValue << 8 | 0x80000000) >> (shiftAmount & 0xff);\n    if ((inputValue & 0x80000000) != 0) {\n      shiftedValue = -shiftedValue;\n    }\n    return shiftedValue;\n  }\n  if ((shiftAmount == 0xffffff9f) && ((inputValue & 0x7fffff) != 0)) {\n    return 0;\n  }\n  inputValue = inputValue & 0x80000000;\n  if (inputValue == 0) {\n    inputValue = 0x7fffffff;\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_08009278": "convert_to_signed_int_08009278",
                "param_1": "inputValue",
                "uVar1": "shiftedValue",
                "uVar2": "shiftAmount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "calculate_floating_point_value_08009318",
            "code": "\nlonglong calculateFloatingPointValue_08009318(uint sign,uint exponent,undefined4 unknown1,undefined4 unknown2)\n\n{\n  int returnValue;\n  uint exponentOffset;\n  uint mask;\n  bool carry;\n  undefined8 result;\n  longlong floatingPointValue;\n  \n  mask = (exponent << 1) >> 0x15;\n  exponentOffset = mask - 0x3ff;\n  if ((int)exponentOffset < 0x14) {\n    if ((int)exponentOffset < 0) {\n      result = FUN_080082d4(sign,exponent,0x8800759c,0x7e37e43c,unknown2);\n      returnValue = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      floatingPointValue = CONCAT44(exponent,sign);\n      if (returnValue != 0) {\n        if ((int)exponent < 0) {\n          floatingPointValue = -0x8000000000000000;\n        }\n        else if ((sign | exponent) == 0) {\n          floatingPointValue = 0;\n        }\n        else {\n          floatingPointValue = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentOffset & 0xff);\n      floatingPointValue = CONCAT44(exponent,sign);\n      if ((exponent & mask | sign) != 0) {\n        result = FUN_080082d4(sign,exponent,0x8800759c,0x7e37e43c,unknown2);\n        returnValue = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        floatingPointValue = CONCAT44(exponent,sign);\n        if (returnValue != 0) {\n          if (0 < (int)exponent) {\n            exponent = exponent + (0x100000 >> (exponentOffset & 0xff));\n          }\n          floatingPointValue = (ulonglong)(exponent & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentOffset < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    floatingPointValue = CONCAT44(exponent,sign);\n    if ((mask & sign) != 0) {\n      result = FUN_080082d4(sign,exponent,0x8800759c,0x7e37e43c,unknown2);\n      returnValue = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      floatingPointValue = CONCAT44(exponent,sign);\n      if (returnValue != 0) {\n        if (0 < (int)exponent) {\n          if (exponentOffset == 0x14) {\n            exponent = exponent + 1;\n          }\n          else {\n            exponentOffset = 1 << (0x34 - exponentOffset & 0xff);\n            carry = CARRY4(exponentOffset,sign);\n            sign = exponentOffset + sign;\n            if (carry != false) {\n              exponent = exponent + 1;\n            }\n          }\n        }\n        floatingPointValue = CONCAT44(exponent,sign & ~mask);\n      }\n    }\n  }\n  else {\n    floatingPointValue = CONCAT44(exponent,sign);\n    if (exponentOffset == 0x400) {\n      floatingPointValue = FUN_080082d4();\n    }\n  }\n  return floatingPointValue;\n}\n\n",
            "renaming": {
                "FUN_08009318": "calculate_floating_point_value_08009318",
                "param_1": "sign",
                "param_2": "exponent",
                "param_3": "unknown1",
                "param_4": "unknown2",
                "uVar2": "exponentOffset",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "result",
                "lVar6": "floatingPointValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_number_08009410",
            "code": "\nundefined4 processNumber_08009410(undefined4 inputValue,uint number)\n\n{\n  undefined4 result;\n  uint temp;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  if (0x3fe921fb < (number & 0x7fffffff)) {\n    if ((number & 0x7fffffff) < 0x7ff00000) {\n      temp = FUN_08009d78(inputValue,number,&var1);\n      temp = temp & 3;\n      if (temp == 1) {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n      else if (temp == 2) {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else if (temp == 0) {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(inputValue,number,inputValue,number);\n    }\n    return result;\n  }\n  result = FUN_0800a348(inputValue,number,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_number_08009410",
                "param_1": "inputValue",
                "param_2": "number",
                "uVar1": "result",
                "uVar2": "temp",
                "local_28": "var1",
                "uStack_24": "var2",
                "local_20": "var3",
                "uStack_1c": "var4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_floating_point_080094c0",
            "code": "\nlonglong calculateFloatingPoint_080094c0(uint inputValue1,uint inputValue2,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint shiftedBits;\n  uint mask;\n  bool carryFlag;\n  undefined8 temporaryValue;\n  longlong outputValue;\n  \n  mask = (inputValue2 << 1) >> 0x15;\n  shiftedBits = mask - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      temporaryValue = FUN_080082d4(inputValue1,inputValue2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20),0,0);\n      outputValue = CONCAT44(inputValue2,inputValue1);\n      if (result1 != 0) {\n        if ((int)inputValue2 < 0) {\n          if ((inputValue1 | inputValue2 & 0x7fffffff) != 0) {\n            inputValue2 = 0xbff00000;\n          }\n          outputValue = (ulonglong)inputValue2 << 0x20;\n        }\n        else {\n          outputValue = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedBits & 0xff);\n      outputValue = CONCAT44(inputValue2,inputValue1);\n      if ((inputValue2 & mask | inputValue1) != 0) {\n        temporaryValue = FUN_080082d4(inputValue1,inputValue2,0x8800759c,0x7e37e43c,param4);\n        result1 = FUN_08008b60((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20),0,0);\n        outputValue = CONCAT44(inputValue2,inputValue1);\n        if (result1 != 0) {\n          if ((int)inputValue2 < 0) {\n            inputValue2 = inputValue2 + (0x100000 >> (shiftedBits & 0xff));\n          }\n          outputValue = (ulonglong)(inputValue2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedBits < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    outputValue = CONCAT44(inputValue2,inputValue1);\n    if ((mask & inputValue1) != 0) {\n      temporaryValue = FUN_080082d4(inputValue1,inputValue2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)temporaryValue,(int)((ulonglong)temporaryValue >> 0x20),0,0);\n      outputValue = CONCAT44(inputValue2,inputValue1);\n      if (result1 != 0) {\n        if ((int)inputValue2 < 0) {\n          if (shiftedBits == 0x14) {\n            inputValue2 = inputValue2 + 1;\n          }\n          else {\n            shiftedBits = 1 << (0x34 - shiftedBits & 0xff);\n            carryFlag = CARRY4(shiftedBits,inputValue1);\n            inputValue1 = shiftedBits + inputValue1;\n            if (carryFlag != false) {\n              inputValue2 = inputValue2 + 1;\n            }\n          }\n        }\n        outputValue = CONCAT44(inputValue2,inputValue1 & ~mask);\n      }\n    }\n  }\n  else {\n    outputValue = CONCAT44(inputValue2,inputValue1);\n    if (shiftedBits == 0x400) {\n      outputValue = FUN_080082d4();\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_floating_point_080094c0",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "uVar2": "shiftedBits",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "temporaryValue",
                "lVar6": "outputValue"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_result_080095b8",
            "code": "\nint calculate_result_080095b8(uint input_1,uint input_2)\n\n{\n  uint carry;\n  uint shift_count;\n  uint result;\n  int sign;\n  uint diff;\n  \n  shift_count = (input_2 << 1) >> 0x15;\n  diff = shift_count - 0x3ff;\n  if ((int)input_2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input_2 & 0xfffff | 0x100000;\n  if ((int)diff < 0x14) {\n    if ((int)diff < 0) {\n      if (diff != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (diff & 0xff)) >> (0x14 - diff & 0xff);\n  }\n  else {\n    if (0x1e < diff) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)diff < 0x34) {\n      carry = 0x80000000 >> (shift_count - 0x413 & 0xff);\n      if (is_carry_set(carry,input_1) != false) {\n        result = result + 1;\n      }\n      result = result << (shift_count - 0x413 & 0xff);\n      if (diff != 0x14) {\n        result = result | carry + input_1 >> (0x34 - diff & 0xff);\n      }\n    }\n    else {\n      result = result << (shift_count - 0x413 & 0xff) | input_1 << (shift_count - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_result_080095b8",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "carry",
                "uVar2": "shift_count",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "diff",
                "CARRY4": "is_carry_set"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_double_08009654",
            "code": "\nlonglong convertToDouble_08009654(uint input1,uint input2)\n\n{\n  uint shiftCount;\n  uint shiftedValue;\n  longlong result;\n  \n  result = CONCAT44(input2,input1);\n  shiftedValue = (input2 << 1) >> 0x15;\n  shiftCount = shiftedValue - 0x3ff;\n  if ((int)shiftCount < 0x14) {\n    if ((int)shiftCount < 0) {\n      input2 = input2 & 0x80000000;\n      if (shiftCount == 0xffffffff) {\n        input2 = input2 | 0x3ff00000;\n      }\n      result = (ulonglong)input2 << 0x20;\n    }\n    else {\n      shiftedValue = 0xfffff >> (shiftCount & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & shiftedValue | input1) != 0) {\n        result = (ulonglong)(input2 + (0x80000 >> (shiftCount & 0xff)) & ~shiftedValue) << 0x20;\n      }\n    }\n  }\n  else if ((int)shiftCount < 0x34) {\n    shiftedValue = 0xffffffff >> (shiftedValue - 0x413 & 0xff);\n    if ((input1 & shiftedValue) != 0) {\n      shiftCount = 1 << (0x33 - shiftCount & 0xff);\n      if (CARRY4(input1,shiftCount) != false) {\n        input2 = input2 + 1;\n      }\n      result = CONCAT44(input2,input1 + shiftCount & ~shiftedValue);\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (shiftCount == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_double_08009654",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftCount",
                "uVar2": "shiftedValue",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_floating_point_080096e8",
            "code": "\nundefined4 processFloatingPoint_080096e8(undefined4 inputValue,uint flags)\n\n{\n  undefined4 returnValue;\n  uint status;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  \n  if (0x3fe921fb < (flags & 0x7fffffff)) {\n    if ((flags & 0x7fffffff) < 0x7ff00000) {\n      status = FUN_08009d78(inputValue,flags,&localVar1);\n      status = status & 3;\n      if (status == 1) {\n        returnValue = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else if (status == 2) {\n        returnValue = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else if (status == 0) {\n        returnValue = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else {\n        returnValue = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(inputValue,flags,inputValue,flags);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800adf0(inputValue,flags,0,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_floating_point_080096e8",
                "param_1": "inputValue",
                "param_2": "flags",
                "uVar1": "returnValue",
                "uVar2": "status",
                "local_28": "localVar1",
                "uStack_24": "localVar2",
                "local_20": "localVar3",
                "uStack_1c": "localVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "convert_to_long_long_08009798",
            "code": "\nlonglong convertToLongLong_08009798(uint input1,uint input2,undefined4 flag1,undefined4 flag2)\n\n{\n  uint shiftedValue;\n  uint shiftAmount;\n  longlong result;\n  \n  shiftAmount = (input2 << 1) >> 0x15;\n  shiftedValue = shiftAmount - 0x3ff;\n  if ((int)shiftedValue < 0x14) {\n    if ((int)shiftedValue < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shiftedValue & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedValue < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shiftAmount - 0x413 & 0xff)));\n    }\n    if (shiftedValue != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,flag2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "convert_to_long_long_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag1",
                "param_4": "flag2",
                "uVar1": "shiftedValue",
                "uVar2": "shiftAmount",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int temp_1;\n  undefined4 temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  undefined8 temp_6;\n  \n  temp_4 = input_4 & 0x7fffffff;\n  if (((temp_4 | (-input_3 | input_3) >> 0x1f) < 0x7ff00001) &&\n     (temp_5 = input_2 & 0x7fffffff, (temp_5 | (-input_1 | input_1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      temp_4 = FUN_0800af78();\n      return temp_4;\n    }\n    temp_3 = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((temp_5 | input_1) == 0) {\n      if (temp_3 == 2) {\n        input_1 = 0x54442d18;\n      }\n      else if (temp_3 == 3) {\n        input_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp_4 | input_3) != 0) {\n        if (temp_4 == 0x7ff00000) {\n          temp_3 = temp_3 - 1;\n          if (temp_5 == 0x7ff00000) {\n            if (temp_3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp_3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp_3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp_3 * 8);\n          }\n          return 0;\n        }\n        if (temp_5 != 0x7ff00000) {\n          temp_1 = (int)(temp_5 - temp_4) >> 0x14;\n          if ((int)(temp_5 - temp_4) < 0x3d00000) {\n            if (((int)input_4 < 0) && (temp_1 + 0x3c < 0 != SCARRY4(temp_1,0x3c))) {\n              temp_6 = 0;\n            }\n            else {\n              FUN_08008894(input_1,input_2,input_3,input_4,input_4);\n              FUNC_0800b2cc();\n              temp_6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp_6 = 0x3ff921fb54442d18;\n          }\n          temp_2 = (undefined4)((ulonglong)temp_6 >> 0x20);\n          temp_4 = (uint)temp_6;\n          if (temp_3 == 1) {\n            return temp_4;\n          }\n          if (temp_3 == 2) {\n            temp_6 = FUN_080082d0(temp_4,temp_2,0x33145c07,0x3ca1a626);\n            temp_4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp_6,(int)((ulonglong)temp_6 >> 0x20));\n            return temp_4;\n          }\n          if (temp_3 == 0) {\n            return temp_4;\n          }\n          temp_6 = FUN_080082d0(temp_4,temp_2,0x33145c07,0x3ca1a626);\n          temp_4 = FUN_080082d0((int)temp_6,(int)((ulonglong)temp_6 >> 0x20),0x54442d18,0x400921fb);\n          return temp_4;\n        }\n      }\n      if ((int)input_2 < 0) {\n        input_1 = 0x54442d18;\n      }\n      else {\n        input_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_1 = FUN_080082d4(input_3,input_4,input_1,input_2);\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculateHypotenuse_0800981c(undefined4 side1,undefined4 side2,undefined4 side3,undefined4 side4)\n\n{\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined8 returnValue;\n  undefined4 constant1;\n  char *string1;\n  undefined4 input1;\n  undefined4 input2;\n  undefined4 input3;\n  undefined4 input4;\n  undefined4 constant2;\n  undefined4 constant3;\n  int localVar1;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  localVar1 = FUN_0800b2d4();\n  if (localVar1 != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side1,side2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side3,side4);\n  if (result == 0) {\n    return returnValue;\n  }\n  constant1 = 3;\n  string1 = \"hypot\";\n  input1 = side1;\n  input2 = side2;\n  input3 = side3;\n  input4 = side4;\n  if (DAT_20000014 == '\\0') {\n    constant2 = 0xe0000000;\n    constant3 = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&constant1);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    constant2 = 0;\n    constant3 = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(constant3,constant2);\n  if (localVar1 != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(constant3,constant2);\n    *ptr2 = localVar1;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1",
                "param_2": "side2",
                "param_3": "side3",
                "param_4": "side4",
                "iVar1": "result",
                "puVar2": "ptr",
                "piVar3": "ptr2",
                "uVar4": "returnValue",
                "local_50": "constant1",
                "pcStack_4c": "string1",
                "local_48": "input1",
                "uStack_44": "input2",
                "local_40": "input3",
                "uStack_3c": "input4",
                "local_38": "constant2",
                "uStack_34": "constant3",
                "local_30": "localVar1"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "execute_process_080098d0",
            "code": "\nundefined4 executeProcess_080098d0(undefined4 option1,undefined4 option2)\n\n{\n  char flag;\n  undefined4 returnValue;\n  int result;\n  undefined4 *ptr;\n  int *intPtr;\n  undefined4 isOptionSet;\n  undefined *stringPtr;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined8 temp;\n  int errorCode;\n  \n  returnValue = FUN_0800a1bc();\n  flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (errorCode = FUN_08008b74(option1,option2,option1,option2), errorCode != 0)) ||\n     (result = FUN_08008b24(option1,option2,0,0), result == 0)) {\n    return returnValue;\n  }\n  isOptionSet = 1;\n  stringPtr = &DAT_0800be5c;\n  param1 = option1;\n  param2 = option2;\n  param1Copy = option1;\n  param2Copy = option2;\n  if (flag == '\\0') {\n    temp = 0;\nLAB_0800996c:\n    result = FUN_0800b2e0(&isOptionSet);\n    if (result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    temp = FUN_08008894(0,0,0,0);\n    if (flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x21;\njoined_r0x0800997a:\n  if (errorCode != 0) {\n    intPtr = (int *)FUN_0800b3dc();\n    *intPtr = errorCode;\n  }\n  return (undefined4)temp;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "execute_process_080098d0",
                "param_1": "option1",
                "param_2": "option2",
                "cVar1": "flag",
                "uVar2": "returnValue",
                "iVar3": "result",
                "puVar4": "ptr",
                "piVar5": "intPtr",
                "local_50": "isOptionSet",
                "local_4c": "stringPtr",
                "local_48": "param1",
                "uStack_44": "param2",
                "local_40": "param1Copy",
                "uStack_3c": "param2Copy",
                "local_38": "temp",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculate_result_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = input4 & 0x7fffffff;\n  if (((temp4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = input2 & 0x7fffffff, (temp5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUN_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      if (temp3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          temp3 = temp3 - 1;\n          if (temp5 == 0x7ff00000) {\n            if (temp3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              temp6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n            temp4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n          temp4 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_08009b24",
            "code": "\nuint calculate_08009b24(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 temp1;\n  int temp2;\n  uint result1;\n  int temp3;\n  undefined4 temp4;\n  int temp5;\n  uint result2;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int temp12;\n  \n  input2 = input2 & 0x7fffffff;\n  input4 = input4 & 0x7fffffff;\n  result1 = input1;\n  result2 = input2;\n  if (input2 < input4) {\n    result1 = input3;\n    input3 = input1;\n    result2 = input4;\n    input4 = input2;\n  }\n  if (0x3c00000 < (int)(result2 - input4)) {\n    result1 = FUN_080082d4(result1,result2,input3,input4);\n    return result1;\n  }\n  if (result2 < 0x5f300001) {\n    temp12 = 0;\n  }\n  else {\n    if (0x7fefffff < result2) {\n      if ((result2 & 0xfffff | result1) != 0) {\n        result1 = FUN_080082d4(result1,result2,input3,input4);\n      }\n      if ((input4 ^ 0x7ff00000 | input3) != 0) {\n        return result1;\n      }\n      return input3;\n    }\n    result2 = result2 + 0xda800000;\n    input4 = input4 + 0xda800000;\n    temp12 = 600;\n  }\n  temp9 = CONCAT44(result2,result1);\n  temp8 = CONCAT44(input4,input3);\n  if ((int)input4 < 0x20b00000) {\n    if ((int)input4 < 0x100000) {\n      if ((input4 | input3) == 0) {\n        return result1;\n      }\n      temp8 = FUN_08008640(input3,input4,0,0x7fd00000);\n      temp9 = FUN_08008640(result1,result2,0,0x7fd00000);\n      temp12 = temp12 + -0x3fe;\n    }\n    else {\n      result2 = result2 + 0x25800000;\n      temp9 = CONCAT44(result2,result1);\n      input4 = input4 + 0x25800000;\n      temp8 = CONCAT44(input4,input3);\n      temp12 = temp12 + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp5 = (int)((ulonglong)temp8 >> 0x20);\n  temp4 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp4,temp5);\n  temp3 = (int)((ulonglong)temp8 >> 0x20);\n  temp1 = (undefined4)temp8;\n  temp2 = FUN_08008b24(temp4,temp5,temp1,temp3);\n  if (temp2 == 0) {\n    temp8 = FUN_08008640(0,input4,0);\n    temp9 = FUN_08008640(temp1,temp3 + -0x80000000,temp1,temp3);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,result2 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp4,temp5);\n    temp11 = FUN_080082d0(temp4,temp5,0,input4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,result2 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,result2,0,result2);\n    temp9 = FUN_08008640(temp4,temp5 + -0x80000000,temp4,temp5);\n    temp10 = FUN_080082d4(temp6,temp7,0,result2);\n    temp11 = FUN_080082d0(temp6,temp7,0,result2);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  result1 = (uint)temp8;\n  if (temp12 != 0) {\n    result1 = FUN_08008640(result1,(int)((ulonglong)temp8 >> 0x20),0,temp12 * 0x100000 + 0x3ff00000);\n  }\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_08009b24",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "iVar2": "temp2",
                "uVar3": "result1",
                "iVar4": "temp3",
                "uVar5": "temp4",
                "iVar6": "temp5",
                "uVar7": "result2",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "temp12"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_value_08009d78",
            "code": "\nint calculateValue_08009d78(undefined4 input1,uint input2,undefined8 *outputArray)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  uint unsignedInput2;\n  int returnValue;\n  undefined8 temp6;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  unsignedInput2 = input2 & 0x7fffffff;\n  if (unsignedInput2 < 0x3fe921fc) {\n    *(undefined4 *)outputArray = input1;\n    *(uint *)((int)outputArray + 4) = input2;\n    *(undefined4 *)(outputArray + 1) = 0;\n    *(undefined4 *)((int)outputArray + 0xc) = 0;\n    return 0;\n  }\n  if (unsignedInput2 < 0x4002d97c) {\n    if ((int)input2 < 1) {\n      temp6 = FUN_080082d4(input1,input2,0x54400000,0x3ff921fb);\n      temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n      result1 = (undefined4)temp6;\n      if (unsignedInput2 != 0x3ff921fb) {\n        temp6 = FUN_080082d4(result1,temp1,0x1a626331,0x3dd0b461);\n        *outputArray = temp6;\n        temp6 = FUN_080082d0(result1,temp1);\n        temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x1a626331,0x3dd0b461);\n        outputArray[1] = temp6;\n        return -1;\n      }\n      temp6 = FUN_080082d4(result1,temp1,0x1a600000,0x3dd0b461);\n      result1 = (undefined4)((ulonglong)temp6 >> 0x20);\n      temp7 = FUN_080082d4((int)temp6,result1,0x2e037073,0x3ba3198a);\n      *outputArray = temp7;\n      temp6 = FUN_080082d0((int)temp6,result1);\n      temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x2e037073,0x3ba3198a);\n      outputArray[1] = temp6;\n      return -1;\n    }\n    temp6 = FUN_080082d0();\n    temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n    result1 = (undefined4)temp6;\n    if (unsignedInput2 != 0x3ff921fb) {\n      temp6 = FUN_080082d0(result1,temp1,0x1a626331,0x3dd0b461);\n      *outputArray = temp6;\n      temp6 = FUN_080082d0(result1,temp1);\n      temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x1a626331,0x3dd0b461);\n      outputArray[1] = temp6;\n      return 1;\n    }\n    temp6 = FUN_080082d0(result1,temp1,0x1a600000,0x3dd0b461);\n    result1 = (undefined4)((ulonglong)temp6 >> 0x20);\n    temp7 = FUN_080082d0((int)temp6,result1,0x2e037073,0x3ba3198a);\n    *outputArray = temp7;\n    temp6 = FUN_080082d0((int)temp6,result1);\n    temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x2e037073,0x3ba3198a);\n    outputArray[1] = temp6;\n    return 1;\n  }\n  if (0x413921fb < unsignedInput2) {\n    if (0x7fefffff < unsignedInput2) {\n      temp6 = FUN_080082d0(input1,input2,input1,input2);\n      outputArray[1] = temp6;\n      *outputArray = temp6;\n      return 0;\n    }\n    returnValue = ((int)unsignedInput2 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    temp6 = FUN_080082d0(input1,unsignedInput2 + returnValue * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    localVar5 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    returnValue = FUN_0800a5a0(&localVar3,outputArray,returnValue);\n    if (-1 < (int)input2) {\n      return returnValue;\n    }\n    *(int *)((int)outputArray + 4) = *(int *)((int)outputArray + 4) + -0x80000000;\n    *(int *)((int)outputArray + 0xc) = *(int *)((int)outputArray + 0xc) + -0x80000000;\n    return -returnValue;\n  }\n  temp6 = FUNC_0800b2cc();\n  temp1 = (undefined4)((ulonglong)temp6 >> 0x20);\n  temp7 = FUN_08008640((int)temp6,temp1,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),0,0x3fe00000);\n  returnValue = FUN_08008ba0();\n  temp7 = FUN_0800856c();\n  temp2 = (undefined4)((ulonglong)temp7 >> 0x20);\n  result1 = (undefined4)temp7;\n  temp7 = FUN_08008640(result1,temp2,0x54400000,0x3ff921fb);\n  temp6 = FUN_080082d0((int)temp6,temp1,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n  temp3 = (undefined4)((ulonglong)temp6 >> 0x20);\n  temp1 = (undefined4)temp6;\n  temp7 = FUN_08008640(result1,temp2,0x1a626331,0x3dd0b461);\n  if ((0x1f < returnValue) || (*(uint *)(&DAT_0800be98 + (returnValue + -1) * 4) == unsignedInput2)) {\n    temp8 = FUN_080082d0(temp1,temp3,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    if ((int)((unsignedInput2 >> 0x14) - ((uint)((int)((ulonglong)temp8 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp7 = FUN_08008640(result1,temp2,0x1a600000,0x3dd0b461);\n    temp4 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp6 = FUN_080082d0(temp1,temp3,(int)temp7,temp4);\n    temp5 = (undefined4)((ulonglong)temp6 >> 0x20);\n    result2 = (undefined4)temp6;\n    temp8 = FUN_080082d0(temp1,temp3,result2,temp5);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,temp4);\n    temp8 = FUN_08008640(result1,temp2,0x2e037073,0x3ba3198a);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n    temp8 = FUN_080082d0(result2,temp5,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    if ((int)(((int)unsignedInput2 >> 0x14) - ((uint)((int)((ulonglong)temp8 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp7 = FUN_08008640(result1,temp2,0x2e000000,0x3ba3198a);\n    temp1 = (undefined4)((ulonglong)temp7 >> 0x20);\n    temp6 = FUN_080082d0(result2,temp5,(int)temp7,temp1);\n    temp8 = FUN_080082d0(result2,temp5);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,temp1);\n    temp8 = FUN_08008640(result1,temp2,0x252049c1,0x397b839a);\n    temp7 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n  }\n  temp8 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                        (int)((ulonglong)temp7 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)temp6 >> 0x20);\n  localVar1 = (undefined4)temp6;\n  *outputArray = temp8;\n  temp6 = FUN_080082d0(localVar1,localVar2);\n  temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n                        (int)((ulonglong)temp7 >> 0x20));\n  outputArray[1] = temp6;\n  if ((int)input2 < 0) {\n    *(int *)outputArray = (int)temp8;\n    *(int *)((int)outputArray + 4) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    *(int *)(outputArray + 1) = (int)temp6;\n    *(int *)((int)outputArray + 0xc) = (int)((ulonglong)temp6 >> 0x20) + -0x80000000;\n    returnValue = -returnValue;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_value_08009d78",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "outputArray",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "unsignedInput2",
                "iVar9": "returnValue",
                "uVar10": "temp6",
                "uVar11": "temp7",
                "uVar12": "temp8",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_result_0800a1bc",
            "code": "\nuint calculate_result_0800a1bc(uint input_1,uint input_2)\n\n{\n  uint temp_1;\n  int temp_2;\n  uint temp_3;\n  undefined4 temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  uint temp_8;\n  uint temp_9;\n  int temp_10;\n  uint temp_11;\n  uint temp_12;\n  undefined8 temp_13;\n  \n  if ((~input_2 & 0x7ff00000) == 0) {\n    temp_13 = FUN_08008640(input_1,input_2,input_1,input_2);\n    temp_7 = FUN_080082d4((int)temp_13,(int)((ulonglong)temp_13 >> 0x20),input_1,input_2);\n    return temp_7;\n  }\n  if ((int)input_2 < 1) {\n    if ((input_2 & 0x7fffffff | input_1) == 0) {\n      return input_1;\n    }\n    if (input_2 != 0) {\n      temp_13 = FUN_080082d0(input_1,input_2,input_1);\n      temp_4 = (undefined4)((ulonglong)temp_13 >> 0x20);\n      temp_7 = FUN_08008894((int)temp_13,temp_4,(int)temp_13,temp_4);\n      return temp_7;\n    }\n    do {\n      temp_9 = input_1;\n      temp_7 = temp_9 >> 0xb;\n      input_2 = input_2 - 0x15;\n      input_1 = temp_9 << 0x15;\n    } while (temp_7 == 0);\n    temp_1 = input_2;\n    if (-1 < (int)temp_9) goto LAB_0800a290;\n    temp_12 = 0x20;\n    temp_5 = 0xffffffff;\n    temp_9 = input_1;\n  }\n  else {\n    temp_1 = (int)input_2 >> 0x14;\n    temp_7 = input_2;\n    temp_9 = input_1;\n    if (temp_1 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp_9 = 0;\n    temp_12 = temp_7;\n    do {\n      temp_5 = temp_9;\n      temp_7 = temp_12 << 1;\n      temp_10 = temp_12 << 0xc;\n      temp_9 = temp_5 + 1;\n      temp_12 = temp_7;\n    } while (-1 < temp_10);\n    temp_12 = 0x20 - temp_9;\n    input_2 = temp_1;\n    temp_9 = input_1 << (temp_9 & 0xff);\n  }\n  temp_7 = input_1 >> (temp_12 & 0xff) | temp_7;\n  temp_1 = input_2 - temp_5;\nLAB_0800a1da:\n  temp_7 = temp_7 & 0xfffff | 0x100000;\n  if (-1 < (int)(temp_1 << 0x1f)) {\n    temp_7 = temp_7 * 2 - ((int)temp_9 >> 0x1f);\n    temp_9 = temp_9 << 1;\n  }\n  temp_12 = 0;\n  temp_7 = temp_7 * 2 - ((int)temp_9 >> 0x1f);\n  temp_9 = temp_9 << 1;\n  temp_1 = 0;\n  temp_10 = 0x16;\n  temp_5 = 0x200000;\n  do {\n    temp_2 = temp_1 + temp_5;\n    if (temp_2 <= (int)temp_7) {\n      temp_7 = temp_7 - temp_2;\n      temp_1 = temp_2 + temp_5;\n      temp_12 = temp_12 + temp_5;\n    }\n    temp_10 = temp_10 + -1;\n    temp_7 = temp_7 * 2 - ((int)temp_9 >> 0x1f);\n    temp_5 = temp_5 >> 1;\n    temp_9 = temp_9 << 1;\n  } while (temp_10 != 0);\n  temp_2 = 0x20;\n  temp_6 = 0x80000000;\n  temp_10 = 0;\n  temp_5 = 0;\n  do {\n    temp_3 = temp_6 + temp_10;\n    temp_11 = temp_1;\n    if ((int)temp_1 < (int)temp_7) {\n      if ((int)temp_3 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp_3 + temp_6)) {\n          temp_11 = temp_1 + 1;\n        }\n      }\n      temp_8 = temp_7 - temp_1;\n      temp_1 = temp_11;\n      if (temp_9 < temp_3) {\n        temp_8 = temp_8 - 1;\n      }\nLAB_0800a262:\n      temp_10 = temp_3 + temp_6;\n      temp_9 = temp_9 - temp_3;\n      temp_5 = temp_5 + temp_6;\n      temp_7 = temp_8;\n    }\n    else if ((temp_7 == temp_1) && (temp_3 <= temp_9)) {\n      if ((int)temp_3 < 0) goto LAB_0800a26a;\n      temp_8 = 0;\n      temp_1 = temp_7;\n      goto LAB_0800a262;\n    }\n    temp_2 = temp_2 + -1;\n    temp_6 = temp_6 >> 1;\n    temp_7 = temp_7 * 2 - ((int)temp_9 >> 0x1f);\n    temp_9 = temp_9 << 1;\n    if (temp_2 == 0) {\n      if ((temp_7 | temp_9) == 0) {\n        temp_5 = temp_5 >> 1;\n      }\n      else if (temp_5 == 0xffffffff) {\n        temp_12 = temp_12 + 1;\n        temp_5 = 0;\n      }\n      else {\n        temp_5 = temp_5 + 1 >> 1;\n      }\n      if ((temp_12 & 1) != 0) {\n        temp_5 = temp_5 | 0x80000000;\n      }\n      return temp_5;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "temp_1",
                "iVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6",
                "uVar7": "temp_7",
                "uVar8": "temp_8",
                "uVar9": "temp_9",
                "iVar10": "temp_10",
                "uVar11": "temp_11",
                "uVar12": "temp_12",
                "uVar13": "temp_13"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int status;\n  undefined4 result_high;\n  undefined4 result_low;\n  uint abs_input_2;\n  undefined8 temp_result;\n  undefined8 final_result;\n  undefined8 temp_variable;\n  undefined4 local_var_1;\n  undefined4 local_var_2;\n  undefined4 local_var_3;\n  undefined4 local_var_4;\n  \n  abs_input_2 = input_2 & 0x7fffffff;\n  if (abs_input_2 < 0x3e400000) {\n    status = FUN_08008ba0();\n    if (status == 0) {\n      return 0;\n    }\n    temp_result = FUN_08008640(input_1,input_2,input_1,input_2);\n    result_low = (undefined4)((ulonglong)temp_result >> 0x20);\n    result_high = (undefined4)temp_result;\n    final_result = FUN_08008640(result_high,result_low,0xbe8838d4,0xbda8fae9);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),0x809c52ad,0x3e927e4f);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0x19cb1590,0x3efa01a0);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),0x16c15177,0x3f56c16c);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0x5555554c,0x3fa55555);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n  }\n  else {\n    temp_result = FUN_08008640(input_1,input_2,input_1,input_2);\n    result_low = (undefined4)((ulonglong)temp_result >> 0x20);\n    result_high = (undefined4)temp_result;\n    final_result = FUN_08008640(result_high,result_low,0xbe8838d4,0xbda8fae9);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),0x809c52ad,0x3e927e4f);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0x19cb1590,0x3efa01a0);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),0x16c15177,0x3f56c16c);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    final_result = FUN_080082d4((int)final_result,(int)((ulonglong)final_result >> 0x20),0x5555554c,0x3fa55555);\n    final_result = FUN_08008640((int)final_result,(int)((ulonglong)final_result >> 0x20),result_high,result_low);\n    if (0x3fd33332 < abs_input_2) {\n      if (abs_input_2 < 0x3fe90001) {\n        status = abs_input_2 - 0x200000;\n        temp_result = FUN_080082d0(0,0x3ff00000,0,status);\n      }\n      else {\n        status = 0x3fd20000;\n        temp_result = 0x3fe7000000000000;\n      }\n      local_var_4 = (undefined4)((ulonglong)temp_result >> 0x20);\n      local_var_3 = (undefined4)temp_result;\n      temp_result = FUN_08008640(result_high,result_low,0,0x3fe00000);\n      temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),0,status);\n      final_result = FUN_08008640(result_high,result_low,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n      temp_variable = FUN_08008640(input_1,input_2,input_3,input_4);\n      final_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_variable,\n                           (int)((ulonglong)temp_variable >> 0x20));\n      temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),(int)final_result,\n                           (int)((ulonglong)final_result >> 0x20));\n      result_high = FUN_080082d0(local_var_3,local_var_4,(int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n      return result_high;\n    }\n  }\n  local_var_2 = (undefined4)((ulonglong)final_result >> 0x20);\n  local_var_1 = (undefined4)final_result;\n  result_high = (undefined4)((ulonglong)temp_result >> 0x20);\n  final_result = FUN_08008640((int)temp_result,result_high,0,0x3fe00000);\n  temp_result = FUN_08008640((int)temp_result,result_high,local_var_1,local_var_2);\n  temp_variable = FUN_08008640(input_1,input_2,input_3,input_4);\n  temp_result = FUN_080082d0((int)temp_result,(int)((ulonglong)temp_result >> 0x20),(int)temp_variable,\n                       (int)((ulonglong)temp_variable >> 0x20));\n  temp_result = FUN_080082d0((int)final_result,(int)((ulonglong)final_result >> 0x20),(int)temp_result,\n                       (int)((ulonglong)temp_result >> 0x20));\n  result_high = FUN_080082d0(0,0x3ff00000,(int)temp_result,(int)((ulonglong)temp_result >> 0x20));\n  return result_high;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "status",
                "uVar2": "result_high",
                "uVar3": "result_low",
                "uVar4": "abs_input_2",
                "uVar5": "temp_result",
                "uVar6": "final_result",
                "uVar7": "temp_variable",
                "local_30": "local_var_1",
                "uStack_2c": "local_var_2",
                "local_28": "local_var_3",
                "uStack_24": "local_var_4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input1,undefined8 *input2,int inputLength,int startOffset,int calculationType,int data)\n\n{\n  undefined4 *ptr1;\n  uint result;\n  uint temp;\n  int index;\n  uint *ptr2;\n  undefined4 temp1;\n  uint **pptr;\n  undefined4 temp2;\n  int offset;\n  undefined4 *ptr3;\n  undefined4 temp3;\n  uint temp4;\n  uint *ptr4;\n  int count1;\n  int count2;\n  undefined8 *ptr5;\n  int count3;\n  undefined4 *ptr18;\n  undefined8 *ptr6;\n  undefined4 temp6;\n  int iterationCount;\n  undefined8 *ptr7;\n  undefined4 *ptr8;\n  bool isTrue;\n  undefined8 temp7;\n  undefined8 result1;\n  undefined8 result2;\n  undefined8 *localArray1;\n  int localCount1;\n  int localOffset1;\n  int localCount2;\n  uint *localArray2 [2];\n  uint localArray3 [20];\n  undefined8 temp8;\n  undefined8 localArray4;\n  int localArray5 [38];\n  undefined8 temp9;\n  \n  count2 = *(int *)(&DAT_0800c060 + calculationType * 4);\n  offset = startOffset + -1;\n  localArray2[1] = (uint *)input2;\n  if (inputLength + 0x14 < 0 == SCARRY4(inputLength,0x14)) {\n    localCount2 = (inputLength + -3) / 0x18;\n    localOffset1 = (localCount2 + 1) * -0x18;\n  }\n  else {\n    localOffset1 = -0x18;\n    localCount2 = 0;\n  }\n  localOffset1 = inputLength + localOffset1;\n  count3 = localCount2 - offset;\n  if (-1 < count2 + offset) {\n    iterationCount = count2 + offset + 1 + count3;\n    ptr5 = &temp8;\n    do {\n      while (count3 < 0) {\n        count3 = count3 + 1;\n        *(undefined4 *)ptr5 = 0;\n        *(undefined4 *)((int)ptr5 + 4) = 0;\n        ptr5 = ptr5 + 1;\n        if (count3 == iterationCount) goto LAB_0800a626;\n      }\n      result1 = FUN_0800856c(*(undefined4 *)(data + count3 * 4));\n      count3 = count3 + 1;\n      *ptr5 = result1;\n      ptr5 = ptr5 + 1;\n    } while (count3 != iterationCount);\n  }\nLAB_0800a626:\n  ptr3 = (undefined4 *)(input1 + -8);\n  if (-1 < count2) {\n    ptr7 = &temp8 + startOffset;\n    count3 = offset;\n    ptr5 = &temp9;\n    do {\n      if (offset < 0) {\n        result1 = 0;\n      }\n      else {\n        result1 = 0;\n        ptr8 = ptr3;\n        ptr6 = ptr7;\n        do {\n          ptr18 = ptr8 + 2;\n          temp7 = FUN_08008640(*ptr18,ptr8[3],*(undefined4 *)(ptr6 + -1),\n                                *(undefined4 *)((int)ptr6 + -4));\n          result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),(int)temp7,\n                                (int)((ulonglong)temp7 >> 0x20));\n          ptr8 = ptr18;\n          ptr6 = ptr6 + -1;\n        } while (ptr18 != ptr3 + startOffset * 2);\n      }\n      count3 = count3 + 1;\n      *ptr5 = result1;\n      ptr7 = ptr7 + 1;\n      ptr5 = ptr5 + 1;\n    } while (count3 != count2 + startOffset);\n  }\n  localArray2[0] = localArray3 + count2 + -1;\n  count3 = count2;\n  do {\n    result1 = CONCAT44(*(undefined4 *)((int)&temp9 + count3 * 8 + 4),\n                      *(undefined4 *)(&temp9 + count3));\n    if (0 < count3) {\n      ptr5 = &temp9 + count3;\n      ptr2 = localArray3;\n      do {\n        temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n        FUN_08008640((int)result1,temp1,0,0x3e700000);\n        FUN_08008ba0();\n        temp7 = FUN_0800856c();\n        temp2 = (undefined4)((ulonglong)temp7 >> 0x20);\n        result2 = FUN_08008640((int)temp7,temp2,0,0x41700000);\n        FUN_080082d0((int)result1,temp1,(int)result2,(int)((ulonglong)result2 >> 0x20));\n        result = FUN_08008ba0();\n        ptr7 = ptr5 + -1;\n        temp1 = *(undefined4 *)ptr7;\n        temp3 = *(undefined4 *)((int)ptr5 + -4);\n        *ptr2 = result;\n        result1 = FUN_080082d4((int)temp7,temp2,temp1,temp3);\n        ptr5 = ptr7;\n        ptr2 = ptr2 + 1;\n      } while (ptr7 != &temp9);\n    }\n    result1 = FUN_0800b2e8((int)result1,(int)((ulonglong)result1 >> 0x20),localOffset1);\n    temp2 = (undefined4)((ulonglong)result1 >> 0x20);\n    FUN_08008640((int)result1,temp2,0,0x3fc00000);\n    temp7 = FUN_080094c0();\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),0,0x40200000);\n    result1 = FUN_080082d0((int)result1,temp2,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    result = FUN_08008ba0();\n    temp7 = FUN_0800856c();\n    result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n    temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n    temp2 = (undefined4)result1;\n    if (localOffset1 < 1) {\n      if (localOffset1 == 0) {\n        iterationCount = (int)localArray3[count3 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iterationCount = FUN_08008b4c(temp2,temp1,0,0x3fe00000);\n      if (iterationCount != 0) {\n        result = result + 1;\n        if (count3 < 1) {\n          result1 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          iterationCount = 2;\n          goto LAB_0800a7a4;\n        }\n        iterationCount = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      index = (int)localArray3[count3 + -1] >> (0x18U - localOffset1 & 0xff);\n      temp4 = localArray3[count3 + -1] - (index << (0x18U - localOffset1 & 0xff));\n      iterationCount = (int)temp4 >> (0x17U - localOffset1 & 0xff);\n      localArray3[count3 + -1] = temp4;\n      result = result + index;\njoined_r0x0800a8b8:\n      if (0 < iterationCount) {\n        result = result + 1;\n        if (count3 < 1) {\n          isTrue = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (localArray3[0] == 0) {\n            isTrue = false;\n            if (count3 != 1) {\n              ptr2 = localArray3;\n              index = 1;\n              do {\n                ptr2 = ptr2 + 1;\n                if (*ptr2 != 0) {\n                  count1 = index + 1;\n                  temp4 = *ptr2;\n                  goto LAB_0800a8e2;\n                }\n                index = index + 1;\n              } while (index != count3);\n              isTrue = false;\n            }\n          }\n          else {\n            count1 = 1;\n            index = 0;\n            temp4 = localArray3[0];\nLAB_0800a8e2:\n            localArray3[index] = 0x1000000 - temp4;\n            if (count1 < count3) {\n              temp4 = localArray3[count1];\n              ptr2 = localArray3 + count1;\n              while( true ) {\n                ptr4 = ptr2 + 1;\n                *ptr2 = 0xffffff - temp4;\n                if (ptr4 == localArray3 + count3) break;\n                temp4 = *ptr4;\n                ptr2 = ptr4;\n              }\n            }\n            isTrue = true;\n          }\n        }\n        if (0 < localOffset1) {\n          if (localOffset1 == 1) {\n            localArray3[count3 + -1] = localArray3[count3 + -1] & 0x7fffff;\n          }\n          else if (localOffset1 == 2) {\n            localArray3[count3 + -1] = localArray3[count3 + -1] & 0x3fffff;\n          }\n        }\n        if (iterationCount == 2) {\n          result1 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          if (isTrue) {\n            temp7 = FUN_0800b2e8(0,0x3ff00000,localOffset1);\n            result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),(int)temp7,\n                                  (int)((ulonglong)temp7 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp2 = (undefined4)((ulonglong)result1 >> 0x20);\n    index = FUN_08008b10((int)result1,temp2,0,0);\n    if (index == 0) {\n      result1 = FUN_0800b2e8((int)result1,temp2,-localOffset1);\n      temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n      temp2 = (undefined4)result1;\n      offset = FUN_08008b4c(temp2,temp1,0,0x41700000);\n      if (offset == 0) {\n        temp4 = FUN_08008ba0(temp2,temp1);\n        localArray3[count3] = temp4;\n        index = count3;\n      }\n      else {\n        FUN_08008640(temp2,temp1,0,0x3e700000);\n        temp4 = FUN_08008ba0();\n        result1 = FUN_0800856c();\n        result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp2,temp1,(int)result1,(int)((ulonglong)result1 >> 0x20));\n        temp = FUN_08008ba0();\n        localOffset1 = localOffset1 + 0x18;\n        localArray3[count3] = temp;\n        localArray3[count3 + 1] = temp4;\n        index = count3 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    index = count3 + -1;\n    if (count2 <= index) {\n      temp4 = 0;\n      ptr2 = localArray3 + count3 + 0x3fffffff;\n      do {\n        ptr4 = ptr2 + -1;\n        temp4 = temp4 | *ptr2;\n        ptr2 = ptr4;\n      } while (ptr4 != localArray2[0]);\n      if (temp4 != 0) break;\n    }\n    if (localArray3[count2 + -1] == 0) {\n      localCount1 = 1;\n      pptr = localArray2 + count2;\n      do {\n        ptr2 = *pptr;\n        localCount1 = localCount1 + 1;\n        pptr = pptr + -1;\n      } while (ptr2 == (uint *)0x0);\n      localCount1 = count3 + localCount1;\n    }\n    else {\n      localCount1 = count3 + 1;\n    }\n    iterationCount = count3 + 1;\n    ptr8 = (undefined4 *)(data + (iterationCount + localCount2 + 0x3fffffff) * 4);\n    ptr5 = &temp8 + count3 + startOffset;\n    localArray1 = &temp9 + iterationCount;\n    do {\n      ptr8 = ptr8 + 1;\n      result1 = FUN_0800856c(*ptr8);\n      *ptr5 = result1;\n      ptr7 = ptr5 + 1;\n      if (offset < 0) {\n        temp7 = 0;\n      }\n      else {\n        temp7 = 0;\n        ptr18 = ptr3;\n        while( true ) {\n          ptr5 = ptr5 + -1;\n          ptr1 = ptr18 + 2;\n          result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),*ptr1,ptr18[3]);\n          temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)result1,\n                                (int)((ulonglong)result1 >> 0x20));\n          if (ptr1 == ptr3 + startOffset * 2) break;\n          result1 = *ptr5;\n          ptr18 = ptr1;\n        }\n      }\n      *localArray1 = temp7;\n      iterationCount = iterationCount + 1;\n      count3 = localCount1;\n      ptr5 = ptr7;\n      localArray1 = localArray1 + 1;\n    } while (iterationCount <= localCount1);\n  } while( true );\n  localOffset1 = localOffset1 + -0x18;\n  if (localArray3[index] == 0) {\n    ptr2 = localArray3 + count3 + 0x3ffffffe;\n    do {\n      temp4 = *ptr2;\n      index = index + -1;\n      localOffset1 = localOffset1 + -0x18;\n      ptr2 = ptr2 + -1;\n    } while (temp4 == 0);\n  }\nLAB_0800a9f6:\n  result1 = FUN_0800b2e8(0,0x3ff00000,localOffset1);\n  if (index < 0) {\n    if (2 < calculationType) {\n      if (calculationType == 3) {\n        result1 = 0;\nLAB_0800abe4:\n        if (iterationCount == 0) {\n          *localArray2[1] = (undefined4)localArray4;\n          *(int *)((int)localArray2[1] + 4) = localArray4._4_4_;\n          *(undefined8 *)((int)localArray2[1] + 0x10) = result1;\n          *(int *)((int)localArray2[1] + 8) = localArray5[0];\n          *(int *)((int)localArray2[1] + 0xc) = localArray5[1];\n          return result & 7;\n        }\n        *(int *)((int)localArray2[1] + 0x10) = (int)result1;\n        *(int *)((int)localArray2[1] + 8) = localArray5[0];\n        *(int *)((int)localArray2[1] + 0x14) = (int)((ulonglong)result1 >> 0x20) + -0x80000000;\n        *(int *)((int)localArray2[1] + 4) = localArray4._4_4_ + -0x80000000;\n        *(int *)((int)localArray2[1] + 0xc) = localArray5[1] + -0x80000000;\n        *localArray2[1] = (undefined4)localArray4;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (calculationType < 1) {\n      if (calculationType != 0) goto LAB_0800ab0e;\n      result1 = 0;\nLAB_0800aafc:\n      offset = (int)((ulonglong)result1 >> 0x20);\n      if (iterationCount != 0) {\n        offset = offset + -0x80000000;\n      }\n      *localArray2[1] = (int)result1;\n      *(int *)((int)localArray2[1] + 4) = offset;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    result1 = 0;\n  }\n  else {\n    ptr7 = &temp9 + index;\n    ptr2 = localArray3 + index + 1;\n    ptr5 = &temp9 + index + 1;\n    do {\n      temp2 = (undefined4)((ulonglong)result1 >> 0x20);\n      ptr2 = ptr2 + -1;\n      temp7 = FUN_0800856c(*ptr2);\n      temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)result1,temp2);\n      ptr5 = ptr5 + -1;\n      *ptr5 = temp7;\n      result1 = FUN_08008640((int)result1,temp2,0,0x3e700000);\n    } while (ptr2 != localArray3);\n    offset = 0;\n    do {\n      if (count2 < 0) {\n        result1 = 0;\n      }\n      else {\n        temp2 = 0x40000000;\n        temp1 = 0x3ff921fb;\n        result1 = 0;\n        count3 = 0;\n        ptr5 = ptr7;\n        ptr3 = &DAT_0800c028;\n        while( true ) {\n          temp7 = FUN_08008640(*(undefined4 *)ptr5,*(undefined4 *)((int)ptr5 + 4),temp2,temp1\n                               );\n          result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),(int)temp7,\n                                (int)((ulonglong)temp7 >> 0x20));\n          count3 = count3 + 1;\n          if ((count2 < count3) || (offset < count3)) break;\n          temp2 = *ptr3;\n          temp1 = ptr3[1];\n          ptr5 = ptr5 + 1;\n          ptr3 = ptr3 + 2;\n        }\n      }\n      isTrue = offset != index;\n      *(int *)(&localArray4 + offset) = (int)result1;\n      *(int *)((int)&localArray4 + (offset * 2 + 1) * 4) = (int)((ulonglong)result1 >> 0x20);\n      ptr7 = ptr7 + -1;\n      offset = offset + 1;\n    } while (isTrue);\n    if (2 < calculationType) {\n      if (calculationType == 3) {\n        if (index != 0) {\n          ptr5 = &localArray4 + index;\n          result1 = CONCAT44(*(undefined4 *)((int)&localArray4 + (index * 2 + 1) * 4),\n                            *(undefined4 *)ptr5);\n          do {\n            temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n            temp2 = (undefined4)result1;\n            temp3 = *(undefined4 *)(ptr5 + -1);\n            temp6 = *(undefined4 *)((int)ptr5 + -4);\n            result1 = FUN_080082d4(temp2,temp1,temp3,temp6);\n            temp7 = FUN_080082d0(temp3,temp6,(int)result1,(int)((ulonglong)result1 >> 0x20));\n            temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp2,temp1);\n            *ptr5 = temp7;\n            ptr5 = ptr5 + -1;\n            *ptr5 = result1;\n          } while (&localArray4 != ptr5);\n          if (1 < index) {\n            ptr5 = &localArray4 + index;\n            result1 = CONCAT44(*(undefined4 *)((int)&localArray4 + (index * 2 + 1) * 4),\n                              *(undefined4 *)ptr5);\n            do {\n              temp1 = (undefined4)((ulonglong)result1 >> 0x20);\n              temp2 = (undefined4)result1;\n              temp3 = *(undefined4 *)(ptr5 + -1);\n              temp6 = *(undefined4 *)((int)ptr5 + -4);\n              result1 = FUN_080082d4(temp2,temp1,temp3,temp6);\n              temp7 = FUN_080082d0(temp3,temp6,(int)result1,(int)((ulonglong)result1 >> 0x20));\n              temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),temp2,temp1);\n              *ptr5 = temp7;\n              ptr5 = ptr5 + -1;\n              *ptr5 = result1;\n            } while (&localArray4 + 1 != ptr5);\n            result1 = 0;\n            ptr5 = &localArray4 + index + 1;\n            do {\n              ptr7 = ptr5 + -1;\n              result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),\n                                    *(undefined4 *)ptr7,*(undefined4 *)((int)ptr5 + -4));\n              ptr5 = ptr7;\n            } while (&localArray4 + 2 != ptr7);\n            goto LAB_0800abe4;\n          }\n        }\n        result1 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (calculationType < 1) {\n      if (calculationType != 0) goto LAB_0800ab0e;\n      result1 = 0;\n      ptr5 = &localArray4 + index + 1;\n      do {\n        ptr7 = ptr5 + -1;\n        result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),*(undefined4 *)ptr7,\n                              *(undefined4 *)((int)ptr5 + -4));\n        ptr5 = ptr7;\n      } while (&localArray4 != ptr7);\n      goto LAB_0800aafc;\n    }\n    result1 = 0;\n    ptr5 = &localArray4 + index + 1;\n    do {\n      ptr7 = ptr5 + -1;\n      result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),*(undefined4 *)ptr7,\n                            *(undefined4 *)((int)ptr5 + -4));\n      ptr5 = ptr7;\n    } while (&localArray4 != ptr7);\n  }\n  offset = (int)((ulonglong)result1 >> 0x20);\n  temp2 = (undefined4)result1;\n  if (iterationCount == 0) {\n    *(undefined8 *)localArray2[1] = result1;\n    result1 = FUN_080082d0((undefined4)localArray4,localArray4._4_4_,temp2,offset);\n    if (index < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    offset = 1;\n    ptr5 = &localArray4;\n    do {\n      result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),\n                            *(undefined4 *)(ptr5 + 1),*(undefined4 *)((int)ptr5 + 0xc));\n      offset = offset + 1;\n      ptr5 = ptr5 + 1;\n    } while (offset <= index);\n    if (iterationCount == 0) goto LAB_0800ad26;\n  }\n  else {\n    *localArray2[1] = temp2;\n    *(int *)((int)localArray2[1] + 4) = offset + -0x80000000;\n    result1 = FUN_080082d0((undefined4)localArray4,localArray4._4_4_,temp2,offset);\n    if (0 < index) goto LAB_0800ad04;\n  }\n  result1 = CONCAT44((int)((ulonglong)result1 >> 0x20) + -0x80000000,(int)result1);\nLAB_0800ad26:\n  *(undefined8 *)((int)localArray2[1] + 8) = result1;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "inputLength",
                "param_4": "startOffset",
                "param_5": "calculationType",
                "param_6": "data",
                "puVar1": "ptr1",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "index",
                "puVar5": "ptr2",
                "uVar6": "temp1",
                "ppuVar7": "pptr",
                "uVar8": "temp2",
                "iVar9": "offset",
                "puVar10": "ptr3",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "puVar13": "ptr4",
                "iVar14": "count1",
                "iVar15": "count2",
                "puVar16": "ptr5",
                "iVar17": "count3",
                "uVar18": "temp5",
                "puVar19": "ptr6",
                "uVar20": "temp6",
                "iVar21": "iterationCount",
                "puVar22": "ptr7",
                "puVar23": "ptr8",
                "bVar24": "isTrue",
                "uVar25": "temp7",
                "uVar26": "result1",
                "uVar27": "result2",
                "local_284": "localArray1",
                "local_280": "localCount1",
                "local_270": "localOffset1",
                "local_26c": "localCount2",
                "local_260": "localArray2",
                "local_258": "localArray3",
                "uStack_208": "temp8",
                "local_168": "localArray4",
                "local_160": "localArray5",
                "uStack_c8": "temp9"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input_value,uint value_limit,undefined4 param_3,undefined4 param_4,int is_condition_met)\n\n{\n  int result;\n  undefined4 result_part1;\n  undefined4 result_part2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  \n  if (((value_limit & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input_value;\n  }\n  temp4 = FUN_08008640(input_value,value_limit,input_value);\n  temp1 = (undefined4)((ulonglong)temp4 >> 0x20);\n  result_part2 = (undefined4)temp4;\n  temp4 = FUN_08008640(input_value,value_limit,result_part2,temp1);\n  temp2 = (undefined4)((ulonglong)temp4 >> 0x20);\n  result_part1 = (undefined4)temp4;\n  temp4 = FUN_08008640(result_part2,temp1,0x5acfd57c,0x3de5d93a);\n  temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result_part2,temp1);\n  temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result_part2,temp1);\n  temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result_part2,temp1);\n  temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x1110f8a6,0x3f811111);\n  temp3 = (undefined4)((ulonglong)temp4 >> 0x20);\n  if (is_condition_met != 0) {\n    temp5 = FUN_08008640(param_3,param_4,0,0x3fe00000);\n    temp4 = FUN_08008640(result_part1,temp2,(int)temp4,temp3);\n    temp4 = FUN_080082d0((int)temp5,(int)((ulonglong)temp5 >> 0x20),(int)temp4,\n                         (int)((ulonglong)temp4 >> 0x20));\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result_part2,temp1);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),param_3,param_4);\n    temp5 = FUN_08008640(result_part1,temp2,0x55555549,0x3fc55555);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                         (int)((ulonglong)temp5 >> 0x20));\n    result_part2 = FUN_080082d0(input_value,value_limit,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    return result_part2;\n  }\n  temp4 = FUN_08008640(result_part2,temp1,(int)temp4,temp3);\n  temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x55555549,0x3fc55555);\n  temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result_part1,temp2);\n  result_part2 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),input_value,value_limit);\n  return result_part2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_value",
                "param_2": "value_limit",
                "param_5": "is_condition_met",
                "iVar1": "result",
                "uVar2": "result_part1",
                "uVar3": "result_part2",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int returnValue;\n  undefined4 result5;\n  uint positiveInput2;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined4 localVar1;\n  \n  tempResult1 = CONCAT44(input2,input1);\n  positiveInput2 = input2 & 0x7fffffff;\n  if (positiveInput2 < 0x44100000) {\n    if (positiveInput2 < 0x3fdc0000) {\n      if (positiveInput2 < 0x3e200000) {\n        tempResult2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        returnValue = FUN_08008b60((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0,0x3ff00000);\n        if (returnValue != 0) {\n          return input1;\n        }\n      }\n      returnValue = -1;\n    }\n    else {\n      tempResult1 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n      result1 = (undefined4)tempResult1;\n      if (positiveInput2 < 0x3ff30000) {\n        if (positiveInput2 < 0x3fe60000) {\n          tempResult1 = FUN_080082d4(result1,result4,result1,result4);\n          tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x3ff00000);\n          tempResult2 = FUN_080082d4(result1,result4,0,0x40000000);\n          tempResult1 = FUN_08008894((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                               (int)((ulonglong)tempResult2 >> 0x20));\n          returnValue = 0;\n        }\n        else {\n          tempResult1 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          tempResult2 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          tempResult1 = FUN_08008894((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                               (int)((ulonglong)tempResult2 >> 0x20));\n          returnValue = 1;\n        }\n      }\n      else if (positiveInput2 < 0x40038000) {\n        tempResult1 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        tempResult2 = FUN_08008640(result1,result4,0,0x3ff80000);\n        tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0,0x3ff00000);\n        tempResult1 = FUN_08008894((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                             (int)((ulonglong)tempResult2 >> 0x20));\n        returnValue = 2;\n      }\n      else {\n        tempResult1 = FUN_08008894(0,0xbff00000,result1,result4);\n        returnValue = 3;\n      }\n    }\n    localVar1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    result5 = (undefined4)tempResult1;\n    tempResult1 = FUN_08008640(result5,localVar1,result5);\n    result2 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    result1 = (undefined4)tempResult1;\n    tempResult1 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    result4 = (undefined4)tempResult1;\n    tempResult1 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x24760deb,0x3fa97b4b);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result4,result3);\n    tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result4,result3);\n    tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0xc54c206e,0x3fb745cd);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result4,result3);\n    tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x920083ff,0x3fc24924);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result4,result3);\n    tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x5555550d,0x3fd55555);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    tempResult2 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x52defd9a,0x3fadde2d);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),result4,result3);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),result4,result3);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xfe231671,0x3fbc71c6);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),result4,result3);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x9998ebc4,0x3fc99999);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n    if (returnValue == -1) {\n      tempResult1 = FUN_080082d4((int)tempResult1,result1,(int)tempResult2,result4);\n      tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result5,localVar1);\n      returnValue = FUN_080082d0(result5,localVar1,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n      return returnValue;\n    }\n    tempResult1 = FUN_080082d4((int)tempResult1,result1,(int)tempResult2,result4);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result5,localVar1);\n    tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c094 + returnValue * 8));\n    tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),result5,localVar1);\n    returnValue = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c074 + returnValue * 8),(int)tempResult1,\n                         (int)((ulonglong)tempResult1 >> 0x20));\n    if ((int)input2 < 0) {\n      return returnValue;\n    }\n  }\n  else {\n    if ((0x7ff00000 < positiveInput2) || ((positiveInput2 == 0x7ff00000 && (input1 != 0)))) {\n      returnValue = FUN_080082d4(input1,input2,input1);\n      return returnValue;\n    }\n    returnValue = 0x54442d18;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "returnValue",
                "uVar6": "result5",
                "uVar7": "positiveInput2",
                "uVar8": "tempResult1",
                "uVar9": "tempResult2",
                "local_2c": "localVar1"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "apply_mask_0800b2d4",
            "code": "\nuint applyMask_0800b2d4(undefined4 inputFlag,uint inputValue)\n\n{\n  return (inputValue | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "apply_mask_0800b2d4",
                "param_1": "inputFlag",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_application_0800b2e0",
            "code": "\nundefined4 initializeApplication_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_application_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculateResult_0800b2e8(uint input1,uint input2,int offset,undefined4 parameter)\n\n{\n  uint shiftedInput2;\n  int result;\n  uint highInput2;\n  undefined8 combinedInputs;\n  \n  combinedInputs = CONCAT44(input2,input1);\n  shiftedInput2 = (input2 << 1) >> 0x15;\n  if (shiftedInput2 == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    combinedInputs = FUN_08008640(input1,input2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shiftedInput2 = ((uint)((int)((ulonglong)combinedInputs >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedInput2 == 0x7ff) {\n    shiftedInput2 = FUN_080082d4(input1,input2,input1,input2,parameter);\n    return shiftedInput2;\n  }\n  highInput2 = (uint)((ulonglong)combinedInputs >> 0x20);\n  result = shiftedInput2 + offset;\n  if (result < 0x7ff) {\n    if (0 < result) {\n      return (uint)combinedInputs;\n    }\n    if (result + 0x35 < 0 == SCARRY4(result,0x35)) {\n      shiftedInput2 = FUN_08008640((uint)combinedInputs,highInput2 & 0x800fffff | (result + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedInput2;\n    }\n    if (offset < 0xc351) {\n      combinedInputs = CONCAT44(highInput2 & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedInput2 = FUN_08008640((int)combinedInputs,(int)((ulonglong)combinedInputs >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedInput2;\n    }\n  }\n  shiftedInput2 = FUN_08008640(0x8800759c,highInput2 & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedInput2;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "parameter",
                "uVar1": "shiftedInput2",
                "iVar2": "result",
                "uVar3": "highInput2",
                "uVar4": "combinedInputs"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_dat_entry_0800b3dc",
            "code": "\nundefined4 get_dat_entry_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_dat_entry_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_multiple_functions_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeMultipleFunctions_0800b3e8(void)\n\n{\n  int counter;\n  code **functionPointerArray;\n  \n  FUNC_0800b5b0();\n  counter = 0;\n  functionPointerArray = (code **)&DAT_0800c0b4;\n  do {\n    counter = counter + 1;\n    (**functionPointerArray)();\n    functionPointerArray = functionPointerArray + 1;\n  } while (counter != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_multiple_functions_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "functionPointerArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_0800b430",
            "code": "\nvoid memset_0800b430(undefined4 *dest,undefined value,uint size)\n\n{\n  undefined4 *destPtr;\n  undefined4 *tempPtr;\n  uint count;\n  undefined4 concatValue;\n  bool isZero;\n  \n  if (((uint)dest & 3) != 0) {\n    count = size - 1;\n    destPtr = dest;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      dest = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      size = count;\n      if (((uint)dest & 3) == 0) break;\n      isZero = count == 0;\n      count = count - 1;\n      destPtr = dest;\n      if (isZero) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    concatValue = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      destPtr = dest + 4;\n      do {\n        destPtr[-4] = concatValue;\n        destPtr[-3] = concatValue;\n        destPtr[-2] = concatValue;\n        destPtr[-1] = concatValue;\n        destPtr = destPtr + 4;\n      } while (destPtr != (undefined4 *)((int)dest + (size - 0x10 & 0xfffffff0) + 0x20));\n      count = size & 0xc;\n      dest = dest + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (count == 0) goto joined_r0x0800b4a8;\n    }\n    destPtr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)dest);\n    do {\n      tempPtr = dest + 1;\n      *dest = concatValue;\n      dest = tempPtr;\n    } while (destPtr != tempPtr);\n    size = size & 3;\n    dest = destPtr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    destPtr = dest;\n    do {\n      tempPtr = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      destPtr = tempPtr;\n    } while ((undefined4 *)(size + (int)dest) != tempPtr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_0800b430",
                "param_1": "dest",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "destPtr",
                "puVar2": "tempPtr",
                "uVar3": "count",
                "uVar4": "concatValue",
                "bVar5": "isZero"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int inputType,undefined4 newValue,undefined4 data1,undefined4 data2)\n\n{\n  undefined *dataPtr;\n  undefined4 returnValue;\n  uint bitMask;\n  uint counter;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPtr = DAT_20000168;\n  counter = *(uint *)(DAT_20000168 + 4);\n  if ((int)counter < 0x20) {\n    if (inputType != 0) {\n      *(undefined4 *)(DAT_20000168 + counter * 4 + 0x88) = data1;\n      bitMask = 1 << (counter & 0xff);\n      *(uint *)(dataPtr + 0x188) = *(uint *)(dataPtr + 0x188) | bitMask;\n      *(undefined4 *)(dataPtr + counter * 4 + 0x108) = data2;\n      if (inputType == 2) {\n        *(uint *)(dataPtr + 0x18c) = bitMask | *(uint *)(dataPtr + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPtr + 4) = counter + 1;\n    *(undefined4 *)(dataPtr + (counter + 2) * 4) = newValue;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "inputType",
                "param_2": "newValue",
                "param_3": "data1",
                "param_4": "data2",
                "puVar1": "dataPtr",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "counter"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 197527,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}