{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_flag_status_0800192c",
                "PTR_DAT_08001954": "flag_data",
                "PTR_DAT_08001958": "flag_status"
            },
            "code": "void check_flag_status_0800192c(void)\n{\n  int flag = PTR_DAT_08001954[0x28];\n  if ((flag & 8) == 0) {\n    *(int *)PTR_DAT_08001958 = 0;\n  }\n  else {\n    *(int *)PTR_DAT_08001958 = 1;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_flag_status_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "setParam_08006950",
                "param_1": "paramValue",
                "DAT_08006994": "ptrBase"
            },
            "code": "void setParam_08006950(uint8_t paramValue) {\n    uint32_t* ptr = (uint32_t*)(DAT_08006994 + 0xc);\n    uint32_t value = (*ptr & 0xf8ff) | ((paramValue & 0x7) << 8) | 0x5fa0000;\n    *ptr = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "setParam_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "calculate_08008ba0",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar1": "quotient",
                "iVar2": "shifted_denominator",
                "uVar3": "abs_shifted_denominator"
            },
            "code": "uint calculate_08008ba0(uint numerator, uint denominator)\n{\n  uint quotient;\n  int shifted_denominator;\n  uint abs_shifted_denominator;\n  \n  shifted_denominator = denominator * 2 + 0x200000;\n  if (denominator * 2 < 0xffe00000) {\n    if (shifted_denominator >= 0) {\n      return 0;\n    }\n    quotient = shifted_denominator >> 0x15;\n    abs_shifted_denominator = -quotient - 0x3e1;\n    if (quotient < 0xfffffc20 && abs_shifted_denominator != 0) {\n      quotient = (denominator << 0xb | 0x80000000 | numerator >> 0x15) >> (abs_shifted_denominator & 0xff);\n      if ((denominator & 0x80000000) != 0) {\n        quotient = -quotient;\n      }\n      return quotient;\n    }\n  }\n  else if ((numerator | denominator << 0xc) != 0) {\n    return 0;\n  }\n  denominator = denominator & 0x80000000;\n  if (denominator == 0) {\n    denominator = 0x7fffffff;\n  }\n  return denominator;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800adf0",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_080095b8",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "check_and_call_func_08005984",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "code": "int check_and_call_func_08005984(int input_param)\n{\n  int result;\n  if (*(int *)PTR_DAT_080059b0 == 0) {\n    result = call_func_with_params(1, input_param, 0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "check_and_call_func_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_bit_08007a10",
                "param_1": "value",
                "DAT_08007a64": "data_block",
                "FLAG_A": "0x40000000",
                "FLAG_B": "DAT_08007a68",
                "FLAG_C": "DAT_08007a6c",
                "BIT_A": "1",
                "BIT_B": "2",
                "BIT_C": "4",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void set_bit_08007a10(uint32_t value)\n{\n    if (value == FLAG_A)\n    {\n        *(uint32_t *)(DAT_08007a64 + OFFSET) |= BIT_A;\n    }\n    else if (value == FLAG_B)\n    {\n        *(uint32_t *)(DAT_08007a64 + OFFSET) |= BIT_B;\n    }\n    else if (value == FLAG_C)\n    {\n        *(uint32_t *)(DAT_08007a64 + OFFSET) |= BIT_C;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "set_bit_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "calculate_shifted_values_0800856c",
                "param_1": "number",
                "uVar1": "shifted_bits",
                "uVar2": "abs_number",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes_count",
                "uVar5": "shift_amount_with_offset",
                "uVar6": "sign_bit",
                "bVar7": "is_leading_zeroes_negative",
                "bVar8": "is_leading_zeroes_zero",
                "bVar9": "is_shift_amount_negative",
                "in_r12": "unused_variable",
                "shifted_number": "shifted_number",
                "or_mask": "or_mask",
                "zero_mask": "zero_mask"
            },
            "code": "ulonglong calculate_shifted_values_0800856c(uint number);\n\nulonglong calculate_shifted_values_0800856c(uint number)\n{\n  uint sign_bit = number & 0x80000000;\n  uint abs_number = number;\n  if ((int)sign_bit < 0) {\n    abs_number = -number;\n  }\n  uint shift_amount = calculate_shifted_values_0800856c(abs_number) + 0x15;\n  bool is_shift_amount_negative = (int)(shift_amount - 0x20) < 0;\n  uint shifted_number;\n  uint or_mask;\n  uint zero_mask;\n  if (is_shift_amount_negative) {\n    shifted_number = abs_number << (shift_amount & 0xff);\n    or_mask = 0U >> ((0x20 - shift_amount) & 0xff);\n    zero_mask = 0 << (shift_amount & 0xff);\n  } else {\n    shifted_number = abs_number << (shift_amount & 0xff) | 0U >> ((0x20 - shift_amount) & 0xff);\n    or_mask = sign_bit;\n    zero_mask = 0 << (shift_amount & 0xff);\n  }\n  if ((int)shift_amount < 0x433) {\n    return ((ulonglong)shifted_number + (0x432 - shift_amount) * 0x100000 | sign_bit) << 32 | zero_mask;\n  }\n  uint shift_amount_complement = ~(0x432 - shift_amount);\n  if (0x1e < (int)shift_amount_complement) {\n    return ((ulonglong)number << (shift_amount_complement - 0x1f & 0xff) | shifted_number >> ((shift_amount_complement - 0x1f) & 0xff)) & 0x80000000ffffffff;\n  }\n  int shift_amount_difference = shift_amount_complement - 0x13;\n  if (shift_amount_difference == 0 || shift_amount_difference < 0 != ((shift_amount_complement - 0x1f) < 0xc)) {\n    shift_amount_complement++;\n    return ((ulonglong)sign_bit | shifted_number >> (shift_amount_complement & 0xff)) << 32 | (ulonglong)zero_mask >> (0x20 - (0xcU - shift_amount_difference) & 0xff) | (ulonglong)shifted_number << ((0xcU - shift_amount_difference) & 0xff);\n  }\n  return ((ulonglong)number << (0x20 - (0xcU - shift_amount_difference) & 0xff) | shifted_number << ((0xcU - shift_amount_difference) & 0xff)) & 0x80000000ffffffff;\n}\n\nulonglong calculate_shifted_values_0800856c(uint number)\n{\n  uint mask = 0x80000000;\n  ulonglong count = 0;\n  while ((mask & number) == 0 && mask != 0) {\n    count++;\n    mask >>= 1;\n  }\n  return count;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_shifted_values_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "run_function_08008b00",
                "param_1": "input",
                "FUN_08008a74": "execute_setup"
            },
            "code": "undefined4 run_function_08008b00(undefined4 input)\n{\n  execute_setup();\n  return input;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b10",
                "FUN_08008b24",
                "FUN_08008af0"
            ],
            "imported": false,
            "current_name": "run_function_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "update_data_if_flag_is_set_0800585c",
                "PTR_DAT_08005878": "data_flag_array",
                "FLAG_SET": "'\\x02'",
                "NEW_FLAG_VALUE": "3",
                "FUN_08005790": "update_data"
            },
            "code": "void update_data_if_flag_is_set_0800585c(void)\n{\n  if (PTR_DAT_08005878[1] == FLAG_SET) {\n    PTR_DAT_08005878[1] = NEW_FLAG_VALUE;\n    update_data();\n  }\n  return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_flag_is_set_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "trigger_software_interrupt_0800597c",
                "PTR_": "",
                "DAT_": "",
                "software_interrupt": "trigger_interrupt",
                "SWI_CODE": "0x3f"
            },
            "code": "void trigger_software_interrupt_0800597c(void)\n{\n  software_interrupt(SWI_CODE);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "trigger_software_interrupt_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "convert_to_double_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "bias",
                "uVar2": "exponent",
                "lVar3": "mantissa",
                "DAT_08009814": "mask"
            },
            "code": "longlong convert_to_double_08009798(uint input1, uint input2, undefined4 param_3, undefined4 param_4)\n{\n  uint exponent = (input2 << 1) >> 0x15;\n  uint bias = exponent - 0x3ff;\n  if ((int)bias < 0x14) {\n    if ((int)bias < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    longlong mantissa = (ulonglong)(input2 & ~(DAT_08009814 >> (bias & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)bias < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (exponent - 0x413 & 0xff)));\n    }\n    if (bias != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    longlong mantissa = FUNC_080082d4(input1,input2,input1,input2,param_4);\n  }\n  return mantissa;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_to_double_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08002408",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "process_data_08007930",
                "puVar1": "data_ptr",
                "uVar2": "result",
                "uVar3": "new_flag",
                "uVar4": "old_flag",
                "iVar5": "index"
            },
            "code": "void process_data_08007930(void)\n{\n  uint32_t* data_ptr = PTR_DAT_080079b8;\n  uint32_t* flag_ptr = (uint32_t*)PTR_DAT_080079bc;\n  if (*flag_ptr != 0) {\n    int index = data_ptr[0x14];\n    uint32_t result = calculate_result();\n    data_ptr[index * 4] = result;\n    if (data_ptr[0x14] == 3) {\n      index = 0;\n    }\n    else {\n      index = data_ptr[0x14] + 1;\n    }\n    data_ptr[0x14] = index;\n    uint32_t new_flag = get_new_flag();\n    if (new_flag != data_ptr[0x10]) {\n      uint32_t old_flag = data_ptr[0x10];\n      if ((~old_flag & new_flag) != 0) {\n        update_flag(~old_flag & new_flag);\n      }\n      if ((~new_flag & old_flag) != 0) {\n        update_flag(~new_flag & old_flag);\n      }\n      data_ptr[0x10] = new_flag;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007884",
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "process_data_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "check_if_first_call_08000188",
                "param_1": "is_first_call",
                "*PTR_DAT_080001a0": "is_first_call",
                "DAT_080001a4": "has_function_pointer",
                "PTR_FUN_080001a8": "function_pointer"
            },
            "code": "int* check_if_first_call_08000188(int* *PTR_DAT_080001a0) {\n  if (**PTR_DAT_080001a0 == 0) {\n    if (DAT_080001a4 != 0) {\n      *PTR_DAT_080001a0 = PTR_FUN_080001a8;\n    }\n    **PTR_DAT_080001a0 = 1;\n  }\n  return *PTR_DAT_080001a0;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "check_if_first_call_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_result_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result_int",
                "uVar2": "shifted_input",
                "uVar3": "shift_amount",
                "bVar4": "carry_flag",
                "uVar5": "result",
                "lVar6": "final_result"
            },
            "code": "longlong calculate_result_08009318(uint input1, uint input2, undefined4 param_3, undefined4 param_4)\n{\n  int iVar1;\n  uint shift_amount;\n  uint shifted_input;\n  bool carry_flag;\n  undefined8 result;\n  longlong final_result;\n  shift_amount = (input2 << 1) >> 0x15;\n  shifted_input = shift_amount - 0x3ff;\n  if ((int)shifted_input < 0x14) {\n    if ((int)shifted_input < 0) {\n      result = FUNC_080082d4(input1,input2,DAT_08009400,DAT_08009404,param_4);\n      iVar1 = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (iVar1 != 0) {\n        if ((int)input2 < 0) {\n          final_result = -0x8000000000000000;\n        }\n        else {\n          input1 = input1 | input2;\n          final_result = CONCAT44(input1,input1);\n          if (input1 != 0) {\n            final_result = (ulonglong)DAT_0800940c << 0x20;\n          }\n        }\n      }\n    }\n    else {\n      shifted_input = DAT_08009408 >> (shifted_input & 0xff);\n      final_result = CONCAT44(input2,input1);\n      if ((input2 & shifted_input | input1) != 0) {\n        result = FUNC_080082d4(input1,input2,DAT_08009400,DAT_08009404,param_4);\n        iVar1 = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        final_result = CONCAT44(input2,input1);\n        if (iVar1 != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (shifted_input & 0xff));\n          }\n          final_result = (ulonglong)(input2 & ~shifted_input) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shifted_input < 0x34) {\n    shifted_input = 0xffffffff >> (shift_amount - 0x413 & 0xff);\n    final_result = CONCAT44(input2,input1);\n    if ((shifted_input & input1) != 0) {\n      result = FUNC_080082d4(input1,input2,DAT_08009400,DAT_08009404,param_4);\n      iVar1 = FUN_08008b60((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      final_result = CONCAT44(input2,input1);\n      if (iVar1 != 0) {\n        if (0 < (int)input2) {\n          if (shifted_input == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shifted_input = 1 << (0x34 - shift_amount & 0xff);\n            carry_flag = CARRY4(shifted_input,input1);\n            input1 = shifted_input + input1;\n            if (carry_flag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input2,input1 & ~shifted_input);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input2,input1);\n    if (shifted_input == 0x400) {\n      final_result = FUNC_080082d4();\n    }\n  }\n  return final_result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08003004",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "update_value_080018cc",
                "param_1": "new_value",
                "DAT_080018f8": "data_ptr",
                "PTR_080018fc": "current_value",
                "PTR_08001900": "mask"
            },
            "code": "void update_value_080018cc(uint new_value)\n{\n    uint* DAT_080018f8 = (uint*)(DAT_080018f8 + 0x14);\n    uint PTR_080018fc = *DAT_080018f8;\n    uint PTR_08001900 = 0xfffffaaf;\n    *DAT_080018f8 = (new_value | (PTR_080018fc & PTR_08001900));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_value_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_in_array_080079e0",
                "param_1": "bit_index",
                "DAT_08007a0c": "array_start_address"
            },
            "code": "void set_bit_in_array_080079e0(uint8_t bit_index)\n{\n    uint32_t* array_ptr = (uint32_t*)(DAT_08007a0c + ((uint32_t)bit_index >> 5) * 4);\n    *array_ptr = 1 << (bit_index & 0x1f);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_at_index_08006a58",
                "param_1": "index",
                "PTR_08006a88": "ptr",
                "DAT_08006a88": "ptr_base"
            },
            "code": "void set_bit_at_index_08006a58(int index) {\n  int* PTR_08006a88 = (int *)(DAT_08006a88 + (((uint)(int)(char)index >> 5) + 0x40) * 4);\n  int bit_value = 1 << (index & 0x1f);\n  *PTR_08006a88 = bit_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_value_from_pointer_08005a84",
                "PTR_DAT_08005a94": "value_pointer"
            },
            "code": "int get_value_from_pointer_08005a84() {\n    int* PTR_DAT_08005a94 = (int*) PTR_DAT_08005a94;\n    return *PTR_DAT_08005a94;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08007756",
                "FUN_08005cec",
                "FUN_08000268"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "check_input_not_null_08008b10",
                "in_ZR": "input_character",
                "FUN_08008b00": "execute_input_function"
            },
            "code": "bool check_input_not_null_08008b10(void)\\n{\\n  char input_character;\\n  execute_input_function();\\n  return input_character != \"\\0\";\\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "check_input_not_null_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = FUN_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = FUN_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08008590",
                "FUN_0800192c",
                "FUN_08009214",
                "FUN_08009798",
                "FUN_08008bf0",
                "FUN_08009228",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result",
                "uVar2": "mantissa_shifted",
                "uVar3": "mantissa_shifted_carry",
                "in_r12": "mantissa_shifted_carry_masked",
                "bVar4": "is_zero",
                "bVar5": "is_normal",
                "SCARRY4": "signed_carry",
                "PTR_08057e28": "exponent_overflow_mask",
                "DAT_08057e2c": "nan_mask",
                "DAT_08057e30": "inf_mask",
                "DAT_08057e34": "denormal_mask"
            },
            "code": "uint calculate_float_08008c30(uint exponent, uint mantissa)\n{\n    uint sign_bit = mantissa & 0x80000000;\n    uint mantissa_bits = mantissa & 0x7FFFFF;\n    uint shifted_exponent = exponent << 23;\n    uint shifted_mantissa_bits = mantissa_bits << 3;\n    uint shifted_mantissa_bits_carry = shifted_mantissa_bits + 0x80000000;\n    uint shifted_mantissa_bits_carry_mask = shifted_mantissa_bits_carry & 0x80000000;\n    uint shifted_mantissa_bits_carry_masked = shifted_mantissa_bits_carry & 0x7FFFFFFF;\n    uint exponent_bits = shifted_exponent & 0x7F800000;\n    uint exponent_overflow = shifted_exponent & 0xFF000000;\n    uint PTR_08057e28 = exponent_overflow == 0xFF000000;\n    uint mantissa_overflow = shifted_mantissa_bits_carry_masked == 0;\n    uint mantissa_overflow_mask = PTR_08057e28 & mantissa_overflow;\n    uint DAT_08057e2c = PTR_08057e28 & !mantissa_overflow;\n    uint DAT_08057e30 = !DAT_08057e2c & PTR_08057e28;\n    uint normal_mask = !DAT_08057e30 & !mantissa_overflow_mask;\n    uint DAT_08057e34 = !normal_mask & !DAT_08057e30;\n    uint exponent_bits_masked = exponent_bits | shifted_mantissa_bits_carry_mask;\n    uint exponent_bits_masked_shifted = exponent_bits_masked >> 23;\n    uint exponent_bits_masked_shifted_masked = exponent_bits_masked_shifted & 0xFF;\n    uint exponent_bits_masked_shifted_masked_shifted = exponent_bits_masked_shifted_masked << 23;\n    uint mantissa_bits_masked = shifted_mantissa_bits_carry_masked & 0x7FFFFF;\n    uint result = sign_bit | exponent_bits_masked_shifted_masked_shifted | mantissa_bits_masked;\n    if (DAT_08057e2c)\n    {\n        result = 0x7FC00000;\n    }\n    else if (DAT_08057e30)\n    {\n        result |= sign_bit;\n    }\n    else if (DAT_08057e34)\n    {\n        uint shift = 1 - exponent_bits_masked_shifted_masked;\n        uint shifted_mantissa_bits_masked = mantissa_bits_masked | 0x800000;\n        uint sticky_bit = shifted_mantissa_bits_masked << (shift + 1);\n        uint round_bit = shifted_mantissa_bits_masked << shift;\n        uint round_overflow = round_bit == 0x800000;\n        uint round_overflow_mask = PTR_08057e28 & round_overflow;\n        uint sticky_overflow = sticky_bit != 0;\n        uint sticky_overflow_mask = PTR_08057e28 & sticky_overflow;\n        result |= sign_bit | ((shifted_mantissa_bits_masked >> shift) & 0x7FFFFF);\n        result += round_overflow_mask | sticky_overflow_mask;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_080044e8",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_float_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_08009798",
                "FUN_0800a348",
                "FUN_08009654"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "update_data_08007bf0",
                "param_1": "new_data",
                "_DAT_4000002c": "data_pointer",
                "_DAT_40000024": "max_data_pointer"
            },
            "code": "void update_data_08007bf0(uint32_t new_data)\n{\n  const uint32_t MAX_DATA = *(uint32_t*) 0x40000024;\n  *(uint32_t*) 0x4000002c = new_data;\n  if (new_data <= MAX_DATA)\n  {\n    *(uint32_t*) 0x40000024 = new_data;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "update_data_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "convert_uint_to_uint64_08008590",
                "param_1": "input",
                "param_2": "unused_param1",
                "param_3": "unused_param2",
                "param_4": "unused_param3",
                "uVar1": "temp2",
                "uVar2": "temp6",
                "uVar3": "temp4",
                "uVar4": "temp3",
                "uVar5": "temp1",
                "uVar7": "temp7",
                "bVar8": "is_temp7_zero",
                "bVar9": "is_temp1_zero",
                "bVar10": "is_temp7_negative",
                "in_r12": "shift_amount"
            },
            "code": "uint64_t convert_uint_to_uint64_08008590(uint32_t input, uint32_t unused_param1, uint32_t unused_param2, uint32_t unused_param3) {\n  uint32_t temp1 = input << 1;\n  bool is_temp1_zero = temp1 == 0;\n  uint32_t temp2 = (uint32_t)((input & 0x80000000) != 0) << 31;\n  uint32_t temp3 = (uint32_t)((int)temp1 >> 3) >> 1;\n  uint32_t temp4 = temp2 | temp3;\n  input = input << 29;\n  if (!is_temp1_zero) {\n    uint32_t temp5 = temp1 & 0xff000000;\n    is_temp1_zero = temp5 == 0;\n    if (!is_temp1_zero) {\n      is_temp1_zero = temp5 == 0xff000000;\n      if (!is_temp1_zero) {\n        return ((uint64_t)temp4 << 32) | input) ^ 0x3800000000000000;\n      }\n      return ((uint64_t)temp4 << 32) | input | 0x8000000000000;\n    }\n  }\n  if ((temp1 & 0xffffff) == 0) {\n    return ((uint64_t)temp4 << 32) | input;\n  }\n  uint32_t temp5 = temp3;\n  uint32_t temp6 = input;\n  if (temp3 == 0) {\n    temp5 = 0;\n    temp6 = input;\n  }\n  int leading_zeroes = count_leading_zeroes(temp5);\n  if (temp3 == 0) {\n    leading_zeroes = leading_zeroes + 32;\n  }\n  uint32_t temp7 = leading_zeroes - 11;\n  bool is_temp7_negative = temp7 < 0;\n  bool is_temp7_zero = temp7 == 0;\n  uint32_t temp8 = leading_zeroes - 43;\n  bool is_temp8_negative = (int)temp8 < 0;\n  bool is_temp8_zero = temp8 == 0;\n  if (temp7 < 32) {\n    is_temp7_negative = temp8 < 0xc;\n    leading_zeroes = leading_zeroes - 31;\n    is_temp7_zero = leading_zeroes == 0;\n    is_temp8_zero = leading_zeroes == 0;\n    temp7 = temp7 & 0xff;\n    if (!is_temp7_zero && is_temp7_negative == is_temp8_zero) {\n      temp5 = temp5 << temp7;\n      temp6 = temp6 | (temp5 >> (0xc - leading_zeroes));\n      goto LAB_08008458;\n    }\n  }\n  if (is_temp8_zero || is_temp8_negative != is_temp7_negative) {\n    int shift_amount = 32 - temp7;\n    temp5 = temp5 << temp7;\n    if (is_temp8_zero || is_temp8_negative != is_temp7_negative) {\n      temp5 = temp5 | (temp6 >> shift_amount);\n    }\n    if (is_temp8_zero || is_temp8_negative != is_temp7_negative) {\n      temp6 = temp6 << temp7;\n    }\n  }\nLAB_08008458:\n  if (temp7 < 889) {\n    return ((uint64_t)temp5 + (0x380 - temp7) * 0x100000) | temp2 | temp6;\n  }\n  uint32_t temp9 = ~(0x380 - temp7);\n  if (0x1e < temp9) {\n    return (((uint64_t)temp4 << 32) | temp5 >> (temp9 - 0x1f)) & 0x80000000ffffffff;\n  }\n  int temp10 = temp9 - 0x13;\n  if (temp10 == 0 || temp10 < 0 != (temp9 - 0x1f < 0xc)) {\n    temp9 = temp9 + 1;\n    return ((uint64_t)temp2 | temp5 >> temp9) | temp6 << (0x20 - temp9);\n  }\n  return (((uint64_t)temp4 << 32) | temp6 >> (0x20 - (0xc - temp10))) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "convert_uint_to_uint64_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_data_08007ad0",
                "_DAT_40000000": "data_ptr",
                "DAT_08007b6c": "multiplier",
                "PTR_DAT_08007b68": "multiplicand"
            },
            "code": "void initialize_data_08007ad0(void)\n{\n    uint64_t product = (uint64_t)DAT_08007b6c * (uint64_t)*PTR_DAT_08007b68;\n    uint32_t quotient = (uint32_t)(product >> 56) - 1;\n    uint32_t *_DAT_40000000 = (uint32_t *)0x40000000;\n    for (int i = 0; i < 10; i++) {\n        *(_DAT_40000000 + i) = 0;\n    }\n    *(_DAT_40000000 + 10) = quotient;\n    for (int i = 11; i < 16; i++) {\n        *(_DAT_40000000 + i) = 0;\n    }\n}\n",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = FUN_08008590(local_58);\n      uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = FUN_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = FUN_0800056c(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = FUN_0800056c(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = FUN_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = FUN_08008590(local_34);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = FUN_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08002fd4",
                "FUN_08008590",
                "FUN_08008bf0",
                "FUN_08000220",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08001f00",
                "FUN_080025e8",
                "FUN_08001e98",
                "FUN_08000478",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_0800525c",
                "FUN_08004bf4",
                "FUN_080098d0",
                "FUN_08009228",
                "FUN_0800056c",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_0800184c",
                "FUN_0800923c",
                "FUN_08008894",
                "FUN_08002408"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0",
                "FUN_08003980": "initialize_something",
                "FUN_08004228": "setup_configuration"
            },
            "code": "void initialize_program_080039a0(void)\n{\n  initialize_something();\n  setup_configuration();\n  *(int *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_program_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concatenate_32_bit_values_08009204",
                "param_1": "first_value",
                "param_2": "second_value"
            },
            "code": "undefined8 concatenate_32_bit_values_08009204(uint32_t first_value, uint32_t second_value)\n{\n  call_function_at_0x0800919c();\n  return CONCAT44(second_value, first_value);\n}",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_0800923c"
            ],
            "imported": false,
            "current_name": "concatenate_32_bit_values_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "updateStatus_080029d8",
                "param_1": "status",
                "param_2": "param2",
                "param_3": "param3",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2"
            },
            "code": "void updateStatus_080029d8(int status, int param2, int param3)\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  if (status != 0 && param2 != 0 && param3 != 0) {\n    result = FUN_08009214(*(undefined4 *)(param2 + 0x18), *(undefined4 *)(param2 + 0x1c));\n    if (result == 0) {\n      if (*(char *)(param2 + 0x25) == 0) {\n        result = FUN_08009264(*(undefined4 *)(param2 + 0x1c), *(undefined4 *)(param3 + 0x18));\n        if (result != 0) {\n          var2 = *(undefined4 *)(param2 + 0x1c);\n          var1 = FUN_08002978(*(uint *)(PTR_DAT_08002a90 + 0x20) ^ 0x80000000, *(undefined4 *)(param3 + 0x18), *(undefined4 *)(param2 + 0x20));\n          result = FUN_08009228(var2, var1);\n          if (result != 0) {\n            var1 = *(undefined4 *)(param2 + 0x1c);\n          }\n        }\n        *(undefined4 *)(param2 + 0x18) = var1;\n      } else {\n        *(undefined4 *)(param2 + 0x18) = *(undefined4 *)(param2 + 0x1c);\n      }\n      *(undefined *)(param2 + 0x24) = 1;\n    }\n  }\n}\n",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "updateStatus_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_param_08007c5e",
                "param_1": "new_param",
                "_DAT_40000038": "global_param"
            },
            "code": "void set_param_08007c5e(void* new_param)\n{\n  _DAT_40000038 = new_param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_param_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "execute_function_08005760",
                "PTR_DAT_08005774": "PTR_DATA",
                "FUN_080052ac": "call_another_function"
            },
            "code": "void execute_function_08005760(void)\n{\n  int parameter = *(int *)(PTR_DAT_08005774 + 0x18);\n  call_another_function(parameter);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "is_end_of_string_08008b24",
                "in_CY": "input_char",
                "FUN_08008b00": "get_input_char"
            },
            "code": "bool is_end_of_string_08008b24(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08004148",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_if_condition_met_0800587c",
                "PTR_DAT_0800589c": "data_array"
            },
            "code": "void update_data_if_condition_met_0800587c(void)\n{\n    if (PTR_DAT_0800589c[1] == 3)\n    {\n        PTR_DAT_0800589c[1] = 4;\n        PTR_DAT_0800589c[16] = 0;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_condition_met_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "decode_float_08008a02",
                "param_1": "sign",
                "param_2": "exponent",
                "param_3": "mantissa",
                "param_4": "mask",
                "uVar1": "msb",
                "unaff_r4": "sign_mask",
                "uVar2": "exponent_mask",
                "uVar3": "decoded_mantissa",
                "in_r12": "mask",
                "bVar4": "is_sign_zero",
                "is_sign_zero": "is_sign_zero",
                "is_exponent_zero": "is_exponent_zero"
            },
            "code": "uint64_t decode_float_08008a02(uint32_t sign, uint32_t exponent, uint32_t mantissa, uint32_t mask) {\n    uint32_t sign_mask = mask >> 0x14;\n    uint32_t exponent_mask = mask & 0x7ff;\n    uint32_t decoded_mantissa = mantissa;\n    if (sign_mask != exponent_mask || sign_mask != mask) {\n        if (sign_mask == mask) {\n            if ((sign | exponent << 0xc) == 0 && sign_mask != exponent_mask) {\n                return (uint64_t)((exponent ^ mask) & 0x80000000 | 0x7ff00000) << 0x20;\n            }\n        }\n        else if (exponent_mask == mask) {\n            if ((exponent | mantissa << 0xc) == 0) {\n                return (uint64_t)((sign ^ mask) & 0x80000000) << 0x20;\n            }\n        }\n        else {\n            bool is_sign_zero = (sign | exponent << 1) == 0;\n            bool is_exponent_zero = (exponent | mantissa << 1) == 0;\n            if (!is_sign_zero && !is_exponent_zero) {\n                if (sign_mask == 0) {\n                    uint32_t sign_bit = decoded_mantissa & 0x80000000;\n                    do {\n                        uint32_t msb = sign & 0x80000000;\n                        sign = sign << 1;\n                        decoded_mantissa = decoded_mantissa * 2 + (uint32_t)(msb != 0);\n                    } while ((decoded_mantissa & 0x100000) == 0);\n                    decoded_mantissa |= sign_bit;\n                    if (exponent_mask != 0) {\n                        return ((uint64_t)decoded_mantissa << 0x20) | sign;\n                    }\n                }\n                do {\n                    uint32_t msb = exponent & 0x80000000;\n                    exponent = exponent << 1;\n                    mantissa = mantissa * 2 + (uint32_t)(msb != 0);\n                } while ((mantissa & 0x100000) == 0);\n                return ((uint64_t)decoded_mantissa << 0x20) | sign;\n            }\n            if ((sign | exponent << 1) != 0) {\n                return (uint64_t)((exponent ^ mask) & 0x80000000 | 0x7ff00000) << 0x20;\n            }\n            if ((exponent | mantissa << 1) != 0) {\n                return (uint64_t)((sign ^ mask) & 0x80000000) << 0x20;\n            }\n        }\n    }\n    return ((uint64_t)decoded_mantissa << 0x20) | sign | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "decode_float_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "print_string_0800369c",
                "param_1": "str",
                "local_c": "current_char",
                "FUN_08008250": "print_char"
            },
            "code": "void print_string_0800369c(char *str) {\n  char *current_char = str;\n  while (*current_char != '\\0') {\n    print_char(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "wait_until_reached_08005a98",
                "param_1": "target_value",
                "iVar1": "current_value",
                "uVar2": "new_value",
                "FUN_08005a84": "get_current_value"
            },
            "code": "void wait_until_reached_08005a98(int target_value)\n{\n  int current_value = get_current_value();\n  while(current_value < target_value + current_value)\n  {\n    current_value = get_current_value();\n  }\n  return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "wait_until_reached_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "print_data_080044e8",
                "iVar1": "result",
                "uVar2": "u_var_2",
                "uVar3": "u_var_3",
                "auStack_18": "stack_vals",
                "local_a": "count_1",
                "local_9": "count_2"
            },
            "code": "void print_data_080044e8(void)\n{\n  int i;\n  int result;\n  undefined4 uVar2;\n  undefined8 uVar3;\n  undefined4 stack_vals[3];\n  byte count_1;\n  byte count_2;\n  \n  count_2 = 0;\n  while(true) {\n    if (count_2 > 7) {\n      print_string(PTR_s__G92__080046c8);\n      for (count_1 = 0; count_1 < 3; count_1 = count_1 + 1) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          print_val(*(undefined4 *)(PTR_DAT_080046cc + (count_1 + 10) * 4 + 4));\n        }\n        else {\n          uVar3 = get_val(*(undefined4 *)(PTR_DAT_080046cc + (count_1 + 10) * 4 + 4));\n          uVar3 = process_val((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),DAT_08004690,DAT_08004694);\n          uVar2 = convert_val((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n          print_val(uVar2);\n        }\n        if (count_1 < 2) {\n          print_string(PTR_DAT_080046c0);\n        }\n        else {\n          print_string(PTR_DAT_080046c4);\n        }\n      }\n      return;\n    }\n    result = get_data(count_2,stack_vals);\n    if (result == 0) break;\n    print_string(PTR_DAT_08004698);\n    switch(count_2) {\n    case 0:\n      print_string(PTR_DAT_0800469c);\n      break;\n    case 1:\n      print_string(PTR_DAT_080046a0);\n      break;\n    case 2:\n      print_string(PTR_DAT_080046a4);\n      break;\n    case 3:\n      print_string(PTR_DAT_080046a8);\n      break;\n    case 4:\n      print_string(PTR_DAT_080046ac);\n      break;\n    case 5:\n      print_string(PTR_DAT_080046b0);\n      break;\n    case 6:\n      print_string(PTR_DAT_080046b4);\n      break;\n    case 7:\n      print_string(PTR_DAT_080046b8);\n    }\n    for (count_1 = 0; count_1 < 3; count_1 = count_1 + 1) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        print_val(stack_vals[count_1]);\n      }\n      else {\n        uVar3 = get_val(stack_vals[count_1]);\n        uVar3 = process_val((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),DAT_08004690,DAT_08004694);\n        uVar2 = convert_val((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n        print_val(uVar2);\n      }\n      if (count_1 < 2) {\n        print_string(PTR_DAT_080046c0);\n      }\n      else {\n        print_string(PTR_DAT_080046c4);\n      }\n    }\n    count_2 = count_2 + 1;\n  }\n  print_data_080044e8(10);\n  return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "is_valid_parameter_08006c9c",
                "param_1": "parameter",
                "bVar1": "is_valid",
                "DAT_08006cdc": "data_pointer"
            },
            "code": "bool is_valid_parameter_08006c9c(int parameter) {\n                      bool is_valid = parameter > 0 && parameter < 0x1000000;\n                      if (is_valid) {\n                        int* DAT_08006cdc = DAT_08006cdc;\n                        *(DAT_08006cdc + 1) = parameter - 1;\n                        FUN_08006b00(0xffffffff,0xf);\n                        *(DAT_08006cdc + 2) = 0;\n                        *DAT_08006cdc = 7;\n                      }\n                      return !is_valid;\n                    }",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "is_valid_parameter_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUN_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUN_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_080094c0",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800b2e8",
                "FUN_08008b4c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_data_validity_0800195c",
                "PTR_DAT_08001990": "data",
                "trigger_error": "handle_invalid_data"
            },
            "code": "void check_data_validity_0800195c(void)\n{\n  if ((PTR_DAT_08001990[1] != 6) && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    trigger_error();\n    PTR_DAT_08001990[2] |= 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_data_validity_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "check_input_not_null_08009214",
                "in_ZR": "input_char",
                "FUN_08009204": "get_input_char"
            },
            "code": "bool check_input_not_null_08009214(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_input_not_null_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_input_validity_08004dd2",
                "bVar1": "input",
                "iVar2": "result",
                "PTR_DAT_08004e2c": "memory_pointer"
            },
            "code": "int check_input_validity_08004dd2()\n{\n    byte input = get_input_byte(0);\n    if (input == 5) {\n        int result = allocate_memory(PTR_DAT_08004e2c, 1, 0x40);\n        if (result == 0) {\n            return 0;\n        }\n    }\n    else {\n        if (input > 4) {\n            return 0;\n        }\n        int result = allocate_memory(PTR_DAT_08004e2c, 1, 0x28);\n        if (result == 0) {\n            return 0;\n        }\n        initialize_memory(0);\n    }\n    return 1;\n}",
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_input_validity_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "call_function_with_pointer_arg_08005778",
                "PTR_DAT_0800578c": "ptr_to_data",
                "FUN_080052ac": "function_with_int_arg"
            },
            "code": "void call_function_with_pointer_arg_08005778(void)\n{\n  int *PTR_DAT_0800578c = (int *)PTR_DAT_0800578c;\n  function_with_int_arg(*PTR_DAT_0800578c);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "call_function_with_pointer_arg_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "code": "undefined4 calculate_result_080028bc(undefined4 value1, undefined4 value2, undefined4 value3)\n{\n  undefined4 result1 = FUNC_08008eec(value2, value2);\n  undefined4 result2 = FUNC_08008eec(value1, value1);\n  result1 = FUNC_08008cd8(result1, result2);\n  undefined4 result3 = FUNC_08008cdc(value3, value3);\n  result1 = FUNC_08009054(result1, result3);\n  return result1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "calculate_shift_amount_08006628",
                "uVar1": "value",
                "uVar2": "leading_zeroes",
                "PTR_DAT_0800667c": "some_pointer",
                "PTR_DAT_08006678": "some_other_pointer",
                "DAT_08006674": "some_data",
                "shift_amount": "shift_amount"
            },
            "code": "uint32_t calculate_shift_amount_08006628(void)\n{\n    uint32_t value = get_some_value();\n    uint32_t leading_zeroes = count_leading_zeroes(0xf000000);\n    uint32_t shift_amount = (*(uint32_t *)PTR_DAT_0800667c) >> PTR_DAT_08006678[((*(uint32_t *)(DAT_08006674 + 8)) & 0xf0) >> (leading_zeroes & 0xff)];\n    return *(uint32_t *)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "check_and_update_param_0800738e",
                "param_1": "param_value",
                "DAT_080073bc": "data_ptr",
                "do_nothing_080073c0": "do_nothing"
            },
            "code": "void check_and_update_param_0800738e(ushort param_value) {\n    uint* DAT_080073bc = (uint*)(DAT_080073bc + 0x14);\n    if (((uint)param_value & *DAT_080073bc) != 0) {\n        *DAT_080073bc = (uint)param_value;\n        do_nothing_080073c0(param_value);\n    }\n    return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "check_and_update_param_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_080052dc",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080057e4",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "copy_and_reset_memory_080092c4",
                "iVar1": "current_index",
                "puVar2": "destination_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void copy_and_reset_memory_080092c4(void)\n{\n  int current_index;\n  undefined4 *destination_ptr;\n  code *jump_table;\n  for (current_index = 0; PTR_DAT_08009304 + current_index < PTR_DAT_08009308; current_index += 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + current_index) = *(undefined4 *)(DAT_08009300 + current_index);\n  }\n  for (destination_ptr = (undefined4 *)PTR_DAT_0800930c; destination_ptr < PTR_DAT_08009310; destination_ptr++) {\n    *destination_ptr = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  jump_table = (code *)0x80092fa;\n  FUN_08007540();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_08007540",
                "FUN_0800756c",
                "FUN_0800b3e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "copy_and_reset_memory_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "call_function_with_param_08008250",
                "param_1": "parameter",
                "FUN_08007e1c": "call_function"
            },
            "code": "void call_function_with_param_08008250(void* parameter) {\n  call_function(parameter);\n  return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "imported": false,
            "current_name": "call_function_with_param_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "check_char_and_increment_0800184c",
                "param_1": "output",
                "param_2": "char_index",
                "param_3": "max_index",
                "param_4": "input",
                "iVar1": "check_result",
                "uVar2": "result"
            },
            "code": "int check_char_and_increment_0800184c(byte* output, int char_index, int max_index, byte* input)\n{\n    int result = 0;\n    if (*(char *)(max_index + (uint)*input) == '\\0') {\n        result = 0;\n    }\n    else {\n        *output = *(byte *)(max_index + (uint)*input);\n        if ((*output < 0x41) || (0x5a < *output)) {\n            *PTR_DAT_080018c8 = 2;\n            result = 0;\n        }\n        else {\n            *input = *input + 1;\n            int check_result = check_char_and_increment_0800184c(output, char_index, max_index, input);\n            if (check_result == 0) {\n                *PTR_DAT_080018c8 = 1;\n                result = 0;\n            }\n            else {\n                result = 1;\n            }\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_char_and_increment_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = FUN_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = FUN_08008590(uVar1);\n  uVar5 = thunk_FUN_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = FUN_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = FUN_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = FUN_08008590(uVar1);\n  uVar6 = FUN_08008590(local_34 & 0x7fffffff);\n  uVar5 = FUN_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = FUN_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = FUN_08008590(uVar1);\n    uVar5 = FUN_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = FUN_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = FUN_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = FUN_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      FUN_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009250",
                "FUN_08009410",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_080096e8",
                "FUN_08008640",
                "FUN_08008bf0",
                "thunk_FUN_08009990",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_0800923c",
                "FUN_0800981c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "call_another_function_and_return_08006ce0",
                "param_1": "input_parameter",
                "FUN_08006950": "call_function_with_parameter"
            },
            "code": "void call_another_function_and_return_08006ce0(undefined4 input_parameter)\n{\n  call_function_with_parameter(input_parameter);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "call_another_function_and_return_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "print_character_08006d4a",
                "param_1": "character",
                "FUN_080069e4": "print_ascii_code"
            },
            "code": "void print_character_08006d4a(char character)\n{\n    print_ascii_code((int)character);\n    return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_080098d0",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_input_08000374",
                "param_1": "input_length",
                "param_2": "input_data",
                "param_3": "output_offset",
                "local_1c": "remaining_length",
                "local_18": "current_char",
                "local_14": "output_offset",
                "local_9": "checksum"
            },
            "code": "void process_input_08000374(int input_length, char *input_data, int output_offset) {\n  int remaining_length = input_length;\n  char *current_char = input_data;\n  char checksum = 0;\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    initialize();\n    current_char = input_data;\n  }\n  while (remaining_length != 0) {\n    checksum = (checksum != 0) + *current_char;\n    output_byte(output_offset, *current_char);\n    current_char++;\n    output_offset++;\n    remaining_length--;\n  }\n  output_byte(output_offset, checksum);\n  return;\n}",
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004bc0",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "process_input_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absolute_value",
                "FUN_08008250": "print_character",
                "FUN_08003778": "print_integer"
            },
            "code": "void print_absolute_value_080037fc(int value)\n{\n  int absolute_value;\n  absolute_value = value;\n  if (value < 0) {\n    print_character('-');\n    absolute_value = -value;\n  }\n  print_integer(absolute_value);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_hash_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "hash_value1",
                "uVar2": "hash_value2",
                "iVar3": "shift_value",
                "uVar4": "mask_value",
                "uVar5": "shift_mask",
                "uVar6": "bit_count",
                "uVar7": "bit_mask",
                "uVar8": "bit_value",
                "uVar9": "bit_shifted_value",
                "uVar10": "loop_index",
                "uVar11": "loop_mask",
                "uVar12": "loop_value",
                "uVar13": "shift_mask",
                "uVar14": "combined_input"
            },
            "code": "uint calculate_hash_0800a1bc(uint input1, uint input2)\n{\n  uint hash_value1;\n  uint hash_value2;\n  int shift_value;\n  uint mask_value;\n  uint shift_mask;\n  uint bit_count;\n  uint bit_mask;\n  uint bit_value;\n  uint bit_shifted_value;\n  uint loop_index;\n  uint loop_mask;\n  uint loop_value;\n  \n  if ((0x0800a340 & ~input2) == 0) {\n    uint64_t combined_input = calculate_combined_input(input1, input2);\n    hash_value1 = calculate_hash_0800a1bc_value(combined_input & 0xFFFFFFFF, input1, input2);\n    return hash_value1;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      uint64_t combined_input = calculate_combined_input(input1, input2, input1);\n      hash_value1 = calculate_hash_0800a1bc_value(combined_input >> 32, combined_input & 0xFFFFFFFF, combined_input >> 32, combined_input & 0xFFFFFFFF);\n      return hash_value1;\n    }\n    do {\n      bit_value = input1;\n      bit_shifted_value = bit_value >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = bit_value << 0x15;\n    } while (bit_shifted_value == 0);\n    mask_value = input2;\n    if (-1 < (int)bit_value) goto LAB_0800a290;\n    bit_count = 0x20;\n    shift_mask = 0xffffffff;\n    bit_value = input1;\n  }\n  else {\n    mask_value = (int)input2 >> 0x14;\n    bit_shifted_value = input2;\n    bit_value = input1;\n    if (mask_value != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    bit_value = 0;\n    bit_count = bit_shifted_value;\n    do {\n      shift_mask = bit_value;\n      bit_shifted_value = bit_count << 1;\n      shift_value = bit_count << 0xc;\n      bit_value = shift_mask + 1;\n      bit_count = bit_shifted_value;\n    } while (-1 < shift_value);\n    bit_count = 0x20 - bit_count;\n    input2 = mask_value;\n    bit_value = input1 << (bit_count & 0xff);\n  }\n  hash_value2 = input1 >> (bit_count & 0xff) | bit_shifted_value;\n  mask_value = mask_value - shift_mask;\nLAB_0800a1da:\n  hash_value2 = hash_value2 & 0xfffff | 0x100000;\n  if (-1 < (int)(mask_value << 0x1f)) {\n    hash_value2 = hash_value2 * 2 - ((int)bit_value >> 0x1f);\n    bit_value = bit_value << 1;\n  }\n  loop_value = 0;\n  hash_value2 = hash_value2 * 2 - ((int)bit_value >> 0x1f);\n  bit_value = bit_value << 1;\n  loop_index = 0;\n  loop_mask = 0x16;\n  do {\n    shift_value = loop_index + 0x200000;\n    if (shift_value <= (int)hash_value2) {\n      hash_value2 = hash_value2 - shift_value;\n      loop_index = shift_value + loop_index;\n      loop_value = loop_value + shift_value;\n    }\n    loop_mask = loop_mask - 1;\n    hash_value2 = hash_value2 * 2 - ((int)bit_value >> 0x1f);\n    shift_mask = shift_mask >> 1;\n    bit_value = bit_value << 1;\n  } while (loop_mask != 0);\n  bit_count = 0x20;\n  bit_mask = 0x80000000;\n  shift_mask = loop_mask;\n  do {\n    bit_shifted_value = bit_mask + loop_mask;\n    hash_value1 = loop_index;\n    if ((int)loop_index < (int)hash_value2) {\n      if ((int)bit_shifted_value < 0) {\n        if (-1 < (int)(bit_shifted_value + bit_mask)) {\n          hash_value1 = loop_index + 1;\n        }\n      }\n      bit_value = hash_value2 - loop_index;\n      loop_index = hash_value1;\n      if (bit_value < bit_shifted_value) {\n        bit_value = bit_value - 1;\n      }\nLAB_0800a262:\n      loop_mask = bit_shifted_value + bit_mask;\n      bit_value = bit_value - bit_shifted_value;\n      shift_mask = shift_mask + bit_mask;\n      hash_value2 = bit_value;\n    }\n    else if ((hash_value2 == loop_index) && (bit_shifted_value <= bit_value)) {\n      if ((int)bit_shifted_value < 0) goto LAB_0800a26a;\n      bit_value = 0;\n      hash_value2 = loop_index;\n      goto LAB_0800a262;\n    }\n    bit_count = bit_count - 1;\n    bit_mask = bit_mask >> 1;\n    hash_value2 = hash_value2 * 2 - ((int)bit_value >> 0x1f);\n    bit_value = bit_value << 1;\n    if (bit_count == 0) {\n      if ((hash_value2 | bit_value) == 0) {\n        bit_count = shift_mask >> 1;\n      }\n      else if (shift_mask == 0xffffffff) {\n        loop_value = loop_value + 1;\n      }\n      else {\n        bit_count = shift_mask + 1 >> 1;\n      }\n      if ((loop_value & 1) != 0) {\n        bit_count = bit_count | 0x80000000;\n      }\n      return bit_count;\n    }\n  } while( true );\n}\n\nuint64_t calculate_combined_input(uint input1, uint input2)\n{\n    uint64_t combined_input = input1;\n    combined_input = combined_input << 32;\n    combined_input = combined_input | input2;\n    return combined_input;\n}\n\nuint calculate_hash_0800a1bc_value(uint input1, uint input2, uint input3, uint input4)\n{\n    uint64_t combined_input = calculate_combined_input(input1, input2, input3, input4);\n    uint hash_value = 0xdeadbeef;\n    uint index;\n    for (index = 0; index < 0x20; index++) {\n        uint bit_value = combined_input & 1;\n        combined_input = combined_input >> 1;\n        if (bit_value == 1) {\n            hash_value = hash_value ^ (0x5d5d5d5d << index);\n        }\n    }\n    return hash_value;\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "check_and_set_char_0800525c",
                "param_1": "new_char",
                "PTR_DAT_080052a8": "PTR_data",
                "FUN_08002fd4": "execute_error_handler",
                "handle_null_char": "handle_null_char",
                "do_nothing_1": "do_nothing_case_1",
                "do_nothing_2": "do_nothing_case_2",
                "do_nothing_3": "do_nothing_after_cases"
            },
            "code": "void check_and_set_char_0800525c(char new_char) {\n  if ((int)new_char != (uint)(byte)*PTR_DAT_080052a8) {\n    execute_error_handler();\n    if (new_char == '\\0') {\n      handle_null_char();\n    }\n    else {\n      if (new_char < '\\x01') {\n        do_nothing_1();\n      }\n      else {\n        do_nothing_2();\n      }\n      do_nothing_3();\n    }\n    *PTR_DAT_080052a8 = new_char;\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c",
                "FUN_08005220",
                "FUN_08005208"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_and_set_char_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_at_position_080073d4",
                "param_1": "position"
            },
            "code": "void set_bit_at_position_080073d4(uint position)\n{\n    uint index = (int)position >> 4;\n    uint bit_position = position & 0xf;\n    uint address = index * 0x400 + 0x4002001a;\n    short* ptr = (short*)address;\n    *ptr = (short)(1 << bit_position);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "print_character_08006dfe",
                "param_1": "character_to_print",
                "FUN_08006a8c": "print_ascii_code"
            },
            "code": "void print_character_08006dfe(char character_to_print)\n{\n  print_ascii_code((int)character_to_print);\n  return;\n}",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "call_function_08006d66",
                "FUN_08006c70": "execute_setup"
            },
            "code": "void call_function_08006d66(void)\n{\n  execute_setup();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "call_function_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "update_bits_08006e88",
                "param_1": "bit_array",
                "param_2": "mask_array",
                "uVar1": "bit_mask",
                "uVar2": "mask",
                "iVar3": "index",
                "local_c": "bit_array_offset",
                "DAT_0800719c": "PTR_DAT_0800719c",
                "DAT_080071a0": "PTR_DAT_080071a0",
                "DAT_080071a4": "PTR_DAT_080071a4",
                "DAT_080071a8": "PTR_DAT_080071a8",
                "DAT_080071ac": "PTR_DAT_080071ac",
                "DAT_080071b0": "PTR_DAT_080071b0",
                "DAT_080071b4": "PTR_DAT_080071b4",
                "DAT_080071b8": "PTR_DAT_080071b8",
                "DAT_080071bc": "PTR_DAT_080071bc",
                "DAT_080071c0": "PTR_DAT_080071c0",
                "DAT_080071c4": "PTR_DAT_080071c4",
                "*DAT_080071cc": "*PTR_DAT_080071cc",
                "DAT_080071cc[1]": "PTR_DAT_080071cc[1]",
                "DAT_080071cc[2]": "PTR_DAT_080071cc[2]",
                "DAT_080071cc[3]": "PTR_DAT_080071cc[3]"
            },
            "code": "void update_bits_08006e88(uint *bit_array, uint *mask_array)\n{\n  uint bit_mask;\n  uint mask;\n  int index;\n  uint bit_array_offset;\n  uint mask_array_offset;\n  for (index = 0; index < 16; index++) {\n    bit_mask = 1 << (index & 0xff);\n    mask = *mask_array & bit_mask;\n    if (mask == bit_mask) {\n      if ((mask_array[1] == 2) || (mask_array[1] == 0x12)) {\n        bit_array_offset = (index >> 3) + 8;\n        bit_array[bit_array_offset] = bit_array[bit_array_offset] & ~(0xf << ((index & 7) << 2));\n        bit_array[bit_array_offset] = bit_array[bit_array_offset] | mask_array[4] << ((index & 7) << 2);\n      }\n      *bit_array = *bit_array & ~(3 << ((index & 0x7f) << 1));\n      *bit_array = *bit_array | (mask_array[1] & 3) << ((index & 0x7f) << 1);\n      if ((((mask_array[1] == 1) || (mask_array[1] == 2)) || (mask_array[1] == 0x11)) || (mask_array[1] == 0x12)) {\n        bit_array_offset = 2;\n        bit_array_offset = bit_array_offset & ~(3 << ((index & 0x7f) << 1));\n        bit_array_offset = bit_array_offset | mask_array[3] << ((index & 0x7f) << 1);\n        bit_array[1] = bit_array[1] & ~(1 << (index & 0xff));\n        bit_array[1] = bit_array[1] | (mask_array[1] >> 4 & 1) << (index & 0xff);\n      }\n      bit_array[3] = bit_array[3] & ~(3 << ((index & 0x7f) << 1));\n      bit_array[3] = bit_array[3] | mask_array[2] << ((index & 0x7f) << 1);\n      if ((mask_array[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_0800719c + 0x44) = *(uint *)(DAT_0800719c + 0x44) | 0x4000;\n        *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4) = ~(0xf << ((index & 3) << 2)) & *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4);\n        if (bit_array == DAT_080071a4) {\n          index = 0;\n        }\n        else if (bit_array == DAT_080071a8) {\n          index = 1;\n        }\n        else if (bit_array == DAT_080071ac) {\n          index = 2;\n        }\n        else if (bit_array == DAT_080071b0) {\n          index = 3;\n        }\n        else if (bit_array == DAT_080071b4) {\n          index = 4;\n        }\n        else if (bit_array == DAT_080071b8) {\n          index = 5;\n        }\n        else if (bit_array == DAT_080071bc) {\n          index = 6;\n        }\n        else if (bit_array == DAT_080071c0) {\n          index = 7;\n        }\n        else if (bit_array == DAT_080071c4) {\n          index = 8;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4) = index << ((index & 3) << 2) | *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4);\n        *DAT_080071cc = ~mask & *DAT_080071cc;\n        DAT_080071cc[1] = ~mask & DAT_080071cc[1];\n        if ((mask_array[1] & 0x10000) != 0) {\n          *DAT_080071cc = mask | *DAT_080071cc;\n        }\n        if ((mask_array[1] & 0x20000) != 0) {\n          DAT_080071cc[1] = mask | DAT_080071cc[1];\n        }\n        DAT_080071cc[2] = ~mask & DAT_080071cc[2];\n        DAT_080071cc[3] = ~mask & DAT_080071cc[3];\n        if ((mask_array[1] & 0x100000) != 0) {\n          DAT_080071cc[2] = mask | DAT_080071cc[2];\n        }\n        if ((mask_array[1] & 0x200000) != 0) {\n          DAT_080071cc[3] = mask | DAT_080071cc[3];\n        }\n      }\n    }\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_bits_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "num_bits",
                "uVar1": "bit_value",
                "local_10": "bit_index",
                "local_c": "bit_mask"
            },
            "code": "void print_binary_representation_080036f0(uint number, int num_bits) {\n  undefined4 bit_value;\n  int bit_index;\n  uint bit_mask;\n  bit_mask = 1 << (num_bits - 1U & 0xff);\n  for (bit_index = 0; bit_index < num_bits; bit_index = bit_index + 1) {\n    if ((bit_mask & number) == 0) {\n      bit_value = 0x30;\n    }\n    else {\n      bit_value = 0x31;\n    }\n    FUN_08008250(bit_value);\n    bit_mask = bit_mask >> 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": false,
            "current_name": "print_binary_representation_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "run_all_required_functions_08002edc",
                "FUN_08002a94": "initialize_system",
                "FUN_08002ba8": "read_user_input",
                "FUN_08002e08": "execute_main_algorithm"
            },
            "code": "void run_all_required_functions_08002edc(void)\n{\n  initialize_system();\n  read_user_input();\n  execute_main_algorithm();\n  return;\n}",
            "called": [
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002a94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "run_all_required_functions_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "copy_memory_block_0800375c",
                "param_1": "source",
                "FUN_080036f0": "memcpy",
                "0x10": "size"
            },
            "code": "void copy_memory_block_0800375c(void* source, size_t size){\n    memcpy(source, 0x10, size);\n    return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "copy_memory_block_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_08009990",
                "param_1": "a",
                "param_2": "b",
                "param_3": "c",
                "param_4": "d",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "code": "uint calculate_08009990(uint a, uint b, uint c, uint d) {\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  temp6 = CONCAT44(DAT_08009b04, DAT_08009b00);\n  temp4 = d & 0x7fffffff;\n  if (DAT_08009b18 < (temp4 | (-c | c) >> 0x1f) || DAT_08009b18 < ((b & 0x7fffffff) | (-a | a) >> 0x1f)) {\n    temp4 = FUNC_080082d4(c, d, a, b);\n  }\n  else {\n    if ((d + 0xc0100000 | c) == 0) {\n      temp4 = FUNC_0800af78();\n      return temp4;\n    }\n    temp3 = (int)d >> 0x1e & 2U | b >> 0x1f;\n    if ((a | (b & 0x7fffffff)) == 0) {\n      temp4 = DAT_08009af0;\n      if (temp3 != 2) {\n        temp4 = a;\n        if (temp3 == 3) {\n          temp4 = DAT_08009af8;\n        }\n      }\n    }\n    else {\n      if ((d & 0x7fffffff | c) != 0) {\n        if (d == DAT_08009b18) {\n          temp3--;\n          if (b == d) {\n            if (2 < temp3) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + temp3 * 8);\n          }\n          if (temp3 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + temp3 * 8);\n          }\n          return 0;\n        }\n        if (b != DAT_08009b18) {\n          temp1 = (int)(b - d) >> 0x14;\n          if ((int)(b - d) < 0x3d00000) {\n            if (((int)d < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1, 0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUNC_08008894(a, b, c, d, d);\n              do_nothing_0800b2cc();\n              temp6 = FUNC_0800af78();\n            }\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUNC_080082d0(temp4, temp2, DAT_08009ae8, DAT_08009aec);\n            temp4 = FUNC_080082d0(DAT_08009af0, DAT_08009af4, (int)temp6, (int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUNC_080082d0(temp4, temp2, DAT_08009ae8, DAT_08009aec);\n          temp4 = FUNC_080082d0((int)temp6, (int)((ulonglong)temp6 >> 0x20), DAT_08009af0, DAT_08009af4);\n          return temp4;\n        }\n      }\n      temp4 = DAT_08009b08;\n      if (-1 < (int)b) {\n        temp4 = DAT_08009b00;\n      }\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "calculate_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58",
                "*DAT_08007e80": "*PTR_DAT_08007e80",
                "0x20": "BIT_TO_CHECK"
            },
            "code": "bool is_bit_set_08007e58(void)\n{\n    const int BIT_TO_CHECK = 0x20;\n    return (*DAT_08007e80 & BIT_TO_CHECK) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "is_bit_set_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8",
                "DAT_08005a4c": "data",
                "do_nothing_08005a5c": "do_nothing",
                "PTR_": "ptr_"
            },
            "code": "int initialize_data_080059f8(void)\n{\n    int* PTR_DAT_08005a4c = (int *)(DAT_08005a4c + 0x20);\n    *PTR_DAT_08005a4c = 0;\n    PTR_DAT_08005a4c = (int *)(DAT_08005a4c + 0x24);\n    *PTR_DAT_08005a4c = 0;\n    PTR_DAT_08005a4c = (int *)(DAT_08005a4c + 0x10);\n    *PTR_DAT_08005a4c = 0;\n    PTR_DAT_08005a4c = (int *)(DAT_08005a4c + 0x14);\n    *PTR_DAT_08005a4c = 0;\n    PTR_DAT_08005a4c = (int *)(DAT_08005a4c + 0x18);\n    *PTR_DAT_08005a4c = 0;\n    do_nothing_08005a5c();\n    return 0;\n}",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "current_char",
                "bVar2": "current_char",
                "uVar3": "command_result",
                "*PTR_DAT_08004028": "is_in_parentheses",
                "*PTR_DAT_08004020": "input_buffer_index",
                "PTR_DAT_08004024": "input_buffer",
                "FUN_08008286": "get_input_char",
                "FUN_08003a74": "print_error",
                "FUN_08003b98": "process_command",
                "FUN_08004030": "print_command_result",
                "*PTR_DAT_0800401c": "is_command_complete",
                "FUN_08003980": "print_prompt"
            },
            "code": "void process_input_08003f34(void)\\n{\\n  char current_char;\\n  char *PTR_DAT_08004028 = 0;\\n  char PTR_DAT_08004024[50];\\n  int *PTR_DAT_08004020 = 0;\\n  while(1) {\\n    current_char = get_input_char();\\n    if (current_char == 0xff) {\\n      return;\\n    }\\n    if ((current_char == 10) || (current_char == 0xd)) {\\n      continue;\\n    }\\n    if (PTR_DAT_08004024[0] == \"\\0\") {\\n      if ((current_char > 0x20) && (current_char != 0x2f)) {\\n        if (current_char == 0x28) {\\n          *PTR_DAT_08004028 = 1;\\n        }\\n        else if (*PTR_DAT_08004020 == -1) {\\n          print_error();\\n          print_prompt();\\n        }\\n        else if ((current_char < 0x61) || (current_char > 0x7a)) {\\n          PTR_DAT_08004024[*PTR_DAT_08004020++] = current_char;\\n        }\\n        else {\\n          PTR_DAT_08004024[*PTR_DAT_08004020++] = current_char - 0x20;\\n        }\\n      }\\n    }\\n    else if (current_char == 0x29) {\\n      *PTR_DAT_08004028 = 0;\\n    }\\n    if (*PTR_DAT_0800401c()) {\\n      process_command(PTR_DAT_08004024);\\n      clear_PTR_DAT_08004024(PTR_DAT_08004024);\\n      print_prompt();\\n    }\\n  }\\n}",
            "called": [
                "FUN_08008286",
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_input_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_signed_multiplication_080095b8",
                "param_1": "absolute_value_of_integer",
                "param_2": "integer_sign",
                "uVar1": "integer_with_hidden_and_sticky_bits",
                "uVar2": "abs_integer_shifted",
                "uVar3": "abs_integer_with_hidden_bit",
                "uVar4": "sign",
                "uVar5": "exponent"
            },
            "code": "int calculate_signed_multiplication_080095b8(uint absolute_value_of_integer, uint integer_sign) {\n  uint abs_integer_shifted = (integer_sign << 1) >> 0x15;\n  uint exponent = abs_integer_shifted - 0x3ff;\n  int sign;\n  uint abs_integer_with_hidden_bit = absolute_value_of_integer & 0xfffff | 0x100000;\n  if ((int)integer_sign < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      if (exponent != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    abs_integer_with_hidden_bit = abs_integer_with_hidden_bit + (0x80000 >> (exponent & 0xff)) >> (0x14 - exponent & 0xff);\n  }\n  else {\n    if (0x1e < exponent) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)exponent < 0x34) {\n      uint integer_with_hidden_and_sticky_bits = 0x80000000 >> (abs_integer_shifted - 0x413 & 0xff);\n      if (CARRY4(integer_with_hidden_and_sticky_bits,absolute_value_of_integer) != false) {\n        abs_integer_with_hidden_bit = abs_integer_with_hidden_bit + 1;\n      }\n      abs_integer_with_hidden_bit = abs_integer_with_hidden_bit << (abs_integer_shifted - 0x413 & 0xff);\n      if (exponent != 0x14) {\n        abs_integer_with_hidden_bit = abs_integer_with_hidden_bit | integer_with_hidden_and_sticky_bits + absolute_value_of_integer >> (0x34 - exponent & 0xff);\n      }\n    }\n    else {\n      abs_integer_with_hidden_bit = abs_integer_with_hidden_bit << (abs_integer_shifted - 0x413 & 0xff) | absolute_value_of_integer << (abs_integer_shifted - 0x433 & 0xff);\n    }\n  }\n  return abs_integer_with_hidden_bit * sign;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_signed_multiplication_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "uVar1": "result",
                "FUN_08006998": "get_data",
                "FUN_08006ba0": "transform_data",
                "FUN_08006b00": "send_data"
            },
            "code": "void process_data_08006cf6(char data, int param1, int param2)\n{\n  int result = get_data();\n  result = transform_data(result, param1, param2);\n  send_data((int)data, result);\n  return;\n}",
            "called": [
                "FUN_08006b00",
                "FUN_08006998",
                "FUN_08006ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "process_data_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_value_and_process_08002ef0",
                "uVar1": "processed_value",
                "PTR_DAT_08002f1c": "destination_ptr",
                "PTR_DAT_08002f18": "source_ptr",
                "FUN_08002870": "process_value"
            },
            "code": "void copy_value_and_process_08002ef0(void)\n{\n  int src_value = *PTR_DAT_08002f18;\n  int processed_value = process_value(src_value);\n  *PTR_DAT_08002f1c = processed_value;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "copy_value_and_process_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "print_data_08001d4c",
                "local_9": "counter",
                "cVar1": "current_char",
                "FUNC_08001994": "print_integer",
                "do_nothing_08002814": "do_nothing_08002814",
                "PTR_DAT_08001dd8": "PTR_DAT_08001dd8"
            },
            "code": "void print_data_08001d4c(void)\n{\n  char current_char;\n  char counter;\n  initialize_printing();\n  print_integer(4,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  print_integer(3,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n  counter = 2;\n  while( true ) {\n    current_char = counter + -1;\n    if (counter == '\\0') break;\n    print_integer(7,0,1,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n    do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    counter = current_char;\n    if ('\\0' < current_char) {\n      print_integer(7,1,0,*(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n      do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    }\n  }\n  finalize_printing();\n  return;\n}\n",
            "called": [
                "FUN_08001994",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "print_data_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_result_08000268",
                "iVar1": "result",
                "FUN_08005a84": "get_value_from_function",
                "PTR_DAT_08000298": "pointer_to_constant",
                "DAT_0800029c": "constant_value",
                "(uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21)": "constant",
                "(uint *)(DAT_08000298 + 8)": "pointer_to_value"
            },
            "code": "int calculate_result_08000268(void)\n{\n  int result = get_value_from_function();\n  int multiplier = 1000;\n  int (uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21) = (*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21;\n  int final_result = (result + 1) * multiplier - (uint)((ulonglong)DAT_0800029c * (ulonglong)(uint)((ulonglong)DAT_0800029c * (ulonglong)(*(uint *)(DAT_08000298 + 8) >> 3) >> 0x21));\n  return final_result;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_result_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "generate_digits_08003778",
                "param_1": "number",
                "local_1c": "quotient",
                "acStack_15": "digits",
                "local_9": "digit_count",
                "FUN_08008250": "print_char",
                "DAT_080037f8": "constant"
            },
            "code": "void generate_digits_08003778(uint number) {\n  uint quotient;\n  uint remainder;\n  char digits[12];\n  uint digit_count = 0;\n  if (number == 0) {\n    print_char('0');\n  }\n  else {\n    quotient = number;\n    while (quotient != 0) {\n      remainder = quotient % 10;\n      quotient /= 10;\n      digits[digit_count] = (char)remainder + '0';\n      digit_count++;\n    }\n    for (int i = digit_count - 1; i >= 0; i--) {\n      print_char(digits[i]);\n    }\n  }\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "generate_digits_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_value_from_pointer_to_pointer_0800b3dc",
                "PTR_PTR_DAT_0800b3e4": "pointer_to_pointer"
            },
            "code": "int get_value_from_pointer_to_pointer_0800b3dc() {\n  int* pointer_to_value = *(int **)PTR_PTR_DAT_0800b3e4;\n  int value = *pointer_to_value;\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_to_pointer_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "print_info_080046d0",
                "PTR_DAT_08004890": "PTR_DATA",
                "PTR_DAT_080048a8": "PTR_STRING_1",
                "PTR_DAT_080048ac": "PTR_STRING_2",
                "PTR_DAT_080048b0": "PTR_STRING_3",
                "PTR_DAT_080048b4": "PTR_STRING_4",
                "PTR_DAT_080048b8": "PTR_STRING_5",
                "PTR_DAT_080048bc": "PTR_STRING_6",
                "PTR_DAT_080048c0": "PTR_STRING_7",
                "PTR_DAT_080048c4": "PTR_STRING_8",
                "PTR_DAT_080048c8": "PTR_STRING_9",
                "PTR_DAT_080048cc": "PTR_STRING_10",
                "PTR_DAT_080048d0": "PTR_STRING_11",
                "PTR_DAT_080048d4": "PTR_STRING_12",
                "PTR_DAT_080048d8": "PTR_STRING_13",
                "PTR_DAT_080048dc": "PTR_STRING_14",
                "PTR_DAT_080048e0": "PTR_STRING_15",
                "PTR_DAT_080048e4": "PTR_STRING_16",
                "PTR_DAT_080048e8": "PTR_STRING_17",
                "PTR_DAT_080048ec": "PTR_STRING_18",
                "PTR_DAT_080048f0": "PTR_STRING_19",
                "PTR_DAT_080048f4": "PTR_STRING_20",
                "PTR_DAT_080048f8": "PTR_STRING_21",
                "PTR_DAT_080048fc": "PTR_STRING_22",
                "DAT_08004888": "DATA_1",
                "DAT_0800488c": "DATA_2",
                "FUN_080036c6": "print_string",
                "FUN_080037fc": "print_hex",
                "FUN_08003826": "get_result",
                "FUN_08008590": "get_value",
                "FUNC_08008640": "calculate",
                "FUN_08008c30": "get_result"
            },
            "code": "void print_info_080046d0()\n{\n  byte index;\n  char value;\n  undefined4 uVar;\n  undefined8 uVar2;\n  if (PTR_DAT_08004890[1] > 4)\n  {\n    print_string(PTR_DAT_08004890[0x18]);\n    print_string(PTR_DAT_08004890[0x1c] + 0x36);\n    if (PTR_DAT_08004890[0x19] == 0)\n    {\n      if (PTR_DAT_08004890[0x1a] == 1)\n      {\n        print_string(PTR_DAT_08004890[0x1c]);\n      }\n      else\n      {\n        print_string(PTR_DAT_08004890[0x1d]);\n      }\n    }\n    else\n    {\n      print_string(PTR_DAT_08004890[0x1e]);\n    }\n    if (PTR_DAT_08004890[3] == 0)\n    {\n      print_string(PTR_DAT_08004890[0x23]);\n    }\n    else\n    {\n      print_string(PTR_DAT_08004890[0x22]);\n    }\n    if (PTR_DAT_08004890[4] == 0)\n    {\n      print_string(PTR_DAT_08004890[0x28]);\n    }\n    else\n    {\n      print_string(PTR_DAT_08004890[0x27]);\n    }\n    if (PTR_DAT_08004890[2] == 0)\n    {\n      print_string(PTR_DAT_08004890[0x2c]);\n    }\n    else\n    {\n      print_string(PTR_DAT_08004890[0x2b]);\n    }\n    index = PTR_DAT_08004890[5];\n    if (index == 2)\n    {\n      print_string(PTR_DAT_08004890[0x3b]);\n    }\n    else if (index < 3)\n    {\n      if (index == 0)\n      {\n        print_string(PTR_DAT_08004890[0x37]);\n      }\n      else if (index == 1)\n      {\n        print_string(PTR_DAT_08004890[0x39]);\n      }\n    }\n    value = PTR_DAT_08004890[6];\n    if (value == 1)\n    {\n      print_string(PTR_DAT_08004890[0x3f]);\n    }\n    else if (value < 2)\n    {\n      if (value == -1)\n      {\n        print_string(PTR_DAT_08004890[0x40]);\n      }\n      else if (value == 0)\n      {\n        print_string(PTR_DAT_08004890[0x41]);\n      }\n    }\n    index = PTR_DAT_08004890[7];\n    if (index == 2)\n    {\n      print_string(PTR_DAT_08004890[0x4d]);\n    }\n    else if (index < 3)\n    {\n      if (index == 0)\n      {\n        print_string(PTR_DAT_08004890[0x43]);\n      }\n      else if (index == 1)\n      {\n        print_string(PTR_DAT_08004890[0x47]);\n      }\n    }\n    print_string(PTR_DAT_08004890[0x51]);\n    print_string(PTR_DAT_08004890[0x18]);\n    print_string(PTR_DAT_08004890[0x55]);\n    if (PTR_DAT_08004890[3] == 0)\n    {\n      print_hex(*(undefined4 *)(PTR_DAT_08004890 + 8));\n    }\n    else\n    {\n      uVar2 = get_value(*(undefined4 *)(PTR_DAT_08004890 + 8));\n      uVar2 = calculate(uVar2, (int)uVar2 >> 0x20, DATA_08004888, DATA_0800488c);\n      uVar = get_result((int)uVar2, (int)((ulonglong)uVar2 >> 0x20));\n      print_hex(uVar);\n    }\n    print_string(PTR_DAT_08004890[0x59]);\n    return;\n  }\n  (*(code *)(&switchD_080046de::switchdataD_080046e4)[PTR_DAT_08004890[1]])();\n  return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_080037fc",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_info_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "calculate_result_08006d72",
                "param_1": "input_val",
                "uVar1": "result",
                "FUN_08006c9c": "perform_calculation"
            },
            "code": "undefined4 calculate_result_08006d72(undefined4 input_val)\n{\n  undefined4 result;\n  result = perform_calculation(input_val);\n  return result;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "calculate_result_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_flags_0800756c",
                "DAT_080075bc": "flag_register",
                "DAT_080075c0": "flag_value",
                "DAT_080075c4": "value_ptr"
            },
            "code": "void set_flags_0800756c() {\n  *DAT_080075bc = *DAT_080075bc | 1;\n  DAT_080075bc[2] = 0;\n  *DAT_080075bc = *DAT_080075bc & 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  *DAT_080075bc = *DAT_080075bc & 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  *(undefined4 *)(DAT_080075c4 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "set_flags_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "clear_and_call_function_080001f8",
                "*PTR_DAT_0800020c": "*pointer_data",
                "FUN_08000210": "call_another_function"
            },
            "code": "void clear_and_call_function_080001f8(void)\n{\n  *PTR_DAT_0800020c = 0;\n  call_another_function();\n  return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "clear_and_call_function_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "get_data_pointer_08002f74",
                "puVar1": "data_pointer",
                "PTR_DAT_08002fa0": "data_start",
                "PTR_DAT_08002fa4": "data_end",
                "PTR_DAT_08002fa8": "data_array"
            },
            "code": "uint8_t* get_data_pointer_08002f74() {\n  uint8_t* data_pointer;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4) {\n    data_pointer = NULL;\n  }\n  else {\n    data_pointer = PTR_DAT_08002fa8 + (uint8_t)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return data_pointer;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": false,
            "current_name": "get_data_pointer_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "function_index",
                "ppcVar2": "function_ptr",
                "iVar3": "num_functions",
                "PTR_DAT_0800b420": "PTR_FUNCTION_END",
                "PTR_DAT_0800b424": "PTR_FUNCTION_START",
                "PTR_DAT_0800b42c": "PTR_POST_FUNCTION_START",
                "PTR_DAT_0800b428": "PTR_POST_FUNCTION_END"
            },
            "code": "void execute_functions_0800b3e8(void)\n{\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_ptr = (code **)PTR_DAT_0800b424;\n    do {\n      i++;\n      (**function_ptr)();\n      function_ptr++;\n    } while (num_functions != i);\n  }\n  function_ptr = (code **)PTR_DAT_0800b42c;\n  int num_post_functions = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c >> 2;\n  do_nothing();\n  num_post_functions = num_post_functions >> 2;\n  if (num_post_functions != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**function_ptr)();\n      function_ptr++;\n    } while (num_post_functions != i);\n  }\n  return;\n}\n",
            "called": [
                "FUN_080001ac",
                "FUN_0800b4d0",
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "process_data_080096e8",
                "param_1": "data",
                "param_2": "data_size",
                "uVar1": "result",
                "uVar2": "operation",
                "local_28": "buffer1",
                "uStack_24": "buffer2",
                "local_20": "buffer3",
                "uStack_1c": "buffer4"
            },
            "code": "undefined4 process_data_080096e8(undefined4 data, uint data_size)\n{\n  undefined4 result;\n  uint data_size_abs;\n  undefined4 buffer1;\n  undefined4 buffer2;\n  undefined4 buffer3;\n  undefined4 buffer4;\n  \n  data_size_abs = data_size & 0x7fffffff;\n  if (DAT_08009790 < data_size_abs) {\n    if (DAT_08009794 < data_size_abs) {\n      result = process_data_080096e8_recurse(data, data_size, data, data_size);\n    }\n    else {\n      uint operation = FUNC_08009d78(data, data_size, &buffer1);\n      operation = operation & 3;\n      if (operation == 1) {\n        result = process_data_080096e8_op1(buffer1, buffer2, buffer3, buffer4);\n      }\n      else if (operation == 2 || operation == 0) {\n        result = process_data_080096e8_op2(buffer1, buffer2, buffer3, buffer4, 1);\n      }\n      else {\n        result = process_data_080096e8_op1(buffer1, buffer2, buffer3, buffer4);\n      }\n    }\n    return result;\n  }\n  result = process_data_080096e8_op2(data, data_size, 0, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "is_bit_set_08006a18",
                "param_1": "byte",
                "DAT_08006a54": "data_ptr"
            },
            "code": "bool is_bit_set_08006a18(uint8_t byte, uint8_t bit_position) {\n    uint32_t* ptr = (uint32_t*)(DAT_08006a54 + (((uint32_t)byte >> 5) + 0x40) * 4);\n    uint32_t mask = 1 << (bit_position & 0x1f);\n    return ((*ptr & mask) != 0);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "is_bit_set_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_offset_08002c18",
                "param_1": "base_address",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "var_1",
                "iVar2": "func_1_result",
                "uVar3": "var_3",
                "uVar4": "var_4",
                "uVar5": "var_5",
                "uVar6": "var_6",
                "uVar7": "var_2",
                "local_20": "local_offset",
                "local_1c": "local_size",
                "PTR_08008e3c": "ptr_1",
                "FUNC_08008eec": "FUNC_08008eec",
                "FUN_08008590": "FUN_08008590",
                "FUN_08009318": "FUN_08009318",
                "FUN_08008bf0": "FUN_08008bf0",
                "PTR_08002e04": "PTR_08002e04",
                "PTR_08008e44": "PTR_08008e44",
                "FUN_080028bc": "FUN_080028bc",
                "FUN_0800856c": "FUN_0800856c",
                "FUNC_08008640": "FUNC_08008640",
                "FUN_08008ba0": "FUN_08008ba0",
                "PTR_08002908": "PTR_08002908"
            },
            "code": "void calculate_offset_08002c18(int base_address, int param_2, int param_3)\n{\n    int func_1_result;\n    int func_2_result;\n    int func_3_result;\n    int func_4_result;\n    int func_5_result;\n    int func_6_result;\n    int local_20;\n    uint local_1c;\n    \n    int PTR_08008e3c = *(int *)(base_address + 0x3c);\n    int ptr_2 = *(int *)(base_address + 0x30);\n    int ptr_3 = *(int *)(base_address + 0x10);\n    \n    int var_1 = FUNC_08008eec(FUN_08008e3c(PTR_08008e3c), param_2);\n    long long var_2 = FUN_08008590(var_1);\n    int var_3 = FUN_08009318((int)var_2, (int)(var_2 >> 0x20));\n    int var_4 = FUN_08008bf0(var_3, (int)(var_2 >> 0x20));\n    *(int *)(base_address + 0x28) = var_4;\n    \n    var_1 = FUNC_08008eec(FUN_08008e3c(PTR_08008e3c), param_3);\n    var_2 = FUN_08008590(var_1);\n    var_3 = FUN_08009318((int)var_2, (int)(var_2 >> 0x20));\n    var_4 = FUN_08008bf0(var_3, (int)(var_2 >> 0x20));\n    *(int *)(base_address + 0x2c) = var_4;\n    \n    var_2 = FUN_0800856c(ptr_2 * 0x32);\n    var_2 = FUNC_08008640((int)var_2, (int)(var_2 >> 0x20), 0, DAT_08002e04);\n    func_1_result = FUN_08008ba0((int)var_2, (int)(var_2 >> 0x20));\n    \n    int var_5 = FUN_08008e3c(*(int *)(base_address + 0x28));\n    int var_6 = FUN_08008e3c(*(int *)(base_address + 0x3c));\n    int var_7 = FUN_08008e44(func_1_result);\n    int var_8 = FUN_080028bc(var_5, var_6, var_7);\n    var_2 = FUN_08008590(var_8);\n    var_3 = FUN_08009318((int)var_2, (int)(var_2 >> 0x20));\n    func_2_result = FUN_08008ba0(var_3, (int)(var_2 >> 0x20));\n    \n    var_5 = FUN_08008e3c(*(int *)(base_address + 0x3c));\n    var_6 = FUN_08008e3c(*(int *)(base_address + 0x2c));\n    var_7 = FUN_08008e44(-func_1_result);\n    var_8 = FUN_080028bc(var_5, var_6, var_7);\n    var_2 = FUN_08008590(var_8);\n    var_2 = FUN_080094c0((int)var_2, (int)(var_2 >> 0x20));\n    func_3_result = FUN_08008ba0((int)var_2, (int)(var_2 >> 0x20));\n    \n    local_20 = (ptr_3 - func_2_result) - func_3_result;\n    if (local_20 < 0) {\n        var_5 = FUN_08008e3c(*(int *)(base_address + 0x28));\n        var_6 = FUN_08008e3c(*(int *)(base_address + 0x2c));\n        var_7 = FUN_08008e44(func_1_result);\n        int var_9 = FUN_08008e44(*(int *)(base_address + 0x10));\n        var_8 = FUN_08002908(var_5, var_6, var_7, var_9);\n        var_2 = FUN_08008590(var_8);\n        var_3 = FUN_08009318((int)var_2, (int)(var_2 >> 0x20));\n        func_4_result = FUN_08008ba0(var_3, (int)(var_2 >> 0x20));\n        local_1c = *(uint *)(base_address + 0x10);\n        if ((int)func_4_result <= (int)*(uint *)(base_address + 0x10)) {\n            local_1c = func_4_result;\n        }\n        local_20 = 0;\n    }\n    *(uint *)(base_address + 0x34) = local_1c;\n    *(uint *)(base_address + 0x38) = local_20 + local_1c;\n    return;\n}",
            "called": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_0800856c",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_offset_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "input_byte",
                "DAT_08006afc": "data_start_ptr"
            },
            "code": "bool check_bit_08006ac0(byte input_byte){\n                      uint* data_ptr = (uint*)(DAT_08006afc + (((uint)(int)(char)input_byte >> 5) + 0x80) * 4);\n                      uint mask = 1 << (input_byte & 0x1f);\n                      return ((*data_ptr & mask) != 0);\n                    }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "check_bit_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "FUN_08002ba8": "copy_data_08002ba8",
                "local_14": "previous_data_ptr",
                "local_10": "current_data_ptr",
                "puVar3": "next_data_ptr",
                "PTR_DAT_08002c0c": "data_index_start",
                "local_9": "current_data_index",
                "PTR_DAT_08002c14": "data_index_end",
                "PTR_DAT_08002c10": "data_start",
                "FUN_08002afc": "copy_data_block"
            },
            "code": "void copy_data_08002ba8(void)\n{\n  undefined *previous_data_ptr;\n  undefined *current_data_ptr;\n  undefined *next_data_ptr;\n  undefined *temp_data_ptr;\n  byte current_data_index;\n  \n  current_data_index = *PTR_DAT_08002c0c;\n  previous_data_ptr = (undefined *)0x0;\n  current_data_ptr = (undefined *)0x0;\n  next_data_ptr = (undefined *)0x0;\n  while (previous_data_ptr != PTR_DAT_08002c14) {\n    previous_data_ptr = current_data_ptr;\n    temp_data_ptr = PTR_DAT_08002c10 + (uint)current_data_index * 0x40;\n    copy_data_08002ba8_block(previous_data_ptr,current_data_ptr,temp_data_ptr);\n    current_data_index = get_next_data_index(current_data_index);\n    next_data_ptr = previous_data_ptr;\n    current_data_ptr = temp_data_ptr;\n  }\n  copy_data_08002ba8_block(previous_data_ptr,current_data_ptr,(undefined *)0x0,previous_data_ptr,next_data_ptr);\n  return;\n}\n",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "copy_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "check_overflow_and_compare_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_xor_result_negative",
                "uVar2": "multiplied_input",
                "uVar3": "combined_input",
                "uVar4": "xor_result",
                "bVar5": "is_combined_input_zero"
            },
            "code": "uint check_overflow_and_compare_0800919c(uint input_1, uint input_2){\n    bool is_overflow_1 = ((int)input_1 >> 0x18 == -1);\n    bool is_overflow_2 = ((int)input_2 >> 0x18 == -1);\n\n    if ((is_overflow_1 || is_overflow_2) && \n        ((is_overflow_1 && ((input_1 & 0x7fffff) != 0)) || \n        (is_overflow_2 && ((input_2 & 0x7fffff) != 0)))){\n        return 1;\n    }\n\n    uint combined_input = input_1 * 2 | input_2 & 0x7fffffff;\n    bool is_combined_input_zero = (combined_input == 0);\n    uint xor_result = input_1 ^ input_2;\n    bool is_xor_result_zero = (xor_result == 0);\n    bool is_xor_result_negative = (-1 < (int)xor_result);\n\n    if (is_xor_result_negative){\n        uint multiplied_input = input_2 * -2 + input_1 * 2;\n        is_combined_input_zero = (multiplied_input == 0);\n    }\n\n    if (is_xor_result_negative && input_2 <= input_1 && !is_combined_input_zero){\n        return (int)input_2 >> 0x1f;\n    }\n\n    if (!is_xor_result_negative || input_2 > input_1){\n        return ~((int)input_2 >> 0x1f);\n    }\n\n    if (!is_combined_input_zero){\n        return input_1 | 1;\n    }\n\n    return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "check_overflow_and_compare_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "convert_to_64_bit_0800854c",
                "param_1": "input",
                "uVar1": "low_bits",
                "uVar2": "shift_amount_underflow_overflow",
                "iVar3": "leading_zeroes",
                "uVar4": "shift_amount",
                "in_r12": "mask",
                "bVar5": "is_shift_amount_underflow_negative",
                "bVar6": "is_shift_amount_underflow_zero",
                "bVar7": "is_shift_amount_overflow_negative"
            },
            "code": "ulonglong convert_to_64_bit_0800854c(uint32_t input)\n{\n  uint32_t leading_zeroes = count_leading_zeroes(input);\n  uint32_t shift_amount = leading_zeroes + 21;\n  uint32_t shift_amount_overflow = shift_amount - 32;\n  uint32_t shift_amount_underflow = 11 - leading_zeroes;\n  uint32_t mask = (1 << shift_amount_underflow) - 1;\n  uint32_t high_bits = input << shift_amount & 0xFFFFFFFF;\n  uint32_t low_bits = (input >> shift_amount_underflow) & mask;\n  if (shift_amount_overflow < 0x433) {\n    return ((ulonglong)high_bits << 32) | low_bits + (0x432 - shift_amount_overflow) * 0x100000;\n  }\n  uint32_t shift_amount_underflow_overflow = ~(0x432 - shift_amount_overflow);\n  if (shift_amount_underflow_overflow > 0x1e) {\n    return (ulonglong)input >> (shift_amount_underflow_overflow - 0x1f);\n  }\n  uint32_t shift_amount_underflow_overflow_adjusted = shift_amount_underflow_overflow - 0x13;\n  if (shift_amount_underflow_overflow_adjusted == 0 || (shift_amount_underflow_overflow_adjusted < 0) != ((shift_amount_underflow_overflow - 0x1f) < 0xc)) {\n    shift_amount_underflow_overflow++;\n    return ((ulonglong)input >> shift_amount_underflow_overflow) | ((ulonglong)high_bits << (0x20 - shift_amount_underflow_overflow));\n  }\n  return (ulonglong)high_bits >> (0x20 - (0xc - shift_amount_underflow_overflow_adjusted)) | ((ulonglong)input << (shift_amount_underflow_overflow_adjusted + 0xc));\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "convert_to_64_bit_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "calculate_hash_08008e44",
                "param_1": "input",
                "iVar1": "leading_zeroes_count",
                "uVar2": "shift_amount",
                "iVar4": "hash_value",
                "uVar3": "sign_bit",
                "uVar5": "mask",
                "shifted_input": "shifted_input",
                "carry_bit": "carry_bit"
            },
            "code": "uint calculate_hash_08008e44(uint input)\n{\n  int leading_zeroes_count;\n  uint sign_bit;\n  uint hash_value;\n  uint shift_amount;\n  uint mask;\n  uint shifted_input;\n  uint carry_bit;\n  \n  sign_bit = input & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leading_zeroes_count = count_leading_zeroes(input);\n  shift_amount = leading_zeroes_count - 8;\n  mask = 0 << (shift_amount & 0xff);\n  shifted_input = input << (shift_amount & 0xff);\n  carry_bit = (uint)(0x7fffffff < mask);\n  hash_value = ((sign_bit | 0x4b000000) - 0x800000) + shifted_input + (0U >> (0x20 - shift_amount & 0xff)) + carry_bit;\n  if (mask == 0x80000000) {\n    hash_value = hash_value & 0xfffffffe;\n  }\n  return hash_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "update_parameter_0800733e",
                "param_1": "parameter_address",
                "param_2": "new_value",
                "param_3": "is_second_parameter",
                "undefined2": "int"
            },
            "code": "void update_parameter_0800733e(int parameter_address, int new_value, char is_second_parameter) {\\n  if (is_second_parameter == \"\\0\") {\\n    *(int *)(parameter_address + 0x1a) = new_value;\\n  }\\n  else {\\n    *(int *)(parameter_address + 0x18) = new_value;\\n  }\\n  return;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "update_parameter_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "execute_task_0800583c",
                "FUN_080052ac": "execute_subtask",
                "FUN_08005790": "print_task_status",
                "FUN_080057e4": "print_subtask_status",
                "PTR_DAT_08005858": "TASK_LIST",
                "TASK_OFFSET": "0x18"
            },
            "code": "void execute_task_0800583c(void)\n{\n  int task_id = *(int *)(PTR_PTR_DAT_08005858 + TASK_OFFSET);\n  execute_subtask(task_id);\n  print_task_status();\n  print_subtask_status();\n  return;\n}",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_task_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5",
                "iVar1": "result",
                "PTR_DAT_08001efc": "PTR_DATA",
                "wait_for_input": "wait_for_input",
                "check_input": "check_input",
                "FUNC_08003004": "execute_function",
                "perform_additional_action": "perform_additional_action"
            },
            "code": "void process_data_08001e98(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4, undefined param_5) {\\n  int result;\\n  if (PTR_DAT_08001efc[1] != \"\\a\") {\\n    do {\\n      wait_for_input();\\n      if (*PTR_DAT_08001efc == \"\\0\") {\\n        return;\\n      }\\n      result = check_input();\\n    } while (result != 0);\\n    execute_function(param_1, param_2, param_3, param_4, param_5);\\n    if (PTR_DAT_08001efc[1] == \"\\0\") {\\n      PTR_DAT_08001efc[1] = 2;\\n    }\\n    if (PTR_DAT_08001efc[0x10] != \"\\0\") {\\n      perform_additional_action();\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002fac",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "bit_index",
                "DAT_08006a14": "array_start_address"
            },
            "code": "void set_bit_in_array_080069e4(uint8_t bit_index)\n{\n    uint32_t* array_ptr = (uint32_t*)(DAT_08006a14 + (((uint32_t)bit_index >> 5) + 0x20) * 4);\n    uint32_t bit_mask = 1 << (bit_index & 0x1f);\n    *array_ptr = bit_mask;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_msb_bit_and_divide_by_2_pow_31_0800b2d4",
                "param_1": "value_to_set_bit",
                "param_2": "mask",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "uint32_t set_msb_bit_and_divide_by_2_pow_31_0800b2d4(uint32_t value_to_set_bit, uint32_t mask = 0x80000000, uint32_t add_value = 0x100000, uint32_t shift_value = 0x1f) {\n    uint32_t result = (value_to_set_bit | mask) + add_value;\n    return result >> shift_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "set_msb_bit_and_divide_by_2_pow_31_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_hash_08008e3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar3": "multiplier",
                "uVar4": "carry",
                "shifted_input": "shifted_input",
                "shifted_zero": "shifted_zero",
                "result": "result",
                "shifted_output": "shifted_output"
            },
            "code": "uint calculate_hash_08008e3c(uint input) {\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift_amount = leading_zeroes - 8;\n  int multiplier = shift_amount * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < 0);\n    uint result = multiplier + shifted_input + shifted_zero + carry;\n    if (shifted_input == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_output = (input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f);\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_output = shifted_output & ~(shifted_input >> 0x1f);\n  }\n  return shifted_output + multiplier;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_hash_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_double_08009654",
                "param_1": "first_half",
                "param_2": "second_half",
                "uVar1": "exponent",
                "uVar2": "shift",
                "lVar3": "result",
                "DAT_080096e4": "mask",
                "CARRY4": "CARRY4"
            },
            "code": "long long calculate_double_08009654(uint32_t first_half, uint32_t second_half)\n{\n    long long result = CONCAT44(second_half, first_half);\n    uint32_t shift = (second_half << 1) >> 0x15;\n    uint32_t exponent = shift - 0x3ff;\n    if ((int)exponent < 0x14)\n    {\n        if ((int)exponent < 0)\n        {\n            second_half = second_half & 0x80000000;\n            if (exponent == 0xffffffff)\n            {\n                second_half = second_half | 0x3ff00000;\n            }\n            result = (long long)second_half << 0x20;\n        }\n        else\n        {\n            uint32_t DAT_080096e4 = DAT_080096e4 >> (exponent & 0xff);\n            if ((second_half & DAT_080096e4 | first_half) != 0)\n            {\n                result = (long long)(second_half + (0x80000 >> (exponent & 0xff)) & ~DAT_080096e4) << 0x20;\n            }\n        }\n    }\n    else if ((int)exponent < 0x34)\n    {\n        uint32_t DAT_080096e4 = 0xffffffff >> (shift - 0x413 & 0xff);\n        if ((first_half & DAT_080096e4) != 0)\n        {\n            uint32_t bit = 1 << (0x33 - exponent & 0xff);\n            if (CARRY4(first_half, bit) != false)\n            {\n                second_half = second_half + 1;\n            }\n            result = CONCAT44(second_half, first_half + bit & ~DAT_080096e4);\n        }\n    }\n    else\n    {\n        result = CONCAT44(second_half, first_half);\n        if (exponent == 0x400)\n        {\n            result = FUNC_080082d4();\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "calculate_double_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2",
                "_DAT_40000000": "ptr1",
                "_DAT_4000000c": "ptr2"
            },
            "code": "void clear_flags_08007bc2(void)\n{\n  unsigned int *_DAT_40000000 = (unsigned int *)0x40000000;\n  unsigned int *_DAT_4000000c = (unsigned int *)0x4000000c;\n  *_DAT_40000000 &= ~(1 << 0);\n  *_DAT_4000000c &= ~(1 << 1);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "clear_flags_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "calculate_result_08009410",
                "param_1": "input_value",
                "param_2": "input_flag",
                "uVar1": "result",
                "uVar2": "flag_value",
                "local_28": "local_var1",
                "uStack_24": "local_var2",
                "local_20": "local_var3",
                "uStack_1c": "local_var4"
            },
            "code": "undefined4 calculate_result_08009410(undefined4 input_value, uint input_flag) {\n  undefined4 result;\n  uint flag_value;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  if (DAT_080094b4 < (int)(input_flag & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(input_flag & 0x7fffffff)) {\n      result = FUNC_080082d0(input_value, input_flag, input_value, input_flag);\n    }\n    else {\n      flag_value = FUNC_08009d78(input_value, input_flag, &local_var1);\n      flag_value = flag_value & 3;\n      if (flag_value == 1) {\n        result = FUN_0800adf0(local_var1, local_var2, local_var3, local_var4, 1);\n      }\n      else if (flag_value == 2) {\n        result = FUNC_0800a348(local_var1, local_var2, local_var3, local_var4);\n      }\n      else if (flag_value == 0) {\n        result = FUNC_0800a348(local_var1, local_var2, local_var3, local_var4);\n      }\n      else {\n        result = FUN_0800adf0(local_var1, local_var2, local_var3, local_var4, 1);\n      }\n    }\n    return result;\n  }\n  result = FUNC_0800a348(input_value, input_flag, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_result_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "store_params_in_memory_080035ec",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "code": "void store_params_in_memory_080035ec(int param1, int param2, int param3) {\n  *(int *)PTR_DAT_08003614 = param1;\n  *(int *)(PTR_DAT_08003614 + 4) = param2;\n  *(int *)(PTR_DAT_08003614 + 8) = param3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "store_params_in_memory_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "synchronize_data_08006c70",
                "DAT_08006c94": "data_pointer",
                "DAT_08006c98": "data_value",
                "PTR_": "ptr_",
                "uint": "unsigned_int",
                "mask": "data_mask"
            },
            "code": "void synchronize_data_08006c70(void)\n{\n    DataSynchronizationBarrier(0xf);\n    uint* PTR_data = (uint *)(DAT_08006c94 + 0xc);\n    uint DAT_08006c98 = *(uint *)(DAT_08006c94 + 0xc);\n    uint mask = 0x700;\n    *PTR_data = DAT_08006c98 | (DAT_08006c98 & mask);\n    DataSynchronizationBarrier(0xf);\n    while (true) {\n        /* Do nothing block with infinite loop */\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "synchronize_data_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "convert_char_to_int_and_print_08006d98",
                "param_1": "character",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "converted_value",
                "FUN_08006b54": "convert_char_to_int",
                "FUN_08006c04": "print_converted_value"
            },
            "code": "void convert_char_to_int_and_print_08006d98(char character, int param_2, int param_3, int param_4)\n{\n  int converted_value = convert_char_to_int((int)character);\n  print_converted_value(converted_value, param_2, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08006c04",
                "FUN_08006b54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_and_print_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_ptr_value_08005a68",
                "PTR_DAT_08005a80": "ptr_value"
            },
            "code": "void increment_ptr_value_08005a68(void)\n{\n  int* PTR_DAT_08005a80 = (int*)PTR_DAT_08005a80;\n  *PTR_DAT_08005a80 = *PTR_DAT_08005a80 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_ptr_value_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0",
                "PTR_DAT_080079d8": "data_array",
                "PTR_DAT_080079dc": "status_ptr"
            },
            "code": "void initialize_data_080079c0(void)\n{\n  memset(PTR_DAT_080079d8, 0, sizeof(PTR_DAT_080079d8));\n  *(int *)PTR_DAT_080079dc = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "calculate_result_0800b2e0"
            },
            "code": "int calculate_result_0800b2e0(void)\n{\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "calculate_result_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "intermediate1",
                "uVar2": "intermediate2",
                "FUNC_08008cdc": "square",
                "FUNC_08008eec": "add",
                "FUNC_08008cd8": "divide",
                "FUNC_08009054": "add_with_constant"
            },
            "code": "float calculate_result_08002908(float input1, float input2, float input3, float input4) {\n    float intermediate1 = square(input3);\n    intermediate1 = add(intermediate1, input4);\n    float intermediate2 = square(input1);\n    intermediate1 = add(intermediate1, intermediate2);\n    float intermediate3 = square(input2);\n    intermediate1 = add(intermediate1, intermediate3);\n    float intermediate4 = 1065353216.0;\n    intermediate4 = add(intermediate4, input3);\n    intermediate1 = divide(intermediate1, intermediate4);\n    return intermediate1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_global_variable_value_08007c40",
                "param_1": "value",
                "_DAT_40000034": "global_variable"
            },
            "code": "void set_global_variable_value_08007c40(int value)\n{\n    _DAT_40000034 = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_variable_value_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "result",
                "uVar2": "shift_diff",
                "uVar3": "shift_amount",
                "bVar4": "carry_flag",
                "uVar5": "temp_result",
                "lVar6": "result",
                "DAT_080095a8": "data1",
                "DAT_080095ac": "data2",
                "DAT_080095b0": "data",
                "DAT_080095b4": "data",
                "param_3": "param_3",
                "param_4": "param_4"
            },
            "code": "long long calculate_result_080094c0(uint32_t input_1, uint32_t input_2, undefined4 param_3, undefined4 param_4) {\n  int32_t result = 0;\n  uint32_t shift_amount = (input_2 << 1) >> 0x15;\n  uint32_t shift_diff = shift_amount - 0x3ff;\n  if ((int32_t)shift_diff < 0x14) {\n    if ((int32_t)shift_diff < 0) {\n      undefined8 temp_result = calculate_temp_result(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result = calculate_iVar1((int32_t)temp_result, (int32_t)((uint64_t)temp_result >> 0x20), 0, 0);\n      if (result != 0) {\n        if ((int32_t)input_2 < 0) {\n          if ((input_1 | input_2 & 0x7fffffff) != 0) {\n            input_2 = DAT_080095b4;\n          }\n          result = (int64_t)input_2 << 0x20;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      uint32_t DAT_080095b0 = DAT_080095b0 >> (shift_diff & 0xff);\n      if ((input_2 & DAT_080095b0 | input_1) != 0) {\n        undefined8 temp_result = calculate_temp_result(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n        result = calculate_iVar1((int32_t)temp_result, (int32_t)((uint64_t)temp_result >> 0x20), 0, 0);\n        if (result != 0) {\n          if ((int32_t)input_2 < 0) {\n            input_2 = input_2 + (0x100000 >> (shift_diff & 0xff));\n          }\n          result = (int64_t)(input_2 & ~DAT_080095b0) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int32_t)shift_diff < 0x34) {\n    uint32_t DAT_080095b0 = 0xffffffff >> (shift_amount - 0x413 & 0xff);\n    if ((DAT_080095b0 & input_1) != 0) {\n      undefined8 temp_result = calculate_temp_result(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result = calculate_iVar1((int32_t)temp_result, (int32_t)((uint64_t)temp_result >> 0x20), 0, 0);\n      if (result != 0) {\n        if ((int32_t)input_2 < 0) {\n          if (shift_diff == 0x14) {\n            input_2 = input_2 + 1;\n          }\n          else {\n            uint32_t carry = 1 << (0x34 - shift_diff & 0xff);\n            bool carry_flag = CARRY4(carry, input_1);\n            input_1 = carry + input_1;\n            if (carry_flag != false) {\n              input_2 = input_2 + 1;\n            }\n          }\n        }\n        result = (int64_t)input_1 & ~DAT_080095b0;\n        result = (result << 0x20) | input_2;\n      }\n    }\n  }\n  else {\n    result = (int64_t)input_1 << 0x20 | input_2;\n    if (shift_diff == 0x400) {\n      result = calculate_temp_result();\n    }\n  }\n  return result;\n}\n\nundefined8 calculate_temp_result(uint32_t input_1, uint32_t input_2, undefined4 DAT_080095a8, undefined4 DAT_080095ac, undefined4 param_4) {\n  undefined8 result = 0;\n  // Some calculations on the inputs\n  return result;\n}\n\nint32_t calculate_iVar1(int32_t input_1, int32_t input_2, undefined4 param_3, undefined4 param_4) {\n  int32_t result = 0;\n  // Some calculations on the inputs\n  return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_08003826",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_value_from_param_08006b54",
                "param_1": "param",
                "bVar1": "result",
                "DAT_08006b98": "data_ptr_1",
                "DAT_08006b9c": "data_ptr_2"
            },
            "code": "byte get_value_from_param_08006b54(byte param) {\\n  byte result;\\n  if ((char)param < \"\\0\") {\\n    result = *(byte *)((param & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    result = *(byte *)((char)param + DAT_08006b9c + 0x300);\\n  }\\n  return result >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_value_from_param_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_dat_value_08007e84",
                "DAT_08007ea0": "DAT_OFFSET"
            },
            "code": "uint get_dat_value_08007e84(void)\n{\n    uint* dat_pointer = (uint*)(DAT_08007ea0 + 4);\n    return (*dat_pointer) & 0xff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_dat_value_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "check_for_special_case_080057e4",
                "FUN_08007bc2": "initialize_network",
                "do_nothing_0800530c": "do_nothing"
            },
            "code": "void check_for_special_case_080057e4(void)\n{\n  initialize_network();\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_08005810[2] & 0x20) != 0)) {\n    do_nothing();\n  }\n  return;\n}",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_08001d4c",
                "FUN_0800583c"
            ],
            "imported": false,
            "current_name": "check_for_special_case_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result",
                "FUN_08006998": "calculate"
            },
            "code": "int get_result_08006d8a(void)\n{\n  int result;\n  result = calculate();\n  return result;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_hash_0800b2e8",
                "param_1": "first_half",
                "param_2": "second_half",
                "param_3": "count",
                "param_4": "param_4",
                "uVar1": "shift_value",
                "iVar2": "sum",
                "uVar3": "temp_value",
                "uVar4": "combined_value",
                "FUNC_08008640": "hash_function",
                "DAT_0800b3c8": "constant1",
                "DAT_0800b3cc": "constant2",
                "DAT_0800b3d8": "constant3",
                "DAT_0800b3d0": "constant4",
                "DAT_0800b3b8": "constant5",
                "DAT_0800b3bc": "constant6",
                "DAT_0800b3d4": "constant7",
                "DAT_0800b3c0": "constant8",
                "DAT_0800b3c4": "constant9",
                "LAB_0800b34a": "label1",
                "SCARRY4": "function1"
            },
            "code": "uint calculate_hash_0800b2e8(uint first_half, uint second_half, int count, uint param_4)\n{\n  uint hash_value;\n  int sum;\n  uint temp_value;\n  ulonglong combined_value = CONCAT44(second_half, first_half);\n  uint shift_value = (second_half << 1) >> 0x15;\n  if (shift_value == 0) {\n    if ((first_half | second_half & 0x7fffffff) == 0) {\n      return first_half;\n    }\n    combined_value = FUNC_08008640(first_half, second_half, 0, DAT_0800b3c8);\n    if (count < DAT_0800b3cc) goto LAB_0800b34a;\n    shift_value = ((uint)((int)(combined_value >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shift_value == 0x7ff) {\n    hash_value = FUNC_080082d4(first_half, second_half, first_half, second_half, param_4);\n    return hash_value;\n  }\n  temp_value = (uint)(combined_value >> 0x20);\n  sum = shift_value + count;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)combined_value;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum, 0x35)) {\n      hash_value = FUNC_08008640((uint)combined_value, temp_value & 0x800fffff | (sum + 0x36) * 0x100000, 0, DAT_0800b3d8);\n      return hash_value;\n    }\n    if (count < 0xc351) {\n      combined_value = combined_value & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      hash_value = FUNC_08008640((int)combined_value, (int)(combined_value >> 0x20), DAT_0800b3b8, DAT_0800b3bc);\n      return hash_value;\n    }\n  }\n  hash_value = FUNC_08008640(DAT_0800b3d4, temp_value & 0x80000000 | 0x7e37e43c, DAT_0800b3c0, DAT_0800b3c4);\n  return hash_value;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "check_odd_number_08007520",
                "param_1": "number_to_check",
                "FUN_080073d4": "print_error_message"
            },
            "code": "void check_odd_number_08007520(uint number_to_check)\n{\n  if ((number_to_check & 1) != 0) {\n    print_error_message(0x3e);\n  }\n  return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_odd_number_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "get_bitwise_or_operation_result_08007884",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "uVar6": "bitwise_or_result",
                "FUN_08007854": "get_value_from_function"
            },
            "code": "uint get_bitwise_or_operation_result_08007884(void)\n{\n  int value1 = get_value_from_function(0x36);\n  int value2 = get_value_from_function(0x37);\n  int value3 = get_value_from_function(0x38);\n  int value4 = get_value_from_function(0x39);\n  int value5 = get_value_from_function(0xf);\n  uint bitwise_or_result = get_value_from_function(0) | value1 << 4 | value2 << 3 | value3 << 2 | value4 << 1 | value5 << 7;\n  return bitwise_or_result;\n}\n",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "get_bitwise_or_operation_result_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "initialize_settings_08004250",
                "uVar1": "value",
                "PTR_DAT_08004470": "x_step_pin",
                "PTR_DAT_08004474": "settings",
                "PTR_s___x__step_mm___1__08004478": "x_step_mm",
                "PTR_s___y__step_mm___2__0800447c": "y_step_mm",
                "PTR_s___z__step_mm___3__08004480": "z_step_mm",
                "PTR_s___step_pulse__usec___4__08004484": "step_pulse_usec",
                "PTR_s___default_feed__mm_min___5__08004488": "default_feed_mm_min",
                "PTR_s___default_seek__mm_min___6__0800448c": "default_seek_mm_min",
                "PTR_s___step_port_invert_mask__int__08004490": "step_port_invert_mask",
                "PTR_s____7__08004494": "reserved_7",
                "PTR_s___step_idle_delay__msec___8__08004498": "step_idle_delay_msec",
                "FUNC_08009054": "calculate_acceleration",
                "PTR_s___acceleration__mm_sec_2___9__080044a0": "acceleration_mm_sec_2",
                "PTR_s___junction_deviation__mm___10__080044a4": "junction_deviation_mm",
                "PTR_s___arc__mm_segment___11__080044a8": "arc_mm_segment",
                "PTR_s___n_arc_correction__int___12__080044ac": "n_arc_correction",
                "PTR_s___n_decimals__int___13__080044b0": "n_decimals",
                "PTR_s___report_inches__bool___14__080044b4": "report_inches",
                "PTR_s___auto_start__bool___15__080044b8": "auto_start",
                "PTR_s___invert_step_enable__bool___16__080044bc": "invert_step_enable",
                "PTR_s___hard_limits__bool___17__080044c0": "hard_limits",
                "PTR_s___homing_cycle__bool___18__080044c4": "homing_cycle",
                "PTR_s___homing_dir_invert_mask__int__080044c8": "homing_dir_invert_mask",
                "PTR_s____19__080044cc": "reserved_19",
                "PTR_s___homing_feed__mm_min___20__080044d0": "homing_feed_mm_min",
                "PTR_s___homing_seek__mm_min___21__080044d4": "homing_seek_mm_min",
                "PTR_s___homing_debounce__msec___22__080044d8": "homing_debounce_msec",
                "PTR_s___homing_pull_off__mm___23__080044dc": "homing_pull_off_mm",
                "PTR_s___dir_port_invert_mask__int__080044e0": "dir_port_invert_mask",
                "PTR_DAT_080044e4": "end_of_settings"
            },
            "code": "void initialize_settings_08004250(void)\n{\n    //Initialize PTR_DAT_08004474 using pointers\n    initialize_setting(PTR_DAT_08004470, PTR_DAT_08004474);\n    initialize_setting(PTR_s___x__step_mm___1__08004478, PTR_DAT_08004474 + 4);\n    initialize_setting(PTR_s___y__step_mm___2__0800447c, PTR_DAT_08004474 + 8);\n    initialize_setting(PTR_s___z__step_mm___3__08004480, PTR_DAT_08004474 + 0xc);\n    initialize_setting(PTR_s___step_pulse__usec___4__08004484, PTR_DAT_08004474 + 0x10);\n    initialize_setting(PTR_s___default_feed__mm_min___5__08004488, PTR_DAT_08004474 + 0x14);\n    initialize_setting(PTR_s___default_seek__mm_min___6__0800448c, PTR_DAT_08004474 + 0x18);\n    initialize_setting(PTR_s___PTR_s___step_port_invert_mask__int__08004490__int__08004490, PTR_DAT_08004474 + 0x18);\n    initialize_setting(PTR_s____7__08004494, PTR_DAT_08004474 + 0x3c);\n    initialize_setting(PTR_s___step_idle_delay__msec___8__08004498, PTR_DAT_08004474 + 0x20);\n    initialize_setting(PTR_s___acceleration__mm_sec_2___9__080044a0, PTR_DAT_08004474 + 0x24);\n    initialize_setting(PTR_s___junction_deviation__mm___10__080044a4, PTR_DAT_08004474 + 0x1c);\n    initialize_setting(PTR_s___arc__mm_segment___11__080044a8, PTR_DAT_08004474 + 0x3e);\n    initialize_setting(PTR_s___PTR_s___n_arc_correction__int___12__080044ac__int___12__080044ac, PTR_DAT_08004474 + 0x3d);\n    initialize_setting(PTR_s___PTR_s___n_decimals__int___13__080044b0__int___13__080044b0, PTR_DAT_08004474 + 0x28, 1);\n    initialize_setting(PTR_s___PTR_s___report_inches__bool___14__080044b4__bool___14__080044b4, PTR_DAT_08004474 + 0x28, 2);\n    initialize_setting(PTR_s___PTR_s___auto_start__bool___15__080044b8__bool___15__080044b8, PTR_DAT_08004474 + 0x28, 4);\n    initialize_setting(PTR_s___PTR_s___invert_step_enable__bool___16__080044bc__bool___16__080044bc, PTR_DAT_08004474 + 0x28, 8);\n    initialize_setting(PTR_s___PTR_s___hard_limits__bool___17__080044c0__bool___17__080044c0, PTR_DAT_08004474 + 0x28, 0x10);\n    initialize_setting(PTR_s___PTR_s___homing_cycle__bool___18__080044c4__bool___18__080044c4, PTR_DAT_08004474 + 0x2a);\n    initialize_setting(PTR_s___PTR_s___homing_dir_invert_mask__int__080044c8__int__080044c8, PTR_DAT_08004474 + 0x2a);\n    initialize_setting(PTR_s____19__080044cc, PTR_DAT_08004474 + 0x2c);\n    initialize_setting(PTR_s___homing_feed__mm_min___20__080044d0, PTR_DAT_08004474 + 0x30);\n    initialize_setting(PTR_s___homing_seek__mm_min___21__080044d4, PTR_DAT_08004474 + 0x34);\n    initialize_setting(PTR_s___homing_debounce__msec___22__080044d8, PTR_DAT_08004474 + 0x38);\n    initialize_setting(PTR_s___homing_pull_off__mm___23__080044dc, PTR_DAT_08004474 + 0x1a);\n    initialize_setting(PTR_s___PTR_s___dir_port_invert_mask__int__080044e0__int__080044e0, PTR_DAT_08004474 + 0x1a);\n    initialize_setting(PTR_DAT_080044e4, PTR_DAT_08004474 + 0x40);\n}\n\nvoid initialize_setting(unsigned int *setting, unsigned int *value, int bit)\n{\n    if (bit == -1)\n    {\n        *setting = *value;\n    }\n    else\n    {\n        if ((*value & bit) != 0)\n        {\n            *setting = 1;\n        }\n        else\n        {\n            *setting = 0;\n        }\n    }\n}",
            "called": [
                "FUN_0800375c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08009054",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_settings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "print_character_08006dc4",
                "param_1": "character_to_print",
                "FUN_08006a58": "print_ascii_code"
            },
            "code": "void print_character_08006dc4(char character_to_print)\n{\n  print_ascii_code((int)character_to_print);\n  return;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_at_position_08007402",
                "param_1": "position"
            },
            "code": "void set_bit_at_position_08007402(uint position) {\n    uint offset = position >> 4;\n    uint base_address = offset * 0x400 + 0x40020018;\n    uint bit_position = position & 0xf;\n    short* target_address = (short*)base_address;\n    *target_address = (short)(1 << bit_position);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_char_08002870",
                "param_1": "input_char",
                "local_9": "incremented_char"
            },
            "code": "char increment_char_08002870(char input_char) {\n  char incremented_char = input_char + 1;\n  if (incremented_char == 18) {\n    incremented_char = 0;\n  }\n  return incremented_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": false,
            "current_name": "increment_char_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "do_nothing_twice_08000210",
                "PTR_": "<no change>",
                "DAT_": "<no change>"
            },
            "code": "void do_nothing_twice_08000210(){\n  do_nothing_080001ec();\n  do_nothing_080001d4();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_twice_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "check_character_08005900",
                "param_1": "character",
                "PTR_DAT_08005978": "flags",
                "FUN_080025e8": "execute_function"
            },
            "code": "int check_character_08005900(byte character) {\n  if (character == '~') {\n    PTR_DAT_08005978[2] |= 2;\n    return 1;\n  }\n  if (character < 0x7f) {\n    if (character == '?') {\n      PTR_DAT_08005978[2] |= 1;\n      return 1;\n    }\n    if (character < '@') {\n      if (character == 0x18) {\n        execute_function();\n        return 1;\n      }\n      if (character == '!') {\n        PTR_DAT_08005978[2] |= 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "check_character_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "start_address",
                "param_2": "input",
                "param_3": "output",
                "pcVar5": "current_position",
                "pcVar6": "input_position",
                "local_1c": "result",
                "local_16": "digits_count",
                "local_15": "leading_zero_count",
                "local_14": "trailing_digits_count",
                "local_d": "current_char",
                "local_c": "current_position",
                "bVar1": "digit",
                "bVar2": "is_negative",
                "bVar3": "is_overflow"
            },
            "code": "uint32_t parse_integer_08002638(int start_address, uint8_t *input, uint32_t *output) {\n  uint8_t current_char;\n  bool is_negative = false;\n  bool is_overflow = false;\n  int digits_count = 0;\n  int leading_zero_count = 0;\n  uint32_t result = 0;\n  int trailing_digits_count = 0;\n  uint8_t *current_position = input + start_address;\n  current_char = *current_position;\n  if (current_char == '-') {\n    is_negative = true;\n    current_char = *(++current_position);\n  }\n  else if (current_char == '+') {\n    current_char = *(++current_position);\n  }\n  while (current_char != '\\0') {\n    if (current_char >= '0' && current_char <= '9') {\n      int digit = current_char - '0';\n      if (digits_count < 9) {\n        result = result * 10 + digit;\n        digits_count++;\n        if (digit == 0) {\n          leading_zero_count++;\n        }\n        else {\n          trailing_digits_count = 0;\n        }\n      }\n      else {\n        if (!is_overflow) {\n          is_overflow = true;\n          trailing_digits_count = 1;\n        }\n        else {\n          trailing_digits_count++;\n        }\n      }\n    }\n    else {\n      if (current_char != ' ' && current_char != '\\t') {\n        break;\n      }\n    }\n    current_char = *(++current_position);\n  }\n  if (digits_count == 0) {\n    return 0;\n  }\n  if (is_overflow) {\n    for (int i = 0; i < trailing_digits_count; i++) {\n      result = result * 10;\n    }\n  }\n  if (is_negative) {\n    *output = ~result + 1;\n  }\n  else {\n    *output = result;\n  }\n  *input = (uint8_t)(current_position - input - 1 - start_address);\n  return 1;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "parse_integer_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "check_and_execute_tasks_080051b4",
                "iVar1": "result",
                "auStack_18": "task_buffer",
                "local_9": "task_index",
                "FUN_08004dd2": "check_for_tasks",
                "FUN_08004030": "log_error",
                "FUN_08004c48": "set_error_flag",
                "FUN_08004250": "reset_task_queue",
                "FUN_08004d7c": "get_task_from_queue"
            },
            "code": "void check_and_execute_tasks_080051b4(void)\n{\n  int result;\n  undefined task_buffer[15];\n  byte task_index;\n  result = check_for_tasks();\n  if (result == 0) {\n    log_error(10);\n    set_error_flag(1);\n    reset_task_queue();\n  }\n  for (task_index = 0; task_index < 8; task_index++) {\n    result = get_task_from_queue(task_index, task_buffer);\n    if (result == 0) {\n      log_error(10);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_and_execute_tasks_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "calculateResult_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "charVar",
                "uVar2": "resultVar",
                "iVar3": "intVar1",
                "puVar4": "ptrVar1",
                "piVar5": "ptrVar2",
                "local_50": "localVar1",
                "local_4c": "localVar2",
                "local_48": "localVar3",
                "uStack_44": "stackVar1",
                "local_40": "localVar4",
                "uStack_3c": "stackVar2",
                "local_38": "localVar5",
                "local_30": "localVar6"
            },
            "code": "undefined4 calculateResult_080098d0(undefined4 input1, undefined4 input2)\n{\n    char charVar;\n    undefined4 resultVar;\n    int intVar1;\n    undefined4 *ptrVar1;\n    int *ptrVar2;\n    undefined4 localVar1;\n    undefined *localVar2;\n    undefined4 localVar3;\n    undefined4 stackVar1;\n    undefined4 localVar4;\n    undefined4 stackVar2;\n    undefined8 localVar5;\n    int localVar6;\n    resultVar = FUN_0800a1bc();\n    charVar = *PTR_DAT_08009988;\n    if (((charVar == -1) || (localVar6 = FUN_08008b74(input1,input2,input1,input2), localVar6 != 0)) || (intVar1 = FUN_08008b24(input1,input2,0,0), intVar1 == 0)) {\n        return resultVar;\n    }\n    localVar1 = 1;\n    localVar2 = PTR_DAT_0800998c;\n    localVar3 = input1;\n    stackVar1 = input2;\n    localVar4 = input1;\n    stackVar2 = input2;\n    if (charVar == '\\0') {\n        localVar5 = 0;\nLAB_0800996c:\n        intVar1 = FUN_0800b2e0(&localVar1);\n        if (intVar1 != 0) goto joined_r0x0800997a;\n    }\n    else {\n        localVar5 = FUNC_08008894(0,0,0,0);\n        if (charVar != '\\x02') goto LAB_0800996c;\n    }\n    ptrVar1 = (undefined4 *)FUN_0800b3dc();\n    *ptrVar1 = 0x21;\njoined_r0x0800997a:\n    if (localVar6 != 0) {\n        ptrVar2 = (int *)FUN_0800b3dc();\n        *ptrVar2 = localVar6;\n    }\n    return (undefined4)localVar5;\n}",
            "called": [
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008b24",
                "FUN_08008894",
                "FUN_08008b74",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002978"
            ],
            "imported": false,
            "current_name": "calculateResult_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "is_param_valid_08005c30",
                "param_1": "param",
                "bVar1": "is_valid",
                "DAT_08005c70": "PTR_DAT_08005c70",
                "FUN_08005bdc": "set_value"
            },
            "code": "bool is_param_valid_08005c30(int param) {\n    bool is_valid = param < 0x1000000;\n    if (is_valid) {\n        DAT_08005c70[1] = param - 1;\n        set_value(0xffffffff, 0xf);\n        DAT_08005c70[2] = 0;\n        *DAT_08005c70 = 7;\n    }\n    return !is_valid;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "is_param_valid_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "FUN_0800056c": "process_input_data_0800056c",
                "param_1": "input_data",
                "uVar1": "intermediate_result",
                "FUN_08008590": "perform_operation_1",
                "FUNC_08008640": "perform_operation_2",
                "DAT_080005a8": "constant_1",
                "DAT_080005ac": "constant_2",
                "FUN_08008c30": "perform_operation_3"
            },
            "code": "undefined4 process_input_data_0800056c(undefined4 input_data)\\n{\\n    undefined8 intermediate_result;\\n    \\n    if (PTR_DAT_080005b0[3] != \"\\0\") {\\n        intermediate_result = perform_operation_1(input_data);\\n        intermediate_result = perform_operation_2((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20),DAT_080005a8,DAT_080005ac);\\n        input_data = perform_operation_3((int)intermediate_result,(int)((ulonglong)intermediate_result >> 0x20));\\n    }\\n    return input_data;\\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_input_data_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "execute_program_08002f24",
                "FUN_08002ef0": "initialize_system",
                "FUN_0800b430": "execute_task",
                "PTR_DAT_08002f3c": "PTR_DATA_TASK"
            },
            "code": "void execute_program_08002f24(void)\n{\n    initialize_system();\n    execute_task(PTR_DAT_08002f3c, 0, 28);\n    return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_program_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_and_set_value_0800981c",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "cVar1": "operation_type",
                "puVar2": "operation_ptr",
                "iVar3": "status",
                "puVar4": "value_ptr",
                "piVar5": "error_ptr",
                "uVar6": "result",
                "local_50": "operation_code",
                "puStack_4c": "operation_name_ptr",
                "local_48": "x1_copy",
                "uStack_44": "y1_copy",
                "local_40": "x2_copy",
                "uStack_3c": "y2_copy",
                "local_38": "error_code",
                "uStack_34": "value_code",
                "local_30": "error_value"
            },
            "code": "undefined8 calculate_hypotenuse_and_set_value_0800981c(undefined4 x1, undefined4 y1, undefined4 x2, undefined4 y2) {\n  char operation_type;\n  undefined *operation_ptr;\n  int status;\n  undefined4 *value_ptr;\n  int *error_ptr;\n  undefined8 result;\n  undefined4 operation_code;\n  undefined *operation_name_ptr;\n  undefined4 x1_copy;\n  undefined4 y1_copy;\n  undefined4 x2_copy;\n  undefined4 y2_copy;\n  undefined4 error_code;\n  undefined4 value_code;\n  int error_value;\n  operation_ptr = PTR_DAT_080098cc;\n  result = FUNC_08009b24();\n  if (*operation_ptr == -1) {\n    return result;\n  }\n  error_value = FUN_0800b2d4();\n  if (error_value != 0) {\n    return result;\n  }\n  status = FUN_0800b2d4(x1, y1);\n  if (status == 0) {\n    return result;\n  }\n  status = FUN_0800b2d4(x2, y2);\n  if (status == 0) {\n    return result;\n  }\n  operation_type = *operation_ptr;\n  operation_code = 3;\n  operation_name_ptr = PTR_s_hypot_080098c0;\n  x1_copy = x1;\n  y1_copy = y1;\n  x2_copy = x2;\n  y2_copy = y2;\n  if (operation_type == '\\0') {\n    value_code = 0xe0000000;\n    error_code = DAT_080098c8;\nLAB_080098aa:\n    status = FUN_0800b2e0(&operation_code);\n    if (status != 0) goto LAB_08009896;\n  }\n  else {\n    value_code = 0;\n    error_code = DAT_080098c4;\n    if (operation_type != '\\x02') goto LAB_080098aa;\n  }\n  value_ptr = (undefined4 *)FUN_0800b3dc();\n  *value_ptr = 0x22;\nLAB_08009896:\n  result = CONCAT44(error_code, value_code);\n  if (error_value != 0) {\n    error_ptr = (int *)FUN_0800b3dc();\n    result = CONCAT44(error_code, value_code);\n    *error_ptr = error_value;\n  }\n  return result;\n}\n",
            "called": [
                "FUN_0800b2e0",
                "FUN_0800b2d4",
                "FUN_08009b24",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_hypotenuse_and_set_value_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "set_flags_and_call_functions_080059b4",
                "FUN_08006d72": "call_function_1",
                "FUN_08006ce0": "call_function_2",
                "do_nothing_08005a50": "do_nothing",
                "DAT_080059f4": "data_ptr"
            },
            "code": "int set_flags_and_call_functions_080059b4(void)\n{\n    int *DAT_080059f4 = DAT_080059f4;\n    *DAT_080059f4 |= 0x200;\n    *DAT_080059f4 |= 0x400;\n    *DAT_080059f4 |= 0x100;\n    call_function_1(16000);\n    call_function_2(3);\n    do_nothing();\n    return 0;\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_and_call_functions_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "bit_index",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "num_bits_to_extract",
                "num_bits_to_shift": "num_bits_to_shift",
                "mask": "mask"
            },
            "code": "void extract_bits_08006c04(uint input, uint bit_index, uint *output1, uint *output2) {\n  uint num_bits_to_extract;\n  uint num_bits_to_shift;\n  uint mask;\n  bit_index = bit_index & 7;\n  num_bits_to_extract = 7 - bit_index;\n  if (num_bits_to_extract > 3) {\n    num_bits_to_extract = 4;\n  }\n  if (bit_index + 4 < 7) {\n    num_bits_to_shift = 0;\n  }\n  else {\n    num_bits_to_shift = bit_index - 3;\n  }\n  mask = (1 << (num_bits_to_extract & 0xff)) - 1U;\n  *output1 = mask & (input >> (num_bits_to_shift & 0xff));\n  *output2 = mask & input;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "extract_bits_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "PTR_DAT_08002ed0": "current_index_pointer",
                "PTR_DAT_08002ed8": "end_index_pointer",
                "PTR_DAT_08002ed4": "data_pointer",
                "param1": "param1",
                "param2": "param2",
                "local_18": "prev_data",
                "local_11": "current_index",
                "puVar3": "current_data",
                "FUNC_08009054": "calculate_value",
                "FUN_08002c18": "process_pair"
            },
            "code": "void process_data_08002e08(void)\\n{\\n  undefined4 param1;\\n  undefined4 param2;\\n  undefined *current_data;\\n  undefined *prev_data;\\n  byte current_index;\\n  byte end_index;\\n  \\n  current_index = *PTR_DAT_08002ed0;\\n  prev_data = (undefined *)0x0;\\n  end_index = *PTR_DAT_08002ed8;\\n  \\n  while (current_index != end_index) {\\n    current_data = PTR_DAT_08002ed4 + (uint)current_index * 0x40;\\n    if ((prev_data != (undefined *)0x0) && ((prev_data[0x24] != \"\\0\" || (current_data[0x24] != \"\\0\")))) {\\n      param1 = calculate_value(*(undefined4 *)(prev_data + 0x18),*(undefined4 *)(prev_data + 0x14));\\n      param2 = calculate_value(*(undefined4 *)(current_data + 0x18),*(undefined4 *)(prev_data + 0x14));\\n      process_pair(prev_data,param1,param2);\\n      prev_data[0x24] = 0;\\n    }\\n    current_index = get_next_index(current_index);\\n    prev_data = current_data;\\n  }\\n  param1 = calculate_value(*(undefined4 *)(prev_data + 0x18),*(undefined4 *)(prev_data + 0x14));\\n  param2 = calculate_value(0,*(undefined4 *)(prev_data + 0x14));\\n  process_pair(prev_data,param1,param2);\\n  prev_data[0x24] = 0;\\n  return;\\n}",
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "get_shift_amount_08006680",
                "uVar1": "shift_amount",
                "uVar2": "leading_zeroes_count",
                "FUN_08006628": "get_value",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_080066c8": "PTR_DAT_080066c8",
                "DAT_080066c4": "DAT_080066c4",
                "uint": "uint",
                "get_shift_amount": "get_shift_amount",
                "shift_amount": "shift_amount",
                "leading_zeroes_count": "leading_zeroes_count"
            },
            "code": "uint get_shift_amount_08006680(void)\n{\n  uint shift_amount;\n  uint leading_zeroes_count;\n  \n  shift_amount = get_value();\n  leading_zeroes_count = count_leading_zeroes(0x380000);\n  return shift_amount >> PTR_DAT_080066c8[(*(uint *)(DAT_080066c4 + 8) & 0x1c00) >> (leading_zeroes_count & 0xff)];\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shift_amount_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "data_index",
                "param_2": "data_value",
                "PTR_DAT_0800036c": "data_check",
                "FUN_080002f0": "initialize_data",
                "PTR_DAT_08000370": "data_array"
            },
            "code": "void store_data_08000340(uint data_index, undefined data_value)\n{\n    int* PTR_DAT_0800036c = (int*)PTR_DAT_0800036c;\n    if (*PTR_DAT_0800036c == 0) {\n        initialize_data();\n    }\n    PTR_DAT_08000370[data_index & 0x3ff] = data_value;\n    return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "store_data_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_output_thunk_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "code": "uint calculate_output_thunk_08009990(uint input1, uint input2, uint input3, uint input4)\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  temp6 = CONCAT44(DAT_08009b04,DAT_08009b00);\n  temp4 = input4 & 0x7fffffff;\n  if ((DAT_08009b18 < (temp4 | (-input3 | input3) >> 0x1f)) || (temp5 = input2 & 0x7fffffff, DAT_08009b18 < (temp5 | (-input1 | input1) >> 0x1f))) {\n    temp4 = calculate_value(input3,input4,input1,input2);\n  }\n  else {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = get_value();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      temp4 = DAT_08009af0;\n      if ((temp3 != 2) && (temp4 = input1, temp3 == 3)) {\n        temp4 = DAT_08009af8;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == DAT_08009b18) {\n          temp3 = temp3 - 1;\n          if (temp5 == temp4) {\n            if (2 < temp3) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + temp3 * 8);\n          }\n          if (temp3 < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != DAT_08009b18) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              calculate_value(input1,input2,input3,input4,input4);\n              do_nothing();\n              temp6 = get_value();\n            }\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = calculate_value(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n            temp4 = calculate_value(DAT_08009af0,DAT_08009af4,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = calculate_value(temp4,temp2,DAT_08009ae8,DAT_08009aec);\n          temp4 = calculate_value((int)temp6,(int)((ulonglong)temp6 >> 0x20),DAT_08009af0,DAT_08009af4);\n          return temp4;\n        }\n      }\n      temp4 = DAT_08009b08;\n      if (-1 < (int)input2) {\n        temp4 = DAT_08009b00;\n      }\n    }\n  }\n  return temp4;\n}",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_output_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_call_func_08004bf4",
                "param_1": "input_char",
                "param_2": "input_value",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void calculate_offset_and_call_func_08004bf4(byte input_char, undefined4 input_value)\n{\n    ushort offset = (ushort)input_char * 0xd + 0x200;\n    int length = 0xc;\n    call_function_with_offset_and_length(offset, input_value, length);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": false,
            "current_name": "calculate_offset_and_call_func_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "verify_checksum_08004d7c",
                "param_1": "data",
                "param_2": "checksum",
                "iVar1": "calculated_checksum",
                "FUN_080003ec": "calculate_checksum",
                "FUN_0800b430": "clear_memory",
                "FUN_08004bf4": "generate_response"
            },
            "code": "bool verify_checksum_08004d7c(byte data, undefined4 checksum) {\n  int calculated_checksum = calculate_checksum(checksum, (ushort)data * 0xd + 0x200, 0xc);\n  if (calculated_checksum == 0) {\n    clear_memory(checksum, 0, 0xc);\n    generate_response(data, checksum);\n  }\n  return calculated_checksum != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "verify_checksum_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_param_to_int_08009278",
                "param_1": "param",
                "uVar1": "shifted_param",
                "uVar2": "difference",
                "max_value": "MAX_PARAM_VALUE",
                "min_value": "MIN_PARAM_VALUE",
                "shift_value": "SHIFT_VALUE"
            },
            "code": "uint convert_param_to_int_08009278(uint param)\n{\n    uint shift_value = 0x18;\n    uint uVar1;\n    uint uVar2;\n    uint max_value = 0x7f000000;\n    uint min_value = 0x80000000;\n    \n    if (param << 1 < max_value) {\n        return 0;\n    }\n    \n    uVar1 = (param << 1) >> shift_value;\n    uVar2 = 0x9e - uVar1;\n    \n    if (uVar1 < 0x9f && uVar2 != 0) {\n        uVar1 = (param << 8 | min_value) >> (uVar2 & 0xff);\n        if ((param & min_value) != 0) {\n            uVar1 = -uVar1;\n        }\n        return uVar1;\n    }\n    \n    if ((uVar2 == 0xffffff9f) && ((param & 0x7fffff) != 0)) {\n        return 0;\n    }\n    \n    param = param & min_value;\n    if (param == 0) {\n        param = 0x7fffffff;\n    }\n    \n    return param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_param_to_int_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "populate_values_and_store_in_memory_080004fc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "uVar1": "result1, result2, result3"
            },
            "code": "void populate_values_and_store_in_memory_080004fc(int value1, int value2, int value3)\n{\n  int result1;\n  int result2;\n  int result3;\n  result1 = get_result_from_function1(value1);\n  result1 = perform_operation_on_result(result1,*(int *)PTR_DAT_08000564);\n  *(int *)(PTR_DAT_08000568 + 0xc) = result1;\n  result2 = get_result_from_function1(value2);\n  result2 = perform_operation_on_result(result2,*(int *)(PTR_DAT_08000564 + 4));\n  *(int *)(PTR_DAT_08000568 + 0x10) = result2;\n  result3 = get_result_from_function1(value3);\n  result3 = perform_operation_on_result(result3,*(int *)(PTR_DAT_08000564 + 8));\n  *(int *)(PTR_DAT_08000568 + 0x14) = result3;\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "populate_values_and_store_in_memory_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "update_data_if_different_08000220",
                "param_1": "new_data",
                "*PTR_DAT_08000264": "*data_pointer",
                "FUN_08002fd4": "reset_data",
                "do_nothing_080001c8": "perform_action_1",
                "do_nothing_080001e0": "perform_action_2",
                "FUN_08000210": "handle_error"
            },
            "code": "void update_data_if_different_08000220(char new_data) {\n  if (new_data != *PTR_DAT_08000264) {\n    reset_data();\n    if (new_data == 1) {\n      perform_action_1();\n    }\n    else if (new_data == 2) {\n      perform_action_2();\n    }\n    else {\n      handle_error();\n    }\n    *PTR_DAT_08000264 = new_data;\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "update_data_if_different_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "clear_pointer_data_08005238",
                "PTR_DAT_0800524c": "pointer_data",
                "FUN_08005250": "call_function"
            },
            "code": "void clear_pointer_data_08005238(void)\n{\n  *PTR_DAT_0800524c = 0;\n  call_function();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "clear_pointer_data_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_flag_and_enable_08007da8",
                "puVar1": "flag_ptr"
            },
            "code": "void set_flag_and_enable_08007da8(void)\n{\n  uint *flag_ptr;\n  flag_ptr = DAT_08007dd4;\n  DAT_08007dd4[8] |= 0x10;\n  *flag_ptr |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "set_flag_and_enable_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "printAlarmMessage_08004148",
                "param_1": "alarmType",
                "PTR_s_ALARM__08004190": "alarmMessage1",
                "PTR_s_Abort_during_cycle_08004198": "alarmMessage2",
                "PTR_s_Hard_limit_08004194": "alarmMessage3",
                "PTR_s___MPos__0800419c": "alarmMessage4",
                "do_nothing_08002814": "wait"
            },
            "code": "void printAlarmMessage_08004148(char alarmType){\n  printMessage(\"ALARM:\");\n  if (alarmType == -2) {\n    printMessage(\"Abort during cycle\");\n  }\n  else if (alarmType == -1) {\n    printMessage(\"Hard limit\");\n  }\n  printMessage(\"MPos:\");\n  wait(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "printAlarmMessage_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "encrypt_data_08004940",
                "uVar1": "temp32_1",
                "uVar2": "temp32_2",
                "uVar3": "temp32_3",
                "uVar4": "temp64_1",
                "uVar5": "temp64_2",
                "auStack_2c": "value",
                "local_11": "i"
            },
            "code": "void encrypt_data_08004940(void)\n{\n    uint8_t key[3];\n    uint32_t value[3];\n    uint32_t temp;\n    uint8_t i, j;\n\n    memcpy(key, PTR_DAT_08004b88 + 1, 3);\n    if (key[0] < 8) {\n        switch(key[0]) {\n            case 0:\n                fun0();\n                break;\n            case 1:\n                fun1();\n                break;\n            case 2:\n                fun2();\n                break;\n            case 3:\n                fun3();\n                break;\n            case 4:\n                fun4();\n                break;\n            case 5:\n                fun5();\n                break;\n            case 6:\n                fun6();\n                break;\n            case 7:\n                fun7();\n                break;\n        }\n        return;\n    }\n\n    // Perform encryption\n    memcpy(value, PTR_DAT_08004b88 + 4, 3 * sizeof(uint32_t));\n    for (i = 0; i < 3; i++) {\n        temp = encrypt_func(value[i], PTR_DAT_08004bac + i);\n        value[i] = temp;\n        if ((PTR_DAT_08004bac[0x28] & 1) != 0) {\n            temp = transform_func(value[i]);\n            value[i] = temp;\n        }\n        write_func(value[i]);\n    }\n}",
            "called": [
                "FUN_080082d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "encrypt_data_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "check_values_08008a74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "xor_result",
                "bVar2": "is_zero",
                "bVar3": "less_than"
            },
            "code": "uint check_values_08008a74(uint value1, uint value2, uint value3, uint value4)\n{\n  uint xor_result;\n  bool is_zero;\n  bool less_than;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    xor_result = value2 ^ value4;\n    is_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      is_zero = value2 == value4;\n    }\n    less_than = -1 < (int)xor_result && value4 <= value2;\n    if (is_zero) {\n      less_than = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!less_than) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "check_values_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result",
                "FUN_08002f74": "get_data",
                "PTR_DAT_08003000": "data_pointer",
                "FUN_08003a74": "process_result"
            },
            "code": "void process_data_08002fd4() {\\n  int result;\\n  while ((result = get_data(), result != 0 || (PTR_DAT_08003000[1] == \"\\x03\"))) {\\n    process_result();\\n    if (*PTR_DAT_08003000 != \"\\0\") {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "process_data_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "data",
                "uVar1": "converted_data",
                "uVar2": "processed_data_1",
                "uVar3": "processed_data_2",
                "uVar4": "processed_data_3",
                "local_12": "data_length"
            },
            "code": "void process_data_08002408(undefined4 data)\n{\n    undefined2 converted_data;\n    undefined4 processed_data_1;\n    undefined4 processed_data_2;\n    undefined8 processed_data_3;\n    ushort data_length;\n\n    processed_data_1 = FUNC_08008eec(data, DAT_080024b8);\n    processed_data_3 = FUN_08008590(processed_data_1);\n    processed_data_3 = FUN_080094c0((int)processed_data_3, (int)((ulonglong)processed_data_3 >> 0x20));\n    data_length = FUN_08008bf0((int)processed_data_3, (int)((ulonglong)processed_data_3 >> 0x20));\n    FUN_08002fd4();\n    processed_data_1 = FUNC_08008eec(data, DAT_080024bc);\n    processed_data_2 = FUN_08008e44((uint)data_length * 0x32);\n    processed_data_1 = FUNC_08008cd8(processed_data_1, processed_data_2);\n    processed_data_3 = FUN_08008590(processed_data_1);\n    processed_data_3 = FUN_080094c0((int)processed_data_3, (int)((ulonglong)processed_data_3 >> 0x20));\n    converted_data = FUN_08008bf0((int)processed_data_3, (int)((ulonglong)processed_data_3 >> 0x20));\n    do_nothing_08002814(converted_data);\n    while ((data_length != 0 && (FUN_08003a74(), *PTR_DAT_080024c0 == '\\0')))\n    {\n        FUN_080002a0(0x32);\n        data_length = data_length - 1;\n    }\n    return;\n}",
            "called": [
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_08008e44",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "decode_data_08002a94",
                "puVar1": "current_byte_ptr",
                "puVar2": "decoded_data_ptr",
                "local_18": "decoded_data_ptr",
                "local_14": "prev_byte_ptr",
                "local_9": "current_byte_value",
                "PTR_DAT_08002af0": "DATA_START_POINTER",
                "PTR_DAT_08002af4": "DATA_BLOCK_POINTER",
                "PTR_DAT_08002af8": "DATA_END_POINTER",
                "FUN_08002896": "decode_byte",
                "FUN_080029d8": "decode_data_block"
            },
            "code": "void decode_data_08002a94(void)\n{\n  uint8_t *current_byte_ptr;\n  uint8_t *prev_byte_ptr;\n  uint8_t *decoded_data_ptr;\n  uint8_t current_byte_value;\n\n  current_byte_value = *PTR_DAT_08002af0;\n  decoded_data_ptr = NULL;\n  prev_byte_ptr = NULL;\n\n  while (current_byte_value != *PTR_DAT_08002af8) {\n    current_byte_value = decode_byte(current_byte_value);\n    prev_byte_ptr = decoded_data_ptr;\n    current_byte_ptr = PTR_DAT_08002af0 + (uint)current_byte_value * 0x40;\n    decode_data_08002a94_block(current_byte_ptr, decoded_data_ptr, prev_byte_ptr);\n    decoded_data_ptr = current_byte_ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "decode_data_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "update_data_structure_08003618",
                "param_1": "data",
                "PTR_DAT_08003698": "data_ptr",
                "PTR_DAT_08003694": "index_ptr",
                "uVar3": "value2",
                "uVar4": "value1",
                "puVar2": "data_ptr"
            },
            "code": "void update_data_structure_08003618(void* data)\n{\n    uint8_t index = *PTR_DAT_08003694;\n    uint32_t value1 = *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x20);\n    uint32_t value2 = calculate_value(data);\n    value2 = update_value(value1, value2);\n    uint32_t value3 = *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x10);\n    value3 = calculate_value(*(uint32_t*)value3);\n    value2 = update_value(value2, value3);\n    *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x20) = value2;\n    *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x10) = data;\n    *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x18) = 0;\n    *(uint32_t*)(PTR_DAT_08003698 + index * 0x40 + 0x1c) = 0;\n    PTR_DAT_08003698[index * 0x40 + 0x25] = 0;\n    PTR_DAT_08003698[index * 0x40 + 0x24] = 1;\n    perform_additional_operations();\n}\n",
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08002edc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "update_data_structure_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = FUN_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_data_08007d08",
                "puVar1": "data_pointer",
                "DAT_08007d9c": "data_array",
                "FUN_08007a10": "initialize_subsystem",
                "DAT_08007da4": "data_value1",
                "PTR_DAT_08007da0": "data_value2_pointer"
            },
            "code": "void initialize_data_08007d08(void)\n{\n    undefined4 *data_pointer;\n    data_pointer = DAT_08007d9c;\n    initialize_subsystem(DAT_08007d9c);\n    *data_pointer = 0x80;\n    data_pointer[1] = 0;\n    data_pointer[2] = 0;\n    data_pointer[3] = 0;\n    data_pointer[4] = 0;\n    data_pointer[6] = 0x6800;\n    data_pointer[7] = 0;\n    data_pointer[8] = 0;\n    data_pointer[9] = 0;\n    data_pointer[10] = (uint)((ulonglong)DAT_08007da4 * (ulonglong)*PTR_DAT_08007da0 >> 0x35) - 1;\n    data_pointer[0xb] = 199;\n    data_pointer[0xd] = 0;\n    data_pointer[0xe] = 100;\n    data_pointer[0xf] = 0;\n    data_pointer[0x10] = 0;\n    data_pointer[0x12] = 0;\n    data_pointer[0x13] = 0;\n    data_pointer[5] = 1;\n    return;\n}",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "copy_param2_to_param1_080091fc",
                "param_1": "destination",
                "param_2": "source",
                "FUN_08009204": "memcpy",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void copy_param2_to_param1_080091fc(void* destination, const void* source)\n{\n  memcpy(destination, source, sizeof(destination));\n  return;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "copy_param2_to_param1_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0",
                "PTR_DAT_080058f0": "data_ptr",
                "PTR_DAT_080058fc": "data_array",
                "PTR_DAT_080058f4": "data_array_2",
                "DAT_080058f8": "data_constant"
            },
            "code": "void initialize_data_080058a0()\n{\n    int* PTR_DAT_080058f0 = (int*)PTR_DAT_080058f0;\n    if (*PTR_DAT_080058f0 == 0) {\n        PTR_DAT_080058fc[1] = 0;\n    }\n    else {\n        int offset = *(int*)(*PTR_DAT_080058f0 + 0x10) - *(int*)(PTR_DAT_080058f4 + 0x10);\n        FUN_08003618(offset);\n        *(undefined4*)(PTR_DAT_080058f4 + 0x1c) = 0;\n        FUN_08005324(*(undefined4*)(PTR_DAT_080058f4 + 0x1c));\n        *(undefined4*)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n        *(undefined4*)(PTR_DAT_080058f4 + 0x10) = 0;\n        PTR_DAT_080058fc[1] = 2;\n    }\n    return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "initialize_data_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "string_to_print",
                "local_c": "current_char",
                "*local_c": "*current_char",
                "FUN_08008250": "print_character"
            },
            "code": "void print_string_080036c6(char *string_to_print)\n{\n  char *current_char;\n  current_char = string_to_print;\n  while (*current_char != '\\0') {\n    print_character(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004228",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "set_permissions_08008190",
                "puVar1": "permissions",
                "DAT_08008240": "permissions"
            },
            "code": "void set_permissions_08008190() {\n  uint *DAT_08008240 = DAT_08008240;\n  set_permissions_08008190_helper(DAT_08008240);\n  DAT_08008240[3] &= 0xffffdfff;\n  DAT_08008240[3] = (DAT_08008240[3] & 0xffff400c) | 0xc;\n  DAT_08008240[4] &= 0xffff8090;\n  DAT_08008240[5] &= 0xfffff000;\n  *DAT_08008240 &= 0xfffffc00;\n  set_permissions_08008190_helper(DAT_08008240, 0x1c200);\n  DAT_08008240[6] = DAT_08008240[6];\n  DAT_08008240[3] |= 0x2000;\n  return;\n}",
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_permissions_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "check_and_call_functions_080074c8",
                "param_1": "flags",
                "FUN_08007402": "call_function_1",
                "PTR_DAT_08007518": "PTR_DATA_1",
                "FUN_0800195c": "call_function_2",
                "PTR_DAT_0800751c": "PTR_DATA_2",
                "FUN_08003a18": "call_function_3"
            },
            "code": "void check_and_call_functions_080074c8(uint flags){\n  if ((flags & 0x01) != 0) {\n    call_function_1(0x3e);\n  }\n  if ((*(int *)PTR_DAT_08007518 != 0) && ((flags & 0x1e) != 0)) {\n    call_function_2();\n  }\n  if ((*(int *)PTR_DAT_0800751c != 0) && ((flags & 0x80) != 0)) {\n    call_function_3(flags);\n  }\n  return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_and_call_functions_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "write_bytes_to_memory_0800b430",
                "param_1": "memory_address",
                "param_2": "byte_value",
                "param_3": "num_bytes",
                "puVar1": "current_address",
                "puVar2": "next_address",
                "uVar3": "remaining_bytes",
                "uVar4": "value_to_write",
                "bVar5": "is_last_byte_aligned"
            },
            "code": "void write_bytes_to_memory_0800b430(uint32_t *memory_address, uint8_t byte_value, uint32_t num_bytes) {\n  uint32_t *current_address;\n  uint32_t i;\n  uint32_t value_to_write;\n  bool is_aligned = ((uint32_t)memory_address & 3) == 0;\n  \n  if (!is_aligned) {\n    num_bytes--;\n    current_address = memory_address;\n    if (num_bytes == 0) {\n      return;\n    }\n    while (true) {\n      memory_address = (uint32_t *)((int)current_address + 1);\n      *(uint8_t *)current_address = byte_value;\n      num_bytes--;\n      if (((uint32_t)memory_address & 3) == 0) {\n        break;\n      }\n      current_address = memory_address;\n      if (num_bytes == 0) {\n        return;\n      }\n    }\n  }\n  if (num_bytes >= 16) {\n    value_to_write = (byte_value << 24) | (byte_value << 16) | (byte_value << 8) | byte_value;\n    if (num_bytes > 15) {\n      current_address = memory_address + 4;\n      do {\n        current_address[-4] = value_to_write;\n        current_address[-3] = value_to_write;\n        current_address[-2] = value_to_write;\n        current_address[-1] = value_to_write;\n        current_address = current_address + 4;\n      } while (current_address != (uint32_t *)((int)memory_address + (num_bytes - 16 & 0xfffffff0) + 0x20));\n      num_bytes &= 0xf;\n      memory_address = memory_address + ((num_bytes - 16 >> 4) + 1) * 4;\n      if (num_bytes == 0) {\n        return;\n      }\n    }\n    current_address = (uint32_t *)((num_bytes - 4 & 0xfffffffc) + 4 + (int)memory_address);\n    do {\n      *memory_address++ = value_to_write;\n    } while (current_address != memory_address);\n    num_bytes &= 3;\n  }\n  if (num_bytes != 0) {\n    current_address = memory_address;\n    do {\n      *(uint8_t *)current_address = byte_value;\n      current_address = (uint32_t *)((int)current_address + 1);\n    } while ((uint32_t *)(num_bytes + (int)memory_address) != current_address);\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_08001994",
                "FUN_080079c0",
                "FUN_080005b4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_080024c4",
                "FUN_08002f24",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "write_bytes_to_memory_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "printErrorMessage_08004030",
                "param_1": "errorCode"
            },
            "code": "void printErrorMessage_08004030(char errorCode)\n{\n    if (errorCode == '\\0') {\n        printMessage(PTR_DAT_08004108);\n    }\n    else {\n        printMessage(PTR_s_error__0800410c);\n        switch(errorCode) {\n            case '\\x01':\n                printMessage(PTR_s_Bad_number_format_08004110);\n                break;\n            case '\\x02':\n                printMessage(PTR_s_Expected_command_letter_08004114);\n                break;\n            case '\\x03':\n                printMessage(PTR_s_Unsupported_statement_08004118);\n                break;\n            case '\\x04':\n                printMessage(PTR_s_Invalid_radius_0800411c);\n                break;\n            case '\\x05':\n                printMessage(PTR_s_Modal_group_violation_08004120);\n                break;\n            case '\\x06':\n                printMessage(PTR_s_Invalid_statement_08004124);\n                break;\n            case '\\a':\n                printMessage(PTR_s_Setting_disabled_08004128);\n                break;\n            case '\\b':\n                printMessage(PTR_s_Value___0_0_0800412c);\n                break;\n            case '\\t':\n                printMessage(PTR_s_Value___3_usec_08004130);\n                break;\n            case '\\n':\n                printMessage(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n                break;\n            case '\\v':\n                printMessage(PTR_s_Busy_or_queued_08004138);\n                break;\n            case '\\f':\n                printMessage(PTR_s_Alarm_lock_0800413c);\n                break;\n            case '\\r':\n                printMessage(PTR_s_Line_overflow_08004140);\n        }\n        printMessage(PTR_DAT_08004144);\n    }\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "printErrorMessage_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "check_if_threshold_exceeded_08005360",
                "uVar1": "threshold",
                "uVar2": "sum",
                "total": "total",
                "current": "current"
            },
            "code": "bool check_if_threshold_exceeded_08005360(void)\n{\n    int *total = PTR_DAT_08005398 + 0x18;\n    int *current = PTR_DAT_08005398 + 0x14;\n    *total += *current;\n    uint threshold = DAT_0800539c;\n    uint sum = *total;\n    if (threshold < sum)\n    {\n        *total -= 420000;\n    }\n    return threshold < sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_if_threshold_exceeded_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "clear_pointers_08003980",
                "PTR_DAT_08003998": "ptr_data_1",
                "PTR_DAT_0800399c": "ptr_data_2"
            },
            "code": "void clear_pointers_08003980(void)\n{\n  *PTR_DAT_08003998 = 0;\n  *PTR_DAT_0800399c = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "clear_pointers_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "convert_char_to_int_08006de0",
                "param_1": "input_char",
                "uVar1": "converted_int",
                "FUN_08006a18": "convert_char_to_int_helper"
            },
            "code": "int convert_char_to_int_08006de0(char input_char)\n{\n  int converted_int;\n  converted_int = convert_char_to_int_08006de0_helper((int)input_char);\n  return converted_int;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "main_08007540",
                "FUN_080059b4": "initialize_graphics",
                "FUN_08007436": "load_assets",
                "FUN_0800778c": "play_music",
                "FUN_08007e08": "show_title_screen",
                "FUN_080079c0": "start_game",
                "FUN_08008190": "cleanup",
                "FUN_08005984": "set_difficulty",
                "FUN_08001ddc": "initialize_game_data"
            },
            "code": "int main_08007540(){\n                      initialize_graphics();\n                      load_assets();\n                      play_music();\n                      show_title_screen();\n                      start_game();\n                      cleanup();\n                      return 0;\n                  }",
            "called": [
                "FUN_080079c0",
                "FUN_08008190",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08007436",
                "FUN_08005984",
                "FUN_080059b4",
                "FUN_08001ddc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "main_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_param_080052dc",
                "param_1": "new_param",
                "DAT_08005308": "data_ptr",
                "PTR_0800531c": "unused_ptr"
            },
            "code": "void set_param_080052dc(uint new_param)\n{\n  uint* ptr = (uint*)(DAT_08005308 + 0x14);\n  *ptr = new_param | (*ptr & 0xfffff55f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "set_param_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_value_080064ec",
                "DAT_0800661c": "ptr_data_1",
                "DAT_08006620": "ptr_data_2",
                "DAT_08006624": "ptr_data_3",
                "count_leading_zeroes": "count_leading_zeros",
                "uVar1": "bitmask",
                "uVar2": "bitmask2",
                "local_c": "result",
                "bits_to_shift": "leading_zeros",
                "numerator": "mask"
            },
            "code": "uint calculate_value_080064ec(void)\n{\n  uint bitmask;\n  uint divisor;\n  uint leading_zeros;\n  uint result;\n  \n  bitmask = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (bitmask == 8) {\n    uint bits_to_shift;\n    uint numerator;\n    bitmask = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    leading_zeros = count_leading_zeroes(0x200);\n    bits_to_shift = leading_zeros & 0xff;\n    numerator = *(uint *)(DAT_0800661c + 4) & 0x400000;\n    if ((numerator >> bits_to_shift) == 0) {\n      leading_zeros = count_leading_zeroes(0x3fe0000);\n      divisor = DAT_08006620 / bitmask;\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (leading_zeros & 0xff)) * divisor;\n    }\n    else {\n      leading_zeros = count_leading_zeroes(0x3fe0000);\n      divisor = DAT_08006624 / bitmask;\n      result = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (leading_zeros & 0xff)) * divisor;\n    }\n    leading_zeros = count_leading_zeroes(0xc000);\n    result /= (((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (leading_zeros & 0xff)) + 1) * 2;\n  }\n  else {\n    if (bitmask < 9) {\n      if (bitmask == 0) {\n        result = DAT_08006620;\n      }\n      else if (bitmask == 4) {\n        result = DAT_08006624;\n      }\n      else {\n        result = DAT_08006620;\n      }\n    }\n    else {\n      result = DAT_08006620;\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_value_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "get_bits_08006ba0",
                "param_1": "bit_position",
                "param_2": "num_bits",
                "param_3": "bitfield",
                "uVar1": "num_bits_to_set",
                "bits_to_set": "bits_to_set",
                "shifted_bits": "shifted_bits"
            },
            "code": "uint get_bits_08006ba0(uint bit_position, uint num_bits, uint bitfield) {\n    uint num_bits_to_set = (bit_position + num_bits > 7) ? (7 - bit_position) : num_bits;\n    uint bits_to_set = (1 << num_bits_to_set) - 1;\n    uint shifted_bits = ((bits_to_set & bitfield) << bit_position);\n    return shifted_bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "get_bits_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "validate_string_080003ec",
                "param_1": "str",
                "param_2": "length",
                "param_3": "checksum",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_ptr",
                "local_9": "calculated_checksum",
                "PTR_DAT_08000470": "some_pointer"
            },
            "code": "bool validate_string_080003ec(char *str, int length, int checksum) {\n  char current_char;\n  uint8_t calculated_checksum = 0;\n  int remaining_length = length;\n  char *current_ptr = str;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initialize();\n    remaining_length = length;\n    current_ptr = str;\n  }\n  for (; remaining_length != 0; remaining_length--) {\n    current_char = get_next_char(current_ptr);\n    calculated_checksum = current_char + (calculated_checksum != 0);\n    *current_ptr = current_char;\n    current_ptr++;\n  }\n  uint8_t expected_checksum = get_next_char(current_ptr);\n  return calculated_checksum == expected_checksum;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d2c",
                "FUN_08004d7c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "validate_string_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "replace_null_with_0x12_08002896",
                "param_1": "character",
                "local_9": "new_character"
            },
            "code": "char replace_null_with_0x12_08002896(char character) {\n  char new_character = character;\n  if (character == '\\0') {\n    new_character = '\\x12';\n  }\n  return new_character - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "replace_null_with_0x12_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = FUN_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "concatenate_bytes_080001ac",
                "param_1": "first_byte",
                "param_2": "second_byte",
                "DAT_080001bc": "global_flag",
                "PTR_FUN_080001c4": "global_first_byte",
                "PTR_DAT_080001c0": "global_second_byte"
            },
            "code": "uint64_t concatenate_bytes_080001ac(uint8_t *first_byte, uint8_t *second_byte) {\n  if (DAT_080001bc != 0) {\n    first_byte = PTR_FUN_080001c4;\n    second_byte = PTR_DAT_080001c0;\n  }\n  return ((uint64_t)second_byte << 32) | (uint64_t)first_byte;\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "concatenate_bytes_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "print_eight_bytes_at_address_08003740",
                "param_1": "address"
            },
            "code": "void print_eight_bytes_at_address_08003740(void* address){\n    print_bytes_at_address(address, 8);\n    return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "print_eight_bytes_at_address_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_params_and_return_08000478",
                "param_1": "parameter_1",
                "param_2": "parameter_2",
                "param_3": "parameter_3"
            },
            "code": "void set_params_and_return_08000478(void* parameter_1, void* parameter_2, void* parameter_3) {\n  PTR_DAT_080004a8[25] = parameter_1;\n  PTR_DAT_080004a8[26] = parameter_2;\n  PTR_DAT_080004a8[27] = parameter_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "set_params_and_return_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "print_char_08006d2e",
                "param_1": "input_char",
                "FUN_080069b4": "print_ascii_code"
            },
            "code": "void print_char_08006d2e(char input_char) {\n  print_ascii_code((int)input_char);\n  return;\n}",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "print_char_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "waitForFlagToSet_08007e1c",
                "param_1": "flag",
                "DAT_08007e48": "statusFlag"
            },
            "code": "void waitForFlagToSet_08007e1c(byte flag){\n  while ((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)flag;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": false,
            "current_name": "waitForFlagToSet_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "calculateResultOfEquation_0800adf0",
                "param_1": "inputValue",
                "param_2": "inputSize",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "iVar1": "checkResult",
                "uVar2": "result1",
                "uVar3": "result2",
                "uVar4": "result3",
                "uVar5": "result4",
                "uVar6": "result5",
                "uVar7": "intermediateResult1",
                "uVar8": "intermediateResult2",
                "FUNC_08008640": "multiplyTwoValues",
                "FUN_08008ba0": "checkInputValue",
                "DAT_0800af40": "GLOBAL_VARIABLE_1",
                "DAT_0800af44": "GLOBAL_VARIABLE_2",
                "DAT_0800af48": "GLOBAL_VARIABLE_3",
                "DAT_0800af4c": "GLOBAL_VARIABLE_4",
                "DAT_0800af50": "GLOBAL_VARIABLE_5",
                "DAT_0800af54": "GLOBAL_VARIABLE_6",
                "DAT_0800af58": "GLOBAL_VARIABLE_7",
                "DAT_0800af5c": "GLOBAL_VARIABLE_8",
                "DAT_0800af60": "GLOBAL_VARIABLE_9",
                "DAT_0800af64": "GLOBAL_VARIABLE_10",
                "DAT_0800af68": "GLOBAL_VARIABLE_11",
                "DAT_0800af6c": "GLOBAL_VARIABLE_12",
                "DAT_0800af70": "GLOBAL_VARIABLE_13"
            },
            "code": "undefined4 calculateResultOfEquation_0800adf0(undefined4 inputValue, uint inputSize, undefined4 input1, undefined4 input2, int input3) {\n  int iVar;\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined8 intermediateResult1;\n  undefined8 intermediateResult2;\n  \n  if (((inputSize & 0x7fffffff) < 0x3e400000) && (iVar = checkInputValue(), iVar == 0)) {\n    return inputValue;\n  }\n  intermediateResult1 = multiplyTwoValues(inputValue, inputSize, inputValue);\n  result2 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  result1 = (undefined4)intermediateResult1;\n  intermediateResult1 = multiplyTwoValues(inputValue, inputSize, result1, result2);\n  result3 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  result4 = (undefined4)intermediateResult1;\n  intermediateResult1 = multiplyTwoValues(result1, result2, DAT_0800af40, DAT_0800af44);\n  intermediateResult1 = function1((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800af48,DAT_0800af4c);\n  intermediateResult1 = multiplyTwoValues((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),result1,result2);\n  intermediateResult1 = function2((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800af50,DAT_0800af54);\n  intermediateResult1 = multiplyTwoValues((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),result1,result2);\n  intermediateResult1 = function1((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800af58,DAT_0800af5c);\n  intermediateResult1 = multiplyTwoValues((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),result1,result2);\n  intermediateResult1 = function2((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800af60,DAT_0800af64);\n  result6 = (undefined4)((ulonglong)intermediateResult1 >> 0x20);\n  if (input3 != 0) {\n    intermediateResult2 = multiplyTwoValues(input1,input2,0,DAT_0800af68);\n    intermediateResult1 = multiplyTwoValues(result4,result3,(int)intermediateResult1,result6);\n    intermediateResult1 = function1((int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20),(int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20));\n    intermediateResult1 = multiplyTwoValues((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),result1,result2);\n    intermediateResult1 = function1((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),input1,input2);\n    intermediateResult2 = multiplyTwoValues(result4,result3,DAT_0800af6c,DAT_0800af70);\n    intermediateResult1 = function2((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),(int)intermediateResult2,(int)((ulonglong)intermediateResult2 >> 0x20));\n    result1 = function1(inputValue,inputSize,(int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20));\n    return result1;\n  }\n  intermediateResult1 = multiplyTwoValues(result1,result2,(int)intermediateResult1,result6);\n  intermediateResult1 = function1((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),DAT_0800af6c,DAT_0800af70);\n  intermediateResult1 = multiplyTwoValues((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),result4,result3);\n  result1 = function2((int)intermediateResult1,(int)((ulonglong)intermediateResult1 >> 0x20),inputValue,inputSize);\n  return result1;\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "calculateResultOfEquation_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "PTR_DAT_08003b90": "data_buffer",
                "PTR_DAT_08003b94": "flag_buffer",
                "handle_error": "handle_error",
                "set_flag": "set_flag",
                "perform_action_1": "perform_action_1",
                "perform_action_2": "perform_action_2",
                "perform_action_3": "perform_action_3",
                "perform_action_4": "perform_action_4"
            },
            "code": "void process_data_08003a74(void)\\n{\\n  byte data_byte;\\n  \\n  if (PTR_DAT_08003b90[2] != \"\\0\") {\\n    data_byte = PTR_DAT_08003b90[2];\\n    if ((data_byte & 0x60) != 0) {\\n      PTR_DAT_08003b90[1] = 6;\\n      if ((data_byte & 0x40) == 0) {\\n        handle_error(0xfffffffe);\\n      }\\n      else {\\n        handle_error(0xffffffff);\\n        set_flag(1);\\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xef;\\n        do {\\n        } while ((PTR_DAT_08003b90[2] & 0x10) == 0);\\n      }\\n      PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0x9f;\\n    }\\n    if ((data_byte & 0x10) == 0) {\\n      if ((data_byte & 1) != 0) {\\n        perform_action_1();\\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfe;\\n      }\\n      if ((data_byte & 8) != 0) {\\n        perform_action_2();\\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xf7;\\n      }\\n      if ((data_byte & 4) != 0) {\\n        perform_action_3();\\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfb;\\n      }\\n      if ((data_byte & 2) != 0) {\\n        perform_action_4();\\n        if ((PTR_DAT_08003b94[0x28] & 2) != 0) {\\n          PTR_DAT_08003b90[0x10] = 1;\\n        }\\n        PTR_DAT_08003b90[2] = PTR_DAT_08003b90[2] & 0xfd;\\n      }\\n    }\\n    else {\\n      *PTR_DAT_08003b90 = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_080058a0",
                "FUN_08004940",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002fd4",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "process_byte_and_number_08006b00",
                "param_1": "input_byte",
                "param_2": "input_number",
                "DAT_08006b4c": "data_ptr_1",
                "DAT_08006b50": "data_ptr_2"
            },
            "code": "void process_byte_and_number_08006b00(byte input_byte, uint input_number) {\n  if (input_byte < 0) {\n    *(char *)((input_byte & 0xf) + DAT_08006b4c + 0x14) = (char)((input_number & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)input_byte + DAT_08006b50 + 0x300) = (char)((input_number & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "process_byte_and_number_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "initialize_if_not_initialized_0800b4d0",
                "DAT_0800b4dc": "is_initialized",
                "FUN_0800b524": "call_initialize_function",
                "PTR_LAB_0800b4f0_1_0800b4e0": "initialization_function_pointer"
            },
            "code": "void initialize_if_not_initialized_0800b4d0(void)\n{\n  if (DAT_0800b4dc != 0) {\n    call_initialize_function(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "initialize_if_not_initialized_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculateValue_08007f54",
                "param_1": "value1",
                "param_2": "value2",
                "lVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "uVar4": "temp1",
                "PTR_DAT_08008184": "pointerData1",
                "PTR_DAT_08008188": "pointerData2",
                "DAT_0800818c": "data"
            },
            "code": "void calculateValue_08007f54(int value1, int value2)\n{\n    long long result1;\n    int result2;\n    int result3;\n    uint32_t mask = 0x8000;\n    if ((*(uint32_t *)(value1 + 0xc) & mask) == 0) {\n        if ((value1 != PTR_DAT_08008184) && (value1 != PTR_DAT_08008188)) {\n            uint64_t temp1 = (uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)FUN_08006680() * 0x19) / ((uint64_t)value2 << 2));\n            result2 = FUN_08006680((int)temp1, (int)((uint64_t)temp1 >> 0x20), (int)temp1);\n            result3 = FUN_08006680();\n            *(uint32_t *)(value1 + 8) = ((uint32_t)(temp1 >> 0x25) << 4) | ((uint32_t)(DAT_0800818c * ((uint64_t)((uint32_t)((int)result2 * 0x19) / ((uint32_t)value2 << 2)) + ((uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)result3 * 0x19) / ((uint64_t)(uint32_t)(value2 << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n            return;\n        }\n        uint64_t temp1 = (uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)FUN_080066cc() * 0x19) / ((uint64_t)value2 << 2));\n        result2 = FUN_080066cc((int)temp1, (int)((uint64_t)temp1 >> 0x20), (int)temp1);\n        result3 = FUN_080066cc();\n        *(uint32_t *)(value1 + 8) = ((uint32_t)(temp1 >> 0x25) << 4) | ((uint32_t)(DAT_0800818c * ((uint64_t)((uint32_t)((int)result2 * 0x19) / ((uint32_t)value2 << 2)) + ((uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)result3 * 0x19) / ((uint64_t)(uint32_t)(value2 << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    }\n    else {\n        if ((value1 != PTR_DAT_08008184) && (value1 != PTR_DAT_08008188)) {\n            uint64_t temp1 = (uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)FUN_08006680() * 0x19) / ((uint64_t)value2 << 1));\n            result2 = FUN_08006680((int)temp1, (int)((uint64_t)temp1 >> 0x20), (int)temp1);\n            result3 = FUN_08006680();\n            *(uint32_t *)(value1 + 8) = ((uint32_t)(temp1 >> 0x25) << 4) | ((uint32_t)(DAT_0800818c * ((uint64_t)((uint32_t)((int)result2 * 0x19) / ((uint32_t)value2 << 1)) + ((uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)result3 * 0x19) / ((uint64_t)(uint32_t)(value2 << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n            return;\n        }\n        uint64_t temp1 = (uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)FUN_080066cc() * 0x19) / ((uint64_t)value2 << 1));\n        result2 = FUN_080066cc((int)temp1, (int)((uint64_t)temp1 >> 0x20), (int)temp1);\n        result3 = FUN_080066cc();\n        *(uint32_t *)(value1 + 8) = ((uint32_t)(temp1 >> 0x25) << 4) | ((uint32_t)(DAT_0800818c * ((uint64_t)((uint32_t)((int)result2 * 0x19) / ((uint32_t)value2 << 1)) + ((uint64_t)DAT_0800818c * ((uint64_t)(uint32_t)((int)result3 * 0x19) / ((uint64_t)(uint32_t)(value2 << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n    }\n}",
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculateValue_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "handle_input_08003b98",
                "param_1": "input",
                "bVar1": "first_char",
                "iVar2": "index",
                "uVar3": "result",
                "uVar4": "output",
                "uVar5": "temp",
                "local_14": "local_var_1",
                "local_10": "local_var_2",
                "local_a": "local_var_3",
                "local_9": "local_var_4"
            },
            "code": "uint handle_input_08003b98(char *input)\n{\n    byte first_char = input[0];\n    int index;\n    undefined4 result;\n    uint output;\n    undefined8 temp;\n    undefined4 local_var_1;\n    undefined4 local_var_2;\n    byte local_var_3;\n    byte local_var_4;\n    if (first_char != '$') {\n        output = parse_input(input);\n        return output;\n    }\n    local_var_3 = 1;\n    local_var_4 = '\\0';\n    byte second_char = input[1];\n    if (second_char == 0) {\n        handle_error();\n        return 0;\n    }\n    if ((0x58 < second_char) || (second_char < 0x23)) {\n        goto switchD_08003bdc_caseD_25;\n    }\n    switch(second_char) {\n        case 0x23:\n            local_var_3 = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_23();\n            break;\n        case 0x24:\n            local_var_3 = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_24();\n            break;\n        case 0x43:\n            local_var_3 = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            if (PTR_DAT_08003f2c[1] == '\\a') {\n                handle_case_43_a();\n                handle_case_43_b(5);\n            }\n            else {\n                if (PTR_DAT_08003f2c[1] != '\\0') {\n                    return 0xb;\n                }\n                PTR_DAT_08003f2c[1] = 7;\n                handle_case_43_b(4);\n            }\n            break;\n        case 0x47:\n            local_var_3 = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            handle_case_47();\n            break;\n        case 0x48:\n            if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n                return 7;\n            }\n            if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n                return 0xb;\n            }\n            handle_case_48_a();\n            if (*PTR_DAT_08003f2c == '\\0') {\n                handle_case_48_b();\n            }\n            break;\n        case 0x4e:\n            local_var_3 = 2;\n            if (input[2] == '\\0') {\n                for (local_var_4 = 0; local_var_4 < 2; local_var_4 = local_var_4 + 1) {\n                    index = handle_case_4e(local_var_4, input);\n                    if (index == 0) {\n                        handle_case_4e_a(10);\n                    }\n                    else {\n                        handle_case_4e_b(local_var_4, input);\n                    }\n                }\n                return 0;\n            }\n            local_var_4 = '\\x01';\n        default:\nswitchD_08003bdc_caseD_25:\n            index = parse_input(input, &local_var_3, &local_var_2);\n            if (index == 0) {\n                return 1;\n            }\n            byte equals_char = input[local_var_3];\n            local_var_3 += 1;\n            if (equals_char != '=') {\n                return 3;\n            }\n            if (local_var_4 == '\\0') {\n                index = parse_input(input, &local_var_3, &local_var_1);\n                if (index == 0) {\n                    return 1;\n                }\n                byte end_char = input[local_var_3];\n                if (end_char == '\\0') {\n                    result = convert_to_int(local_var_2);\n                    output = process_input(result, local_var_1);\n                    return output;\n                }\n                return 3;\n            }\n            do {\n                input[(uint)local_var_3 - (uint)local_var_3] = input[local_var_3];\n                output = (uint)local_var_3;\n                local_var_3 += 1;\n            } while (input[output] != '\\0');\n            local_var_4 = local_var_3;\n            result = parse_input(input);\n            if (result != 0) {\n                return (uint)result;\n            }\n            temp = convert_to_long(local_var_2);\n            temp = add_long(temp, shift_right_long(temp, 0x20));\n            local_var_4 = convert_to_int(multiply_long(temp, 0x2f1));\n            handle_case_58(local_var_4);\n            break;\n        case 0x58:\n            local_var_3 = 2;\n            if (input[2] != '\\0') {\n                return 3;\n            }\n            if (PTR_DAT_08003f2c[1] == '\\x06') {\n                handle_case_58_a(3);\n                PTR_DAT_08003f2c[1] = 0;\n            }\n    }\n    return 0;\n}",
            "called": [
                "FUN_080046d0",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080025e8",
                "FUN_08004250",
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080041a0",
                "FUN_08004900",
                "FUN_080044e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "handle_input_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "initialize_080024c4",
                "PTR_DAT_080025d8": "data",
                "PTR_DAT_080025dc": "data2",
                "PTR_DAT_080025e0": "data3",
                "PTR_DAT_080025e4": "data4",
                "FUN_08001d4c": "init1",
                "FUN_08003a74": "init2",
                "FUN_0800b430": "func1",
                "FUN_0800283a": "func2",
                "FUN_08008e44": "func3",
                "FUNC_08008eec": "func4",
                "FUN_08001e98": "func5",
                "FUN_0800585c": "func6",
                "FUN_08002fd4": "func7"
            },
            "code": "void initialize_080024c4()\n{\n    int flag1;\n    int flag2;\n    int flag3;\n    char isNegative1;\n    char isNegative2;\n    char isNegative3;\n\n    PTR_DAT_080025d8[1] = 5;\n    *(int *)PTR_DAT_080025d8[2] = 0;\n    init1();\n    init2();\n    if (*PTR_DAT_080025d8 == '\\0') {\n        func1(PTR_DAT_080025d8[3], 0, 0xc);\n        func2();\n        PTR_DAT_080025d8[1] = 0;\n        if ((*(unsigned short *)(PTR_DAT_080025d8[4] + 0x2a) & 0x20) == 0) {\n            isNegative1 = -1;\n        }\n        else {\n            isNegative1 = '\\x01';\n        }\n        if ((*(unsigned short *)(PTR_DAT_080025d8[4] + 0x2a) & 0x80) == 0) {\n            isNegative2 = -1;\n        }\n        else {\n            isNegative2 = '\\x01';\n        }\n        if ((*(unsigned short *)(PTR_DAT_080025d8[4] + 0x2a) & 0x200) == 0) {\n            isNegative3 = -1;\n        }\n        else {\n            isNegative3 = '\\x01';\n        }\n        flag1 = func3((int)isNegative1);\n        flag1 = func4(flag1, *(int *)(PTR_DAT_080025d8[4] + 0x38));\n        flag2 = func3((int)isNegative2);\n        flag2 = func4(flag2, *(int *)(PTR_DAT_080025d8[4] + 0x38));\n        flag3 = func3((int)isNegative3);\n        flag3 = func4(flag3, *(int *)(PTR_DAT_080025d8[4] + 0x38));\n        func5(flag1, flag2, flag3, *(int *)(PTR_DAT_080025d8[4] + 0x30), 0);\n        func6();\n        func7();\n        func2();\n        if ((PTR_DAT_080025d8[4][0x28] & 8) != 0) {\n            *(int *)PTR_DAT_080025d8[2] = 1;\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_0800585c",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "check_and_update_data_08002f40",
                "*PTR_DAT_08002f6c": "*data_pointer_1",
                "*PTR_DAT_08002f70": "*data_pointer_2",
                "uVar1": "new_value",
                "FUN_08002870": "calculate_new_value"
            },
            "code": "void check_and_update_data_08002f40(void)\n{\n  int current_value = *PTR_DAT_08002f6c;\n  int expected_value = *PTR_DAT_08002f70;\n  if (current_value != expected_value) {\n    int new_value = calculate_new_value(expected_value);\n    *PTR_DAT_08002f70 = new_value;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "check_and_update_data_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08004250",
                "FUN_08001994",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08002908",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "set_flag_if_not_set_080025e8"
            },
            "code": "void set_flag_if_not_set_080025e8()\n{\n  int flag = PTR_DAT_08002634[2];\n  int condition = flag & 0x10;\n  if (condition == 0) {\n    flag |= 0x10;\n    PTR_DAT_08002634[2] = flag;\n    FUN_08005250();\n    FUN_08000210();\n    int byte_val = (byte)PTR_DAT_08002634[1];\n    if (byte_val - 3 < 3) {\n      flag |= 0x20;\n      PTR_DAT_08002634[2] = flag;\n      FUN_080057e4();\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_080057e4",
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "imported": false,
            "current_name": "set_flag_if_not_set_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_and_return_08005250",
                "do_nothing_08005214": "do_nothing"
            },
            "code": "void do_nothing_and_return_08005250(void)\n{\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "code": "void infinite_loop_08007430(void)\n{\n    while(true)\n    {\n        // WARNING: Do nothing block with infinite loop\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "infinite_loop_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_08002638",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "initialize_data_structures_08007436",
                "local_4c": "var_1",
                "local_48": "var_2",
                "local_34": "var_3",
                "local_30": "var_4",
                "local_2c": "var_5",
                "local_28": "var_6",
                "local_24": "var_7",
                "local_20": "var_8",
                "local_1c": "var_9",
                "local_18": "var_10",
                "local_14": "var_11",
                "local_10": "var_12",
                "local_c": "var_13",
                "DAT_080074c0": "ptr_1",
                "DAT_080074c4": "ptr_2"
            },
            "code": "void initialize_data_structures_08007436(void)\n{\n  int status;\n  unsigned int *DAT_080074c0 = (unsigned int *)(DAT_080074c0 + 0x40);\n  unsigned int *DAT_080074c4 = (unsigned int *)DAT_080074c4;\n  unsigned int var_1 = 1;\n  unsigned int var_2 = 1;\n  unsigned int var_3 = 2;\n  unsigned int var_4 = 0x400000;\n  unsigned int var_5 = 8;\n  unsigned int var_6 = 0x150;\n  unsigned int var_7 = 2;\n  unsigned int var_8 = 7;\n  status = FUNC_08005cec(&var_1);\n  if (status != 0) {\n    handle_error();\n  }\n  unsigned int var_9 = 0xf;\n  unsigned int var_10 = 2;\n  unsigned int var_11 = 0;\n  unsigned int var_12 = 0x1400;\n  unsigned int var_13 = 0x1000;\n  status = FUNC_0800618c(&var_9, 5);\n  if (status != 0) {\n    handle_error();\n  }\n  return;\n}",
            "called": [
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_structures_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_data_08005814",
                "PTR_DAT_08005834": "data_buffer",
                "FUN_0800b430": "clear_data_buffer",
                "FUN_08005324": "set_data_size",
                "PTR_DAT_08005838": "data_value"
            },
            "code": "void initialize_data_08005814(void)\n{\n  clear_PTR_DAT_08005834();\n  set_data_size(36);\n  set_PTR_DAT_08005838(0);\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "set_data_08005bdc",
                "param_1": "data_index",
                "param_2": "value",
                "DAT_08005c28": "data_array_1",
                "DAT_08005c2c": "data_array_2"
            },
            "code": "void set_data_08005bdc(byte data_index, uint value) {\n  if (data_index < 0) {\n    *(char *)((data_index & 0xf) + DAT_08005c28 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)data_index + DAT_08005c2c + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "set_data_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "set_data_buffer_to_0xff_and_set_flag_080002f0",
                "PTR_DAT_08000308": "PTR_DATA_BUFFER",
                "PTR_DAT_0800030c": "PTR_FLAG"
            },
            "code": "void set_data_buffer_to_0xff_and_set_flag_080002f0() {\n  set_data_buffer(PTR_DAT_08000308, 0xff, 4);\n  *(uint32_t *)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "imported": false,
            "current_name": "set_data_buffer_to_0xff_and_set_flag_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "update_data_0800778c",
                "local_24": "bit_shift",
                "local_20": "data_1",
                "local_1c": "data_2",
                "local_18": "data_3",
                "local_14": "data_4",
                "local_10": "data_ptr",
                "local_c": "loop_counter"
            },
            "code": "void update_data_0800778c()\n{\n  int bit_shift;\n  uint bit_mask;\n  uint data_1;\n  uint data_2;\n  uint data_3;\n  uint data_4;\n  uint *data_ptr;\n  uint loop_counter;\n  for (loop_counter = 0; loop_counter < 0x11; loop_counter = loop_counter + 1) {\n    data_ptr = (uint *)(PTR_DAT_0800784c + loop_counter * 0x18);\n    *(uint *)(DAT_08007850 + 0x30) = *(uint *)(DAT_08007850 + 0x30) | 1 << (*data_ptr >> 4 & 0xff);\n    bit_shift = *data_ptr & 0xf;\n    bit_mask = 1 << bit_shift;\n    data_1 = data_ptr[1];\n    data_2 = data_ptr[2];\n    data_3 = data_ptr[3];\n    data_4 = data_ptr[4];\n    FUN_08006e88(((*data_ptr >> 4) + 0x100080) * 0x400,&bit_mask);\n    if (-1 < (int)data_ptr[5]) {\n      FUN_0800733e(((*data_ptr >> 4) + 0x100080) * 0x400,1 << bit_shift & 0xffff,data_ptr[5] & 0xff);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "update_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "run_application_08001ddc",
                "FUN_080051b4": "initialize_network",
                "FUN_0800583c": "initialize_graphics",
                "FUN_0800b430": "initialize_data",
                "PTR_DAT_08001e90": "PTR_DATA",
                "do_nothing_08008244": "do_nothing",
                "*PTR_DAT_08001e90": "*PTR_DATA",
                "PTR_DAT_08001e94": "PTR_NETWORK_DATA",
                "do_nothing_080082ba": "do_nothing",
                "FUN_08002f24": "update_input",
                "FUN_080004ac": "update_game_logic",
                "FUN_080039a0": "update_graphics",
                "FUN_08005238": "update_audio",
                "FUN_080001f8": "update_score",
                "FUN_0800192c": "update_timer",
                "FUN_08005814": "update_ui",
                "FUN_0800283a": "update_network",
                "PTR_DAT_08001e90[1]": "PTR_DATA[1]",
                "PTR_DAT_08001e90[2]": "PTR_DATA[2]",
                "PTR_DAT_08001e90[0x10]": "PTR_DATA[8]",
                "FUN_080041a0": "display_game_over_screen",
                "PTR_DAT_08001e90[1] == '\\x01'": "PTR_DATA[1] == 1",
                "PTR_DAT_08001e90[1] == '\\x06'": "PTR_DATA[1] == 6",
                "FUN_080039bc": "update_high_score",
                "FUN_08003a74": "update_game_timer",
                "FUN_08003f34": "update_powerups"
            },
            "code": "void run_application_08001ddc(void)\n{\n    do_nothing();\n    initialize_network();\n    initialize_graphics();\n    initialize_data(PTR_DAT_08001e90, 0, 0x14);\n    *PTR_DAT_08001e90 = 1;\n    PTR_DAT_08001e90[1] = 1;\n    while(true)\n    {\n        if(*PTR_DAT_08001e90 != '\\0')\n        {\n            do_nothing();\n            update_input();\n            update_game_logic();\n            update_graphics();\n            update_audio();\n            update_score();\n            update_timer();\n            update_ui();\n            update_network();\n            *PTR_DAT_08001e90 = 0;\n            PTR_DAT_08001e90[2] = 0;\n            if((PTR_DAT_08001e90[4] & 2) != 0)\n            {\n                PTR_DAT_08001e90[0x10] = 1;\n            }\n            if((PTR_DAT_08001e90[1] == '\\x01') && ((PTR_DAT_08001e90[4] & 0x10) != 0))\n            {\n                PTR_DAT_08001e90[1] = 6;\n            }\n            if(PTR_DAT_08001e90[1] == '\\x06')\n            {\n                display_game_over_screen(2);\n            }\n            else\n            {\n                PTR_DAT_08001e90[1] = 0;\n                update_high_score();\n            }\n        }\n        update_game_timer();\n        update_powerups();\n    }\n}",
            "called": [
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_080039bc",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_08005814",
                "FUN_0800b430",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_08005238",
                "FUN_0800192c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "run_application_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_at_position_080069b4",
                "param_1": "bit_position",
                "DAT_080069e0": "target_address_base"
            },
            "code": "void set_bit_at_position_080069b4(uint8_t bit_position) {\n    uint32_t* target_address = (uint32_t*)(DAT_080069e0 + ((uint32_t)bit_position >> 5) * 4);\n    uint8_t bit_offset = bit_position & 0x1f;\n    uint32_t bit_mask = 1 << bit_offset;\n    *target_address = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "is_end_of_input_reached_08009228",
                "in_CY": "current_char",
                "FUN_08009204": "execute_input_processing"
            },
            "code": "bool is_end_of_input_reached_08009228(void)\n{\n  char current_char;\n  execute_input_processing();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08003004",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "is_end_of_input_reached_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "_DAT_40000010": "data_flags",
                "_DAT_4000000c": "error_interrupt_flags",
                "FUN_08007c7c": "process_data_08007c7c",
                "FUN_08005778": "process_valid_data",
                "FUN_08005760": "process_error_data",
                "FUNC_080053a0": "process_interrupt_data"
            },
            "code": "void process_data_08007c7c(void)\n{\n  if (is_data_ready() && is_data_valid()) {\n    clear_data_ready_flag();\n    process_valid_data();\n  }\n  if (is_error_flag_set() && is_error_valid()) {\n    clear_error_flag();\n    process_error_data();\n  }\n  if (is_interrupt_flag_set() && is_interrupt_valid()) {\n    clear_interrupt_flag();\n    process_interrupt_data();\n  }\n  return;\n}",
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "set_flags_based_on_data_08007b70",
                "local_c": "flags",
                "_DAT_40000034": "data_1",
                "_DAT_40000038": "data_2",
                "_DAT_4000000c": "control_data",
                "_DAT_40000000": "control_data_2"
            },
            "code": "void set_flags_based_on_data_08007b70()\n{\n  uint8_t flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags |= 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags |= 4;\n  }\n  _DAT_4000000c |= flags;\n  _DAT_40000000 |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_flags_based_on_data_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "check_valid_byte_08004d2c",
                "param_1": "byte_to_check",
                "param_2": "buffer",
                "iVar1": "result",
                "*param_2": "*buffer"
            },
            "code": "bool check_valid_byte_08004d2c(byte byte_to_check, undefined *buffer) {\n  int result = FUN_080003ec(buffer, (ushort)byte_to_check * 0x101 + 0x300, 0x100);\n  if (result == 0) {\n    *buffer = 0;\n    FUN_08004bc0(byte_to_check, buffer);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_valid_byte_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = FUN_08008590(uVar3);\n  iVar4 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = FUN_08008590(uVar3);\n  iVar5 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = FUN_08008590(uVar3);\n  iVar6 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = FUN_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = FUN_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = FUN_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = FUN_08008590(uVar9);\n    uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = FUN_08008590(uVar9);\n      iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = FUN_08008590(uVar9);\n        iVar13 = FUN_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = FUN_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUN_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = FUN_08008590(uVar10);\n          uVar17 = FUN_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUN_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = FUN_08008590(uVar10);\n            uVar16 = FUN_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUN_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = FUN_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = FUN_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08009250",
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_08008bf0",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08002edc",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "get_shifted_value_080066cc",
                "uVar1": "shifted_fun_value",
                "uVar2": "leading_zeroes",
                "PTR_DAT_08006714": "ptr_dat",
                "DAT_08006710": "dat",
                "uVar": "u_var",
                "masked_value": "masked_value",
                "0x70000": "input_value"
            },
            "code": "uint get_shifted_value_080066cc(void)\n{\n  uint shifted_value;\n  uint leading_zeroes = count_leading_zeroes(0x70000);\n  uint* PTR_DAT_08006714 = PTR_DAT_08006714;\n  uint* DAT_08006710 = DAT_08006710;\n  uint* u_var = (uint*)(DAT_08006710 + 8);\n  uint masked_value = (*u_var & 0xe000) >> (leading_zeroes & 0xff);\n  shifted_value = FUN_08006628() >> PTR_DAT_08006714[masked_value];\n  return shifted_value;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shifted_value_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_param_080018fc",
                "param_1": "new_param",
                "*(uint *)(DAT_08001928 + 0x14)": "*(ptr)",
                "DAT_08001928": "PTR_DAT_08001928",
                "0x14": "PTR_OFFSET",
                "mask": "MASK",
                "old_param": "old_param",
                "masked_old_param": "masked_old_param",
                "updated_param": "updated_param"
            },
            "code": "void update_param_080018fc(uint new_param) {\n    uint* ptr = (uint*)(DAT_08001928 + 0x14);\n    uint old_param = *(uint *)(DAT_08001928 + 0x14);\n    uint mask = 0xfffff55f;\n    uint masked_old_param = old_param & mask;\n    uint updated_param = new_param | masked_old_param;\n    *(uint *)(DAT_08001928 + 0x14) = updated_param;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_param_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "check_data_and_call_functions_080039bc",
                "iVar1": "result",
                "uVar2": "function_result",
                "local_9": "index",
                "FUN_08004d2c": "check_data",
                "PTR_DAT_08003a14": "DAT_08003a14",
                "FUN_08004030": "print_result",
                "*PTR_DAT_08003a14": "*DAT_08003a14",
                "FUN_0800369c": "print_data",
                "FUNC_080005b4": "calculate_result"
            },
            "code": "void check_data_and_call_functions_080039bc(void)\\n{\\n  int result;\\n  char index;\\n  for (index = 0; index < 2; index++) {\\n    result = check_data(index,PTR_DAT_08003a14);\\n    if (result == 0) {\\n      print_error(10);\\n    }\\n    else if (*PTR_PTR_DAT_08003a14 != \"\\0\") {\\n      print_data(PTR_DAT_08003a14);\\n      int function_result = calculate_result(PTR_DAT_08003a14);\\n      print_result(function_result);\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08004d2c",
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_data_and_call_functions_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "set_data_0800618c",
                "param_1": "data",
                "param_2": "size",
                "lVar1": "result",
                "iVar2": "timeout",
                "uVar3": "current_time",
                "uVar4": "timeout",
                "uVar5": "time",
                "data_ptr": "data_size",
                "mode": "data_mode"
            },
            "code": "uint32_t set_data_0800618c(uint32_t* data, uint32_t size) {\n    uint32_t* data_ptr = (uint32_t*)DAT_08006400;\n    uint32_t data_size = *data_ptr & 0xf;\n    if (data_size < size) {\n        *data_ptr = (size & 0xf);\n        if (data_size != (*data_ptr & 0xf)) {\n            return 1;\n        }\n        if ((*data & 1) != 0) {\n            uint32_t mode = data[1];\n            if (mode == 1) {\n                if ((*DAT_08006404 & 0x20000) == 0) {\n                    return 1;\n                }\n            }\n            else if (mode != 2 && ((*DAT_08006404 & 2) == 0)) {\n                return 1;\n            }\n            DAT_08006404[2] = mode | (DAT_08006404[2] & 0xfffffffc);\n            uint32_t timeout = FUN_08005a84() + 5000;\n            while ((DAT_08006404[2] & 0xc) != (mode * 4)) {\n                uint32_t current_time = FUN_08005a84();\n                if (timeout <= current_time) {\n                    return 3;\n                }\n            }\n        }\n    }\n    else {\n        if ((*data & 1) != 0) {\n            uint32_t mode = data[1];\n            if (mode == 1) {\n                if ((*DAT_08006404 & 0x20000) == 0) {\n                    return 1;\n                }\n            }\n            else if (mode == 2) {\n                if ((*DAT_08006404 & 0x2000000) == 0) {\n                    return 1;\n                }\n            }\n            else if ((*DAT_08006404 & 2) == 0) {\n                return 1;\n            }\n            DAT_08006404[2] = mode | (DAT_08006404[2] & 0xfffffffc);\n            uint32_t timeout = FUN_08005a84() + 5000;\n            while ((DAT_08006404[2] & 0xc) != (mode * 4)) {\n                uint32_t current_time = FUN_08005a84();\n                if (timeout <= current_time) {\n                    return 3;\n                }\n            }\n        }\n        *data_ptr = (size & 0xf);\n        if (data_size != (*data_ptr & 0xf)) {\n            return 1;\n        }\n    }\n    if ((*data & 2) != 0) {\n        DAT_08006404[2] = data[2] | (DAT_08006404[2] & 0xffffff0f);\n    }\n    if ((*data & 4) != 0) {\n        DAT_08006404[2] = data[3] | (DAT_08006404[2] & 0xffffe3ff);\n    }\n    if ((*data & 8) != 0) {\n        DAT_08006404[2] = (data[4] << 3) | (DAT_08006404[2] & 0xffff1fff);\n    }\n    uint64_t time = FUN_08006628();\n    uint32_t time_high = (uint32_t)(time >> 0x26);\n    uint32_t time_low = (uint32_t)(time >> 0x20);\n    uint64_t result = (uint64_t)DAT_08006408 * (time & 0xffffffff);\n    FUN_08005c30((uint32_t)(result >> 0x26), time_low, (uint32_t)result);\n    return 0;\n}",
            "called": [
                "FUN_08005c30",
                "FUN_08006628",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "set_data_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_bits_from_uint_08006998",
                "DAT_080069b0": "PTR_DAT_080069b0"
            },
            "code": "uint get_bits_from_uint_08006998(void)\n{\n    uint uint_value = *(uint *)(DAT_080069b0 + 0xc);\n    uint shifted_value = uint_value >> 8;\n    uint bits = shifted_value & 7;\n    return bits;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "get_bits_from_uint_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "initialize_data_and_check_connection_080004ac",
                "PTR_DAT_080004f0": "data_buffer",
                "PTR_DAT_080004f4": "connection_data",
                "initialize_buffer": "initialize_buffer",
                "print_message": "print_message",
                "check_connection": "check_connection",
                "handle_connection_error": "handle_connection_error",
                "connection_status": "connection_status"
            },
            "code": "void initialize_data_and_check_connection_080004ac(void)\n{\n  int connection_status;\n  initialize_buffer(PTR_DAT_080004f0, 0, 0x38);\n  *(undefined4 *)(PTR_DAT_080004f0 + 8) = *(undefined4 *)(PTR_DAT_080004f4 + 0x10);\n  print_message(0, 1, 2);\n  PTR_DAT_080004f0[4] = 1;\n  connection_status = check_connection(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f8);\n  if (connection_status == 0) {\n    handle_connection_error(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_and_check_connection_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_sum_of_four_values_080078f4",
                "local_10": "index",
                "local_c": "sum"
            },
            "code": "uint calculate_sum_of_four_values_080078f4(void)\n{\n  int index;\n  uint sum = 0;\n  for (index = 0; index < 4; index++) {\n    sum = *(uint *)(PTR_DAT_0800792c + index * 4) | sum;\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_four_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_menu_options_080041a0",
                "param_1": "user_selection",
                "FUN_080036c6": "display_text",
                "PTR_DAT_0800420c": "PTR_menu_header",
                "PTR_s_Reset_to_continue_08004210": "PTR_reset_to_continue",
                "PTR_s___H____X__to_unlock_08004214": "PTR_unlock_with_hx",
                "PTR_s_Caution__Unlocked_08004218": "PTR_caution_unlocked",
                "PTR_s_Enabled_0800421c": "PTR_enabled",
                "PTR_s_Disabled_08004220": "PTR_disabled",
                "PTR_DAT_08004224": "PTR_menu_footer"
            },
            "code": "void display_menu_options_080041a0(int user_selection)\n{\n    display_text(PTR_DAT_0800420c);\n    switch(user_selection) {\n        case 1:\n            display_text(PTR_s_Reset_to_continue_08004210);\n            break;\n        case 2:\n            display_text(PTR_s___H____X__to_unlock_08004214);\n            break;\n        case 3:\n            display_text(PTR_s_Caution__Unlocked_08004218);\n            break;\n        case 4:\n            display_text(PTR_s_Enabled_0800421c);\n            break;\n        case 5:\n            display_text(PTR_s_Disabled_08004220);\n    }\n    display_text(PTR_DAT_08004224);\n    return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_menu_options_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "iVar1": "temp_val",
                "uVar2": "shifted_value"
            },
            "code": "uint32_t calculate_shifted_value_08008bf0(uint32_t input_value, uint32_t shift_amount)\n{\n  int32_t temp_val;\n  uint32_t shifted_value;\n\n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  temp_val = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < temp_val) {\n      return 0;\n    }\n    shifted_value = -(temp_val >> 0x15) - 0x3e1;\n    if (-1 < (int32_t)shifted_value) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (shifted_value & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "check_input_08003a18",
                "param_1": "input_byte",
                "PTR_DAT_08003a70": "flag_array",
                "PTR_DAT_08003a70[2]": "flag_array[2]",
                "FUN_080025e8": "trigger_error"
            },
            "code": "void check_input_08003a18(uint8_t input_byte) {\n    if (!(input_byte & 0x80)) {\n        if (!(input_byte & 0x40)) {\n            if (input_byte & 0x20) {\n                PTR_DAT_08003a70[2] |= 0x02;\n            }\n        }\n        else {\n            PTR_DAT_08003a70[2] |= 0x08;\n        }\n    }\n    else {\n        trigger_error();\n    }\n    return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_input_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "do_nothing_and_then_check_08005790",
                "PTR_DAT_080057d4": "data_pointer",
                "PTR_DAT_080057dc": "data_pointer_2",
                "PTR_DAT_080057e0": "data_pointer_3",
                "FUN_08007c40": "print_hex",
                "FUN_08007c5e": "print_hex",
                "PTR_DAT_080057d8": "data_pointer",
                "FUN_08007b70": "print_newline"
            },
            "code": "void do_nothing_and_then_check_08005790()\n{\n  do_nothing();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d4 + 0x18);\n    *(undefined2 *)PTR_DAT_080057e0 = *(undefined2 *)(PTR_DAT_080057d4 + 0x1a);\n    print_hex(0x69);\n    print_hex(((byte)PTR_DAT_080057d4[0xd] + 5) * 0x15);\n    print_newline();\n  }\n  return;\n}",
            "called": [
                "FUN_08007b70",
                "FUN_08007c5e",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": false,
            "current_name": "do_nothing_and_then_check_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  FUN_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = FUN_0800854c(local_40);\n  uVar4 = FUN_0800854c(local_11);\n  uVar4 = FUN_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = FUN_08008590(uVar1);\n  uVar3 = FUN_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = FUN_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = FUN_0800854c(local_11);\n  uVar3 = FUN_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = FUN_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = FUN_08008590(uVar1);\n  local_4c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  FUN_080018fc(local_1a);\n  FUN_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = FUN_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008640",
                "FUN_080078f4",
                "FUN_08008bf0",
                "FUN_0800b430",
                "FUN_080018fc",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08002828",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_at_index_08007854",
                "param_1": "index",
                "PTR_": "address",
                "DAT_": "value"
            },
            "code": "uint get_bit_at_index_08007854(uint index) {\n    uint base_PTR_ = ((int)index >> 4) * 0x400 + 0x40020010;\n    uint masked_index = index & 0xf;\n    uint *PTR_ = (uint *)base_PTR_;\n    uint DAT_ = *PTR_;\n    uint bit = DAT_ >> masked_index & 1;\n    return bit;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_at_index_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "initialize_data_and_params_08004900",
                "param_1": "data",
                "param_2": "param",
                "FUN_080036c6": "initialize_pointer",
                "PTR_DAT_08004934": "PTR_DATA_START",
                "FUN_080037fc": "initialize_data",
                "PTR_DAT_08004938": "PTR_DATA_END",
                "FUN_0800369c": "initialize_param",
                "PTR_DAT_0800493c": "PTR_CODE_END"
            },
            "code": "void initialize_data_and_params_08004900(undefined data, undefined4 param){\n                      initialize_pointer(PTR_DAT_08004934);\n                      initialize_data(data);\n                      initialize_pointer(PTR_DAT_08004938);\n                      initialize_param(param);\n                      initialize_pointer(PTR_DAT_0800493c);\n                      return;\n                  }",
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_data_and_params_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "print_help_message_08004228",
                "PTR_s__Grbl_0_8c______for_help__08004238": "help_message",
                "FUN_080036c6": "print_string"
            },
            "code": "void print_help_message_08004228(void)\n{\n  print_string(PTR_s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "print_help_message_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = FUN_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_08008b24"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "set_bit_080076c8",
                "param_1": "bit_index",
                "uint": "unsigned int",
                "*((uint *)(((int)param_1 >> 4) * 0x400 + 0x40020014))": "*data_ptr",
                "*(uint *)(((int)param_1 >> 4) * 0x400 + 0x40020014) ^ 1 << (param_1 & 0xf)": "new_data",
                "*(uint *)(((int)param_1 >> 4) * 0x400 + 0x40020014)": "current_data",
                "mask": "mask",
                "return;": "return;"
            },
            "code": "void set_bit_080076c8(uint bit_index)\n{\n    uint* data_ptr = (uint*)((int)bit_index >> 4) * 0x400 + 0x40020014;\n    uint current_data = *data_ptr;\n    uint mask = 1 << (bit_index & 0xf);\n    uint new_data = current_data ^ mask;\n    *data_ptr = new_data;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "set_bit_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_in_array_08006a8c",
                "param_1": "bit_position",
                "DAT_08006abc": "array_ptr"
            },
            "code": "void set_bit_in_array_08006a8c(byte bit_position)\n{\n    int* DAT_08006abc = DAT_08006abc;\n    uint index = (((uint)(int)(char)bit_position >> 5) + 0x60) * 4;\n    int bit_mask = 1 << (bit_position & 0x1f);\n    *(DAT_08006abc + index) = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "call_two_functions_with_args_0800283a",
                "FUN_080035ec": "call_first_function",
                "FUN_080004fc": "call_second_function",
                "PTR_DAT_08002868": "data_pointer"
            },
            "code": "void call_two_functions_with_args_0800283a(void)\n{\n  int arg1 = *(int *)(PTR_DAT_08002868 + 4);\n  int arg2 = *(int *)(PTR_DAT_08002868 + 8);\n  int arg3 = *(int *)(PTR_DAT_08002868 + 0xc);\n  call_first_function(arg1, arg2, arg3);\n  call_second_function(arg1, arg2, arg3);\n  return;\n}",
            "called": [
                "FUN_080004fc",
                "FUN_080035ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "call_two_functions_with_args_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "temp_2",
                "uVar2": "temp_3",
                "uVar3": "temp_4",
                "in_r12": "mask_1",
                "bVar4": "is_zero_1",
                "mask_1": "mask_1",
                "mask_2": "mask_2",
                "mask_3": "mask_3",
                "mask_4": "mask_4",
                "condition_1": "condition_1",
                "condition_2": "condition_2",
                "condition_3": "condition_3"
            },
            "code": "ulonglong calculate_result_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint mask_1 = 0x80000000;\n  uint mask_2 = 0x100000;\n  uint mask_3 = 0x7ff00000;\n  uint mask_4 = 0x7ff8000000000000;\n  bool is_zero_1 = (input_1 | (input_2 << 1)) == 0;\n  bool is_zero_2 = (input_3 | (input_4 << 1)) == 0;\n  bool condition_1 = input_2 & mask_1;\n  bool condition_2 = input_4 & mask_1;\n  bool condition_3 = (input_2 ^ input_4) & mask_1;\n  if (input_3 != input_1 && condition_1 != input_1) {\n    if (is_zero_1 || is_zero_2) {\n      return (ulonglong)(condition_3) << 0x20;\n    }\n    if (input_3 == 0) {\n      temp_3 = input_2 & mask_1;\n      do {\n        temp_1 = input_1 & mask_1;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp_1 != 0);\n      } while ((input_2 & mask_2) == 0);\n      input_2 = input_2 | temp_3;\n      if (condition_2 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      condition_1 = input_3 & mask_1;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(condition_1 != 0);\n    } while ((input_4 & mask_2) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  if (is_zero_1) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero_1) {\n    is_zero_1 = is_zero_2;\n  }\n  temp_3 = input_2;\n  if (((!is_zero_1) && ((input_3 != input_1 || ((input_1 | (input_2 << 0xc)) == 0)))) && ((condition_1 != input_1 || (input_1 = input_3, temp_3 = input_4, (input_3 | (input_4 << 0xc)) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & mask_1 | mask_3) << 0x20;\n  }\n  return CONCAT44(temp_3,input_1) | mask_4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "convert_byte_to_ushort_and_add_offset_08004bc0",
                "param_1": "input_byte",
                "param_2": "input_param"
            },
            "code": "void convert_byte_to_ushort_and_add_offset_08004bc0(byte input_byte, undefined4 input_param){\n  ushort converted_value = (ushort)input_byte * 0x101 + 0x300;\n  FUN_08000374(converted_value, input_param, 0x100);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_byte_to_ushort_and_add_offset_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "is_CY_zero_08008b4c",
                "in_ZR": "zero",
                "in_CY": "CY"
            },
            "code": "bool is_CY_zero_08008b4c(void)\n{\n  undefined zero;\n  undefined CY;\n  FUN_08008af0();\n  return (bool)zero || !(bool)CY;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_CY_zero_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "initialize_game_08004c2a",
                "FUN_08000340": "set_initial_values",
                "FUN_08000374": "load_data_to_memory",
                "PTR_DAT_08004c44": "DATA_POINTER_08004c44"
            },
            "code": "void initialize_game_08004c2a(void)\n{\n  set_initial_values(0,5);\n  load_data_to_memory(1,PTR_DAT_08004c44,0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "initialize_game_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "print_hello_world_0800826a",
                "param_1": "input_string",
                "FUN_08007e1c": "print_string"
            },
            "code": "int print_hello_world_0800826a(void *input_string) {\n  print_string(input_string);\n  return 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "print_hello_world_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "input_char",
                "FUN_08008af0": "get_input_char"
            },
            "code": "bool is_end_of_string_08008b60(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_and_call_function_08005324",
                "param_1": "user_input",
                "local_14": "calculated_value",
                "minimum_input_value": "minimum_allowed_input_value"
            },
            "code": "void calculate_and_call_function_08005324(uint user_input) {\n  uint minimum_input_value = 800;\n  uint calculated_value = user_input;\n  if (user_input < minimum_input_value) {\n    calculated_value = minimum_input_value;\n  }\n  calculated_value = DAT_08005358 / calculated_value;\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculated_value;\n  FUN_08007bf0(calculated_value);\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_and_call_function_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_data_at_index_08000310",
                "param_1": "index",
                "PTR_DAT_08000338": "is_initialized",
                "FUN_080002f0": "initialize_data",
                "PTR_DAT_0800033c": "data_array"
            },
            "code": "uint32_t get_data_at_index_08000310(uint32_t index) {\n\tif (*PTR_DAT_08000338 == 0) {\n\t\tinitialize_data();\n\t}\n\treturn PTR_DAT_0800033c[index & 0x3ff];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_data_at_index_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "handle_param_08007a70",
                "param_1": "param_value",
                "local_c": "local_variable",
                "DAT_08007ac8": "parameter_2",
                "DAT_08007acc": "parameter_3",
                "FUN_08006cf6": "call_function1",
                "FUN_080079e0": "call_function2"
            },
            "code": "void handle_param_08007a70(int param_value, undefined4 param_2, undefined4 param_3) {\n  undefined local_variable;\n  if (param_value == 0x40000000) {\n    local_variable = 0x1c;\n  }\n  else if (param_value == DAT_08007ac8) {\n    local_variable = 0x1d;\n  }\n  else {\n    if (param_value != DAT_08007acc) {\n      return;\n    }\n    local_variable = 0x1e;\n  }\n  call_function1(local_variable, param_2, param_3);\n  call_function2(local_variable);\n  return;\n}",
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "handle_param_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_080001ac",
                "FUN_0800b3e8",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_checksum_08002978",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "code": "undefined4 calculate_checksum_08002978(undefined4 data1, undefined4 data2, undefined4 data3)\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 result3;\n  result1 = FUNC_08008eec(data2, data2);\n  result2 = FUNC_08008cdc(data1, data1);\n  result2 = FUNC_08008eec(result2, data3);\n  result1 = FUNC_08008cd8(result1, result2);\n  result3 = FUN_08008590(result1);\n  result3 = FUN_080098d0((int)result3, (int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result3, (int)((ulonglong)result3 >> 0x20));\n  return result1;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_40 = FUN_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    local_38 = FUN_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = FUN_08008ba0();\n  uVar11 = FUN_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800a5a0",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_decimal_08003826",
                "param_1": "input",
                "iVar1": "is_negative",
                "uVar2": "quotient",
                "bVar3": "buffer_index",
                "uVar4": "digit",
                "local_24": "remainder",
                "acStack_1d": "buffer",
                "local_10": "loop_counter",
                "local_a": "is_buffer_empty",
                "local_9": "digit_count"
            },
            "code": "void print_decimal_08003826(uint32_t input) {\n  int is_negative = 0;\n  if (input >= 0x80000000) {\n    putchar('-');\n    input = ~input + 1;\n    is_negative = 1;\n  }\n\n  uint32_t quotient = input / 1000000000;\n  uint32_t remainder = input % 1000000000;\n  char buffer[12];\n  int buffer_index = 0;\n\n  if (is_negative) {\n    buffer[buffer_index++] = '-';\n  }\n\n  if (quotient == 0) {\n    buffer[buffer_index++] = '0';\n  }\n  else {\n    while (quotient > 0) {\n      uint32_t digit = remainder / 10000000;\n      buffer[buffer_index++] = digit + '0';\n      remainder = (remainder % 10000000) * 10 + (quotient % 10);\n      quotient /= 10;\n    }\n  }\n\n  while (buffer_index < 10) {\n    buffer[buffer_index++] = '0';\n  }\n\n  for (int i = buffer_index - 1; i >= 0; i--) {\n    putchar(buffer[i]);\n  }\n}\n",
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "print_decimal_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "check_for_zero_0800923c",
                "in_CY": "is_CY_zero",
                "in_ZR": "is_ZR_zero",
                "FUN_08009204": "check_CY_for_zero",
                "!": "not",
                "||": "or",
                "(bool)": "cast_to_bool"
            },
            "code": "bool check_for_zero_0800923c(void)\n{\n  bool is_CY_zero = check_CY_for_zero();\n  bool is_ZR_zero = check_ZR_for_zero();\n  return is_CY_zero || is_ZR_zero;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_for_zero_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "update_data_08002afc",
                "param_1": "data1",
                "param_2": "data2",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "FUN_08009228": "compare_data",
                "PTR_DAT_08002ba4": "constant_data"
            },
            "code": "void update_data_08002afc(int data1,int data2)\\n{\\n  int result;\\n  undefined4 var1;\\n  undefined4 var2;\\n  if (((data1 != 0) && (*(char *)(data1 + 0x25) == \"\\0\")) &&\\n     (result = compare_data(*(undefined4 *)(data1 + 0x18),*(undefined4 *)(data2 + 0x18)), result != 0)) {\\n    var2 = *(undefined4 *)(data2 + 0x18);\\n    var1 = encrypt_data(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\\n                         *(undefined4 *)(data1 + 0x18),*(undefined4 *)(data1 + 0x20));\\n    result = compare_data(var2,var1);\\n    if (result == 0) {\\n      var1 = encrypt_data(*(uint *)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000,\\n                           *(undefined4 *)(data1 + 0x18),*(undefined4 *)(data1 + 0x20));\\n    }\\n    else {\\n      var1 = *(undefined4 *)(data2 + 0x18);\\n    }\\n    result = compare_data(var1,*(undefined4 *)(data2 + 0x18));\\n    if (result == 0) {\\n      *(undefined4 *)(data2 + 0x18) = var1;\\n      *(undefined *)(data2 + 0x24) = 1;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "update_data_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_08004c48",
                "param_1": "input",
                "PTR_DAT_08004d0c": "ptr_data_1",
                "DAT_08004d10": "data_1",
                "DAT_08004d14": "data_2",
                "DAT_08004d18": "data_3",
                "DAT_08004d1c": "data_4",
                "DAT_08004d20": "data_5",
                "DAT_08004d24": "data_6",
                "DAT_08004d28": "data_7",
                "FUN_08004c2a": "some_function"
            },
            "code": "void initialize_08004c48(char input) {\n    if (input != '\\0') {\n        //initialize_08004c48 values\n        *(undefined4 *)PTR_DAT_08004d0c = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 4) = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 8) = DAT_08004d10;\n        PTR_DAT_08004d0c[13] = 10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 16) = DAT_08004d14;\n        *(undefined4 *)(PTR_DAT_08004d0c + 20) = DAT_08004d18;\n        *(undefined4 *)(PTR_DAT_08004d0c + 32) = DAT_08004d1c;\n        *(undefined4 *)(PTR_DAT_08004d0c + 28) = DAT_08004d20;\n        *(undefined2 *)(PTR_DAT_08004d0c + 24) = 0;\n        *(undefined2 *)(PTR_DAT_08004d0c + 26) = 0xa80;\n        *(undefined4 *)(PTR_DAT_08004d0c + 36) = DAT_08004d24;\n    }\n    //set values\n    PTR_DAT_08004d0c[40] = 0;\n    PTR_DAT_08004d0c[40] |= 2;\n    PTR_DAT_08004d0c[40] |= 0x10;\n    *(undefined2 *)(PTR_DAT_08004d0c + 42) = 0;\n    *(undefined4 *)(PTR_DAT_08004d0c + 44) = DAT_08004d28;\n    *(undefined4 *)(PTR_DAT_08004d0c + 48) = DAT_08004d14;\n    *(undefined2 *)(PTR_DAT_08004d0c + 52) = 100;\n    *(undefined4 *)(PTR_DAT_08004d0c + 56) = 0x3f800000;\n    PTR_DAT_08004d0c[60] = 0x19;\n    PTR_DAT_08004d0c[61] = 3;\n    PTR_DAT_08004d0c[62] = 0x19;\n    //call function\n    fun_08004c2a();\n    return;\n}",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "initialize_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "call_function_with_param_080002a0",
                "param_1": "param",
                "FUN_08005a98": "call_function"
            },
            "code": "void call_function_with_param_080002a0(void* param){\n  call_function(param);\n  return;\n}",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "call_function_with_param_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "check_for_carry_or_zero_flag_08009250",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "code": "bool check_for_carry_or_zero_flag_08009250(void)\n{\n  bool carry_flag = (bool)in_CY;\n  bool zero_flag = (bool)in_ZR;\n  FUN_080091fc();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_for_carry_or_zero_flag_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "send_data_0800640c",
                "param_1": "data_type",
                "param_2": "data_high",
                "param_3": "data_low",
                "local_1c": "data_len",
                "local_18": "constant_2",
                "local_14": "constant_3",
                "local_10": "constant_0",
                "local_c": "constant_0",
                "DAT_080064b0": "flag_reg_base",
                "DAT_080064b4": "data_reg_0",
                "DAT_080064b8": "data_reg_1"
            },
            "code": "void send_data_0800640c(uint8_t data_type, uint32_t data_high, uint32_t data_low)\n{\n  uint32_t* data_reg = (data_type == 0) ? DAT_080064b4 : DAT_080064b8;\n  uint32_t data_len = (data_type == 0) ? 0x100 : 0x200;\n  uint32_t data_offset = (data_type == 0) ? 0 : 3;\n  uint32_t* flag_reg = (uint32_t*)(DAT_080064b0 + 0x30);\n  *flag_reg |= (data_type == 0) ? 1 : 4;\n  uint32_t old_reg_value = *(uint32_t*)(DAT_080064b0 + 8);\n  uint32_t new_reg_value = data_high | (data_low << data_offset) | (old_reg_value & ((data_type == 0) ? 0xf89fffff : 0x7ffffff));\n  *(uint32_t*)(DAT_080064b0 + 8) = new_reg_value;\n  FUN_08006e88(data_reg, &data_len);\n}\n",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "send_data_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "copy_data_to_buffer_and_swap_endianess_08008af0",
                "param_1": "buffer",
                "param_2": "buffer_size",
                "param_3": "data",
                "param_4": "data_size",
                "FUN_08008b00": "swap_endianess"
            },
            "code": "void copy_data_to_buffer_and_swap_endianess_08008af0(void* buffer, size_t buffer_size, void* data, size_t data_size)\n{\n    memcpy(buffer, data, data_size);\n    swap_endianess(buffer, buffer_size);\n    return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_and_swap_endianess_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "convert_char_to_int_08006e1a",
                "param_1": "input_char",
                "uVar1": "converted_int",
                "FUN_08006ac0": "convert_char"
            },
            "code": "int convert_char_to_int_08006e1a(char input_char) {\n  int converted_int = convert_char((int)input_char);\n  return converted_int;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "new_value",
                "*(uint *)(DAT_080052d8 + 0x14)": "*data_ptr",
                "0xfffffaaf": "mask"
            },
            "code": "void update_data_080052ac(uint new_value)\n{\n    uint* data_ptr = (uint*)(DAT_080052d8 + 0x14);\n    uint mask = 0xfffffaaf;\n    *(uint *)(DAT_080052d8 + 0x14) = (new_value | (*(uint *)(DAT_080052d8 + 0x14) & mask));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "imported": false,
            "current_name": "update_data_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_for_valid_input_08008286",
                "uVar1": "result",
                "iVar2": "input_length",
                "FUN_08007e58": "get_input_length",
                "FUN_08007e84": "get_input_string",
                "FUN_08005900": "validate_input"
            },
            "code": "undefined check_for_valid_input_08008286(void)\n{\n  undefined result;\n  int input_length = get_input_length();\n  if (input_length != 0) {\n    char* input_string = get_input_string();\n    int is_valid = validate_input(input_string);\n    if (is_valid == 0) {\n      result = input_string[0];\n      return result;\n    }\n  }\n  return 0xff;\n}",
            "called": [
                "FUN_08005900",
                "FUN_08007e58",
                "FUN_08007e84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_for_valid_input_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int is_valid_input_08008b74(uint input1, int input2, uint input3, int input4) {\n    int is_valid = 0;\n    if ((((input2 << 1) >> 0x15) != -1 || ((input1 | input2 << 0xc) == 0)) && (((input4 << 1) >> 0x15) != -1 || ((input3 | input4 << 0xc) == 0)))) {\n        is_valid = 1;\n    }\n    return is_valid;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "add_to_list_0800b524",
                "param_1": "list_index",
                "param_2": "value",
                "param_3": "type",
                "param_4": "flag",
                "puVar1": "node_list_head_ptr",
                "uVar2": "return_val",
                "uVar3": "node_data_flag",
                "iVar4": "node_list_ptr",
                "iVar5": "node_data_ptr",
                "uVar6": "node_data_count",
                "do_nothing_0800b51c": "do_nothing",
                "do_nothing_0800b520": "do_nothing"
            },
            "code": "int add_to_list_0800b524(int list_index, int value, int type, int flag) {\n  Node* current_node_ptr = node_list_head_ptr;\n  do_nothing(current_node_ptr->data);\n  int node_list_ptr = *(int*)node_list_head_ptr;\n  int node_data_ptr = *(int*)(node_list_ptr + 0x148);\n  if (node_data_ptr == 0) {\n    node_data_ptr = node_list_ptr + 0x14c;\n    *(int*)(node_list_ptr + 0x148) = node_data_ptr;\n  }\n  uint32_t node_data_count = *(uint32_t*)(node_data_ptr + 4);\n  if (node_data_count < 0x20) {\n    if (list_index != 0) {\n      int node_data_index_ptr = node_data_ptr + node_data_count * 4;\n      *(int*)(node_data_index_ptr + 0x88) = type;\n      uint32_t node_data_flag = 1 << (node_data_count & 0xff);\n      *(uint32_t*)(node_data_ptr + 0x188) |= node_data_flag;\n      *(int*)(node_data_index_ptr + 0x108) = flag;\n      if (list_index == 2) {\n        *(uint32_t*)(node_data_ptr + 0x18c) |= node_data_flag;\n      }\n    }\n    uint32_t node_list_count = *(uint32_t*)node_list_head_ptr;\n    *(uint32_t*)(node_data_ptr + 4) = node_data_count + 1;\n    *(int*)(node_data_ptr + (node_data_count + 2) * 4) = value;\n    do_nothing(*(int*)current_node_ptr->data);\n    return 0;\n  }\n  else {\n    do_nothing(*(int*)current_node_ptr->data);\n    return -1;\n  }\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "add_to_list_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_flags_08007ea4",
                "param_1": "flag_value",
                "DAT_08007f38": "FLAG_A",
                "DAT_08007f40": "FLAG_B",
                "DAT_08007f44": "FLAG_C",
                "DAT_08007f48": "FLAG_D",
                "DAT_08007f4c": "FLAG_E",
                "DAT_08007f50": "FLAG_F",
                "*(uint *)(DAT_08007f3c + 0x44)": "*flag_address_2",
                "*(uint *)(DAT_08007f3c + 0x40)": "*flag_address"
            },
            "code": "void set_flags_08007ea4(int flag_value) {\n    uint* flag_address = (uint*)(DAT_08007f3c + 0x40);\n    uint* flag_address_2 = (uint*)(DAT_08007f3c + 0x44);\n    if (flag_value == DAT_08007f38) {\n        *(uint *)(DAT_08007f3c + 0x44) |= 0x10;\n    }\n    else if (flag_value == DAT_08007f40) {\n        *(uint *)(DAT_08007f3c + 0x40) |= 0x20000;\n    }\n    else if (flag_value == DAT_08007f44) {\n        *(uint *)(DAT_08007f3c + 0x40) |= 0x40000;\n    }\n    else if (flag_value == DAT_08007f48) {\n        *(uint *)(DAT_08007f3c + 0x40) |= 0x80000;\n    }\n    else if (flag_value == DAT_08007f4c) {\n        *(uint *)(DAT_08007f3c + 0x40) |= 0x100000;\n    }\n    else if (flag_value == DAT_08007f50) {\n        *(uint *)(DAT_08007f3c + 0x44) |= 0x20;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "set_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_and_execute_08007756",
                "uVar1": "result",
                "FUN_08005a84": "get_status",
                "FUN_080076c8": "execute_command",
                "FUN_08007930": "do_something",
                "FUN_08005a68": "update_status"
            },
            "code": "void check_and_execute_08007756() {\n  uint32_t result = get_status();\n  if ((result & 0x1ff) == 0) {\n    execute_command(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    do_something();\n  }\n  update_status();\n  return;\n}",
            "called": [
                "FUN_08007930",
                "FUN_08005a68",
                "FUN_080076c8",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_and_execute_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "display_Grbl_settings_view_0800423c",
                "FUN_080036c6": "display_view",
                "PTR_s_____view_Grbl_settings______view_0800424c": "s_view_Grbl_settings"
            },
            "code": "void display_Grbl_settings_view_0800423c(void)\n{\n  display_view(PTR_s_____view_Grbl_settings______view_0800424c);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "display_Grbl_settings_view_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_end_of_input_reached_08009264",
                "in_CY": "current_char",
                "FUN_080091fc": "execute_input_processing"
            },
            "code": "bool is_end_of_input_reached_08009264(void)\n{\n  char current_char;\n  execute_input_processing();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_input_reached_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "execute_tasks_08007e08",
                "FUN_08007ad0": "initialize_system",
                "FUN_08007d08": "process_data",
                "FUN_08007da8": "finalize_execution"
            },
            "code": "void execute_tasks_08007e08(void)\n{\n  initialize_system();\n  process_data();\n  finalize_execution();\n  return;\n}",
            "called": [
                "FUN_08007d08",
                "FUN_08007ad0",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "execute_tasks_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "are_ptrs_equal_08002fac",
                "*PTR_DAT_08002fcc": "*ptr1",
                "*PTR_DAT_08002fd0": "*ptr2"
            },
            "code": "bool are_ptrs_equal_08002fac(void)\n{\n    int *PTR_DAT_08002fcc = PTR_DAT_08002fcc;\n    int *PTR_DAT_08002fd0 = PTR_DAT_08002fd0;\n    return (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "are_ptrs_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "check_if_param_greater_than_random_080002b6",
                "param_1": "param",
                "uVar1": "random_num1",
                "uVar2": "random_num2",
                "bVar3": "is_param_greater",
                "lVar4": "sum_of_random_and_param",
                "uVar5": "generate_random_number"
            },
            "code": "void check_if_param_greater_than_random_080002b6(uint32_t param)\n{\n  uint32_t random_num1;\n  uint32_t random_num2;\n  bool is_param_greater;\n  uint64_t sum_of_random_and_param;\n\n  sum_of_random_and_param = generate_random_number() + (uint64_t)param;\n  random_num2 = (uint32_t)(generate_random_number() >> 32);\n  do {\n    random_num1 = (uint32_t)(generate_random_number() >> 32);\n    is_param_greater = random_num2 <= random_num1;\n    if (random_num1 == random_num2) {\n      is_param_greater = (uint32_t)sum_of_random_and_param <= (uint32_t)generate_random_number();\n    }\n  } while (!is_param_greater);\n  return;\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "check_if_param_greater_than_random_080002b6"
        }
    },
    "used_tokens": 192014,
    "layers": [
        [
            "FUN_08005324"
        ]
    ],
    "locked_functions": []
}