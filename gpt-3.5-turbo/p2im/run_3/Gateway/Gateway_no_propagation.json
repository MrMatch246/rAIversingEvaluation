{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_ending_null_character_08000178",
            "code": "\nchar * findEndingNullCharacter_08000178(char *str)\n\n{\n  char currentCharacter;\n  char *nextCharacter;\n  char *ptrToCharacter;\n  \n  ptrToCharacter = str;\n  do {\n    nextCharacter = ptrToCharacter + 1;\n    currentCharacter = *ptrToCharacter;\n    ptrToCharacter = nextCharacter;\n  } while (currentCharacter != '\\0');\n  return nextCharacter + (-1 - (int)str);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_ending_null_character_08000178",
                "param_1": "str",
                "cVar1": "currentCharacter",
                "pcVar2": "nextCharacter",
                "pcVar3": "ptrToCharacter"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "execute_software_interrupt_08000188",
            "code": "\nvoid executeSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "execute_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "check_and_call_function_0800018c",
            "code": "\nundefined4 checkAndCallFunction_0800018c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "check_and_call_function_0800018c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isConditionMet;\n  int result;\n  \n  if (0x3b < (int)data) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,data,param3,param4,param4);\n  if (result == 3) {\n    if (data < 0x3c) {\n      if ((&DAT_0800a908)[data] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[data]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[data],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(data,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,data,param2);\n  }\n  else if (result == 4) {\n    if (data < 0x3c) {\n      if ((&DAT_0800a908)[data] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[data]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[data] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,data,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isConditionMet",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "check_and_update_data_0800021a",
            "code": "\nvoid checkAndUpdateData_0800021a(uint dataIndex,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isIndexValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,dataIndex,param3,param4,param4);\n  if (result == 3) {\n    if (dataIndex < 0x3c) {\n      if ((&DAT_0800a908)[dataIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[dataIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[dataIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(dataIndex,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,dataIndex,param2);\n  }\n  else if (result == 4) {\n    if (dataIndex < 0x3c) {\n      if ((&DAT_0800a908)[dataIndex] == -1) {\n        isIndexValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isIndexValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[dataIndex]);\n          if (result == 1) {\n            isIndexValid = false;\n          }\n          else {\n            isIndexValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isIndexValid = false;\n    }\n    if (isIndexValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[dataIndex] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,dataIndex,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "check_and_update_data_0800021a",
                "param_1": "dataIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isIndexValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_flag_08000488",
            "code": "\nvoid updateDataFlag_08000488(uint dataIndex,int flag)\n\n{\n  undefined4 result;\n  \n  if ((int)dataIndex < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (dataIndex & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (dataIndex & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,dataIndex,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_flag_08000488",
                "param_1": "dataIndex",
                "param_2": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_data_080004d4",
            "code": "\nvoid process_data_080004d4(int input_flag,int check_value)\n\n{\n  int loop_counter;\n  undefined *data_ptr;\n  \n  if (input_flag != 1) {\n    return;\n  }\n  if (check_value == 0xffff) {\n    data_ptr = &DAT_2000022c;\n    for (loop_counter = 0xb; -1 < loop_counter; loop_counter = loop_counter + -1) {\n      FUN_08002580(data_ptr);\n      data_ptr = data_ptr + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_data_080004d4",
                "param_1": "input_flag",
                "param_2": "check_value",
                "iVar1": "loop_counter",
                "puVar2": "data_ptr"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_08000588",
            "code": "\nvoid updateData_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "activate_pin_080005f8",
            "code": "\nvoid activatePin_080005f8(uint pinNumber,int pinMode)\n\n{\n  int result;\n  char pinState;\n  bool isValid;\n  uint adjustedPinNumber;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        pinState = '\\0';\n      }\n      else {\n        pinState = DAT_20000170;\n        if (pinMode == 6) {\n          pinState = '\\0';\n        }\n      }\n    }\n    else {\n      pinState = '\\0';\n    }\n    if (pinState != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else if (pinMode == 4) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    adjustedPinNumber = pinNumber - 0x2e & 0xff;\n    if (adjustedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isValid = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isValid = false;\n        }\n        else {\n          isValid = true;\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_08000488(adjustedPinNumber,pinMode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      if ((pinMode == 0) || (pinMode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(pinMode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isValid = false;\n            }\n            else {\n              isValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if (isValid) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isValid = false;\n            }\n            else {\n              isValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if (isValid) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (adjustedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if (isValid) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isValid = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isValid = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (result == 1) {\n                isValid = false;\n              }\n            }\n          }\n        }\n        else {\n          isValid = false;\n        }\n        if (isValid) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isValid = false;\n            }\n            else {\n              isValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if (isValid) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           result != 0)) {\n          isValid = false;\n        }\n        if (isValid) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isValid = false;\n            }\n            else {\n              isValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if (isValid) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "activate_pin_080005f8",
                "param_1": "pinNumber",
                "param_2": "pinMode",
                "iVar1": "result",
                "cVar2": "pinState",
                "bVar3": "isValid",
                "uVar4": "adjustedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "uVar2": "index",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_variables_08000aec",
            "code": "\nvoid initializeVariables_08000aec(void)\n\n{\n  bool conditionResult;\n  int functionResult;\n  uint loopCounter;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (loopCounter = 0; loopCounter < 5; loopCounter = loopCounter + 1 & 0xff) {\n    (&DAT_200001e8)[loopCounter] = 0;\n    (&DAT_20000174)[loopCounter] = 0;\n    (&DAT_20000180)[loopCounter] = 0;\n  }\n  for (loopCounter = 0; loopCounter < 0x3c; loopCounter = loopCounter + 1 & 0xff) {\n    if ((loopCounter - 0x2e & 0xff) < 0xe) {\n      if (loopCounter < 0x3c) {\n        functionResult = (int)(char)(&DAT_0800a908)[loopCounter];\n      }\n      else {\n        functionResult = -1;\n      }\n      functionResult = FUN_080036ac(functionResult);\n      if (functionResult == 0) {\n        conditionResult = false;\n      }\n      else {\n        if (loopCounter < 0x3c) {\n          functionResult = (int)(char)(&DAT_0800a908)[loopCounter];\n        }\n        else {\n          functionResult = -1;\n        }\n        functionResult = FUN_080036ac(functionResult);\n        if (functionResult == 1) {\n          conditionResult = false;\n        }\n        else {\n          conditionResult = true;\n        }\n      }\n    }\n    else {\n      conditionResult = false;\n    }\n    if (conditionResult) {\n      FUN_080005f8(loopCounter,2);\n    }\n    else {\n      if ((((loopCounter < 0x3c) && ((&DAT_0800a908)[loopCounter] != -1)) &&\n          (functionResult = FUN_080036ac(), functionResult != 0)) &&\n         (functionResult = FUN_080036ac((int)(char)(&DAT_0800a908)[loopCounter]), functionResult != 1)) {\n        conditionResult = true;\n      }\n      if (conditionResult) {\n        FUN_080005f8(loopCounter,1);\n      }\n    }\n    (&DAT_200001f0)[loopCounter] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_variables_08000aec",
                "bVar1": "conditionResult",
                "iVar2": "functionResult",
                "uVar3": "loopCounter"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "process_data_08000be8",
            "code": "\nvoid processData_08000be8(int index,uint mask,int flag,undefined4 value)\n\n{\n  undefined1 *dataPtr1;\n  undefined1 *dataPtr2;\n  \n  dataPtr1 = &DAT_20000174;\n  dataPtr2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((flag != 0) ||\n     (dataPtr1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPtr2 != dataPtr1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPtr2,dataPtr1,value);\n    (&DAT_20000180)[index] = (char)dataPtr2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "flag",
                "param_4": "value",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_permissions_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configurePermissions_08000ef8(void)\n\n{\n  byte permissionFlag;\n  int result;\n  bool hasPermission;\n  byte permissionValue;\n  \n  permissionFlag = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionValue = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        permissionValue = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        permissionValue = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          permissionValue = 0;\n        }\n        else {\n          permissionValue = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x80;\n    }\n    FUN_08000be8(0,permissionValue);\n  }\n  permissionFlag = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionValue = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        permissionValue = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        permissionValue = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          permissionValue = 0;\n        }\n        else {\n          permissionValue = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x80;\n    }\n    FUN_08000be8(1,permissionValue,0);\n  }\n  permissionFlag = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionValue = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        permissionValue = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        permissionValue = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          permissionValue = 0;\n        }\n        else {\n          permissionValue = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x80;\n    }\n    FUN_08000be8(2,permissionValue,0);\n  }\n  permissionFlag = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionValue = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        permissionValue = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        permissionValue = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          permissionValue = 0;\n        }\n        else {\n          permissionValue = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x80;\n    }\n    FUN_08000be8(3,permissionValue,0);\n  }\n  permissionFlag = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      permissionValue = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        permissionValue = 0;\n      }\n      else if ((permissionFlag & 1) == 0) {\n        permissionValue = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          permissionValue = 0;\n        }\n        else {\n          permissionValue = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 2) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 4) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 8) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x10) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x20) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x40) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasPermission = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        hasPermission = false;\n      }\n      else if ((permissionFlag & 0x80) == 0) {\n        hasPermission = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          hasPermission = false;\n        }\n        else {\n          hasPermission = true;\n        }\n      }\n    }\n    if (hasPermission) {\n      permissionValue = permissionValue | 0x80;\n    }\n    FUN_08000be8(4,permissionValue,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_permissions_08000ef8",
                "bVar1": "permissionFlag",
                "iVar2": "result",
                "bVar3": "hasPermission",
                "bVar4": "permissionValue"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_firmware_08001b48",
            "code": "\nvoid initializeFirmware_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&LAB_080002ec_1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&LAB_08000c18_1);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&LAB_080001a8_1);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_firmware_08001b48"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint numBytes,int expectedNumBytes,undefined4 data)\n\n{\n  undefined receivedByte;\n  int actualNumBytes;\n  int receivedByteFlag;\n  bool isReceivedByte;\n  \n  if (numBytes == 0xffffffff) {\n    numBytes = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(numBytes & 0xff);\n    FUN_08002a58(&DAT_20000314,data);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedNumBytes);\n  actualNumBytes = FUN_0800270c(&DAT_20000314);\n  if (expectedNumBytes < actualNumBytes) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    actualNumBytes = FUN_0800270c(&DAT_20000314);\n    if (actualNumBytes < expectedNumBytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)numBytes;\n  actualNumBytes = 0;\n  while( true ) {\n    if (actualNumBytes < expectedNumBytes) {\n      receivedByteFlag = FUN_0800270c(&DAT_20000314);\n      if (receivedByteFlag == 0) {\n        isReceivedByte = false;\n      }\n      else {\n        isReceivedByte = true;\n      }\n    }\n    else {\n      isReceivedByte = false;\n    }\n    if (!isReceivedByte) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[actualNumBytes] = receivedByte;\n    actualNumBytes = actualNumBytes + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedNumBytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "numBytes",
                "param_3": "expectedNumBytes",
                "param_4": "data",
                "uVar1": "receivedByte",
                "iVar2": "actualNumBytes",
                "iVar3": "receivedByteFlag",
                "bVar4": "isReceivedByte"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 operation,int length,byte *data,undefined4 parameter)\n\n{\n  byte byteVar1;\n  byte byteVar2;\n  byte byteVar3;\n  undefined4 tempVar;\n  byte byteVar5;\n  char charVar;\n  int intVar1;\n  int intVar2;\n  uint uintVar1;\n  uint uintVar2;\n  int intVar3;\n  bool boolVar;\n  \n  switch(operation) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      uintVar2 = uintVar1 - 0x2e & 0xff;\n      if (uintVar2 < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          uintVar2 = 0x7f;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            uintVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uintVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uintVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uintVar1 - 0x2e & 0xff) < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          boolVar = false;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            boolVar = false;\n          }\n          else {\n            boolVar = true;\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a69c);\n              if (intVar1 == 0) {\n                intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byteVar1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byteVar1);\n      if (byteVar1 < 0x3c) {\n        tempVar = FUN_08002fa0(&DAT_200003d4,byteVar1);\n        FUN_08002f1e(&DAT_200003d4,tempVar);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        FUN_08002f1e(&DAT_200003d4,uintVar1 & 0x7f);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        if ((uintVar1 & 0xff80) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0x12) >> 0x19);\n        }\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n        if ((uintVar1 & 0xc000) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byteVar1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uintVar1 = (uint)data[1];\n      if (2 < length) {\n        uintVar1 = uintVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uintVar1 = uintVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uintVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uintVar1 = (uint)*data;\n      byteVar1 = data[1];\n      byteVar5 = data[2];\n      byteVar2 = data[3];\n      byteVar3 = data[4];\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        if ((byte)(&DAT_200001f0)[uintVar1] < 0xc) {\n          intVar1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uintVar1] * 3);\n        }\n        else {\n          intVar1 = 0;\n        }\n        if (intVar1 != 0) {\n          FUN_08000588(uintVar1);\n        }\n        FUN_08000500(uintVar1,(uint)byteVar1 + (uint)byteVar5 * 0x80,(uint)byteVar2 + (uint)byteVar3 * 0x80);\n        FUN_080005f8(uintVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byteVar1 = data[1];\n    byteVar5 = byteVar1 & 0x18;\n    if ((byteVar1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byteVar5,byteVar1,parameter);\n      return;\n    }\n    byteVar2 = *data;\n    boolVar = (byteVar1 & 0x40) == 0;\n    if (byteVar5 < 0x19) {\n      switch(byteVar5) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byteVar2);\n        for (uintVar1 = 2; (int)uintVar1 < length; uintVar1 = uintVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[uintVar1 + 1] * -0x80 + data[uintVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n          charVar = data[4] + data[5] * -0x80;\n        }\n        else {\n          charVar = data[2] + data[3] * -0x80;\n          intVar1 = -1;\n        }\n        FUN_08001c18(byteVar2,intVar1,charVar);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n            charVar = data[4] + data[5] * -0x80;\n          }\n          else {\n            charVar = data[2] + data[3] * -0x80;\n            intVar1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          intVar2 = (int)DAT_20000004;\n          intVar3 = intVar2 * 0xc;\n          (&DAT_20000188)[intVar3] = byteVar2;\n          (&DAT_2000018c)[intVar2 * 3] = intVar1;\n          (&DAT_20000190)[intVar3] = charVar;\n          (&DAT_20000191)[intVar3] = boolVar;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,boolVar,parameter);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uintVar1 = 0; intVar1 = DAT_20000004 + 1, (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (byteVar2 == (&DAT_20000188)[uintVar1 * 0xc]) goto LAB_08001e66;\n      }\n      uintVar1 = 0;\nLAB_08001e66:\n      for (; (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (uintVar1 < 8) {\n          intVar2 = (uintVar1 + 1) * 0xc;\n          intVar3 = uintVar1 * 0xc;\n          (&DAT_20000188)[intVar3] = (&DAT_20000188)[intVar2];\n          (&DAT_2000018c)[uintVar1 * 3] = (&DAT_2000018c)[(uintVar1 + 1) * 3];\n          (&DAT_20000190)[intVar3] = (&DAT_20000190)[intVar2];\n          (&DAT_20000191)[intVar3] = (&DAT_20000191)[intVar2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    intVar1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (intVar1 != 0)) {\n      DAT_2000012c = intVar1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "operation",
                "param_2": "length",
                "param_3": "data",
                "param_4": "parameter",
                "bVar1": "byteVar1",
                "bVar2": "byteVar2",
                "bVar3": "byteVar3",
                "uVar4": "tempVar",
                "bVar5": "byteVar5",
                "cVar6": "charVar",
                "iVar7": "intVar1",
                "iVar8": "intVar2",
                "uVar9": "uintVar1",
                "uVar10": "uintVar2",
                "iVar11": "intVar3",
                "bVar12": "boolVar"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool isValid;\n  int result;\n  undefined4 value;\n  uint outerLoopIndex;\n  uint innerLoopIndex;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (outerLoopIndex = 0; outerLoopIndex < 0x3c; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n      innerLoopIndex = outerLoopIndex - 0x2e & 0xff;\n      if (innerLoopIndex < 0xe) {\n        if (outerLoopIndex < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          if (outerLoopIndex < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,outerLoopIndex);\n            if (result == 2) {\n              isValid = true;\n            }\n            else {\n              isValid = false;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if ((isValid) && ((DAT_20000114 >> innerLoopIndex & 1U) != 0)) {\n        value = FUN_08008880(innerLoopIndex);\n        FUN_08002ef2(&DAT_200003d4,innerLoopIndex,value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (outerLoopIndex = 0; (int)outerLoopIndex < DAT_20000004 + 1; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n        result = outerLoopIndex * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[outerLoopIndex * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "iVar2": "result",
                "uVar3": "value",
                "uVar4": "outerLoopIndex",
                "uVar5": "innerLoopIndex",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_for_bit_flag_08002400",
            "code": "\nundefined4 check_for_bit_flag_08002400(int value)\n\n{\n  uint count;\n  \n  count = 0;\n  while( true ) {\n    if (0xb < count) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(value * 0xc + count) * 8] & 0x40) != 0) break;\n    count = count + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_for_bit_flag_08002400",
                "param_1": "value",
                "uVar1": "count"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socketDescriptor,undefined4 timeout,undefined4 bufferSize,undefined4 errorHandling)\n\n{\n  FUN_08007648(socketDescriptor,60000,0x5dc,&errorHandler,errorHandling);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socketDescriptor",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "errorHandling",
                "LAB_08002444_1": "errorHandler"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_system_08002578",
            "code": "\nvoid initialize_system_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_data_08002580",
            "code": "\nvoid initializeData_08002580(byte *dataPointer)\n\n{\n  char nextChar;\n  uint dataSize;\n  \n  dataSize = (uint)DAT_20000250;\n  if (0xb < dataSize) {\n    *dataPointer = 0xff;\n    return;\n  }\n  nextChar = DAT_20000250 + 1;\n  *dataPointer = DAT_20000250;\n  DAT_20000250 = nextChar;\n  *(undefined4 *)(&DAT_2000025c + dataSize * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "param_1": "dataPointer",
                "cVar1": "nextChar",
                "uVar2": "dataSize"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte updateData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint newValue;\n  uint currentValue;\n  uint divResult;\n  int tempVar;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    currentValue = (uint)*data;\n    newValue = (byte)(&DAT_20000258)[currentValue * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[currentValue * 8] = (char)newValue;\n    tempVar = -offset1 + 0x220;\n    if (tempVar < 0) {\n      tempVar = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(tempVar << 0x16) >> 0x18);\n    tempVar = -offset2 + 0x960;\n    if (tempVar < 0) {\n      tempVar = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(tempVar << 0x16) >> 0x18);\n    divResult = *data / 0xc;\n    tempVar = FUN_08002400(divResult,newValue,currentValue,(uint)*data * -0x55555555);\n    if (tempVar == 0) {\n      DAT_200002fc = (undefined)divResult;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "newValue",
                "uVar2": "currentValue",
                "uVar3": "divResult",
                "iVar4": "tempVar"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 screenWidth,undefined4 screenHeight,undefined4 bufferSize,undefined4 colorDepth)\n\n{\n  FUN_080025ac(screenWidth,screenHeight,0x220,0x960,colorDepth);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "screenWidth",
                "param_2": "screenHeight",
                "param_3": "bufferSize",
                "param_4": "colorDepth"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "process_data_08002644",
            "code": "\nvoid process_data_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte byteValue;\n  uint index;\n  int result;\n  \n  index = (uint)*data;\n  byteValue = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = byteValue & 0xbf;\n  result = FUN_08002400(index / 0xc,param2,byteValue & 0xbf,index * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "process_data_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteValue",
                "uVar2": "index",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_array_value_if_less_than12_0800267c",
            "code": "\nvoid updateArrayValueIfLessThan12_0800267c(byte *array,int value)\n\n{\n  int indexMultiplier;\n  \n  if (*array < 0xc) {\n    indexMultiplier = (0x88 - (char)array[1]) * 4;\n    if ((indexMultiplier - value == 0 || indexMultiplier < value) &&\n       (indexMultiplier = (600 - (char)array[2]) * 4,\n       value == indexMultiplier || value + (600 - (char)array[2]) * -4 < 0 != SBORROW4(value,indexMultiplier)))\n    {\n      indexMultiplier = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = indexMultiplier;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_array_value_if_less_than12_0800267c",
                "param_1": "array",
                "param_2": "value",
                "iVar1": "indexMultiplier"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "process_data_080026b0",
            "code": "\nvoid process_data_080026b0(int input_ptr,int input_val)\n\n{\n  if (input_val < 0x220) {\n    if (input_val < 0) {\n      input_val = 0;\n    }\n    else if (0xb4 < input_val) {\n      input_val = 0xb4;\n    }\n    input_val = FUN_08008ef4(input_val,0,0xb4,(0x88 - *(char *)(input_ptr + 1)) * 4,\n                           (600 - *(char *)(input_ptr + 2)) * 4);\n  }\n  FUN_0800267c(input_ptr,input_val);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "process_data_080026b0",
                "param_1": "input_ptr",
                "param_2": "input_val"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "fetch_bit_from_lookup_table_080026f8",
            "code": "\nuint fetch_bit_from_lookup_table_080026f8(byte *input_byte)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*input_byte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "fetch_bit_from_lookup_table_080026f8",
                "param_1": "input_byte"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "read_byte_from_memory_08002720",
            "code": "\nuint readByteFromMemory_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "read_byte_from_memory_08002720",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int input_address,undefined4 param_value,uint offset)\n\n{\n  int result;\n  uint new_offset;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(input_address + 0x14,param_value,offset & 0xffff);\n    if (result == 0) {\n      return offset;\n    }\n    return 0;\n  }\n  new_offset = DAT_200003b8 + offset;\n  if (DAT_200003c5 < new_offset) {\n    if (new_offset < 0x20) {\n      new_offset = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_offset);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_offset;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(input_address + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,param_value,offset);\n  DAT_200003b6 = DAT_200003b6 + (char)offset;\n  DAT_200003b8 = DAT_200003b6;\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "input_address",
                "param_2": "param_value",
                "param_3": "offset",
                "iVar1": "result",
                "uVar2": "new_offset"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "handle_data_0800288c",
            "code": "\nundefined4 handleData_0800288c(int dataPtr,undefined inputByte)\n\n{\n  undefined4 returnValue;\n  int result;\n  uint newSize;\n  undefined byteValue;\n  \n  byteValue = inputByte;\n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(dataPtr + 0x14,&byteValue,1);\n    if (result == 0) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(dataPtr + 4) = 1;\n      returnValue = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = byteValue;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      returnValue = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "handle_data_0800288c",
                "param_1": "dataPtr",
                "param_2": "inputByte",
                "uVar1": "returnValue",
                "iVar2": "result",
                "uVar3": "newSize",
                "local_11": "byteValue"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_function_0800291c",
            "code": "\nvoid initializeFunction_0800291c(undefined4 *functionParams)\n\n{\n  functionParams[1] = 0;\n  functionParams[2] = 1000;\n  *functionParams = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(functionParams + 0x1b) = 0x19;\n  *(undefined *)((int)functionParams + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_function_0800291c",
                "param_1": "functionParams"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "process_param_08002948",
            "code": "\nvoid process_param_08002948(int value_1,int value_2)\n\n{\n  if (value_1 != 1) {\n    return;\n  }\n  if (value_2 == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "process_param_08002948",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_data_08002968",
            "code": "\nvoid initializeData_08002968(int dataAddress,uint paramValue)\n\n{\n  int shiftedParam;\n  int resultAddress;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedParam = (paramValue & 0x7f) << 1;\n  *(char *)(dataAddress + 0x10) = (char)shiftedParam;\n  if (paramValue == 0x33) {\n    *(undefined *)(dataAddress + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(dataAddress + 0x11) = 0;\n  }\n  resultAddress = dataAddress + 0x14;\n  FUN_080077b0(resultAddress,100000,0x4000,shiftedParam,*(undefined *)(dataAddress + 0x11));\n  if (*(char *)(dataAddress + 0x11) == '\\0') {\n    FUN_08007f8e(resultAddress,&LAB_08002774_1);\n    FUN_08007f7c(resultAddress,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_data_08002968",
                "param_1": "dataAddress",
                "param_2": "paramValue",
                "iVar1": "shiftedParam",
                "iVar2": "resultAddress"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "call_another_function_08002a1c",
            "code": "\nvoid callAnotherFunction_08002a1c(undefined4 arg1,undefined arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002968(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "call_another_function_08002a1c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_communication_08002a26",
            "code": "\nvoid initializeCommunication_08002a26(undefined4 connectionStatus,undefined4 unused,undefined4 dataSize,undefined4 dataBuffer)\n\n{\n  FUN_08002a1c(connectionStatus,0x33,dataSize,dataBuffer,dataBuffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_communication_08002a26",
                "param_1": "connectionStatus",
                "param_2": "unused",
                "param_3": "dataSize",
                "param_4": "dataBuffer"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 undefinedParameter,int inputValue)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(inputValue << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "undefinedParameter",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int inputData)\n\n{\n  int result;\n  undefined4 statusCode;\n  \n  if (*(char *)(inputData + 0x11) == '\\0') {\n    statusCode = 4;\n  }\n  else {\n    result = FUN_08007e74(inputData + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      statusCode = 0;\n    }\n    else if (result == 1) {\n      statusCode = 1;\n    }\n    else {\n      statusCode = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return statusCode;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "statusCode"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "execute_function_08002ac0",
            "code": "\nvoid executeFunction_08002ac0(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  FUN_08002a58(input1,1,output1,output2,output2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "execute_function_08002ac0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_data_size_08002acc",
            "code": "\nvoid updateDataSize_08002acc(uint newSize,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 unusedParam3)\n\n{\n  if (DAT_200003c4 < newSize) {\n    if (newSize < 0x20) {\n      newSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,newSize,unusedParam2,(uint)DAT_200003c4,unusedParam3);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)newSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_data_size_08002acc",
                "param_1": "newSize",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "unusedParam3"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "process_input_08002b68",
            "code": "\nundefined4\nprocess_input_08002b68(undefined4 *input_data,uint input_length,undefined4 data_entry,uint data_size,byte byte_value)\n\n{\n  int result;\n  uint byte_count;\n  uint data_value;\n  \n  byte_count = (uint)byte_value;\n  if (*(char *)((int)input_data + 0x11) == '\\0') {\n    return 0;\n  }\n  data_value = data_size;\n  FUN_08002acc(data_entry);\n  if (DAT_200003c8 != 0) {\n    if (byte_count != 0) {\n      FUN_08002a30(input_data,input_length);\n      if (3 < byte_count) {\n        byte_count = 3;\n      }\n      while( true ) {\n        if (byte_count == 0) break;\n        (**(code **)*input_data)(input_data,data_size >> ((byte_count - 1 & 0x1f) << 3) & 0xff);\n        byte_count = byte_count - 1 & 0xff;\n      }\n      FUN_08002a58(input_data,0);\n    }\n    result = FUN_08007f0e(input_data + 5,(input_length & 0x7f) << 1,DAT_200003c8,data_entry,data_value);\n    if (result != 0) {\n      data_entry = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)data_entry;\n    return data_entry;\n  }\n  input_data[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "process_input_08002b68",
                "param_1": "input_data",
                "param_2": "input_length",
                "param_3": "data_entry",
                "param_4": "data_size",
                "param_5": "byte_value",
                "iVar1": "result",
                "uVar2": "byte_count",
                "uVar3": "data_value"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_application_08002c00",
            "code": "\nvoid initialize_application_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_application_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_application_08002c14",
            "code": "\nvoid initializeApplication_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_application_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_connection_08002c1e",
            "code": "\nvoid initializeConnection_08002c1e(undefined4 arg1,undefined4 arg2,undefined4 socketDescriptor,undefined4 buffer)\n\n{\n  FUN_08002948(1,0xffff,socketDescriptor,buffer,buffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_connection_08002c1e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "socketDescriptor",
                "param_4": "buffer"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_function_08002c2c",
            "code": "\nvoid executeCallbackFunction_08002c2c(undefined4 callbackFunction,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(param1,param2,param2,DAT_200005d4,param3);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_function_08002c2c",
                "param_1": "callbackFunction",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_function_08002ce0",
            "code": "\nint initializeFunction_08002ce0(int inputParam)\n\n{\n  int tempVar1;\n  \n  FUN_0800314e(inputParam + 0x40);\n  tempVar1 = inputParam + 0x44;\n  FUN_080032bc(tempVar1,inputParam,0x40);\n  *(undefined *)(inputParam + 0xc4) = 0;\n  *(undefined4 *)(inputParam + 200) = 0;\n  *(undefined *)(inputParam + 0x1f8) = 0;\n  FUN_08003306(tempVar1,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(tempVar1,0x90,&LAB_08002c40_1,0);\n  FUN_08003306(tempVar1,0xc0,&LAB_08002c7c_1,0);\n  FUN_08003306(tempVar1,0xd0,&LAB_08002c90_1,0);\n  FUN_08003306(tempVar1,0xf4,&LAB_08002c54_1,0);\n  FUN_08003306(tempVar1,0xf5,&LAB_08002c68_1,0);\n  FUN_08003366(tempVar1,0x71,&LAB_08002ca4_1,0);\n  FUN_08003370(tempVar1,0xf0,&LAB_08002cb8_1,0);\n  FUN_08003346(tempVar1,0x79,&LAB_08002e1a_1,inputParam);\n  FUN_08003350(tempVar1,0xf9,&LAB_08002dea_1,inputParam);\n  FUN_08003350(tempVar1,0xff,&LAB_08002cd0_1,0);\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_function_08002ce0",
                "param_1": "inputParam",
                "iVar1": "tempVar1"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_and_handle_special_case_08002dbc",
            "code": "\nvoid checkAndHandleSpecialCase_08002dbc(int inputValue,int specialValue)\n\n{\n  if (inputValue != 1) {\n    return;\n  }\n  if (specialValue == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_and_handle_special_case_08002dbc",
                "param_1": "inputValue",
                "param_2": "specialValue"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "copy_data_08002ddc",
            "code": "\nvoid copyData_08002ddc(int source,undefined4 offset,undefined4 length,undefined4 destination)\n\n{\n  FUN_0800322c(source + 0x40,2,5,destination,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "copy_data_08002ddc",
                "param_1": "source",
                "param_2": "offset",
                "param_3": "length",
                "param_4": "destination"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int input)\n\n{\n  undefined *dataPointer;\n  \n  if (*(byte *)(input + 0xc4) == 0) {\n    return;\n  }\n  dataPointer = *(undefined **)(input + 200);\n  FUN_080031ce(input + 0x40,*dataPointer,dataPointer[1],*(byte *)(input + 0xc4) - 2,dataPointer + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "input",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_data_08002e26",
            "code": "\nvoid updateData_08002e26(int dataAddress,undefined4 newData)\n\n{\n  *(undefined4 *)(dataAddress + 0xc0) = newData;\n  FUN_08003154(dataAddress + 0x40);\n  FUN_08002ddc(dataAddress);\n  FUN_08002df6(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_data_08002e26",
                "param_1": "dataAddress",
                "param_2": "newData"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "extract_and_process_filename_08002e44",
            "code": "\nvoid extractAndProcessFilename_08002e44(int outputBuffer,int inputBuffer,undefined undefined1,undefined undefined2)\n\n{\n  byte byteValue;\n  char charValue;\n  int fileExtension;\n  int separatorIndex;\n  undefined *resultPointer;\n  \n  fileExtension = FUN_080099a4(inputBuffer,\".cpp\");\n  separatorIndex = FUN_0800997e(inputBuffer,0x2f);\n  if (separatorIndex == 0) {\n    separatorIndex = FUN_0800997e(inputBuffer,0x5c);\n  }\n  if (separatorIndex != 0) {\n    inputBuffer = separatorIndex + 1;\n  }\n  if (fileExtension == 0) {\n    charValue = FUN_08000178(inputBuffer);\n    *(char *)(outputBuffer + 0xc4) = charValue + '\\x02';\n  }\n  else {\n    *(char *)(outputBuffer + 0xc4) = ((char)fileExtension - (char)inputBuffer) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(outputBuffer + 200));\n  byteValue = *(byte *)(outputBuffer + 0xc4);\n  resultPointer = (undefined *)FUN_08009190(byteValue + 1);\n  *(undefined **)(outputBuffer + 200) = resultPointer;\n  resultPointer[byteValue] = 0;\n  *resultPointer = undefined1;\n  resultPointer[1] = undefined2;\n  FUN_08009954(resultPointer + 2,inputBuffer,*(byte *)(outputBuffer + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "extract_and_process_filename_08002e44",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "undefined1",
                "param_4": "undefined2",
                "bVar1": "byteValue",
                "cVar2": "charValue",
                "iVar3": "fileExtension",
                "iVar4": "separatorIndex",
                "puVar5": "resultPointer"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_nested_function_08002ec4",
            "code": "\nvoid executeNestedFunction_08002ec4(int functionPointer)\n\n{\n  (**(code **)(**(int **)(functionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_nested_function_08002ec4",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "execute_process_08002ed2",
            "code": "\nvoid executeProcess_08002ed2(int processHandle)\n\n{\n  uint returnValue;\n  \n  returnValue = (**(code **)(**(int **)(processHandle + 0xc0) + 0xc))();\n  if (returnValue != 0xffffffff) {\n    FUN_08003474(processHandle + 0x44,returnValue & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "execute_process_08002ed2",
                "param_1": "processHandle",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "copy_buffer_to_file_08002ef2",
            "code": "\nvoid copyBufferToFile_08002ef2(int buffer,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_08003158(buffer + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "copy_buffer_to_file_08002ef2",
                "param_1": "buffer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "copy_data_08002efe",
            "code": "\nvoid copyData_08002efe(int srcData,undefined4 param1,undefined2 param2,undefined4 param3)\n\n{\n  FUN_0800319e(srcData + 0x40,param1,param2,param3,param3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "copy_data_08002efe",
                "param_1": "srcData",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_and_process_data_08002f0a",
            "code": "\nvoid initializeAndProcessData_08002f0a(int inputData)\n\n{\n  FUN_0800325a(inputData + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_and_process_data_08002f0a",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_module_08002f14",
            "code": "\nvoid initializeModule_08002f14(int moduleAddress)\n\n{\n  FUN_080032a2(moduleAddress + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_module_08002f14",
                "param_1": "moduleAddress"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_callback_08002f1e",
            "code": "\nvoid executeCallback_08002f1e(int callbackTable)\n\n{\n  (**(code **)**(undefined4 **)(callbackTable + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_callback_08002f1e",
                "param_1": "callbackTable"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_value_08002f2c",
            "code": "\nvoid updateDataValue_08002f2c(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 tempVar1;\n  \n  if (param2 == 0xd0) {\n    DAT_200005f0 = param3;\n    return;\n  }\n  if (0xd0 < param2) {\n    if (param2 == 0xf4) {\n      DAT_200005e0 = param3;\n      return;\n    }\n    tempVar1 = param3;\n    if ((param2 != 0xf5) && (tempVar1 = DAT_200005e4, param2 == 0xe0)) {\n      DAT_200005d4 = param3;\n      return;\n    }\n    DAT_200005e4 = tempVar1;\n    return;\n  }\n  if (param2 == 0x90) {\n    DAT_200005dc = param3;\n    return;\n  }\n  if (param2 != 0xc0) {\n    return;\n  }\n  DAT_200005ec = param3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_value_08002f2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "tempVar1"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_global_value_08002f84",
            "code": "\nvoid updateGlobalValue_08002f84(undefined4 valueToUpdate,int condition,undefined4 newValue)\n\n{\n  if (condition == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_global_value_08002f84",
                "param_1": "valueToUpdate",
                "param_2": "condition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "initialize_data_08002f94",
            "code": "\nvoid initializeData_08002f94(undefined4 dataAddress,undefined4 unusedParam,undefined4 newValue)\n\n{\n  DAT_200005d0 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "initialize_data_08002f94",
                "param_1": "dataAddress",
                "param_2": "unusedParam",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_byte_from_pointer_offset_08002fa0",
            "code": "\nundefined getByteFromPointerOffset_08002fa0(int offset,int pointer)\n\n{\n  return *(undefined *)(pointer + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_byte_from_pointer_offset_08002fa0",
                "param_1": "offset",
                "param_2": "pointer"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_character_byte_08002fa8",
            "code": "\nvoid updateCharacterByte_08002fa8(int characterPointer,int offset,undefined newValue)\n\n{\n  if (*(char *)(characterPointer + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(characterPointer + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_character_byte_08002fa8",
                "param_1": "characterPointer",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_value_from_offset_08002fba",
            "code": "\nundefined4 get_value_from_offset_08002fba(int base_address,int offset)\n\n{\n  return *(undefined4 *)(base_address + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_value_from_offset_08002fba",
                "param_1": "base_address",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_index_08002fc2",
            "code": "\nvoid storeValueAtIndex_08002fc2(int arrayBase,int index,undefined4 value)\n\n{\n  *(undefined4 *)(arrayBase + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_index_08002fc2",
                "param_1": "arrayBase",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "iterate_and_perform_actions_08002fca",
            "code": "\nvoid iterateAndPerformActions_08002fca(undefined4 count,undefined4 action,int limit,undefined4 value1,\n                 undefined4 value2)\n\n{\n  uint iterationCount;\n  \n  for (iterationCount = 0; (int)iterationCount < limit; iterationCount = iterationCount + 1 & 0xff) {\n    FUNC_08008ac4(value2);\n    FUN_08008a24(action,1);\n    FUNC_08008ac4(value1);\n    FUN_08008a24(action,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "iterate_and_perform_actions_08002fca",
                "param_1": "count",
                "param_2": "action",
                "param_3": "limit",
                "param_4": "value1",
                "param_5": "value2",
                "uVar1": "iterationCount"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_function_08003002",
            "code": "\nvoid checkAndExecuteFunction_08003002(int arg)\n\n{\n  if (*(char *)(arg + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(arg,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(arg,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_function_08003002",
                "param_1": "arg"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08008c44(&DAT_20000700,param2,6,param4,param4);\n  FUN_08003002(param1);\n  FUN_08002e26(param1,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_data_0800307a",
            "code": "\nvoid decodeData_0800307a(undefined4 *ptrOutput,uint numInputBytes,byte *ptrInput,uint numOutputBytes)\n\n{\n  uint currentByte;\n  uint currentBit;\n  uint outputByteCount;\n  uint inputByteCount;\n  \n  currentByte = (uint)*ptrInput;\n  if (numOutputBytes == 0) {\n    numOutputBytes = 0xffffffff;\n  }\n  inputByteCount = 0;\n  currentBit = 0;\n  outputByteCount = 0;\n  while ((inputByteCount < numInputBytes && (outputByteCount < numOutputBytes))) {\n    (***(code ***)(undefined4 *)*ptrOutput)\n              ((undefined4 *)*ptrOutput,((uint)ptrInput[inputByteCount] << (currentBit & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)ptrInput[inputByteCount] >> (7 - currentBit & 0xff) & 0xff;\n    currentBit = currentBit + 1;\n    while ((outputByteCount = outputByteCount + 1, 6 < currentBit && (outputByteCount < numOutputBytes))) {\n      (***(code ***)(undefined4 *)*ptrOutput)((undefined4 *)*ptrOutput,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      currentBit = currentBit - 7;\n    }\n    inputByteCount = inputByteCount + 1;\n  }\n  if ((currentBit != 0) && (outputByteCount < numOutputBytes)) {\n    (***(code ***)(undefined4 *)*ptrOutput)((undefined4 *)*ptrOutput,(1 << (currentBit & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_data_0800307a",
                "param_1": "ptrOutput",
                "param_2": "numInputBytes",
                "param_3": "ptrInput",
                "param_4": "numOutputBytes",
                "uVar1": "currentByte",
                "uVar2": "currentBit",
                "uVar3": "outputByteCount",
                "uVar4": "inputByteCount"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_reverse_function_08003106",
            "code": "\nvoid executeReverseFunction_08003106(undefined4 *functionPtr,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 *functionPtrValue;\n  \n  functionPtrValue = (undefined4 *)*functionPtr;\n  if (functionPtrValue != (undefined4 *)0x0) {\n    (**(code **)*functionPtrValue)(functionPtrValue,0xf0);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,0x6f);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,value1);\n    FUN_0800307a(functionPtr,value2,value3,value2);\n    (***(code ***)(undefined4 *)*functionPtr)((undefined4 *)*functionPtr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_reverse_function_08003106",
                "param_1": "functionPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "functionPtrValue"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_variable_0800314e",
            "code": "\nvoid initializeVariable_0800314e(undefined4 *outputVariable)\n\n{\n  *outputVariable = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_variable_0800314e",
                "param_1": "outputVariable"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_value_08003154",
            "code": "\nvoid copyValue_08003154(undefined4 *destination,undefined4 source)\n\n{\n  *destination = source;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_value_08003154",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionPointer,uint flag,ushort value)\n\n{\n  undefined4 *pointer;\n  ushort localValue;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    localValue = value;\n    if (((int)flag < 0x10) && (value < 0x4000)) {\n      (**(code **)*pointer)(pointer,flag | 0xe0);\n      FUN_0800307a(functionPointer,2,&localValue);\n    }\n    else {\n      FUN_08003106(functionPointer,flag,2,&localValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionPointer",
                "param_2": "flag",
                "param_3": "value",
                "puVar1": "pointer",
                "local_a": "localValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_0800319e",
            "code": "\nvoid executeFunction_0800319e(undefined4 *functionPointer,uint mask,undefined2 value)\n\n{\n  undefined4 *functionAddress;\n  undefined2 newValue;\n  \n  functionAddress = (undefined4 *)*functionPointer;\n  if (functionAddress != (undefined4 *)0x0) {\n    newValue = value;\n    (**(code **)*functionAddress)(functionAddress,mask & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&newValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_0800319e",
                "param_1": "functionPointer",
                "param_2": "mask",
                "param_3": "value",
                "puVar1": "functionAddress",
                "local_a": "newValue"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid executeFunction_080031ce(undefined4 *functionPointer,undefined4 param2,undefined4 param3,uint numIterations,int startValue\n                 )\n\n{\n  undefined4 *ptrToFunction;\n  uint iterationCount;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0,param3,*(code **)*ptrToFunction,numIterations);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x79);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param3);\n    for (iterationCount = 0; iterationCount < numIterations; iterationCount = iterationCount + 1) {\n      FUN_0800307a(functionPointer,1,startValue + iterationCount,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "numIterations",
                "param_5": "startValue",
                "puVar1": "ptrToFunction",
                "uVar2": "iterationCount"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 argument1,undefined4 argument2)\n\n{\n  undefined4 *functionPtr;\n  \n  functionPtr = (undefined4 *)*functionPointer;\n  if (functionPtr != (undefined4 *)0x0) {\n    (**(code **)*functionPtr)(functionPtr,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,argument1);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,argument2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "param_2": "argument1",
                "param_3": "argument2",
                "puVar1": "functionPtr"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid executeFunction_0800325a(undefined4 *functionPointer,undefined4 paramValue,uint numIterations,int startValue)\n\n{\n  undefined4 *ptrToFunction;\n  uint iterationCount;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,paramValue);\n    for (iterationCount = 0; iterationCount < numIterations; iterationCount = iterationCount + 1) {\n      FUN_0800307a(functionPointer,1,startValue + iterationCount,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "functionPointer",
                "param_2": "paramValue",
                "param_3": "numIterations",
                "param_4": "startValue",
                "puVar1": "ptrToFunction",
                "uVar2": "iterationCount"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "execute_command_080032a2",
            "code": "\nvoid execute_command_080032a2(undefined4 command_param_1,undefined4 command_param_2,undefined4 command_param_3,undefined4 command_param_4)\n\n{\n  undefined4 result_1;\n  \n  result_1 = FUN_08000178(command_param_2);\n  FUN_0800325a(command_param_1,0x71,result_1,command_param_2,command_param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "execute_command_080032a2",
                "param_1": "command_param_1",
                "param_2": "command_param_2",
                "param_3": "command_param_3",
                "param_4": "command_param_4",
                "uVar1": "result_1"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_struct_080032bc",
            "code": "\nvoid initializeStruct_080032bc(int structAddress,int paramValue,undefined4 paramValue2)\n\n{\n  *(int *)(structAddress + 4) = paramValue;\n  *(undefined4 *)(structAddress + 8) = paramValue2;\n  *(undefined *)(structAddress + 0xc) = 0;\n  *(undefined *)(structAddress + 0xd) = 0;\n  *(undefined4 *)(structAddress + 0x10) = 0;\n  *(undefined *)(structAddress + 0x14) = 0;\n  *(undefined4 *)(structAddress + 0x18) = 0;\n  *(undefined4 *)(structAddress + 0x1c) = 0;\n  *(undefined4 *)(structAddress + 0x20) = 0;\n  *(undefined4 *)(structAddress + 0x24) = 0;\n  *(undefined4 *)(structAddress + 0x28) = 0;\n  *(undefined4 *)(structAddress + 0x2c) = 0;\n  *(undefined4 *)(structAddress + 0x30) = 0;\n  *(undefined4 *)(structAddress + 0x34) = 0;\n  *(undefined4 *)(structAddress + 0x38) = 0;\n  *(undefined4 *)(structAddress + 0x3c) = 0;\n  *(undefined4 *)(structAddress + 0x40) = 0;\n  *(undefined4 *)(structAddress + 0x44) = 0;\n  *(undefined4 *)(structAddress + 0x48) = 0;\n  *(undefined4 *)(structAddress + 0x4c) = 0;\n  *(undefined4 *)(structAddress + 0x50) = 0;\n  *(undefined4 *)(structAddress + 0x54) = 0;\n  *(undefined4 *)(structAddress + 0x58) = 0;\n  *(undefined4 *)(structAddress + 0x5c) = 0;\n  *(undefined4 *)(structAddress + 0x60) = 0;\n  *(undefined4 *)(structAddress + 100) = 0;\n  *(undefined4 *)(structAddress + 0x68) = 0;\n  *(undefined4 *)(structAddress + 0x6c) = 0;\n  *(undefined4 *)(structAddress + 0x70) = 0;\n  *(undefined4 *)(structAddress + 0x74) = 0;\n  *(undefined4 *)(structAddress + 0x78) = 0;\n  *(bool *)structAddress = paramValue == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_struct_080032bc",
                "param_1": "structAddress",
                "param_2": "paramValue",
                "param_3": "paramValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_param_values_08003306",
            "code": "\nvoid updateParamValues_08003306(int baseAddress,uint paramValue,undefined4 value1,undefined4 value2)\n\n{\n  if (paramValue == 0xd0) {\n    *(undefined4 *)(baseAddress + 0x58) = value1;\n    *(undefined4 *)(baseAddress + 0x28) = value2;\n    return;\n  }\n  if (0xd0 < paramValue) {\n    if (paramValue == 0xf4) {\n      *(undefined4 *)(baseAddress + 0x5c) = value1;\n      *(undefined4 *)(baseAddress + 0x2c) = value2;\n      return;\n    }\n    if (paramValue == 0xf5) {\n      *(undefined4 *)(baseAddress + 0x60) = value1;\n      *(undefined4 *)(baseAddress + 0x30) = value2;\n    }\n    else if (paramValue == 0xe0) {\n      *(undefined4 *)(baseAddress + 0x4c) = value1;\n      *(undefined4 *)(baseAddress + 0x1c) = value2;\n      return;\n    }\n    return;\n  }\n  if (paramValue == 0x90) {\n    *(undefined4 *)(baseAddress + 0x50) = value1;\n    *(undefined4 *)(baseAddress + 0x20) = value2;\n    return;\n  }\n  if (paramValue == 0xc0) {\n    *(undefined4 *)(baseAddress + 0x54) = value1;\n    *(undefined4 *)(baseAddress + 0x24) = value2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_param_values_08003306",
                "param_1": "baseAddress",
                "param_2": "paramValue",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_values_08003346",
            "code": "\nvoid updateValues_08003346(int baseAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(baseAddress + 0x70) = newValue1;\n    *(undefined4 *)(baseAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_values_08003346",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_parameters_08003350",
            "code": "\nvoid updateParameters_08003350(int baseAddress,int value,undefined4 newParam1,undefined4 newParam2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(baseAddress + 0x74) = newParam1;\n    *(undefined4 *)(baseAddress + 0x38) = newParam2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(baseAddress + 0x78) = newParam1;\n  *(undefined4 *)(baseAddress + 0x48) = newParam2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_parameters_08003350",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newParam1",
                "param_4": "newParam2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_data_08003366",
            "code": "\nvoid updateData_08003366(int baseAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(baseAddress + 0x68) = newValue1;\n    *(undefined4 *)(baseAddress + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_data_08003366",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int objectAddress,undefined4 param2,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(objectAddress + 0x6c) = value1;\n  *(undefined4 *)(objectAddress + 0x44) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "objectAddress",
                "param_2": "param2",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "copy_data_with_condition_08003376",
            "code": "\nvoid copyDataWithCondition_08003376(undefined *data,undefined value,uint index)\n\n{\n  bool conditionMet;\n  \n  if (index < *(uint *)(data + 8)) {\n    conditionMet = false;\n  }\n  else {\n    conditionMet = true;\n    if (*(code **)(data + 100) != (code *)0x0) {\n      *data = 1;\n      (**(code **)(data + 100))(*(undefined4 *)(data + 0x3c));\n      if (index < *(uint *)(data + 8)) {\n        conditionMet = false;\n      }\n      else {\n        conditionMet = true;\n      }\n    }\n  }\n  if (!conditionMet) {\n    *(undefined *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "copy_data_with_condition_08003376",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "conditionMet"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bytes_080033a8",
            "code": "\nvoid copyAndShiftBytes_080033a8(undefined4 srcPtr,uint numBytes,int destPtr)\n\n{\n  byte currByte;\n  int destIndex;\n  uint srcIndex;\n  \n  destIndex = 0;\n  for (srcIndex = 0; srcIndex < numBytes; srcIndex = srcIndex + 2) {\n    currByte = *(byte *)(destPtr + srcIndex);\n    *(byte *)(destPtr + destIndex) = currByte;\n    *(byte *)(destPtr + destIndex) = *(char *)(destPtr + srcIndex + 1) << 7 | currByte;\n    destIndex = destIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bytes_080033a8",
                "param_1": "srcPtr",
                "param_2": "numBytes",
                "param_3": "destPtr",
                "bVar1": "currByte",
                "iVar2": "destIndex",
                "uVar3": "srcIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int length;\n  char *ptrChar;\n  \n  ptrChar = *(char **)(inputData + 4);\n  firstChar = *ptrChar;\n  if (firstChar == 'q') {\n    if (*(int *)(inputData + 0x68) != 0) {\n      length = FUN_080033a8(inputData,*(int *)(inputData + 0x18) + -1,ptrChar + 1,ptrChar,param4);\n      FUN_08003376(inputData,0,length + 1);\n      (**(code **)(inputData + 0x68))(*(undefined4 *)(inputData + 0x40),*(int *)(inputData + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputData + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputData + 0x18) < 3) {\n        (**(code **)(inputData + 0x70))(*(undefined4 *)(inputData + 0x34),0,0);\n        return;\n      }\n      length = FUN_080033a8(inputData,*(uint *)(inputData + 0x18) - 3,ptrChar + 3,ptrChar,param4);\n      FUN_08003376(inputData,0,length + 3);\n      length = *(int *)(inputData + 4);\n      (**(code **)(inputData + 0x70))\n                (*(undefined4 *)(inputData + 0x34),*(undefined *)(length + 1),*(undefined *)(length + 2)\n                 ,length + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputData + 0x6c) != (code *)0x0) {\n    (**(code **)(inputData + 0x6c))\n              (*(undefined4 *)(inputData + 0x44),firstChar,*(int *)(inputData + 0x18) + -1,ptrChar + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "length",
                "pcVar3": "ptrChar"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_function_0800344a",
            "code": "\nvoid initializeFunction_0800344a(int functionData)\n\n{\n  uint index;\n  \n  *(undefined4 *)(functionData + 0x10) = 0;\n  *(undefined *)(functionData + 0xc) = 0;\n  *(undefined *)(functionData + 0xd) = 0;\n  for (index = 0; index < *(uint *)(functionData + 8); index = index + 1) {\n    *(undefined *)(*(int *)(functionData + 4) + index) = 0;\n  }\n  *(undefined *)(functionData + 0x14) = 0;\n  *(undefined4 *)(functionData + 0x18) = 0;\n  if (*(code **)(functionData + 0x78) != (code *)0x0) {\n    (**(code **)(functionData + 0x78))(*(undefined4 *)(functionData + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_function_0800344a",
                "param_1": "functionData",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_data_08003474",
            "code": "\nvoid processData_08003474(int data_ptr,uint value)\n\n{\n  byte temp;\n  \n  if (*(char *)(data_ptr + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(data_ptr,value,*(undefined4 *)(data_ptr + 0x18));\n      *(int *)(data_ptr + 0x18) = *(int *)(data_ptr + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data_ptr + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(data_ptr + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(data_ptr + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(data_ptr + 0x14) = 1;\n      *(undefined4 *)(data_ptr + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data_ptr + 0x10) = 2;\n        *(char *)(data_ptr + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(data_ptr + 0x10) = 1;\n      *(char *)(data_ptr + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(data_ptr);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(data_ptr + 0x74) != (code *)0x0) {\n      (**(code **)(data_ptr + 0x74))(*(undefined4 *)(data_ptr + 0x38));\n    }\n  }\n  else {\n    *(int *)(data_ptr + 0x10) = *(int *)(data_ptr + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(data_ptr + 0x10) == 0) && (temp = *(byte *)(data_ptr + 0xc), temp != 0)) {\n      if (temp == 0xd0) {\n        if (*(code **)(data_ptr + 0x58) != (code *)0x0) {\n          (**(code **)(data_ptr + 0x58))\n                    (*(undefined4 *)(data_ptr + 0x28),*(undefined *)(data_ptr + 0xd),\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (temp < 0xd1) {\n        if (temp == 0x90) {\n          if (*(code **)(data_ptr + 0x50) != (code *)0x0) {\n            (**(code **)(data_ptr + 0x50))\n                      (*(undefined4 *)(data_ptr + 0x20),*(undefined *)(data_ptr + 0xd),\n                       (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n          }\n        }\n        else if ((temp == 0xc0) && (*(code **)(data_ptr + 0x54) != (code *)0x0)) {\n          (**(code **)(data_ptr + 0x54))\n                    (*(undefined4 *)(data_ptr + 0x24),*(undefined *)(data_ptr + 0xd),\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (temp == 0xf4) {\n        if (*(code **)(data_ptr + 0x5c) != (code *)0x0) {\n          (**(code **)(data_ptr + 0x5c))\n                    (*(undefined4 *)(data_ptr + 0x2c),(*(undefined **)(data_ptr + 4))[1],\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if (temp == 0xf5) {\n        if (*(code **)(data_ptr + 0x60) != (code *)0x0) {\n          (**(code **)(data_ptr + 0x60))\n                    (*(undefined4 *)(data_ptr + 0x30),(*(undefined **)(data_ptr + 4))[1],\n                     **(undefined **)(data_ptr + 4));\n        }\n      }\n      else if ((temp == 0xe0) && (*(code **)(data_ptr + 0x4c) != (code *)0x0)) {\n        (**(code **)(data_ptr + 0x4c))\n                  (*(undefined4 *)(data_ptr + 0x1c),*(undefined *)(data_ptr + 0xd),\n                   (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n      }\n      *(undefined *)(data_ptr + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "data_ptr",
                "param_2": "value",
                "bVar1": "temp"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_board_080035b8",
            "code": "\nvoid initializeBoard_080035b8(void)\n\n{\n  int result;\n  uint uVar2;\n  undefined4 uartPinModes [2];\n  undefined4 uartPinMode;\n  undefined4 gpioPinResistors;\n  undefined4 gpioPinResistor;\n  undefined4 gpioPinResistorType;\n  undefined4 gpioPinResistorValue;\n  undefined4 gpioPinResistorConfig;\n  undefined4 gpioPinModes [4];\n  undefined4 gpioPinMode;\n  undefined4 gpioPinOutputType;\n  undefined4 gpioOutputSpeed;\n  undefined4 gpioPullUpDown;\n  undefined4 gpioAlternateFunction;\n  \n  gpioPinModes[0] = 2;\n  gpioPinMode = 1;\n  gpioPinOutputType = 0x10;\n  gpioOutputSpeed = 2;\n  gpioPullUpDown = 0;\n  gpioAlternateFunction = 0x380000;\n  result = FUN_08005460(gpioPinModes);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  gpioPinResistors = 0xf;\n  gpioPinResistor = 2;\n  gpioPinResistorType = 0;\n  gpioPinResistorValue = 0x400;\n  gpioPinResistorConfig = 0;\n  result = FUN_080058ac(&gpioPinResistors);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  uartPinModes[0] = 2;\n  uartPinMode = 0x8000;\n  result = FUN_08005aa4(uartPinModes);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = FUN_08005a1c();\n  FUN_08003fd8(uVar2 / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_board_080035b8",
                "local_30": "gpioPinModes",
                "local_20": "gpioPinMode",
                "local_1c": "gpioPinOutputType",
                "local_14": "gpioOutputSpeed",
                "local_10": "gpioPullUpDown",
                "local_c": "gpioAlternateFunction",
                "iVar1": "result",
                "local_44": "gpioPinResistors",
                "local_40": "gpioPinResistor",
                "local_3c": "gpioPinResistorType",
                "local_38": "gpioPinResistorValue",
                "local_34": "gpioPinResistorConfig",
                "local_54": "uartPinModes",
                "local_4c": "uartPinMode"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_application_080036a2",
            "code": "\nvoid initialize_application_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_application_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_matching_index_080036ac",
            "code": "\nuint findMatchingIndex_080036ac(int inputValue)\n\n{\n  uint matchIndex;\n  \n  if ((uint)(inputValue << 0x18) >> 0x1c < 5) {\n    for (matchIndex = 0; (matchIndex < 0x3c && (inputValue != (char)(&DAT_0800a908)[matchIndex])); matchIndex = matchIndex + 1)\n    {\n    }\n  }\n  else {\n    matchIndex = 0xffffffff;\n  }\n  return matchIndex;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_matching_index_080036ac",
                "param_1": "inputValue",
                "uVar1": "matchIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_set_param_080036d8",
            "code": "\nundefined4 checkAndSetParam_080036d8(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputParam,0);\n  DAT_20000010 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_set_param_080036d8",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "update_memory_flag_and_execute_08003724",
            "code": "\n\n\nundefined4 updateMemoryFlagAndExecute_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "update_memory_flag_and_execute_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "update_sum_08003748",
            "code": "\nvoid update_sum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "update_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_from_memory_08003760",
            "code": "\nundefined4 get_data_from_memory_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_from_memory_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "calculate_execution_status_0800376c",
            "code": "\nundefined4 calculateExecutionStatus_0800376c(uint **executionParameters,uint maxExecutionTime)\n\n{\n  int initialTime;\n  uint randomValue;\n  int temporaryValue;\n  undefined4 status;\n  uint *executionState;\n  uint timeThreshold;\n  uint iterationCount;\n  \n  iterationCount = 0;\n  initialTime = FUN_08003760();\n  timeThreshold = DAT_20000018;\n  executionState = *executionParameters;\n  if ((executionState[2] & 0x100) == 0) {\n    if (((executionState[1] & 0x100) == 0) && ((executionState[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**executionParameters & 2) != 0) goto LAB_0800387e;\n      } while ((maxExecutionTime == 0xffffffff) ||\n              ((maxExecutionTime != 0 && (temporaryValue = FUN_08003760(), (uint)(temporaryValue - initialTime) <= maxExecutionTime))));\n      executionParameters[10] = (uint *)((uint)executionParameters[10] | 4);\n      *(undefined *)(executionParameters + 9) = 0;\n      status = 3;\n    }\n    else {\n      randomValue = FUN_08005bb8(2);\n      executionState = *executionParameters;\n      if (((executionState[4] & 0x24924924) == 0) && ((executionState[3] & 0x924924) == 0)) {\n        if ((executionState[4] & 0x12492492) == 0) {\n          if ((executionState[3] & 0x492492) == 0) {\n            temporaryValue = 0x14;\n          }\n          else {\n            temporaryValue = 0x29;\n          }\n        }\n        else {\n          temporaryValue = 0x29;\n        }\n      }\n      else if (((executionState[4] & 0x12492492) == 0) && ((executionState[3] & 0x492492) == 0)) {\n        temporaryValue = 0x54;\n      }\n      else if ((executionState[4] & 0x249249) == 0) {\n        if ((executionState[3] & 0x249249) == 0) {\n          temporaryValue = 0x54;\n        }\n        else {\n          temporaryValue = 0xfc;\n        }\n      }\n      else {\n        temporaryValue = 0xfc;\n      }\n      timeThreshold = (timeThreshold / randomValue) * temporaryValue;\n      for (; iterationCount <= timeThreshold && timeThreshold - iterationCount != 0; iterationCount = iterationCount + 1) {\n        if ((maxExecutionTime != 0xffffffff) &&\n           ((maxExecutionTime == 0 || (temporaryValue = FUN_08003760(), maxExecutionTime < (uint)(temporaryValue - initialTime))))) {\n          executionParameters[10] = (uint *)((uint)executionParameters[10] | 4);\n          *(undefined *)(executionParameters + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **executionParameters = 0xffffffed;\n      executionParameters[10] = (uint *)((uint)executionParameters[10] | 0x200);\n      if (((*executionParameters)[2] & 0xe0000) == 0xe0000) {\n        if (executionParameters[3] == (uint *)0x0) {\n          executionParameters[10] = (uint *)((uint)executionParameters[10] & 0xfffffeff);\n          if (((uint)executionParameters[10] & 0x1000) == 0) {\n            executionParameters[10] = (uint *)((uint)executionParameters[10] | 1);\n            status = 0;\n          }\n          else {\n            status = 0;\n          }\n        }\n        else {\n          status = 0;\n        }\n      }\n      else {\n        status = 0;\n      }\n    }\n  }\n  else {\n    executionParameters[10] = (uint *)((uint)executionParameters[10] | 0x20);\n    *(undefined *)(executionParameters + 9) = 0;\n    status = 1;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "calculate_execution_status_0800376c",
                "param_1": "executionParameters",
                "param_2": "maxExecutionTime",
                "iVar1": "initialTime",
                "uVar2": "randomValue",
                "iVar3": "temporaryValue",
                "uVar4": "status",
                "puVar5": "executionState",
                "uVar6": "timeThreshold",
                "local_1c": "iterationCount"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *inputPointer)\n\n{\n  return *(undefined4 *)(*inputPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_registers_080038e4",
            "code": "\nundefined4 updateRegisters_080038e4(int *registers,uint *values)\n\n{\n  undefined4 result;\n  uint value;\n  int count;\n  \n  if (*(char *)(registers + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(registers + 9) = 1;\n    value = values[1];\n    if (value < 7) {\n      value = value * 5 - 5;\n      *(uint *)(*registers + 0x34) =\n           *values << (value & 0xff) | *(uint *)(*registers + 0x34) & ~(0x1f << (value & 0xff));\n    }\n    else if (value < 0xd) {\n      value = value * 5 - 0x23;\n      *(uint *)(*registers + 0x30) =\n           *values << (value & 0xff) | *(uint *)(*registers + 0x30) & ~(0x1f << (value & 0xff));\n    }\n    else {\n      value = value * 5 - 0x41;\n      *(uint *)(*registers + 0x2c) =\n           *values << (value & 0xff) | *(uint *)(*registers + 0x2c) & ~(0x1f << (value & 0xff));\n    }\n    value = *values;\n    if (value < 10) {\n      *(uint *)(*registers + 0x10) =\n           values[2] << (value * 3 & 0xff) |\n           *(uint *)(*registers + 0x10) & ~(7 << (value * 3 & 0xff));\n    }\n    else {\n      value = value * 3 - 0x1e;\n      *(uint *)(*registers + 0xc) =\n           values[2] << (value & 0xff) | *(uint *)(*registers + 0xc) & ~(7 << (value & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*registers == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (count = (DAT_20000018 / 1000000) * 10; count != 0; count = count + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        registers[10] = registers[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(registers + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_registers_080038e4",
                "param_1": "registers",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "value",
                "local_c": "count"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_value_from_offset_08003a1c",
            "code": "\nundefined4 get_value_from_offset_08003a1c(int base_address)\n\n{\n  return *(undefined4 *)(base_address + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_value_from_offset_08003a1c",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "initialize_and_check_flags_08003a20",
            "code": "\nundefined4 initializeAndCheckFlags_08003a20(int *data,undefined4 param)\n\n{\n  int result;\n  undefined4 returnValue;\n  int dataValue;\n  uint loopCounter;\n  \n  dataValue = *data;\n  if ((*(uint *)(dataValue + 8) & 1) == 0) {\n    *(uint *)(dataValue + 8) = *(uint *)(dataValue + 8) | 1;\n    for (loopCounter = DAT_20000018 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    dataValue = FUN_08003760(data,param,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - dataValue) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "initialize_and_check_flags_08003a20",
                "param_1": "data",
                "param_2": "param",
                "iVar1": "result",
                "iVar3": "dataValue",
                "uVar2": "returnValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "check_and_modify_values_08003aa0",
            "code": "\n\n\nint check_and_modify_values_08003aa0(int *param_array)\n\n{\n  int result;\n  undefined4 *ptr1;\n  int ptr2;\n  \n  if (*(char *)(param_array + 9) != '\\x01') {\n    *(undefined *)(param_array + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      param_array[10] = param_array[10] & 0xfffffcfeU | 0x100;\n      ptr1 = (undefined4 *)*param_array;\n      if ((ptr1 == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        param_array[10] = param_array[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          param_array[10] = param_array[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        param_array[10] = param_array[10] & 0xffefffff;\n        if ((ptr1[1] & 0x400) != 0) {\n          param_array[10] = param_array[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((param_array[10] & 0x1000U) == 0) {\n        param_array[0xb] = 0;\n      }\n      else {\n        param_array[0xb] = param_array[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(param_array + 9) = 0;\n      *ptr1 = 0xfffffffd;\n      ptr2 = *param_array;\n      if (((*(uint *)(ptr2 + 8) & 0xe0000) == 0xe0000) &&\n         ((ptr2 != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(ptr2 + 8) = *(uint *)(ptr2 + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(ptr2 + 8) = *(uint *)(ptr2 + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(param_array + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "check_and_modify_values_08003aa0",
                "param_1": "param_array",
                "iVar1": "result",
                "puVar2": "ptr1",
                "iVar3": "ptr2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_update_flags_08003b8c",
            "code": "\nundefined4 checkAndUpdateFlags_08003b8c(int *inputArray)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *inputArray;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08003760();\n  do {\n    if ((*(uint *)(*inputArray + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08003760();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  inputArray[10] = inputArray[10] | 0x10;\n  inputArray[0xb] = inputArray[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_update_flags_08003b8c",
                "param_1": "inputArray",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "verify_configuration_08003bd8",
            "code": "\nundefined4 verify_configuration_08003bd8(int *config_array)\n\n{\n  int result;\n  uint flags;\n  uint condition;\n  \n  if (config_array == (int *)0x0) {\n    return 1;\n  }\n  if (config_array[10] == 0) {\n    config_array[0xb] = 0;\n    *(undefined *)(config_array + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(config_array);\n  if (((config_array[10] & 0x10U) == 0) && (result == 0)) {\n    config_array[10] = config_array[10] & FLAG_MASK | 2;\n    flags = config_array[1] | config_array[7] | config_array[3] << 1;\n    if (config_array[2] == 0x100) {\n      condition = 0x100;\n    }\n    else {\n      condition = 0;\n      if (config_array[2] == 1) {\n        condition = 0x100;\n      }\n    }\n    if (config_array[5] == 1) {\n      if (config_array[3] == 0) {\n        condition = condition | (config_array[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        config_array[10] = config_array[10] | 0x20;\n        config_array[0xb] = config_array[0xb] | 1;\n      }\n    }\n    *(uint *)(*config_array + 4) = condition | *(uint *)(*config_array + 4) & 0xffff16ff;\n    *(uint *)(*config_array + 8) = *(uint *)(*config_array + 8) & 0xffe1f7fd | flags;\n    if ((config_array[2] == 0x100) || (config_array[2] == 1)) {\n      condition = (config_array[4] + -1) * 0x100000;\n    }\n    else {\n      condition = 0;\n    }\n    *(uint *)(*config_array + 0x2c) = condition | *(uint *)(*config_array + 0x2c) & 0xff0fffff;\n    if (flags != (*(uint *)(*config_array + 8) & 0xff1f0efe)) {\n      config_array[10] = config_array[10] & FLAG_ERROR_MASK | 0x10;\n      config_array[0xb] = config_array[0xb] | 1;\n      return 1;\n    }\n    config_array[0xb] = 0;\n    config_array[10] = config_array[10] & FLAG_RESET_MASK | 1;\n    return 0;\n  }\n  config_array[10] = config_array[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "verify_configuration_08003bd8",
                "param_1": "config_array",
                "iVar1": "result",
                "uVar2": "flags",
                "uVar3": "condition",
                "0xffffeefdU": "FLAG_MASK",
                "0xffffffedU": "FLAG_ERROR_MASK",
                "0xfffffffcU": "FLAG_RESET_MASK"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "clear_flags_08003ce8",
            "code": "\nint clearFlags_08003ce8(int *flags)\n\n{\n  int result;\n  \n  if (flags == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    flags[10] = flags[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*flags = 0xffffffe0;\n      *(uint *)(*flags + 4) = *(uint *)(*flags + 4) & 0xff3f0000;\n      *(uint *)(*flags + 8) = *(uint *)(*flags + 8) & 0xff0106f0;\n      *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff000000;\n      *(uint *)(*flags + 0x10) = *(uint *)(*flags + 0x10) & 0xc0000000;\n      *(uint *)(*flags + 0x14) = *(uint *)(*flags + 0x14) & 0xfffff000;\n      *(uint *)(*flags + 0x18) = *(uint *)(*flags + 0x18) & 0xfffff000;\n      *(uint *)(*flags + 0x1c) = *(uint *)(*flags + 0x1c) & 0xfffff000;\n      *(uint *)(*flags + 0x20) = *(uint *)(*flags + 0x20) & 0xfffff000;\n      *(uint *)(*flags + 0x24) = *(uint *)(*flags + 0x24) & 0xfffff000;\n      *(uint *)(*flags + 0x28) = *(uint *)(*flags + 0x28) & 0xfffff000;\n      *(uint *)(*flags + 0x2c) = *(uint *)(*flags + 0x2c) & 0xff000000;\n      *(uint *)(*flags + 0x2c) = *(uint *)(*flags + 0x2c) & 0xff000000;\n      *(uint *)(*flags + 0x30) = *(uint *)(*flags + 0x30) & 0xc0000000;\n      *(uint *)(*flags + 0x34) = *(uint *)(*flags + 0x34) & 0xc0000000;\n      *(uint *)(*flags + 0x38) = *(uint *)(*flags + 0x38) & 0xffc00000;\n      *(uint *)(*flags + 0x38) = *(uint *)(*flags + 0x38) & 0xffc00000;\n      FUN_08006d24(flags);\n      flags[0xb] = 0;\n      flags[10] = 0;\n    }\n    *(undefined *)(flags + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "clear_flags_08003ce8",
                "param_1": "flags",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_update_status_08003de4",
            "code": "\nint checkAndUpdateStatus_08003de4(int input)\n\n{\n  int result;\n  \n  if (*(char *)(input + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(input + 0x28) = *(uint *)(input + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(input + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_update_status_08003de4",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "handle_status_08003e20",
            "code": "\nint handle_status_08003e20(int *status)\n\n{\n  uint division_result;\n  int result;\n  uint division_factor;\n  int start_time;\n  int current_time;\n  int temp;\n  \n  if (*(char *)(status + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    status[10] = status[10] & 0xffffeefdU | 2;\n    division_result = DAT_20000018;\n    division_factor = FUN_08005bb8(2);\n    for (temp = division_result / division_factor << 1; temp != 0; temp = temp + -1) {\n    }\n    FUN_08003a20(status);\n    *(uint *)(*status + 8) = *(uint *)(*status + 8) | 8;\n    start_time = FUN_08003760();\n    while (current_time = *status, (*(uint *)(current_time + 8) & 8) != 0) {\n      current_time = FUN_08003760();\n      if (10 < (uint)(current_time - start_time)) {\n        status[10] = status[10] & 0xffffffedU | 0x10;\n        *(undefined *)(status + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n    start_time = FUN_08003760();\n    while ((*(uint *)(*status + 8) & 4) != 0) {\n      current_time = FUN_08003760();\n      if (10 < (uint)(current_time - start_time)) {\n        status[10] = status[10] & 0xffffffedU | 0x10;\n        *(undefined *)(status + 9) = 0;\n        return 1;\n      }\n    }\n    status[10] = status[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(status + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "handle_status_08003e20",
                "param_1": "status",
                "uVar1": "division_result",
                "iVar2": "result",
                "uVar3": "division_factor",
                "iVar4": "start_time",
                "iVar5": "current_time",
                "local_14": "temp"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_register_value_08003f0c",
            "code": "\n\n\nvoid updateRegisterValue_08003f0c(uint input)\n\n{\n  _DAT_e000ed0c = (input & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "update_memory_08003f30",
            "code": "\n\n\nvoid updateMemory_08003f30(uint address,uint mask,uint data)\n\n{\n  uint shiftedMask;\n  uint shiftedBits;\n  \n  shiftedMask = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftedBits = 7 - shiftedMask;\n  if (3 < shiftedBits) {\n    shiftedBits = 4;\n  }\n  if (shiftedMask + 4 < 7) {\n    shiftedMask = 0;\n  }\n  else {\n    shiftedMask = shiftedMask - 3;\n  }\n  shiftedMask = (mask & (1 << (shiftedBits & 0xff)) - 1U) << (shiftedMask & 0xff) |\n          (1 << (shiftedMask & 0xff)) - 1U & data;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftedMask << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftedMask << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "update_memory_08003f30",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "shiftedMask",
                "uVar2": "shiftedBits"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_08003f94",
            "code": "\nvoid setBit_08003f94(uint input)\n\n{\n  if (-1 < (int)input) {\n    *(int *)((input >> 5) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_at_position_08003fb0",
            "code": "\nvoid setBitAtPosition_08003fb0(uint position)\n\n{\n  if (-1 < (int)position) {\n    *(int *)(((position >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (position & 0x1f);\n    executeDataSynchronizationBarrier(0xf);\n    executeInstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_at_position_08003fb0",
                "param_1": "position",
                "DataSynchronizationBarrier": "executeDataSynchronizationBarrier",
                "InstructionSynchronizationBarrier": "executeInstructionSynchronizationBarrier"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "initialize_memory_08003fd8",
            "code": "\n\n\nundefined4 initializeMemory_08003fd8(int size)\n\n{\n  if (size - 1U < 0x1000000) {\n    _DAT_e000e014 = size - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "initialize_memory_08003fd8",
                "param_1": "size"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_at_index_08004004",
            "code": "\nvoid setBitAtIndex_08004004(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_at_index_08004004",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_flag_08004024",
            "code": "\n\n\nvoid updateFlag_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_flag_08004024",
                "param_1": "value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_application_08004046",
            "code": "\nvoid initializeApplication_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_application_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "set_data_parameters_08004050",
            "code": "\n\n\nundefined4 set_data_parameters_08004050(uint **data_parameters)\n\n{\n  uint *current_data;\n  \n  if (*(char *)((int)data_parameters + 0x21) != '\\x02') {\n    error_code = (uint *)0x4;\n    return 1;\n  }\n  **data_parameters = **data_parameters & 0xfffffff1;\n  **data_parameters = **data_parameters & 0xfffffffe;\n  current_data = *data_parameters;\n  if (current_data == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (current_data == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (current_data == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (current_data == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (current_data == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (current_data == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data_parameters + 0x21) = 1;\n  *(undefined *)(data_parameters + 8) = 0;\n  if (callback_function != (uint *)0x0) {\n    (*(code *)callback_function)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "set_data_parameters_08004050",
                "param_1": "data_parameters",
                "puVar1": "current_data",
                "param_1[0xe]": "error_code",
                "param_1[0xd]": "callback_function"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_bits_080040e8",
            "code": "\n\n\nvoid updateBits_080040e8(uint *bitsToUpdate,uint *bitPattern)\n\n{\n  uint *updatedBitsPtr;\n  uint bitMask;\n  uint bitCheck;\n  uint bitIndex;\n  uint bitValue;\n  uint newValue;\n  int shiftAmount;\n  int registerIndex;\n  \n  newValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    bitCheck = *bitPattern & bitMask;\n    if (bitMask == bitCheck) {\n      bitValue = bitPattern[1];\n      if (bitValue == 0x12) {\n        newValue = bitPattern[3] + 0xc;\n      }\n      else if (bitValue < 0x13) {\n        if (bitValue == 2) {\n          newValue = bitPattern[3] + 8;\n        }\n        else if (bitValue < 3) {\n          if (bitValue == 0) goto LAB_0800423a;\n          if (bitValue == 1) {\n            newValue = bitPattern[3];\n          }\n        }\n        else if (bitValue == 3) {\n          newValue = 0;\n        }\n        else if (bitValue == 0x11) {\n          newValue = bitPattern[3] + 4;\n        }\n      }\n      else if (bitValue == 0x10210000) {\nLAB_0800423a:\n        if (bitPattern[2] == 0) {\n          newValue = 4;\n        }\n        else if (bitPattern[2] == 1) {\n          bitsToUpdate[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          bitsToUpdate[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (bitValue < 0x10210001) {\n        if ((bitValue == 0x10110000) || (bitValue == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((bitValue == 0x10310000) || ((bitValue == 0x10320000 || (bitValue == 0x10220000))))\n      goto LAB_0800423a;\n      bitMask = bitIndex;\n      updatedBitsPtr = bitsToUpdate;\n      if (0xff < bitCheck) {\n        bitMask = bitIndex - 8;\n        updatedBitsPtr = bitsToUpdate + 1;\n      }\n      *updatedBitsPtr = *updatedBitsPtr & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((bitPattern[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shiftAmount = (bitIndex & 3) << 2;\n        if (bitsToUpdate == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (bitsToUpdate == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (bitsToUpdate == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (bitsToUpdate == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shiftAmount) | registerIndex << shiftAmount;\n        if ((bitPattern[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitCheck;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitCheck;\n        }\n        if ((bitPattern[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitCheck;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitCheck;\n        }\n        if ((bitPattern[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitCheck;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitCheck;\n        }\n        if ((bitPattern[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitCheck;\n        }\n        else {\n          _DAT_4001040c = bitCheck | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_bits_080040e8",
                "param_1": "bitsToUpdate",
                "param_2": "bitPattern",
                "puVar1": "updatedBitsPtr",
                "uVar2": "bitMask",
                "uVar3": "bitCheck",
                "uVar4": "bitIndex",
                "uVar5": "bitValue",
                "uVar6": "newValue",
                "iVar7": "shiftAmount",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int int_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(int_value + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "int_value",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "update_parameter_080042e2",
            "code": "\nvoid updateParameter_080042e2(int baseAddress,int value,int shiftFlag)\n\n{\n  if (shiftFlag == 0) {\n    *(int *)(baseAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(baseAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "update_parameter_080042e2",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "shiftFlag"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_and_call_function_if_flag_set_080042f0",
            "code": "\n\n\nvoid updateAndCallFunctionIfFlagSet_080042f0(uint flag)\n\n{\n  if ((_DAT_40010414 & flag) != 0) {\n    _DAT_40010414 = flag;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_and_call_function_if_flag_set_080042f0",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "update_flag_value_0800430c",
            "code": "\nundefined4 updateFlagValue_0800430c(int *flagData)\n\n{\n  if (*(char *)((int)flagData + 0x3e) == '@') {\n    if (flagData[20] == 0) {\n      *(uint *)(*flagData + 0x10) = flagData[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*flagData + 0x10) = flagData[17] & 0xffU | 1;\n    }\n  }\n  else if (flagData[4] == 0x4000) {\n    if (*(char *)((int)flagData + 0x3d) == '!') {\n      *(uint *)(*flagData + 0x10) = flagData[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*flagData + 0x10) = flagData[17] & 0xffU | 1;\n    }\n  }\n  else if (flagData[20] == 0) {\n    *(uint *)(*flagData + 0x10) = (uint)(flagData[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (flagData[20] == 1) {\n    *(uint *)(*flagData + 0x10) = (uint)(flagData[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "update_flag_value_0800430c",
                "param_1": "flagData",
                "param_1[0x14]": "flagData[20]",
                "param_1[0x11]": "flagData[17]",
                "param_1[4]": "flagData[4]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_parameter_08004396",
            "code": "\nundefined4 setParameter_08004396(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0x10) = inputArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_parameter_08004396",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "update_flags_080043a2",
            "code": "\nundefined4 updateFlags_080043a2(uint **parameters)\n\n{\n  uint *pointerVar1;\n  \n  pointerVar1 = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (pointerVar1 == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          pointerVar1 = *parameters;\n          if ((pointerVar1[1] & 0x800) == 0) {\n            *pointerVar1 = *pointerVar1 | 0x200;\n          }\n          else {\n            *pointerVar1 = *pointerVar1 & 0xfffffbff;\n          }\n        }\n        else if (((pointerVar1 == (uint *)0x4) || (pointerVar1 == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        pointerVar1 = *parameters;\n        if ((pointerVar1[1] & 0x800) != 0) {\n          pointerVar1[1] = pointerVar1[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        pointerVar1 = *parameters;\n        if ((pointerVar1[1] & 0x800) != 0) {\n          pointerVar1[1] = pointerVar1[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "parameters",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_pointer_0800457c",
            "code": "\nundefined4 updatePointer_0800457c(int *pointerArray)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)pointerArray + 0x2a) != 0) {\n    bytePointer = (byte *)pointerArray[9];\n    pointerArray[9] = (int)(bytePointer + 1);\n    *(uint *)(*pointerArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)pointerArray + 0x2a) = *(short *)((int)pointerArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_pointer_0800457c",
                "param_1": "pointerArray",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_data_0800459c",
            "code": "\nundefined4 updateData_0800459c(int *data)\n\n{\n  undefined *ptrToUpdate;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptrToUpdate = (undefined *)ptrArray;\n    ptrArray = (int)(ptrToUpdate + 1);\n    *ptrToUpdate = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_data_0800459c",
                "param_1": "data",
                "puVar1": "ptrToUpdate",
                "param_1[9]": "ptrArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "initialize_param_080045c0",
            "code": "\nundefined4 initializeParam_080045c0(uint **param)\n\n{\n  bool isSmallValue;\n  uint value;\n  uint *size;\n  uint result;\n  \n  if (param == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)param + 0x3d) == '\\0') {\n    *(undefined *)(param + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)param + 0x3d) = 0x24;\n  **param = **param & 0xfffffffe;\n  value = FUN_08005a28();\n  if (param[1] < (uint *)0x186a1) {\n    if (value < 2000000) {\n      isSmallValue = true;\n    }\n    else {\n      isSmallValue = false;\n    }\n  }\n  else {\n    isSmallValue = value < 4000000;\n  }\n  if (isSmallValue) {\n    return 1;\n  }\n  result = value / 1000000;\n  (*param)[1] = result;\n  if ((uint *)0x186a0 < param[1]) {\n    result = (result * 300) / 1000;\n  }\n  (*param)[8] = result + 1;\n  size = param[1];\n  if (size < (uint *)0x186a1) {\n    value = (value - 1) / (uint)((int)size << 1) + 1 & 0xfff;\n    if (value < 4) {\n      value = 4;\n    }\n  }\n  else {\n    if (param[2] == (uint *)0x0) {\n      result = (value - 1) / (uint)((int)size * 3);\n    }\n    else {\n      result = (value - 1) / (uint)((int)size * 0x19);\n    }\n    if ((result + 1 & 0xfff) == 0) {\n      value = 1;\n    }\n    else if (param[2] == (uint *)0x0) {\n      value = (value - 1) / (uint)((int)size * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      value = (value - 1) / (uint)((int)size * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*param)[7] = value;\n  **param = (uint)param[7] | (uint)param[8];\n  (*param)[2] = (uint)param[4] | (uint)param[3];\n  (*param)[3] = (uint)param[5] | (uint)param[6];\n  **param = **param | 1;\n  param[0x10] = (uint *)0x0;\n  *(undefined *)((int)param + 0x3d) = 0x20;\n  param[0xc] = (uint *)0x0;\n  *(undefined *)((int)param + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "initialize_param_080045c0",
                "param_1": "param",
                "bVar1": "isSmallValue",
                "uVar2": "value",
                "puVar3": "size",
                "uVar4": "result"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_data_08004728",
            "code": "\nundefined4 processData_08004728(uint **data,uint *input1,uint *input2,undefined2 param)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)data + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)(data + 0xf) = 0;\n        return 3;\n      }\n      ptr = *data;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x21;\n      *(undefined *)((int)data + 0x3e) = 0x10;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = input2;\n      *(undefined2 *)((int)data + 0x2a) = param;\n      data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      data[0x11] = input1;\n      **data = **data | 0x100;\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "param_1": "data",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "param",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_input_080047f4",
            "code": "\nundefined4 processInput_080047f4(uint **pointerArray,uint *param2,uint *param3,undefined2 param4)\n\n{\n  undefined4 returnValue;\n  uint *pointer;\n  int counter;\n  \n  if (*(char *)((int)pointerArray + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        pointerArray[0xc] = (uint *)0x0;\n        *(undefined *)((int)pointerArray + 0x3d) = 0x20;\n        *(undefined *)(pointerArray + 0xf) = 0;\n        return 3;\n      }\n      pointer = *pointerArray;\n      counter = counter + -1;\n    } while ((pointer[6] & 2) != 0);\n    if (*(char *)(pointerArray + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(pointerArray + 0xf) = 1;\n      if ((*pointer & 1) == 0) {\n        *pointer = *pointer | 1;\n      }\n      **pointerArray = **pointerArray & 0xfffff7ff;\n      *(undefined *)((int)pointerArray + 0x3d) = 0x22;\n      *(undefined *)((int)pointerArray + 0x3e) = 0x10;\n      returnValue = 0;\n      pointerArray[0x10] = (uint *)0x0;\n      pointerArray[9] = param3;\n      *(undefined2 *)((int)pointerArray + 0x2a) = param4;\n      pointerArray[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(pointerArray + 10) = *(undefined2 *)((int)pointerArray + 0x2a);\n      pointerArray[0x11] = param2;\n      **pointerArray = **pointerArray | 0x400;\n      **pointerArray = **pointerArray | 0x100;\n      *(undefined *)(pointerArray + 0xf) = 0;\n      (*pointerArray)[1] = (*pointerArray)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_input_080047f4",
                "param_1": "pointerArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "returnValue",
                "puVar2": "pointer",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validate_input_080048c8(uint **input_params,uint *param_2,int param_3,uint *param_4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_params + 0x3d) == '(') {\n    if (param_2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_params + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_params + 0xf) = 1;\n      ptr = *input_params;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_params = **input_params & 0xfffff7ff;\n      *(undefined *)((int)input_params + 0x3d) = 0x29;\n      *(undefined *)((int)input_params + 0x3e) = 0x20;\n      result = 0;\n      input_params[0x10] = (uint *)0x0;\n      input_params[9] = param_2;\n      *(short *)((int)input_params + 0x2a) = (short)param_3;\n      input_params[0xb] = param_4;\n      *(undefined2 *)(input_params + 10) = *(undefined2 *)((int)input_params + 0x2a);\n      *(undefined *)(input_params + 0xf) = 0;\n      (*input_params)[1] = (*input_params)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_params",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "check_and_update_params_08004954",
            "code": "\nundefined4 check_and_update_params_08004954(uint **param_1_ptr,uint *param_2_ptr,int param_3_value,uint *param_4_ptr)\n\n{\n  undefined4 result;\n  uint *ptr_to_param_1;\n  \n  if (*(char *)((int)param_1_ptr + 0x3d) == '(') {\n    if (param_2_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_3_value == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_1_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_1_ptr + 0xf) = 1;\n      ptr_to_param_1 = *param_1_ptr;\n      if ((*ptr_to_param_1 & 1) == 0) {\n        *ptr_to_param_1 = *ptr_to_param_1 | 1;\n      }\n      **param_1_ptr = **param_1_ptr & 0xfffff7ff;\n      *(undefined *)((int)param_1_ptr + 0x3d) = 0x2a;\n      *(undefined *)((int)param_1_ptr + 0x3e) = 0x20;\n      result = 0;\n      param_1_ptr[0x10] = (uint *)0x0;\n      param_1_ptr[9] = param_2_ptr;\n      *(short *)((int)param_1_ptr + 0x2a) = param_3_short;\n      param_1_ptr[0xb] = param_4_ptr;\n      *(undefined2 *)(param_1_ptr + 10) = *(undefined2 *)((int)param_1_ptr + 0x2a);\n      *(undefined *)(param_1_ptr + 0xf) = 0;\n      (*param_1_ptr)[1] = (*param_1_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "check_and_update_params_08004954",
                "param_1": "param_1_ptr",
                "param_2": "param_2_ptr",
                "param_3": "param_3_value",
                "param_4": "param_4_ptr",
                "uVar1": "result",
                "puVar2": "ptr_to_param_1",
                "(short)param_3": "param_3_short"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_parameters_080049e0",
            "code": "\nundefined4 initializeParameters_080049e0(uint **parameters)\n\n{\n  uint *pointer;\n  \n  if (*(char *)((int)parameters + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x28;\n  pointer = *parameters;\n  if ((*pointer & 1) == 0) {\n    *pointer = *pointer | 1;\n  }\n  **parameters = **parameters | 0x400;\n  (*parameters)[1] = (*parameters)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_parameters_080049e0",
                "param_1": "parameters",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "process_data_08004a24",
            "code": "\nundefined4 processData_08004a24(int *data)\n\n{\n  char character;\n  byte *bytePointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "process_data_08004a24",
                "param_1": "data",
                "cVar1": "character",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "update_data_08004a76",
            "code": "\nundefined4 updateData_08004a76(int *dataPtr)\n\n{\n  char charValue;\n  undefined *ptr;\n  \n  charValue = *(char *)((int)dataPtr + 0x3d);\n  if (*(short *)((int)dataPtr + 0x2a) != 0) {\n    ptr = (undefined *)ptrArray[9];\n    ptrArray[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*dataPtr + 0x10);\n    *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n    if ((*(short *)((int)dataPtr + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*dataPtr + 4) = *(uint *)(*dataPtr + 4) & 0xfffffbff;\n      ptrArray[0xc] = 0x22;\n      *(undefined *)((int)dataPtr + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "update_data_08004a76",
                "param_1": "dataPtr",
                "cVar1": "charValue",
                "puVar2": "ptr",
                "param_1[9]": "ptrArray[9]",
                "param_1[0xc]": "ptrArray[0xc]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 process_data_08004ac2(int *data_ptr,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 value;\n  uint flags;\n  \n  flags = *(uint *)(*data_ptr + 0x18);\n  if ((flags & 0x80) == 0) {\n    value = *(undefined2 *)(data_ptr + 3);\n  }\n  else {\n    value = *(undefined2 *)(data_ptr + 6);\n  }\n  FUN_08007fa0(data_ptr,(*(uint *)(*data_ptr + 0x18) & 4) == 0,value,flags,param_4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "data_ptr",
                "uVar1": "value",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_parameter_08004aec",
            "code": "\nundefined4 process_parameter_08004aec(uint **parameter)\n\n{\n  if (((parameter[0xb] == (uint *)0x4) || (parameter[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)parameter + 0x3d) == '(')) {\n    parameter[0xb] = (uint *)0xffff0000;\n    (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n    (*parameter)[5] = 0xfffffbff;\n    **parameter = **parameter & 0xfffffbff;\n    parameter[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)parameter + 0x3d) == '!') {\n    parameter[0xb] = (uint *)0xffff0000;\n    parameter[0xc] = (uint *)0x21;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n    (*parameter)[5] = 0xfffffbff;\n    **parameter = **parameter & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*parameter)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_parameter_08004aec",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "process_param_08004b82",
            "code": "\nundefined4 processParam_08004b82(uint **paramList)\n\n{\n  char charValue;\n  uint *ptrValue;\n  \n  charValue = *(char *)((int)paramList + 0x3d);\n  ptrValue = paramList[0xb];\n  if ((*(short *)(paramList + 10) == 0) && (charValue == '!')) {\n    if ((ptrValue == (uint *)0x4) || ((ptrValue == (uint *)0x8 || (ptrValue == (uint *)0xffff0000)))) {\n      (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n      **paramList = **paramList | 0x200;\n      paramList[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      if (*(char *)((int)paramList + 0x3e) == '@') {\n        *(undefined *)((int)paramList + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)paramList + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n      paramList[0xc] = (uint *)0x11;\n      *(undefined *)((int)paramList + 0x3e) = 0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)paramList + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)paramList + 0x2a) == 0) {\n      (*paramList)[1] = (*paramList)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)paramList + 0x3e) == '@') {\n      if (paramList[0x14] == (uint *)0x0) {\n        if (paramList[0x13] == (uint *)0x1) {\n          (*paramList)[4] = (uint)paramList[0x12] & 0xff;\n          paramList[0x14] = (uint *)((int)paramList[0x14] + 2);\n        }\n        else {\n          (*paramList)[4] = (uint)((int)paramList[0x12] << 0x10) >> 0x18;\n          paramList[0x14] = (uint *)((int)paramList[0x14] + 1);\n        }\n      }\n      else if (paramList[0x14] == (uint *)0x1) {\n        (*paramList)[4] = (uint)paramList[0x12] & 0xff;\n        paramList[0x14] = (uint *)((int)paramList[0x14] + 1);\n      }\n      else if (paramList[0x14] == (uint *)0x2) {\n        if (*(char *)((int)paramList + 0x3d) == '\\\"') {\n          **paramList = **paramList | 0x100;\n        }\n        else if (*(char *)((int)paramList + 0x3d) == '!') {\n          ptrValue = paramList[9];\n          paramList[9] = (uint *)((int)ptrValue + 1);\n          (*paramList)[4] = (uint)*(byte *)ptrValue;\n          *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrValue = paramList[9];\n      paramList[9] = (uint *)((int)ptrValue + 1);\n      (*paramList)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "process_param_08004b82",
                "param_1": "paramList",
                "cVar1": "charValue",
                "puVar2": "ptrValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "handle_param_08004ccc",
            "code": "\nundefined4 handle_param_08004ccc(uint **param_array)\n\n{\n  uint *pointer;\n  \n  pointer = param_array[0xb];\n  if (*(char *)((int)param_array + 0x3d) == '!') {\n    if (*(short *)((int)param_array + 0x2a) == 0) {\n      if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) || (pointer == (uint *)0xffff0000)) {\n        (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n        **param_array = **param_array | 0x200;\n        param_array_element_c = (uint *)0x0;\n        *(undefined *)((int)param_array + 0x3d) = 0x20;\n        if (*(char *)((int)param_array + 0x3e) == '@') {\n          *(undefined *)((int)param_array + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)param_array + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n        param_array_element_c = (uint *)0x11;\n        *(undefined *)((int)param_array + 0x3e) = 0;\n        *(undefined *)((int)param_array + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      pointer = param_array_element_9;\n      param_array_element_9 = (uint *)((int)pointer + 1);\n      (*param_array)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)param_array + 0x2a) = *(short *)((int)param_array + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "handle_param_08004ccc",
                "param_1": "param_array",
                "puVar1": "pointer",
                "param_1[0xc]": "param_array_element_c",
                "param_1[9]": "param_array_element_9"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_input_08004d6c",
            "code": "\nundefined4 processInput_08004d6c(uint **inputBuffer)\n\n{\n  uint *tempVar1;\n  \n  if (*(char *)((int)inputBuffer + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)inputBuffer + 0x2a) < 4) {\n      if (*(ushort *)((int)inputBuffer + 0x2a) - 2 < 2) {\n        if (inputBuffer[0xb] == (uint *)0x2) {\n          **inputBuffer = **inputBuffer | 0x400;\n        }\n        else {\n          **inputBuffer = **inputBuffer & 0xfffffbff;\n          **inputBuffer = **inputBuffer | 0x800;\n        }\n        (*inputBuffer)[1] = (*inputBuffer)[1] & 0xfffffbff;\n      }\n      else {\n        if (inputBuffer[0xb] == (uint *)0x2) {\n          **inputBuffer = **inputBuffer | 0x400;\n        }\n        else {\n          **inputBuffer = **inputBuffer & 0xfffffbff;\n        }\n        (*inputBuffer)[1] = (*inputBuffer)[1] & 0xfffff8ff;\n        tempVar1 = inputBuffer[9];\n        inputBuffer[9] = (uint *)((int)tempVar1 + 1);\n        *(char *)tempVar1 = (char)(*inputBuffer)[4];\n        *(short *)((int)inputBuffer + 0x2a) = *(short *)((int)inputBuffer + 0x2a) + -1;\n        *(undefined *)((int)inputBuffer + 0x3d) = 0x20;\n        inputBuffer[0xc] = (uint *)0x0;\n        if (*(char *)((int)inputBuffer + 0x3e) == '@') {\n          *(undefined *)((int)inputBuffer + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)inputBuffer + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempVar1 = inputBuffer[9];\n      inputBuffer[9] = (uint *)((int)tempVar1 + 1);\n      *(char *)tempVar1 = (char)(*inputBuffer)[4];\n      *(short *)((int)inputBuffer + 0x2a) = *(short *)((int)inputBuffer + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_input_08004d6c",
                "param_1": "inputBuffer",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 process_data_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_data_08004f3c",
            "code": "\nvoid processData_08004f3c(uint **input)\n\n{\n  int result;\n  uint *tempPtr1;\n  uint *tempPtr2;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  tempPtr2 = *input;\n  if ((tempPtr2[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = input[9];\n        input[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_08004f3a(input);\n    }\n    else {\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = input[9];\n        input[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      FUN_08008020(input);\n    }\n  }\n  else {\n    tempPtr2[1] = tempPtr2[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x21) == '\\x01') {\n      input[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input[0xe]);\n      if (result != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          tempPtr2 = input[9];\n          input[9] = (uint *)((int)tempPtr2 + 1);\n          *(char *)tempPtr2 = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0xd])();\n      }\n    }\n    else {\n      input[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input[0xd]);\n      if (result != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_08007ff0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "param_1": "input",
                "iVar1": "result",
                "puVar2": "tempPtr1",
                "puVar3": "tempPtr2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_input_08005084",
            "code": "\nundefined4 processInput_08005084(uint **input)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)input + 0x3d);\n  (*input)[1] = (*input)[1] & 0xfffff8ff;\n  **input = **input | 1;\n  **input = **input & 0xfffffbff;\n  ptr1 = *input;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)input + 0x3d) == '\\\"') || (*(char *)((int)input + 0x3d) == '*')) {\n      *(short *)((int)input + 0x2a) = (short)*(undefined4 *)(*input[0xe] + 4);\n    }\n    else {\n      *(short *)((int)input + 0x2a) = (short)*(undefined4 *)(*input[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)input + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = input[9];\n      input[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n    if (((*input)[5] & 0x40) != 0) {\n      ptr1 = input[9];\n      input[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*input)[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n    input[0x10] = (uint *)((uint)input[0x10] | 4);\n  }\n  if (input[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      input[0xb] = (uint *)0xffff0000;\n      input[0xc] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((input[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      input[0xc] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_input_08005084",
                "param_1": "input",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_flags_08005188",
            "code": "\nvoid processFlags_08005188(int *input)\n\n{\n  int ptr;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  ptr = *input;\n  flag3 = *(uint *)(ptr + 0x18);\n  flag1 = *(uint *)(ptr + 0x14);\n  flag2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)input + 0x3e) == '\\x10') || (*(char *)((int)input + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(input);\n        }\n      }\n      else {\n        FUN_08004396(input);\n      }\n    }\n    else {\n      FUN_0800430c(input);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(input);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(input);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(input);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(input);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(input);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(input);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(input);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(input);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(input);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_flags_08005188",
                "param_1": "input",
                "iVar1": "ptr",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "update_configuration_080052f0",
            "code": "\nvoid updateConfiguration_080052f0(uint **config)\n\n{\n  char charValue;\n  uint *configPtr;\n  uint value1;\n  uint value2;\n  \n  configPtr = *config;\n  value1 = configPtr[5];\n  value2 = configPtr[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    config[0x10] = (uint *)((uint)config[0x10] | 1);\n    configPtr[5] = 0xfffffeff;\n    **config = **config | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    config[0x10] = (uint *)((uint)config[0x10] | 2);\n    (*config)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    charValue = *(char *)((int)config + 0x3d);\n    if (((*(char *)((int)config + 0x3e) == ' ') && (*(short *)((int)config + 0x2a) == 0)) &&\n       (((charValue == '!' || (charValue == ')')) || ((charValue == '(' && (config[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(config);\n    }\n    else {\n      config[0x10] = (uint *)((uint)config[0x10] | 4);\n      if (*(char *)((int)config + 0x3e) == '\\x10') {\n        **config = **config | 0x200;\n      }\n      (*config)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    config[0x10] = (uint *)((uint)config[0x10] | 8);\n    (*config)[5] = 0xfffff7ff;\n  }\n  if (config[0x10] != (uint *)0x0) {\n    FUN_08004f3c(config);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "update_configuration_080052f0",
                "param_1": "config",
                "cVar1": "charValue",
                "puVar2": "configPtr",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_byte_from_offset_0800542a",
            "code": "\nbyte get_byte_from_offset_0800542a(int input_offset)\n\n{\n  return *(byte *)(input_offset + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_byte_from_offset_0800542a",
                "param_1": "input_offset",
                "undefined": "byte"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_memory_value_08005430",
            "code": "\nundefined4 getMemoryValue_08005430(int memoryAddress)\n\n{\n  return *(undefined4 *)(memoryAddress + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_memory_value_08005430",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_execution_08005434",
            "code": "\nvoid delayExecution_08005434(int milliseconds)\n\n{\n  bool continueLoop;\n  int iterations;\n  \n  iterations = milliseconds * (DAT_20000018 / 8000);\n  do {\n    continueLoop = iterations != 0;\n    iterations = iterations + -1;\n  } while (continueLoop);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_execution_08005434",
                "param_1": "milliseconds",
                "local_4": "iterations",
                "bVar1": "continueLoop"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "handle_event_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 handleEvent_08005460(uint *flags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint mode;\n  bool isBitSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      mode = flags[1];\n      if (mode == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (mode == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (mode == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isBitSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    mode = flags[3];\n    if (mode == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (mode == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (mode == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "handle_event_08005460",
                "param_1": "flags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "mode",
                "bVar5": "isBitSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_time_delay_08005840",
            "code": "\n\n\nuint calculateTimeDelay_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 localVariable1;\n  undefined4 constantValue4;\n  undefined4 constantValue3;\n  undefined4 constantValue2;\n  undefined4 constantValue1;\n  \n  constantValue1 = 0x10100f0e;\n  constantValue2 = 0xd0c0b0a;\n  constantValue3 = 0x9080706;\n  constantValue4 = 0x5040302;\n  localVariable1 = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&constantValue4 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&localVariable1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_time_delay_08005840",
                "uStack_c": "constantValue1",
                "uStack_10": "constantValue2",
                "uStack_14": "constantValue3",
                "uStack_18": "constantValue4",
                "local_1c": "localVariable1"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "update_settings_080058ac",
            "code": "\n\n\nundefined4 updateSettings_080058ac(uint *settingsFlags,uint paramFlag)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempVar;\n  \n  if ((_DAT_40022000 & 7) < paramFlag) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | paramFlag;\n    if (paramFlag != (paramFlag & 7)) {\n      return 1;\n    }\n  }\n  if ((*settingsFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settingsFlags[2];\n  }\n  if ((*settingsFlags & 1) != 0) {\n    tempVar = settingsFlags[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (settingsFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (settingsFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (paramFlag < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | paramFlag;\n    if (paramFlag != (paramFlag & 7)) {\n      return 1;\n    }\n  }\n  if ((*settingsFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settingsFlags[3];\n  }\n  if ((*settingsFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settingsFlags[4] << 3;\n  }\n  tempVar = FUN_08005840();\n  DAT_20000018 = tempVar >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "update_settings_080058ac",
                "param_1": "settingsFlags",
                "param_2": "paramFlag",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "initialize_device_080058d2",
            "code": "\n\n\nundefined4 initializeDevice_080058d2(uint *deviceFlags,uint numChannels)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempVar;\n  \n  if ((*deviceFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | deviceFlags[2];\n  }\n  if ((*deviceFlags & 1) != 0) {\n    tempVar = deviceFlags[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (deviceFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (deviceFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numChannels < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numChannels;\n    if (numChannels != (numChannels & 7)) {\n      return 1;\n    }\n  }\n  if ((*deviceFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | deviceFlags[3];\n  }\n  if ((*deviceFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | deviceFlags[4] << 3;\n  }\n  tempVar = FUN_08005840();\n  DAT_20000018 = tempVar >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "initialize_device_080058d2",
                "param_1": "deviceFlags",
                "param_2": "numChannels",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_global_variable_08005a1c",
            "code": "\nundefined4 getGlobalVariable_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_global_variable_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_from_dat_08005a28",
            "code": "\n\n\nuint shiftedValueFromDAT_08005a28(void)\n\n{\n  uint resultFrom08005a1c;\n  \n  resultFrom08005a1c = FUN_08005a1c();\n  return resultFrom08005a1c >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_from_dat_08005a28",
                "uVar1": "resultFrom08005a1c"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shifted_value_from_function_result_08005a48",
            "code": "\n\n\nuint shiftedValueFromFunctionResult_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shifted_value_from_function_result_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_memory_08005a68",
            "code": "\n\n\nvoid initializeMemory_08005a68(undefined4 *outputBuffer,uint *inputBuffer)\n\n{\n  *outputBuffer = 0xf;\n  outputBuffer[1] = _DAT_40021004 & 3;\n  outputBuffer[2] = _DAT_40021004 & 0xf0;\n  outputBuffer[3] = _DAT_40021004 & 0x700;\n  outputBuffer[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputBuffer = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_memory_08005a68",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "initialize_hardware_08005aa4",
            "code": "\n\n\nundefined4 initializeHardware_08005aa4(uint *configurations)\n\n{\n  uint checkBit;\n  uint newBitValue;\n  int initialValue;\n  int updatedValue;\n  bool isBitSet;\n  \n  if ((*configurations & 1) != 0) {\n    isBitSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        updatedValue = FUN_08003760();\n        if (100 < (uint)(updatedValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (configurations[1] & 0x300))) {\n      newBitValue = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      checkBit = _DAT_40021020 & 1;\n      _DAT_40021020 = newBitValue;\n      if (checkBit != 0) {\n        initialValue = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          updatedValue = FUN_08003760();\n          if (5000 < (uint)(updatedValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | configurations[1];\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*configurations & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | configurations[2];\n  }\n  if ((*configurations & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | configurations[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "initialize_hardware_08005aa4",
                "param_1": "configurations",
                "uVar1": "checkBit",
                "uVar2": "newBitValue",
                "iVar3": "initialValue",
                "iVar4": "updatedValue",
                "bVar5": "isBitSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_value_08005bb8",
            "code": "\n\n\nuint calculateParameterValue_08005bb8(int inputValue)\n\n{\n  uint result;\n  undefined2 constantValue;\n  undefined4 constantValue2;\n  undefined4 constantValue3;\n  undefined4 constantValue4;\n  undefined4 constantValue5;\n  \n  constantValue5 = 0x10100f0e;\n  constantValue4 = 0xd0c0b0a;\n  constantValue3 = 0x9080706;\n  constantValue2 = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constantValue2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_value_08005bb8",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "constantValue",
                "uStack_20": "constantValue2",
                "uStack_1c": "constantValue3",
                "uStack_18": "constantValue4",
                "uStack_14": "constantValue5"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "initialize_memory_08005cb4",
            "code": "\n\n\nvoid initializeMemory_08005cb4(uint **memoryBlock)\n\n{\n  if (((**memoryBlock & 2) != 0) && (((*memoryBlock)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*memoryBlock)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)memoryBlock + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "initialize_memory_08005cb4",
                "param_1": "memoryBlock"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_values_08005cec",
            "code": "\nvoid updateValues_08005cec(int memoryAddress,uint *data)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(memoryAddress + 4);\n  updatedValue3 = *data;\n  updatedValue1 = *(uint *)(memoryAddress + 0x20) & 0xfffffffd | data[2];\n  if (memoryAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | data[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | data[5] | data[6];\n  }\n  *(uint *)(memoryAddress + 4) = updatedValue2;\n  *(uint *)(memoryAddress + 0x18) = *(uint *)(memoryAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(memoryAddress + 0x34) = data[1];\n  *(uint *)(memoryAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_values_08005cec",
                "param_1": "memoryAddress",
                "param_2": "data",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_params_08005d48",
            "code": "\nvoid updateParams_08005d48(int baseAddress,uint *params)\n\n{\n  uint newFlags;\n  uint modifiedValue1;\n  uint paramValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffeff;\n  modifiedValue1 = *(uint *)(baseAddress + 4);\n  paramValue = *params;\n  newFlags = *(uint *)(baseAddress + 0x20) & 0xfffffdff | params[2] << 8;\n  if (baseAddress == 0x40012c00) {\n    newFlags = (newFlags & 0xfffff7ff | params[3] << 8) & 0xfffffbff;\n    modifiedValue1 = modifiedValue1 & 0xffffcfff | params[5] << 4 | params[6] << 4;\n  }\n  *(uint *)(baseAddress + 4) = modifiedValue1;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffffff8c | paramValue;\n  *(uint *)(baseAddress + 0x3c) = updatedValue2;\n  *(uint *)(baseAddress + 0x20) = newFlags;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_params_08005d48",
                "param_1": "baseAddress",
                "param_2": "params",
                "uVar1": "newFlags",
                "uVar2": "modifiedValue1",
                "uVar3": "paramValue",
                "param_2[1]": "updatedValue2"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_parameters_08005dac",
            "code": "\nvoid updateParameters_08005dac(int baseAddress,int *parameters)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffefff;\n  value1 = *(uint *)(baseAddress + 4);\n  value2 = *parameters;\n  value3 = parameters[2];\n  if (baseAddress == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | parameters[5] << 6;\n  }\n  *(uint *)(baseAddress + 4) = value1;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(baseAddress + 0x40) = parameters[1];\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_parameters_08005dac",
                "param_1": "baseAddress",
                "param_2": "parameters",
                "uVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_data_08005df4",
            "code": "\nvoid updateData_08005df4(uint **dataPointer)\n\n{\n  uint *currentValue;\n  \n  *(undefined *)((int)dataPointer + 0x3d) = 2;\n  currentValue = *dataPointer;\n  if ((currentValue[8] & 0x1111) == 0) {\n    if ((currentValue[8] & 0x444) == 0) {\n      *currentValue = *currentValue & 0xfffffffe;\n    }\n  }\n  FUN_08007710(dataPointer);\n  *(undefined *)((int)dataPointer + 0x3d) = 0;\n  *(undefined *)(dataPointer + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_data_08005df4",
                "param_1": "dataPointer",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "improve_code_08005e2e",
            "code": "\nvoid improve_code_08005e2e(uint **parameter)\n\n{\n  uint *pointer;\n  \n  *(undefined *)((int)parameter + 0x3d) = 2;\n  pointer = *parameter;\n  if ((pointer[8] & 0x1111) == 0) {\n    if ((pointer[8] & 0x444) == 0) {\n      *pointer = *pointer & 0xfffffffe;\n    }\n  }\n  FUN_08007110(parameter);\n  *(undefined *)((int)parameter + 0x3d) = 0;\n  *(undefined *)(parameter + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "improve_code_08005e2e",
                "param_1": "parameter",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "update_status_08005e6e",
            "code": "\nvoid updateStatus_08005e6e(int *status)\n\n{\n  int value;\n  \n  value = *status;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(status + 7) = 1;\n    if ((*(uint *)(*status + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(status);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(status + 7) = 0;\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(status + 7) = 2;\n    if ((*(uint *)(*status + 0x18) & 0x300) == 0) {\n      FUN_0800771c(status);\n      FUNC_08005e6a(status);\n    }\n    else {\n      FUNC_08005e68(status);\n    }\n    *(undefined *)(status + 7) = 0;\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(status + 7) = 4;\n    if ((*(uint *)(*status + 0x1c) & 3) == 0) {\n      FUN_0800771c(status);\n      FUNC_08005e6a(status);\n    }\n    else {\n      FUNC_08005e68(status);\n    }\n    *(undefined *)(status + 7) = 0;\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(status + 7) = 8;\n    if ((*(uint *)(*status + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(status);\n      FUNC_08005e6a(status);\n    }\n    else {\n      FUNC_08005e68(status);\n    }\n    *(undefined *)(status + 7) = 0;\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(status);\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(status);\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(status);\n  }\n  value = *status;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(status);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "update_status_08005e6e",
                "param_1": "status",
                "iVar1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_08005fe8",
            "code": "\nvoid updateMemory_08005fe8(uint *memoryAddress,uint *data)\n\n{\n  uint value;\n  \n  value = *memoryAddress;\n  if ((((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n      (memoryAddress == (uint *)0x40000400)) || (memoryAddress == (uint *)0x40000800)) {\n    value = value & 0xffffff8f | data[1];\n  }\n  if (((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n     ((memoryAddress == (uint *)0x40000400 || (memoryAddress == (uint *)0x40000800)))) {\n    value = value & 0xfffffcff | data[3];\n  }\n  *memoryAddress = value & 0xffffff7f | data[5];\n  memoryAddress[0xb] = data[2];\n  memoryAddress[10] = *data;\n  if (memoryAddress == (uint *)0x40012c00) {\n    uRam40012c30 = data[4];\n  }\n  memoryAddress[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memoryAddress",
                "param_2": "data",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "initialize_data_08006060",
            "code": "\nundefined4 initializeData_08006060(undefined4 *dataPtr)\n\n{\n  if (dataPtr != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPtr + 0x3d) == '\\0') {\n      *(undefined *)(dataPtr + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)dataPtr + 0x3d) = 2;\n    FUN_08005fe8(*dataPtr,dataPtr + 1);\n    *(undefined *)((int)dataPtr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "initialize_data_08006060",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "initialize_data_08006092",
            "code": "\nundefined4 initializeData_08006092(undefined4 *dataPointer)\n\n{\n  if (dataPointer != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPointer + 0x3d) == '\\0') {\n      *(undefined *)(dataPointer + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)dataPointer + 0x3d) = 2;\n    FUN_08005fe8(*dataPointer,dataPointer + 1);\n    *(undefined *)((int)dataPointer + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "initialize_data_08006092",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_configuration_080060c4",
            "code": "\nvoid updateConfiguration_080060c4(int configBaseAddress,int *configData)\n\n{\n  uint modifiedMask;\n  uint modifiedValue;\n  int paramValue;\n  \n  *(uint *)(configBaseAddress + 0x20) = *(uint *)(configBaseAddress + 0x20) & 0xffffffef;\n  modifiedValue = *(uint *)(configBaseAddress + 4);\n  paramValue = *configData;\n  modifiedMask = *(uint *)(configBaseAddress + 0x20) & 0xffffffdf | newValue1 << 4;\n  if (configBaseAddress == 0x40012c00) {\n    modifiedMask = (modifiedMask & 0xffffff7f | newValue2 << 4) & 0xffffffbf;\n    modifiedValue = modifiedValue & 0xfffff3ff | newValue3 << 2 | newValue4 << 2;\n  }\n  *(uint *)(configBaseAddress + 4) = modifiedValue;\n  *(uint *)(configBaseAddress + 0x18) = *(uint *)(configBaseAddress + 0x18) & 0xffff8cff | paramValue << 8;\n  *(int *)(configBaseAddress + 0x38) = configData[1];\n  *(uint *)(configBaseAddress + 0x20) = modifiedMask;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_configuration_080060c4",
                "param_1": "configBaseAddress",
                "param_2": "configData",
                "uVar1": "modifiedMask",
                "uVar2": "modifiedValue",
                "iVar3": "paramValue",
                "param_2[2]": "newValue1",
                "param_2[3]": "newValue2",
                "param_2[5]": "newValue3",
                "param_2[6]": "newValue4"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "process_param_08006128",
            "code": "\nundefined4 process_param_08006128(undefined4 *param_array,undefined4 param_length,undefined4 param_type)\n\n{\n  if (*(char *)(param_array + 0xf) != '\\x01') {\n    *(undefined *)(param_array + 0xf) = 1;\n    *(undefined *)((int)param_array + 0x3d) = 2;\n    switch(param_type) {\n    case 0:\n      FUN_08005cec(*param_array);\n      break;\n    case 4:\n      FUN_080060c4(*param_array);\n      break;\n    case 8:\n      FUN_08005d48(*param_array);\n      break;\n    case 0xc:\n      FUN_08005dac(*param_array);\n    }\n    *(undefined *)((int)param_array + 0x3d) = 1;\n    *(undefined *)(param_array + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "process_param_08006128",
                "param_1": "param_array",
                "param_2": "param_length",
                "param_3": "param_type",
                "switch(param_3)": "switch(param_type)"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "process_data_08006186",
            "code": "\nundefined4 processData_08006186(int *dataPointer,int inputValue,undefined4 option)\n\n{\n  if (*(char *)(dataPointer + 0xf) != '\\x01') {\n    *(undefined *)(dataPointer + 0xf) = 1;\n    *(undefined *)((int)dataPointer + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*dataPointer);\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | 8;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) & 0xfffffffb;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | *(uint *)(inputValue + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*dataPointer);\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | 0x800;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) & 0xfffffbff;\n      *(uint *)(*dataPointer + 0x18) = *(uint *)(*dataPointer + 0x18) | *(int *)(inputValue + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*dataPointer);\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | 8;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) & 0xfffffffb;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | *(uint *)(inputValue + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*dataPointer);\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | 0x800;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) & 0xfffffbff;\n      *(uint *)(*dataPointer + 0x1c) = *(uint *)(*dataPointer + 0x1c) | *(int *)(inputValue + 0x10) << 8;\n    }\n    *(undefined *)((int)dataPointer + 0x3d) = 1;\n    *(undefined *)(dataPointer + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "process_data_08006186",
                "param_1": "dataPointer",
                "param_2": "inputValue",
                "param_3": "option"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_value_08006262",
            "code": "\nvoid updateBitValue_08006262(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "set_flags_and_options_08006280",
            "code": "\nundefined4 setFlagsAndOptions_08006280(uint **data,undefined4 option)\n\n{\n  switch(option) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  FUN_08006262(*data,option,1);\n  if (*data == (uint *)0x40012c00) {\n    specialValue = specialValue | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "set_flags_and_options_08006280",
                "param_1": "data",
                "param_2": "option",
                "uRam40012c44": "specialValue"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "update_data_and_config_080062f4",
            "code": "\nundefined4 updateDataAndConfig_080062f4(uint **dataAndConfig,undefined4 configValue)\n\n{\n  uint *tempPointer;\n  \n  switch(configValue) {\n  case 0:\n    (*dataAndConfig)[3] = (*dataAndConfig)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*dataAndConfig)[3] = (*dataAndConfig)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*dataAndConfig)[3] = (*dataAndConfig)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*dataAndConfig)[3] = (*dataAndConfig)[3] & 0xffffffef;\n  }\n  FUN_08006262(*dataAndConfig,configValue,0);\n  if (((*dataAndConfig == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPointer = *dataAndConfig;\n  if (((tempPointer[8] & 0x1111) == 0) && ((tempPointer[8] & 0x444) == 0)) {\n    *tempPointer = *tempPointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "update_data_and_config_080062f4",
                "param_1": "dataAndConfig",
                "param_2": "configValue",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flag_and_value_08006390",
            "code": "\nundefined4 setFlagAndValue_08006390(uint **parameters,undefined4 value)\n\n{\n  FUN_08006262(*parameters,value,1);\n  if (*parameters == (uint *)0x40012c00) {\n    flagVariable = flagVariable | 0x8000;\n  }\n  **parameters = **parameters | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flag_and_value_08006390",
                "param_1": "parameters",
                "param_2": "value",
                "uRam40012c44": "flagVariable"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "initialize_config_080063c0",
            "code": "\nundefined4 initializeConfig_080063c0(uint **config,undefined4 value)\n\n{\n  uint *configPtr;\n  \n  FUN_08006262(*config,value,0);\n  if (((*config == (uint *)0x40012c00) && ((flag2 & 0x1111) == 0)) &&\n     ((flag2 & 0x444) == 0)) {\n    flag3 = flag3 & 0xffff7fff;\n  }\n  configPtr = *config;\n  if (((configPtr[8] & 0x1111) == 0) && ((configPtr[8] & 0x444) == 0)) {\n    *configPtr = *configPtr & 0xfffffffe;\n  }\n  *(undefined *)((int)config + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "initialize_config_080063c0",
                "param_1": "config",
                "param_2": "value",
                "puVar1": "configPtr",
                "uRam40012c20": "flag2",
                "uRam40012c44": "flag3"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "apply_bitwise_operations_08006420",
            "code": "\nvoid applyBitwiseOperations_08006420(int baseAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "apply_bitwise_operations_08006420",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_and_permissions_0800643c",
            "code": "\nundefined4 setFlagsAndPermissions_0800643c(uint **dataPointer,undefined4 value)\n\n{\n  FUN_08006420(*dataPointer,value,4);\n  (*dataPointer)[0x11] = (*dataPointer)[0x11] | 0x8000;\n  **dataPointer = **dataPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_and_permissions_0800643c",
                "param_1": "dataPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_flags_and_values_08006460",
            "code": "\nundefined4 updateFlagsAndValues_08006460(uint **data,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_08006420(*data,value,0);\n  pointer = *data;\n  if (((flags & 0x1111) == 0) && ((flags & 0x444) == 0)) {\n    flagValue = flagValue & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((flags & 0x1111) == 0) && ((flags & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_flags_and_values_08006460",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "pointer",
                "puVar1[8]": "flags",
                "puVar1[0x11]": "flagValue"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "clear_flags_and_set_space_080064b0",
            "code": "\nvoid clearFlagsAndSetSpace_080064b0(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xfffffedf;\n  *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "clear_flags_and_set_space_080064b0",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "extract_binary_data_080064cc",
            "code": "\nundefined4 extractBinaryData_080064cc(int *binaryData)\n\n{\n  short count;\n  byte *bytePtr;\n  \n  if (*(char *)((int)binaryData + 0x39) != '!') {\n    return 2;\n  }\n  if (binaryData[2] == 0x1000) {\n    *(uint *)(*binaryData + 4) = *(ushort *)binaryData[8] & 0x1ff;\n    if (binaryData[4] == 0) {\n      binaryData[8] = binaryData[8] + 2;\n    }\n    else {\n      binaryData[8] = binaryData[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)binaryData[8];\n    binaryData[8] = (int)(bytePtr + 1);\n    *(uint *)(*binaryData + 4) = (uint)*bytePtr;\n  }\n  count = *(short *)((int)binaryData + 0x26) + -1;\n  *(short *)((int)binaryData + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*binaryData + 0xc) = *(uint *)(*binaryData + 0xc) & 0xffffff7f;\n    *(uint *)(*binaryData + 0xc) = *(uint *)(*binaryData + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "extract_binary_data_080064cc",
                "param_1": "binaryData",
                "sVar1": "count",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_weighted_average_08006538",
            "code": "\nvoid calculateWeightedAverage_08006538(int *inputValues)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*inputValues + 0x10) = *(uint *)(*inputValues + 0x10) & 0xffffcfff | inputValues[3];\n  *(uint *)(*inputValues + 0xc) =\n       inputValues[2] | inputValues[4] | inputValues[5] | *(uint *)(*inputValues + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputValues + 0x14) = *(uint *)(*inputValues + 0x14) & 0xfffffcff | inputValues[6];\n  result10 = *inputValues;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = inputValues[1];\n    result2 = FUN_08005a28();\n    result7 = inputValues[1];\n    result3 = FUN_08005a28();\n    result8 = inputValues[1];\n    result4 = FUN_08005a28();\n    result9 = inputValues[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputValues[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = inputValues[1];\n  result1 = FUN_08005a48();\n  result6 = inputValues[1];\n  result2 = FUN_08005a48();\n  result7 = inputValues[1];\n  result3 = FUN_08005a48();\n  result8 = inputValues[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputValues[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_weighted_average_08006538",
                "param_1": "inputValues",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_flags_080066e8",
            "code": "\nundefined4 checkFlags_080066e8(uint **flags,uint flagMask,uint requireMatch,int baseValue,uint maxDifference)\n\n{\n  int difference;\n  \n  do {\n    if (((flagMask & ~**flags) == 0) != requireMatch) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (difference = FUN_08003760(), (uint)(difference - baseValue) <= maxDifference))));\n  (*flags)[3] = (*flags)[3] & 0xfffffe5f;\n  (*flags)[5] = (*flags)[5] & 0xfffffffe;\n  *(undefined *)((int)flags + 0x39) = 0x20;\n  *(undefined *)((int)flags + 0x3a) = 0x20;\n  *(undefined *)(flags + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_flags_080066e8",
                "param_1": "flags",
                "param_2": "flagMask",
                "param_3": "requireMatch",
                "param_4": "baseValue",
                "param_5": "maxDifference",
                "iVar1": "difference"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "update_parameter_0800674e",
            "code": "\nundefined4 updateParameter_0800674e(int *parameter)\n\n{\n  if (parameter != (int *)0x0) {\n    if (*(char *)((int)parameter + 0x39) == '\\0') {\n      *(undefined *)(parameter + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)parameter + 0x39) = 0x24;\n    *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xffffdfff;\n    FUN_08006538(parameter);\n    *(uint *)(*parameter + 0x10) = *(uint *)(*parameter + 0x10) & 0xffffb7ff;\n    *(uint *)(*parameter + 0x14) = *(uint *)(*parameter + 0x14) & 0xffffffd5;\n    *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) | 0x2000;\n    parameter[0xf] = 0;\n    *(undefined *)((int)parameter + 0x39) = 0x20;\n    *(undefined *)((int)parameter + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "update_parameter_0800674e",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *data_ptr,ushort *input_ptr,int input_length,undefined4 param_4)\n\n{\n  int result;\n  undefined4 new_value;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (input_ptr == (ushort *)0x0) {\n      new_value = 1;\n    }\n    else if (input_length == 0) {\n      new_value = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      new_value = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      new_value = FUN_08003760();\n      *(short *)(data_ptr + 9) = (short)input_length;\n      *(short *)((int)data_ptr + 0x26) = (short)input_length;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = FUN_080066e8(data_ptr,0x80,0,new_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *input_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            input_ptr = input_ptr + 1;\n          }\n          else {\n            input_ptr = (ushort *)((int)input_ptr + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(data_ptr,0x80,0,new_value,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)input_ptr;\n          input_ptr = (ushort *)((int)input_ptr + 1);\n        }\n      }\n      result = FUN_080066e8(data_ptr,0x40,0,new_value,param_4);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        new_value = 0;\n      }\n      else {\n        new_value = 3;\n      }\n    }\n  }\n  else {\n    new_value = 2;\n  }\n  return new_value;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "data_ptr",
                "param_2": "input_ptr",
                "param_3": "input_length",
                "iVar1": "result",
                "uVar2": "new_value"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "check_and_update_data_0800688e",
            "code": "\nundefined4 checkAndUpdateData_0800688e(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[8] = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "check_and_update_data_0800688e",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "data[8]",
                "param_1[0xf]": "data[0xf]"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "check_input_validity_080068d6",
            "code": "\nundefined4 checkInputValidity_080068d6(int *inputArray,int param2,int param3)\n\n{\n  if (*(char *)((int)inputArray + 0x3a) != ' ') {\n    return 2;\n  }\n  if (param2 == 0) {\n    return 1;\n  }\n  if (param3 == 0) {\n    return 1;\n  }\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    inputArray[10] = param2;\n    *(short *)(inputArray + 0xb) = (short)param3;\n    *(short *)((int)inputArray + 0x2e) = (short)param3;\n    inputArray[0xf] = 0;\n    *(undefined *)((int)inputArray + 0x3a) = 0x22;\n    *(undefined *)(inputArray + 0xe) = 0;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x100;\n    *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) | 1;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "check_input_validity_080068d6",
                "param_1": "inputArray",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "update_parameter_08006932",
            "code": "\nundefined4 updateParameter_08006932(int *parameter)\n\n{\n  *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xffffffbf;\n  *(undefined *)((int)parameter + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "update_parameter_08006932",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_binary_data_0800694c",
            "code": "\nundefined4 processBinaryData_0800694c(int *dataPointer)\n\n{\n  byte *bytePointer;\n  short count;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)dataPointer + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (dataPointer[2] == 0x1000) {\n    if (dataPointer[4] == 0) {\n      *(ushort *)dataPointer[10] = (ushort)((uint)(*(int *)(*dataPointer + 4) << 0x17) >> 0x17);\n      dataPointer[10] = dataPointer[10] + 2;\n    }\n    else {\n      *(ushort *)dataPointer[10] = (ushort)*(undefined4 *)(*dataPointer + 4) & 0xff;\n      dataPointer[10] = dataPointer[10] + 1;\n    }\n  }\n  else if (dataPointer[4] == 0) {\n    undefinedPointer = (undefined *)dataPointer[10];\n    dataPointer[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*dataPointer + 4);\n  }\n  else {\n    bytePointer = (byte *)dataPointer[10];\n    dataPointer[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*dataPointer + 4) & 0x7f;\n  }\n  count = *(short *)((int)dataPointer + 0x2e) + -1;\n  *(short *)((int)dataPointer + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffffdf;\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xfffffeff;\n  *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_binary_data_0800694c",
                "param_1": "dataPointer",
                "pbVar1": "bytePointer",
                "sVar2": "count",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_data_080069ec",
            "code": "\nvoid processData_080069ec(uint **data)\n\n{\n  int returnValue;\n  uint var2;\n  uint *ptr;\n  uint var4;\n  uint var5;\n  \n  ptr = *data;\n  var5 = *ptr;\n  var2 = ptr[3];\n  if ((((var5 & 0xf) == 0) && ((var5 & 0x20) != 0)) && ((var2 & 0x20) != 0)) {\n    FUN_0800694c(data);\n    return;\n  }\n  if (((var5 & 0xf) == 0) || ((var4 = ptr[5] & 1, var4 == 0 && ((var2 & 0x120) == 0)))) {\n    if (((var5 & 0x80) != 0) && ((var2 & 0x80) != 0)) {\n      FUN_080064cc(data);\n      return;\n    }\n    if (((var5 & 0x40) != 0) && ((var2 & 0x40) != 0)) {\n      FUN_08006932(data);\n    }\n  }\n  else {\n    if (((var5 & 1) != 0) && ((var2 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((var5 & 4) != 0) && (var4 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((var5 & 2) != 0) && (var4 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((var5 & 8) != 0) && (var4 != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((var5 & 0x20) != 0) && ((var2 & 0x20) != 0)) {\n        FUN_0800694c(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_0800877c(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      returnValue = FUN_08004050(data[0xd]);\n      if (returnValue != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_data_080069ec",
                "param_1": "data",
                "iVar1": "returnValue",
                "uVar2": "var2",
                "puVar3": "ptr",
                "uVar4": "var4",
                "uVar5": "var5"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "extracted_bit_from_value_08006b28",
            "code": "\nuint extractedBitFromValue_08006b28(uint value,int offset)\n\n{\n  return *(uint *)(offset + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "extracted_bit_from_value_08006b28",
                "param_1": "value",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_08006b3e",
            "code": "\nvoid setBit_08006b3e(uint inputValue,int arrayAddress)\n\n{\n  uint shiftedIdx;\n  \n  shiftedIdx = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedIdx * 4) = *(uint *)(arrayAddress + shiftedIdx * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_08006b3e",
                "param_1": "inputValue",
                "param_2": "arrayAddress",
                "uVar1": "shiftedIdx"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_08006b5c",
            "code": "\nvoid updateBit_08006b5c(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_08006b5c",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_function_permissions_08006bb8",
            "code": "\n\n\nundefined4 setFunctionPermissions_08006bb8(undefined4 functionIndex)\n\n{\n  undefined4 functionAddress;\n  \n  switch(functionIndex) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    functionAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    functionAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    functionAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    functionAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    functionAddress = 0x40011800;\n    break;\n  default:\n    functionAddress = 0;\n  }\n  return functionAddress;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_function_permissions_08006bb8",
                "param_1": "functionIndex",
                "uVar1": "functionAddress"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "validate_input_08006c60",
            "code": "\nuint validate_input_08006c60(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(arg1,&DAT_0800a5b8,arg3,arg4,arg4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "validate_input_08006c60",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "get_shifted_value_08006c7c",
            "code": "\nundefined4 get_shifted_value_08006c7c(undefined4 input_value,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_value,&DAT_0800a6cc,param_3,param_4,param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "get_shifted_value_08006c7c",
                "param_1": "input_value",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "initialize_hardware_08006ca8",
            "code": "\n\n\nvoid initializeHardware_08006ca8(int *hardwareConfig,undefined4 configSize)\n\n{\n  undefined4 result;\n  uint modifiedRegister;\n  int value;\n  uint bitmask;\n  undefined4 flag1;\n  undefined4 flag2;\n  \n  value = *hardwareConfig;\n  if (value == 0x40012400) {\n    modifiedRegister = _DAT_40021018 | 0x200;\n    value = 0x200;\n    _DAT_40021018 = modifiedRegister;\n  }\n  else {\n    modifiedRegister = 0x40012800;\n    if (value == 0x40012800) {\n      modifiedRegister = _DAT_40021018 | 0x400;\n      value = 0x400;\n      _DAT_40021018 = modifiedRegister;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,configSize,modifiedRegister,value);\n  bitmask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  flag1 = 3;\n  flag2 = 0;\n  FUN_080040e8(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "initialize_hardware_08006ca8",
                "param_1": "hardwareConfig",
                "param_2": "configSize",
                "uVar1": "result",
                "uVar2": "modifiedRegister",
                "iVar3": "value",
                "local_18": "bitmask",
                "local_14": "flag1",
                "local_10": "flag2"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_permissions_08006d24",
            "code": "\n\n\nvoid updatePermissions_08006d24(int *permissions)\n\n{\n  if (*permissions != 0x40012400) {\n    if (*permissions == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_permissions_08006d24",
                "param_1": "permissions"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_input_08006d80",
            "code": "\nundefined2 validate_input_08006d80(undefined4 input_parameter)\n\n{\n  int result;\n  uint flag;\n  undefined2 output_value;\n  uint validation_result;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 flag3;\n  undefined4 var5;\n  undefined4 flag4;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  validation_result = 0;\n  flag1 = 0;\n  flag2 = 0;\n  output_value = 0;\n  buffer = FUN_08007320(input_parameter,&DAT_0800a5b8);\n  if (buffer == 0) {\n    output_value = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    flag3 = 1;\n    flag4 = 0;\n    DAT_20000014 = (undefined)input_parameter;\n    result = FUN_08003bd8(&buffer);\n    if (result == 0) {\n      validation_result = FUN_08006c60(input_parameter);\n      if (validation_result < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_080038e4(&buffer,&validation_result);\n        if (result == 0) {\n          result = FUN_08003e20(&buffer);\n          if (result == 0) {\n            result = FUN_08003aa0(&buffer);\n            if (result == 0) {\n              result = FUN_0800376c(&buffer,10);\n              if (result == 0) {\n                flag = FUN_08003a1c(&buffer);\n                if ((flag & 0x200) != 0) {\n                  output_value = FUN_080038dc(&buffer);\n                }\n                result = FUN_08003de4(&buffer);\n                if (result == 0) {\n                  result = FUN_08003ce8(&buffer);\n                  if (result != 0) {\n                    output_value = 0;\n                  }\n                }\n                else {\n                  output_value = 0;\n                }\n              }\n              else {\n                output_value = 0;\n              }\n            }\n            else {\n              output_value = 0;\n            }\n          }\n          else {\n            output_value = 0;\n          }\n        }\n        else {\n          output_value = 0;\n        }\n      }\n      else {\n        output_value = 0;\n      }\n    }\n    else {\n      output_value = 0;\n    }\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_input_08006d80",
                "param_1": "input_parameter",
                "iVar1": "result",
                "uVar2": "flag",
                "local_46": "output_value",
                "local_44": "validation_result",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "flag3",
                "local_24": "var5",
                "local_20": "flag4",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_system_08006e68",
            "code": "\n\n\nvoid initializeSystem_08006e68(undefined4 inputParameter)\n\n{\n  int result;\n  undefined4 calculatedValue;\n  uint bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  result = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(inputParameter);\n  calculatedValue = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(result << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(calculatedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_system_08006e68",
                "param_1": "inputParameter",
                "iVar1": "result",
                "uVar2": "calculatedValue",
                "local_20": "bitMask",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_system_08007110",
            "code": "\nvoid initialize_system_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_system_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "process_data_08007118",
            "code": "\nvoid processData_08007118(undefined4 input1,uint input2,int input3,undefined4 input4,char flag)\n\n{\n  uint result;\n  int status1;\n  int status2;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 value7;\n  int buffer;\n  int factor;\n  undefined4 value8;\n  int limit;\n  undefined4 value9;\n  undefined4 value10;\n  undefined flag2;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  value1 = 0;\n  value2 = 0;\n  value3 = 0;\n  value4 = 0;\n  value5 = 0;\n  value6 = 0;\n  value7 = 0;\n  buffer = FUN_08007320(input1,&DAT_0800a6cc);\n  if (buffer != 0) {\n    result = FUN_080075dc();\n    factor = result / input2 - 1;\n    limit = input3 + -1;\n    value9 = 0;\n    value8 = 0;\n    value10 = 0;\n    flag2 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input1;\n      status1 = FUN_08006092(&buffer);\n      if (status1 != 0) {\n        return;\n      }\n    }\n    status1 = FUN_08006c7c(input1);\n    if ((((status1 == 0) || (status1 == 4)) || (status1 == 8)) || ((status1 == 0xc || (status1 == 0x18)))) {\n      value1 = 0x60;\n      value3 = 0;\n      value5 = 0;\n      value4 = 0;\n      value7 = 0;\n      value6 = 0;\n      value2 = input4;\n      status2 = FUN_08006186(&buffer,&value1,status1);\n      if (status2 == 0) {\n        result = FUN_08007376(input1,&DAT_0800a6cc);\n        if ((result & 0x100000) == 0) {\n          FUN_08006390(&buffer,status1);\n        }\n        else {\n          FUN_0800643c(&buffer,status1);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "process_data_08007118",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "result",
                "iVar2": "status1",
                "iVar3": "status2",
                "local_74": "value1",
                "local_70": "value2",
                "local_6c": "value3",
                "local_68": "value4",
                "local_64": "value5",
                "local_60": "value6",
                "local_5c": "value7",
                "local_58": "buffer",
                "local_54": "factor",
                "local_50": "value8",
                "local_4c": "limit",
                "local_48": "value9",
                "local_44": "value10",
                "local_1b": "flag2"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320",
                "FUN_08006186"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 input)\n\n{\n  int result;\n  uint flags;\n  int dataArray [17];\n  \n  dataArray[0] = FUN_08007320(input,&DAT_0800a6cc);\n  if ((dataArray[0] != 0) &&\n     ((((result = FUN_08006c7c(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08007376(input,&DAT_0800a6cc);\n    if ((flags & 0x100000) == 0) {\n      FUN_080063c0(dataArray,result);\n    }\n    else {\n      FUN_08006460(dataArray,result);\n    }\n    FUN_08005e2e(dataArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "dataArray"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_system_0800723c",
            "code": "\nvoid initializeSystem_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_system_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "initialize_application_08007246",
            "code": "\nvoid initialize_application_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "initialize_application_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_hardware_08007258",
            "code": "\n\n\nvoid initializeHardware_08007258(uint deviceId,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 deviceType;\n  uint bitMask;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  deviceType = FUN_08006bb8((deviceId << 0x18) >> 0x1c);\n  bitMask = 1 << (deviceId & 0xf) & 0xffff;\n  localVar3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceId - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceId == 0xf) || (deviceId == 0x13)) || (deviceId == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVar1 = param2;\n  localVar2 = param3;\n  FUN_080040e8(deviceType,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_hardware_08007258",
                "param_1": "deviceId",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "deviceType",
                "local_20": "bitMask",
                "local_1c": "localVar1",
                "local_18": "localVar2",
                "local_14": "localVar3"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "update_flag_based_on_param_080072d8",
            "code": "\nvoid updateFlagBasedOnParam_080072d8(functionResult param,flagType flag,flagStatus flagValue,functionResult data)\n\n{\n  if (flagValue == 0) {\n    FUN_080042e2(param,flag,0,data,data);\n    return;\n  }\n  FUN_080042e2(param,flag,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "update_flag_based_on_param_080072d8",
                "param_1": "param",
                "param_2": "flag",
                "param_3": "flagValue",
                "param_4": "data",
                "undefined4": "functionResult",
                "undefined2": "flagType",
                "int": "flagStatus"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid executeFunction_080072f0(undefined4 input_1,undefined2 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_080042d4(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_system_080072fa",
            "code": "\nvoid initialize_system_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_system_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_in_array_08007306",
            "code": "\nundefined4 find_value_in_array_08007306(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_in_array_08007306",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_parameter_08007320",
            "code": "\nundefined4 checkParameter_08007320(int parameter)\n\n{\n  undefined4 result;\n  \n  if (parameter != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_parameter_08007320",
                "param_1": "parameter",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_value_by_key_08007332",
            "code": "\nint find_value_by_key_08007332(int key,char *data)\n\n{\n  while( true ) {\n    if (*(int *)(data + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(data + 4) == key) break;\n    data = data + 0xc;\n  }\n  return (int)*data;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_value_by_key_08007332",
                "param_1": "key",
                "param_2": "data"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_param_0800734a",
            "code": "\nundefined4 checkParam_0800734a(int inputParam)\n\n{\n  undefined4 result;\n  \n  if (inputParam != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_param_0800734a",
                "param_1": "inputParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_in_list_0800735a",
            "code": "\nundefined4 find_value_in_list_0800735a(int value_to_find,char *list)\n\n{\n  while( true ) {\n    if (*list == -1) {\n      return 0xffffffff;\n    }\n    if (*list == value_to_find) break;\n    list = list + 0xc;\n  }\n  return *(undefined4 *)(list + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_in_list_0800735a",
                "param_1": "value_to_find",
                "param_2": "list"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_input_08007376",
            "code": "\nundefined4 check_input_08007376(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_input_08007376",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "compare_values_0800738a",
            "code": "\nundefined4 compare_values_0800738a(int value_1,char *values_array)\n\n{\n  if (value_1 == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*values_array == -1) {\n      return 0;\n    }\n    if (value_1 == *values_array) break;\n    values_array = values_array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "compare_values_0800738a",
                "param_1": "value_1",
                "param_2": "values_array"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_non_zero_080073ae",
            "code": "\nint compareAndReturnNonZero_080073ae(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_non_zero_080073ae",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_function_080073c0",
            "code": "\nvoid execute_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_function_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "run_infinite_loop_080073e8",
            "code": "\nvoid runInfiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "run_infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_memory_080073ec",
            "code": "\n\n\nvoid initializeMemory_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_memory_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_flags_and_data_ptr_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlagsAndDataPtr_08007438(int *dataPtr)\n\n{\n  if (*dataPtr == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = dataPtr;\n  }\n  if (*dataPtr == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = dataPtr;\n  }\n  if (*dataPtr == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = dataPtr;\n  }\n  if (*dataPtr == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = dataPtr;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_flags_and_data_ptr_08007438",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_data_flags_080074e0",
            "code": "\n\n\nvoid updateDataFlags_080074e0(int *dataPtr)\n\n{\n  if (*dataPtr == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*dataPtr == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*dataPtr == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*dataPtr == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_data_flags_080074e0",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_interrupt_number_08007544",
            "code": "\nundefined4 getTimerInterruptNumber_08007544(uint interruptNumber)\n\n{\n  if (interruptNumber == 0xffffffff) {\n    return 0;\n  }\n  if (interruptNumber == 0x40000400) {\n    return 0x1d;\n  }\n  if (interruptNumber < 0x40000401) {\n    if (interruptNumber == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (interruptNumber == 0x40000800) {\n      return 0x1e;\n    }\n    if (interruptNumber == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_interrupt_number_08007544",
                "param_1": "interruptNumber"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "get_timer_instance_08007594",
            "code": "\nundefined4 getTimerInstance_08007594(uint timerValue)\n\n{\n  if (timerValue == 0xffffffff) {\n    return 0;\n  }\n  if (timerValue == 0x40000400) {\n    return 1;\n  }\n  if (timerValue < 0x40000401) {\n    if (timerValue == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerValue == 0x40000800) {\n      return 1;\n    }\n    if (timerValue == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "get_timer_instance_08007594",
                "param_1": "timerValue"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "get_clock_source_080075dc",
            "code": "\nint getClockSource_080075dc(undefined4 input)\n\n{\n  uint clockSource;\n  int result;\n  uint localValue;\n  undefined4 source1;\n  undefined4 source2;\n  undefined4 source3;\n  undefined4 source4;\n  uint value1;\n  uint value2;\n  \n  source2 = 0;\n  source3 = 0;\n  source4 = 0;\n  value1 = 0;\n  value2 = 0;\n  source1 = 0;\n  FUN_08005a68(&source2,&source1);\n  result = FUN_08007594(input);\n  clockSource = value2;\n  localValue = value1;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    localValue = clockSource;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    localValue = 0;\n  }\n  if (localValue != 0x500) {\n    if (localValue < 0x501) {\n      if (localValue != 0x400) {\n        return result;\n      }\n    }\n    else if ((localValue != 0x600) && (localValue != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "get_clock_source_080075dc",
                "param_1": "input",
                "uVar1": "clockSource",
                "iVar2": "result",
                "uVar3": "localValue",
                "local_20": "source1",
                "local_1c": "source2",
                "local_18": "source3",
                "local_14": "source4",
                "local_10": "value1",
                "local_c": "value2"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_widgets_08007648",
            "code": "\nvoid initializeWidgets_08007648(undefined4 *widgetList,undefined4 settings,undefined4 userInput,undefined4 theme)\n\n{\n  char character;\n  uint microseconds;\n  int result;\n  undefined4 *nextWidget;\n  undefined4 count1;\n  undefined4 count2;\n  undefined4 count3;\n  undefined4 count4;\n  undefined4 count5;\n  undefined4 count6;\n  undefined4 count7;\n  \n  count1 = 0;\n  count2 = 0;\n  count3 = 0;\n  count4 = 0;\n  count5 = 0;\n  count6 = 0;\n  count7 = 0;\n  nextWidget = widgetList + 1;\n  *widgetList = 0x40000000;\n  widgetList[1] = 0x40000000;\n  widgetList[4] = settings;\n  microseconds = FUN_080075dc();\n  widgetList[2] = microseconds / 1000000 - 1;\n  widgetList[5] = 0;\n  widgetList[3] = 0;\n  widgetList[6] = 0;\n  widgetList[0x13] = theme;\n  count1 = 0;\n  count3 = 0;\n  count5 = 0;\n  count4 = 0;\n  count6 = 0;\n  count7 = 0;\n  count2 = userInput;\n  character = FUN_08007544(*widgetList);\n  FUN_08003f30((int)character,0xe,0);\n  character = FUN_08007544(*widgetList);\n  FUN_08003f94((int)character);\n  result = FUN_08006060(nextWidget);\n  if ((result == 0) && (result = FUN_08006128(nextWidget,&count1,0), result == 0)) {\n    FUN_08006280(nextWidget,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_widgets_08007648",
                "param_1": "widgetList",
                "param_2": "settings",
                "param_3": "userInput",
                "param_4": "theme",
                "cVar1": "character",
                "uVar2": "microseconds",
                "iVar3": "result",
                "puVar4": "nextWidget",
                "local_34": "count1",
                "local_30": "count2",
                "local_2c": "count3",
                "local_28": "count4",
                "local_24": "count5",
                "local_20": "count6",
                "local_1c": "count7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *data)\n\n{\n  char result;\n  int errorCode;\n  \n  data[0x13] = 0;\n  result = FUN_08007544(*data);\n  FUN_08003fb0((int)result);\n  errorCode = FUN_08005df4(data + 1);\n  if (errorCode == 0) {\n    FUN_080062f4(data + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "errorCode"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_system_08007708",
            "code": "\nvoid initialize_system_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_system_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_application_08007710",
            "code": "\nvoid initialize_application_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_4_08007718",
            "code": "\nint subtract_4_08007718(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_4_08007718",
                "param_1": "num"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_callback_if_flag_set_0800771c",
            "code": "\nvoid executeCallbackIfFlagSet_0800771c(int callbackData)\n\n{\n  int callbackFunction;\n  \n  callbackFunction = FUN_08007718();\n  if ((*(code **)(callbackFunction + 0x4c) != (code *)0x0) && (*(char *)(callbackData + 0x1c) == '\\x01')) {\n    (**(code **)(callbackFunction + 0x4c))(callbackFunction,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_callback_if_flag_set_0800771c",
                "param_1": "callbackData",
                "iVar1": "callbackFunction"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_function_08007736",
            "code": "\nvoid executeFunction_08007736(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007718();\n  if (*(code **)(returnValue + 0x48) != (code *)0x0) {\n    (**(code **)(returnValue + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_function_08007736",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_offset_value_08007744",
            "code": "\nundefined4 getOffsetValue_08007744(int address)\n\n{\n  return *(undefined4 *)(*(int *)(address + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_offset_value_08007744",
                "param_1": "address"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "update_pointer_value_0800774a",
            "code": "\nvoid updatePointerValue_0800774a(int inputPointer,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(inputPointer + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "update_pointer_value_0800774a",
                "param_1": "inputPointer",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "store_value_at_offset_08007750",
            "code": "\nvoid storeValueAtOffset_08007750(int baseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(baseAddress + 4) + 0x34 + index * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "store_value_at_offset_08007750",
                "param_1": "baseAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *deviceInfo,int param2,int param3,int param4,undefined param5)\n\n{\n  int pin1Peripheral;\n  int pin2Peripheral;\n  undefined4 i2cMask;\n  uint uVar4;\n  uint uVar5;\n  int *ptrNextDeviceInfo;\n  uint i2cPinsMask;\n  uint slowSlewRateBits;\n  uint hysteresisBits;\n  undefined4 openDrainBits;\n  \n  if (deviceInfo != (int *)0x0) {\n    ptrNextDeviceInfo = deviceInfo + 1;\n    pin1Peripheral = FUN_08007320((int)*(char *)(deviceInfo + 0x16),&DAT_0800a69c);\n    pin2Peripheral = FUN_08007320((int)*(char *)((int)deviceInfo + 0x59),&DAT_0800a66c);\n    if ((pin1Peripheral == 0) || (pin2Peripheral == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pin1Peripheral = FUN_080073ae(pin1Peripheral,pin2Peripheral);\n      *deviceInfo = pin1Peripheral;\n      if (pin1Peripheral == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pin1Peripheral == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)deviceInfo + 0x5a) = 0x1f;\n          *(undefined *)((int)deviceInfo + 0x5b) = 0x20;\n          DAT_20000668 = ptrNextDeviceInfo;\n        }\n        if (*deviceInfo == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)deviceInfo + 0x5a) = 0x21;\n          *(undefined *)((int)deviceInfo + 0x5b) = 0x22;\n          DAT_2000066c = ptrNextDeviceInfo;\n        }\n        i2cMask = FUN_08006bb8((uint)((int)*(char *)((int)deviceInfo + 0x59) << 0x18) >> 0x1c);\n        i2cPinsMask = 1 << ((int)*(char *)((int)deviceInfo + 0x59) & 0xfU) & 0xffff;\n        uVar4 = FUN_08007376((int)*(char *)((int)deviceInfo + 0x59),&DAT_0800a66c);\n        uVar5 = FUN_08007376((int)*(char *)((int)deviceInfo + 0x59),&DAT_0800a66c);\n        slowSlewRateBits = (uVar4 >> 3 & 1) << 4 | uVar5 & 7;\n        openDrainBits = 3;\n        pin1Peripheral = FUN_08007376((int)*(char *)((int)deviceInfo + 0x59),&DAT_0800a66c);\n        hysteresisBits = (uint)(pin1Peripheral << 0x1a) >> 0x1e;\n        pin1Peripheral = FUN_08007376((int)*(char *)((int)deviceInfo + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        uVar5 = 1;\n        uVar4 = _DAT_40021018;\n        switch((uint)(pin1Peripheral << 0x11) >> 0x19) {\n        case 1:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = uVar5;\n          break;\n        case 2:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 3:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = uVar5;\n          break;\n        case 4:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 5:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = uVar5;\n          break;\n        case 6:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 7:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = uVar5;\n          break;\n        case 8:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 9:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = uVar5;\n          break;\n        case 10:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xb:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xc:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xd:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xe:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xf:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x10:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x11:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x12:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x13:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x14:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x15:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x16:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x17:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x1b:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x1c:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x21:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x22:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x23:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x24:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = uVar5;\n        }\n        FUN_080040e8(i2cMask,&i2cPinsMask,uVar4,uVar5);\n        i2cMask = FUN_08006bb8((uint)((int)*(char *)(deviceInfo + 0x16) << 0x18) >> 0x1c);\n        i2cPinsMask = 1 << ((int)*(char *)(deviceInfo + 0x16) & 0xfU) & 0xffff;\n        uVar4 = FUN_08007376((int)*(char *)(deviceInfo + 0x16),&DAT_0800a69c);\n        uVar5 = FUN_08007376((int)*(char *)(deviceInfo + 0x16),&DAT_0800a69c);\n        slowSlewRateBits = (uVar4 >> 3 & 1) << 4 | uVar5 & 7;\n        openDrainBits = 3;\n        pin1Peripheral = FUN_08007376((int)*(char *)(deviceInfo + 0x16),&DAT_0800a69c);\n        hysteresisBits = (uint)(pin1Peripheral << 0x1a) >> 0x1e;\n        pin1Peripheral = FUN_08007376((int)*(char *)(deviceInfo + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        uVar5 = 1;\n        uVar4 = _DAT_40021018;\n        switch((uint)(pin1Peripheral << 0x11) >> 0x19) {\n        case 1:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = uVar5;\n          break;\n        case 2:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 3:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = uVar5;\n          break;\n        case 4:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 5:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = uVar5;\n          break;\n        case 6:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 7:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = uVar5;\n          break;\n        case 8:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 9:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = uVar5;\n          break;\n        case 10:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xb:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xc:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xd:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xe:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0xf:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x10:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x11:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x12:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x13:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x14:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x15:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x16:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x17:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x1b:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x1c:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x21:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x22:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x23:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = uVar5;\n          break;\n        case 0x24:\n          uVar4 = 0x40010000;\n          uVar5 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = uVar5;\n        }\n        FUN_080040e8(i2cMask,&i2cPinsMask,uVar4,uVar5);\n        deviceInfo[1] = *deviceInfo;\n        deviceInfo[2] = param2;\n        deviceInfo[3] = 0;\n        deviceInfo[4] = param4;\n        deviceInfo[7] = 0xff;\n        deviceInfo[5] = param3;\n        deviceInfo[6] = 0;\n        deviceInfo[8] = 0;\n        deviceInfo[9] = 0;\n        *(undefined *)((int)deviceInfo + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)deviceInfo + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)deviceInfo + 0x5a));\n        FUN_08003f30((int)*(char *)((int)deviceInfo + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)deviceInfo + 0x5b));\n        FUN_080045c0(ptrNextDeviceInfo);\n        *(undefined *)((int)deviceInfo + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "deviceInfo",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "pin1Peripheral",
                "iVar2": "pin2Peripheral",
                "uVar3": "i2cMask",
                "piVar6": "ptrNextDeviceInfo",
                "local_38": "i2cPinsMask",
                "local_34": "slowSlewRateBits",
                "local_30": "hysteresisBits",
                "local_2c": "openDrainBits"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "find_pattern_08007e74",
            "code": "\nint findPattern_08007e74(int data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int currentData;\n  undefined4 tempValue;\n  \n  tempValue = value3;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    currentData = data + 4;\n    result = FUN_08004728(currentData,value1,value2,value3,tempValue);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(currentData), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(currentData);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(currentData);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "find_pattern_08007e74",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "currentData",
                "uVar6": "tempValue"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_08007ede",
            "code": "\nundefined4 copyData_08007ede(int destAddress,int srcAddress,uint numBytes)\n\n{\n  uint iteration;\n  \n  if (0x20 < numBytes) {\n    return 2;\n  }\n  for (iteration = 0; iteration < numBytes; iteration = iteration + 1 & 0xff) {\n    *(undefined *)(destAddress + iteration + 0x68) = *(undefined *)(srcAddress + iteration);\n    *(char *)(destAddress + 0x88) = *(char *)(destAddress + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_08007ede",
                "param_1": "destAddress",
                "param_2": "srcAddress",
                "param_3": "numBytes",
                "uVar1": "iteration"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "process_data_08007f0e",
            "code": "\nint process_data_08007f0e(int data_ptr,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initial_value;\n  int result;\n  uint difference;\n  int flag;\n  int temp_var;\n  undefined4 param4;\n  \n  param4 = param3;\n  initial_value = FUN_08003760();\n  difference = 0;\n  flag = 2;\n  do {\n    temp_var = data_ptr + 4;\n    result = FUN_080047f4(temp_var,param1,param2,param3,param4);\n    if (result == 0) {\n      flag = 0;\n      while ((result = FUN_0800542a(temp_var), result != 0x20 && (flag == 0))) {\n        result = FUN_08003760();\n        difference = result - initial_value;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp_var);\n          if (result != 0) {\n            flag = 2;\n          }\n        }\n        else {\n          flag = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp_var);\n  } while ((result == 4) && (difference < 100));\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "process_data_08007f0e",
                "param_1": "data_ptr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "flag",
                "iVar5": "temp_var",
                "uVar6": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtract_four_08007f78(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_08007f7c",
            "code": "\nvoid updateData_08007f7c(int data,int value)\n\n{\n  if (data != 0) {\n    if (value != 0) {\n      *(int *)(data + 0x60) = value;\n      FUN_080049e0(data + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_08007f7c",
                "param_1": "data",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_value_and_call_function_08007f8e",
            "code": "\nvoid updateValueAndCallFunction_08007f8e(int valuePointer,int newValue)\n\n{\n  if (valuePointer != 0) {\n    if (newValue != 0) {\n      *(int *)(valuePointer + 100) = newValue;\n      FUN_080049e0(valuePointer + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_value_and_call_function_08007f8e",
                "param_1": "valuePointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "update_data_08007fa0",
            "code": "\nvoid updateData_08007fa0(int dataAddress,int flag,int checkValue,undefined4 paramValue)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (checkValue == *(int *)(dataAddress + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(returnValue + 0x88) = 0;\n      *(undefined *)(returnValue + 0x5c) = 0;\n      if (*(code **)(returnValue + 100) != (code *)0x0) {\n        (**(code **)(returnValue + 100))();\n      }\n      FUN_080048c8(dataAddress,returnValue + 0x68,*(undefined *)(returnValue + 0x88),8);\n      return;\n    }\n    *(undefined *)(returnValue + 0x5c) = 1;\n    FUN_08004954(dataAddress,returnValue + 0x68,0x20,8,paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "update_data_08007fa0",
                "param_1": "dataAddress",
                "param_2": "flag",
                "param_3": "checkValue",
                "param_4": "paramValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_conditional_function_08007ff0",
            "code": "\nvoid executeConditionalFunction_08007ff0(undefined4 inputParameter)\n\n{\n  int tempVar1;\n  \n  tempVar1 = FUN_08007f78();\n  if (((*(code **)(tempVar1 + 0x60) != (code *)0x0) && (*(char *)(tempVar1 + 0x5c) == '\\x01')) &&\n     (*(char *)(tempVar1 + 0x2c) != ' ')) {\n    (**(code **)(tempVar1 + 0x60))(tempVar1 + 0x68);\n  }\n  FUN_080049e0(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_conditional_function_08007ff0",
                "param_1": "inputParameter",
                "iVar1": "tempVar1"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputParameter)\n\n{\n  int functionReturnValue;\n  \n  functionReturnValue = FUN_08007f78();\n  if (*(char *)(functionReturnValue + 0x5d) == '\\0') {\n    FUN_080049e0(inputParameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputParameter",
                "iVar1": "functionReturnValue"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_08008078",
            "code": "\n\n\nvoid initializeUART_08008078(int *uartConfig)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 uartConfigValue;\n  uint uartPinConfig;\n  uint pinMask;\n  uint uartPinConfigBits;\n  uint uartPinConfigShift;\n  undefined4 uartMode;\n  \n  if (uartConfig != (int *)0x0) {\n    uartPin1 = FUN_08007320((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n    uartPin2 = FUN_08007320((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_080073ae(uartPin1);\n      *uartConfig = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x27;\n        }\n        uartConfigValue = FUN_08006bb8((uint)((int)*(char *)((int)uartConfig + 0x59) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_08007376((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n        pinMask = 1 << (*(byte *)((int)uartConfig + 0x59) & 0xf) & 0xffff;\n        uartPinConfigBits = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uartPinConfigShift = (uartPinConfig << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPinConfig << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartMode = 3;\n        FUN_080040e8(uartConfigValue,&pinMask);\n        uartConfigValue = FUN_08006bb8((uint)((int)*(char *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_08007376((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n        pinMask = 1 << (*(byte *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        uartPinConfigBits = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uartPinConfigShift = (uartPinConfig << 0x1a) >> 0x1e;\n        FUN_080040e8(uartConfigValue,&pinMask);\n        (&DAT_200006c0)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_0800674e(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_08008078",
                "param_1": "uartConfig",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "uartConfigValue",
                "uVar4": "uartPinConfig",
                "local_20": "pinMask",
                "local_1c": "uartPinConfigBits",
                "local_18": "uartPinConfigShift",
                "local_14": "uartMode"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int returnValue;\n  undefined4 secondReturnValue;\n  \n  returnValue = FUN_08007320(2,&DAT_0800a864);\n  if (returnValue != 0) {\n    secondReturnValue = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(secondReturnValue,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "returnValue",
                "uVar2": "secondReturnValue"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "check_and_execute_function_08008500",
            "code": "\nuint check_and_execute_function_08008500(undefined4 value,uint limit)\n\n{\n  int function_result;\n  int function_status;\n  uint count;\n  \n  function_result = FUN_08003760();\n  function_status = FUN_08007320(2,&DAT_0800a864);\n  if (function_status == 0) {\n    return 0;\n  }\n  for (count = 0;\n      (count < 5 &&\n      (((&DAT_200006c0)[count] == 0 ||\n       (function_status = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[count] != function_status))));\n      count = count + 1 & 0xff) {\n  }\n  if (4 < count) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    count = (uint)DAT_20000060;\n  }\n  do {\n    function_status = FUN_080067ac((&DAT_200006c0)[count],value,limit & 0xffff,1000);\n    if (function_status == 0) {\n      return limit;\n    }\n    function_status = FUN_08003760();\n  } while ((uint)(function_status - function_result) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "check_and_execute_function_08008500",
                "param_1": "value",
                "param_2": "limit",
                "iVar1": "function_result",
                "iVar2": "function_status",
                "uVar3": "count"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_flag_set_080085b8",
            "code": "\nbool isFlagSet_080085b8(int flag)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flag + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_bit_set_080085dc",
            "code": "\nbool isBitSet_080085dc(int value)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_bit_set_080085dc",
                "param_1": "value",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "copy_data_from_source_08008600",
            "code": "\nundefined4 copyDataFromSource_08008600(int sourceAddress,undefined *destination,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (sourceAddress == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *destination = *(undefined *)(sourceAddress + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(sourceAddress + 0x44)],sourceAddress + 0x45,1,&DAT_200006c0,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "copy_data_from_source_08008600",
                "param_1": "sourceAddress",
                "param_2": "destination",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = value1;\n      *(int *)(&DAT_20000684 + index * 4) = data;\n      FUN_08003f30((int)*(char *)(data + 0x5a),0,1,index,value3);\n      FUN_08003f94((int)*(char *)(data + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "process_data_08008694",
            "code": "\nvoid processData_08008694(int inputPointer,undefined4 dataValue)\n\n{\n  byte byteValue;\n  \n  if (inputPointer != 0) {\n    byteValue = *(byte *)(inputPointer + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = dataValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = inputPointer;\n    FUN_08003f30((int)*(char *)(inputPointer + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(inputPointer + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(inputPointer + 0x44)],\n                 *(int *)(inputPointer + 100) + (uint)*(ushort *)(inputPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "process_data_08008694",
                "param_1": "inputPointer",
                "param_2": "dataValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_parameter_index_080086e8",
            "code": "\nuint find_parameter_index_080086e8(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_parameter_index_080086e8",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_function_based_on_value_0800870c",
            "code": "\nvoid executeFunctionBasedOnValue_0800870c(void)\n\n{\n  uint result;\n  \n  result = FUN_080086e8();\n  if (result < 5) {\n    (**(functionPointer **)(&DAT_20000670 + result * 4))(*(undefined4 *)(&DAT_20000684 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_function_based_on_value_0800870c",
                "uVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomValue;\n  int result;\n  int address;\n  \n  randomValue = FUN_080086e8();\n  address = *(int *)(&DAT_200006ac + randomValue * 4);\n  if ((randomValue < 5) && (result = (**(functionPointer **)(&DAT_20000698 + randomValue * 4))(address), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 100) + (uint)*(ushort *)(address + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomValue",
                "iVar2": "result",
                "iVar3": "address",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= endOfStack) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "endOfStack"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_error_code_08008840",
            "code": "\nerror_code get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_error_code_08008840",
                "undefined4": "error_code"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "initialize_memory_08008846",
            "code": "\nundefined4 initializeMemory_08008846(undefined4 param_1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_08008850",
            "code": "\nundefined4 initialize_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_program_08008854",
            "code": "\nvoid initializeProgram_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_program_08008854",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_zero_08008858",
            "code": "\nundefined4 initializeZero_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_zero_08008858"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "execute_function_0800885c",
            "code": "\nvoid execute_function_0800885c(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008500(arg2,arg3,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "execute_function_0800885c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "get_return_value_0800887c",
            "code": "\nundefined4 getReturnValue_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "get_return_value_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "apply_transformation_08008880",
            "code": "\nuint applyTransformation_08008880(uint input)\n\n{\n  bool isInRange;\n  char result;\n  uint output;\n  \n  if (input < 0xe) {\n    if (input + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = input < 0x3c;\n  }\n  if (isInRange) {\n    if (input < 0xe) {\n      input = input + 0x2e;\n    }\n    result = (&DAT_0800a908)[input];\n  }\n  else {\n    result = -1;\n  }\n  if (result == -1) {\n    output = 0;\n  }\n  else {\n    output = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return output >> (0xc - DAT_20000088 & 0xff);\n      }\n      return output << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08008880": "apply_transformation_08008880",
                "param_1": "input",
                "bVar1": "isInRange",
                "cVar2": "result",
                "uVar3": "output"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint inputValue,uint shiftAmount)\n\n{\n  int functionResult;\n  int lookupIndex;\n  \n  if (inputValue < 0x3c) {\n    lookupIndex = (int)(char)(&DAT_0800a908)[inputValue];\n  }\n  else {\n    lookupIndex = -1;\n  }\n  if (lookupIndex != -1) {\n    functionResult = FUN_0800738a(lookupIndex,&DAT_0800a6cc);\n    if (functionResult == 0) {\n      FUN_08008990(inputValue,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          shiftAmount = shiftAmount << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          shiftAmount = shiftAmount >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (shiftAmount < 0x80) {\n        FUN_08008a24(inputValue,0);\n      }\n      else {\n        FUN_08008a24(inputValue,1);\n      }\n    }\n    else {\n      functionResult = FUN_08006b28(lookupIndex,&DAT_200006d8);\n      if (functionResult == 0) {\n        FUN_08006b3e(lookupIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          shiftAmount = shiftAmount << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          shiftAmount = shiftAmount >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(lookupIndex,0x3e418,0xff,shiftAmount,functionResult == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "inputValue",
                "param_2": "shiftAmount",
                "iVar1": "functionResult",
                "iVar2": "lookupIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "execute_operation_08008990",
            "code": "\nvoid executeOperation_08008990(uint operationType,undefined4 param1,undefined4 param2,undefined1 *dataArray)\n\n{\n  int result;\n  undefined1 *dataPointer;\n  int dataIndex;\n  \n  if (operationType < 0x3c) {\n    dataIndex = (int)(char)(&DAT_0800a908)[operationType];\n    dataPointer = &DAT_0800a908;\n  }\n  else {\n    dataIndex = -1;\n    dataPointer = dataArray;\n  }\n  if (dataIndex != -1) {\n    result = FUN_08006b28(dataIndex,&DAT_200006d8,param2,dataPointer,dataArray);\n    if (result != 0) {\n      result = FUN_0800738a(dataIndex,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(dataIndex);\n      }\n      FUN_08006b5c(dataIndex,&DAT_200006d8);\n    }\n    switch(param1) {\n    case 0:\n      FUN_08007258(dataIndex,0);\n      break;\n    case 1:\n      FUN_08007258(dataIndex,1,0);\n      break;\n    case 2:\n      FUN_08007258(dataIndex,0,1);\n      break;\n    case 3:\n      FUN_08007258(dataIndex,0,2);\n    }\n    FUN_08006b3e(dataIndex,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "execute_operation_08008990",
                "param_1": "operationType",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "dataArray",
                "iVar1": "result",
                "puVar2": "dataPointer",
                "iVar3": "dataIndex"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_parameter_08008a24",
            "code": "\nvoid processParameter_08008a24(uint inputValue,undefined4 outputValue,undefined4 temporaryValue,undefined1 *inputData)\n\n{\n  int returnValue;\n  undefined4 shiftedValue;\n  undefined1 *dataPointer;\n  uint parsedValue;\n  \n  if (inputValue < 0x3c) {\n    parsedValue = (uint)(char)(&DAT_0800a908)[inputValue];\n    dataPointer = &DAT_0800a908;\n  }\n  else {\n    parsedValue = 0xffffffff;\n    dataPointer = inputData;\n  }\n  if ((parsedValue != 0xffffffff) &&\n     (returnValue = FUN_08006b28(parsedValue,&DAT_200006ec,temporaryValue,dataPointer,inputData), returnValue != 0)) {\n    shiftedValue = FUN_08006b7c((parsedValue << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (parsedValue & 0xf) & 0xffff,outputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_parameter_08008a24",
                "param_1": "inputValue",
                "param_2": "outputValue",
                "param_3": "temporaryValue",
                "param_4": "inputData",
                "iVar1": "returnValue",
                "uVar2": "shiftedValue",
                "puVar3": "dataPointer",
                "uVar4": "parsedValue"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_character_validity_08008a6c",
            "code": "\nchar checkCharacterValidity_08008a6c(uint character)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedValue;\n  uint index;\n  \n  if (character < 0x3c) {\n    index = (uint)(char)(&DAT_0800a908)[character];\n  }\n  else {\n    index = 0xffffffff;\n  }\n  if (index == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_08006b28(index,&DAT_200006ec);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((index << 0x18) >> 0x1c);\n      isValid = FUN_080072f0(shiftedValue,1 << (index & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_character_validity_08008a6c",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "index"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_and_execute_08008abc",
            "code": "\nvoid initialize_and_execute_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_and_execute_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_and_subtract_08008afa",
            "code": "\nushort calculate_and_subtract_08008afa(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_and_subtract_08008afa",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int data)\n\n{\n  int returnValue;\n  ushort newValue;\n  undefined value;\n  \n  returnValue = FUN_08008600(data,&value);\n  if ((returnValue == 0) &&\n     (newValue = *(short *)(data + 0x60) + 1U & 0x3f, newValue != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = value;\n    *(ushort *)(data + 0x60) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "data",
                "iVar1": "returnValue",
                "uVar2": "newValue",
                "local_9": "value"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_data_08008c20",
            "code": "\nvoid initializeData_08008c20(int pData)\n\n{\n  *(int *)(pData + 0x130) = pData + 0x11;\n  *(undefined2 *)(pData + 0x134) = 0;\n  *(undefined2 *)(pData + 0x136) = 0;\n  *(int *)(pData + 0x138) = pData + 0x51;\n  *(undefined2 *)(pData + 0x13c) = 0;\n  *(undefined2 *)(pData + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_data_08008c20",
                "param_1": "pData"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "configure_serial_port_08008c44",
            "code": "\nvoid configureSerialPort_08008c44(int serialPortPtr,undefined4 baudRate,byte serialConfig)\n\n{\n  uint configError;\n  byte configMasked;\n  int configValue;\n  code *missingJumpTable;\n  \n  *(undefined4 *)(serialPortPtr + 0x11c) = baudRate;\n  *(byte *)(serialPortPtr + 0x140) = serialConfig;\n  configMasked = serialConfig & 7;\n  if (configMasked == 4) {\n    configValue = 7;\n  }\n  else if (configMasked == 6) {\n    configValue = 8;\n  }\n  else if (configMasked == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((serialConfig & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((serialConfig & 0x20) == 0) {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortPtr + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((serialConfig & 8) == 0) {\n    *(undefined4 *)(serialPortPtr + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortPtr + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPortPtr + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPortPtr + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08008078(serialPortPtr + 0xd4);\n    FUN_0800863c(serialPortPtr + 0xd4,0x8008b67);\n    return;\n  }\n  missingJumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (configError < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[configError];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*missingJumpTable)(0,configError,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "configure_serial_port_08008c44",
                "param_1": "serialPortPtr",
                "param_2": "baudRate",
                "param_3": "serialConfig",
                "extraout_r1": "configError",
                "bVar1": "configMasked",
                "iVar2": "configValue",
                "UNRECOVERED_JUMPTABLE": "missingJumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_param_value_08008d00",
            "code": "\nvoid setParamValue_08008d00(int baseAddress,uint valueIndex)\n\n{\n  undefined paramValue;\n  code *jumpTable;\n  \n  if (valueIndex < 0x3c) {\n    paramValue = (&DAT_0800a908)[valueIndex];\n  }\n  else {\n    paramValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = paramValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_param_value_08008d00",
                "param_1": "baseAddress",
                "param_2": "valueIndex",
                "uVar1": "paramValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int address,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(address + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_08008ba4_1_0800aab8;\n  if (data == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,param3,&DAT_20000700,param4);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(param2,&DAT_0800a81c);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_0800734a(param2,&DAT_0800a864);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08008c20(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_and_call_function_08008d8c",
            "code": "\nvoid check_and_call_function_08008d8c(int input_flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (input_flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_and_call_function_08008d8c",
                "param_1": "input_flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "set_data_08008df8",
            "code": "\nvoid set_data_08008df8(undefined4 *data_ptr,undefined value_1,undefined value_2,undefined value_3,\n                 undefined value_4)\n\n{\n  *data_ptr = &DAT_0800ab0c;\n  *(undefined *)(data_ptr + 1) = value_1;\n  *(undefined *)((int)data_ptr + 5) = value_2;\n  *(undefined *)((int)data_ptr + 6) = value_3;\n  *(undefined *)((int)data_ptr + 7) = value_4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "set_data_08008df8",
                "param_1": "data_ptr",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3",
                "param_5": "value_4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_parameters_08008e14",
            "code": "\nvoid check_parameters_08008e14(int param_value_1,int param_value_2)\n\n{\n  if ((param_value_1 == 1) && (param_value_2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_parameters_08008e14",
                "param_1": "param_value_1",
                "param_2": "param_value_2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_linear_interpolation_08008ef4",
            "code": "\nint calculateLinearInterpolation_08008ef4(int startValue,int startPoint,int endPoint,int startOutput,int endOutput)\n\n{\n  return (uint)((endOutput - startOutput) * (startValue - startPoint)) / (uint)(endPoint - startPoint) + startOutput;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_linear_interpolation_08008ef4",
                "param_1": "startValue",
                "param_2": "startPoint",
                "param_3": "endPoint",
                "param_4": "startOutput",
                "param_5": "endOutput"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initializeApplication_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "continuous_processing_08008f1c",
            "code": "\nvoid continuous_processing_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "continuous_processing_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint num)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; num != 1; num = num >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "num",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_data_08008f78",
            "code": "\nvoid initializeData_08008f78(int flag,int value,undefined4 var1,undefined4 var2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,var2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_data_08008f78",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "var1",
                "param_4": "var2"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_operation_08009084",
            "code": "\nvoid executeOperation_08009084(int operation)\n\n{\n  int index;\n  \n  if (*(int *)(operation + 8) != 0) {\n    (**(code **)(operation + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeOperation_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_operation_08009084",
                "param_1": "operation",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_function_08009094",
            "code": "\nvoid checkAndExecuteFunction_08009094(void)\n\n{\n  int result;\n  \n  result = FUN_08008f3c();\n  if ((&DAT_20000858)[result * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "execute_function_080090c2",
            "code": "\nvoid executeFunction_080090c2(undefined4 inputParam,undefined4 outputParam)\n\n{\n  FUN_08009108(outputParam,inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "execute_function_080090c2",
                "param_1": "inputParam",
                "param_2": "outputParam"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "print_assertion_error_080090cc",
            "code": "\nvoid printAssertionError_080090cc(undefined4 assertion,undefined4 file,char *line,undefined4 function)\n\n{\n  undefined4 errorCode;\n  char *prependText;\n  undefined8 result;\n  undefined4 extraText;\n  \n  errorCode = *(undefined4 *)(DAT_20000090 + 0xc);\n  extraText = function;\n  if (line == (char *)0x0) goto LAB_080090f0;\n  prependText = \", function: \";\n  do {\n    FUN_08009124(errorCode,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,assertion,file\n                 ,prependText,line,extraText);\n    result = FUN_08009b5c();\n    file = (undefined4)((ulonglong)result >> 0x20);\n    errorCode = (undefined4)result;\nLAB_080090f0:\n    line = \"\";\n    prependText = line;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "print_assertion_error_080090cc",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "line",
                "param_4": "function",
                "uVar1": "errorCode",
                "pcVar2": "prependText",
                "uVar3": "result",
                "uVar4": "extraText"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_unsigned_long_long_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftUnsignedLongLong_08009108(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_unsigned_long_long_08009108",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "process_data_08009124",
            "code": "\nvoid processData_08009124(undefined4 input1,undefined4 input2,undefined4 stackValue1,undefined4 stackValue2)\n\n{\n  undefined4 stackValue3;\n  undefined4 stackValue4;\n  \n  stackValue3 = stackValue1;\n  stackValue4 = stackValue2;\n  FUN_0800937c(DAT_20000090,input1,input2,&stackValue3,input1,&stackValue3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "process_data_08009124",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "stackValue1",
                "param_4": "stackValue2",
                "uStack_8": "stackValue3",
                "uStack_4": "stackValue4"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid executeFunctions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 input)\n\n{\n  FUN_08009270(DAT_20000090,input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "input"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 dataPointer)\n\n{\n  FUN_080091d8(DAT_20000090,dataPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copyData_080091b0(int srcOffset,undefined *srcData,int dataLength)\n\n{\n  undefined *dstDataEnd;\n  undefined *dstData;\n  \n  dstData = (undefined *)(srcOffset + -1);\n  dstDataEnd = srcData + dataLength;\n  for (; srcData != dstDataEnd; srcData = srcData + 1) {\n    dstData = dstData + 1;\n    *dstData = *srcData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "srcOffset",
                "param_2": "srcData",
                "param_3": "dataLength",
                "puVar1": "dstDataEnd",
                "puVar2": "dstData"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_080091c6",
            "code": "\nvoid fillMemory_080091c6(undefined *destination,undefined value,int size)\n\n{\n  undefined *end;\n  \n  end = destination + size;\n  for (; destination != end; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_data_080091d8",
            "code": "\nvoid updateData_080091d8(undefined4 *output,int length,undefined4 value1,undefined4 value2)\n\n{\n  int **tempVar;\n  int **currentPtr1;\n  int **currentPtr2;\n  int *tempVar2;\n  int **prevPtr;\n  int **newPtr;\n  \n  if (length == 0) {\n    return;\n  }\n  newPtr = (int **)(length + -4);\n  if (*(int *)(length + -4) < 0) {\n    newPtr = (int **)((int)newPtr + *(int *)(length + -4));\n  }\n  FUNC_08009f48();\n  currentPtr2 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    newPtr[1] = (int *)0x0;\n    currentPtr1 = tempVar;\n    DAT_2000098c = newPtr;\n  }\n  else {\n    currentPtr2 = DAT_2000098c;\n    if (newPtr < DAT_2000098c) {\n      currentPtr1 = (int **)*newPtr;\n      currentPtr2 = (int **)((int)newPtr + (int)currentPtr1);\n      if (DAT_2000098c == currentPtr2) {\n        tempVar2 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        currentPtr2 = (int **)((int)tempVar2 + (int)currentPtr1);\n        *newPtr = (int *)currentPtr2;\n      }\n      newPtr[1] = (int *)DAT_2000098c;\n      DAT_2000098c = newPtr;\n    }\n    else {\n      do {\n        prevPtr = currentPtr2;\n        currentPtr2 = (int **)prevPtr[1];\n        if (currentPtr2 == (int **)0x0) break;\n      } while (currentPtr2 <= newPtr);\n      currentPtr1 = (int **)*prevPtr;\n      if ((int **)((int)prevPtr + (int)currentPtr1) == newPtr) {\n        currentPtr1 = (int **)((int)currentPtr1 + (int)*newPtr);\n        *prevPtr = (int *)currentPtr1;\n        if (currentPtr2 == (int **)((int)prevPtr + (int)currentPtr1)) {\n          tempVar2 = *currentPtr2;\n          currentPtr2 = (int **)currentPtr2[1];\n          currentPtr1 = (int **)((int)currentPtr1 + (int)tempVar2);\n          *prevPtr = (int *)currentPtr1;\n          prevPtr[1] = (int *)currentPtr2;\n        }\n      }\n      else if (newPtr < (int **)((int)prevPtr + (int)currentPtr1)) {\n        *output = 0xc;\n      }\n      else {\n        currentPtr1 = (int **)((int)newPtr + (int)*newPtr);\n        if (currentPtr2 == currentPtr1) {\n          tempVar2 = *currentPtr2;\n          currentPtr2 = (int **)currentPtr2[1];\n          currentPtr1 = (int **)((int)tempVar2 + (int)*newPtr);\n          *newPtr = (int *)currentPtr1;\n        }\n        newPtr[1] = (int *)currentPtr2;\n        prevPtr[1] = (int *)newPtr;\n      }\n    }\n  }\n  FUNC_08009f4a(output,currentPtr1,currentPtr2,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_data_080091d8",
                "param_1": "output",
                "param_2": "length",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "tempVar",
                "ppiVar1": "currentPtr1",
                "ppiVar2": "currentPtr2",
                "piVar3": "tempVar2",
                "ppiVar4": "prevPtr",
                "ppiVar5": "newPtr"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *output_address,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *next_block;\n  uint block_difference;\n  uint *previous_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_address = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    previous_block = DAT_2000098c;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_difference = *next_block - allocated_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_difference;\n          *(uint *)((int)next_block + block_difference) = allocated_size;\n          previous_block = (uint *)((int)next_block + block_difference);\n        }\n        goto LAB_080092d4;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(output_address);\n    }\n    current_block = (uint *)FUN_08009918(output_address,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = FUN_08009918(output_address,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(output_address);\n      allocated_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_address = 0xc;\n    FUNC_08009f4a(output_address);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "output_address",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "next_block",
                "uVar4": "block_difference",
                "puVar5": "previous_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_data_0800932c",
            "code": "\nuint processData_0800932c(int data,byte byteValue,byte **byteBuffer)\n\n{\n  int tempVar;\n  byte *bufferPtr;\n  byte *tempBufferPtr;\n  uint returnValue;\n  \n  bufferPtr = byteBuffer[2] + -1;\n  byteBuffer[2] = bufferPtr;\n  if ((-1 < (int)bufferPtr) ||\n     (((int)byteBuffer[6] <= (int)bufferPtr && (bufferPtr = (byte *)(uint)byteValue, bufferPtr != (byte *)0xa))))\n  {\n    bufferPtr = *byteBuffer;\n    *byteBuffer = bufferPtr + 1;\n    *bufferPtr = byteValue;\n    return (uint)byteValue;\n  }\n  if ((data != 0) && (*(int *)(data + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (byteBuffer == (byte **)&DAT_0800aba4) {\n    byteBuffer = *(byte ***)(data + 4);\n  }\n  else if (byteBuffer == (byte **)&DAT_0800abc4) {\n    byteBuffer = *(byte ***)(data + 8);\n  }\n  else if (byteBuffer == (byte **)&DAT_0800ab84) {\n    byteBuffer = *(byte ***)(data + 0xc);\n  }\n  byteBuffer[2] = byteBuffer[6];\n  tempBufferPtr = (byte *)(uint)*(ushort *)(byteBuffer + 3);\n  tempVar = (int)tempBufferPtr << 0x1c;\n  if (((tempVar < 0) && (tempBufferPtr = byteBuffer[4], tempBufferPtr != (byte *)0x0)) ||\n     (tempVar = FUN_08009a80(data,byteBuffer,tempVar,tempBufferPtr,bufferPtr), tempVar == 0)) {\n    returnValue = (uint)byteValue;\n    tempVar = (int)*byteBuffer - (int)byteBuffer[4];\n    if ((tempVar < (int)byteBuffer[5]) || (tempVar = FUN_08009c7c(data,byteBuffer), tempVar == 0)) {\n      byteBuffer[2] = byteBuffer[2] + -1;\n      bufferPtr = *byteBuffer;\n      *byteBuffer = bufferPtr + 1;\n      *bufferPtr = byteValue;\n      if ((byte *)(tempVar + 1) != byteBuffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byteBuffer + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar = FUN_08009c7c(data,byteBuffer);\n      if (tempVar == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_data_0800932c",
                "param_1": "data",
                "param_2": "byteValue",
                "param_3": "byteBuffer",
                "iVar1": "tempVar",
                "pbVar2": "bufferPtr",
                "pbVar3": "tempBufferPtr",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "iterate_through_array_08009358",
            "code": "\nint iterateThroughArray_08009358(undefined4 param1,undefined4 param2,undefined *array,int arrayLength)\n\n{\n  int result;\n  undefined *endPointer;\n  int currentPosition;\n  \n  endPointer = array + arrayLength;\n  currentPosition = arrayLength;\n  do {\n    if (array == endPointer) {\n      return 0;\n    }\n    result = FUN_0800932c(param1,*array,param2,arrayLength,currentPosition);\n    arrayLength = result + 1;\n    array = array + 1;\n  } while (arrayLength != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "iterate_through_array_08009358",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "array",
                "param_4": "arrayLength",
                "iVar1": "result",
                "puVar2": "endPointer",
                "iVar3": "currentPosition"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "extract_data_from_binary_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint extractDataFromBinary_0800937c(int binaryAddress,undefined4 *dataPointer,byte *byteArray,int *result)\n\n{\n  int returnValue;\n  int *resultPointer;\n  bool isNumeric;\n  byte *bytePointer;\n  byte *currentByte;\n  int unaffectedRegister;\n  int tempVar;\n  int *resultPointer;\n  uint flagBits;\n  int negativeValue;\n  undefined4 tempValue;\n  int numericValue;\n  int totalBytes;\n  byte character;\n  undefined flag1;\n  undefined flag2;\n  undefined flag3;\n  undefined4 flag4;\n  \n  resultPointer = result;\n  if ((binaryAddress != 0) && (*(int *)(binaryAddress + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (dataPointer == &DAT_0800aba4) {\n    dataPointer = *(undefined4 **)(binaryAddress + 4);\n  }\n  else if (dataPointer == (undefined4 *)&DAT_0800abc4) {\n    dataPointer = *(undefined4 **)(binaryAddress + 8);\n  }\n  else if (dataPointer == (undefined4 *)&DAT_0800ab84) {\n    dataPointer = *(undefined4 **)(binaryAddress + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(dataPointer + 3) << 0x1c)) || (dataPointer[4] == 0)) &&\n     (tempVar = FUN_08009a80(binaryAddress,dataPointer), tempVar != 0)) {\n    return -1;\n  }\n  totalBytes = 0;\n  flag1 = 0x20;\n  flag2 = 0x30;\n  bytePointer = byteArray;\nLAB_080093be:\n  currentByte = bytePointer;\n  if (*currentByte != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  bytePointer = currentByte + 1;\n  if (*currentByte != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  tempVar = (int)currentByte - (int)byteArray;\n  if (tempVar != 0) {\n    returnValue = FUN_08009358(binaryAddress,dataPointer,byteArray,tempVar);\n    if (returnValue == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(dataPointer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytes;\n    }\n    totalBytes = totalBytes + tempVar;\n  }\n  if (*currentByte == 0) goto LAB_08009568;\n  flagBits = 0;\n  numericValue = 0;\n  negativeValue = -1;\n  tempValue = 0;\n  flag3 = 0;\n  flag4 = 0;\n  bytePointer = currentByte + 1;\n  while( true ) {\n    tempVar = FUN_08009f2c(\"#-0+ \",*bytePointer);\n    byteArray = bytePointer + 1;\n    if (tempVar == 0) break;\n    flagBits = 1 << (tempVar + 0xf7ff54b0U & 0xff) | flagBits;\n    bytePointer = byteArray;\n  }\n  if ((int)(flagBits << 0x1b) < 0) {\n    flag3 = 0x20;\n  }\n  if ((int)(flagBits << 0x1c) < 0) {\n    flag3 = 0x2b;\n  }\n  if (*bytePointer == 0x2a) {\n    resultPointer = resultPointer + 1;\n    tempVar = *resultPointer;\n    resultPointer = resultPointer;\n    if (tempVar < 0) {\n      numericValue = -tempVar;\n      flagBits = flagBits | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    isNumeric = false;\n    tempVar = numericValue;\n    byteArray = bytePointer;\n    while( true ) {\n      if (9 < *byteArray - 0x30) break;\n      tempVar = tempVar * 10 + (*byteArray - 0x30);\n      isNumeric = true;\n      byteArray = byteArray + 1;\n    }\n    if (!isNumeric) goto LAB_080094a6;\n  }\n  numericValue = tempVar;\nLAB_080094a6:\n  if (*byteArray == 0x2e) {\n    if (byteArray[1] == 0x2a) {\n      byteArray = byteArray + 2;\n      resultPointer = resultPointer + 1;\n      negativeValue = *resultPointer;\n      resultPointer = resultPointer;\n      if (negativeValue < 0) {\n        negativeValue = -1;\n      }\n    }\n    else {\n      isNumeric = false;\n      tempVar = 0;\n      negativeValue = 0;\n      while( true ) {\n        byteArray = byteArray + 1;\n        if (9 < *byteArray - 0x30) break;\n        tempVar = tempVar * 10 + (*byteArray - 0x30);\n        isNumeric = true;\n      }\n      if (isNumeric) {\n        negativeValue = tempVar;\n      }\n    }\n  }\n  tempVar = FUN_08009f2c(&DAT_0800ab56,*byteArray,3);\n  if (tempVar != 0) {\n    byteArray = byteArray + 1;\n    flagBits = flagBits | 0x40 << (tempVar + 0xf7ff54aaU & 0xff);\n  }\n  character = *byteArray;\n  byteArray = byteArray + 1;\n  tempVar = FUN_08009f2c(\"efgEFG\",character,6);\n  if (tempVar == 0) {\n    unaffectedRegister = FUN_08009698(binaryAddress,&flagBits,dataPointer,0x8009359,&resultPointer);\n    if (unaffectedRegister == -1) goto LAB_08009568;\n  }\n  else {\n    resultPointer = (int *)(((int)resultPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalBytes = totalBytes + unaffectedRegister;\n  bytePointer = byteArray;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "extract_data_from_binary_0800937c",
                "param_1": "binaryAddress",
                "param_2": "dataPointer",
                "param_3": "byteArray",
                "param_4": "result",
                "iVar1": "returnValue",
                "piVar2": "resultPointer",
                "bVar3": "isNumeric",
                "pbVar4": "bytePointer",
                "pbVar5": "currentByte",
                "unaff_r9": "unaffectedRegister",
                "iVar6": "tempVar",
                "local_8c": "resultPointer",
                "local_88": "flagBits",
                "local_84": "negativeValue",
                "local_80": "tempValue",
                "local_7c": "numericValue",
                "local_74": "totalBytes",
                "local_70": "character",
                "local_6f": "flag1",
                "local_6e": "flag2",
                "local_45": "flag3",
                "local_30": "flag4"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "calculate_result_080095a8",
            "code": "\nundefined4\ncalculateResult_080095a8(undefined4 inputFlag,uint *data,uint *output,undefined4 param,code *callbackFunc)\n\n{\n  int counter1;\n  int counter2;\n  uint maxValue;\n  uint newValue;\n  bool isConditionTrue;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (counter1 = 0; counter1 < (int)(data[3] - *output); counter1 = counter1 + 1) {\n      counter2 = (*callbackFunc)(inputFlag,param,(int)data + 0x19,1);\n      if (counter2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  newValue = maxValue;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    newValue = maxValue + 2;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  counter1 = (*callbackFunc)(inputFlag,param,(int)data + 0x43,newValue);\n  if (counter1 != -1) {\n    maxValue = data[3];\n    isConditionTrue = (*data & 6) != 4;\n    if (isConditionTrue) {\n      maxValue = 0;\n    }\n    newValue = 0;\n    if (!isConditionTrue) {\n      maxValue = maxValue - *output;\n    }\n    if (!isConditionTrue) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (maxValue == newValue) {\n        return 0;\n      }\n      counter1 = (*callbackFunc)(inputFlag,param,(int)data + 0x1a,1);\n      if (counter1 == -1) break;\n      newValue = newValue + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "calculate_result_080095a8",
                "param_1": "inputFlag",
                "param_2": "data",
                "param_3": "output",
                "param_4": "param",
                "param_5": "callbackFunc",
                "iVar1": "counter1",
                "iVar2": "counter2",
                "uVar3": "maxValue",
                "uVar4": "newValue",
                "bVar5": "isConditionTrue"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "decode_and_process_08009698",
            "code": "\nuint decode_and_process_08009698(undefined4 param_1,uint *input_data,undefined4 param_3,code *callback_func,uint **output_ptr)\n\n{\n  byte byte_val;\n  int index;\n  uint *ptr;\n  int loop_var;\n  char *hex_chars;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint temp;\n  char *result;\n  char *str_ptr;\n  uint result_array [2];\n  \n  byte_val = *(byte *)(input_data + 6);\n  str_ptr = (char *)((int)input_data + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_08009852;\n          if (byte_val != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)input_data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *input_data;\n          ptr = *output_ptr;\n          *output_ptr = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *input_data = base | 0x20;\n          }\n          if (value == 0) {\n            *input_data = *input_data & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)input_data + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_080096c8;\n          value = *input_data;\n          ptr = *output_ptr;\n          if ((value & 0x80) == 0) {\n            *output_ptr = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_080096e8;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_ptr = ptr + 1;\nLAB_080096e8:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)input_data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp = input_data[1];\n        input_data[2] = temp;\n        result = str_ptr;\n        if ((int)temp < 0) {\n          if (value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)input_data + 0x42) = *hex_chars;\n          result = (char *)((int)input_data + 0x42);\n        }\n        else {\n          *input_data = *input_data & 0xfffffffb;\n          if (value == 0) {\n            if (temp != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              temp = value / base;\n              result = result + -1;\n              *result = hex_chars[value - base * temp];\n              value = temp;\n            } while (temp != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*input_data << 0x1f) < 0)) && ((int)input_data[1] <= (int)input_data[4]))\n        {\n          result[-1] = '0';\n          result = result + -1;\n        }\n        input_data[4] = (int)str_ptr - (int)result;\n        str_ptr = result;\n        goto LAB_080097be;\n      }\n      ptr = *output_ptr;\n      *output_ptr = ptr + 1;\n      *(char *)((int)input_data + 0x42) = (char)*ptr;\nLAB_08009728:\n      str_ptr = (char *)((int)input_data + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_0800974e:\n            value = *input_data;\n            ptr = *output_ptr;\n            if ((value & 0x80) == 0) {\n              *output_ptr = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_0800975c;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_ptr = ptr + 1;\nLAB_0800975c:\n              value = *ptr;\n            }\n            if (byte_val == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_val == 0x70) {\n            *input_data = *input_data | 0x20;\nLAB_0800970e:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)input_data + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_0800974e;\n          if (byte_val == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)input_data + 0x42) = byte_val;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*output_ptr;\n      *output_ptr = (uint *)(ppcVar8 + 1);\n      str_ptr = *ppcVar8;\n      index = FUN_08009f2c(str_ptr,0,input_data[1]);\n      if (index != 0) {\n        input_data[1] = index - (int)str_ptr;\n      }\n      value = input_data[1];\n    }\n    input_data[4] = value;\n    *(undefined *)((int)input_data + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  value = *input_data;\n  ppuVar7 = (uint **)*output_ptr;\n  base = input_data[5];\n  if ((value & 0x80) == 0) {\n    *output_ptr = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *output_ptr = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_0800983e:\n    *ptr = base;\n  }\nLAB_08009852:\n  input_data[4] = 0;\nLAB_080097be:\n  index = FUN_080095a8(param_1,input_data,result_array,param_3,callback_func);\n  if ((index == -1) || (index = (*callback_func)(param_1,param_3,str_ptr,input_data[4]), index == -1)) {\nLAB_080097d2:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_data << 0x1e) < 0) {\n      for (index = 0; index < (int)(input_data[3] - result_array[0]); index = index + 1) {\n        loop_var = (*callback_func)(param_1,param_3,(int)input_data + 0x19,1);\n        if (loop_var == -1) goto LAB_080097d2;\n      }\n    }\n    value = input_data[3];\n    if ((int)input_data[3] < (int)result_array[0]) {\n      value = result_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08009698": "decode_and_process_08009698",
                "param_2": "input_data",
                "param_4": "callback_func",
                "param_5": "output_ptr",
                "bVar1": "byte_val",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "loop_var",
                "pcVar5": "hex_chars",
                "uVar6": "base",
                "uVar9": "value",
                "uVar10": "temp",
                "pcVar11": "result",
                "pcVar12": "str_ptr",
                "local_24": "result_array"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "execute_function_080098d8",
            "code": "\nvoid executeFunction_080098d8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPointer;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  \n  dataPointer = DAT_20000090;\n  param1 = input1;\n  param2 = input2;\n  param3 = input3;\n  param4 = input4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPointer,*(undefined4 *)(dataPointer + 8),input1,&param2,param1,&param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "execute_function_080098d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPointer",
                "uVar2": "param1",
                "uStack_c": "param2",
                "uStack_8": "param3",
                "uStack_4": "param4"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "check_param_08009908",
            "code": "\nint checkParam_08009908(int value1,uint value2)\n\n{\n  undefined4 constant;\n  int result;\n  uint temp;\n  \n  constant = DAT_20000090;\n  if (value1 != 0) {\n    if (value2 == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      temp = FUN_0800a154();\n      result = value1;\n      if ((temp < value2) && (result = FUN_08009270(constant,value2), result != 0)) {\n        FUN_080091b0(result,value1,value2);\n        FUN_080091d8(constant,value1);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,value2,value2,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "check_param_08009908",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "constant",
                "iVar2": "result",
                "uVar3": "temp"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "update_param_if_error_exists_08009918",
            "code": "\nvoid updateParamIfErrorExists_08009918(int *outputPointer,undefined4 paramValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008804(paramValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "update_param_if_error_exists_08009918",
                "param_1": "outputPointer",
                "param_2": "paramValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_first_occurrence_08009938",
            "code": "\nchar * findFirstOccurrence_08009938(char *inputString,char targetChar)\n\n{\n  char *currentChar;\n  \n  do {\n    currentChar = inputString;\n    if (*currentChar == '\\0') {\n      if (targetChar != '\\0') {\n        currentChar = (char *)0x0;\n      }\n      return currentChar;\n    }\n    inputString = currentChar + 1;\n  } while (targetChar != *currentChar);\n  return currentChar;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_first_occurrence_08009938",
                "param_1": "inputString",
                "param_2": "targetChar",
                "pcVar1": "currentChar"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_and_pad_string_08009954",
            "code": "\nvoid copyAndPadString_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *currentDestination;\n  \n  do {\n    currentDestination = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = currentDestination + 1;\n    *currentDestination = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != currentDestination + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_and_pad_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "currentDestination"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint find_last_occurrence_0800997e(int array,int length,undefined4 param_3,undefined4 param_4)\n\n{\n  int index;\n  int last_occurrence;\n  \n  if (length != 0) {\n    last_occurrence = 0;\n    while (index = FUN_08009938(array,length,param_3,array,param_4), index != 0) {\n      array = index + 1;\n      last_occurrence = index;\n    }\n    return last_occurrence;\n  }\n  last_occurrence = FUN_08009938();\n  return last_occurrence;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "array",
                "param_2": "length",
                "iVar1": "index",
                "iVar2": "last_occurrence"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *str1,char *str2)\n\n{\n  char *curr_char_str1;\n  char *curr_char_str2;\n  char *check_char_str2;\n  \n  if (*str1 == '\\0') {\n    if (*str2 != '\\0') {\n      str1 = (char *)0x0;\n    }\n    return str1;\n  }\n  do {\n    curr_char_str1 = str1;\n    if (*curr_char_str1 == '\\0') {\n      return (char *)0x0;\n    }\n    check_char_str2 = str2 + -1;\n    curr_char_str2 = curr_char_str1 + -1;\n    do {\n      check_char_str2 = check_char_str2 + 1;\n      if (*check_char_str2 == '\\0') {\n        return curr_char_str1;\n      }\n      curr_char_str2 = curr_char_str2 + 1;\n      str1 = curr_char_str1 + 1;\n    } while (*curr_char_str2 == *check_char_str2);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "str1",
                "param_2": "str2",
                "pcVar1": "curr_char_str1",
                "pcVar2": "curr_char_str2",
                "pcVar3": "check_char_str2"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint processData_08009a80(undefined4 *output,undefined4 *input)\n\n{\n  int dataStart;\n  uint result;\n  ushort value;\n  \n  dataStart = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (input == &DAT_0800aba4) {\n    input = *(undefined4 **)(dataStart + 4);\n  }\n  else if (input == (undefined4 *)&DAT_0800abc4) {\n    input = *(undefined4 **)(dataStart + 8);\n  }\n  else if (input == (undefined4 *)&DAT_0800ab84) {\n    input = *(undefined4 **)(dataStart + 0xc);\n  }\n  value = *(ushort *)(input + 3);\n  result = (uint)value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080091d8(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(output,input);\n  }\n  value = *(ushort *)(input + 3);\n  result = value & 1;\n  if ((value & 1) == 0) {\n    if (-1 < (int)((uint)value << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    value = *(ushort *)(input + 3);\n    result = (int)(short)value & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input + 3) = value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataStart",
                "uVar2": "result",
                "uVar3": "value"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "reverse_and_improve_08009b5c",
            "code": "\nvoid reverse_and_improve_08009b5c(void)\n\n{\n  uint *ptr_uVar1;\n  int var_i1;\n  int *ptr_iVar3;\n  int *ptr_iVar4;\n  uint var_u1;\n  ushort var_u2;\n  int var_i2;\n  code *ptr_pcVar8;\n  int var_i3;\n  uint var_u3;\n  code *ptr_jumptable;\n  bool bVar11;\n  undefined8 uVar12;\n  \n  FUN_08009fe8(6);\n  ptr_jumptable = (code *)0x8009b6b;\n  uVar12 = FUN_08008868(1);\n  ptr_iVar3 = (int *)((ulonglong)uVar12 >> 0x20);\n  ptr_uVar1 = (uint *)uVar12;\n  var_u2 = *(ushort *)(ptr_iVar3 + 3);\n  var_u1 = (uint)var_u2;\n  if ((int)(var_u1 << 0x1c) < 0) {\n    var_i1 = ptr_iVar3[4];\n    if (var_i1 != 0) {\n      var_i2 = var_u1 << 0x1e;\n      bVar11 = var_i2 != 0;\n      if (bVar11) {\n        var_i2 = 0;\n      }\n      var_i3 = *ptr_iVar3;\n      if (!bVar11) {\n        var_i2 = ptr_iVar3[5];\n      }\n      *ptr_iVar3 = var_i1;\n      ptr_iVar3[2] = var_i2;\n      for (var_i3 = var_i3 - var_i1; 0 < var_i3; var_i3 = var_i3 - var_i2) {\n        var_i2 = (*(code *)ptr_iVar3[10])(ptr_uVar1,ptr_iVar3[8],var_i1,var_i3);\n        if (var_i2 < 1) {\n          var_u2 = *(ushort *)(ptr_iVar3 + 3);\n          goto LAB_08009c62;\n        }\n        var_i1 = var_i1 + var_i2;\n      }\n    }\n  }\n  else if (((0 < ptr_iVar3[1]) || (0 < ptr_iVar3[0x10])) &&\n          (ptr_pcVar8 = (code *)ptr_iVar3[0xb], ptr_pcVar8 != (code *)0x0)) {\n    var_u3 = *ptr_uVar1;\n    *ptr_uVar1 = 0;\n    if ((var_u2 & 0x1000) == 0) {\n      var_i1 = (*ptr_pcVar8)(ptr_uVar1,ptr_iVar3[8],var_u1 & 0x1000,1);\n      if ((var_i1 == -1) && (var_u1 = *ptr_uVar1, var_u1 != 0)) {\n        if ((var_u1 != 0x1d) && (var_u1 != 0x16)) {\n          *(ushort *)(ptr_iVar3 + 3) = *(ushort *)(ptr_iVar3 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*ptr_jumptable)();\n          return;\n        }\n        *ptr_uVar1 = var_u3;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      var_i1 = ptr_iVar3[0x15];\n    }\n    if (((int)((uint)*(ushort *)(ptr_iVar3 + 3) << 0x1d) < 0) &&\n       (var_i1 = var_i1 - ptr_iVar3[1], ptr_iVar3[0xd] != 0)) {\n      var_i1 = var_i1 - ptr_iVar3[0x10];\n    }\n    var_i1 = (*(code *)ptr_iVar3[0xb])(ptr_uVar1,ptr_iVar3[8],var_i1,0);\n    var_u2 = *(ushort *)(ptr_iVar3 + 3);\n    if ((var_i1 == -1) &&\n       ((0x1d < *ptr_uVar1 || (-1 < (int)((0x20400001U >> (*ptr_uVar1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(ptr_iVar3 + 3) = var_u2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*ptr_jumptable)(0xffffffff);\n      return;\n    }\n    ptr_iVar3[1] = 0;\n    *ptr_iVar3 = ptr_iVar3[4];\n    if (((int)((uint)var_u2 << 0x13) < 0) && ((var_i1 != -1 || (*ptr_uVar1 == 0)))) {\n      ptr_iVar3[0x15] = var_i1;\n    }\n    ptr_iVar4 = (int *)ptr_iVar3[0xd];\n    *ptr_uVar1 = var_u3;\n    if (ptr_iVar4 != (int *)0x0) {\n      if (ptr_iVar4 != ptr_iVar3 + 0x11) {\n        FUN_080091d8(ptr_uVar1);\n      }\n      ptr_iVar3[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*ptr_jumptable)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*ptr_jumptable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "reverse_and_improve_08009b5c",
                "puVar1": "ptr_uVar1",
                "iVar2": "var_i1",
                "piVar3": "ptr_iVar3",
                "piVar4": "ptr_iVar4",
                "uVar5": "var_u1",
                "uVar6": "var_u2",
                "iVar7": "var_i2",
                "pcVar8": "ptr_pcVar8",
                "iVar9": "var_i3",
                "uVar10": "var_u3",
                "UNRECOVERED_JUMPTABLE_00": "ptr_jumptable"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_parameter_and_variable_08009c7c",
            "code": "\nundefined4 processParameterAndVariable_08009c7c(uint *param1,int *param2)\n\n{\n  undefined4 returnValue;\n  int param2Value;\n  int *ptrVar3;\n  uint ushortValue;\n  ushort ushortValue2;\n  int iVar;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *callbackFunction;\n  int iVar8;\n  uint uVar9;\n  code *jumpTable;\n  bool isVar10;\n  \n  if (param2[4] != 0) {\n    if ((param1 != (uint *)0x0) && (param1[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (param2 == &DAT_0800aba4) {\n      param2 = (int *)param1[1];\n    }\n    else if (param2 == (int *)&DAT_0800abc4) {\n      param2 = (int *)param1[2];\n    }\n    else if (param2 == (int *)&DAT_0800ab84) {\n      param2 = (int *)param1[3];\n    }\n    if (*(short *)(param2 + 3) != 0) {\n      ushortValue2 = *(ushort *)(param2 + 3);\n      ushortValue = (uint)ushortValue2;\n      if ((int)(ushortValue << 0x1c) < 0) {\n        param2Value = param2[4];\n        if (param2Value != 0) {\n          iVar = ushortValue << 0x1e;\n          isVar10 = iVar != 0;\n          if (isVar10) {\n            iVar = 0;\n          }\n          iVar8 = *param2;\n          if (!isVar10) {\n            iVar = param2[5];\n          }\n          *param2 = param2Value;\n          param2[2] = iVar;\n          for (iVar8 = iVar8 - param2Value; 0 < iVar8; iVar8 = iVar8 - iVar) {\n            iVar = (*(code *)param2[10])(param1,param2[8],param2Value,iVar8,unaff_r4,unaff_r5);\n            if (iVar < 1) {\n              ushortValue2 = *(ushort *)(param2 + 3);\n              goto LAB_08009c62;\n            }\n            param2Value = param2Value + iVar;\n          }\n        }\n      }\n      else if (((0 < param2[1]) || (0 < param2[0x10])) &&\n              (callbackFunction = (code *)param2[0xb], callbackFunction != (code *)0x0)) {\n        uVar9 = *param1;\n        *param1 = 0;\n        if ((ushortValue2 & 0x1000) == 0) {\n          param2Value = (*callbackFunction)(param1,param2[8],ushortValue & 0x1000,1);\n          if ((param2Value == -1) && (ushortValue = *param1, ushortValue != 0)) {\n            if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n              *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *param1 = uVar9;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          param2Value = param2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param2 + 3) << 0x1d) < 0) &&\n           (param2Value = param2Value - param2[1], param2[0xd] != 0)) {\n          param2Value = param2Value - param2[0x10];\n        }\n        param2Value = (*(code *)param2[0xb])(param1,param2[8],param2Value,0);\n        ushortValue2 = *(ushort *)(param2 + 3);\n        if ((param2Value == -1) &&\n           ((0x1d < *param1 || (-1 < (int)((0x20400001U >> (*param1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(param2 + 3) = ushortValue2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        param2[1] = 0;\n        *param2 = param2[4];\n        if (((int)((uint)ushortValue2 << 0x13) < 0) && ((param2Value != -1 || (*param1 == 0)))) {\n          param2[0x15] = param2Value;\n        }\n        ptrVar3 = (int *)param2[0xd];\n        *param1 = uVar9;\n        if (ptrVar3 != (int *)0x0) {\n          if (ptrVar3 != param2 + 0x11) {\n            FUN_080091d8(param1);\n          }\n          param2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_parameter_and_variable_08009c7c",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "returnValue",
                "iVar2": "param2Value",
                "piVar3": "ptrVar3",
                "uVar4": "ushortValue",
                "uVar5": "ushortValue2",
                "iVar6": "iVar",
                "pcVar7": "callbackFunction",
                "bVar10": "isVar10",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_struct_08009cdc",
            "code": "\nvoid initializeStruct_08009cdc(undefined4 *structPointer,undefined2 value1,undefined2 value2)\n\n{\n  *structPointer = 0;\n  structPointer[1] = 0;\n  structPointer[2] = 0;\n  *(undefined2 *)(structPointer + 3) = value1;\n  structPointer[0x19] = 0;\n  *(undefined2 *)((int)structPointer + 0xe) = value2;\n  structPointer[4] = 0;\n  structPointer[5] = 0;\n  structPointer[6] = 0;\n  FUN_080091c6(structPointer + 0x17,0,8);\n  structPointer[8] = structPointer;\n  structPointer[9] = 0x800a021;\n  structPointer[10] = 0x800a043;\n  structPointer[0xb] = 0x800a07b;\n  structPointer[0xc] = &LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_struct_08009cdc",
                "param_1": "structPointer",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 param1,int param2)\n\n{\n  undefined4 *result;\n  int offset;\n  \n  offset = (param2 + -1) * 0x68;\n  result = (undefined4 *)FUN_08009270(param1,offset + 0x74);\n  if (result != (undefined4 *)0x0) {\n    *result = 0;\n    result[1] = param2;\n    result[2] = result + 3;\n    FUN_080091c6(result + 3,0,offset + 0x68);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "param1",
                "param_2": "param2",
                "puVar1": "result",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *dataPtr)\n\n{\n  undefined4 returnValue;\n  undefined4 *tempPtr;\n  \n  if (dataPtr[6] == 0) {\n    dataPtr[0x12] = 0;\n    dataPtr[0x13] = 0;\n    dataPtr[0x14] = 0;\n    tempPtr = &DAT_20000094;\n    dataPtr[10] = &LAB_08009cd0_1;\n    if (dataPtr == &DAT_20000094) {\n      tempPtr = (undefined4 *)0x1;\n    }\n    if (dataPtr == &DAT_20000094) {\n      dataPtr[6] = tempPtr;\n    }\n    returnValue = FUN_08009db0();\n    dataPtr[1] = returnValue;\n    returnValue = FUN_08009db0(dataPtr);\n    dataPtr[2] = returnValue;\n    returnValue = FUN_08009db0(dataPtr);\n    dataPtr[3] = returnValue;\n    FUN_08009cdc(dataPtr[1],4,0);\n    FUN_08009cdc(dataPtr[2],9,1);\n    FUN_08009cdc(dataPtr[3],0x12,2);\n    dataPtr[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "dataPtr",
                "uVar1": "returnValue",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "process_data_08009db0",
            "code": "\nint * processData_08009db0(undefined4 *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currPtr;\n  int *innerPtr;\n  int **dataPtr;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataPtr = (int **)&DAT_200000dc;\n  do {\n    innerPtr = dataPtr[2];\n    currPtr = dataPtr[1];\n    while (currPtr = (int *)((int)currPtr + -1), -1 < (int)currPtr) {\n      if (*(short *)(innerPtr + 3) == 0) {\n        *(undefined2 *)((int)innerPtr + 0xe) = 0xffff;\n        innerPtr[0x19] = 0;\n        *(undefined2 *)(innerPtr + 3) = 1;\n        *innerPtr = 0;\n        innerPtr[2] = 0;\n        innerPtr[1] = 0;\n        innerPtr[4] = 0;\n        innerPtr[5] = 0;\n        innerPtr[6] = 0;\n        FUN_080091c6(innerPtr + 0x17,0,8,1,param4);\n        innerPtr[0xd] = 0;\n        innerPtr[0xe] = 0;\n        innerPtr[0x12] = 0;\n        innerPtr[0x13] = 0;\n        return innerPtr;\n      }\n      innerPtr = innerPtr + 0x1a;\n    }\n    if (*dataPtr == (int *)0x0) {\n      currPtr = (int *)FUN_08009d24(output,4);\n      *dataPtr = currPtr;\n      if (currPtr == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPtr = (int **)*dataPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "process_data_08009db0",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currPtr",
                "piVar2": "innerPtr",
                "ppiVar3": "dataPtr"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_permissions_08009e64",
            "code": "\nundefined4 checkPermissions_08009e64(undefined4 param1,int param2,undefined4 *resultParam,uint *statusParam)\n\n{\n  int returnValue;\n  undefined4 permission;\n  undefined tempStack [4];\n  uint localVariable;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (returnValue = FUN_0800a0ec(param1,(int)*(short *)(param2 + 0xe),tempStack), returnValue < 0)) {\n    *statusParam = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *statusParam = (uint)((localVariable & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08009ea4:\n  *resultParam = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_permissions_08009e64",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "resultParam",
                "param_4": "statusParam",
                "iVar1": "returnValue",
                "uVar2": "permission",
                "auStack_4c": "tempStack",
                "local_48": "localVariable"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_parameters_08009eac",
            "code": "\nvoid processParameters_08009eac(int inputParam1,int *inputParam2)\n\n{\n  ushort tempValue1;\n  int tempValue2;\n  int localVariable1;\n  int *localVariable2;\n  \n  if (-1 < (int)((uint)*(ushort *)(inputParam2 + 3) << 0x1e)) {\n    localVariable1 = inputParam1;\n    localVariable2 = inputParam2;\n    tempValue1 = FUN_08009e64(inputParam1,inputParam2,&localVariable1,&localVariable2);\n    tempValue2 = FUN_08009270(inputParam1,localVariable1);\n    if (tempValue2 != 0) {\n      *(undefined **)(inputParam1 + 0x28) = &LAB_08009cd0_1;\n      *inputParam2 = tempValue2;\n      *(ushort *)(inputParam2 + 3) = *(ushort *)(inputParam2 + 3) | 0x80;\n      inputParam2[4] = tempValue2;\n      inputParam2[5] = localVariable1;\n      if ((localVariable2 != (int *)0x0) &&\n         (tempValue2 = FUN_0800a110(inputParam1,(int)*(short *)((int)inputParam2 + 0xe)), tempValue2 != 0)) {\n        *(ushort *)(inputParam2 + 3) = *(ushort *)(inputParam2 + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(inputParam2 + 3) = tempValue1 | *(ushort *)(inputParam2 + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(inputParam2 + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(inputParam2 + 3) = *(ushort *)(inputParam2 + 3) & 0xfffc | 2;\n  }\n  *inputParam2 = (int)inputParam2 + 0x47;\n  inputParam2[4] = (int)inputParam2 + 0x47;\n  inputParam2[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_parameters_08009eac",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "uVar1": "tempValue1",
                "iVar2": "tempValue2",
                "local_18": "localVariable1",
                "local_14": "localVariable2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_in_string_08009f2c",
            "code": "\nchar * find_character_in_string_08009f2c(char *input_string,char character_to_find,int string_length)\n\n{\n  char *current_position;\n  char *next_position;\n  \n  current_position = input_string;\n  do {\n    next_position = current_position;\n    if (next_position == input_string + string_length) {\n      return (char *)0x0;\n    }\n    current_position = next_position + 1;\n  } while (*next_position != character_to_find);\n  return next_position;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_in_string_08009f2c",
                "param_1": "input_string",
                "param_2": "character_to_find",
                "param_3": "string_length",
                "pcVar1": "current_position",
                "pcVar2": "next_position"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "process_data_08009fe8",
            "code": "\nint processData_08009fe8(uint input)\n\n{\n  int *dataPtr;\n  undefined4 returnValue;\n  int index;\n  code *callback;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *dataPtrPtr;\n  \n  dataPtr = DAT_20000090;\n  dataPtrPtr = &DAT_20000090;\n  if (0x1f < input) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  index = DAT_20000090[0x11];\n  if ((index != 0) && (callback = *(code **)(index + input * 4), callback != (code *)0x0)) {\n    if (callback != (code *)0x1) {\n      if (callback == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input * 4) = 0;\n      (*callback)(input);\n    }\n    return 0;\n  }\n  returnValue = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  index = FUN_0800886c(returnValue,input,input,0,dataPtrPtr,unaff_r4,unaff_r5,in_lr);\n  if ((index == -1) && (DAT_20000a38 != 0)) {\n    *dataPtr = DAT_20000a38;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "process_data_08009fe8",
                "param_1": "input",
                "piVar1": "dataPtr",
                "uVar2": "returnValue",
                "iVar3": "index",
                "pcVar4": "callback",
                "puVar5": "dataPtrPtr"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nint getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c",
                "undefined4": "int"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_data_0800a020",
            "code": "\nvoid updateData_0800a020(undefined4 data,int address)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(data,(int)*(short *)(address + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(address + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(address + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(address + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(address + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_data_0800a020",
                "param_1": "data",
                "param_2": "address",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "update_data_0800a042",
            "code": "\nvoid updateData_0800a042(int *dataArray,int dataPointer,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  undefined4 register4;\n  undefined4 register5;\n  undefined4 linkRegister;\n  \n  if ((int)((uint)*(ushort *)(dataPointer + 0xc) << 0x17) < 0) {\n    FUN_0800a130(dataArray,(int)*(short *)(dataPointer + 0xe),0,2);\n  }\n  *(ushort *)(dataPointer + 0xc) = *(ushort *)(dataPointer + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(dataPointer + 0xe),param3,param4,param4,param4,register4,\n                       register5,linkRegister);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *dataArray = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "update_data_0800a042",
                "param_1": "dataArray",
                "param_2": "dataPointer",
                "param_3": "param3",
                "param_4": "param4",
                "unaff_r4": "register4",
                "unaff_r5": "register5",
                "in_lr": "linkRegister",
                "iVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_status_0800a07a",
            "code": "\nvoid updateStatus_0800a07a(undefined4 status,int data)\n\n{\n  int result;\n  ushort statusFlag;\n  bool isError;\n  \n  result = FUN_0800a130(status,(int)*(short *)(data + 0xe));\n  isError = result == -1;\n  if (isError) {\n    statusFlag = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    statusFlag = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(data + 0xc) = statusFlag;\n  }\n  if (!isError) {\n    *(ushort *)(data + 0xc) = statusFlag;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "param_1": "status",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "statusFlag",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_param_and_check_error_0800a0ec",
            "code": "\nvoid updateParamAndCheckError_0800a0ec(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008846(input1,input2,input2,0,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_param_and_check_error_0800a0ec",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "process_results_0800a110",
            "code": "\nvoid processResults_0800a110(int *resultPtr,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008850(inputValue);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *resultPtr = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "process_results_0800a110",
                "param_1": "resultPtr",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_pointer_if_negative_0800a130",
            "code": "\nvoid updatePointerIfNegative_0800a130(int *resultPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(param2,param3,param4,param4,param4);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *resultPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_pointer_if_negative_0800a130",
                "param_1": "resultPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_adjusted_value_0800a154",
            "code": "\nint calculateAdjustedValue_0800a154(undefined4 result,int inputValue)\n\n{\n  int adjustedValue;\n  \n  adjustedValue = *(int *)(inputValue + -4) + -4;\n  if (*(int *)(inputValue + -4) < 0) {\n    adjustedValue = adjustedValue + *(int *)(inputValue + adjustedValue);\n  }\n  return adjustedValue;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_adjusted_value_0800a154",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "adjustedValue"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "initialize_and_copy_value_0800a168",
            "code": "\nvoid initializeAndCopyValue_0800a168(int *result,undefined4 value_1,undefined4 value_2,undefined4 value_3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008858(value_1,value_2,value_3,value_3,value_3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "initialize_and_copy_value_0800a168",
                "param_1": "result",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "update_flags_and_jump_table_0800a18c",
            "code": "\nvoid updateFlagsAndJumpTable_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = updateFlagsAndJumpTable_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "update_flags_and_jump_table_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 206279,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}