{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "FUNC_080050fc"
            },
            "code": "\nint FUNC_080050fc(undefined4 *param_1,int *param_2,byte *param_3,int *param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  int *piVar5;\n  bool bVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  undefined4 *unaff_r9;\n  int *local_8c;\n  uint local_88;\n  int local_84;\n  undefined4 local_80;\n  int local_7c;\n  int local_74;\n  byte local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  local_8c = param_4;\n  if (((int)((uint)*(ushort *)(param_2 + 3) << 0x18) < 0) && (param_2[4] == 0)) {\n    iVar2 = calculate_required_mem_size_08005714(param_1,0x40);\n    *param_2 = iVar2;\n    param_2[4] = iVar2;\n    if (iVar2 == 0) {\n      *param_1 = 0xc;\n      return -1;\n    }\n    param_2[5] = 0x40;\n  }\n  local_74 = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  pbVar7 = param_3;\nLAB_08005146:\n  pbVar8 = pbVar7;\n  if (*pbVar8 != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  pbVar7 = pbVar8 + 1;\n  if (*pbVar8 != 0x25) goto LAB_08005146;\nLAB_08005150:\n  iVar2 = (int)pbVar8 - (int)param_3;\n  if (iVar2 != 0) {\n    iVar3 = copy_memory_region_08005044(param_1,param_2,param_3,iVar2);\n    if (iVar3 == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(param_2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return local_74;\n    }\n    local_74 = local_74 + iVar2;\n  }\n  if (*pbVar8 == 0) goto LAB_080052ac;\n  local_88 = 0;\n  local_7c = 0;\n  local_84 = -1;\n  local_80 = 0;\n  local_45 = 0;\n  local_30 = 0;\n  pbVar7 = pbVar8 + 1;\n  while( true ) {\n    iVar2 = find_character_in_string_08005614(PTR_DAT_080052d0,*pbVar7);\n    puVar1 = PTR_DAT_080052d4;\n    param_3 = pbVar7 + 1;\n    if (iVar2 == 0) break;\n    local_88 = 1 << (iVar2 - (int)PTR_DAT_080052d0 & 0xffU) | local_88;\n    pbVar7 = param_3;\n  }\n  if ((int)(local_88 << 0x1b) < 0) {\n    local_45 = 0x20;\n  }\n  if ((int)(local_88 << 0x1c) < 0) {\n    local_45 = 0x2b;\n  }\n  if (*pbVar7 == 0x2a) {\n    piVar5 = local_8c + 1;\n    iVar2 = *local_8c;\n    local_8c = piVar5;\n    if (-1 < iVar2) goto LAB_080051ee;\n    local_7c = -iVar2;\n    local_88 = local_88 | 2;\n  }\n  else {\n    bVar6 = false;\n    iVar2 = local_7c;\n    param_3 = pbVar7;\n    while( true ) {\n      if (9 < *param_3 - 0x30) break;\n      iVar2 = iVar2 * 10 + (*param_3 - 0x30);\n      bVar6 = true;\n      param_3 = param_3 + 1;\n    }\n    if (bVar6) {\nLAB_080051ee:\n      local_7c = iVar2;\n    }\n  }\n  if (*param_3 == 0x2e) {\n    if (param_3[1] == 0x2a) {\n      param_3 = param_3 + 2;\n      piVar5 = local_8c + 1;\n      local_84 = *local_8c;\n      local_8c = piVar5;\n      if (local_84 < 0) {\n        local_84 = -1;\n      }\n    }\n    else {\n      bVar6 = false;\n      iVar2 = 0;\n      local_84 = 0;\n      while( true ) {\n        param_3 = param_3 + 1;\n        if (9 < *param_3 - 0x30) break;\n        iVar2 = iVar2 * 10 + (*param_3 - 0x30);\n        bVar6 = true;\n      }\n      if (bVar6) {\n        local_84 = iVar2;\n      }\n    }\n  }\n  iVar2 = find_character_in_string_08005614(PTR_DAT_080052d4,*param_3,3);\n  if (iVar2 != 0) {\n    param_3 = param_3 + 1;\n    local_88 = local_88 | 0x40 << (iVar2 - (int)puVar1 & 0xffU);\n  }\n  local_70 = *param_3;\n  param_3 = param_3 + 1;\n  iVar2 = find_character_in_string_08005614(PTR_s_efgEFG_080052d8,local_70,6);\n  if (iVar2 == 0) {\n    puVar4 = (undefined4 *)FUNC_080053d4(param_1,&local_88,param_2,DAT_080052e0,&local_8c);\n  }\n  else {\n    puVar4 = param_1;\n    if (DAT_080052dc == 0) {\n      local_8c = (int *)(((int)local_8c + 7U & 0xfffffff8) + 8);\n      puVar4 = unaff_r9;\n      goto LAB_08005260;\n    }\n  }\n  if (puVar4 == (undefined4 *)0xffffffff) goto LAB_080052ac;\nLAB_08005260:\n  local_74 = local_74 + (int)puVar4;\n  pbVar7 = param_3;\n  unaff_r9 = puVar4;\n  goto LAB_08005146;\n}\n\n",
            "called": [
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005044",
                "FUN_08005714"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "FUNC_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "store_parameter_in_memory_08003320",
                "param_1": "parameter",
                "PTR_DAT_08003328": "memory_pointer"
            },
            "code": "void store_parameter_in_memory_08003320(void* parameter){\n  *(void **)PTR_DAT_08003328 = parameter;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "store_parameter_in_memory_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "decode_and_xor_08004410",
                "param_1": "key",
                "param_2": "size",
                "param_3": "data",
                "local_10": "decoded_key",
                "local_c": "masked_size",
                "uStack_8": "param_3"
            },
            "code": "void decode_and_xor_08004410(uint8_t key, uint8_t* data, size_t size) {\n  uint16_t* ptr = (uint16_t*)(PTR_DAT_08004430 + 4);\n  uint32_t decoded_key = *(uint32_t*)PTR_DAT_08004430;\n  uint32_t masked_size = (size & 0xffff0000) | *ptr;\n  uint32_t param_3 = data;\n  decode_and_xor_08004410_08004300(key, &decoded_key, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "process_bits_08001264",
                "param_1": "bit_array",
                "param_2": "data",
                "puVar1": "DAT_08001404",
                "uVar2": "DAT_08001414",
                "uVar3": "DAT_08001418",
                "uVar4": "data_offset",
                "uVar5": "bit_mask",
                "uVar6": "data_val",
                "iVar7": "bit_array_group",
                "uVar8": "bit_index",
                "uVar9": "data_val",
                "uVar10": "DAT_08001420",
                "unaff_r10": "bit_array_ptr",
                "iVar11": "bit_array_index"
            },
            "code": "void process_bits_08001264(uint *bit_array, uint *data) {\n  uint *bit_array_ptr;\n  uint bit_mask;\n  uint data_val;\n  uint data_type;\n  uint data_offset;\n  uint bit_index = 0;\n  uint data_index = 0;\n\n  while (bit_index < 16) {\n    bit_mask = 1 << (bit_index & 0xff);\n    if (bit_mask & *data) {\n      data_type = data[1];\n      if (data_type == 0x12) {\n        data_offset = data[3] + 0xc;\n      }\n      else if (data_type < 0x13) {\n        if (data_type == 2) {\n          data_offset = data[3] + 8;\n        }\n        else if (data_type == 1) {\n          data_offset = data[3];\n        }\n        else if (data_type == 3) {\n          data_offset = 0;\n        }\n        else if (data_type == 0x11) {\n          data_offset = data[3] + 4;\n        }\n      }\n      else {\n        if (data_type == DAT_08001410) {\n          data_offset = data[2];\n          if (data_offset == 0) {\n            data_offset = 4;\n          }\n          else {\n            if (data_offset != 1) {\n              bit_array[5] = bit_mask;\n            }\n            if (data_offset != 2) {\n              bit_array[6] = bit_mask;\n            }\n            data_offset = 8;\n          }\n        }\n        else if (data_type == DAT_08001414 || data_type == DAT_08001418) {\n          data_offset = data[2];\n          if (data_offset == 0) {\n            data_offset = 4;\n          }\n          else {\n            bit_array[4] = bit_mask;\n            data_offset = 8;\n          }\n        }\n        else if (data_type == DAT_0800141c || data_type == DAT_08001420) {\n          data_offset = data[2];\n          if (data_offset == 0) {\n            data_offset = 4;\n          }\n          else {\n            if (data_offset != 1) {\n              bit_array[5] = bit_mask;\n            }\n            if (data_offset != 2) {\n              bit_array[6] = bit_mask;\n            }\n            data_offset = 8;\n          }\n        }\n      }\n\n      if (bit_mask < 0x100) {\n        data_val = *bit_array;\n        data_offset = bit_index << 2;\n        bit_array_ptr = bit_array;\n      }\n      else {\n        data_val = bit_array[1];\n        data_offset = (bit_index + 0x3ffffff8) * 4;\n        bit_array_ptr = bit_array + 1;\n      }\n\n      if (0xff < bit_mask) {\n        bit_array_ptr = bit_array + 1;\n      }\n\n      *bit_array_ptr = data_val & ~(0xf << (data_offset & 0xff)) | data_offset << (data_offset & 0xff);\n\n      if (((uint)data[1] & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        uint bit_array_index = (bit_index & 3) << 2;\n        int bit_array_group;\n        if (bit_array == DAT_0800140c) {\n          bit_array_group = 0;\n        }\n        else if (bit_array == DAT_0800140c + 0x100) {\n          bit_array_group = 1;\n        }\n        else if (bit_array == DAT_0800140c + 0x200) {\n          bit_array_group = 2;\n        }\n        else if (bit_array == DAT_0800140c + 0x300) {\n          bit_array_group = 3;\n        }\n        else {\n          bit_array_group = 4;\n        }\n        *(uint *)(&DAT_40010008 + (bit_index & 0xfffffffc)) = bit_array_group << bit_array_index | *(uint *)(&DAT_40010008 + (bit_index & 0xfffffffc)) & ~(0xf << bit_array_index);\n        if (((uint)data[1] & 0x10000) == 0) {\n          data_val = *DAT_08001404 & ~bit_mask;\n        }\n        else {\n          data_val = *DAT_08001404 | bit_mask;\n        }\n        *DAT_08001404 = data_val;\n        if (((uint)data[1] & 0x20000) == 0) {\n          data_val = DAT_08001404[1] & ~bit_mask;\n        }\n        else {\n          data_val = DAT_08001404[1] | bit_mask;\n        }\n        DAT_08001404[1] = data_val;\n        if (((uint)data[1] & 0x100000) == 0) {\n          data_val = DAT_08001404[2] & ~bit_mask;\n        }\n        else {\n          data_val = DAT_08001404[2] | bit_mask;\n        }\n        DAT_08001404[2] = data_val;\n        if (((uint)data[1] & 0x200000) == 0) {\n          bit_mask = DAT_08001404[3] & ~bit_mask;\n        }\n        else {\n          bit_mask = bit_mask | DAT_08001404[3];\n        }\n        DAT_08001404[3] = bit_mask;\n      }\n    }\n    bit_index++;\n    if (bit_index == 0x10) {\n      return;\n    }\n    data++;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e14",
                "FUN_0800458c",
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "process_bits_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "process_sensor_data_and_store_parameters_08002ea0",
                "param_1": "unused_param_1",
                "param_2": "unused_param_2",
                "param_3": "sensor_data_param",
                "param_4": "memory_param",
                "extraout_r1": "decoded_params",
                "parameter_value": "parameter_value"
            },
            "code": "void process_sensor_data_and_store_parameters_08002ea0(undefined4 param_1, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 parameter_value;\n  undefined4 decoded_params = set_and_decode_params_loop_08002ad0();\n  process_sensor_data_08002cb0();\n  set_parameter_value_08003314(DAT_08002ebc);\n  store_parameter_in_memory_08003320(0, decoded_params, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08002cb0",
                "FUN_08003314",
                "FUN_08002ad0",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "process_sensor_data_and_store_parameters_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_result_080070b0",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "uVar1": "temp_var_7",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_8",
                "uVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "uVar6": "temp_var_6",
                "uVar7": "temp_var_9",
                "uVar8": "result",
                "PTR_DAT_080071b8": "PTR_DAT_080071b8",
                "DAT_080071bc": "DAT_080071bc"
            },
            "code": "ulonglong calculate_result_080070b0(uint input_param_1, uint input_param_2, undefined4 input_param_3) {\n    uint temp_var_1;\n    uint temp_var_2;\n    uint temp_var_3;\n    uint temp_var_4;\n    uint temp_var_5;\n    uint temp_var_6;\n    undefined4 temp_var_7;\n    undefined4 temp_var_8;\n    undefined8 temp_var_9;\n    ulonglong result;\n    uint constant_1 = 0x3ff;\n    uint constant_2 = 0x14;\n    uint constant_3 = 0x80000;\n    uint constant_4 = 0x80000000;\n    uint constant_5 = 0x40000;\n    uint constant_6 = 0x33;\n    uint constant_7 = 0x400;\n    uint constant_8 = 0xffffffff;\n    uint constant_9 = 0x413;\n    uint constant_10 = 0x40000000;\n\n    temp_var_6 = (input_param_2 << 1) >> 0x15;\n    temp_var_5 = temp_var_6 - constant_1;\n    temp_var_2 = input_param_2;\n    if ((int)temp_var_5 < constant_2) {\n        if ((int)temp_var_5 < 0) {\n            if ((input_param_2 & 0x7fffffff | input_param_1) == 0) {\n                return CONCAT44(input_param_2, input_param_1);\n            }\n            temp_var_2 = input_param_2 & 0xfffff | input_param_1;\n            temp_var_7 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input_param_2 >> 0x1f) * -8);\n            temp_var_8 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input_param_2 >> 0x1f) * -8) + 4);\n            temp_var_9 = FUNC_0800016c(input_param_1,(-temp_var_2 | temp_var_2) >> 0xc & constant_3 | input_param_2 & 0xfffe0000,temp_var_7,temp_var_8,input_param_1,input_param_2,input_param_3);\n            result = FUNC_08000168((int)temp_var_9,(int)((ulonglong)temp_var_9 >> 0x20),temp_var_7,temp_var_8);\n            return result & 0xffffffff | (ulonglong)((uint)(result >> 0x20) & 0x7fffffff | input_param_2 & constant_4) << 0x20;\n        }\n        temp_var_6 = DAT_080071bc >> (temp_var_5 & 0xff);\n        if ((input_param_2 & temp_var_6 | input_param_1) == 0) {\n            return CONCAT44(input_param_2, input_param_1);\n        }\n        temp_var_6 = temp_var_6 >> 1;\n        temp_var_4 = input_param_2 & temp_var_6 | input_param_1;\n        if (temp_var_4 != 0) {\n            if (temp_var_5 == 0x13) {\n                temp_var_4 = constant_4;\n            }\n            else {\n                temp_var_4 = 0;\n            }\n            temp_var_2 = constant_5 >> (temp_var_5 & 0xff) | input_param_2 & ~temp_var_6;\n        }\n    }\n    else {\n        if (temp_var_5 > constant_6) {\n            if (temp_var_5 != constant_7) {\n                return CONCAT44(input_param_2, input_param_1);\n            }\n            result = FUNC_0800016c();\n            return result;\n        }\n        temp_var_6 = temp_var_6 - constant_9;\n        temp_var_5 = constant_8 >> (temp_var_6 & 0xff);\n        if ((input_param_1 & temp_var_5) == 0) {\n            return CONCAT44(input_param_2, input_param_1);\n        }\n        temp_var_5 = temp_var_5 >> 1;\n        temp_var_4 = input_param_1;\n        if ((input_param_1 & temp_var_5) != 0) {\n            temp_var_4 = constant_10 >> (temp_var_6 & 0xff) | input_param_1 & ~temp_var_5;\n        }\n    }\n    temp_var_7 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)input_param_2 >> 0x1f) * -8);\n    temp_var_8 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)input_param_2 >> 0x1f) * -8) + 4);\n    temp_var_9 = FUNC_0800016c(temp_var_4,temp_var_2,temp_var_7,temp_var_8,input_param_1,input_param_2,input_param_3);\n    result = FUNC_08000168((int)temp_var_9,(int)((ulonglong)temp_var_9 >> 0x20),temp_var_7,temp_var_8);\n    return result;\n}",
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_result_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "set_param_value_08001424",
                "param_1": "ptr_param_block",
                "param_2": "new_value",
                "param_3": "is_shifted"
            },
            "code": "void set_param_value_08001424(int ptr_param_block,int new_value,int is_shifted){\n  if (is_shifted == 0) {\n    new_value = new_value << 0x10;\n  }\n  *(int *)(ptr_param_block + 0x10) = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "set_param_value_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_end_of_string_08001028",
                "in_CY": "input_character",
                "concatenate_44_bits_08001004": "concatenate_44_bits"
            },
            "code": "bool is_end_of_string_08001028(void)\n{\n  char input_character;\n  concatenate_44_bits();\n  return input_character == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_08002ee8",
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = is_valid_input_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = is_valid_input_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = is_input_valid_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = is_input_valid_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = set_sign_bit_and_round_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = is_end_of_input_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = set_sign_bit_and_round_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = set_sign_bit_and_round_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = set_sign_bit_and_round_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = is_input_valid_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_sign_bit_and_round_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = set_sign_bit_and_round_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = is_valid_input_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = is_end_of_input_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_result_080070b0();\n        iVar3 = is_input_valid_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = return_zero_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = is_end_of_input_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = calculate_result_080070b0();\n        iVar3 = is_input_valid_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)get_value_from_pointer_to_pointer_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = is_input_valid_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = return_zero_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)get_value_from_pointer_to_pointer_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)get_value_from_pointer_to_pointer_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_08000a04",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_08007092",
                "FUN_0800709e",
                "FUN_080004d0",
                "FUN_080072ac",
                "FUN_080009b4",
                "FUN_080070b0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "calculate_result_080006ac",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "constant_val",
                "bVar4": "is_zero"
            },
            "code": "ulonglong calculate_result_080006ac(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  bool is_zero;\n  \n  temp1 = input_4 >> 0x14;\n  if (input_2 != input_3 && temp1 != input_3) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (input_3 == 0) {\n      temp3 = input_2 & 0x80000000;\n      do {\n        temp2 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp2 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp3;\n      if (temp1 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp1 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp1 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp3 = input_2;\n  if (((!is_zero) && ((input_2 != input_3 || ((input_1 | input_2 << 0xc) == 0)))) && ((temp1 != input_3 || (input_1 = input_3, temp3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp3,input_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "calculate_result_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "data",
                "param_6": "data_len",
                "param_7": "param_7",
                "iVar1": "value_1",
                "iVar2": "value_2",
                "puVar3": "ptr_3",
                "uVar4": "value_4"
            },
            "code": "uint32_t process_data_08001828(uint32_t **data_ptr, uint32_t param_2, uint32_t param_3, uint32_t param_4, uint8_t *data, uint16_t data_len, uint32_t param_7)\n{\n    int32_t iVar1;\n    int32_t iVar2;\n    uint32_t *ptr_3;\n    uint32_t value_4;\n    if (*(char *)((int)data_ptr + 0x35) == ' ')\n    {\n        if (data == NULL)\n            return 1;\n        if (data_len == 0)\n            return 1;\n        iVar1 = get_value_from_pointer();\n        do\n        {\n            ptr_3 = *data_ptr;\n            if ((~ptr_3[6] & 2) != 0)\n            {\n                if (*(char *)(data_ptr + 0xd) == '\\x01')\n                    return 2;\n                value_4 = *ptr_3;\n                *(undefined *)(data_ptr + 0xd) = 1;\n                *ptr_3 = value_4 & 0xfffff7ff;\n                *(undefined *)((int)data_ptr + 0x35) = 0x21;\n                *(undefined *)((int)data_ptr + 0x36) = 0x40;\n                data_ptr[0xe] = NULL;\n                iVar1 = process_data_08001828(data_ptr, param_2, param_3, param_4, data, data_len, param_7);\n                if (iVar1 != 0)\n                {\n                    *(undefined *)(data_ptr + 0xd) = 0;\n                    if (data_ptr[0xe] == (uint32_t *)0x4)\n                        return 1;\n                    return 3;\n                }\n                goto LAB_080018e2;\n            }\n            iVar2 = get_value_from_pointer();\n        } while ((uint32_t)(iVar2 - iVar1) < 0x2711);\n        *(undefined *)(data_ptr + 0xd) = 0;\n        *(undefined *)((int)data_ptr + 0x35) = 0x20;\n    }\n    return 2;\n    while (data_len != 0)\n    {\nLAB_080018e2:\n        iVar1 = check_if_flag_is_set(data_ptr, param_7);\n        if (iVar1 != 0)\n            goto LAB_080018ee;\n        ptr_3 = *data_ptr;\n        ptr_3[4] = (uint32_t)*data;\n        if ((int32_t)(ptr_3[5] << 0x1d) < 0)\n        {\n            if ((uint16_t)(data_len - 1) == 0)\n                break;\n            data_len = data_len - 2;\n            ptr_3[4] = (uint32_t)data[1];\n            data = data + 2;\n        }\n        else\n        {\n            data = data + 1;\n            data_len = data_len - 1;\n        }\n    }\n    iVar1 = check_if_flag_is_set(data_ptr, param_7);\n    if (iVar1 == 0)\n    {\n        **data_ptr = **data_ptr | 0x200;\n        *(undefined *)(data_ptr + 0xd) = 0;\n        *(undefined *)((int)data_ptr + 0x35) = 0x20;\n        *(undefined *)((int)data_ptr + 0x36) = 0;\n        return 0;\n    }\nLAB_080018ee:\n    if (data_ptr[0xe] == (uint32_t *)0x4)\n    {\n        **data_ptr = **data_ptr | 0x200;\n        return 1;\n    }\n    return 3;\n}",
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "clear_buffer_08004c64",
                "puVar1": "buffer_ptr",
                "iVar2": "buffer_index"
            },
            "code": "void clear_buffer_08004c64(void)\n{\n  undefined *buffer_ptr;\n  int buffer_index;\n  buffer_ptr = PTR_DAT_08004c6c;\n  buffer_index = 0;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(buffer_ptr + 0x802) = 0;\n  *(undefined2 *)(buffer_ptr + 0x804) = 0;\n  do {\n    buffer_ptr[buffer_index] = 0;\n    buffer_index = buffer_index + 1;\n  } while (buffer_index != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "clear_buffer_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080071c0",
                "FUN_080070b0"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = get_value_from_pointer_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = get_value_from_pointer_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = get_value_from_pointer_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = get_value_from_pointer_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = get_value_from_pointer_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = get_value_from_pointer_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = get_value_from_pointer_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = get_value_from_pointer_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = get_value_from_pointer_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = get_value_from_pointer_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = get_value_from_pointer_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = get_value_from_pointer_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = get_value_from_pointer_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_sign_bit_and_round_08007092",
                "param_1": "value",
                "param_2": "sign_mask"
            },
            "code": "uint set_sign_bit_and_round_08007092(uint value, uint sign_mask) {\n    uint signed_value = value | sign_mask;\n    uint shifted_value = signed_value + 0x100000;\n    uint rounded_value = shifted_value >> 0x1f;\n    return rounded_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_sign_bit_and_round_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "input_data",
                "bVar1": "data_byte",
                "iVar2": "data_ptr",
                "uVar3": "data_value",
                "uVar4": "data_int",
                "sVar5": "data_count",
                "puVar6": "data",
                "puVar7": "data_next",
                "bVar8": "is_data_value_32"
            },
            "code": "int process_data_0800290c(int *input_data)\n{\n    if ((*(byte *)((int)input_data + 0x39) & 0xef) != 0x22) {\n        return 2;\n    }\n    int data_ptr = *input_data;\n    ushort *data = (ushort *)input_data[10];\n    if (input_data[2] == 0x1000) {\n        if (input_data[4] == 0) {\n            data++;\n            *data = (ushort)((uint)(*(int *)(data_ptr + 4) << 0x17) >> 0x17);\n        }\n        else {\n            data = (ushort *)((int)data + 1);\n            *data = (ushort)*(int *)(data_ptr + 4) & 0xff;\n        }\n        input_data[10] = (int)data;\n    }\n    else {\n        if (input_data[4] == 0) {\n            byte data_byte = (byte)*(undefined4 *)(data_ptr + 4);\n            input_data[10] = (int)data + 1;\n            *(byte *)data = data_byte;\n        }\n        else {\n            int data_int = *(undefined4 *)(data_ptr + 4);\n            input_data[10] = (int)data + 1;\n            *(byte *)data = (byte)data_int & 0x7f;\n        }\n    }\n    short data_count = *(short *)((int)input_data + 0x2e) + -1;\n    *(short *)((int)input_data + 0x2e) = data_count;\n    if (data_count == 0) {\n        data_ptr = *input_data;\n        *(uint *)(data_ptr + 0xc) = *(uint *)(data_ptr + 0xc) & 0xffffffdf;\n        uint data_value = (uint)*(byte *)((int)input_data + 0x39);\n        bool is_data_value_32 = data_value == 0x32;\n        if (!is_data_value_32) {\n            data_value = *(uint *)(data_ptr + 0xc) & 0xfffffeff;\n        }\n        else {\n            data_ptr = 0x12;\n        }\n        if (!is_data_value_32) {\n            *(uint *)(data_ptr + 0xc) = data_value;\n            data_value = *(uint *)(data_ptr + 0x14) & 0xfffffffe;\n        }\n        if (!is_data_value_32) {\n            *(uint *)(data_ptr + 0x14) = data_value;\n            data_ptr = 1;\n        }\n        *(char *)((int)input_data + 0x39) = (char)data_ptr;\n        increment_and_store_08004c30();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "decode_strings_and_calculate_hash_08002f28",
                "iVar6": "value",
                "puVar2": "mpu_data_2",
                "iVar8": "stored_value",
                "uVar7": "hash",
                "iVar6 - iVar8": "difference",
                "puVar4": "mpu_data",
                "puVar3": "mpu_data_1",
                "puVar1": "mpu_data_3",
                "sVar1": "converted_value",
                "uVar5": "average"
            },
            "code": "void decode_strings_and_calculate_hash_08002f28(){\n    short mpu_data_1, mpu_data_2, mpu_data_3;\n    int value = get_value_from_pointer();\n    int* ptr_data = (int*)PTR_DAT_08003000;\n    int stored_value = *ptr_data;\n    * (int *) PTR_DAT_08003004 = value;\n    int difference = value - stored_value;\n    uint32_t hash = calculate_hash(difference);\n    store_parameter_in_memory(hash);\n    MPU9250_data_t mpu_data = decode_and_hash_mpu9250_data();\n    decode_and_hash_strings();\n    decode_and_calculate_hash();\n    uint32_t average = calculate_average();\n    uint16_t converted_value = convert_to_int32();\n    calculate_new_value();\n    check_string();\n}",
            "called": [
                "FUN_08002b48",
                "FUN_08000cec",
                "FUN_08002ee8",
                "FUN_08002ec0",
                "FUN_08001078",
                "FUN_08003330",
                "FUN_08003320",
                "FUN_08000c3c",
                "FUN_08002ed4",
                "thunk_FUN_0800115c",
                "FUN_08000e54",
                "FUN_08002bf0",
                "FUN_08002d88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_strings_and_calculate_hash_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "decode_and_xor_08004384",
                "param_1": "key",
                "param_2": "data",
                "param_3": "size",
                "param_4": "checksum",
                "puVar1": "buffer",
                "local_14": "temp",
                "uStack_10": "unused",
                "local_c": "unused"
            },
            "code": "void decode_and_xor_08004384(uint8_t key, uint32_t* data, uint8_t size, uint16_t* checksum, uint8_t* output)\n{\n    uint16_t* ptr = (uint16_t*)PTR_DAT_buffer;\n    ptr[2] = 0x2a;\n    ptr[3] = 0;\n    ptr[4] = 0;\n    *checksum = ptr[2];\n    *output = 0;\n    *(output + 1) = 0;\n    *(output + 2) = 0;\n    uint32_t temp = (*checksum & 0xff000000) | *ptr;\n    decode_and_xor_08004384_08004300(key, data, size, *checksum, output);\n}\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "is_input_valid_080009a0",
                "in_ZR": "input_char",
                "validate_params_08000990": "validate_input"
            },
            "code": "bool is_input_valid_080009a0(void)\\n{\\n  char input_char;\\n  validate_params_08000990();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "is_input_valid_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "process_data_and_decode_08003298",
                "iVar4": "loop_counter",
                "process_and_decode_data_0800403c": "process_and_decode_data",
                "thunk_do_nothing_08001168": "do_nothing",
                "PTR_DAT_08003304": "encoded_data_pointer",
                "PTR_DAT_08003308": "decoded_data_pointer",
                "PTR_DAT_08003310": "zero_data_pointer",
                "PTR_DAT_0800330c": "encoded_data"
            },
            "code": "void process_data_and_decode_08003298(void)\n{\n    int loop_counter = 0;\n    process_and_decode_data(0xee, 0x1e, 1);\n    thunk_do_nothing_08001168(10);\n    unsigned char *decoded_data = PTR_s____Src_MS5611_c_08003308;\n    unsigned short *PTR_DAT_0800330c = PTR_DAT_0800330c;\n    *PTR_DAT_08003304 = 8;\n    do\n    {\n        unsigned char decoded_byte_1 = 0;\n        unsigned char decoded_byte_2 = 0;\n        decode_strings_in_loop(0xee, loop_counter + 0xa0U & 0xffff, &decoded_byte_1, 2, decoded_data, 0x7c);\n        PTR_DAT_0800330c[loop_counter / 2] = CONCAT11(decoded_byte_1, decoded_byte_2);\n        unsigned int *zero_data = PTR_DAT_08003310;\n        loop_counter += 2;\n    } while (loop_counter != 0x10);\n    loop_counter = 0;\n    do\n    {\n        zero_data[loop_counter] = 0;\n        loop_counter++;\n    } while (loop_counter != 0x14);\n    return;\n}",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "process_data_and_decode_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "decode_and_xor_08004300",
                "param_1": "xor_key",
                "param_2": "input_array",
                "param_3": "array_length",
                "uVar1": "xor_result",
                "pbVar2": "current_byte"
            },
            "code": "void decode_and_xor_08004300(uint xor_key, byte* input_array, uint array_length){\n                      uint xor_result;\n                      byte* current_byte;\n                      decode_string_in_array_08004c8c(PTR_DAT_08004344);\n                      decode_string_08004c18(array_length & 0xff);\n                      xor_result = array_length & 0xff ^ xor_key;\n                      decode_string_08004c18(xor_key);\n                      for (current_byte = input_array; (int)current_byte - (int)input_array < (int)array_length; current_byte = current_byte + 1) {\n                        decode_string_08004c18(*current_byte);\n                        xor_result = xor_result ^ *current_byte;\n                      }\n                      decode_string_08004c18(xor_result);\n                      return;\n                    }",
            "called": [
                "FUN_08004c8c",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004434",
                "FUN_080043f0",
                "FUN_08004458",
                "FUN_08004410",
                "FUN_080043bc",
                "FUN_08004348",
                "FUN_08004384"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_array_08005630",
                "param_1": "array_start",
                "param_2": "src_array",
                "param_3": "array_length",
                "puVar1": "dest_ptr",
                "puVar2": "src_ptr"
            },
            "code": "void copy_array_08005630(int array_start, undefined *dest_array, int array_length) {\n  undefined *dest_ptr;\n  undefined *src_ptr;\n  dest_ptr = (undefined *)(array_start - 1);\n  src_ptr = dest_array + array_length;\n  for (; dest_array != src_ptr; dest_array++) {\n    dest_ptr++;\n    *dest_ptr = *dest_array;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_array_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  reverse_bits_08000428();\n  calculate_float_from_uint_08006c0c_wrapper_08005bc8();\n  uVar2 = calculate_float_value_08000a30();\n  iVar4 = check_if_concatenated_string_not_empty_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    reverse_bits_08000428();\n    calculate_float_from_uint_08006c0c_wrapper_08005bc8();\n    uVar3 = calculate_float_value_08000a30();\n    iVar4 = check_if_concatenated_string_not_empty_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = reverse_bits_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = calculate_float_value_08000a30();\n      uVar32 = reverse_bits_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = calculate_float_value_08000a30();\n      uVar32 = reverse_bits_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = calculate_float_value_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      reverse_bits_08000428();\n      calculate_float_from_uint_08006c0c_wrapper_08005bc8();\n      iVar27 = calculate_float_value_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      reverse_bits_08000428();\n      calculate_float_from_uint_08006c0c_wrapper_08005bc8();\n      uVar8 = calculate_float_value_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      reverse_bits_08000428();\n      calculate_float_from_uint_08006c0c_wrapper_08005bc8();\n      uVar28 = calculate_float_value_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      reverse_bits_08000428();\n      uVar32 = reversed_and_improved();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = calculate_float_value_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = reverse_bits_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_bits_08000428();\n      uVar32 = calculate_result_thunk_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_value_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = reverse_bits_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = reverse_bits_08000428();\n      uVar32 = calculate_result_thunk_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = calculate_float_value_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08005854",
                "FUN_08000adc",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08000e54",
                "FUN_08005bc8",
                "FUN_08000a30",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "validate_parameters_08000980",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param"
            },
            "code": "void validate_parameters_08000980(undefined4 first_param, undefined4 second_param, undefined4 third_param, undefined4 fourth_param)\n{\n  validate_params_08000990(third_param, fourth_param, first_param, second_param);\n  return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "validate_parameters_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "run_simulation_08004028",
                "FUNC_0800458c": "initialize_simulation",
                "set_bits_in_uint32_array_08003ff4": "set_initial_params",
                "set_param_values_08003f3c": "set_params_for_iteration",
                "thunk_do_nothing_08001168": "wait_for",
                "iVar1": "num_iterations"
            },
            "code": "void run_simulation_08004028(void)\n{\n  int num_iterations = 3;\n  FUNC_0800458c();\n  while (num_iterations > 0)\n  {\n    set_initial_params();\n    thunk_do_nothing_08001168(100);\n    set_params_for_second_iteration();\n    thunk_do_nothing_08001168(100);\n    set_params_for_third_iteration();\n    thunk_do_nothing_08001168(100);\n    num_iterations--;\n  }\n  set_final_params();\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08003ff4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "run_simulation_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08006070",
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08006d68",
                "FUN_08005c70"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "update_data_08002368",
                "param_1": "data_ptr",
                "param_2": "update_ptr",
                "uVar1": "current_data",
                "puVar2": "ptr",
                "DAT_080023cc": "ptr_1",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void update_data_08002368(uint *DAT_ptr, uint *update_ptr)\n{\n  uint current_data = *DAT_ptr;\n  if ((((DAT_ptr == DAT_080023cc) || (DAT_ptr == (uint *)0x40000000)) ||\n      (DAT_ptr == PTR_2)) || (DAT_ptr == PTR_3)) {\n    current_data = current_data & 0xffffff8f | update_ptr[1];\n    if (((DAT_ptr == DAT_080023cc) || (DAT_ptr == (uint *)0x40000000)) ||\n       ((DAT_ptr == PTR_2 || (DAT_ptr == PTR_3)))) {\n      current_data = current_data & 0xfffffcff | update_ptr[3];\n    }\n  }\n  *DAT_ptr = current_data;\n  DAT_ptr[11] = update_ptr[2];\n  DAT_ptr[10] = *update_ptr;\n  uint *ptr = DAT_080023cc;\n  if (DAT_ptr == DAT_080023cc) {\n    ptr = (uint *)update_ptr[4];\n  }\n  if (DAT_ptr == DAT_080023cc) {\n    DAT_ptr[12] = (uint)ptr;\n  }\n  DAT_ptr[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "update_data_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "update_bit_in_uint_at_offset_08002520",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "bit_value",
                "*(uint *)(param_1 + 0x20)": "*data",
                "*(uint *)(param_1 + 0x20) & ~(1 << (param_2 & 0xff))": "mask",
                "param_3 << (param_2 & 0xff)": "shifted_value"
            },
            "code": "void update_bit_in_uint_at_offset_08002520(uint32_t *data, uint8_t offset, uint8_t bit_value){\n    uint32_t mask = ~(1 << (offset & 0xff));\n    uint32_t shifted_value = bit_value << (offset & 0xff);\n    *data = (*data & mask) | shifted_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "update_bit_in_uint_at_offset_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_value_08002008",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "data",
                "uVar4": "shift",
                "uVar5": "value",
                "puVar6": "source",
                "puVar7": "destination",
                "local_24": "local_data",
                "local_20": "local_array"
            },
            "code": "uint calculate_value_08002008(void)\n{\n    uint value = 0;\n    uint mask = 0x3c0000;\n    uint shift = 0;\n    uint data = *(uint *)(DAT_08002090 + 4);\n    byte local_data[4] = {1, 2, 0, 0};\n    undefined4 local_array[5];\n    undefined4 *source = (undefined4 *)PTR_DAT_0800208c;\n    undefined4 *destination = local_array;\n    for (int i = 0; i < 5; i++) {\n        *destination = *source;\n        *(destination + 1) = *(source + 1);\n        destination += 2;\n        source += 2;\n    }\n    if ((data & 0xc) == 8) {\n        shift = count_leading_zeroes(0x3c00);\n        if ((int)(data << 0xf) < 0) {\n            uint mask = 0x20000;\n            uint shift = count_leading_zeroes(0x4000);\n            uint divisor = local_data[(data & mask) >> shift];\n            value = DAT_08002094 / divisor;\n        }\n        value *= local_array[(data & mask) >> shift];\n    }\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_value_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "set_flags_and_values_08002404",
                "param_1": "memory_address",
                "param_2": "values",
                "uVar1": "flags",
                "uVar2": "flag_mask",
                "iVar3": "value1"
            },
            "code": "void set_flags_and_values_08002404(int memory_address, int *values){\n  uint flags = *(uint *)(memory_address + 0x20) & 0xffffffef;\n  uint flag_mask = *(uint *)(memory_address + 0x20) & 0xffffffdf;\n  int value1 = *values;\n  int value2 = values[1];\n  int value3 = values[2];\n  int value4 = values[3];\n  int value5 = values[4];\n  int value6 = values[5];\n  if (memory_address == PTR_DAT_08002458) {\n    flag_mask = (flag_mask & 0xffffff7f) | (values[3] << 4);\n    flags = (flags & 0xfffff3ff) | ((values[4] | values[5]) << 2);\n  }\n  *(uint *)(memory_address + 0x20) = flag_mask | (value3 << 4);\n  *(uint *)(memory_address + 0x4) = (uVar2 & 0xfffff3ff) | ((value4 | value5) << 2);\n  *(uint *)(memory_address + 0x18) = (*(uint *)(memory_address + 0x18) & 0xffff8cff) | (value1 << 8);\n  *(int *)(memory_address + 0x38) = value2;\n  *(uint *)(memory_address + 0x20) = flags;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "calculate_float_from_uint_08006c0c_wrapper_08005bc8",
                "param_1": "uint_param_1",
                "param_2": "uint_param_2",
                "cVar1": "input_char",
                "iVar2": "is_end_of_input",
                "piVar3": "output_ptr",
                "puVar4": "value_ptr",
                "uVar5": "return_value",
                "local_30": "is_input_valid",
                "local_38": "return_value",
                "local_40": "uint_param_1_copy",
                "local_48": "uint_param_1_copy_2",
                "local_4c": "local_pointer",
                "local_50": "return_value_2",
                "stack_3c": "uint_param_2_copy",
                "stack_44": "uint_param_2_copy_2",
                "uStack_3c": "uint_param_2_copy",
                "uStack_44": "uint_param_2_copy_2"
            },
            "code": "undefined8 calculate_float_from_uint_08006c0c_wrapper_08005bc8(undefined4 uint_param_1, undefined4 uint_param_2) {\n    char input_char;\n    int is_input_valid;\n    int *output_ptr;\n    undefined4 *value_ptr;\n    undefined8 return_value;\n    undefined4 local_50;\n    undefined *local_4c;\n    undefined4 local_48;\n    undefined4 stack_44;\n    undefined4 local_40;\n    undefined4 stack_3c;\n    undefined8 local_38;\n    int is_end_of_input;\n\n    return_value = calculate_float_from_uint_08006c0c();\n    input_char = *PTR_DAT_08005c68;\n    if (input_char == -1) {\n        return return_value;\n    }\n    is_input_valid = is_valid_input_08000a04(uint_param_1, uint_param_2, uint_param_1, uint_param_2);\n    if (is_input_valid != 0) {\n        return return_value;\n    }\n    is_end_of_input = is_end_of_input_080009b4(uint_param_1, uint_param_2, 0, 0);\n    if (is_end_of_input == 0) {\n        return return_value;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005c6c;\n    local_48 = uint_param_1;\n    stack_44 = uint_param_2;\n    local_40 = uint_param_1;\n    stack_3c = uint_param_2;\n    if (input_char == '\\0') {\n        local_38 = 0;\n        goto LAB_08005c26;\n    } else {\n        local_38 = FUNC_08000724(0, 0, 0, 0);\n        if (input_char != '\\x02') {\n            goto LAB_08005c26;\n        }\n    }\n    value_ptr = (undefined4 *)get_value_from_pointer_to_pointer_080072ac();\n    *value_ptr = 0x21;\nLAB_08005c2e:\n    if (is_input_valid != 0) {\n        output_ptr = (int *)get_value_from_pointer_to_pointer_080072ac();\n        *output_ptr = is_input_valid;\n    }\n    return local_38;\n}\n",
            "called": [
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080072ac",
                "FUN_080009b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_float_from_uint_08006c0c_wrapper_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "clear_flag_if_set_08001436",
                "param_1": "memory_address",
                "iVar1": "memory_value"
            },
            "code": "int clear_flag_if_set_08001436(int *memory_address)\n{\n  int memory_value = *memory_address;\n  if ((*(uint *)(memory_value + 0x14) & 0x400) != 0) {\n    *(uint *)(memory_value + 0x14) &= 0xfffffbff;\n    memory_address[14] = 4;\n    *(undefined *)((int)memory_address + 0x35) = 0x20;\n    *(undefined *)(memory_address + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "clear_flag_if_set_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "update_data_if_needed_08004a30",
                "*PTR_DAT_08004a74": "data_ptr_1",
                "*PTR_DAT_08004a78": "data_ptr_2",
                "*PTR_DAT_08004a7c": "data_ptr_3",
                "PTR_DAT_08004a74": "data_ptr_1",
                "PTR_DAT_08004a78": "data_ptr_2",
                "PTR_DAT_08004a7c": "data_ptr_3",
                "uVar4": "new_data"
            },
            "code": "void update_data_if_needed_08004a30(void)\n{\n  undefined **PTR_DAT_08004a74;\n  undefined **PTR_DAT_08004a78;\n  undefined **PTR_DAT_08004a7c;\n  undefined4 new_data;\n  *PTR_DAT_08004a7c = PTR_DAT_08004a7c;\n  *PTR_DAT_08004a78 = PTR_DAT_08004a78;\n  *PTR_DAT_08004a74 = PTR_DAT_08004a74;\n  if (*PTR_DAT_08004a74[1] != '\\0') {\n    if (**PTR_DAT_08004a78 == '\\0') {\n      new_data = get_data_from_pointer_08003068();\n      new_data = FUNC_08000cec(new_data,DAT_08004a80);\n      *(undefined4 *)(*PTR_DAT_08004a7c + 0x1c) = new_data;\n      **PTR_DAT_08004a78 = 1;\n    }\n    else {\n      new_data = get_data_from_pointer_08003068();\n      new_data = FUNC_08000cec(new_data,DAT_08004a80);\n      *(undefined4 *)(*PTR_DAT_08004a7c + 0x30) = new_data;\n    }\n  }\n  if (*PTR_DAT_08004a74[1] == '\\0') {\n    if (**PTR_DAT_08004a78 != '\\0') {\n      **PTR_DAT_08004a78 = 0;\n    }\n    *(undefined4 *)(*PTR_DAT_08004a7c + 0x48) = *(undefined4 *)(*PTR_DAT_08004a74 + 4);\n  }\n  return;\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "update_data_if_needed_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "clear_and_set_data_08004c70",
                "puVar1": "buffer_ptr",
                "puVar2": "data_ptr",
                "uVar3": "buffer_value",
                "uVar4": "int_value",
                "iVar5": "int_ptr"
            },
            "code": "int clear_and_set_data_08004c70()\n{\n    uint32_t* data_ptr = PTR_DAT_08004c88;\n    uint8_t* buffer_ptr = PTR_DAT_08004c84;\n    uint8_t buffer_value = data_ptr[0x39];\n    if (buffer_value == 0x01 || buffer_value == 0x12)\n    {\n        if (buffer_ptr == NULL)\n        {\n            return 1;\n        }\n        if (data_ptr[0x38] != 0x01)\n        {\n            data_ptr[0x38] = 0x01;\n            data_ptr[0x3c] = 0x00;\n            data_ptr[0x2c] = 0x01;\n            data_ptr[0x2e] = 0x01;\n            data_ptr[0x38] = 0x00;\n            uint8_t new_buffer_value = (buffer_value == 0x12) ? 0x32 : 0x22;\n            int* int_ptr = (int*)data_ptr;\n            data_ptr[0x39] = new_buffer_value;\n            uint32_t int_value = *(uint32_t*)(int_ptr + 0x03);\n            data_ptr[0x28] = buffer_ptr;\n            *(uint32_t*)(int_ptr + 0x03) = int_value | 0x100;\n            *(uint32_t*)(int_ptr + 0x05) = *(uint32_t*)(int_ptr + 0x05) | 0x01;\n            *(uint32_t*)(int_ptr + 0x03) = *(uint32_t*)(int_ptr + 0x03) | 0x20;\n            return 0;\n        }\n    }\n    return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "clear_and_set_data_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "check_params_08000904",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "xor_result",
                "bVar2": "is_second_param_same",
                "bVar3": "is_fourth_param_less_or_equal"
            },
            "code": "uint check_params_08000904(uint first_param, uint second_param, uint third_param, uint fourth_param)\n{\n  uint result;\n  bool is_negative_first = ((int)(second_param << 1) >> 0x15 == -1);\n  bool is_negative_second = ((int)(fourth_param << 1) >> 0x15 == -1);\n  bool is_first_valid = (is_negative_first && ((first_param | (second_param << 0xc)) != 0));\n  bool is_second_valid = (is_negative_second && ((third_param | (fourth_param << 0xc)) != 0));\n  if ((is_negative_first || is_negative_second) && (is_first_valid || is_second_valid))\n  {\n    return 1;\n  }\n  bool is_first_zero = ((first_param | (second_param << 1)) == 0);\n  bool is_second_zero = ((third_param | (fourth_param << 1)) == 0);\n  if (!is_first_zero && !is_second_zero)\n  {\n    bool is_second_param_same = (second_param == fourth_param);\n    bool is_first_param_same = (first_param == third_param);\n    if (!is_second_param_same && !is_first_param_same)\n    {\n      uint xor_result = second_param ^ fourth_param;\n      bool is_xor_zero = (xor_result == 0);\n      bool is_xor_negative = (-1 < (int)xor_result);\n      bool is_fourth_param_less_or_equal = (fourth_param <= second_param);\n      bool is_third_param_less_or_equal = (third_param <= first_param);\n      if (is_xor_zero)\n      {\n        result = is_second_param_same || is_first_param_same;\n      }\n      else\n      {\n        if (is_xor_negative && is_fourth_param_less_or_equal)\n        {\n          result = is_second_param_same;\n        }\n        else\n        {\n          result = is_third_param_less_or_equal;\n        }\n      }\n      result = (int)result >> 0x1f;\n      if (!result)\n      {\n        result = ~result;\n      }\n      return result | 1;\n    }\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "check_params_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "data_value_1",
                "sVar2": "data_value_2",
                "uVar3": "data_value_3",
                "puVar4": "data_ptr_0",
                "uVar5": "data_value_4",
                "puVar6": "data_ptr_1",
                "uVar7": "data_value_5",
                "bVar8": "data_value_6"
            },
            "code": "void process_data_0800299a(uint **data)\n{\n  uint data_value_0 = *(*data);\n  uint data_value_3 = (*data)[3];\n  if ((data_value_0 & 0xf) == 0)\n  {\n    if (((int)(data_value_0 << 0x1a) < 0) && ((int)(data_value_3 << 0x1a) < 0))\n    {\n      process_data_0800299a_0800290c();\n      return;\n    }\n  }\n  else\n  {\n    uint data_value_5 = (*data)[5] & 1;\n    if ((data_value_5 != 0) || ((data_value_3 & 0x120) != 0))\n    {\n      uint *data_ptr_0 = (uint *)(data_value_0 << 0x1f);\n      if ((int)data_ptr_0 < 0)\n      {\n        bool data_value_17 = (int)(data_value_3 << 0x17) < 0;\n        if (data_value_17)\n        {\n          data_ptr_0 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (data_value_17)\n        {\n          data[0xf] = data_ptr_0;\n        }\n      }\n      if (((int)(data_value_0 << 0x1d) < 0) && (data_value_5 != 0))\n      {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(data_value_0 << 0x1e) < 0) && (data_value_5 != 0))\n      {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(data_value_0 << 0x1c) < 0) && (data_value_5 != 0))\n      {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0)\n      {\n        return;\n      }\n      if (((int)(data_value_0 << 0x1a) < 0) && ((int)(data_value_3 << 0x1a) < 0))\n      {\n        process_data_0800299a(data);\n      }\n      uint *data_ptr_1 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((data_ptr_1[5] & 0x40) == 0))\n      {\n        do_nothing_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      data_ptr_1[3] = data_ptr_1[3] & 0xfffffedf;\n      data_ptr_1[5] = data_ptr_1[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      do_nothing_08002998(data);\n      return;\n    }\n  }\n  if (((int)(data_value_0 << 0x18) < 0) && ((int)(data_value_3 << 0x18) < 0))\n  {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12)\n    {\n      uint *data_ptr_2 = data[8];\n      if (data[2] == (uint *)0x1000)\n      {\n        data_ptr_1[1] = *(ushort *)data_ptr_2 & 0x1ff;\n        if (data[4] == (uint *)0x0)\n        {\n          data_ptr_2 = (uint *)((int)data_ptr_2 + 2);\n        }\n        else\n        {\n          data_ptr_2 = (uint *)((int)data_ptr_2 + 1);\n        }\n        data[8] = data_ptr_2;\n      }\n      else\n      {\n        data[8] = (uint *)((int)data_ptr_2 + 1);\n        data_ptr_1[1] = (uint)*(byte *)data_ptr_2;\n      }\n      short data_value_38 = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = data_value_38;\n      if (data_value_38 == 0)\n      {\n        data_ptr_1[3] = data_ptr_1[3] & 0xffffff7f;\n        data_ptr_1[3] = data_ptr_1[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(data_value_0 << 0x19) < 0) && ((int)(data_value_3 << 0x19) < 0))\n  {\n    data_ptr_1[3] = data_ptr_1[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2')\n    {\n      undefined data_value_57 = 0x22;\n    }\n    else\n    {\n      undefined data_value_57 = 1;\n    }\n    *(undefined *)((int)data + 0x39) = data_value_57;\n    do_nothing_0800290a(data);\n  }\n  return;\n}\n",
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_ptr_dat_08001158_0800114c",
                "PTR_DAT_08001158": "ptr_dat"
            },
            "code": "void increment_ptr_dat_08001158_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*) PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_08001158_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "extract_data_from_param_080052e4",
                "param_1": "data_offset",
                "param_2": "data_ptr",
                "param_3": "data_len_ptr",
                "param_4": "unknown_val",
                "param_5": "callback_fn",
                "uVar2": "data_len",
                "uVar3": "unknown_val_3",
                "bVar4": "data_ptr_val_3",
                "iVar1": "callback_res",
                "data_ptr_val": "data_ptr_val",
                "data_ptr_val_2": "data_ptr_val_2",
                "data_ptr_val_4": "data_ptr_val_4"
            },
            "code": "undefined4 extract_data_from_param_080052e4(uint32_t data_offset, uint32_t *data_ptr, uint32_t *data_len_ptr, uint32_t unknown_val, code *callback_fn)\\n\\\n{\\n\\\n  int callback_res;\\n\\\n  uint32_t data_len = data_ptr[4];\\n\\\n  if ((int)data_ptr[4] < (int)data_ptr[2]) {\\n\\\n    data_len = data_ptr[2];\\n\\\n  }\\n\\\n  *data_len_ptr = data_len;\\n\\\n  if (*(char *)((int)data_ptr + 0x43) != \"\\0\") {\\n\\\n    *data_len_ptr = data_len + 1;\\n\\\n  }\\n\\\n  if ((int)(*data_ptr << 0x1a) < 0) {\\n\\\n    *data_len_ptr = *data_len_ptr + 2;\\n\\\n  }\\n\\\n  uint32_t data_ptr_val = *data_ptr & 6;\\n\\\n  if (data_ptr_val == 0) {\\n\\\n    for (; (int)data_ptr_val < (int)(data_ptr[3] - *data_len_ptr); data_ptr_val = data_ptr_val + 1) {\\n\\\n      callback_res = (*callback_fn)(data_offset, unknown_val, (int)data_ptr + 0x19, 1);\\n\\\n      if (callback_res == -1) {\\n\\\n        return 0xffffffff;\\n\\\n      }\\n\\\n    }\\n\\\n  }\\n\\\n  uint32_t unknown_val_2 = (uint32_t)*(byte *)((int)data_ptr + 0x43);\\n\\\n  if (unknown_val_2 != 0) {\\n\\\n    unknown_val_2 = 1;\\n\\\n  }\\n\\\n  uint32_t unknown_val_3 = unknown_val_2;\\n\\\n  if ((int)(*data_ptr << 0x1a) < 0) {\\n\\\n    *(undefined *)((int)data_ptr + unknown_val_2 + 0x43) = 0x30;\\n\\\n    unknown_val_3 = unknown_val_2 + 2;\\n\\\n    *(undefined *)((int)data_ptr + unknown_val_2 + 0x44) = *(undefined *)((int)data_ptr + 0x45);\\n\\\n  }\\n\\\n  callback_res = (*callback_fn)(data_offset, unknown_val, (int)data_ptr + 0x43, unknown_val_3);\\n\\\n  if (callback_res != -1) {\\n\\\n    uint32_t data_ptr_val_2 = data_ptr[3];\\n\\\n    bool data_ptr_val_3 = (*data_ptr & 6) != 4;\\n\\\n    if (data_ptr_val_3) {\\n\\\n      data_ptr_val_2 = 0;\\n\\\n    }\\n\\\n    uint32_t data_ptr_val_4 = 0;\\n\\\n    if (!data_ptr_val_3) {\\n\\\n      data_ptr_val_2 = data_ptr_val_2 - *data_len_ptr;\\n\\\n    }\\n\\\n    if (!data_ptr_val_3) {\\n\\\n      data_ptr_val_2 = data_ptr_val_2 & ~((int)data_ptr_val_2 >> 0x1f);\\n\\\n    }\\n\\\n    if ((int)data_ptr[4] < (int)data_ptr[2]) {\\n\\\n      data_ptr_val_2 = data_ptr_val_2 + (data_ptr[2] - data_ptr[4]);\\n\\\n    }\\n\\\n    while( true ) {\\n\\\n      if (data_ptr_val_2 == data_ptr_val_4) {\\n\\\n        return 0;\\n\\\n      }\\n\\\n      callback_res = (*callback_fn)(data_offset, unknown_val, (int)data_ptr + 0x1a, 1);\\n\\\n      if (callback_res == -1) break;\\n\\\n      data_ptr_val_4 = data_ptr_val_4 + 1;\\n\\\n    }\\n\\\n  }\\n\\\n  return 0xffffffff;\\n\\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "extract_data_from_param_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_if_flag_is_set_080014e2",
                "param_1": "flag_ptr",
                "param_2": "max_val",
                "iVar1": "start_val",
                "iVar2": "flag_cleared"
            },
            "code": "int check_if_flag_is_set_080014e2(int *flag_ptr, uint32_t max_val){\n  int start_val = get_start_value();\n  while(1){\n    if (*(int *)(*flag_ptr + 0x14) << 0x18 < 0){\n      return 0;\n    }\n    int flag_cleared = clear_flag_if_set(flag_ptr);\n    if (flag_cleared != 0) break;\n    if ((max_val != 0xffffffff) &&\n       ((max_val == 0 || (flag_cleared = get_start_value(), max_val < (uint32_t)(flag_cleared - start_val))))){\n      flag_ptr[0xe] = flag_ptr[0xe] | 0x20;\n      *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n      *(undefined *)(flag_ptr + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_if_flag_is_set_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_param_with_ptr_0800142e",
                "param_1": "ptr_to_uint",
                "param_2": "param",
                "*(uint *)(param_1 + 0xc)": "*ptr_to_uint"
            },
            "code": "void xor_param_with_ptr_0800142e(uint *ptr_to_uint, uint param) {\n  *ptr_to_uint = param ^ *ptr_to_uint;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_param_with_ptr_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "process_param_08004d8c",
                "param_1": "param_ptr",
                "iVar1": "param_value",
                "DAT_08004e04": "PARAM_1_VALUE",
                "DAT_08004e08": "PARAM_1_ADDRESS",
                "_DAT_4002101c": "PARAM_2_PTR",
                "0x40000000": "PARAM_2_VALUE",
                "DAT_08004e0c": "PARAM_3_VALUE",
                "DAT_08004e10": "PARAM_4_VALUE"
            },
            "code": "void process_param_08004d8c(int *param_ptr) {\n  int param_value = *param_ptr;\n  if (param_value == DAT_08004e04) {\n    *(uint *)(DAT_08004e08 + 0x18) |= 0x800;\n  }\n  else if (param_value == PARAM_2_VALUE) {\n    _DAT_4002101c |= 1;\n  }\n  else if (param_value == DAT_08004e0c) {\n    *(uint *)(DAT_08004e08 + 0x1c) |= 2;\n  }\n  else if (param_value == DAT_08004e10) {\n    *(uint *)(DAT_08004e08 + 0x1c) |= 4;\n  }\n  return;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "process_param_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUNC_08002250": "shift_bits",
                "uVar1": "count",
                "PTR_DAT_0800227c": "ptr1",
                "PTR_DAT_08002278": "ptr2",
                "DAT_08002274": "dat1",
                "count_leading_zeroes": "count_leading_zeroes",
                "num": "num",
                "var1": "var1",
                "var2": "var2",
                "var3": "var3",
                "var4": "var4",
                "FUN_08002250": "count_leading_zeroes_08002250"
            },
            "code": "uint count_leading_zeroes_08002250(uint num) {\n  uint count = 0;\n  while (num >>= 1)\n    count++;\n  return 32 - count;\n}\n\nuint FUNC_08002250() {\n  uint count = count_leading_zeroes_08002250(0x1c0000);\n  uint var1 = *(uint *)PTR_DAT_0800227c;\n  uint var2 = *(uint *)(DAT_08002274 + 4);\n  uint var3 = var2 & 0x3800;\n  uint var4 = var3 >> (count & 0xff);\n  return var1 >> PTR_DAT_08002278[var4];\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_end_of_input_080009b4",
                "in_CY": "current_char",
                "validate_params_08000990": "validate_input"
            },
            "code": "bool is_end_of_input_080009b4(void)\n{\n  char current_char;\n  validate_params_08000990();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_end_of_input_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bit_index",
                "PTR_DAT_08001210": "array_ptr",
                "DAT_08001210": "array_base_address"
            },
            "code": "void set_bit_in_array_080011fc(uint bit_index) {\n    int* PTR_DAT_08001210 = (int*)(DAT_08001210 + (bit_index >> 5) * 4);\n    int bit_mask = 1 << (bit_index & 0x1f);\n    *PTR_DAT_08001210 = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_data_from_pointer_08003068",
                "PTR_DAT_08003070": "data_pointer"
            },
            "code": "int get_data_from_pointer_08003068() {\n    int* PTR_DAT_08003070 = PTR_DAT_08003070;\n    int data = *PTR_DAT_08003070;\n    return data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_data_from_pointer_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "copy_memory_region_08005646",
                "param_1": "dest",
                "param_2": "source",
                "param_3": "size",
                "puVar1": "source_end"
            },
            "code": "void copy_memory_region_08005646(unsigned char* dest, unsigned char* source, int size) {\n  unsigned char* source_end = source + size;\n  if ((source < dest) && (dest < source_end)) {\n    dest = dest + size;\n    size = size - (int)source_end;\n    while (source_end + size != NULL) {\n      source_end--;\n      dest--;\n      *dest = *source_end;\n    }\n    return;\n  }\n  dest--;\n  for (; source != source_end; source++) {\n    dest++;\n    *dest = *source;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "copy_memory_region_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "validate_params_08000990",
                "param_1": "input_param",
                "check_params_08000904": "check_parameters"
            },
            "code": "undefined4 validate_params_08000990(undefined4 input_param)\n{\n  check_params_08000904();\n  return input_param;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "validate_params_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "initialize_if_first_call_08000110",
                "param_1": "input_string",
                "*PTR_DAT_08000128": "*PTR_GLOBAL_FLAG",
                "DAT_0800012c": "DAT_GLOBAL_VAR",
                "PTR_FUN_08000130": "PTR_GLOBAL_FUNCTION"
            },
            "code": "undefined initialize_if_first_call_08000110(undefined *input_string)\\n{\\n  if (*PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      input_string = PTR_FUN_08000130;\\n    }\\n    *PTR_DAT_08000128 = 1;\\n  }\\n  return input_string;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "initialize_if_first_call_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "return_zero_0800709e"
            },
            "code": "int return_zero_0800709e(){\n return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "return_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_new_value_08002ec0",
                "puVar1": "pointer_to_value",
                "uVar2": "intermediate_value_1",
                "uVar3": "second_value",
                "uVar4": "first_value"
            },
            "code": "void calculate_new_value_08002ec0(void)\n{\n  undefined *pointer_to_value = PTR_DAT_08002ed0;\n  undefined4 second_value = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  undefined4 first_value = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  undefined4 intermediate_value_1 = FUNC_08000ad8(0x3f800000,first_value);\n  undefined4 intermediate_value_2 = FUNC_08000cec(intermediate_value_1,second_value);\n  undefined4 intermediate_value_3 = FUNC_08000cec(first_value,*(undefined4 *)pointer_to_value);\n  undefined4 final_value = FUNC_08000adc(intermediate_value_3,intermediate_value_2);\n  *(undefined4 *)pointer_to_value = final_value;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "decode_and_xor_08004434",
                "param_1": "key",
                "param_2": "size",
                "param_3": "buffer",
                "local_10": "local_value",
                "local_c": "modified_size",
                "uStack_8": "modified_buffer"
            },
            "code": "void decode_and_xor_08004434(uint8_t key, uint8_t* buffer, size_t size) {\n  uint16_t local_value = *(uint16_t*)DAT_08004454;\n  uint32_t modified_size = (size & 0xffff0000) | (uint32_t)local_value;\n  uint8_t *modified_buffer = buffer;\n  decode_and_xor_08004434_08004300(key, (uint8_t*)&local_value, 6);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_float_from_uint_08006c0c",
                "param_1": "x",
                "param_2": "y",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "iVar7": "temp7",
                "uVar8": "temp8",
                "uVar9": "temp9",
                "iVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar13": "result"
            },
            "code": "undefined8 calculate_float_from_uint_08006c0c(uint x, uint y)\n{\n  undefined4 temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  int temp7;\n  uint temp8;\n  uint temp9;\n  int temp10;\n  uint temp11;\n  uint temp12;\n  undefined8 result;\n  \n  if ((DAT_08006d60 & ~y) == 0) {\n    result = FUNC_080004d0(x, y, x, y);\n    result = FUNC_0800016c(x, y, (int)result, (int)((ulonglong)result >> 0x20));\n    return result;\n  }\n  if ((int)y < 1) {\n    if ((y & 0x7fffffff | x) == 0) {\n      return CONCAT44(y, x);\n    }\n    if (y != 0) {\n      result = FUNC_08000168(x, y, x, y);\n      temp1 = (undefined4)((ulonglong)result >> 0x20);\n      result = FUNC_08000724((int)result, temp1, (int)result, temp1);\n      return result;\n    }\n  }\n  temp3 = (int)y >> 0x14;\n  if (temp3 == 0) {\n    while (y == 0) {\n      temp3 = temp3 + -0x15;\n      y = x >> 0xb;\n      x = x << 0x15;\n    }\n    temp2 = 0;\n    for (; -1 < (int)(y << 0xb); y = y << 1) {\n      temp2 = temp2 + 1;\n    }\n    temp3 = temp3 - (temp2 - 1);\n    y = y | x >> (0x20 - temp2 & 0xff);\n    x = x << (temp2 & 0xff);\n  }\n  temp7 = 0;\n  temp2 = y & 0xfffff | 0x100000;\n  if ((temp3 + -0x3ff) * -0x80000000 < 0) {\n    temp2 = temp2 * 2 - ((int)x >> 0x1f);\n    x = x << 1;\n  }\n  temp2 = temp2 * 2 - ((int)x >> 0x1f);\n  temp4 = 0x16;\n  temp5 = 0;\n  temp8 = 0x200000;\n  x = x << 1;\n  do {\n    temp10 = temp5 + temp8;\n    if (temp10 <= (int)temp2) {\n      temp2 = temp2 - temp10;\n      temp5 = temp10 + temp8;\n      temp7 = temp7 + temp8;\n    }\n    temp4 = temp4 - 1;\n    temp2 = temp2 * 2 - ((int)x >> 0x1f);\n    temp8 = temp8 >> 1;\n    x = x << 1;\n  } while (temp4 != 0);\n  temp12 = 0x20;\n  temp9 = 0x80000000;\n  temp8 = temp4;\n  do {\n    temp11 = temp9 + temp8;\n    temp6 = temp5;\n    if (((int)temp5 < (int)temp2) || ((temp2 == temp5 && (temp11 <= x)))) {\n      temp8 = temp11 + temp9;\n      if (((int)temp11 < 0) && (-1 < (int)temp8)) {\n        temp6 = temp5 + 1;\n      }\n      temp2 = temp2 - temp5;\n      if (x < temp11) {\n        temp2 = temp2 - 1;\n      }\n      x = x - temp11;\n      temp4 = temp4 + temp9;\n    }\n    temp2 = temp2 * 2 - ((int)x >> 0x1f);\n    temp12 = temp12 - 1;\n    x = x << 1;\n    temp9 = temp9 >> 1;\n    temp5 = temp6;\n  } while (temp12 != 0);\n  if ((x | temp2) != 0) {\n    if (temp4 == 0xffffffff) {\n      temp7 = temp7 + 1;\n      temp4 = temp12;\n    }\n    else {\n      temp4 = temp4 + 1 & 0xfffffffe;\n    }\n  }\n  temp4 = temp4 >> 1;\n  if (temp7 << 0x1f < 0) {\n    temp4 = temp4 | 0x80000000;\n  }\n  return CONCAT44((temp7 >> 1) + 0x3fe00000 + (temp3 + -0x3ff >> 1) * 0x100000, temp4);\n}",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08006228",
                "FUN_08005c70",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "calculate_float_from_uint_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "set_parameters_0800426c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "puVar1": "ptr",
                "puVar2": "ptr2",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "result3",
                "uVar6": "int_result1",
                "uVar7": "int_result2",
                "uVar8": "int_result3",
                "uVar9": "int_result4"
            },
            "code": "void set_parameters_0800426c(uint32_t param1, uint32_t param2, uint32_t param3, uint32_t param4) {\n  uint32_t result1 = FUNC_08000ad8();\n  uint32_t result2 = FUNC_08000adc(param1, param2);\n  uint32_t result3 = FUNC_08000ad8(result1, param3);\n  uint32_t result4 = FUNC_08000adc(result3, param4);\n  FUNC_08000ad8(result4, DAT_080042fc);\n  uint32_t int_result1 = convert_to_int32_08001078();\n  uint32_t result5 = FUNC_08000ad8(result2, param3);\n  uint32_t result6 = FUNC_08000ad8(result5, param4);\n  FUNC_08000ad8(result6, DAT_080042fc);\n  uint32_t int_result2 = convert_to_int32_08001078();\n  uint32_t result7 = FUNC_08000adc(result1, param3);\n  uint32_t result8 = FUNC_08000ad8(result7, param4);\n  FUNC_08000ad8(result8, DAT_080042fc);\n  uint32_t int_result3 = convert_to_int32_08001078();\n  uint32_t result9 = FUNC_08000adc(param3, result2);\n  uint32_t result10 = FUNC_08000adc(result9, param4);\n  FUNC_08000ad8(result10, DAT_080042fc);\n  uint32_t int_result4 = convert_to_int32_08001078();\n  uint32_t *ptr = PTR_DAT_08004264;\n  uint32_t max_val = 1000;\n  if (int_result4 > 999) {\n    int_result4 = max_val;\n  }\n  if (int_result3 > 999) {\n    int_result3 = max_val;\n  }\n  if (int_result2 > 999) {\n    int_result2 = max_val;\n  }\n  if (int_result1 > 999) {\n    int_result1 = max_val;\n  }\n  *(ptr + 2) = int_result2 & ~((int)int_result2 >> 0x1f);\n  *(ptr + 3) = int_result1 & ~((int)int_result1 >> 0x1f);\n  *(ptr + 1) = int_result3 & ~((int)int_result3 >> 0x1f);\n  *ptr = int_result4 & ~((int)int_result4 >> 0x1f);\n  set_param_in_memory_08003fc4();\n  set_param_in_global_08003fd0(*(uint32_t *)(ptr + 1));\n  set_parameter_in_memory_08003fdc(*(uint32_t *)(ptr + 2));\n  set_param_08003fe8(*(uint32_t *)(ptr + 3));\n  uint16_t *ptr2 = PTR_DAT_08004268;\n  *(ptr2) = *(uint32_t *)ptr + max_val;\n  *(ptr2 + 1) = *(uint32_t *)(ptr + 1) + max_val;\n  *(ptr2 + 2) = *(uint32_t *)(ptr + 2) + max_val;\n  *(ptr2 + 3) = *(uint32_t *)(ptr + 3) + max_val;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08003fdc",
                "FUN_08003fd0",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fe8",
                "FUN_08001078"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "set_parameters_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "set_bit_in_uint32_at_offset_08002538",
                "param_1": "uint32_ptr_ptr",
                "param_2": "bit_offset",
                "puVar1": "uint32_ptr_1",
                "puVar2": "uint32_ptr_2",
                "DAT_08002560": "ptr_dat_08002560"
            },
            "code": "uint32_t set_bit_in_uint32_at_offset_08002538(uint32_t **uint32_ptr_ptr, uint32_t bit_offset)\n{\n  uint32_t *uint32_ptr_1;\n  uint32_t *uint32_ptr_2;\n  update_bit_in_uint_at_offset(*uint32_ptr_ptr, bit_offset, 1);\n  uint32_ptr_2 = *uint32_ptr_ptr;\n  uint32_ptr_1 = DAT_08002560;\n  if (uint32_ptr_2 == DAT_08002560) {\n    uint32_ptr_1 = (uint32_t *)(uint32_ptr_2[0x11] | 0x8000);\n  }\n  if (uint32_ptr_2 == DAT_08002560) {\n    uint32_ptr_2[0x11] = (uint32_t)uint32_ptr_1;\n  }\n  *uint32_ptr_2 = *uint32_ptr_2 | 1;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "set_bit_in_uint32_at_offset_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "decode_strings_in_loop_080040e8",
                "param_1": "buffer",
                "param_2": "offset",
                "param_3": "length",
                "param_4": "increment",
                "puVar1": "source",
                "uVar2": "decoded_char",
                "iVar3": "i",
                "puVar4": "dest",
                "iVar5": "counter"
            },
            "code": "void decode_strings_in_loop_080040e8(void* buffer, int offset, int length, int increment){\n  undefined* source = PTR_s____Src_i2c_c_08004118;\n  undefined* dest = (undefined*)(length + offset - 1);\n  int counter = increment;\n  for (int i = 0; i < increment; i++){\n    undefined decoded_char = set_params_and_decode_strings_in_loop_080040e8_08004490_0800407c(buffer, (offset + i) & 0xffff, source, 0x4c, counter);\n    dest++;\n    *dest = decoded_char;\n  }\n  return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002b48",
                "FUN_08002cb0",
                "FUN_08002bf0",
                "FUN_08002d88",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "decode_strings_in_loop_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "clear_string_08004ffc",
                "param_1": "str",
                "param_2": "len",
                "param_3": "max_len",
                "param_4": "arg_4",
                "local_78": "local_str",
                "local_70": "var_1",
                "local_6c": "local_max_len",
                "local_6a": "var_3",
                "local_68": "local_ptr",
                "local_64": "var_2",
                "uStack_c": "unused_1",
                "uStack_8": "unused_2",
                "uStack_4": "unused_3"
            },
            "code": "void clear_string_08004ffc(char* str, int len, int max_len, int arg_4)\n{\n    char* local_str[2];\n    int local_max_len = max_len;\n    short local_len = len;\n    short local_arg_4 = arg_4;\n    char* local_ptr = str;\n    int var_1 = 0x7fffffff;\n    int var_2 = 0x7fffffff;\n    short var_3 = 0xffff;\n    local_str[0] = str;\n    FUNC_080050fc(*(int*)PTR_PTR_DAT_08005040, local_str, arg_4);\n    *local_str[0] = 0;\n    return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "clear_string_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_value_from_pointer_0800115c",
                "PTR_DAT_08001164": "PTR_DATA"
            },
            "code": "int get_value_from_pointer_0800115c() {\n    return *(int *)PTR_DAT_08001164;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_080016f4",
                "FUN_0800209c",
                "FUN_08001b58",
                "FUN_08001460",
                "FUN_08001828",
                "FUN_08004c18",
                "thunk_FUN_0800115c",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "decode_and_hash_mpu9250_data_08002d88",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "sVar1": "first_half",
                "sVar2": "second_half",
                "puVar3": "src_ptr",
                "puVar4": "hash_ptr_1",
                "puVar5": "hash_ptr_2",
                "puVar6": "hash_ptr_3",
                "iVar7": "set_params_and_decode_result",
                "uVar8": "hash_result_1",
                "uVar9": "hash_result_2",
                "local_28": "local_var_28",
                "uStack_26": "first_byte_stack",
                "uStack_25": "second_byte_stack",
                "local_24": "local_var_24",
                "local_23": "local_var_23",
                "local_22": "local_var_22",
                "uStack_21": "third_byte_stack"
            },
            "code": "void decode_and_hash_mpu9250_data_08002d88(int param_1,int param_2,int param_3,int param_4)\n{\n  short first_half;\n  short second_half;\n  undefined *src_ptr;\n  undefined *hash_ptr_1;\n  undefined *hash_ptr_2;\n  undefined *hash_ptr_3;\n  int set_params_and_decode_result;\n  undefined4 hash_result_1;\n  undefined4 hash_result_2;\n  undefined4 hash_result_3;\n  undefined2 local_var_28;\n  undefined first_byte_stack;\n  undefined second_byte_stack;\n  undefined local_var_24;\n  undefined local_var_23;\n  byte local_var_22;\n  undefined third_byte_stack;\n  src_ptr = PTR_s____Src_MPU9250_c_08002e80;\n  third_byte_stack = (undefined)((uint)param_4 >> 0x18);\n  local_var_28 = 0;\n  first_byte_stack = 0;\n  second_byte_stack = 0;\n  local_var_24 = 0;\n  local_var_23 = 0;\n  local_var_22 = 0;\n  set_params_and_decode_result = set_params_and_decode_strings_in_loop_08004490_0800407c(0x18,2,PTR_s____Src_MPU9250_c_08002e80,0xd7,param_1,param_2);\n  if (set_params_and_decode_result << 0x1f < 0) {\n    decode_strings_in_loop_080040e8(0x18,3,&local_var_28,7,src_ptr,0xda);\n    src_ptr = PTR_DAT_08002e84;\n    if ((int)((uint)local_var_22 << 0x1c) < 0) {\n      *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n    }\n    else {\n      first_half = CONCAT11(second_byte_stack,first_byte_stack);\n      second_half = CONCAT11(local_var_23,local_var_24);\n      *(undefined2 *)PTR_DAT_08002e84 = local_var_28;\n      *(short *)(src_ptr + 2) = first_half;\n      *(short *)(src_ptr + 4) = second_half;\n      hash_ptr_3 = PTR_DAT_08002e9c;\n      hash_ptr_2 = PTR_DAT_08002e98;\n      hash_result_1 = *(undefined4 *)PTR_DAT_08002e88;\n      hash_result_2 = calculate_hash_08000c44();\n      hash_result_2 = FUNC_08000cec(hash_result_2,hash_result_1);\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)hash_ptr_2);\n      hash_result_2 = FUNC_08000ad8(hash_result_2,*(undefined4 *)hash_ptr_3);\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)PTR_DAT_08002e8c);\n      hash_ptr_1 = PTR_DAT_08002e90;\n      *(undefined4 *)PTR_DAT_08002e90 = hash_result_2;\n      hash_result_2 = calculate_hash_08000c44((int)first_half);\n      hash_result_2 = FUNC_08000cec(hash_result_2,hash_result_1);\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)(hash_ptr_2 + 4));\n      hash_result_2 = FUNC_08000ad8(hash_result_2,*(undefined4 *)(hash_ptr_3 + 4));\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)(PTR_DAT_08002e8c + 4));\n      *(undefined4 *)(hash_ptr_1 + 4) = hash_result_2;\n      hash_result_2 = calculate_hash_08000c44((int)second_half);\n      hash_result_2 = FUNC_08000cec(hash_result_2,hash_result_1);\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)(hash_ptr_2 + 8));\n      hash_result_2 = FUNC_08000ad8(hash_result_2,*(undefined4 *)(hash_ptr_3 + 8));\n      hash_result_2 = FUNC_08000cec(hash_result_2,*(undefined4 *)(PTR_DAT_08002e8c + 8));\n      *(undefined4 *)(hash_ptr_1 + 8) = hash_result_2;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_0800407c",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "decode_and_hash_mpu9250_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_hash_08000c44",
                "param_1": "input",
                "uVar2": "shift_amount",
                "uVar3": "hash",
                "iVar1": "leading_zeroes",
                "iVar4": "sign_and_mask",
                "uVar5": "carry",
                "count_leading_zeroes": "count_leading_zeroes",
                "0x80000000": "0x80000000",
                "0x4b000000": "0x4b000000",
                "0x800000": "0x800000",
                "0xff": "0xff",
                "0x7fffffff": "0x7fffffff",
                "0xfffffffe": "0xfffffffe"
            },
            "code": "uint calculate_hash_08000c44(uint number) {\n  uint count = 0;\n  while (number) {\n    count++;\n    number >>= 1;\n  }\n  return 32 - count;\n}\n\nuint calculate_hash_08000c44(uint input) {\n  uint sign_bit = input & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  uint leading_zeroes = calculate_hash_08000c44(input);\n  uint shift_amount = leading_zeroes - 8;\n  uint hash = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (leading_zeroes > 7) {\n    uint mask = 0 << (shift_amount & 0xff);\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_zeroes = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < mask);\n    hash += shifted_input + shifted_zeroes + carry;\n    if (mask == 0x80000000) {\n      hash = hash & 0xfffffffe;\n    }\n    return hash;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_hash = ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_hash = shifted_hash & ~(shifted_input >> 0x1f);\n  }\n  return hash + shifted_hash;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002b48",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "code": "int is_valid_input_08000a04(uint32_t input1, int input2, uint32_t input3, int input4) {\n  int is_input2_valid = (((input2 << 1) >> 0x15) != -1) || ((input1 | (input2 << 0xc)) == 0);\n  int is_input4_valid = (((input4 << 1) >> 0x15) != -1) || ((input3 | (input4 << 0xc)) == 0);\n  if (is_input2_valid && is_input4_valid) {\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "values",
                "iVar1": "first_value",
                "iVar2": "quotient",
                "uVar3": "mask",
                "iVar4": "remainder",
                "iVar5": "second_value",
                "iVar6": "current_value"
            },
            "code": "void update_values_080025e8(int *values)\n{\n  int current_value = *values;\n  uint mask = values[4];\n  *(uint *)(current_value + 0x10) = *(uint *)(current_value + 0x10) & 0xffffcfff | values[3];\n  *(uint *)(current_value + 0xc) = values[2] | mask | values[5] | *(uint *)(current_value + 0xc) & 0xffffe9f3;\n  *(uint *)(current_value + 0x14) = *(uint *)(current_value + 0x14) & 0xfffffcff | values[6];\n  if (current_value == PTR_DAT_08002720) {\n    int first_value = FUNC_08002250();\n    int second_value = FUNC_08002250();\n    int third_value = FUNC_08002250();\n    int quotient = (uint)(first_value * 0x19) / (uint)(values[1] << 2);\n    int remainder = (int)(((ulonglong)(uint)(second_value * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100) * -100;\n    uint result = (uint)(third_value * 0x19) / (uint)(values[1] << 2);\n  }\n  else {\n    int first_value = count_leading_zeroes_of_0xe00000_08002220();\n    int second_value = count_leading_zeroes_of_0xe00000_08002220();\n    int third_value = count_leading_zeroes_of_0xe00000_08002220();\n    int quotient = (uint)(first_value * 0x19) / (uint)(values[1] << 2);\n    int remainder = (int)(((ulonglong)(uint)(second_value * 0x19) / (ulonglong)(uint)(values[1] << 2)) / 100) * -100;\n    uint result = (uint)(third_value * 0x19) / (uint)(values[1] << 2);\n  }\n  *(uint *)(current_value + 8) = (((result + remainder) * 0x10 + 0x32) / 100 & 0xf | (quotient * 0x10 + 0x32U) / 100 & 0xf0) + quotient * 0x10;\n  return;\n}",
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "decode_and_hash_strings_08002b48_08002b48",
                "in_r3": "input3",
                "local_18": "input1",
                "local_14": "input4",
                "PTR_s____Src_MPU9250_c_08002be4": "ptr1",
                "PTR_DAT_08002bec": "ptr2",
                "PTR_DAT_08002be8": "ptr3",
                "calculate_hash_08000c44": "calculate_hash",
                "FUNC_08000cec": "apply_hash_function"
            },
            "code": "void decode_and_hash_strings_08002b48_08002b48(void)\n{\n    uint32_t hash1 = 0;\n    uint32_t hash2 = 0;\n    uint32_t hash3 = 0;\n    uint32_t input1 = 0xd0;\n    uint32_t input2 = 0x3b;\n    uint32_t input3 = 0x58;\n    uint32_t *PTR_s____Src_MPU9250_c_08002be4 = (uint32_t *)PTR_s____Src_MPU9250_c_08002be4;\n    uint32_t *PTR_DAT_08002bec = (uint32_t *)PTR_DAT_08002bec;\n    uint16_t input4 = (uint16_t)(in_r3 & 0xffff0000);\n    uint8_t *PTR_DAT_08002be8 = PTR_DAT_08002be8;\n    hash1 = calculate_hash_08000c44();\n    hash1 = FUNC_08000cec(hash1, 0x40800000);\n    hash1 = FUNC_08000cec(hash1, 0x38000000);\n    hash2 = calculate_hash_08000c44(input1);\n    hash2 = FUNC_08000cec(hash2, 0x40800000);\n    hash2 = FUNC_08000cec(hash2, 0x38000000);\n    hash3 = calculate_hash_08000c44(input4);\n    hash3 = FUNC_08000cec(hash3, 0x40800000);\n    hash3 = FUNC_08000cec(hash3, 0x38000000);\n    *(uint16_t *)PTR_DAT_08002be8 = (input4 & 0xFF) << 8 | (input4 >> 8);\n    *(uint16_t *)(PTR_DAT_08002be8 + 2) = input1;\n    *(uint32_t *)(PTR_DAT_08002be8 + 4) = input2;\n    *PTR_DAT_08002bec = hash1;\n    *(PTR_DAT_08002bec + 1) = hash2;\n    *(PTR_DAT_08002bec + 2) = hash3;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "decode_and_hash_strings_08002b48_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_data_and_clear_memory_08004f68",
                "iVar1": "i",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void copy_data_and_clear_memory_08004f68(void)\n{\n  int i;\n  undefined4 *data_ptr;\n  code *jump_table;\n  for (i = 0; PTR_DAT_08004fa0 + i < PTR_DAT_08004fa4; i += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + i) = *(undefined4 *)(DAT_08004f9c + i);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08004fa8; data_ptr < PTR_DAT_08004fac; data_ptr++) {\n    *data_ptr = 0;\n  }\n  set_bit_and_mask();\n  execute_functions();\n  jump_table = (code *)0x8004f9a;\n  process_sensor_data();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_080041ae",
                "FUN_08004f10",
                "FUN_08004fb4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_clear_memory_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "update_data_08001170",
                "param_1": "data_value",
                "DAT_08001190": "data_start_address",
                "PTR_08001190": "pointer_to_data_start_address"
            },
            "code": "void update_data_08001170(uint8_t data_value) {\n    uint32_t* data_ptr = (uint32_t*)(DAT_08001190 + 0xc);\n    uint32_t mask = 0xf8ff;\n    uint32_t data_mask = 0x5fa0000;\n    uint32_t masked_data_value = (data_value & 7) << 8;\n    *data_ptr = (*data_ptr & mask) | data_mask | masked_data_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "update_data_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "decode_and_calculate_hash_08002bf0_08002bf0",
                "local_20": "hash_input_1",
                "local_1c": "hash_input_2",
                "uVar3": "hash_result",
                "PTR_DAT_08002ca0": "hash_output_1",
                "PTR_DAT_08002cac": "hash_output_2"
            },
            "code": "void decode_and_calculate_hash_08002bf0_08002bf0(void)\n{\n    uint16_t hash_input_1 = 0;\n    uint16_t hash_input_2 = 0;\n    uint32_t hash_result;\n    uint32_t* PTR_DAT_08002ca0 = PTR_DAT_08002cac;\n    uint32_t* PTR_DAT_08002cac = PTR_DAT_08002cac + 4;\n\n    decode_strings_in_loop_080040e8(0xd0, 0x43, &hash_input_1, 6, PTR_s____Src_MPU9250_c_08002c9c, 0x7b);\n\n    hash_input_2 = hash_input_1;\n    hash_input_2 <<= 8;\n    hash_input_2 |= hash_input_1 >> 8;\n\n    hash_result = calculate_hash_08000c44();\n    hash_result = FUNC_08000cec(hash_result, DAT_08002ca8);\n    hash_result = FUNC_08000cec(hash_result, 0x38000000);\n    hash_result = FUNC_08000ad8(hash_result, *(uint32_t*)PTR_DAT_08002ca0);\n    *PTR_DAT_08002ca0 = hash_result;\n\n    hash_result = calculate_hash_08000c44(hash_input_2);\n    hash_result = FUNC_08000cec(hash_result, DAT_08002ca8);\n    hash_result = FUNC_08000cec(hash_result, 0x38000000);\n    hash_result = FUNC_08000ad8(hash_result, *(uint32_t*)(PTR_DAT_08002ca0 + 4));\n    *PTR_DAT_08002cac = hash_result;\n\n    hash_result = calculate_hash_08000c44((uint8_t)hash_input_1);\n    hash_result = FUNC_08000cec(hash_result, DAT_08002ca8);\n    hash_result = FUNC_08000cec(hash_result, 0x38000000);\n    hash_result = FUNC_08000ad8(hash_result, *(uint32_t*)(PTR_DAT_08002ca0 + 8));\n    *(PTR_DAT_08002cac + 1) = hash_result;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "decode_and_calculate_hash_08002bf0_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "set_and_decode_params_loop_08002ad0",
                "param1": "param1",
                "param2": "param2",
                "src": "src",
                "param3": "param3",
                "set_params_and_decode_strings_in_loop_08004490_0800407c": "set_params_and_decode_strings_in_loop",
                "process_and_decode_data_0800403c": "process_and_decode_data"
            },
            "code": "void set_and_decode_params_loop_08002ad0(uint8_t param1, uint8_t param2, const char* src, uint8_t param3)\n{\n  set_params_and_decode_strings_in_loop_08004490_0800407c(param1, param2, src, param3);\n  process_and_decode_data_0800403c(param1, 0x6b, 0x80, 1);\n  process_and_decode_data_0800403c(param1, 0x6b, 1);\n  process_and_decode_data_0800403c(param1, 0x6c, 0, 1);\n  process_and_decode_data_0800403c(param1, 0x19, 0, 1);\n  process_and_decode_data_0800403c(param1, 0x1d, 3, 1);\n  process_and_decode_data_0800403c(param1, 0x1a, 3, 1);\n  process_and_decode_data_0800403c(param1, 0x1b, 0x10, 1);\n  process_and_decode_data_0800403c(param1, 0x1c, 8, 1);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_and_decode_params_loop_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_concatenated_bits_08001050",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "code": "bool check_concatenated_bits_08001050(void)\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  concatenate_44_bits_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "check_concatenated_bits_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "is_params_valid_080009c8",
                "in_ZR": "zero_register",
                "in_CY": "carry_register",
                "validate_params_08000990": "validate_parameters"
            },
            "code": "bool is_params_valid_080009c8(void)\n{\n  undefined zero_register;\n  undefined carry_register;\n  validate_params_08000990();\n  return !(bool)carry_register || (bool)zero_register;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "is_params_valid_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_average_08002ed4",
                "puVar1": "data_ptr",
                "uVar2": "result1",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "code": "void calculate_average_08002ed4(void)\n{\n    undefined *data_ptr = PTR_DAT_08002ee4;\n    undefined4 value1 = *(undefined4 *)PTR_DAT_08002ee0;\n    undefined4 value2 = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n    undefined4 result1 = FUNC_08000ad8(0x3f800000, value2);\n    result1 = FUNC_08000cec(result1, value1);\n    value1 = FUNC_08000cec(value2, *(undefined4 *)data_ptr);\n    result1 = FUNC_08000adc(value1, result1);\n    *(undefined4 *)data_ptr = result1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_average_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "result_1",
                "uVar3": "result_2",
                "uVar4": "temp_result",
                "bVar1": "is_positive",
                "bVar5": "is_zero"
            },
            "code": "uint calculate_result_08000f9c(uint input_1, uint input_2)\n{\n    bool is_negative_1 = ((int)input_1 >> 0x18 == -1);\n    bool is_negative_2 = ((int)input_2 >> 0x18 == -1);\n    uint result_1 = input_1 * 2;\n    uint result_2 = input_2 * 2;\n    if ((is_negative_1 || is_negative_2) && ((is_negative_1 && ((input_1 & 0x7fffff) != 0)) || (is_negative_2 && ((input_2 & 0x7fffff) != 0)))) {\n        return 1;\n    }\n    uint temp_result = result_1 | input_2 & 0x7fffffff;\n    bool is_zero = (temp_result == 0);\n    if (!is_zero) {\n        temp_result = input_1 ^ input_2;\n        is_zero = (temp_result == 0);\n    }\n    bool is_positive = (-1 < (int)temp_result);\n    if (is_positive) {\n        input_1 = result_1 + input_2 * -2;\n        is_zero = (input_1 == 0);\n    }\n    if (is_positive && result_2 <= result_1 && !is_zero) {\n        input_1 = (int)input_2 >> 0x1f;\n    }\n    if (!is_positive || result_2 > result_1) {\n        input_1 = ~((int)input_2 >> 0x1f);\n    }\n    if (!is_zero) {\n        input_1 = input_1 | 1;\n    }\n    return input_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = calculate_float_from_uint_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = improved_function_name_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = is_input_null_080009f0_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = is_params_valid_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = calculate_result_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = shift_left_32_bits_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_08000168",
                "FUN_08000404",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080071c0",
                "FUN_080070a4",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input_val",
                "iVar1": "num_leading_zeros",
                "uVar2": "shift_amount",
                "iVar3": "constant",
                "uVar4": "carry",
                "shifted_input": "shifted_input",
                "shifted_zero": "shifted_zero",
                "result": "result"
            },
            "code": "uint calculate_hash_08000c3c(uint input_val)\n{\n  int num_leading_zeros = count_leading_zeroes(input_val);\n  int shift_amount = num_leading_zeros - 8;\n  int constant = shift_amount * -0x800000 + 0x4a800000;\n  if (num_leading_zeros > 7) {\n    uint shifted_input = input_val << (shift_amount & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_amount & 0xff);\n    uint carry = (uint)(0x7fffffff < shifted_zero);\n    uint result = constant + shifted_input + shifted_zero + carry;\n    if ((shifted_zero & 0x80000000) != 0) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input_val << (num_leading_zeros + 0x18U & 0xff);\n  uint shifted_constant = constant + ((input_val >> (0x20 - (num_leading_zeros + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  uint carry = (uint)((shifted_input & 0x7fffffff) == 0);\n  uint result = shifted_constant & ~(shifted_input >> 0x1f);\n  if (carry != 0) {\n    result = result & ~1U;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "decode_and_xor_080043bc",
                "uVar1": "value1",
                "uVar2": "value2",
                "puVar3": "output_ptr",
                "puVar4": "input_ptr",
                "local_24": "data",
                "local_1c": "unused",
                "PTR_DAT_080043ec": "data_ptr"
            },
            "code": "void decode_and_xor_080043bc(uint8_t key, uint32_t* data, size_t size) {\n  uint32_t* input_ptr = data;\n  uint32_t* output_ptr = data;\n  size_t i;\n  for (i = 0; i < size / 2; i++) {\n    uint32_t value1 = *input_ptr++;\n    uint32_t value2 = *input_ptr++;\n    *output_ptr++ = value1 ^ key;\n    *output_ptr++ = value2 ^ key;\n  }\n  if (size % 2 != 0) {\n    uint16_t value = *(uint16_t*)input_ptr;\n    *(uint16_t*)output_ptr = value ^ key;\n  }\n}\n",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "check_param_and_set_values_08001214",
                "param_1": "param",
                "iVar2": "data",
                "puVar1": "param_ptr"
            },
            "code": "int check_param_and_set_values_08001214(unsigned int param) {\n    unsigned int *param_ptr = DAT_08001238;\n    int data = DAT_0800123c;\n    if (param - 1U < 0x1000000) {\n        param_ptr[1] = param - 1U;\n        *(unsigned char *)(data + 0x23) = 240;\n        param_ptr[2] = 0;\n        *param_ptr = 7;\n        return 0;\n    }\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "check_param_and_set_values_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_param_in_memory_08003fc4",
                "param_1": "param",
                "PTR_DAT_08003fcc": "ptr_dat"
            },
            "code": "void set_param_in_memory_08003fc4(unsigned int param) {\n    int* ptr = *(int*)PTR_DAT_08003fcc;\n    int offset = 0x40;\n    *(ptr + offset) = param;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_param_in_memory_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "improved_function_name_08000404",
                "param_1": "input",
                "uVar1": "upper_bits",
                "uVar2": "result",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "temporary_variable",
                "uVar6": "sign_bit_mask",
                "in_r12": "unused_variable",
                "bVar7": "comparison_result_1",
                "bVar8": "comparison_result_2",
                "bVar9": "comparison_result_3"
            },
            "code": "unsigned long long improved_function_name_08000404(unsigned int num);\n\nunsigned long long improved_function_name_08000404(uint input)\n{\n    unsigned int sign_bit_mask = 0x80000000;\n    unsigned int absolute_value = input;\n    if((int)sign_bit_mask < 0) {\n        absolute_value = -input;\n    }\n    unsigned long long result = 0;\n    int leading_zeros = improved_function_name_08000404(absolute_value);\n    unsigned int shift_amount = leading_zeros + 0x15;\n    if(shift_amount < 0x20) {\n        shift_amount = shift_amount & 0xff;\n        result = absolute_value << shift_amount;\n        unsigned int remaining_shift = 0xc - leading_zeros;\n        if(remaining_shift > 0) {\n            result = result | (absolute_value >> remaining_shift);\n        }\n    }\n    else {\n        unsigned int remaining_shift = 0x20 - leading_zeros;\n        result = absolute_value << (leading_zeros & 0xff);\n        if(remaining_shift > 0) {\n            result = result | (0U >> (remaining_shift & 0xff));\n        }\n        if(remaining_shift > 0) {\n            result = result | (0 << (leading_zeros & 0xff));\n        }\n    }\n    if(shift_amount < 0x433) {\n        unsigned long long upper_bits = (unsigned long long)absolute_value | ((unsigned long long)sign_bit_mask << 32);\n        unsigned long long lower_bits = result + (0x432 - shift_amount) * 0x100000;\n        return upper_bits << 32 | lower_bits;\n    }\n    else {\n        unsigned int remaining_shift = ~(0x432 - shift_amount);\n        if(remaining_shift > 0x1e) {\n            return ((unsigned long long)input | ((unsigned long long)result >> (remaining_shift - 0x1f & 0xff))) & 0x80000000ffffffff;\n        }\n        else {\n            int shift_amount = remaining_shift - 0x13;\n            if(shift_amount == 0 || (shift_amount < 0) != ((remaining_shift - 0x1f) < 0xc)) {\n                remaining_shift = remaining_shift + 1;\n                unsigned long long upper_bits = (unsigned long long)sign_bit_mask | (result >> (remaining_shift & 0xff));\n                unsigned long long lower_bits = result << (0x20 - remaining_shift & 0xff) | (result >> (0xcU - shift_amount & 0xff));\n                return upper_bits << 32 | lower_bits;\n            }\n            else {\n                unsigned long long upper_bits = (unsigned long long)input | ((unsigned long long)result >> (0x20 - (0xcU - shift_amount) & 0xff));\n                unsigned long long lower_bits = result << (0xcU - shift_amount & 0xff);\n                return upper_bits << 32 | lower_bits;\n            }\n        }\n    }\n}\n\nunsigned long long improved_function_name_08000404(unsigned int num)\n{\n    unsigned long long count = 0;\n    while(num > 0) {\n        num = num >> 1;\n        count++;\n    }\n    return 32 - count;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "improved_function_name_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "process_data_0800209c",
                "param_1": "data",
                "param_2": "length",
                "cVar1": "char_1",
                "cVar2": "char_2",
                "puVar3": "dat_08002204",
                "iVar4": "int_1",
                "iVar5": "int_2",
                "uVar6": "value",
                "uVar7": "second_value"
            },
            "code": "uint32_t process_data_0800209c(uint32_t *data, uint32_t length)\n{\n    uint32_t *dat_08002204 = DAT_08002204;\n    uint32_t *dat_08002208 = DAT_08002208;\n    uint32_t value = data[0];\n    uint32_t leading_zeroes;\n    uint32_t result;\n\n    if (length <= (*dat_08002204 & 7) || (*dat_08002204 = *dat_08002204 & 0xfffffff8 | length, length == (*dat_08002204 & 7))) {\n        if ((int32_t)(value << 0x1e) < 0) {\n            dat_08002208[1] = dat_08002208[1] & 0xffffff0f | data[2];\n        }\n        if (-1 < (int32_t)(value << 0x1f)) {\n            if (length < (*dat_08002204 & 7) && (*dat_08002204 = *dat_08002204 & 0xfffffff8 | length, length != (*dat_08002204 & 7))) {\n                return 1;\n            }\n            if ((value & 4) != 0) {\n                dat_08002208[1] = dat_08002208[1] & 0xfffff8ff | data[3];\n            }\n            if ((int32_t)(value << 0x1c) < 0) {\n                dat_08002208[1] = dat_08002208[1] & 0xffffc7ff | data[4] << 3;\n            }\n            result = calculate_value();\n            leading_zeroes = count_leading_zeroes(0xf000000);\n            *(uint32_t *)PTR_DAT_08002210 = result >> PTR_DAT_0800220c[(dat_08002208[1] & 0xf0) >> (leading_zeroes & 0xff)];\n            calculate_and_encode_data(0);\n            return 0;\n        }\n        uint32_t second_value = data[1];\n        if (second_value == 1) {\n            leading_zeroes = count_leading_zeroes(0x4000000);\n            dat_08002208[1] = dat_08002208[1] & 0xfffffffc | second_value;\n            result = get_value_from_pointer((int32_t)(value << 0x1f), (*dat_08002208 >> (leading_zeroes & 0x1f)) << 0x1f);\n            do {\n                if ((dat_08002204[1] & 0xc) == 4) {\n                    return 0;\n                }\n                leading_zeroes = get_value_from_pointer();\n            } while ((uint32_t)(leading_zeroes - result) < 0x1389);\n            return 3;\n        }\n        else {\n            if (second_value == 2) {\n                leading_zeroes = count_leading_zeroes(0x1000000);\n                dat_08002208[1] = dat_08002208[1] & 0xfffffffc | second_value;\n                result = get_value_from_pointer((int32_t)(value << 0x1f), (*dat_08002208 >> (leading_zeroes & 0x1f)) << 0x1f);\n                do {\n                    if ((dat_08002204[1] & 0xc) == 8) {\n                        return 0;\n                    }\n                    leading_zeroes = get_value_from_pointer();\n                } while ((uint32_t)(leading_zeroes - result) < 0x1389);\n                return 3;\n            }\n            else {\n                leading_zeroes = count_leading_zeroes(0x400000);\n                dat_08002208[1] = dat_08002208[1] & 0xfffffffc | second_value;\n                result = get_value_from_pointer((int32_t)(value << 0x1f), (*dat_08002208 >> (leading_zeroes & 0x1f)) << 0x1f);\n                do {\n                    if ((dat_08002204[1] & 0xc) == 0) {\n                        return 0;\n                    }\n                    leading_zeroes = get_value_from_pointer();\n                } while ((uint32_t)(leading_zeroes - result) < 0x1389);\n                return 3;\n            }\n        }\n    }\n    return 1;\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08002008",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "process_data_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "process_and_decode_data_0800403c",
                "param_1": "data_param_1",
                "param_2": "data_param_2",
                "param_3": "data_param_3",
                "param_4": "flag_param_4",
                "iVar1": "process_data_result",
                "local_14": "local_buffer",
                "process_data_08001828": "process_data",
                "set_params_and_decode_strings_in_loop_08004490": "set_params_and_decode_strings_in_loop",
                "PTR_DAT_08004074": "PTR_DAT_data",
                "PTR_s____Src_i2c_c_08004078": "PTR_s____Src_i2c_c",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void process_and_decode_data_0800403c(undefined4 data_param_1, undefined4 data_param_2, undefined data_param_3, int flag_param_4) {\n  int process_data_08001828_result;\n  undefined local_buffer[8];\n  local_buffer[0] = data_param_3;\n  process_data_08001828_result = process_data_08001828(PTR_DAT_08004074, data_param_1, data_param_2, 1, local_buffer, 1, 200);\n  if (process_data_08001828_result != 0) {\n    set_params_and_decode_strings_in_loop(PTR_s____Src_i2c_c_08004078_08004078, 0x1b);\n  }\n  if (flag_param_4 != 0) {\n    thunk_do_nothing_08001168(0x32);\n  }\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ad0",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "process_and_decode_data_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002b48",
                "FUN_08004a30",
                "FUN_08002cb0",
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "iVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "result_1",
                "uVar6": "result_2",
                "uVar7": "temp_5",
                "uVar8": "temp_6"
            },
            "code": "ulonglong calculate_result_08006070(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  int temp_3;\n  uint temp_4;\n  ulonglong result_1;\n  ulonglong result_2;\n  undefined8 temp_5;\n  undefined8 temp_6;\n  result_2 = CONCAT44(DAT_08006214,DAT_08006210);\n  result_1 = CONCAT44(DAT_08006204,DAT_08006200);\n  temp_4 = input_4 & 0x7fffffff;\n  if ((DAT_08006220 < (temp_4 | (-input_3 | input_3) >> 0x1f)) || (temp_2 = input_2 & 0x7fffffff, DAT_08006220 < (temp_2 | (-input_1 | input_1) >> 0x1f))) {\n    result_1 = calculate_result_08006070_helper(input_1, input_2, input_3, input_4, input_4);\n    return result_1;\n  }\n  if ((input_4 + 0xc0100000 | input_3) == 0) {\n    result_1 = FUNC_08006d68();\n    return result_1;\n  }\n  temp_1 = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n  if ((input_1 | temp_2) == 0) {\n    if (temp_1 == 2) {\n      return CONCAT44(DAT_080061fc,DAT_080061f8);\n    }\n    if (temp_1 != 3) {\n      return CONCAT44(input_2,input_1);\n    }\n  }\n  else {\n    if ((input_3 | temp_4) != 0) {\n      if (temp_4 == DAT_08006220) {\n        if (temp_2 == temp_4) {\n          if (temp_1 == 2) {\n            return CONCAT44(DAT_080061ec,DAT_080061e8);\n          }\n          if (temp_1 == 3) {\n            return CONCAT44(DAT_080061f4,DAT_080061f0);\n          }\n          if (temp_1 != 1) {\n            return CONCAT44(DAT_0800621c,DAT_08006218);\n          }\n          return CONCAT44(DAT_080061e4,DAT_080061e0);\n        }\n        if (temp_1 == 2) {\n          return CONCAT44(DAT_080061fc,DAT_080061f8);\n        }\n        if (temp_1 == 3) {\n          return result_1;\n        }\n        if (temp_1 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (temp_2 != DAT_08006220) {\n        temp_3 = (int)(temp_2 - temp_4) >> 0x14;\n        if (temp_3 < 0x3d) {\n          if (((int)input_4 < 0) && (temp_3 + 0x3c < 0 != SCARRY4(temp_3,0x3c))) {\n            result_2 = 0;\n          }\n          else {\n            calculate_result_08006070_helper_2(input_1,input_2);\n            do_nothing_0800708c();\n            result_2 = FUNC_08006d68();\n          }\n        }\n        temp_3 = (int)(result_2 >> 0x20);\n        if (temp_1 != 1) {\n          if (temp_1 == 2) {\n            temp_6 = FUNC_08000168((int)result_2,temp_3,DAT_08006208,DAT_0800620c);\n            temp_5 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          else {\n            if (temp_1 == 0) {\n              return result_2;\n            }\n            temp_5 = FUNC_08000168((int)result_2,temp_3,DAT_08006208,DAT_0800620c);\n            temp_6 = CONCAT44(DAT_080061fc,DAT_080061f8);\n          }\n          result_1 = FUNC_08000168((int)temp_5,(int)((ulonglong)temp_5 >> 0x20),(int)temp_6,(int)((ulonglong)temp_6 >> 0x20));\n          return result_1;\n        }\n        return result_2 & 0xffffffff | (ulonglong)(temp_3 + 0x80000000) << 0x20;\n      }\n    }\n    result_1 = result_2;\n    if ((int)input_2 < 0) {\n      result_1 = CONCAT44(DAT_080061dc,DAT_080061d8);\n    }\n  }\n  return result_1;\n}\n\nulonglong calculate_result_08006070_helper(uint input_1, uint input_2, uint input_3, uint input_4, uint param_5)\n{\n  return FUNC_0800016c(input_1,input_2,input_3,input_4,param_5);\n}\n\nvoid calculate_result_08006070_helper_2(uint input_1, uint input_2)\n{\n  FUNC_08000724(input_1,input_2);\n}",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "iVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "result_1",
                "uVar6": "result_2",
                "uVar7": "result_3",
                "uVar8": "result_4"
            },
            "code": "unsigned long long calculate_result_thunk_08006070(unsigned int param_1, unsigned int param_2, unsigned int param_3, unsigned int param_4)\n{\n    unsigned int temp_1;\n    unsigned int temp_2;\n    int temp_3;\n    unsigned int temp_4;\n    unsigned long long result_1;\n    unsigned long long result_2;\n    unsigned long long result_3;\n    unsigned long long result_4;\n\n    result_2 = ((unsigned long long)DAT_08006214 << 32) | DAT_08006210;\n    result_1 = ((unsigned long long)DAT_08006204 << 32) | DAT_08006200;\n    temp_4 = param_4 & 0x7fffffff;\n    if ((DAT_08006220 < (temp_4 | (-param_3 | param_3) >> 0x1f)) || (temp_2 = param_2 & 0x7fffffff, DAT_08006220 < (temp_2 | (-param_1 | param_1) >> 0x1f))) {\n        result_1 = FUNC_0800016c(param_1, param_2, param_3, param_4, param_4);\n        return result_1;\n    }\n    if ((param_4 + 0xc0100000 | param_3) == 0) {\n        result_1 = FUNC_08006d68();\n        return result_1;\n    }\n    temp_1 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n    if ((param_1 | temp_2) == 0) {\n        if (temp_1 == 2) {\n            return ((unsigned long long)DAT_080061fc << 32) | DAT_080061f8;\n        }\n        if (temp_1 != 3) {\n            return ((unsigned long long)param_2 << 32) | param_1;\n        }\n    }\n    else {\n        if ((param_3 | temp_4) != 0) {\n            if (temp_4 == DAT_08006220) {\n                if (temp_2 == temp_4) {\n                    if (temp_1 == 2) {\n                        return ((unsigned long long)DAT_080061ec << 32) | DAT_080061e8;\n                    }\n                    if (temp_1 == 3) {\n                        return ((unsigned long long)DAT_080061f4 << 32) | DAT_080061f0;\n                    }\n                    if (temp_1 != 1) {\n                        return ((unsigned long long)DAT_0800621c << 32) | DAT_08006218;\n                    }\n                    return ((unsigned long long)DAT_080061e4 << 32) | DAT_080061e0;\n                }\n                if (temp_1 == 2) {\n                    return ((unsigned long long)DAT_080061fc << 32) | DAT_080061f8;\n                }\n                if (temp_1 == 3) {\n                    return result_1;\n                }\n                if (temp_1 == 1) {\n                    return 0x8000000000000000;\n                }\n                return 0;\n            }\n            if (temp_2 != DAT_08006220) {\n                temp_3 = (int)(temp_2 - temp_4) >> 0x14;\n                if (temp_3 < 0x3d) {\n                    if (((int)param_4 < 0) && (temp_3 + 0x3c < 0 != SCARRY4(temp_3, 0x3c))) {\n                        result_2 = 0;\n                    }\n                    else {\n                        FUNC_08000724(param_1, param_2);\n                        do_nothing_0800708c();\n                        result_2 = FUNC_08006d68();\n                    }\n                }\n                temp_3 = (int)(result_2 >> 0x20);\n                if (temp_1 != 1) {\n                    if (temp_1 == 2) {\n                        result_4 = FUNC_08000168((int)result_2, temp_3, DAT_08006208, DAT_0800620c);\n                        result_3 = ((unsigned long long)DAT_080061fc << 32) | DAT_080061f8;\n                    }\n                    else {\n                        if (temp_1 == 0) {\n                            return result_2;\n                        }\n                        result_3 = FUNC_08000168((int)result_2, temp_3, DAT_08006208, DAT_0800620c);\n                        result_4 = ((unsigned long long)DAT_080061fc << 32) | DAT_080061f8;\n                    }\n                    result_1 = FUNC_08000168((int)result_3, (int)(result_3 >> 0x20), (int)result_4, (int)(result_4 >> 0x20));\n                    return result_1;\n                }\n                return result_2 & 0xffffffff | (unsigned long long)(temp_3 + 0x80000000) << 0x20;\n            }\n        }\n        result_1 = result_2;\n        if ((int)param_2 < 0) {\n            result_1 = ((unsigned long long)DAT_080061dc << 32) | DAT_080061d8;\n        }\n    }\n    return result_1;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "decode_and_clear_string_in_array_08004cac",
                "param_1": "length",
                "PTR_DAT_08004cc4": "string_array_start_ptr",
                "PTR_DAT_08004cc8": "string_array_end_ptr",
                "puVar1": "string_array_ptr",
                "clear_string_08004ffc": "clear_string",
                "decode_string_in_array_08004c8c": "decode_string_in_array"
            },
            "code": "void decode_and_clear_string_in_array_08004cac(undefined4 length)\n{\n  undefined *string_array_ptr;\n  string_array_ptr = PTR_DAT_08004cc4;\n  clear_string(PTR_DAT_08004cc4,PTR_DAT_08004cc8,length);\n  decode_string_in_array_08004c8c(string_array_ptr);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "decode_and_clear_string_in_array_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "decode_string_08004c18",
                "param_1": "input",
                "puVar1": "data_ptr",
                "iVar2": "loop_var1",
                "iVar3": "loop_var2",
                "uVar4": "data_byte",
                "puVar5": "string_ptr"
            },
            "code": "undefined4 decode_string_08004c18(undefined input) {\n    undefined *data_ptr;\n    int loop_var1;\n    int loop_var2;\n    undefined data_byte;\n    ushort *string_ptr;\n\n    string_ptr = (ushort *)PTR_DAT_08004c28;\n    *PTR_DAT_08004c28 = input;\n    data_ptr = PTR_DAT_08004c2c;\n    if ((PTR_DAT_08004c2c[0x39] == '\\x01') || (PTR_DAT_08004c2c[0x39] == '\"')) {\n        if (string_ptr == (ushort *)0x0) {\n            return 1;\n        }\n        if (PTR_DAT_08004c2c[0x38] != '\\x01') {\n            PTR_DAT_08004c2c[0x38] = 1;\n            *(undefined4 *)(data_ptr + 0x3c) = 0;\n            *(undefined2 *)(data_ptr + 0x24) = 1;\n            if (data_ptr[0x39] == '\"') {\n                data_byte = 0x32;\n            }\n            else {\n                data_byte = 0x12;\n            }\n            *(undefined2 *)(data_ptr + 0x26) = 1;\n            data_ptr[0x39] = data_byte;\n            while (true) {\n                if (*(short *)(data_ptr + 0x26) == 0) {\n                    loop_var1 = get_value_from_pointer_0800115c();\n                    do {\n                        if (**(int **)data_ptr << 0x19 < 0) {\n                            if (data_ptr[0x39] == '2') {\n                                data_byte = 0x22;\n                            }\n                            else {\n                                data_byte = 1;\n                            }\n                            data_ptr[0x39] = data_byte;\n                            data_ptr[0x38] = 0;\n                            return 0;\n                        }\n                        loop_var2 = get_value_from_pointer_0800115c();\n                    } while ((uint)(loop_var2 - loop_var1) < 6);\n                    loop_var1 = *(int *)data_ptr;\n                    *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffff7f;\n                    *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffffdf;\n                    *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xfffffeff;\n                    *(uint *)(loop_var1 + 0x14) = *(uint *)(loop_var1 + 0x14) & 0xfffffffe;\n                    data_ptr[0x39] = 1;\n                    data_ptr[0x38] = 0;\n                    return 3;\n                }\n                *(short *)(data_ptr + 0x26) = *(short *)(data_ptr + 0x26) + -1;\n                if (*(int *)(data_ptr + 8) == 0x1000) {\n                    loop_var1 = get_value_from_pointer_0800115c();\n                    while (-1 < **(int **)data_ptr << 0x18) {\n                        loop_var2 = get_value_from_pointer_0800115c();\n                        if (5 < (uint)(loop_var2 - loop_var1)) {\n                            loop_var1 = *(int **)data_ptr;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffff7f;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffffdf;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xfffffeff;\n                            *(uint *)(loop_var1 + 0x14) = *(uint *)(loop_var1 + 0x14) & 0xfffffffe;\n                            data_ptr[0x39] = 1;\n                            data_ptr[0x38] = 0;\n                            return 3;\n                        }\n                    }\n                    (*(int **)data_ptr)[1] = *string_ptr & 0x1ff;\n                    if (*(int *)(data_ptr + 0x10) == 0) {\n                        string_ptr = string_ptr + 1;\n                        goto LAB_080027c4;\n                    }\n                }\n                else {\n                    loop_var1 = get_value_from_pointer_0800115c();\n                    while (-1 < **(int **)data_ptr << 0x18) {\n                        loop_var2 = get_value_from_pointer_0800115c();\n                        if (5 < (uint)(loop_var2 - loop_var1)) {\n                            loop_var1 = *(int **)data_ptr;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffff7f;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xffffffdf;\n                            *(uint *)(loop_var1 + 0xc) = *(uint *)(loop_var1 + 0xc) & 0xfffffeff;\n                            *(uint *)(loop_var1 + 0x14) = *(uint *)(loop_var1 + 0x14) & 0xfffffffe;\n                            data_ptr[0x39] = 1;\n                            data_ptr[0x38] = 0;\n                            return 3;\n                        }\n                    }\n                    (*(int **)data_ptr)[1] = (uint)*(byte *)string_ptr;\n                }\n                string_ptr = (ushort *)((int)string_ptr + 1);\n            }\n        }\n    }\n    return 2;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004c8c",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "imported": false,
            "current_name": "decode_string_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "calculate_hash_0800483c",
                "param_1": "input",
                "uVar1": "hash_input_1",
                "uVar2": "hash_input_16",
                "iVar3": "is_end_of_string",
                "iVar4": "HASH_4",
                "iVar5": "input_length",
                "iVar6": "hash_input_7",
                "is_input_null_08001064_08001064": "is_input_null",
                "is_end_of_string_08001028": "is_end_of_string",
                "DAT_08004974": "HASH_1",
                "DAT_08004964": "HASH_2",
                "DAT_08004968": "HASH_3",
                "DAT_0800496c": "HASH_4",
                "DAT_08004970": "HASH_5"
            },
            "code": "void calculate_hash_0800483c(int *input)\n{\n    int input_length = input[0xc];\n    int hash_input_1 = FUNC_08000adc(input[7], input[9]);\n    int hash_input_2 = FUNC_08000ad8(hash_input_1, input_length);\n    input[10] = hash_input_2;\n    \n    if (*input == 3) {\n        int is_null = is_input_null_08001064_08001064(input[10], 0);\n        int is_end_of_string_08001028 = is_end_of_string(input[10], DAT_08004974);\n        if (is_null == 0) {\n            is_end_of_string = is_end_of_string(input[10], DAT_08004964);\n        }\n        if (is_end_of_string != 0) {\n            int hash_input_3 = FUNC_08000cec(input[10], DAT_08004968);\n            int is_null = is_input_null_08001064_08001064(input[10], 0);\n            int hash_input_4 = input[10];\n            if (is_null == 0) {\n                hash_input_4 = hash_input_4 + -0x80000000;\n            }\n            int hash_input_5 = FUNC_08000e54(hash_input_3, hash_input_4);\n            int hash_input_6 = FUNC_08000ad8(input[10], hash_input_5);\n            input[10] = hash_input_6;\n        }\n    }\n    \n    int hash_input_7 = FUNC_08000cec(input[1], input[10]);\n    input[0xe] = hash_input_7;\n    int hash_input_8 = FUNC_08000adc(input[10], input[0xf]);\n    input[0xf] = hash_input_8;\n    int is_end_of_string = is_end_of_string(input[0xf], DAT_0800496c);\n    int hash_input_9 = DAT_0800496c;\n    if ((is_end_of_string == 0) && (is_input_null_08001064_08001064(input[0xf], DAT_08004970) == 0)) {\n        hash_input_9 = input[0xf];\n    }\n    input[0xf] = hash_input_9;\n    int hash_input_10 = FUNC_08000ad8(input[0xc], input[0xd]);\n    input[0x10] = hash_input_10;\n    int hash_input_11 = FUNC_08000cec(input[2], input[0xf]);\n    hash_input_11 = FUNC_08000adc(hash_input_11, input[0xe]);\n    int hash_input_12 = FUNC_08000cec(input[3], input[0x10]);\n    int hash_input_13 = FUNC_08000ad8(hash_input_11, hash_input_12);\n    input[0x12] = hash_input_13;\n    int hash_input_14 = calculate_hash_0800483c_08000c44(input[0x13]);\n    is_end_of_string = is_end_of_string(input[0x12], DAT_0800496c);\n    int hash_input_15 = DAT_0800496c;\n    if ((is_end_of_string == 0) && (is_input_null_08001064_08001064(input[0x12], DAT_08004970) == 0)) {\n        hash_input_15 = input[0x12];\n    }\n    int hash_input_16 = FUNC_08000cec(hash_input_15, hash_input_14);\n    input[0x12] = hash_input_16;\n    input[0xd] = input[0xc];\n    input[0xb] = input[10];\n    input[0x15] = input[0x14];\n}\n",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08001064",
                "FUN_08000adc",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "decode_string_in_array_08004c8c",
                "param_1": "string_array",
                "uVar1": "end_of_string_index",
                "puVar2": "current_char_ptr",
                "find_end_of_string_08000150": "find_end_of_string",
                "decode_string_08004c18": "decode_string"
            },
            "code": "void decode_string_in_array_08004c8c(uint8_t *string_array){\n  uint end_of_string_index;\n  uint8_t *current_char_ptr;\n  current_char_ptr = string_array;\n  while( true ) {\n    end_of_string_index = find_end_of_string_08000150(*string_array);\n    if (end_of_string_index <= (uint)((int)current_char_ptr - (int)string_array)) break;\n    decode_string(*current_char_ptr);\n    current_char_ptr = current_char_ptr + 1;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "imported": false,
            "current_name": "decode_string_in_array_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_value_08001460",
                "param_1": "ptr_param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "iVar1": "start_value",
                "iVar2": "end_value",
                "uVar3": "value",
                "puVar4": "ptr_value",
                "*puVar4": "*ptr_value",
                "param_1[5]": "ptr_value[index + 5]",
                "puVar4[5]": "ptr_value[5]",
                "param_1[6]": "ptr_value[index + 6]",
                "puVar4[6]": "ptr_value[6]",
                "(param_2 << 8) >> 0x18": "index",
                "(param_2 & 0xffff & ~uVar3) == 0": "(param_2 & 0xffff & ~value) == 0",
                "(int)(puVar4[5] << 0x15) < 0": "(int32_t)(ptr_value[5] << 0x15) < 0",
                "*puVar4 |= 0x200": "*ptr_value |= 0x200",
                "puVar4[5] &= 0xfffffbff": "ptr_value[5] &= 0xfffffbff",
                "param_1[0xe]": "ptr_param_1[0xe]",
                "(uint *)0x4": "(uint32_t *)0x4",
                "*(undefined *)((int)param_1 + 0x35)": "*((uint8_t *)ptr_param_1 + 0x35)",
                "0x20": "32",
                "*(undefined *)(param_1 + 0xd)": "*(uint8_t *)(ptr_param_1 + 0xd)",
                "uint": "uint32_t",
                "int": "int32_t"
            },
            "code": "uint32_t check_value_08001460(uint32_t **ptr_param_1, uint32_t param_2, uint32_t param_3)\n{\n    int32_t start_value = get_value_from_pointer();\n    do {\n        uint32_t *ptr_value = *ptr_param_1;\n        uint32_t index = (param_2 << 8) >> 0x18;\n        uint32_t value = ptr_value[index + 5];\n        if ((param_2 & 0xffff & ~value) == 0) {\n            return 0;\n        }\n        if ((int32_t)(ptr_value[5] << 0x15) < 0) {\n            *ptr_value |= 0x200;\n            ptr_value[5] &= 0xfffffbff;\n            ptr_param_1[0xe] = (uint32_t *)0x4;\n            *((uint8_t *)ptr_param_1 + 0x35) = 0x20;\n            *(uint8_t *)(ptr_param_1 + 0xd) = 0;\n            return 1;\n        }\n    } while ((param_3 == 0xffffffff) || ((param_3 != 0 && (int32_t)(get_value_from_pointer() - start_value) <= param_3)));\n    *((uint8_t *)ptr_param_1 + 0x35) = 0x20;\n    *(uint8_t *)(ptr_param_1 + 0xd) = 0;\n    return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_value_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_input_null_08001064_08001064",
                "in_CY": "input_char"
            },
            "code": "bool is_input_null_08001064_08001064(void)\n{\n  char input_char;\n  concatenate_44_bits_08000ffc();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "is_input_null_08001064_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_param_in_global_08003fd0",
                "param_1": "param",
                "PTR_DAT_08003fd8": "PTR",
                "offset": "global_offset",
                "*(undefined4 *)(*(int *)PTR_DAT_08003fd8 + 0x3c)": "*(ptr + offset)",
                "undefined4": "int",
                "*(int*)": "int*",
                "*(ptr + offset)": "global_param"
            },
            "code": "void set_param_in_global_08003fd0(int param)\n{\n  int* ptr = *(int*)PTR_DAT_08003fd8_DAT_08003fd8;\n  int offset = 0x3c;\n  *(undefined4 *)(*(int *)PTR_DAT_08003fd8_DAT_08003fd8 + 0x3c) = param;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_param_in_global_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "temp_4",
                "uVar2": "mask",
                "uVar3": "temp_3",
                "in_r12": "temp_5",
                "bVar4": "is_zero_1"
            },
            "code": "ulonglong calculate_result_08000892(uint input_1, uint input_2, uint input_3, uint input_4) {\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  bool is_zero_1;\n  bool is_zero_2;\n  uint mask = input_4 >> 0x14;\n  temp_3 = input_2;\n  if (input_1 != input_3 || mask != input_1) {\n    if (input_1 == input_3) {\n      is_zero_1 = ((input_1 | input_2 << 0xc) == 0);\n      temp_1 = input_3;\n      temp_2 = input_4;\n      if (is_zero_1 && mask != input_1) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (mask == input_1) {\n      is_zero_2 = ((input_3 | input_4 << 0xc) == 0);\n      temp_1 = input_3;\n      temp_2 = input_4;\n      if (is_zero_2) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero_1 = ((input_1 | input_2 << 1) == 0);\n      is_zero_2 = ((input_3 | input_4 << 1) == 0);\n      if (!is_zero_1 && !is_zero_2) {\n        if (input_1 == 0) {\n          temp_2 = input_2 & 0x80000000;\n          do {\n            temp_4 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(temp_4 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | temp_2;\n          if (mask != 0) {\n            return CONCAT44(input_2, input_1);\n          }\n        }\n        do {\n          temp_3 = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(temp_3 != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2, input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n      if ((input_3 | input_4 << 1) != 0) {\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n      temp_1 = input_3;\n      temp_2 = input_4;\n    }\n  }\n  return CONCAT44(temp_3, temp_1) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "decode_and_xor_08004300_08004458",
                "puVar1": "destination_ptr",
                "uVar2": "temp",
                "puVar3": "destination_ptr",
                "puVar4": "source_ptr",
                "puVar5": "source_ptr",
                "local_30": "data",
                "local_24": "ignored",
                "PTR_DAT_0800448c": "key"
            },
            "code": "void decode_and_xor_08004300_08004458(int PTR_DAT_0800448c, int* data, int size)\n{\n  int *src_ptr;\n  int *dst_ptr;\n  int temp;\n  int i;\n  src_ptr = data;\n  dst_ptr = data;\n  for (i = 0; i < size; i++)\n  {\n    temp = *src_ptr;\n    *dst_ptr = temp ^ PTR_DAT_0800448c;\n    src_ptr++;\n    dst_ptr++;\n  }\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004300_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concatenate_pointers_08000134",
                "param_1": "pointer_1",
                "param_2": "pointer_2",
                "DAT_08000144": "global_variable",
                "PTR_FUN_0800014c": "global_pointer_1",
                "PTR_DAT_08000148": "global_pointer_2"
            },
            "code": "uint64_t concatenate_pointers_08000134(uint8_t *pointer_1, uint8_t *pointer_2) {\n  if (DAT_08000144 != 0) {\n    pointer_1 = PTR_FUN_0800014c;\n    pointer_2 = PTR_DAT_08000148;\n  }\n  return ((uint64_t)pointer_2 << 32) | (uint64_t)pointer_1;\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "concatenate_pointers_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_to_64_bit_08003eb0",
                "param_1": "input_value"
            },
            "code": "long long convert_to_64_bit_08003eb0(uint32_t input_value)\n{\n    if (*(int *)PTR_DAT_08003ec4 == 0) {\n        software_interrupt(0x3f);\n        return ((long long)input_value << 32) | 1;\n    }\n    return (long long)input_value << 32;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_to_64_bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = is_input_null_080009f0_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = calculate_float_from_uint_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "check_string_08002ee8_08002ee8",
                "iVar1": "concatenated_bits",
                "uVar2": "bits",
                "check_concatenated_bits_08001050": "check_concatenated_bits_08001050",
                "DAT_08002f1c": "DAT_08002f1c",
                "is_end_of_string_08001028": "is_end_of_string_08001028",
                "FUNC_08000adc": "print_string_08000adc",
                "DAT_08002f20": "DAT_08002f20",
                "FUNC_08000ad8": "print_string_08000ad8",
                "DAT_08002f24": "DAT_08002f24",
                "PTR_DAT_08002f18": "PTR_DAT_08002f18"
            },
            "code": "void check_string_08002ee8_08002ee8(void)\n{\n  int concatenated_bits;\n  undefined4 bits;\n  bits = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  concatenated_bits = check_concatenated_bits_08001050(bits,DAT_08002f1c);\n  if ((concatenated_bits != 0) && (concatenated_bits = is_end_of_string_08001028(bits,DAT_08002f20), concatenated_bits != 0)) {\n    FUNC_08000adc(bits,DAT_08002f20);\n    return;\n  }\n  FUNC_08000ad8(bits,DAT_08002f24);\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08001028",
                "FUN_08001050"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "check_string_08002ee8_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "calculate_and_encode_data_08001104",
                "param_1": "data_to_encode",
                "uVar1": "value",
                "check_param_and_set_values_08001214": "check_and_set_values",
                "encode_data_08001194": "encode_data"
            },
            "code": "int calculate_and_encode_data_08001104(uint32_t data_to_encode){\n    uint32_t value = get_value_from_pointer();\n    uint32_t calculated_value = value / 1000;\n    check_param_and_set_values_08001214(calculated_value);\n    encode_data_08001194(0xffffffff, data_to_encode, 0);\n    return 0;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08002214",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "calculate_and_encode_data_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c",
                "PTR_DAT_08001164": "ptr_data"
            },
            "code": "int get_value_from_pointer_thunk_0800115c() {\n    return *(int *)PTR_DAT_08001164;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = is_input_null_080009f0_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000724",
                "FUN_08000168",
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080009f0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "calculate_sum_080072b8",
                "param_1": "input_num",
                "puVar1": "pointer1"
            },
            "code": "void calculate_sum_080072b8(int input_num) {\n  undefined *pointer1;\n  pointer1 = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)pointer1 = input_num + *(int *)pointer1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "calculate_sum_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "FUN_0800581c": "calculate_and_set_sum_0800581c",
                "param_1": "output_sum",
                "param_2": "input_num",
                "puVar1": "data_pointer",
                "iVar2": "calculated_sum"
            },
            "code": "void calculate_and_set_sum_0800581c(int *output_sum, undefined4 input_num)\n{\n  undefined *data_pointer = PTR_DAT_08005838;\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  int calculated_sum = calculate_sum_080072b8(input_num);\n  if ((calculated_sum == -1) && (*(int *)data_pointer != 0)) {\n    *output_sum = *(int *)data_pointer;\n  }\n  return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "calculate_and_set_sum_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "process_if_match_08004d48",
                "param_1": "data",
                "param_2": "data_length",
                "local_18": "local_var1",
                "local_14": "local_var2",
                "*param_1": "*data",
                "DAT_08004d80": "MATCH_VALUE",
                "process_bits_08001264": "process_bits",
                "DAT_08004d84": "DATA_ADDRESS_1",
                "DAT_08004d88": "DATA_ADDRESS_2"
            },
            "code": "void process_if_match_08004d48(int *data, uint data_length){\n  uint32_t local_var1;\n  uint32_t local_var2;\n  if (*data == DAT_08004d80) {\n    local_var1 = 0xc0;\n    local_var2 = 0x12;\n    process_bits_08001264(DAT_08004d84,&local_var1,*data,3,data,data_length);\n    *(uint *)(DAT_08004d88 + 0x1c) = *(uint *)(DAT_08004d88 + 0x1c) | 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "process_if_match_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_value_from_pointer_to_pointer_080072ac",
                "PTR_PTR_DAT_080072b4": "pointer_to_pointer"
            },
            "code": "get_value_from_pointer_to_pointer_080072ac() {\n  return *(undefined4 *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_to_pointer_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "set_flags_and_values_08002280",
                "param_1": "base_address",
                "param_2": "values",
                "uVar1": "flags",
                "uVar2": "register_value",
                "uVar3": "value_to_set"
            },
            "code": "void set_flags_and_values_08002280(int base_address, uint *values) {\n    uint flags;\n    uint register_value;\n    uint value_to_set;\n    \n    flags = *(uint *)(base_address + 0x20) & 0xfffffffe;\n    register_value = *(uint *)(base_address + 4);\n    value_to_set = *values;\n    flags = (flags & 0xfffffffd) | values[2];\n    if (base_address == DAT_080022cc) {\n        flags = (flags & 0xfffffff7 | values[3]) & 0xfffffffb;\n        register_value = (register_value & 0xfffffcff) | values[5] | values[6];\n    }\n    *(uint *)(base_address + 4) = register_value;\n    *(uint *)(base_address + 0x18) = (*(uint *)(base_address + 0x18) & 0xffffff8c) | value_to_set;\n    *(uint *)(base_address + 0x34) = values[1];\n    *(uint *)(base_address + 0x20) = flags;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "encode_data_08001194",
                "param_1": "data",
                "param_2": "mask",
                "param_3": "offset",
                "uVar1": "encoded_data",
                "uVar2": "num_bits_to_mask",
                "uVar3": "shift_amount",
                "uVar4": "num_bits_to_shift",
                "DAT_080011f4": "PTR_DATA_1",
                "DAT_080011f8": "PTR_DATA_2"
            },
            "code": "void encode_data_08001194(uint data, uint mask, uint offset)\n{\n    uint shift_amount = (*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n    uint num_bits_to_mask = 7 - shift_amount;\n    uint num_bits_to_shift = shift_amount + 4;\n    if (num_bits_to_mask > 3) {\n        num_bits_to_mask = 4;\n    }\n    if (num_bits_to_shift < 7) {\n        shift_amount = 0;\n    }\n    num_bits_to_mask = (1 << (num_bits_to_mask & 0xff)) - 1;\n    if (num_bits_to_shift > 6) {\n        shift_amount = shift_amount - 3;\n    }\n    undefined encoded_data = (undefined)((offset & (1 << (shift_amount & 0xff)) - 1U | (mask & num_bits_to_mask) << (shift_amount & 0xff)) << 4);\n    if (-1 < (int)data) {\n        uint ptr_value = data + 0xe000e100;\n        *(undefined *)(ptr_value + 0x300) = encoded_data;\n    }\n    else {\n        uint data_offset = data & 0xf;\n        uint ptr_value = DAT_080011f8;\n        *(undefined *)(ptr_value + data_offset) = encoded_data;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004ccc",
                "FUN_08004514",
                "FUN_08004e7c",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "encode_data_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "process_sensor_data_08002cb0",
                "param_1": "sensor_id",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "data3",
                "puVar1": "sensor_data",
                "uVar2": "hash_value",
                "local_c": "data_size"
            },
            "code": "void process_sensor_data_08002cb0(uint8_t sensor_id, uint8_t data1, uint8_t data2, uint8_t data3) {\n    uint8_t data_size = data3;\n    process_and_decode_data(sensor_id, data1, data2, 1, data_size);\n    uint8_t *sensor_data = sensor_data_array;\n    process_and_decode_data(sensor_id, 0x6a, 1);\n    set_params_and_decode_strings_in_loop(0x18, 0, sensor_data, 0xad);\n    process_and_decode_data(0x18, 0xb, 1);\n    process_and_decode_data(0x18, 10, 0, 1);\n    process_and_decode_data(0x18, 10, 0xf, 1);\n    decode_strings_in_loop(0x18, 0x10, &data_size, 3, sensor_data, 0xb6);\n    uint8_t *hash_data = PTR_DAT_08002d84;\n    uint32_t hash_value = calculate_hash(data_size & 0xff - 0x80);\n    hash_value = FUNC_08000cec(hash_value, 0x3b800000);\n    hash_value = FUNC_08000adc(hash_value, 0x3f800000);\n    *(uint32_t *)hash_data = hash_value;\n    hash_value = calculate_hash(data_size >> 8 & 0xff - 0x80);\n    hash_value = FUNC_08000cec(hash_value, 0x3b800000);\n    hash_value = FUNC_08000adc(hash_value, 0x3f800000);\n    *(uint32_t *)(hash_data + 4) = hash_value;\n    hash_value = calculate_hash(data_size >> 0x10 & 0xff - 0x80);\n    hash_value = FUNC_08000cec(hash_value, 0x3b800000);\n    hash_value = FUNC_08000adc(hash_value, 0x3f800000);\n    *(uint32_t *)(hash_data + 8) = hash_value;\n    process_and_decode_data(0x18, 10, 0, 1);\n    process_and_decode_data(0x18, 10, 0x16, 1);\n}\n",
            "called": [
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_080040e8",
                "FUN_08000c44",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "decode_and_xor_08004348",
                "param_1": "instruction",
                "param_2": "data",
                "param_3": "length",
                "puVar1": "instruction_bytes",
                "local_10": "local_data",
                "local_c": "masked_length",
                "uStack_8": "parameter"
            },
            "code": "void decode_and_xor_08004348(uint8_t instruction, uint32_t *data, uint8_t length) {\n    uint8_t *instruction_bytes = PTR_DAT_08004380;\n    instruction_bytes[0] = 0xe9;\n    instruction_bytes[1] = 3;\n    instruction_bytes[2] = 0;\n    instruction_bytes[3] = 4;\n    instruction_bytes[4] = 0;\n    instruction_bytes[5] = 0;\n    instruction_bytes[6] = 0;\n    uint32_t local_data = *data;\n    uint32_t masked_length = (instruction & 0xff000000) | (uint32_t)(*(uint16_t *)(instruction_bytes + 4));\n    uint32_t parameter = length;\n    decode_and_xor_08004348_08004300(100, &local_data, 7);\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "set_flags_and_values_08002324",
                "param_1": "address",
                "param_2": "values",
                "uVar1": "original_flags",
                "iVar2": "value_1",
                "iVar3": "value_2",
                "iVar4": "original_value",
                "DAT_08002364": "original_value"
            },
            "code": "void set_flags_and_values_08002324(int address, int *values) {\n  uint flags = *(uint *)(address + 0x20) & 0xffffefff;\n  uint original_flags = *(uint *)(address + 4);\n  int value_1 = *values;\n  int value_2 = values[2];\n  int DAT_08002364 = DAT_08002364;\n  if (address == DAT_08002364) {\n    DAT_08002364 = values[5];\n    original_flags &= 0xffffbfff;\n  }\n  if (address == DAT_08002364) {\n    original_flags |= DAT_08002364 << 6;\n  }\n  *(uint *)(address + 4) = original_flags;\n  *(uint *)(address + 0x1c) = *(uint *)(address + 0x1c) & 0xffff8cff | value_1 << 8;\n  *(int *)(address + 0x40) = values[1];\n  flags = *(uint *)(address + 0x20) & 0xffffdfff | value_2 << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "convert_to_int32_08001078",
                "param_1": "input_value",
                "uVar1": "high_byte",
                "uVar2": "diff",
                "uVar3": "shifted_result"
            },
            "code": "uint convert_to_int32_08001078(uint input_value) {\n  uint shifted_value = input_value << 1;\n  if (shifted_value < 0x7f000000) {\n    return 0;\n  }\n  uint high_byte = shifted_value >> 0x18;\n  uint diff = 0x9e - high_byte;\n  if (high_byte < 0x9f && diff != 0) {\n    uint shifted_result = (input_value << 8 | 0x80000000) >> (diff & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_result = -shifted_result;\n    }\n    return shifted_result;\n  }\n  if (diff == 0xffffff9f && (input_value & 0x7fffff) != 0) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_to_int32_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "check_valid_input_08002564",
                "param_1": "input_array",
                "param_2": "bit_array",
                "uVar1": "result",
                "*(char *)(param_1 + 0xe)": "*(char *)(input_array + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "*(uint8_t *)((int)input_array + 0x39)",
                "*(uint *)(*param_1 + 0x44)": "*(uint32_t *)(*input_array + 0x44)",
                "param_2[0] | param_2[1] | param_2[2] | param_2[3] | param_2[4] | param_2[5] | param_2[6]": "bit_array[0] | bit_array[1] | bit_array[2] | bit_array[3] | bit_array[4] | bit_array[5] | bit_array[6]",
                "*(undefined *)(param_1 + 0xe)": "*(uint8_t *)(input_array + 0xe)"
            },
            "code": "uint32_t check_valid_input_08002564(int *input_array, uint32_t *bit_array)\n{\n    uint32_t result = 2;\n    if (*(char *)(input_array + 0xe) != 1)\n    {\n        *(uint8_t *)((int)input_array + 0x39) = 2;\n        *(uint32_t *)(*input_array + 0x44) = bit_array[0] | bit_array[1] | bit_array[2] | bit_array[3] | bit_array[4] | bit_array[5] | bit_array[6];\n        *(uint8_t *)((int)input_array + 0x39) = 1;\n        result = 0;\n        *(uint8_t *)(input_array + 0xe) = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_valid_input_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "configure_device_08001754",
                "param_1": "device_config",
                "uVar1": "leading_zeroes_count",
                "uVar2": "divisor",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "temp",
                "uVar7": "quotient"
            },
            "code": "uint32_t configure_device_08001754(uint32_t **device_config)\n{\n    uint32_t leading_zeroes_count;\n    uint32_t divisor;\n    uint32_t quotient;\n    uint32_t *ptr1;\n    uint32_t *ptr2;\n    uint32_t *ptr3;\n    uint32_t *ptr4;\n    uint32_t temp;\n    if (device_config == NULL) {\n        return 1;\n    }\n    if (**(char **)(device_config + 13) == '\\0') {\n        *(uint8_t *)(device_config + 13) = 0;\n        process_if_match_08004d48();\n    }\n    *(uint8_t *)(*(char **)(device_config + 13)) = 0x24;\n    ptr1 = PTR_DAT_08001820;\n    **device_config = **device_config & 0xfffffffe;\n    leading_zeroes_count = count_leading_zeroes_of_0xe00000_08002220();\n    divisor = PTR_DAT_08001824;\n    quotient = (uint32_t)((uint64_t)leading_zeroes_count >> 0x20);\n    leading_zeroes_count = (uint32_t)leading_zeroes_count;\n    ptr3 = device_config[1];\n    temp = leading_zeroes_count / divisor;\n    if (ptr1 < ptr3) {\n        quotient = 300;\n    }\n    ptr4 = *device_config;\n    if (ptr1 < ptr3) {\n        quotient = temp * quotient;\n    }\n    ptr4[1] = temp;\n    if (ptr1 < ptr3) {\n        temp = quotient / 1000;\n    }\n    ptr4[8] = temp + 1;\n    if (ptr1 < ptr3) {\n        if (device_config[2] == NULL) {\n            leading_zeroes_count = leading_zeroes_count / (uint32_t)((int)ptr3 * 3) | 0x8000;\n        }\n        else {\n            leading_zeroes_count = leading_zeroes_count / (uint32_t)((int)ptr3 * 0x19) | 0xc000;\n        }\n        if ((leading_zeroes_count & 0xfff) == 0) {\n            leading_zeroes_count = 1;\n        }\n    }\n    else {\n        leading_zeroes_count = leading_zeroes_count / (uint32_t)((int)ptr3 << 1);\n        if ((leading_zeroes_count & 0xfff) < 4) {\n            leading_zeroes_count = 4;\n        }\n    }\n    ptr1 = device_config[8];\n    ptr3 = device_config[7];\n    ptr4[7] = leading_zeroes_count;\n    *ptr4 = (uint32_t)ptr3 | (uint32_t)ptr1;\n    ptr4[2] = (uint32_t)device_config[4] | (uint32_t)device_config[3];\n    ptr4[3] = (uint32_t)device_config[5] | (uint32_t)device_config[6];\n    *ptr4 = *ptr4 | 1;\n    device_config[0xe] = NULL;\n    *(uint8_t *)(*(char **)(device_config + 13)) = 0x20;\n    *(uint8_t *)((int)device_config + 0x36) = 0;\n    return 0;\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "configure_device_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ee8",
                "FUN_08002ec0",
                "FUN_08002bf0",
                "FUN_0800426c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_at_index_08003ec8",
                "param_1": "ptr_array",
                "param_2": "value",
                "*(short *)(param_1 + 0x804)": "*ptr_counter",
                "*(short *)(param_1 + 0x802)": "*ptr_index",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(unsigned char*)(ptr_array + index)",
                "*(ushort *)(param_1 + 0x802)": "*ptr_index"
            },
            "code": "int increment_and_store_at_index_08003ec8(int ptr_array, unsigned char value) {\n    short* ptr_counter = (short*)(ptr_array + 0x804);\n    short counter = *ptr_counter;\n    *ptr_counter = counter + 1;\n    unsigned short* ptr_index = (unsigned short*)(ptr_array + 0x802);\n    unsigned short index = *ptr_index;\n    *(unsigned char*)(ptr_array + index) = value;\n    *ptr_index = (index + 1) & 0x7ff;\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_at_index_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "reset_device_state_08002724",
                "param_1": "device_state",
                "iVar1": "device_state_ptr",
                "process_data_08004e7c": "process_data",
                "update_values_080025e8": "update_values"
            },
            "code": "int reset_device_state_08002724(int *device_state)\n{\n    int device_state_ptr = *device_state;\n    if (device_state != NULL)\n    {\n        if (device_state[0x39] == 0)\n        {\n            device_state[0xe] = 0;\n            process_data();\n        }\n        device_state[0x39] = 2;\n        *(uint *)(device_state_ptr + 0xc) &= 0xffffdfff;\n        update_values(device_state);\n        *(uint *)(device_state_ptr + 0x10) &= 0xffffb7ff;\n        *(uint *)(device_state_ptr + 0x14) &= 0xffffffd5;\n        *(uint *)(device_state_ptr + 0xc) |= 0x2000;\n        device_state[0xf] = 0;\n        device_state[0x39] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_080025e8",
                "FUN_08004e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "reset_device_state_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_param_08003fe8",
                "param_1": "param",
                "PTR_DAT_08003ff0": "PTR_dat"
            },
            "code": "void set_param_08003fe8(void* param) {\n    int* ptr_dat = *(int*)PTR_DAT_08003ff0;\n    int offset = 0x3c;\n    void* address = (void*)(ptr_dat + offset);\n    *(void**)address = param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_param_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "calculate_required_mem_size_08005714",
                "param_1": "output",
                "param_2": "input_size",
                "puVar1": "unused_ptr",
                "uVar2": "ret_val",
                "puVar3": "ptr1",
                "iVar4": "padding",
                "puVar5": "temp_ptr",
                "uVar6": "diff",
                "puVar7": "prev_ptr",
                "uVar8": "aligned_input_size"
            },
            "code": "uint calculate_required_mem_size_08005714(undefined4 *output, uint input_size)\n{\n  uint aligned_input_size = (input_size + 3 & 0xfffffffc) + 8;\n  if (aligned_input_size < 0xc) {\n    aligned_input_size = 0xc;\n  }\n  if (((int)aligned_input_size < 0) || (aligned_input_size < input_size)) {\n    *output = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    uint *ptr1 = *(uint **)PTR_DAT_080057c8;\n    uint *prev_ptr = *(uint **)PTR_DAT_080057c8;\n    while (ptr1 != (uint *)0x0) {\n      uint diff = *ptr1 - aligned_input_size;\n      if (-1 < (int)diff) {\n        if (diff < 0xc) {\n          if (prev_ptr == ptr1) {\n            uint next_ptr = prev_ptr[1];\n            *(uint *)PTR_DAT_080057c8 = next_ptr;\n          }\n          else {\n            uint next_ptr = ptr1[1];\n          }\n          if (prev_ptr != ptr1) {\n            prev_ptr[1] = next_ptr;\n            prev_ptr = ptr1;\n          }\n        }\n        else {\n          *ptr1 = diff;\n          *(uint *)((int)ptr1 + diff) = aligned_input_size;\n          prev_ptr = (uint *)((int)ptr1 + diff);\n        }\n        goto LAB_08005778;\n      }\n      prev_ptr = ptr1;\n      ptr1 = (uint *)ptr1[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint ret_val = calculate_and_set_sum_0800581c(output);\n      *(undefined4 *)PTR_DAT_080057cc = ret_val;\n    }\n    uint *ptr2 = (uint *)calculate_and_set_sum_0800581c(output,aligned_input_size);\n    if ((ptr2 != (uint *)0xffffffff) &&\n       ((prev_ptr = (uint *)((int)ptr2 + 3U & 0xfffffffc), ptr2 == prev_ptr ||\n        (int diff = calculate_and_set_sum_0800581c(output,(int)prev_ptr - (int)ptr2), diff != -1)))) {\n      *prev_ptr = aligned_input_size;\nLAB_08005778:\n      do_nothing_0800583e(output);\n      uint aligned_end_ptr = (int)prev_ptr + 0xbU & 0xfffffff8;\n      int padding = aligned_end_ptr - (int)(prev_ptr + 1);\n      if (padding != 0) {\n        *(int *)((int)prev_ptr + padding) = -padding;\n        return aligned_end_ptr;\n      }\n      return aligned_end_ptr;\n    }\n    *output = 0xc;\n    do_nothing_0800583e(output);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800583e",
                "FUN_0800581c",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_080050fc",
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_required_mem_size_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "puVar1": "function_ptrs_start",
                "iVar2": "function_ptrs_size",
                "iVar3": "i",
                "PTR_DAT_08004fec": "function_ptrs_start",
                "PTR_DAT_08004ff0": "function_ptrs_size",
                "do_nothing_080072d4": "do_nothing_080072d4",
                "PTR_DAT_08004ff4": "other_function_ptrs_start",
                "PTR_DAT_08004ff8": "other_function_ptrs_size"
            },
            "code": "void execute_functions_08004fb4(void)\n{\n  undefined *PTR_DAT_08004fec = PTR_DAT_08004fec;\n  int PTR_DAT_08004ff0 = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i != PTR_DAT_08004ff0 >> 2; i++) {\n    (**(code **)(PTR_DAT_08004fec + i * 4))();\n  }\n  do_nothing_080072d4();\n  undefined *PTR_DAT_08004ff4 = PTR_DAT_08004ff4;\n  int PTR_DAT_08004ff8 = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i != PTR_DAT_08004ff8 >> 2; i++) {\n    (**(code **)(PTR_DAT_08004ff4 + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_080072d4",
                "FUN_08000134"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "execute_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "decode_and_xor_080043f0",
                "param_1": "key",
                "param_2": "src",
                "param_3": "dst",
                "local_10": "ptr",
                "uStack_c": "local_iv",
                "auStack_8": "input"
            },
            "code": "void decode_and_xor_080043f0(unsigned char key, unsigned char* src, size_t src_len, unsigned char* dst){\n    unsigned char* ptr = (unsigned char*) PTR_DAT_0800440c;\n    unsigned char* local_key = ptr;\n    unsigned char* local_iv = ptr + 4;\n    unsigned char* input = dst;\n    \n    *local_key = *ptr;\n    *local_iv = *(ptr + 4);\n    *input = *(dst + 8);\n    \n    decode_and_xor_080043f0_08004300(key, local_key, 8, input);\n    return;\n  }",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_xor_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "num",
                "param_2": "shift_amount",
                "param_3": "mask",
                "param_4": "doubled_num",
                "uVar1": "sign_bit",
                "uVar2": "shifted_num_3",
                "uVar3": "result",
                "uVar4": "shifted_num",
                "uVar5": "doubled_num",
                "uVar7": "shift_amount_2",
                "iVar6": "num_leading_zeros",
                "in_r12": "shift_amount_3",
                "bVar8": "is_shift_amount_2_zero",
                "bVar9": "is_shift_amount_2_negative",
                "bVar10": "is_shift_amount_2_negative"
            },
            "code": "uint64_t reverse_bits_08000428(uint32_t num, uint32_t shift_amount, uint32_t mask) {\n  uint32_t doubled_num = num << 1;\n  bool is_doubled_num_zero = (doubled_num == 0);\n  uint32_t sign_bit = ((num & 0x80000000) != 0) << 0x1f;\n  uint32_t shifted_num = ((int)doubled_num >> 3) >> 1;\n  uint32_t result = sign_bit | shifted_num;\n  num = num << 0x1d;\n  if (!is_doubled_num_zero) {\n    bool is_param_4_zero = ((doubled_num & 0xff000000) == 0);\n    if (!is_param_4_zero) {\n      is_param_4_zero = ((doubled_num & 0xff000000) == 0xff000000);\n    }\n    if (!is_param_4_zero) {\n      return (uint64_t)(result << 32) | num) ^ 0x3800000000000000;\n    }\n  }\n  if ((doubled_num == 0 || (doubled_num & 0xff000000) == 0xff000000)) {\n    return (uint64_t)(result << 32) | num;\n  }\n  uint32_t shifted_num_2 = shifted_num;\n  uint32_t shifted_num_3 = num;\n  if (shifted_num == 0) {\n    shifted_num_2 = 0;\n    shifted_num_3 = num;\n  }\n  int num_leading_zeros = count_leading_zeroes(shifted_num_2);\n  if (shifted_num == 0) {\n    num_leading_zeros = num_leading_zeros + 0x20;\n  }\n  uint32_t shift_amount_2 = num_leading_zeros - 0xb;\n  bool is_shift_amount_2_negative = (shift_amount_2 < 0);\n  bool is_shift_amount_2_zero = (shift_amount_2 == 0);\n  if (num_leading_zeros < 0x20) {\n    is_shift_amount_2_negative = ((shift_amount_2 - 0xc) < 0);\n    num_leading_zeros = num_leading_zeros + -0x1f;\n    is_shift_amount_2_zero = (num_leading_zeros == 0);\n    shifted_num_2 = shift_left(shifted_num, shift_amount_2 & 0xff);\n    shifted_num = shift_right(shifted_num, (0xcU - num_leading_zeros) & 0xff);\n    goto LAB_080002f0;\n  }\n  if (is_shift_amount_2_zero || is_shift_amount_2_negative != ((shift_amount_2 - 0x20) < 0)) {\n    uint32_t shift_amount_3 = 0x20 - shift_amount_2;\n    shifted_num = shift_left(shifted_num, shift_amount_2 & 0xff);\n    shifted_num = shifted_num | (shifted_num_3 >> (shift_amount_3 & 0xff));\n    shifted_num_3 = shift_left(shifted_num_3, shift_amount_2 & 0xff);\n  }\nLAB_080002f0:\n  if (num_leading_zeros < 0x381) {\n    return (uint64_t)(shifted_num + (0x380 - num_leading_zeros) * 0x100000 | sign_bit) << 32 | shifted_num_3;\n  }\n  uint32_t shift_amount_4 = ~(0x380 - num_leading_zeros);\n  if ((int)shift_amount_4 < 0x1f) {\n    int shift_amount_5 = shift_amount_4 - 0x13;\n    if (shift_amount_5 != 0 && shift_amount_5 < 0 == ((shift_amount_4 - 0x1f) < 0xc)) {\n      return ((uint64_t)(result << 32) | (shifted_num_3 >> (0x20 - (0xcU - shift_amount_5) & 0xff) | shifted_num << (0xcU - shift_amount_5 & 0xff))) & 0x80000000ffffffff;\n    }\n    shift_amount_4 = shift_amount_4 + 1;\n    return ((uint64_t)sign_bit | shifted_num >> (shift_amount_4 & 0xff) | shifted_num_3 << (0x20 - shift_amount_4 & 0xff)) << 32;\n  }\n  return ((uint64_t)result << 32 | shifted_num >> (shift_amount_4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "update_and_encode_data_08004ccc",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "iVar1": "data_ptr",
                "uVar2": "updated_data_1",
                "uVar3": "updated_data_2"
            },
            "code": "void update_and_encode_data_08004ccc(uint32_t data_1, uint32_t data_2, uint32_t data_3)\n{\n  int data_ptr = DAT_08004d44;\n  uint32_t updated_data_1 = *(uint32_t *)(data_ptr + 0x18) | 1;\n  *(uint32_t *)(data_ptr + 0x18) = updated_data_1;\n  uint32_t updated_data_2 = *(uint32_t *)(data_ptr + 0x18) & 1;\n  update_data_08001170(3, data_2, updated_data_1, updated_data_2, data_1, updated_data_2, data_3);\n  encode_data_08001194(0xfffffff4, 0);\n  encode_data_08001194(0xfffffff5, 0);\n  encode_data_08001194(0xfffffff6, 0);\n  encode_data_08001194(0xfffffffb, 0);\n  encode_data_08001194(0xfffffffc, 0);\n  encode_data_08001194(0xfffffffe, 0);\n  encode_data_08001194(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_08001170"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "update_and_encode_data_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_float_value_08000a30",
                "param_1": "float_bits",
                "param_2": "shift_amount",
                "uVar1": "significand",
                "uVar2": "shifted_significand",
                "uVar3": "exponent",
                "in_r12": "N/A",
                "bVar4": "is_negative",
                "bVar5": "is_denormal"
            },
            "code": "uint calculate_float_value_08000a30(uint float_bits, uint shift_amount)\n{\n  uint significand;\n  uint exponent;\n  uint shifted_significand;\n  bool is_negative;\n  bool is_denormal;\n  \n  shifted_significand = shift_amount * 2;\n  is_denormal = shifted_significand < 0x70000000;\n  exponent = shifted_significand + 0x90000000;\n  significand = exponent;\n  if (!is_denormal) {\n    shifted_significand += 0x8fe00000;\n    significand = shifted_significand;\n  }\n  is_negative = significand == 0;\n  if (!is_denormal && exponent >= 0x200000) {\n    is_negative = shifted_significand == 0x1fc00000;\n  }\n  if (((is_denormal || exponent < 0x200000) || 0x1fc00000 < shifted_significand) || is_negative) {\n    if ((shift_amount & 0x40000000) != 0) {\n      if (((int)shifted_significand >> 0x15 == -1) && ((float_bits | shift_amount << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return shift_amount & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shifted_significand + 0x92e00000) < 0 != SCARRY4(exponent,0x2e00000)) {\n      return shift_amount & 0x80000000;\n    }\n    shift_amount = 0x18 - (shifted_significand + 0x92e00000 >> 0x15);\n    significand = float_bits >> (shift_amount & 0xff);\n    if (float_bits << (0x20 - shift_amount & 0xff) != 0) {\n      significand = significand | 1;\n    }\n    exponent = shift_amount & 0xff;\n    float_bits = significand | (shifted_significand & 0x1fffff) << (0x20 - exponent & 0xff);\n    exponent = (shifted_significand & 0x1fffff) >> (exponent & 0xff) << 1;\n  }\n  significand = (shift_amount & 0x80000000 | float_bits >> 0x1d) + exponent * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    significand = significand & 0xfffffffe;\n  }\n  return significand;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_float_value_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "process_input_params_080023d0",
                "param_1": "input_params",
                "*(char *)((int)param_1 + 0x39)": "input_params[9]",
                "*(undefined *)(param_1 + 0xe)": "input_params[14]",
                "process_param_08004d8c": "process_param",
                "*(undefined *)((int)param_1 + 0x39)": "input_params[9]",
                "update_data_08002368": "update_data",
                "*param_1": "input_params[0]"
            },
            "code": "int process_input_params_080023d0(int *input_params)\n{\n    if (input_params != NULL)\n    {\n        if (input_params[9] == 0)\n        {\n            input_params[14] = 0;\n            process_param_08004d8c();\n        }\n        input_params[9] = 2;\n        update_data_08002368(input_params[0], &input_params[1]);\n        input_params[9] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_input_params_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "increment_and_store_08004c30",
                "param_1": "array",
                "puVar1": "index_ptr",
                "puVar2": "data_ptr",
                "uVar3": "data",
                "uVar4": "bitmask",
                "iVar5": "array_len"
            },
            "code": "int * increment_and_store_08004c30(int *array)\n{\n  undefined *index_ptr;\n  undefined *data_ptr;\n  undefined data;\n  uint bitmask;\n  int array_len;\n  \n  index_ptr = PTR_DAT_08004c58;\n  if (*array != DAT_08004c54) {\n    return array;\n  }\n  increment_and_store_08004c30_at_index_08003ec8(PTR_DAT_08004c5c,*PTR_DAT_08004c58);\n  data_ptr = PTR_DAT_08004c60;\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12')) {\n    if (index_ptr == (undefined *)0x0) {\n      return (int *)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01') {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4 *)(data_ptr + 0x3c) = 0;\n      *(undefined2 *)(data_ptr + 0x2c) = 1;\n      *(undefined2 *)(data_ptr + 0x2e) = 1;\n      data_ptr[0x38] = 0;\n      if (data_ptr[0x39] == '\\x12') {\n        data = 0x32;\n      }\n      else {\n        data = 0x22;\n      }\n      array_len = *(int *)data_ptr;\n      data_ptr[0x39] = data;\n      bitmask = *(uint *)(array_len + 0xc);\n      *(undefined **)(data_ptr + 0x28) = index_ptr;\n      *(uint *)(array_len + 0xc) = bitmask | 0x100;\n      *(uint *)(array_len + 0x14) = *(uint *)(array_len + 0x14) | 1;\n      *(uint *)(array_len + 0xc) = *(uint *)(array_len + 0xc) | 0x20;\n      return (int *)0x0;\n    }\n  }\n  return (int *)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "increment_and_store_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = calculate_result_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_08005900",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080071c0",
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_parameter_in_memory_08003fdc",
                "param_1": "new_parameter",
                "PTR_DAT_08003fe4": "ptr_data"
            },
            "code": "void set_parameter_in_memory_08003fdc(int new_parameter)\n{\n    int* ptr = *(int*)PTR_DAT_08003fe4;\n    int offset = 0x38;\n    *(ptr + offset) = new_parameter;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "set_parameter_in_memory_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "is_input_null_080009f0_080009f0",
                "in_CY": "input_char"
            },
            "code": "bool is_input_null_080009f0_080009f0(void)\n{\n  char input_char;\n  validate_parameters_08000980();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08006228",
                "FUN_08005854",
                "FUN_08006d68",
                "FUN_08005c70"
            ],
            "imported": false,
            "current_name": "is_input_null_080009f0_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_bit_and_mask_08004f10",
                "DAT_08004f50": "data",
                "DAT_08004f54": "mask",
                "DAT_08004f58": "ptr_data"
            },
            "code": "void set_bit_and_mask_08004f10(uint *DAT_08004f50)\n{\n    uint *DAT_08004f58 = DAT_08004f50;\n    *DAT_08004f50 |= 0x1;\n    DAT_08004f58[1] &= 0xFFFFFF00;\n    *DAT_08004f58 &= 0xFEF6FFFF;\n    *DAT_08004f58 &= 0xFFFBFFFF;\n    DAT_08004f58[1] &= 0xFF80FFFF;\n    DAT_08004f58[2] = 0x9F0000;\n    *(uint *)(DAT_08004f50 + 0x8) = 0x8000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_bit_and_mask_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "copy_memory_region_08005044",
                "param_1": "error_code",
                "param_2": "dest",
                "param_3": "src",
                "param_4": "size",
                "iVar1": "required_mem_size",
                "uVar2": "required_size",
                "uVar3": "current_mem_size",
                "iVar4": "data_offset",
                "uVar5": "new_data_size",
                "header_flags": "header_flags"
            },
            "code": "uint32_t copy_memory_region_08005044(uint32_t *dest, uint32_t src, uint32_t size, uint32_t *error_code) {\n    uint32_t required_mem_size;\n    uint32_t new_mem_size;\n    uint32_t current_mem_size = dest[2];\n    uint32_t header_flags = *(uint16_t *)(dest + 3);\n    if (current_mem_size <= size && (header_flags & 0x480) != 0) {\n        uint32_t data_offset = *dest - dest[4];\n        uint32_t new_data_size = (uint32_t)(dest[5] * 3) / 2;\n        uint32_t required_size = size + 1 + data_offset;\n        if (new_data_size < required_size) {\n            new_data_size = required_size;\n        }\n        if ((int32_t)((uint32_t)*(uint16_t *)(dest + 3) << 0x15) < 0) {\n            required_mem_size = calculate_required_mem_size(param_1, new_data_size);\n            if (required_mem_size == 0) {\n                *error_code = 0xc;\n                *(uint16_t *)(dest + 3) = *(uint16_t *)(dest + 3) | 0x40;\n                return 0xffffffff;\n            }\n            copy_array(required_mem_size, dest[4], data_offset);\n            *(uint16_t *)(dest + 3) = *(uint16_t *)(dest + 3) & 0xfb7f | 0x80;\n        }\n        else {\n            required_mem_size = calculate_required_mem_size(param_1, dest[4], new_data_size);\n            if (required_mem_size == 0) {\n                add_to_linked_list(param_1, dest[4]);\n                *error_code = 0xc;\n                return 0xffffffff;\n            }\n        }\n        dest[4] = required_mem_size;\n        *dest = required_mem_size + data_offset;\n        dest[5] = new_data_size;\n        dest[2] = new_data_size - data_offset;\n        current_mem_size = size;\n    }\n    if (size <= current_mem_size) {\n        current_mem_size = size;\n    }\n    copy_memory_region_08005044(*dest, src, current_mem_size);\n    dest[2] = dest[2] - current_mem_size;\n    *dest = current_mem_size + *dest;\n    return 0;\n}",
            "called": [
                "FUN_08005646",
                "FUN_080057d0",
                "FUN_08005630",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "copy_memory_region_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "update_sensor_data_08004194_08004194",
                "puVar1": "sensor_data_3",
                "puVar2": "sensor_data_2",
                "puVar3": "sensor_data_1",
                "puVar4": "PTR_DAT_080049f4",
                "uVar5": "param_1",
                "uVar6": "param_2",
                "uVar7": "param_3",
                "uVar8": "param_4"
            },
            "code": "void update_sensor_data_08004194_08004194(void)\n{\n  // Run simulation\n  run_simulation_08004028();\n  \n  // Clear and set data\n  clear_and_set_data_08004c70();\n  \n  // Process sensor data and store parameters\n  process_sensor_data_and_store_parameters_08002ea0();\n  \n  // Process data and decode\n  process_data_and_decode_08003298();\n  \n  // Update parameters\n  undefined *sensor_data_1 = PTR_DAT_080049f0;\n  undefined *sensor_data_2 = PTR_DAT_080049ec;\n  undefined *sensor_data_3 = PTR_DAT_080049e8;\n  \n  *(int *)(sensor_data_2 + 0x4c) = 1;\n  *(int *)(sensor_data_3 + 0x4c) = 0xffffffff;\n  *(int *)(PTR_DAT_080049f4 + 0x4c) = 1;\n  \n  *(int *)(sensor_data_2 + 0x20) = DAT_080049fc;\n  *(int *)(sensor_data_3 + 0x20) = DAT_08004a0c;\n  *(int *)(PTR_DAT_080049f4 + 0x20) = 0;\n  \n  *(int *)(sensor_data_2 + 4) = DAT_080049f8;\n  *(int *)(sensor_data_2 + 8) = DAT_08004a10;\n  *(int *)(sensor_data_2 + 0xc) = DAT_08004a00;\n  *(int *)(sensor_data_2 + 0x10) = DAT_08004a08;\n  *(int *)(sensor_data_2 + 0x14) = DAT_08004a10;\n  *(int *)(sensor_data_2 + 0x18) = DAT_08004a18;\n  \n  *(int *)(sensor_data_3 + 4) = DAT_08004a18;\n  *(int *)(sensor_data_3 + 8) = DAT_08004a10;\n  *(int *)(sensor_data_3 + 0xc) = DAT_08004a1c;\n  *(int *)(sensor_data_3 + 0x14) = DAT_08004a20;\n  *(int *)(sensor_data_3 + 0x18) = DAT_08004a28;\n  \n  *(int *)(PTR_DAT_080049f0 + 4) = DAT_08004a24;\n}\n",
            "called": [
                "FUN_08002ea0",
                "FUN_08004028",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "update_sensor_data_08004194_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "set_flag_if_param_is_four_08001240",
                "param_1": "param",
                "uVar1": "flag",
                "DAT_08001254": "DATA_ADDRESS"
            },
            "code": "void set_flag_if_param_is_four_08001240(int param){\n  uint32_t flag;\n  if (param == 4) {\n    flag = *DAT_08001254 | 4;\n  }\n  else {\n    flag = *DAT_08001254 & 0xfffffffb;\n  }\n  *DAT_08001254 = flag;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_is_four_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_value_08005840",
                "param_1": "initial_value",
                "param_2": "data",
                "iVar1": "index"
            },
            "code": "int calculate_value_08005840(int initial_value, int* data){\n    int index = *(int*)(data - 4) - 4;\n    if (initial_value < 0){\n        index += *(int*)(data + index);\n    }\n    return index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "input_string",
                "pcVar2": "current_char",
                "pcVar3": "current_char_pointer",
                "cVar1": "current_char_value"
            },
            "code": "char* find_end_of_string_08000150(char* input_string) {\n  char* current_char = input_string;\n  while (*current_char != '\\0') {\n    current_char++;\n  }\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "set_param_values_08003f3c",
                "param_1": "ptr1",
                "param_2": "ptr2",
                "param_3": "ptr3",
                "uVar1": "ptr4",
                "uVar2": "count",
                "DAT_08003f78": "ptr4"
            },
            "code": "void set_param_values_08003f3c(uint32_t* ptr1, uint32_t* ptr2, uint32_t* ptr3)\n{\n    uint32_t count1 = count_leading_zeroes(*ptr1);\n    uint32_t count2 = count_leading_zeroes(*ptr2);\n    uint32_t count3 = count_leading_zeroes(*ptr3);\n    set_param_value_08001424(ptr1, 0x8000, count1 >> 5);\n    set_param_value_08001424(ptr2, 0x4000, count2 >> 5);\n    set_param_value_08001424(ptr3, 0x2000, count3 >> 5);\n    return;\n}",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "set_param_values_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_value_from_pointer_08002214",
                "undefined4": "int",
                "PTR_DAT_0800221c": "value_pointer",
                "*": "",
                "return": "return",
                "(": "(",
                ")": ")",
                ";": ";"
            },
            "code": "int get_value_from_pointer_08002214() {\n    int* PTR_DAT_0800221c = PTR_DAT_0800221c;\n    return *PTR_DAT_0800221c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08004514",
                "FUN_08001104"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_44_bits_08001004",
                "param_1": "lower_bits",
                "param_2": "higher_bits",
                "CONCAT44": "concatenate_44",
                "calculate_result_08000f9c": "calculate_result"
            },
            "code": "undefined8 concatenate_44_bits_08001004(undefined4 lower_bits, undefined4 higher_bits)\n{\n  calculate_result_08000f9c();\n  return CONCAT44(higher_bits, lower_bits);\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "imported": false,
            "current_name": "concatenate_44_bits_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "set_bits_in_uint32_array_08003ff4",
                "puVar1": "uint32_array_ptr",
                "PTR_DAT_0800401c": "PTR_DAT_0800401c",
                "PTR_DAT_08004020": "PTR_DAT_08004020",
                "PTR_DAT_08004024": "PTR_DAT_08004024"
            },
            "code": "void set_bits_in_uint32_array_08003ff4(void)\n{\n  uint32_t *uint32_array_ptr;\n  uint32_array_ptr = uint32_array_ptr_start;\n  set_bit_in_uint32_at_offset(uint32_array_ptr,4);\n  set_bit_in_uint32_at_offset(uint32_array_ptr + 1,8);\n  set_bit_in_uint32_at_offset(PTR_DAT_0800401c,8);\n  set_bit_in_uint32_at_offset(PTR_DAT_0800401c,0xc);\n  return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "set_bits_in_uint32_array_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "process_sensor_data_080041ae",
                "convert_to_64_bit_08003eb0": "convert_to_64_bit",
                "update_sensor_data_08004194_08004194": "update_sensor_data",
                "increment_ptr_dat_08001158_0800114c": "increment_data_pointer",
                "FUNC_0800411c": "process_data"
            },
            "code": "void process_sensor_data_080041ae(void)\n{\n  convert_to_64_bit_08003eb0(0);\n  update_sensor_data();\n  do {\n    increment_ptr_dat_08001158_0800114c();\n    FUNC_0800411c();\n  } while( true );\n}",
            "called": [
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_08003eb0",
                "FUN_0800114c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "process_sensor_data_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "set_flag_and_update_data_08001128",
                "update_data_08001170": "update_data",
                "calculate_and_encode_data_08001104": "calculate_and_encode_data",
                "update_and_encode_data_08004ccc": "update_and_encode_data",
                "DAT_08001148": "data_pointer"
            },
            "code": "void set_flag_and_update_data_08001128(void)\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  update_data_08001170(3);\n  calculate_and_encode_data(0);\n  update_and_encode_data();\n}",
            "called": [
                "FUN_08004ccc",
                "FUN_08001170",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_update_data_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "decode_and_process_peripherals_08004514",
                "iVar1": "result",
                "uVar2": "value_from_pointer",
                "uVar3": "loop_param",
                "iVar4": "loop_counter",
                "local_44": "process_data_param_1",
                "local_40": "process_data_param_2",
                "local_3c": "process_data_return_value",
                "local_34": "process_data_return_value_2",
                "local_30": "peripherals_array",
                "local_20": "unused_variable",
                "local_1c": "unused_variable",
                "local_14": "unused_variable",
                "local_10": "unused_variable",
                "local_c": "unused_variable"
            },
            "code": "void decode_and_process_peripherals_08004514() {\n  int loop_counter;\n  uint32_t value_from_pointer;\n  uint32_t loop_param = 0x3c;\n  int decode_result;\n  uint32_t encode_data_param = 0xffffffff;\n  uint32_t encode_data_param_2 = 0;\n  uint32_t encode_data_param_3 = 0;\n  uint32_t set_values_param;\n  uint32_t process_data_param_1 = 0xf;\n  uint32_t process_data_param_2 = 0x400;\n  uint32_t process_data_return_value;\n  uint32_t set_params_and_decode_strings_return_value;\n  uint32_t set_flag_if_param_is_four_param = 4;\n  uint32_t peripherals_array[4] = {2, 2, 0, 0x380000};\n  set_params_and_decode_strings_return_value = set_params_and_decode_strings_in_loop_08004490(PTR_s____Src_peripherals_c_08004588, loop_param);\n  if (set_params_and_decode_strings_return_value != 0) {\n    while (true) {\n      decode_result = process_data_0800209c(&process_data_param_1, loop_counter);\n      if (decode_result == 0) {\n        break;\n      }\n      loop_param = 0x49;\n      value_from_pointer = get_value_from_pointer_08002214();\n      set_values_param = value_from_pointer / 1000;\n      check_param_and_set_values_08001214(set_values_param);\n      set_flag_if_param_is_four_08001240(set_flag_if_param_is_four_param);\n      encode_data_08001194(encode_data_param, encode_data_param_2, encode_data_param_3);\n    }\n  }\n}\n",
            "called": [
                "FUN_08001194",
                "FUN_0800209c",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_08001214",
                "FUN_08002214",
                "FUN_08001240"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "decode_and_process_peripherals_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "calculate_and_update_param_values_08004a84",
                "calculate_new_value_08002ec0": "calculate_new_value",
                "PTR_DAT_08004bf4": "PARAM_2",
                "PTR_DAT_08004bf0": "PARAM_1",
                "PTR_DAT_08004bf8": "PARAM_3",
                "calculate_average_08002ed4": "calculate_average",
                "check_string_08002ee8_08002ee8": "check_string",
                "update_data_if_needed_08004a30": "update_data_if_needed",
                "is_input_null_08001064_08001064": "is_input_null",
                "is_end_of_string_08001028": "is_end_of_string",
                "set_param_values_08003f3c": "set_param_values",
                "calculate_hash_0800483c": "calculate_hash",
                "FUNC_08000adc": "FUNC",
                "set_parameters_080041c4": "set_parameters",
                "FUNC_08000cec": "FUNC",
                "validate_input_080010c4": "validate_input",
                "PTR_DAT_08004c04": "PARAM_4",
                "PTR_DAT_08004c08": "PARAM_5",
                "PTR_DAT_08004c14": "PARAM_7",
                "DAT_08004c00": "STRING_1",
                "DAT_08004bfc": "STRING_2",
                "DAT_08004c10": "STRING_5",
                "PARAM_DAT_08004c0c": "STRING_3",
                "PARAM_1 + 0x30": "PARAM_1[12]",
                "PARAM_2 + 0x30": "PARAM_2[12]",
                "PARAM_3 + 0x30": "PARAM_3[12]",
                "PARAM_1 + 4": "PARAM_1[4]",
                "PARAM_1 + 8": "PARAM_1[8]",
                "PARAM_2 + 4": "PARAM_2[4]",
                "PARAM_2 + 8": "PARAM_2[8]",
                "PARAM_2 + 12": "PARAM_2[12]",
                "PARAM_3 + 4": "PARAM_3[4]",
                "PARAM_3 + 8": "PARAM_3[8]",
                "PARAM_3 + 12": "PARAM_3[12]",
                "PARAM_5 + 4": "PARAM_5[4]",
                "PARAM_5 + 8": "PARAM_5[8]",
                "PARAM_5 + 12": "PARAM_5[12]"
            },
            "code": "void calculate_and_update_param_values_08004a84()\n{\n    // Calculate new values\n    int new_value = calculate_new_value_08002ec0();\n    int average_value = calculate_average_08002ed4();\n    int string_check = check_string_08002ee8_08002ee8();\n\n    // Update parameter values\n    update_data_if_needed_08004a30();\n    int input_null = is_input_null_08001064_08001064(PTR_DAT_08004bf0, 0);\n    if (input_null == 0) {\n        input_null = is_end_of_string_08001028(PTR_DAT_08004bf0, DAT_08004c00);\n    }\n    else {\n        input_null = is_input_null_08001064_08001064(PTR_DAT_08004bf0, DAT_08004bfc);\n    }\n    if (input_null == 0) {\n        input_null = is_input_null_08001064_08001064(PTR_DAT_08004bf4, 0);\n        if (input_null == 0) {\n            input_null = is_end_of_string_08001028(PTR_DAT_08004bf4, DAT_08004c00);\n        }\n        else {\n            input_null = is_input_null_08001064_08001064(PTR_DAT_08004bf4, DAT_08004bfc);\n        }\n        if (input_null == 0) {\n            // Set parameter values\n            set_param_values_08003f3c(1, 1);\n            calculate_hash(PTR_DAT_08004bf0);\n            calculate_hash(PTR_DAT_08004bf4);\n            calculate_hash(PTR_DAT_08004bf8);\n            if (PTR_DAT_08004c04[1] != 0) {\n                calculate_hash(PTR_DAT_08004c08);\n                int hash_value = FUNC_08000adc(PARAM_6, PARAM_DAT_08004c0c);\n                PARAM_6[12] = hash_value;\n            }\n            PARAM_6[12] = PTR_DAT_08004c04[4];\n            if (*PTR_DAT_08004c04 == 0) {\n                set_parameters_080041c4();\n            }\n            else {\n                set_parameters_080041c4(PARAM_6[12], PTR_DAT_08004bf0[12], PTR_DAT_08004bf4[12], PTR_DAT_08004bf8[12]);\n            }\n            FUNC_08000cec(PTR_DAT_08004bf0[4], STRING_4);\n            PTR_DAT_08004c14[3] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf0[8], DAT_08004c10);\n            PTR_DAT_08004c14[4] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf4[4], DAT_08004c10);\n            PTR_DAT_08004c14[0] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf4[8], DAT_08004c10);\n            PTR_DAT_08004c14[1] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf4[12], DAT_08004c10);\n            PTR_DAT_08004c14[2] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf8[4], DAT_08004c10);\n            PTR_DAT_08004c14[6] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf8[8], DAT_08004c10);\n            PTR_DAT_08004c14[7] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004bf8[12], DAT_08004c10);\n            PTR_DAT_08004c14[8] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004c08[4], DAT_08004c10);\n            PTR_DAT_08004c14[9] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004c08[8], DAT_08004c10);\n            PTR_DAT_08004c14[10] = validate_input_080010c4();\n            FUNC(PTR_DAT_08004c08[12], DAT_08004c10);\n            PTR_DAT_08004c14[11] = validate_input_080010c4();\n            PTR_DAT_08004c14[12] = validate_input_080010c4();\n            return;\n        }\n    }\n    // Default parameter values\n    set_parameters_080041c4();\n    set_param_values_08003f3c(0, 1);\n    return;\n}",
            "called": [
                "FUN_08000cec",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0",
                "FUN_08001028",
                "FUN_0800483c",
                "FUN_08004a30",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_080041c4",
                "FUN_0800426c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_and_update_param_values_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "set_parameters_080041c4",
                "param_1": "mem_param",
                "param_2": "global_param",
                "param_3": "mem_param2",
                "param_4": "param_4",
                "extraout_r1": "extraout_r1",
                "set_param_in_memory_08003fc4": "set_param_in_memory",
                "set_param_in_global_08003fd0": "set_param_in_global",
                "set_parameter_in_memory_08003fdc": "set_parameter_in_memory2",
                "set_param_08003fe8": "set_param"
            },
            "code": "void set_parameters_080041c4(undefined4 mem_param, undefined4 global_param, undefined4 mem_param2, undefined4 param_4) {\n  undefined4 extraout_r1;\n  set_param_in_memory_08003fc4(mem_param);\n  set_param_in_global_08003fd0(global_param);\n  set_parameter_in_memory_08003fdc(mem_param2);\n  set_param_08003fe8(param_4, extraout_r1, mem_param2, param_4);\n  return;\n}",
            "called": [
                "FUN_08003fd0",
                "FUN_08003fdc",
                "FUN_08003fc4",
                "FUN_08003fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "set_parameters_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = find_character_in_string_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = extract_data_from_param_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_08005614",
                "FUN_080052e4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "calculate_required_memory_size_080057d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result",
                "uVar2": "calculated_value"
            },
            "code": "uint calculate_required_memory_size_080057d0(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint result;\n  if (input_2 == 0)\n  {\n    result = calculate_required_mem_size_08005714(input_1, input_3, input_3, input_4);\n  }\n  else\n  {\n    if (input_3 == 0)\n    {\n      add_to_linked_list_0800567c();\n      result = input_3;\n    }\n    else\n    {\n      uint calculated_value = calculate_value_08005840();\n      result = input_2;\n      if ((calculated_value < input_3) && (result = calculate_required_mem_size_08005714(input_1, input_3, input_3, input_4), result != 0))\n      {\n        copy_array_08005630(result, input_2, input_3);\n        add_to_linked_list_0800567c(input_1, input_2);\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08005840",
                "FUN_08005630",
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "calculate_required_memory_size_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "add_to_linked_list_0800567c",
                "param_1": "head",
                "param_2": "size",
                "param_3": "value",
                "param_4": "unused",
                "puVar1": "pointer",
                "extraout_r1": "tail",
                "ppiVar2": "tail",
                "ppiVar3": "previous",
                "piVar4": "value_ptr",
                "ppiVar5": "ptr",
                "ppiVar6": "tail",
                "ppiVar7": "current"
            },
            "code": "void add_to_linked_list_0800567c(int **head, int size, int value, int unused) {\n  if (size == 0) {\n    return;\n  }\n  int **current = (int **)(size - 4);\n  if (*current < 0) {\n    current = (int **)((int)current + **current);\n  }\n  do_nothing_0800583c();\n  int **ptr = *(int ***)PTR_DAT_08005710;\n  if (ptr == (int **)0x0) {\n    current[1] = (int *)0x0;\n    *(int ***)PTR_DAT_08005710 = current;\n    int **tail = extraout_r1;\n    int **previous = (int **)PTR_DAT_08005710;\n  }\n  else if (current < ptr) {\n    int **previous = (int **)*current;\n    int **tail = (int **)((int)current + (int)previous);\n    if (ptr == tail) {\n      int *value_ptr = *ptr;\n      ptr = (int **)ptr[1];\n      tail = (int **)((int)value_ptr + (int)previous);\n      *current = (int *)tail;\n    }\n    current[1] = (int *)ptr;\n    *(int ***)PTR_DAT_08005710 = current;\n  }\n  else {\n    int **previous = ptr;\n    int **tail = ptr[1];\n    while (tail != (int **)0x0 && tail <= current) {\n      previous = tail;\n      tail = tail[1];\n    }\n    int **value_ptr = (int **)*previous;\n    if ((int **)((int)previous + (int)value_ptr) == current) {\n      value_ptr = (int **)((int)value_ptr + **current);\n      *previous = (int *)value_ptr;\n      if (tail == (int **)((int)previous + (int)value_ptr)) {\n        int *value_ptr_2 = *tail;\n        tail = (int **)tail[1];\n        value_ptr = (int **)((int)value_ptr + (int)value_ptr_2);\n        *previous = (int *)value_ptr;\n        previous[1] = (int *)tail;\n      }\n    }\n    else if (current < (int **)((int)previous + (int)value_ptr)) {\n      *head = 0xc;\n    }\n    else {\n      value_ptr = (int **)((int)current + **current);\n      if (tail == value_ptr) {\n        int *value_ptr_2 = *tail;\n        tail = (int **)tail[1];\n        value_ptr = (int **)((int)value_ptr_2 + **current);\n        *current = (int *)value_ptr;\n      }\n      current[1] = (int *)tail;\n      previous[1] = (int *)current;\n    }\n  }\n  do_nothing_0800583e(head, previous, tail, unused);\n  return;\n}",
            "called": [
                "FUN_0800583e",
                "FUN_0800583c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "add_to_linked_list_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  set_flag_and_update_data_08001128();\n  decode_and_process_peripherals_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  set_param_value_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  set_param_value_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  process_bits_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  process_bits_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = configure_device_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = set_params_and_decode_strings_in_loop_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = reset_device_state_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = process_input_params_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = set_parameters_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = set_flags_and_values_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = check_valid_input_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        process_bits_08001264_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = process_input_params_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = set_parameters_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = set_flags_and_values_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  process_bits_08001264_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = process_input_params_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = set_parameters_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = set_flags_and_values_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = set_flags_and_values_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          process_bits_08001264_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = process_input_params_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = set_parameters_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = set_flags_and_values_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = set_flags_and_values_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  process_bits_08001264_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001424",
                "FUN_080023d0",
                "FUN_080025a4",
                "FUN_08002564",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08004490",
                "FUN_08001128",
                "FUN_08001754",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_0800245c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08000110",
                "FUN_08000134",
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ee8",
                "FUN_08002cb0",
                "FUN_0800411c",
                "FUN_08002ec0",
                "FUN_08004a84",
                "FUN_0800426c",
                "FUN_08003330",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "concatenate_44_bits_08000ffc",
                "param_1": "first_param",
                "param_2": "second_param",
                "concatenate_44_bits_08001004": "concatenate_44_bits_08001004"
            },
            "code": "void concatenate_44_bits_08000ffc(undefined4 first_param, undefined4 second_param)\n{\n\tconcatenate_44_bits_08000ffc_08001004(second_param, first_param);\n\treturn;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001064",
                "FUN_08001050"
            ],
            "imported": false,
            "current_name": "concatenate_44_bits_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_flag_080016f4",
                "param_1": "flag_ptr",
                "param_2": "flag_len",
                "iVar1": "start_value",
                "iVar2": "flag_val"
            },
            "code": "int check_flag_080016f4(int *flag_ptr, uint flag_len) {\n  int start_value = get_start_value();\n  while (true) {\n    int flag_val = *flag_ptr;\n    if ((*(uint *)(flag_val + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(flag_val + 0x14) << 0x1b < 0) {\n      if ((flag_len == 0) || (flag_val = get_start_value(), flag_len < (uint)(flag_val - start_value))) {\n        flag_ptr[0xe] |= 0x20;\n        *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n        *(undefined *)(flag_ptr + 0xd) = 0;\n        return 3;\n      }\n    } else {\n      *(uint *)(flag_val + 0x14) &= 0xffffffef;\n      flag_ptr[0xe] = 0;\n      *(undefined *)(flag_ptr + 0xd) = 0;\n      *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n      return 1;\n    }\n  }\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_flag_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "set_parameters_080025a4",
                "param_1": "params",
                "param_2": "values",
                "uVar1": "value1",
                "uVar2": "return_value",
                "iVar3": "param1",
                "uVar4": "value2"
            },
            "code": "int set_parameters_080025a4(int *params, uint *values) {\n    uint value1 = values[0];\n    uint value2 = values[1];\n    int return_value = 2;\n    if (*(char *)(params + 0xe) != '\\x01') {\n        *(undefined *)((int)params + 0x39) = 2;\n        int param1 = *params;\n        *(uint *)(param1 + 4) = *(uint *)(param1 + 4) & 0xffffff8f;\n        *(uint *)(param1 + 4) = *(uint *)(param1 + 4) | value1;\n        *(uint *)(param1 + 8) = *(uint *)(param1 + 8) & 0xffffff7f;\n        *(uint *)(param1 + 8) = *(uint *)(param1 + 8) | value2;\n        *(undefined *)((int)params + 0x39) = 1;\n        return_value = 0;\n        *(undefined *)(params + 0xe) = 0;\n    }\n    return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_parameters_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_08005714",
                "FUN_0800567c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUN_08002220": "count_leading_zeroes_of_0xe00000_08002220",
                "uVar1": "leading_zeroes",
                "PTR_DAT_0800224c": "ptr_dat_0800224c",
                "PTR_DAT_08002248": "ptr_dat_08002248",
                "DAT_08002244": "dat_08002244"
            },
            "code": "uint count_leading_zeroes_of_0xe00000_08002220(void)\n{\n  uint leading_zeroes;\n  leading_zeroes = count_leading_zeroes(0xe00000);\n  uint index = (*(uint *)PTR_DAT_0800224c) >> (PTR_DAT_08002248[(*(uint *)(DAT_08002244 + 4) & 0x700) >> (leading_zeroes & 0xff)]);\n  return index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_080025e8",
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_of_0xe00000_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "decode_and_concat_params_08003034",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "local_c": "decoded_params"
            },
            "code": "uint decode_and_concat_params_08003034(uint param_1, uint param_2, uint param_3, uint param_4)\n{\n  uint decoded_params;\n  decoded_params = param_4;\n  decode_strings_and_set_params(0xee, 0, &decoded_params, 3, PTR_s____Src_MS5611_c_08003064, 0x8c, param_3);\n  return (uint)CONCAT12((undefined)decoded_params, CONCAT11(decoded_params._1_1_, decoded_params._2_1_));\n}",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "decode_and_concat_params_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "process_data_08004e7c",
                "param_1": "data_ptr",
                "DAT_08004edc": "magic_number",
                "*(uint *)(DAT_08004edc + 0xd818)": "bit_array",
                "local_18": "bits_1",
                "local_14": "bits_2",
                "local_10": "bits_3",
                "DAT_08004ee0": "data_array",
                "process_bits_08001264": "process_bits",
                "encode_data_08001194": "encode_data",
                "set_bit_in_array_080011fc": "set_bit_in_array"
            },
            "code": "void process_data_08004e7c(int *data_ptr) {\n  uint32_t DAT_08004edc = 0x08004edc;\n  if (*data_ptr == DAT_08004edc) {\n    uint32_t **(uint *)(DAT_08004edc + 0xd818) = (uint32_t *)(DAT_08004edc + 0xd818);\n    **(uint *)(DAT_08004edc + 0xd818) |= 0x4000;\n    uint32_t bits_1 = 0x200;\n    uint32_t bits_2 = 2;\n    uint32_t bits_3 = 3;\n    process_bits_08001264(DAT_08004ee0, &bits_1);\n    bits_1 = 0x400;\n    bits_2 = 0;\n    bits_3 = 0;\n    process_bits_08001264(DAT_08004ee0, &bits_1);\n    encode_data_08001194(0x25, 0, 0);\n    set_bit_in_array_080011fc(0x25);\n  }\n  return;\n}",
            "called": [
                "FUN_08001194",
                "FUN_080011fc",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "process_data_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "process_data_08001530",
                "param_1": "data_ptr",
                "param_2": "data_1",
                "param_3": "data_2",
                "param_4": "flag",
                "param_5": "data_3",
                "iVar1": "value_1",
                "iVar2": "value_2",
                "puVar3": "data",
                "ppuVar4": "data_pptr",
                "uVar5": "value_2",
                "uVar6": "value_3",
                "check_value_08001460": "check_value",
                "check_if_flag_is_set_080014e2": "check_if_flag_is_set"
            },
            "code": "int process_data_08001530(uint **data_ptr, uint data_1, uint data_2, int flag, uint data_3) {\n  int result = 0;\n  int value_1 = 0;\n  uint *data = *data_ptr;\n  uint **data_pptr = data_ptr;\n  uint value_2 = data_1;\n  uint value_3 = data_2;\n  int value_4 = get_value_from_pointer_0800115c();\n  do {\n    uint *sub_data = *data_ptr;\n    do {\n      if ((int)(sub_data[5] << 0x1f) < 0) {\n        sub_data[4] = data_1 & 0xfe;\n        value_4 = check_value(data_ptr, DAT_080015e4, data_3, sub_data, data_pptr, value_2, value_3);\n        if (value_4 == 0) {\n          value_4 = check_if_flag_is_set(data_ptr, data_3, (*data_ptr)[5], (*data_ptr)[6]);\n          if (value_4 == 0) {\n            sub_data = *data_ptr;\n            if (flag == 1) {\n              sub_data[4] = data_2 & 0xff;\n              return value_4;\n            }\n            sub_data[4] = data_2 >> 8;\n            value_4 = check_if_flag_is_set(data_ptr, data_3);\n            if (value_4 == 0) {\n              sub_data = *data_ptr;\n              sub_data[4] = data_2 & 0xff;\n              return value_4;\n            }\n          }\n          if (data_ptr[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **data_ptr = **data_ptr | 0x200;\n        }\n        else if (data_ptr[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (data_3 == 0xffffffff);\n    if ((data_3 == 0) || (value_1 = get_value_from_pointer_0800115c(), data_3 < (uint)(value_1 - value_4))) {\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 3;\n    }\n  } while(true);\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "process_data_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_parameter_value_08003314",
                "param_1": "value",
                "PTR_DAT_0800331c": "PTR_PARAMETER_ADDRESS"
            },
            "code": "void set_parameter_value_08003314(undefined4 value)\n{\n  *(undefined4 *)PTR_DAT_0800331c = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_parameter_value_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "reversed_and_improved": "reversed_and_improved",
                "param_1": "input1",
                "param_2": "input2",
                "puVar1": "pointer1",
                "iVar2": "integer1",
                "puVar3": "pointer2",
                "piVar4": "pointer3",
                "uVar5": "returnValue1",
                "uVar6": "returnValue2",
                "local_48": "localVariable1",
                "local_44": "localVariable2",
                "local_40": "localVariable3",
                "uStack_3c": "stackVariable1",
                "local_38": "localVariable4",
                "uStack_34": "stackVariable2",
                "local_30": "localVariable5",
                "local_28": "localVariable6",
                "FUN_08005854": "reversed_and_improved_08005854"
            },
            "code": "undefined8 reversed_and_improved_08005854(undefined4 input1,undefined4 input2)\n{\n  undefined *pointer1;\n  int integer1;\n  undefined4 *pointer2;\n  int *pointer3;\n  undefined8 returnValue1;\n  undefined8 returnValue2;\n  undefined4 localVariable1;\n  undefined *localVariable2;\n  undefined4 localVariable3;\n  undefined4 stackVariable1;\n  undefined4 localVariable4;\n  undefined4 stackVariable2;\n  undefined8 localVariable5;\n  int localVariable6;\n  \n  returnValue1 = FUNC_08005c70();\n  pointer1 = PTR_DAT_080058f8;\n  if (*PTR_DAT_080058f8 == -1) {\n    return returnValue1;\n  }\n  localVariable6 = is_valid_input_08000a04(input1, input2, input1, input2);\n  if (localVariable6 != 0) {\n    return returnValue1;\n  }\n  returnValue2 = do_nothing_0800708c(input1, input2);\n  integer1 = is_input_null_080009f0_080009f0((int)returnValue2, (int)((ulonglong)returnValue2 >> 0x20), 0, DAT_080058ec);\n  if (integer1 == 0) {\n    return returnValue1;\n  }\n  localVariable1 = 1;\n  localVariable2 = PTR_DAT_080058f0;\n  localVariable3 = input1;\n  stackVariable1 = input2;\n  localVariable4 = input1;\n  stackVariable2 = input2;\n  localVariable5 = shift_left_32_bits_080070a4(PTR_DAT_080058f4);\n  if (*pointer1 != '\\x02') {\n    integer1 = return_zero_0800709e(&localVariable1);\n    if (integer1 != 0) goto LAB_080058d0;\n  }\n  pointer2 = (undefined4 *)get_value_from_pointer_to_pointer_080072ac();\n  *pointer2 = 0x21;\nLAB_080058d0:\n  if (localVariable6 != 0) {\n    pointer3 = (int *)get_value_from_pointer_to_pointer_080072ac();\n    *pointer3 = localVariable6;\n  }\n  return localVariable5;\n}",
            "called": [
                "FUN_08000a04",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_080070a4",
                "FUN_080009f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "reversed_and_improved_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_0800411c",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "check_if_concatenated_string_not_empty_08001014",
                "in_ZR": "concatenated_string"
            },
            "code": "bool check_if_concatenated_string_not_empty_08001014(void)\n{\n  char concatenated_string[6];\n  concatenate_44_bits(concatenated_string);\n  return concatenated_string[0] != '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "check_if_concatenated_string_not_empty_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "shifted_second_param",
                "iVar2": "shifted_sum",
                "uVar3": "var1",
                "uVar4": "var2",
                "uVar5": "high_bits",
                "uVar6": "result"
            },
            "code": "ulonglong calculate_result_080071c0(uint first_param, uint second_param, int third_param, undefined4 fourth_param) {\n  ulonglong result = CONCAT44(second_param, first_param);\n  uint shifted_second_param = (second_param << 1) >> 0x15;\n  if (shifted_second_param == 0) {\n    if ((second_param & 0x7fffffff | first_param) == 0) {\n      return result;\n    }\n    result = call_function_080004d0(first_param, second_param, 0, DAT_08007290);\n    undefined4 var1 = DAT_08007280;\n    undefined4 var2 = DAT_08007284;\n    if (third_param < DAT_08007294) goto LAB_0800722e;\n    shifted_second_param = ((uint)((int)(result >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_second_param == 0x7ff) {\n    result = call_function_0800016c(first_param, second_param, first_param, second_param, fourth_param);\n    return result;\n  }\n  uint high_bits = (uint)(result >> 0x20);\n  int shifted_sum = shifted_second_param + third_param;\n  if (shifted_sum < 0x7ff) {\n    if (0 < shifted_sum) {\n      return result & 0xffffffff | (ulonglong)(high_bits & 0x800fffff | shifted_sum * 0x100000) << 0x20;\n    }\n    if (shifted_sum + 0x35 < 0 == SCARRY4(shifted_sum,0x35)) {\n      result = result & 0xffffffff |\n              (ulonglong)(high_bits & 0x800fffff | (shifted_sum + 0x36) * 0x100000) << 0x20;\n      var1 = 0;\n      var2 = DAT_08007298;\n      goto LAB_0800722e;\n    }\n    if (third_param < 0xc351) {\n      result = do_nothing_0800729c(DAT_08007280,DAT_08007284,(int)result,high_bits);\n      var1 = DAT_08007280;\n      var2 = DAT_08007284;\n      goto LAB_0800722e;\n    }\n  }\n  result = do_nothing_0800729c(DAT_08007288,DAT_0800728c,(int)result,high_bits);\n  var1 = DAT_08007288;\n  var2 = DAT_0800728c;\nLAB_0800722e:\n  result = call_function_080004d0((int)result,(int)(result >> 0x20),var1,var2);\n  return result;\n}",
            "called": [
                "FUN_0800729c",
                "FUN_080004d0",
                "FUN_0800016c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_character_in_string_08005614",
                "param_1": "str",
                "param_2": "target",
                "param_3": "str_len",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char* find_character_in_string_08005614(char* str, char target, int str_len) {\n  char* current_char = str;\n  while (current_char != str + str_len) {\n    if (*current_char == target) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_character_in_string_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = calculate_result_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08006070",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08005900",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08003330",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_32_bits_080070a4",
                "DAT_080070ac": "*data_ptr"
            },
            "code": "unsigned long long shift_left_32_bits_080070a4(unsigned int DAT_080070ac)\n{\n  unsigned long long shifted_value = (unsigned long long)(DAT_080070ac) << 0x20;\n  return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08006228",
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "shift_left_32_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "set_params_and_decode_strings_in_loop_08004490_0800407c",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "function_return_value",
                "local_14": "local_array"
            },
            "code": "undefined set_params_and_decode_strings_in_loop_08004490_0800407c(undefined4 input_param_1, undefined4 input_param_2){\n  int return_value = 0;\n  undefined local_array[8] = {0};\n  int function_return_value = FUNC_08001938(PTR_DAT_080040b4, input_param_1, input_param_2, 1, local_array, 1, 200);\n  if(function_return_value != 0){\n    return_value = local_array[0];\n    set_params_and_decode_strings_in_loop_08004490_0800407c(input_param_3, input_param_4);\n  }\n  return return_value;\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_080040e8",
                "FUN_08002ad0",
                "FUN_08002d88"
            ],
            "imported": false,
            "current_name": "set_params_and_decode_strings_in_loop_08004490_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = get_value_from_pointer_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = set_flag_and_check_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = check_flag_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = check_flag_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = get_value_from_pointer_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = get_value_from_pointer_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = get_value_from_pointer_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = get_value_from_pointer_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080016f4",
                "FUN_0800115c",
                "FUN_080015e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    decode_strings_and_calculate_hash_08002f28();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    calculate_and_update_param_values_08004a84();\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    decode_and_xor_08004348();\n    decode_and_xor_08004384();\n    decode_and_xor_080043f0();\n    decode_and_xor_08004410();\n    decode_and_xor_08004434();\n    decode_and_xor_080043bc();\n    decode_and_xor_08004300_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = calculate_hash_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = calculate_hash_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = reverse_bits_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = calculate_float_value_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = convert_to_int32_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    process_and_decode_data_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = decode_and_concat_params_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    process_and_decode_data_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_get_value_from_pointer_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_get_value_from_pointer_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = decode_and_concat_params_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "thunk_FUN_0800115c",
                "FUN_08004434",
                "FUN_08003034",
                "FUN_08000adc",
                "FUN_080043bc",
                "FUN_08001078",
                "FUN_08000c44",
                "FUN_08004384",
                "FUN_08000a30",
                "FUN_0800403c",
                "FUN_08000168",
                "FUN_08004458",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08005900",
                "FUN_08004a84",
                "FUN_08004410",
                "FUN_08000e54",
                "FUN_08000428",
                "FUN_08004348",
                "FUN_08002f28"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_parameters_080022d0",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "param2[0]",
                "mask1": "0xfffffeff",
                "mask2": "0xfffffdff",
                "mask3": "0xfffff7ff",
                "mask4": "0xfffffbff",
                "shift1": "8",
                "shift2": "4"
            },
            "code": "void update_parameters_080022d0(int param1, uint *param2) {\n    uint mask1 = 0xfffffeff;\n    uint mask2 = 0xfffffdff;\n    uint mask3 = 0xfffff7ff;\n    uint mask4 = 0xfffffbff;\n    uint shift1 = 8;\n    uint shift2 = 4;\n    uint value1 = ((param2[2] << shift1) & mask2) | (param1 == DAT_08002320 ? ((param2[3] << shift1) & mask3) : 0) | ((*(uint *)(param1 + 0x20) & mask2));\n    uint value2 = ((param2[5] | param2[6]) << shift2) | (*(uint *)(param1 + 4) & mask4);\n    *(uint *)(param1 + 0x20) = value1;\n    *(uint *)(param1 + 4) = value2;\n    *(uint *)(param1 + 0x1c) = (*(uint *)(param1 + 0x1c) & 0xffffff8c) | (*param2);\n    *(uint *)(param1 + 0x3c) = param2[1];\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_parameters_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "validate_input_080010c4",
                "param_1": "input",
                "uVar1": "shift_result",
                "is_negative": "is_negative",
                "is_valid": "is_valid",
                "shift_amount": "shift_amount",
                "result": "result"
            },
            "code": "uint validate_input_080010c4(uint input) {\n  uint result;\n  bool is_negative = (input & 0x80000000) != 0;\n  bool is_valid = (input << 1) < 0x7f000000;\n  if (is_negative || !is_valid) {\n    return 0;\n  }\n  uint shift_amount = (input << 1) >> 0x18;\n  uint shift_result = 0x9e - shift_amount;\n  if ((int)shift_result >= 0) {\n    result = (input << 8 | 0x80000000) >> (shift_result & 0xff);\n  }\n  else if (shift_result == 0xffffff9f && (input & 0x7fffff) != 0) {\n    result = 0;\n  }\n  else {\n    result = 0xffffffff;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "validate_input_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "decode_strings_and_set_params_080040b8",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "param_5": "fifth_param",
                "param_6": "sixth_param",
                "success": "success",
                "PTR_DAT_080040e4": "PTR_DAT_080040e4",
                "set_params_and_decode_strings_in_loop_08004490": "set_params_and_decode_strings_in_loop_08004490"
            },
            "code": "void decode_strings_and_set_params_080040b8(int param_1, int param_2, int param_3, int param_4, int param_5, int param_6)\n{\n  int success = FUNC_08001938(PTR_DAT_080040e4, param_1, param_2, 1, param_3, param_4, 200, param_4);\n  if (success)\n  {\n    set_params_and_decode_strings_in_loop_08004490(param_5, param_6);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "decode_strings_and_set_params_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "set_flags_and_values_0800245c",
                "param_1": "values",
                "param_2": "N/A",
                "param_3": "N/A",
                "extraout_r1": "extraout_r1",
                "extraout_r1_00": "extraout_r1_00",
                "extraout_r1_01": "extraout_r1_01",
                "extraout_r1_02": "extraout_r1_02",
                "iVar1": "values_ptr_2",
                "iVar3": "values_ptr",
                "uVar2": "uVar2"
            },
            "code": "void set_flags_and_values_0800245c(int* values)\n{\n    int extraout_r1;\n    int extraout_r1_00;\n    int extraout_r1_01;\n    int extraout_r1_02;\n    int values_ptr = *values;\n    uint uVar2;\n    int iVar3;\n\n    if (*(char *)(values + 0xe) == '\\x01') {\n        return;\n    }\n    *(undefined *)((int)values + 0x39) = 2;\n    *(undefined *)(values + 0xe) = 1;\n    switch(values[2]) {\n        case 0:\n            set_flags_and_values_0800245c_08002280(values_ptr);\n            iVar3 = values_ptr;\n            uVar2 = *(uint *)(extraout_r1 + 0x10);\n            *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n            *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) & 0xfffffffb;\n            uVar2 = *(uint *)(iVar3 + 0x18) | uVar2;\n            break;\n        default:\n            goto switchD_0800247a_caseD_1;\n        case 4:\n            set_flags_and_values_0800245c_08002404(values_ptr);\n            iVar3 = values_ptr;\n            int values_ptr_2 = *(int *)(extraout_r1_00 + 0x10);\n            *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 0x800;\n            *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) & 0xfffffbff;\n            uVar2 = *(uint *)(iVar3 + 0x18) | values_ptr_2 << 8;\n            break;\n        case 8:\n            update_parameters_080022d0(values_ptr);\n            iVar3 = values_ptr;\n            uVar2 = *(uint *)(extraout_r1_01 + 0x10);\n            *(uint *)(iVar3 + 0x1c) = *(uint *)(iVar3 + 0x1c) | 8;\n            *(uint *)(iVar3 + 0x1c) = *(uint *)(iVar3 + 0x1c) & 0xfffffffb;\n            uVar2 = *(uint *)(iVar3 + 0x1c) | uVar2;\n            goto LAB_080024fa;\n        case 0xc:\n            set_flags_and_values_0800245c_08002324(values_ptr);\n            iVar3 = values_ptr;\n            int values_ptr_3 = *(int *)(extraout_r1_02 + 0x10);\n            *(uint *)(iVar3 + 0x1c) = *(uint *)(iVar3 + 0x1c) | 0x800;\n            *(uint *)(iVar3 + 0x1c) = *(uint *)(iVar3 + 0x1c) & 0xfffffbff;\n            uVar2 = *(uint *)(iVar3 + 0x1c) | values_ptr_3 << 8;\n            break;\n    }\n    *(uint *)(iVar3 + 0x18) = uVar2;\n    switchD_0800247a_caseD_1:\n    *(undefined *)((int)values + 0x39) = 1;\n    *(undefined *)(values + 0xe) = 0;\n    return;\n}",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002280",
                "FUN_08002404"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "set_params_and_decode_strings_in_loop_08004490",
                "param_1": "param_value_1",
                "param_2": "param_value_2"
            },
            "code": "void set_params_and_decode_strings_in_loop_08004490(undefined4 param_value_1,undefined4 param_value_2)\n{\n  undefined4 params_ptr;\n  undefined *error_string_ptr;\n  undefined *line_string_ptr;\n  set_param_value_08001424(params_ptr,0x4000,1);\n  set_param_value_08001424(params_ptr,0x8000,0);\n  set_param_value_08001424(params_ptr,0x2000,0);\n  error_string_ptr = PTR_s_Error_with_08004510;\n  line_string_ptr = PTR_s__at_line__0800450c;\n  do {\n    xor_param_with_ptr_0800142e(params_ptr,0x4000);\n    xor_param_with_ptr_0800142e(params_ptr,0x8000);\n    xor_param_with_ptr_0800142e(params_ptr,0x2000);\n    decode_string_in_array_08004c8c(error_string_ptr);\n    decode_string_in_array_08004c8c(param_value_1);\n    decode_string_in_array_08004c8c(line_string_ptr);\n    decode_and_clear_string_in_array_08004cac(param_value_2);\n    decode_string_08004c18(10);\n    thunk_do_nothing_08001168(500);\n  } while( true );\n}",
            "called": [
                "FUN_08001424",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08004c18",
                "FUN_08004cac",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_0800403c",
                "FUN_080040b8",
                "FUN_0800458c",
                "FUN_0800407c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "set_params_and_decode_strings_in_loop_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800411c",
                "FUN_08002f28",
                "FUN_08003330",
                "FUN_0800483c"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "set_flag_and_check_080015e8",
                "param_1": "flag_ptr",
                "param_2": "flag_value_1",
                "param_3": "flag_value_2",
                "param_4": "flag_check",
                "param_5": "max_value",
                "puVar3": "flag",
                "ppuVar4": "flag_ptr",
                "uVar5": "value_2",
                "uVar6": "value_3",
                "iVar1": "value_1",
                "iVar2": "value_4",
                "flag_5": "flag_5"
            },
            "code": "uint32_t set_flag_and_check_080015e8(uint32_t **flag_ptr, uint32_t flag_value_1, uint32_t flag_value_2, int flag_check, uint32_t max_value)\\n\\\n{\\n\\\n  int value_1 = get_value_from_pointer_0800115c();\\n\\\n  uint32_t *flag = *flag_ptr;\\n\\\n  *flag |= 0x400;\\n\\\n  *flag |= 0x100;\\n\\\n  uint32_t value_2 = flag_value_1;\\n\\\n  uint32_t value_3 = flag_value_2;\\n\\\n  uint32_t flag_5 = flag[5];\\n\\\n  while (-1 < (int)(flag_5 << 0x1f)) {\\n\\\n    if (max_value != 0xffffffff) {\\n\\\n      if (max_value == 0) {\\n\\\n        *(char *)((int)flag_ptr + 0x35) = 0x20;\\n\\\n        *(undefined4 *)(flag_ptr + 0xd) = 0;\\n\\\n        return 3;\\n\\\n      }\\n\\\n      int value_4 = get_value_from_pointer_0800115c();\\n\\\n      if ((uint32_t)(value_4 - value_1) > max_value) {\\n\\\n        *(char *)((int)flag_ptr + 0x35) = 0x20;\\n\\\n        *(undefined4 *)(flag_ptr + 0xd) = 0;\\n\\\n        return 3;\\n\\\n      }\\n\\\n    }\\n\\\n  }\\n\\\n  flag[4] = flag_value_1 & 0xfe;\\n\\\n  if (check_value_08001460(flag_ptr, DAT_080016f0, max_value, flag, flag_ptr, value_2, value_3) != 0) {\\n\\\n    if (flag_check != 1) {\\n\\\n      flag[4] = flag_value_2 >> 8;\\n\\\n      if (check_if_flag_is_set_080014e2(flag_ptr, max_value) == 0) {\\n\\\n        flag[4] = flag_value_2 & 0xff;\\n\\\n        if (check_if_flag_is_set_080014e2(flag_ptr, max_value) == 0) {\\n\\\n          **flag_ptr |= 0x100;\\n\\\n          int value_5 = get_value_from_pointer_0800115c();\\n\\\n          do {\\n\\\n            do {\\n\\\n              flag_5 = (*flag_ptr)[5];\\n\\\n              if ((int)(flag_5 << 0x1f) < 0) {\\n\\\n                flag[4] = flag_value_1 & 0xff | 1;\\n\\\n                if (check_value_08001460(flag_ptr, DAT_080016f0, max_value) == 0) {\\n\\\n                  return 0;\\n\\\n                }\\n\\\n                if (flag_ptr[0xe] != (uint32_t *)0x4) {\\n\\\n                  return 3;\\n\\\n                }\\n\\\n                return 1;\\n\\\n              }\\n\\\n            } while (max_value == 0xffffffff);\\n\\\n          } while ((max_value != 0) && ((uint32_t)(get_value_from_pointer_0800115c() - value_5) <= max_value));\\n\\\n          *(char *)((int)flag_ptr + 0x35) = 0x20;\\n\\\n          *(undefined4 *)(flag_ptr + 0xd) = 0;\\n\\\n          return 3;\\n\\\n        }\\n\\\n      }\\n\\\n    }\\n\\\n    if (flag_ptr[0xe] == (uint32_t *)0x4) {\\n\\\n      **flag_ptr |= 0x200;\\n\\\n      return 1;\\n\\\n    }\\n\\\n    return 3;\\n\\\n  }\\n\\\n  return 0;\\n\\\n}",
            "called": [
                "FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "set_flag_and_check_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "process_bits_08001264_08004e14",
                "param_1": "data",
                "param_2": "data_length",
                "param_3": "bit_count",
                "*param_1": "*data",
                "uVar1": "mask_value",
                "iVar2": "data_value",
                "local_18": "mask",
                "local_14": "end_bit",
                "uStack_10": "bit_index",
                "local_c": "start_bit"
            },
            "code": "void process_bits_08001264_08004e14(int *data, int data_length, int bit_count) {\n    int data_value = *data;\n    int mask;\n    if (data_value == PTR_DAT_08004e68) {\n        mask = 0x800;\n    }\n    else if (data_value == 0x40000000) {\n        mask = 2;\n    }\n    else {\n        if (data_value == PTR_DAT_08004e70) {\n            mask = 3;\n        }\n        else {\n            if (data_value != PTR_DAT_08004e78) {\n                return;\n            }\n            mask = 0x300;\n        }\n    }\n    int start_bit = 2;\n    int end_bit = 2;\n    int bit_index = bit_count;\n    apply_mask(PTR_DAT_08004e6c, &mask);\n}\n",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_bits_08001264_08004e14"
        }
    },
    "used_tokens": 150444,
    "layers": [
        [
            "FUN_080009a0",
            "FUN_08000980",
            "FUN_08004a30",
            "FUN_08004c70",
            "FUN_080014e2",
            "FUN_080009b4",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080025e8",
            "FUN_080009c8",
            "FUN_08006070",
            "FUN_08004c18",
            "FUN_08001460",
            "FUN_08001104",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003f3c",
            "FUN_08001004",
            "FUN_080041c4",
            "FUN_080016f4",
            "FUN_08004e7c",
            "FUN_0800245c",
            "FUN_08004e14"
        ],
        [
            "FUN_08001028",
            "FUN_0800290c",
            "FUN_08005bc8",
            "FUN_0800209c",
            "FUN_08004c8c",
            "FUN_08001754",
            "FUN_08002724",
            "FUN_08005714",
            "FUN_080009f0",
            "FUN_08003ff4",
            "FUN_08001128",
            "FUN_08000ffc",
            "FUN_08001530",
            "FUN_08001014",
            "FUN_080015e8"
        ],
        [
            "FUN_08001828",
            "FUN_08004300",
            "FUN_08004028",
            "FUN_0800299a",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_080057d0",
            "FUN_08005854"
        ],
        [
            "FUN_08004384",
            "FUN_08004ffc",
            "FUN_0800483c",
            "FUN_08005044"
        ],
        [
            "FUN_08004cac",
            "FUN_08004a84"
        ],
        [
            "FUN_08004490"
        ],
        [
            "FUN_0800403c",
            "FUN_08004514",
            "FUN_0800407c",
            "FUN_080040b8"
        ],
        [
            "FUN_080040e8",
            "FUN_08002ad0",
            "FUN_08003034"
        ],
        [
            "FUN_08002ea0",
            "FUN_08002f28"
        ],
        [
            "FUN_08004194"
        ],
        [
            "FUN_080041ae"
        ],
        [
            "FUN_08004f68"
        ],
        [
            "FUN_08002250"
        ],
        [
            "FUN_08005854"
        ]
    ],
    "locked_functions": []
}