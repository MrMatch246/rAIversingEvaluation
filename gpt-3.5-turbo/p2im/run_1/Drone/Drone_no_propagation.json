{
    "functions": {
        "FUN_080050fc": {
            "renaming": {
                "FUN_080050fc": "convert_format_string_to_output_string_080050fc",
                "param_1": "output_string",
                "param_2": "conversion_specs",
                "param_3": "format_string",
                "param_4": "num_converted_chars",
                "puVar1": "next_flag_ptr",
                "iVar2": "num_chars_converted",
                "iVar3": "temp_int",
                "puVar4": "arg_ptr",
                "piVar5": "arg_list_ptr",
                "bVar6": "found_digit",
                "pbVar7": "current_char_ptr",
                "pbVar8": "next_char_ptr",
                "unaff_r9": "arg_ptr_2",
                "local_8c": "arg_list_ptr_2",
                "local_88": "conversion_spec_flags",
                "local_84": "precision",
                "local_80": "length_modifier",
                "local_7c": "field_width",
                "local_74": "total_converted_chars",
                "local_70": "specifier",
                "local_6f": "space_flag",
                "local_6e": "plus_flag",
                "local_45": "sign_char",
                "local_30": "zero_flag"
            },
            "code": "int convert_format_string_to_output_string_080050fc(undefined4 *output_string, int *conversion_specs, byte *format_string, int *num_converted_chars)\n{\n    undefined *next_char;\n    int total_converted_chars = 0;\n    int flags = 0;\n    int field_width = -1;\n    int precision = 0;\n    int length_modifier = 0;\n    byte specifier;\n    undefined *arg;\n    int *arg_list = num_converted_chars;\n    uint conversion_spec_flags;\n    byte current_char;\n    while (true) {\n        next_char = format_string;\n        while (*next_char != 0 && *next_char != 0x25) {\n            next_char++;\n        }\n        if (next_char != format_string) {\n            int num_chars_converted = convert_string(output_string, conversion_specs, format_string, (int)next_char - (int)format_string);\n            if (num_chars_converted == -1) {\n                if ((int)((uint)*(ushort *)(conversion_specs + 3) << 0x19) < 0) {\n                    return -1;\n                }\n                return total_converted_chars;\n            }\n            total_converted_chars += num_chars_converted;\n        }\n        if (*next_char == 0) {\n            if ((int)((uint)*(ushort *)(conversion_specs + 3) << 0x19) < 0) {\n                return -1;\n            }\n            return total_converted_chars;\n        }\n        conversion_spec_flags = 0;\n        arg = next_char + 1;\n        while (true) {\n            int flag_index = get_flag_index(*arg);\n            byte *length_modifier_ptr = &LENGTH_MODIFIERS[flag_index];\n            if (flag_index == 0) {\n                break;\n            }\n            conversion_spec_flags |= 1U << (flag_index - (int)FLAGS & 0xffU);\n            arg++;\n            if (*length_modifier_ptr != 0) {\n                length_modifier = *length_modifier_ptr;\n                arg++;\n            }\n        }\n        specifier = *arg;\n        arg++;\n        current_char = specifier;\n        int specifier_index = get_specifier_index(current_char);\n        if (specifier_index == 0) {\n            arg--;\n            specifier_index = 11;\n        }\n        if (specifier_index < 7) {\n            arg = get_arg(&conversion_spec_flags, conversion_specs, specifier_index, arg_list, &field_width, &precision, &length_modifier, arg);\n        }\n        else {\n            if (specifier_index == 7) {\n                arg = get_float_arg(&conversion_spec_flags, conversion_specs, &field_width, &precision, arg);\n            }\n            else {\n                arg = get_string_arg(&conversion_spec_flags, conversion_specs, &field_width, arg);\n            }\n        }\n        if (arg == (undefined *)0xffffffff) {\n            return -1;\n        }\n        int num_chars_converted = convert_arg(output_string, &conversion_spec_flags, conversion_specs, specifier_index, arg, field_width, precision, length_modifier);\n        if (num_chars_converted == -1) {\n            return -1;\n        }\n        total_converted_chars += num_chars_converted;\n        format_string = arg;\n    }\n}\n",
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005614",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080050fc",
            "calling": [
                "FUN_08004ffc"
            ],
            "imported": false,
            "current_name": "convert_format_string_to_output_string_080050fc"
        },
        "FUN_08003320": {
            "renaming": {
                "FUN_08003320": "set_ptr_dat_value_08003320",
                "param_1": "new_value",
                "PTR_DAT_08003328": "PTR_DAT"
            },
            "code": "void set_ptr_dat_value_08003320(void* new_value)\n{\n  *(void**)PTR_DAT_08003328_08003328 = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003320",
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "set_ptr_dat_value_08003320"
        },
        "FUN_08004410": {
            "renaming": {
                "FUN_08004410": "send_data_to_device_08004410",
                "param_1": "data_address",
                "param_2": "data_size",
                "param_3": "data_value",
                "local_10": "data_start_address",
                "local_c": "data_masked_size",
                "uStack_8": "data_to_send"
            },
            "code": "void send_data_to_device_08004410(uint32_t data_address, uint32_t data_size, uint32_t data_value)\n{\n  uint32_t data_start_address = *(uint32_t *)PTR_DAT_08004430;\n  uint32_t data_masked_size = data_size & 0xffff0000 | (uint32_t)*(uint16_t *)(PTR_DAT_08004430 + 4);\n  uint32_t data_to_send = data_value;\n  send_message_to_device(0x6c, &data_start_address, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004410",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_device_08004410"
        },
        "FUN_08001264": {
            "renaming": {
                "FUN_08001264": "FUNC_08001264"
            },
            "code": "\nvoid FUNC_08001264(uint *param_1,uint *param_2)\n\n{\n  uint *puVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint *unaff_r10;\n  int iVar11;\n  \n  uVar3 = DAT_08001418;\n  uVar2 = DAT_08001414;\n  puVar1 = DAT_08001404;\n  uVar4 = 0;\n  uVar8 = 0;\n  do {\n    uVar9 = 1 << (uVar8 & 0xff);\n    uVar5 = uVar9 & *param_2;\n    if (uVar9 == uVar5) {\n      uVar6 = param_2[1];\n      if (uVar6 == 0x12) {\n        uVar4 = param_2[3] + 0xc;\n      }\n      else if (uVar6 < 0x13) {\n        if (uVar6 == 2) {\n          uVar4 = param_2[3] + 8;\n        }\n        else if (uVar6 < 3) {\n          if (uVar6 == 0) goto LAB_080013be;\n          if (uVar6 == 1) {\n            uVar4 = param_2[3];\n          }\n        }\n        else if (uVar6 == 3) {\n          uVar4 = 0;\n        }\n        else if (uVar6 == 0x11) {\n          uVar4 = param_2[3] + 4;\n        }\n      }\n      else {\n        if (uVar6 != DAT_08001410) {\n          if (DAT_08001410 < uVar6) {\n            if ((uVar6 != uVar2) && (uVar10 = DAT_08001420, uVar6 != uVar3)) goto LAB_080013b8;\n          }\n          else if (uVar6 != DAT_0800141c) {\n            uVar10 = DAT_0800141c + 0x10000;\nLAB_080013b8:\n            if (uVar6 != uVar10) goto LAB_080012a8;\n          }\n        }\nLAB_080013be:\n        uVar4 = param_2[2];\n        if (uVar4 == 0) {\n          uVar4 = 4;\n        }\n        else {\n          if (uVar4 == 1) {\n            param_1[4] = uVar9;\n          }\n          if (uVar4 != 1) {\n            param_1[5] = uVar9;\n          }\n          uVar4 = 8;\n        }\n      }\nLAB_080012a8:\n      if (uVar5 < 0x100) {\n        uVar9 = *param_1;\n        uVar6 = uVar8 << 2;\n        unaff_r10 = param_1;\n      }\n      else {\n        uVar9 = param_1[1];\n        uVar6 = (uVar8 + 0x3ffffff8) * 4;\n      }\n      if (0xff < uVar5) {\n        unaff_r10 = param_1 + 1;\n      }\n      *unaff_r10 = uVar9 & ~(0xf << (uVar6 & 0xff)) | uVar4 << (uVar6 & 0xff);\n      unaff_r10 = (uint *)param_2[1];\n      if (((uint)unaff_r10 & 0x10000000) != 0) {\n        *(uint *)(DAT_08001408 + 0x18) = *(uint *)(DAT_08001408 + 0x18) | 1;\n        iVar11 = (uVar8 & 3) << 2;\n        if (param_1 == DAT_0800140c) {\n          iVar7 = 0;\n        }\n        else if (param_1 == DAT_0800140c + 0x100) {\n          iVar7 = 1;\n        }\n        else if (param_1 == DAT_0800140c + 0x200) {\n          iVar7 = 2;\n        }\n        else if (param_1 == DAT_0800140c + 0x300) {\n          iVar7 = 3;\n        }\n        else {\n          iVar7 = 4;\n        }\n        *(uint *)(&DAT_40010008 + (uVar8 & 0xfffffffc)) =\n             iVar7 << iVar11 | *(uint *)(&DAT_40010008 + (uVar8 & 0xfffffffc)) & ~(0xf << iVar11);\n        if (((uint)unaff_r10 & 0x10000) == 0) {\n          uVar9 = *puVar1 & ~uVar5;\n        }\n        else {\n          uVar9 = *puVar1 | uVar5;\n        }\n        *puVar1 = uVar9;\n        if (((uint)unaff_r10 & 0x20000) == 0) {\n          uVar9 = puVar1[1] & ~uVar5;\n        }\n        else {\n          uVar9 = puVar1[1] | uVar5;\n        }\n        puVar1[1] = uVar9;\n        if (((uint)unaff_r10 & 0x100000) == 0) {\n          uVar9 = puVar1[2] & ~uVar5;\n        }\n        else {\n          uVar9 = puVar1[2] | uVar5;\n        }\n        puVar1[2] = uVar9;\n        if (((uint)unaff_r10 & 0x200000) == 0) {\n          uVar5 = puVar1[3] & ~uVar5;\n        }\n        else {\n          uVar5 = uVar5 | puVar1[3];\n        }\n        puVar1[3] = uVar5;\n      }\n    }\n    uVar8 = uVar8 + 1;\n    if (uVar8 == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001264",
            "calling": [
                "FUN_08004d48",
                "FUN_08004e7c",
                "FUN_0800458c",
                "FUN_08004e14"
            ],
            "imported": false,
            "current_name": "FUNC_08001264"
        },
        "FUN_08002ea0": {
            "renaming": {
                "FUN_08002ea0": "initialize_game_board_08002ea0",
                "param_1": "num_rows",
                "param_2": "num_cols",
                "param_3": "game_board",
                "param_4": "player_turn",
                "extraout_r1": "player_choice",
                "FUN_08002ad0": "get_player_choice",
                "FUN_08002cb0": "initialize_board",
                "FUN_08003314": "print_game_board",
                "DAT_08002ebc": "game_board",
                "FUN_08003320": "play_game"
            },
            "code": "void initialize_game_board_08002ea0(undefined4 num_rows, undefined4 num_cols, undefined4 DAT_08002ebc, undefined4 player_turn)\n{\n  undefined4 player_choice;\n  player_choice = get_player_choice();\n  initialize_board(num_rows, num_cols, DAT_08002ebc);\n  print_DAT_08002ebc(DAT_08002ebc, num_rows, num_cols);\n  play_game(num_rows, num_cols, DAT_08002ebc, player_choice, player_turn);\n}\n",
            "called": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08003314",
                "FUN_08003320"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ea0",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_game_board_08002ea0"
        },
        "FUN_080070b0": {
            "renaming": {
                "FUN_080070b0": "calculate_080070b0",
                "param_1": "numerator",
                "param_2": "denominator",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "mantissa",
                "uVar5": "exponent",
                "uVar6": "shift_amount",
                "uVar7": "result",
                "uVar8": "result",
                "PTR_DAT_080071b8": "PTR_DAT_080071b8",
                "DAT_080071bc": "DAT_080071bc",
                "param_3": "param_3"
            },
            "code": "ulonglong calculate_080070b0(uint numerator, uint denominator, undefined4 param_3)\n{\n    uint shift_amount = (denominator << 1) >> 0x15;\n    int exponent = shift_amount - 0x3ff;\n    uint mantissa = denominator;\n    if (exponent < 0x14)\n    {\n        if (exponent < 0 && (denominator & 0x7fffffff | numerator) == 0)\n        {\n            return CONCAT44(denominator, numerator);\n        }\n        mantissa = denominator & 0xfffff | numerator;\n        undefined4 uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8);\n        undefined4 uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8) + 4);\n        undefined8 uVar3 = FUNC_0800016c(numerator,(-mantissa | mantissa) >> 0xc & 0x80000 | denominator & 0xfffe0000,uVar1,uVar2,numerator,denominator,param_3);\n        ulonglong result = FUNC_08000168((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),uVar1,uVar2);\n        return result & 0xffffffff | (ulonglong)((uint)(result >> 0x20) & 0x7fffffff | denominator & 0x80000000) << 0x20;\n    }\n    else\n    {\n        if (exponent > 0x33)\n        {\n            if (exponent != 0x400)\n            {\n                return CONCAT44(denominator, numerator);\n            }\n            ulonglong result = FUNC_0800016c();\n            return result;\n        }\n        shift_amount = shift_amount - 0x413;\n        uint mask = 0xffffffff >> (shift_amount & 0xff);\n        if ((numerator & mask) == 0)\n        {\n            return CONCAT44(denominator, numerator);\n        }\n        mask = mask >> 1;\n        uint shifted_numerator = numerator;\n        if ((numerator & mask) != 0)\n        {\n            shifted_numerator = 0x40000000 >> (shift_amount & 0xff) | numerator & ~mask;\n        }\n        undefined4 uVar1 = *(undefined4 *)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8);\n        undefined4 uVar2 = *(undefined4 *)((int)(PTR_DAT_080071b8 + ((int)denominator >> 0x1f) * -8) + 4);\n        undefined8 uVar3 = FUNC_0800016c(shifted_numerator,mantissa,uVar1,uVar2,numerator,denominator,param_3);\n        ulonglong result = FUNC_08000168((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),uVar1,uVar2);\n        return result;\n    }\n}",
            "called": [
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070b0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "calculate_080070b0"
        },
        "FUN_08002998": {
            "renaming": {
                "FUN_08002998": "do_nothing_08002998"
            },
            "code": "\nvoid do_nothing_08002998(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002998",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_08002998"
        },
        "FUN_08001424": {
            "renaming": {
                "FUN_08001424": "update_parameter_08001424",
                "param_1": "ptr_param1",
                "param_2": "ptr_param2",
                "param_3": "value"
            },
            "code": "void update_parameter_08001424(int ptr_param1, int ptr_param2, int value) {\n  if (value == 0) {\n    ptr_param2 = ptr_param2 << 16;\n  }\n  *(int *)(ptr_param1 + 16) = ptr_param2;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001424",
            "calling": [
                "FUN_08003f3c",
                "FUN_0800458c",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "update_parameter_08001424"
        },
        "FUN_08001028": {
            "renaming": {
                "FUN_08001028": "is_end_of_string_08001028",
                "in_CY": "current_char",
                "FUN_08001004": "call_some_function"
            },
            "code": "bool is_end_of_string_08001028(void)\n{\n  char current_char;\n  call_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001028",
            "calling": [
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001028"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nlonglong FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  undefined4 *puVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  longlong lVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  lVar9 = FUNC_08006228();\n  puVar2 = PTR_DAT_08005ba8;\n  uVar7 = (undefined4)((ulonglong)lVar9 >> 0x20);\n  uVar8 = (undefined4)lVar9;\n  cVar1 = *PTR_DAT_08005ba8;\n  if (cVar1 == -1) {\n    return lVar9;\n  }\n  local_30 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (local_30 != 0) {\n    return lVar9;\n  }\n  iVar3 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar3 == 0) {\n    iVar4 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar4 != 0) {\n      local_30 = FUN_080009a0(param_3,param_4,0,0);\n      if (local_30 != 0) {\n        local_50 = 1;\n        local_4c = PTR_DAT_08005bac;\n        local_38 = 0;\n        local_30 = iVar3;\n        if (cVar1 != '\\0') {\n          local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 1;\n      local_4c = PTR_DAT_08005bac;\n      cVar1 = *puVar2;\n      if (cVar1 == '\\0') goto LAB_08005a22;\n      local_38 = (ulonglong)DAT_08005bb4 << 0x20;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar3 = FUN_08007092(uVar8,uVar7);\n    if (((iVar3 != 0) || (iVar4 = FUN_08007092(param_1,param_2), iVar4 == 0)) ||\n       (iVar4 = FUN_08007092(param_3,param_4), iVar4 == 0)) {\n      iVar3 = FUN_080009a0(uVar8,uVar7,0,0);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_1,param_2);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      iVar3 = FUN_08007092(param_3,param_4);\n      if (iVar3 == 0) {\n        return lVar9;\n      }\n      local_50 = 4;\n      local_4c = PTR_DAT_08005bac;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar8,uVar7);\n    cVar1 = *puVar2;\n    if (local_30 != 0) {\n      local_4c = PTR_DAT_08005bac;\n      local_50 = 1;\n      local_30 = iVar3;\n      if (cVar1 != '\\0') {\n        local_38 = FUNC_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_50 = 1;\n      local_38 = 0;\n      local_4c = PTR_DAT_08005bac;\n      goto LAB_08005978;\n    }\n    local_4c = PTR_DAT_08005bac;\n    local_50 = 3;\n    if (cVar1 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = DAT_08005bb8;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = DAT_08005bc0;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar3 = FUN_0800709e(&local_50);\n      if (iVar3 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = DAT_08005bc4;\n      iVar3 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar3 != 0) {\n        uVar10 = FUNC_080004d0(param_3,param_4,0,DAT_08005bbc);\n        uVar11 = FUN_080070b0();\n        iVar3 = FUN_080009a0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                             (int)((ulonglong)uVar11 >> 0x20));\n        if (iVar3 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = DAT_08005bb4;\n        }\n      }\nLAB_08005afa:\n      if (*puVar2 != '\\x02') goto LAB_08005b98;\n    }\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x22;\n  }\n  else {\n    iVar3 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar3 == 0) {\n      return lVar9;\n    }\n    local_50 = 1;\n    local_4c = PTR_DAT_08005bac;\n    local_38 = (ulonglong)DAT_08005bb0 << 0x20;\n    if (cVar1 == '\\x02') {\n      return (ulonglong)DAT_08005bb0 << 0x20;\n    }\nLAB_08005978:\n    iVar3 = FUN_0800709e(&local_50);\n    if (iVar3 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar6 = (undefined4 *)FUN_080072ac();\n    uVar8 = 0x21;\n  }\n  *puVar6 = uVar8;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_080072ac();\n    *piVar5 = local_30;\n  }\n  return local_38;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_080070b0",
                "FUN_080009a0",
                "FUN_08007092",
                "FUN_080004d0",
                "FUN_08006228",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "FUNC_08005900"
        },
        "FUN_080006ac": {
            "renaming": {
                "FUN_080006ac": "calculate_value_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "bit_flag",
                "bVar4": "is_input1_or_input2_shifted",
                "exponent_mask": "exponent_mask",
                "nan_mask": "nan_mask",
                "temp_result1": "temp_result1",
                "temp_result2": "temp_result2",
                "carry_flag": "carry_flag"
            },
            "code": "ulonglong calculate_value_080006ac(uint input1, uint input2, uint input3, uint input4) {\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  bool is_input1_or_input2_shifted = false;\n  bool is_input3_or_input4_shifted = false;\n  uint bit_flag = 0x80000000;\n  uint carry_flag = 0x100000;\n  uint exponent_mask = 0x7ff00000;\n  uint nan_mask = 0x7ff8000000000000;\n  uint temp_result1 = 0;\n  uint temp_result2 = 0;\n  if (input4 >> 0x14 != input3 && input4 >> 0x14 != input4) {\n    is_input1_or_input2_shifted = (input1 | input2 << 1) == 0;\n    if (!is_input1_or_input2_shifted) {\n      is_input1_or_input2_shifted = (input3 | input4 << 1) == 0;\n    }\n    if (is_input1_or_input2_shifted) {\n      return (ulonglong)((input2 ^ input4) & bit_flag) << 0x20;\n    }\n    if (input3 == 0) {\n      temp2 = input2 & bit_flag;\n      do {\n        temp1 = input1 & bit_flag;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(temp1 != 0);\n      } while ((input2 & carry_flag) == 0);\n      input2 |= temp2;\n      if (input4 >> 0x14 != 0) {\n        return CONCAT44(input2, input1);\n      }\n    }\n    do {\n      temp3 = input3 & bit_flag;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(temp3 != 0);\n    } while ((input4 & carry_flag) == 0);\n    return CONCAT44(input2, input1);\n  }\n  is_input1_or_input2_shifted = (input1 | input2 << 1) == 0;\n  if (is_input1_or_input2_shifted) {\n    temp_result2 = input4;\n    temp_result1 = input3;\n  }\n  if (!is_input1_or_input2_shifted) {\n    is_input1_or_input2_shifted = (input3 | input4 << 1) == 0;\n  }\n  temp2 = input2;\n  temp3 = input3;\n  temp4 = input4;\n  if (((!is_input1_or_input2_shifted) && ((input4 >> 0x14 != input3 || ((input1 | input2 << 0xc) == 0)))) && ((input4 >> 0x14 != input4 || (input3 = temp4, temp2 = input1, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & bit_flag | exponent_mask) << 0x20;\n  }\n  return CONCAT44(temp2, temp1) | nan_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080006ac",
            "calling": [
                "FUN_080004d0"
            ],
            "imported": false,
            "current_name": "calculate_value_080006ac"
        },
        "FUN_08001828": {
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "input_data",
                "param_6": "input_data_len",
                "param_7": "param_7",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "puVar3": "data",
                "uVar4": "data_val"
            },
            "code": "undefined4 process_data_08001828(uint **data_ptr, undefined4 param_2, undefined4 param_3, undefined4 param_4, byte *input_data, short input_data_len, undefined4 param_7) {\n  int start_time = get_current_time();\n  if (*(char *)((int)data_ptr + 0x35) == ' ') {\n    if (input_data == (byte *)0x0) {\n      return 1;\n    }\n    if (input_data_len == 0) {\n      return 1;\n    }\n    int time_limit = start_time + 10000;\n    do {\n      uint *data = *data_ptr;\n      if ((~data[6] & 2) != 0) {\n        if (*(char *)(data_ptr + 0xd) == '\\x01') {\n          return 2;\n        }\n        uint data_val = *data;\n        *(undefined *)(data_ptr + 0xd) = 1;\n        *data = data_val & 0xfffff7ff;\n        *(undefined *)((int)data_ptr + 0x35) = 0x21;\n        *(undefined *)((int)data_ptr + 0x36) = 0x40;\n        data_ptr[0xe] = (uint *)0x0;\n        int result = process_data_08001828(data_ptr, param_2, param_3, param_4, input_data, input_data_len, param_7);\n        if (result != 0) {\n          *(undefined *)(data_ptr + 0xd) = 0;\n          if (data_ptr[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      int current_time = get_current_time();\n    } while (current_time < time_limit);\n    *(undefined *)(data_ptr + 0xd) = 0;\n    *(undefined *)((int)data_ptr + 0x35) = 0x20;\n  }\n  return 2;\n  while (input_data_len != 0) {\nLAB_080018e2:\n    int result = process_data_08001828(data_ptr, param_7);\n    if (result != 0) goto LAB_080018ee;\n    uint *data = *data_ptr;\n    data[4] = (uint)*input_data;\n    if ((int)(data[5] << 0x1d) < 0) {\n      if ((short)(input_data_len + -1) == 0) break;\n      input_data_len = input_data_len + -2;\n      data[4] = (uint)input_data[1];\n      input_data = input_data + 2;\n    }\n    else {\n      input_data = input_data + 1;\n      input_data_len = input_data_len + -1;\n    }\n  }\n  int result = process_data_08001828(data_ptr, param_7);\n  if (result == 0) {\n    **data_ptr = **data_ptr | 0x200;\n    *(undefined *)(data_ptr + 0xd) = 0;\n    *(undefined *)((int)data_ptr + 0x35) = 0x20;\n    *(undefined *)((int)data_ptr + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data_ptr[0xe] == (uint *)0x4) {\n    **data_ptr = **data_ptr | 0x200;\n    return 1;\n  }\n  return 3;\n}\n",
            "called": [
                "FUN_08001530",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001828",
            "calling": [
                "FUN_0800403c"
            ],
            "imported": false,
            "current_name": "process_data_08001828"
        },
        "FUN_08004c64": {
            "renaming": {
                "FUN_08004c64": "clear_buffer_08004c64",
                "puVar1": "buffer_start",
                "iVar2": "buffer_size"
            },
            "code": "void clear_buffer_08004c64(void)\n{\n  undefined *buffer_start = PTR_DAT_08004c6c;\n  int buffer_size = 0;\n  *(undefined2 *)(PTR_DAT_08004c6c + 0x800) = 0;\n  *(undefined2 *)(buffer_start + 0x802) = 0;\n  *(undefined2 *)(buffer_start + 0x804) = 0;\n  do {\n    buffer_start[buffer_size] = 0;\n    buffer_size++;\n  } while (buffer_size != 0x800);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c64",
            "calling": [
                "FUN_08004c70"
            ],
            "imported": false,
            "current_name": "clear_buffer_08004c64"
        },
        "FUN_0800016c": {
            "renaming": {
                "FUN_0800016c": "FUNC_0800016c"
            },
            "code": "\nulonglong FUNC_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800016c",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_0800016c"
        },
        "FUN_08001b58": {
            "renaming": {
                "FUN_08001b58": "FUNC_08001b58"
            },
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\nundefined4 FUNC_08001b58(int *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  \n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1f < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 4) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && ((int)(DAT_08001e70[1] << 0xf) < 0)))) {\n      uVar5 = count_leading_zeroes(0x4000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      iVar4 = param_1[1];\n      if (iVar4 == 0x10000) {\nLAB_08001c1e:\n        uVar5 = *puVar1 | 0x10000;\n      }\n      else {\n        if (iVar4 == 0) {\n          *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n          *puVar1 = *puVar1 & 0xfffbffff;\n          iVar4 = FUN_0800115c();\n          while (uVar5 = count_leading_zeroes(0x4000),\n                (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            iVar3 = FUN_0800115c();\n            if (100 < (uint)(iVar3 - iVar4)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (iVar4 == 0x50000) {\n          *DAT_08001e70 = *DAT_08001e70 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        *DAT_08001e70 = *DAT_08001e70 & 0xfffeffff;\n        uVar5 = *puVar1 & 0xfffbffff;\n      }\n      *puVar1 = uVar5;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x4000), -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f))\n      {\n        iVar3 = FUN_0800115c();\n        if (100 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1e < 0) {\n    if (((DAT_08001e70[1] & 0xc) == 0) ||\n       (((DAT_08001e70[1] & 0xc) == 8 && (-1 < (int)(DAT_08001e70[1] << 0xf))))) {\n      uVar5 = count_leading_zeroes(0x40000000);\n      if (((int)((*DAT_08001e70 >> (uVar5 & 0x1f)) << 0x1f) < 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      if (param_1[4] == 0) {\n        iVar4 = count_leading_zeroes(0x80000000);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n        iVar4 = FUN_0800115c();\n        while (uVar5 = count_leading_zeroes(0x40000000),\n              (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n          iVar3 = FUN_0800115c();\n          if (2 < (uint)(iVar3 - iVar4)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    uVar5 = count_leading_zeroes(0x1f000000);\n    *puVar1 = param_1[5] << (uVar5 & 0xff) | *puVar1 & 0xffffff07;\n  }\nLAB_08001b6c:\n  puVar1 = DAT_08001e70;\n  if (*param_1 << 0x1c < 0) {\n    if (param_1[6] == 0) {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 0;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar4 = count_leading_zeroes(0x80000000);\n      *(undefined4 *)(DAT_08001e74 + iVar4 * 4) = 1;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            -1 < (int)((puVar1[9] >> (uVar5 & 0x1f)) << 0x1f)) {\n        iVar3 = FUN_0800115c();\n        if (2 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      do_nothing_08001168(1);\n    }\n  }\n  puVar2 = DAT_08001e78;\n  puVar1 = DAT_08001e70;\n  if (-1 < *param_1 << 0x1d) goto LAB_08001bc2;\n  DAT_08001e70[7] = DAT_08001e70[7] | 0x10000000;\n  *puVar2 = *puVar2 | 0x100;\n  iVar4 = FUN_0800115c();\n  while (-1 < (int)(*puVar2 << 0x17)) {\n    iVar3 = FUN_0800115c();\n    if (100 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\n  iVar4 = param_1[3];\n  if (iVar4 == 1) {\nLAB_08001e1a:\n    uVar5 = puVar1[8] | 1;\n  }\n  else {\n    if (iVar4 == 0) {\n      puVar1[8] = puVar1[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n      iVar4 = FUN_0800115c();\n      while (uVar5 = count_leading_zeroes(0x40000000),\n            (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n        iVar3 = FUN_0800115c();\n        if (5000 < (uint)(iVar3 - iVar4)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (iVar4 == 5) {\n      puVar1[8] = puVar1[8] | 4;\n      goto LAB_08001e1a;\n    }\n    puVar1[8] = puVar1[8] & 0xfffffffe;\n    uVar5 = puVar1[8] & 0xfffffffb;\n  }\n  puVar1[8] = uVar5;\n  iVar4 = FUN_0800115c();\n  while (uVar5 = count_leading_zeroes(0x40000000), -1 < (int)((puVar1[8] >> (uVar5 & 0x1f)) << 0x1f)\n        ) {\n    iVar3 = FUN_0800115c();\n    if (5000 < (uint)(iVar3 - iVar4)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  puVar1 = DAT_08002004;\n  if (param_1[7] == 0) {\n    return 0;\n  }\n  if ((DAT_08002004[1] & 0xc) != 8) {\n    if (param_1[7] != 2) {\n      iVar4 = count_leading_zeroes(0x80);\n      *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n      iVar4 = FUN_0800115c();\n      do {\n        uVar5 = count_leading_zeroes(0x40);\n        if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n          return 0;\n        }\n        iVar3 = FUN_0800115c();\n      } while ((uint)(iVar3 - iVar4) < 3);\n      return 3;\n    }\n    iVar4 = count_leading_zeroes(0x80);\n    *(undefined4 *)(iVar4 * 4 + 0x42420000) = 0;\n    iVar4 = FUN_0800115c();\n    do {\n      uVar5 = count_leading_zeroes(0x40);\n      if (-1 < (int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f)) {\n        uVar5 = param_1[8];\n        if (uVar5 == 0x10000) {\n          puVar1[1] = puVar1[1] & 0xfffdffff | param_1[2];\n        }\n        puVar1[1] = uVar5 | param_1[9] | puVar1[1] & 0xffc2ffff;\n        iVar4 = count_leading_zeroes(0x80);\n        *(undefined4 *)(iVar4 * 4 + 0x42420000) = 1;\n        iVar4 = FUN_0800115c();\n        do {\n          uVar5 = count_leading_zeroes(0x40);\n          if ((int)((*puVar1 >> (uVar5 & 0x1f)) << 0x1f) < 0) {\n            return 0;\n          }\n          iVar3 = FUN_0800115c();\n        } while ((uint)(iVar3 - iVar4) < 3);\n        return 3;\n      }\n      iVar3 = FUN_0800115c();\n    } while ((uint)(iVar3 - iVar4) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "called": [
                "FUN_08001168",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001b58",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "FUNC_08001b58"
        },
        "FUN_08007092": {
            "renaming": {
                "FUN_08007092": "set_high_bit_and_shift_right_08007092",
                "param_1": "input_value",
                "param_2": "unused_param",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "uint set_high_bit_and_shift_right_08007092(uint input_value)\n{\n    uint high_bit_set = input_value | 0x80000000;\n    uint shifted_value = high_bit_set + 0x100000 >> 0x1f;\n    return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007092",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "set_high_bit_and_shift_right_08007092"
        },
        "FUN_0800290c": {
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "data_byte",
                "iVar2": "data_ptr",
                "uVar3": "data_byte_2",
                "uVar4": "data_undefined",
                "sVar5": "data_short",
                "puVar6": "data_short_ptr",
                "puVar7": "data_short_ptr_2",
                "bVar8": "is_data_byte_2_not_0x32"
            },
            "code": "int process_data_0800290c(int *data) {\n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  int data_ptr = *data;\n  ushort *data_short_ptr = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      data_short_ptr++;\n      *data_short_ptr = (ushort)((uint)(*(int *)(data_ptr + 4) << 0x17) >> 0x17);\n    }\n    else {\n      data_short_ptr = (ushort *)((int)data_short_ptr + 1);\n      *data_short_ptr = (ushort)*(int *)(data_ptr + 4) & 0xff;\n    }\n    data[10] = (int)data_short_ptr;\n  }\n  else {\n    if (data[4] == 0) {\n      byte data_byte = (byte)*(undefined4 *)(data_ptr + 4);\n      data[10] = (int)data_short_ptr + 1;\n      *(byte *)data_short_ptr = data_byte;\n    }\n    else {\n      undefined4 data_undefined = *(undefined4 *)(data_ptr + 4);\n      data[10] = (int)data_short_ptr + 1;\n      byte data_byte = (byte)data_undefined & 0x7f;\n      *(byte *)data_short_ptr = data_byte;\n    }\n  }\n  short data_short = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = data_short;\n  if (data_short == 0) {\n    int data_ptr_2 = *data;\n    *(uint *)(data_ptr_2 + 0xc) = *(uint *)(data_ptr_2 + 0xc) & 0xffffffdf;\n    uint data_byte_2 = (uint)*(byte *)((int)data + 0x39);\n    bool is_data_byte_2_not_0x32 = data_byte_2 != 0x32;\n    if (is_data_byte_2_not_0x32) {\n      data_byte_2 = *(uint *)(data_ptr_2 + 0xc) & 0xfffffeff;\n    }\n    else {\n      data_ptr_2 = 0x12;\n    }\n    if (is_data_byte_2_not_0x32) {\n      *(uint *)(data_ptr_2 + 0xc) = data_byte_2;\n      data_byte_2 = *(uint *)(data_ptr_2 + 0x14) & 0xfffffffe;\n    }\n    if (is_data_byte_2_not_0x32) {\n      *(uint *)(data_ptr_2 + 0x14) = data_byte_2;\n      data_ptr_2 = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)data_ptr_2;\n    process_data_0800290c_2();\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004c30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290c",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "process_data_0800290c"
        },
        "FUN_08002f28": {
            "renaming": {
                "FUN_08002f28": "initialize_game_08002f28",
                "iVar6": "score",
                "puVar3": "ptr_1",
                "puVar2": "ptr_2",
                "puVar4": "ptr_3",
                "uVar5": "short_var_1",
                "iVar8": "initial_score",
                "uVar7": "difference",
                "PTR_DAT_08003004": "ptr_1_data",
                "PTR_DAT_08003000": "ptr_2_data",
                "PTR_DAT_0800300c": "ptr_3_data",
                "PTR_DAT_08003018": "ptr_4_data",
                "PTR_DAT_08003014": "ptr_5_data",
                "PTR_DAT_08003010": "ptr_6_data",
                "PTR_DAT_08003020": "ptr_7_data",
                "PTR_DAT_0800301c": "ptr_8_data",
                "PTR_DAT_08003028": "ptr_9_data",
                "PTR_DAT_0800302c": "ptr_10_data",
                "DAT_08003008": "data_1",
                "DAT_08003030": "data_2",
                "FUN_08002b48": "initialize_function_1",
                "FUN_08002bf0": "initialize_function_2",
                "FUN_08002d88": "initialize_function_3",
                "thunk_FUN_0800115c": "thunk_function_1",
                "FUN_08000c3c": "calculate_difference",
                "FUNC_08000e54": "function_4",
                "FUN_08003320": "function_5",
                "FUNC_08003330": "function_6",
                "FUN_08002ed4": "function_7",
                "FUNC_08000cec": "function_8",
                "FUN_08001078": "function_9",
                "FUN_08002ec0": "function_10",
                "FUN_08002ee8": "function_11"
            },
            "code": "void initialize_game_08002f28(void)\n{\n  short score_divided_by_100;\n  undefined *ptr_1;\n  undefined *ptr_2;\n  undefined *ptr_3;\n  undefined2 short_var_1;\n  int var_1;\n  undefined4 var_2;\n  int var_3;\n\n  initialize_function_1();\n  initialize_function_2();\n  initialize_function_3();\n  var_1 = thunk_function_1();\n  ptr_2 = PTR_DAT_08003000;\n  ptr_1 = PTR_DAT_08003004;\n  var_3 = *(int *)PTR_DAT_08003000;\n  *(int *)PTR_DAT_08003004 = var_1;\n  var_2 = calculate_difference(var_1 - var_3);\n  function_4(var_2, DAT_08003008);\n  function_5();\n  ptr_3 = PTR_DAT_0800300c;\n  *(undefined4 *)ptr_2 = *(undefined4 *)ptr_1;\n  function_6(*(int *)(ptr_3 + 4) + -0x80000000, *(int *)ptr_3 + -0x80000000,\n               *(undefined4 *)(ptr_3 + 8), *(undefined4 *)(PTR_DAT_08003018 + 4),\n               *(undefined4 *)PTR_DAT_08003018, *(int *)(PTR_DAT_08003018 + 8) + -0x80000000,\n               *(undefined4 *)PTR_DAT_08003014, *(undefined4 *)(PTR_DAT_08003014 + 4),\n               *(undefined4 *)(PTR_DAT_08003014 + 8), PTR_DAT_08003010);\n  ptr_3 = PTR_DAT_08003020;\n  ptr_2 = PTR_DAT_0800301c;\n  ptr_1 = PTR_DAT_0800301c + 2;\n  score_divided_by_100 = (short)((uint)(int)*(short *)ptr_1 / 100);\n  short_var_1 = *(short *)(ptr_2 + 4);\n  *(short *)(ptr_3 + 4) = (short)((uint)(int)*(short *)(ptr_2 + 4) / 100);\n  *(short *)(ptr_3 + 2) = (short)((uint)(int)short_var_1 / 100);\n  ptr_2 = PTR_DAT_08003028;\n  *(undefined2 *)(ptr_3 + 6) = *(undefined2 *)ptr_2;\n  short_var_1 = *(undefined2 *)(ptr_2 + 4);\n  *(undefined2 *)(ptr_3 + 8) = *(undefined2 *)(ptr_2 + 2);\n  *(undefined2 *)(ptr_3 + 10) = short_var_1;\n  ptr_2 = PTR_DAT_0800302c;\n  *(undefined2 *)(ptr_3 + 0xc) = *(undefined2 *)PTR_DAT_0800302c;\n  short_var_1 = *(undefined2 *)(ptr_2 + 4);\n  *(undefined2 *)(ptr_3 + 0xe) = *(undefined2 *)(ptr_2 + 2);\n  *(undefined2 *)(ptr_3 + 0x10) = short_var_1;\n  var_2 = function_7();\n  function_8(var_2, DAT_08003030);\n  short_var_1 = function_9();\n  *(undefined2 *)PTR_DAT_08003024 = short_var_1;\n  var_2 = function_10();\n  function_8(var_2, DAT_08003030);\n  short_var_1 = function_9();\n  *(undefined2 *)(PTR_DAT_08003024 + 2) = short_var_1;\n  function_11();\n  short_var_1 = function_9();\n  *(undefined2 *)(PTR_DAT_08003024 + 4) = short_var_1;\n  return;\n}",
            "called": [
                "FUN_08002ec0",
                "FUN_08003330",
                "FUN_08002d88",
                "FUN_08000c3c",
                "thunk_FUN_0800115c",
                "FUN_08002ed4",
                "FUN_08002ee8",
                "FUN_08001078",
                "FUN_08000cec",
                "FUN_08002bf0",
                "FUN_08003320",
                "FUN_08000e54",
                "FUN_08002b48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f28",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_game_08002f28"
        },
        "FUN_08004384": {
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "address",
                "param_2": "size",
                "param_3": "flags",
                "param_4": "value",
                "puVar1": "data_ptr",
                "local_14": "data_ptr_0",
                "uStack_10": "data_ptr_4",
                "local_c": "local_c"
            },
            "code": "void initialize_data_08004384(uint32_t address, uint32_t size, uint32_t flags, uint32_t value)\n{\n    uint16_t *data_ptr = (uint16_t *) PTR_DAT_080043b8;\n    data_ptr[4] = 7;\n    data_ptr[5] = 0;\n    data_ptr[6] = 0x2a;\n    data_ptr[7] = 0;\n    uint32_t data_ptr_0 = *(uint32_t *)data_ptr;\n    uint32_t data_ptr_4 = *(uint32_t *)(data_ptr + 4);\n    data_ptr[8] = 0;\n    data_ptr[9] = 0;\n    data_ptr[10] = 0;\n    uint32_t local_c = flags & 0xff000000 | (uint32_t) data_ptr[8];\n    call_function_08004300(0x65, &data_ptr_0, 0xb, data_ptr[8], address);\n    return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004384",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "initialize_data_08004384"
        },
        "FUN_080009a0": {
            "renaming": {
                "FUN_080009a0": "check_input_not_null_080009a0",
                "in_ZR": "user_input",
                "FUN_08000990": "get_user_input"
            },
            "code": "bool check_input_not_null_080009a0(void)\n{\n  char user_input;\n  get_user_input();\n  return user_input != '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009a0",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "check_input_not_null_080009a0"
        },
        "FUN_0800290a": {
            "renaming": {
                "FUN_0800290a": "do_nothing_0800290a"
            },
            "code": "\nvoid do_nothing_0800290a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800290a",
            "calling": [
                "FUN_0800299a"
            ],
            "imported": false,
            "current_name": "do_nothing_0800290a"
        },
        "FUN_08003298": {
            "renaming": {
                "FUN_08003298": "read_MS5611_data_08003298",
                "iVar4": "i",
                "PTR_DAT_0800330c": "MS5611_data",
                "PTR_s____Src_MS5611_c_08003308": "MS5611_data_src",
                "PTR_DAT_08003304": "MS5611_state_ptr",
                "local_1c": "val_low_byte",
                "local_1b": "val_high_byte",
                "PTR_DAT_08003310": "MS5611_calibration_ptr"
            },
            "code": "void read_MS5611_data_08003298(void)\n{\n    int i = 0;\n    set_MS5611_mode(0xee, 0x1e, 1);\n    delay_ms(10);\n    unsigned char *data_ptr = PTR_DAT_0800330c;\n    unsigned char *src_ptr = PTR_s____Src_MS5611_c_08003308;\n    *PTR_DAT_08003304 = 8;\n    do\n    {\n        unsigned short val;\n        read_MS5611_value(0xee, i + 0xa0U & 0xffff, &val, 2, src_ptr, 0x7c);\n        *(unsigned short *)(data_ptr + i) = val;\n        i += 2;\n    }\n    while (i != 0x10);\n    i = 0;\n    do\n    {\n        *(unsigned int *)(PTR_DAT_08003310 + i * 4) = 0;\n        i++;\n    }\n    while (i != 0x14);\n}\n",
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003298",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "read_MS5611_data_08003298"
        },
        "FUN_08004300": {
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "checksum_seed",
                "param_2": "data",
                "param_3": "data_length",
                "uVar1": "checksum",
                "pbVar2": "current_byte"
            },
            "code": "void calculate_checksum_08004300(uint checksum_seed, byte* data, uint data_length) {\n  uint checksum = checksum_seed ^ (data_length & 0xff);\n  for (byte* current_byte = data; current_byte < data + data_length; current_byte++) {\n    checksum ^= *current_byte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}",
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004300",
            "calling": [
                "FUN_08004348",
                "FUN_08004410",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004458"
            ],
            "imported": false,
            "current_name": "calculate_checksum_08004300"
        },
        "FUN_08005630": {
            "renaming": {
                "FUN_08005630": "copy_bytes_08005630",
                "param_1": "dst_offset",
                "param_2": "src",
                "param_3": "num_bytes",
                "puVar1": "end",
                "puVar2": "dst"
            },
            "code": "void copy_bytes_08005630(int dst_offset, undefined *src, int num_bytes) {\n  undefined *dst = (undefined *)(dst_offset - 1);\n  undefined *end = src + num_bytes;\n  for (; src != end; src++, dst++) {\n    *dst = *src;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005630",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "copy_bytes_08005630"
        },
        "FUN_08003330": {
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  int iVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  int iVar27;\n  undefined4 uVar28;\n  int iVar29;\n  undefined4 uVar30;\n  undefined4 uVar31;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  \n  uVar28 = *(undefined4 *)PTR_DAT_080035d8;\n  iVar29 = *(int *)(PTR_DAT_080035d8 + 4);\n  uVar31 = *(undefined4 *)(PTR_DAT_080035d8 + 8);\n  uVar30 = *(undefined4 *)(PTR_DAT_080035d8 + 0xc);\n  uVar2 = FUNC_08000cec(param_1,param_1);\n  uVar3 = FUNC_08000cec(param_2);\n  uVar2 = FUNC_08000adc(uVar2,uVar3);\n  uVar3 = FUNC_08000cec(param_3);\n  FUNC_08000adc(uVar2,uVar3);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar2 = FUN_08000a30();\n  iVar4 = FUN_08001014(uVar2,0);\n  if (iVar4 == 0) {\n    uVar3 = FUNC_08000cec(param_7);\n    uVar5 = FUNC_08000cec(param_8);\n    uVar3 = FUNC_08000adc(uVar3,uVar5);\n    uVar5 = FUNC_08000cec(param_9);\n    FUNC_08000adc(uVar3,uVar5);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar3 = FUN_08000a30();\n    iVar4 = FUN_08001014(uVar3,0);\n    if (iVar4 == 0) {\n      uVar32 = FUN_08000428(param_4);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar5 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_5);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar6 = FUN_08000a30();\n      uVar32 = FUN_08000428(param_6);\n      FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_080035d0,DAT_080035d4);\n      uVar7 = FUN_08000a30();\n      iVar4 = FUNC_08000adc(uVar28);\n      uVar8 = FUNC_08000adc(iVar29);\n      iVar9 = FUNC_08000adc(uVar31,uVar31);\n      uVar10 = FUNC_08000adc(uVar30,uVar30);\n      uVar11 = FUNC_08000cec(uVar28);\n      uVar12 = FUNC_08000cec(uVar28,iVar29);\n      uVar13 = FUNC_08000cec(uVar28,uVar31);\n      uVar14 = FUNC_08000cec(iVar29);\n      uVar15 = FUNC_08000cec(iVar29,uVar30);\n      uVar16 = FUNC_08000cec(uVar31,uVar31);\n      uVar17 = FUNC_08000cec(uVar30,uVar30);\n      uVar2 = FUNC_08000e54(0x3f800000,uVar2);\n      uVar3 = FUNC_08000e54(0x3f800000,uVar3);\n      uVar18 = FUNC_08000cec(param_7,uVar3);\n      uVar19 = FUNC_08000cec(param_8,uVar3);\n      uVar3 = FUNC_08000cec(param_9,uVar3);\n      iVar20 = FUNC_08000cec(iVar4,uVar18);\n      uVar21 = FUNC_08000cec(iVar4,uVar19);\n      uVar22 = FUNC_08000cec(iVar4,uVar3);\n      uVar23 = FUNC_08000cec(uVar8,uVar18);\n      uVar24 = FUNC_08000cec(uVar11,uVar18);\n      uVar25 = FUNC_08000cec(uVar30,uVar21);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar31,uVar22);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar18);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar19);\n      uVar25 = FUNC_08000cec(uVar25,uVar31);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar8,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar24 = FUNC_08000adc(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar18);\n      uVar24 = FUNC_08000ad8(uVar24,uVar25);\n      uVar25 = FUNC_08000cec(uVar30,iVar20);\n      uVar26 = FUNC_08000cec(uVar11,uVar19);\n      uVar25 = FUNC_08000adc(uVar25,uVar26);\n      uVar22 = FUNC_08000cec(iVar29,uVar22);\n      uVar22 = FUNC_08000ad8(uVar25,uVar22);\n      uVar25 = FUNC_08000cec(uVar31,uVar23);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar14,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar16,uVar19);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(iVar9,uVar3);\n      uVar25 = FUNC_08000cec(uVar25,uVar30);\n      uVar22 = FUNC_08000adc(uVar22,uVar25);\n      uVar25 = FUNC_08000cec(uVar17,uVar19);\n      uVar22 = FUNC_08000ad8(uVar22,uVar25);\n      uVar24 = FUNC_08000cec(uVar24,uVar24);\n      uVar22 = FUNC_08000cec(uVar22,uVar22);\n      FUNC_08000adc(uVar24,uVar22);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar27 = FUN_08000a30();\n      uVar22 = FUNC_08000cec(iVar20 + -0x80000000,uVar31);\n      uVar21 = FUNC_08000cec(iVar29,uVar21);\n      uVar21 = FUNC_08000adc(uVar22,uVar21);\n      uVar11 = FUNC_08000cec(uVar11,uVar3);\n      uVar11 = FUNC_08000adc(uVar21,uVar11);\n      uVar21 = FUNC_08000cec(uVar30,uVar23);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar14,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(iVar9,uVar19);\n      uVar21 = FUNC_08000cec(uVar21,uVar30);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar16,uVar3);\n      uVar11 = FUNC_08000ad8(uVar11,uVar21);\n      uVar21 = FUNC_08000cec(uVar17,uVar3);\n      uVar11 = FUNC_08000adc(uVar11,uVar21);\n      uVar21 = FUNC_08000adc(uVar11,uVar11);\n      uVar22 = FUNC_08000adc(uVar15);\n      uVar23 = FUNC_08000cec(uVar31,iVar4);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(param_1,uVar2);\n      uVar22 = FUNC_08000ad8(uVar22,uVar23);\n      uVar23 = FUNC_08000cec(uVar30,iVar9);\n      uVar24 = FUNC_08000adc(uVar12);\n      uVar23 = FUNC_08000adc(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(param_2,uVar2);\n      uVar23 = FUNC_08000ad8(uVar23,uVar24);\n      uVar24 = FUNC_08000cec(uVar31,uVar11);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar16);\n      uVar17 = FUNC_08000ad8(uVar25,uVar17);\n      uVar17 = FUNC_08000cec(uVar17,iVar27);\n      uVar25 = FUNC_08000ad8(uVar15,uVar13);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar17 = FUNC_08000adc(uVar17,uVar25);\n      uVar17 = FUNC_08000ad8(uVar17,uVar18);\n      uVar18 = FUNC_08000cec(iVar29,uVar11);\n      uVar25 = FUNC_08000cec(iVar29,uVar31);\n      uVar26 = FUNC_08000cec(uVar28,uVar30);\n      uVar25 = FUNC_08000ad8(uVar25,uVar26);\n      uVar25 = FUNC_08000cec(uVar25,iVar27);\n      uVar26 = FUNC_08000cec(uVar31,uVar30);\n      uVar12 = FUNC_08000adc(uVar26,uVar12);\n      uVar12 = FUNC_08000cec(uVar12,uVar11);\n      uVar12 = FUNC_08000adc(uVar25,uVar12);\n      uVar12 = FUNC_08000ad8(uVar12,uVar19);\n      uVar19 = FUNC_08000cec(uVar31,iVar27);\n      uVar25 = FUNC_08000ad8(0x3f000000,uVar14);\n      uVar25 = FUNC_08000ad8(uVar25,uVar16);\n      uVar25 = FUNC_08000cec(uVar25,uVar11);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar13 = FUNC_08000cec(uVar13,iVar27);\n      uVar13 = FUNC_08000adc(uVar25,uVar13);\n      uVar3 = FUNC_08000ad8(uVar13,uVar3);\n      uVar13 = FUNC_08000cec(iVar9 + -0x80000000,uVar22);\n      uVar15 = FUNC_08000cec(uVar8,uVar23);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar24,uVar17);\n      uVar13 = FUNC_08000ad8(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar30,iVar27 + -0x80000000);\n      uVar15 = FUNC_08000adc(uVar15,uVar18);\n      uVar15 = FUNC_08000cec(uVar15,uVar12);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar15 = FUNC_08000cec(uVar19,uVar3);\n      uVar13 = FUNC_08000adc(uVar13,uVar15);\n      uVar14 = FUNC_08000adc(uVar14);\n      uVar14 = FUNC_08000ad8(0x3f800000,uVar14);\n      uVar15 = FUNC_08000adc(uVar16);\n      uVar14 = FUNC_08000ad8(uVar14,uVar15);\n      uVar2 = FUNC_08000cec(param_3,uVar2);\n      uVar2 = FUNC_08000ad8(uVar14,uVar2);\n      uVar14 = FUNC_08000cec(uVar30,uVar11);\n      uVar11 = FUNC_08000cec(uVar28,uVar11);\n      uVar15 = FUNC_08000cec(uVar10,uVar22);\n      uVar16 = FUNC_08000cec(iVar4,uVar23);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(iVar29,0x40800000);\n      uVar16 = FUNC_08000cec(uVar16,uVar2);\n      uVar15 = FUNC_08000ad8(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar17,uVar14);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000adc(uVar19,uVar11);\n      uVar16 = FUNC_08000cec(uVar16,uVar12);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      uVar16 = FUNC_08000cec(uVar30,iVar27);\n      uVar19 = FUNC_08000cec(iVar29,uVar21);\n      uVar16 = FUNC_08000ad8(uVar16,uVar19);\n      uVar16 = FUNC_08000cec(uVar16,uVar3);\n      uVar15 = FUNC_08000adc(uVar15,uVar16);\n      iVar20 = FUNC_08000adc(iVar27,iVar27);\n      uVar16 = FUNC_08000cec(iVar29,iVar27);\n      uVar19 = FUNC_08000cec(iVar4 + -0x80000000,uVar22);\n      uVar10 = FUNC_08000cec(uVar10,uVar23);\n      uVar10 = FUNC_08000adc(uVar19,uVar10);\n      uVar19 = FUNC_08000cec(uVar31,0x40800000);\n      uVar2 = FUNC_08000cec(uVar19,uVar2);\n      uVar2 = FUNC_08000ad8(uVar10,uVar2);\n      uVar10 = FUNC_08000cec(uVar31,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000adc(uVar14,uVar16);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27);\n      uVar11 = FUNC_08000cec(uVar31,uVar21);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar3);\n      uVar2 = FUNC_08000adc(uVar2,uVar10);\n      uVar8 = FUNC_08000cec(uVar8,uVar22);\n      uVar10 = FUNC_08000cec(iVar9,uVar23);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar30,iVar20 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar18);\n      uVar10 = FUNC_08000cec(uVar10,uVar17);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar28,iVar27 + -0x80000000);\n      uVar10 = FUNC_08000adc(uVar10,uVar24);\n      uVar10 = FUNC_08000cec(uVar10,uVar12);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar3 = FUNC_08000cec(uVar3,uVar16);\n      uVar3 = FUNC_08000adc(uVar8,uVar3);\n      uVar8 = FUNC_08000cec(uVar13);\n      uVar10 = FUNC_08000cec(uVar15);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar2,uVar2);\n      uVar8 = FUNC_08000adc(uVar8,uVar10);\n      uVar10 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar8,uVar10);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar8 = FUN_08000a30();\n      uVar8 = FUNC_08000e54(0x3f800000,uVar8);\n      puVar1 = PTR_DAT_08003d84;\n      uVar12 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar14 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar16 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar17 = *(undefined4 *)PTR_DAT_08003d80;\n      uVar10 = FUNC_08000cec(iVar29 + -0x80000000,uVar5);\n      uVar11 = FUNC_08000cec(uVar31,uVar6);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar11 = FUNC_08000cec(uVar30,uVar7);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,0x3f000000);\n      uVar11 = FUNC_08000cec(uVar13,uVar8);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000cec(uVar11,uVar12);\n      uVar10 = FUNC_08000ad8(uVar10,uVar11);\n      uVar10 = FUNC_08000cec(uVar10,uVar13);\n      uVar10 = FUNC_08000adc(uVar10,uVar28);\n      uVar11 = FUNC_08000cec(uVar28,uVar5);\n      uVar12 = FUNC_08000cec(uVar31,uVar7);\n      uVar13 = *(undefined4 *)puVar1;\n      uVar11 = FUNC_08000adc(uVar11,uVar12);\n      uVar12 = FUNC_08000cec(uVar30,uVar6);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,0x3f000000);\n      uVar12 = FUNC_08000cec(uVar15,uVar8);\n      uVar12 = FUNC_08000cec(uVar12,uVar14);\n      uVar11 = FUNC_08000ad8(uVar11,uVar12);\n      uVar11 = FUNC_08000cec(uVar11,uVar13);\n      uVar11 = FUNC_08000adc(uVar11,iVar29);\n      uVar14 = *(undefined4 *)puVar1;\n      uVar12 = FUNC_08000cec(uVar28,uVar6);\n      uVar13 = FUNC_08000cec(iVar29,uVar7);\n      uVar12 = FUNC_08000ad8(uVar12,uVar13);\n      uVar13 = FUNC_08000cec(uVar30,uVar5);\n      uVar12 = FUNC_08000adc(uVar12,uVar13);\n      uVar12 = FUNC_08000cec(uVar12,0x3f000000);\n      uVar2 = FUNC_08000cec(uVar2,uVar8);\n      uVar2 = FUNC_08000cec(uVar2,uVar16);\n      uVar2 = FUNC_08000ad8(uVar12,uVar2);\n      uVar2 = FUNC_08000cec(uVar2,uVar14);\n      uVar2 = FUNC_08000adc(uVar2,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,uVar7);\n      uVar6 = FUNC_08000cec(iVar29,uVar6);\n      uVar28 = FUNC_08000adc(uVar28,uVar6);\n      uVar31 = FUNC_08000cec(uVar31,uVar5);\n      uVar28 = FUNC_08000ad8(uVar28,uVar31);\n      uVar28 = FUNC_08000cec(uVar28,0x3f000000);\n      uVar3 = FUNC_08000cec(uVar3,uVar8);\n      uVar3 = FUNC_08000cec(uVar3,uVar17);\n      uVar31 = *(undefined4 *)puVar1;\n      uVar3 = FUNC_08000ad8(uVar28,uVar3);\n      uVar3 = FUNC_08000cec(uVar3,uVar31);\n      uVar3 = FUNC_08000adc(uVar3,uVar30);\n      uVar28 = FUNC_08000cec(uVar10,uVar10);\n      uVar30 = FUNC_08000cec(uVar11,uVar11);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar2,uVar2);\n      uVar28 = FUNC_08000adc(uVar28,uVar30);\n      uVar30 = FUNC_08000cec(uVar3,uVar3);\n      FUNC_08000adc(uVar28,uVar30);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUNC_08000e54(0x3f800000,uVar28);\n      uVar30 = FUNC_08000cec(uVar10,uVar28);\n      puVar1 = PTR_DAT_08003d88;\n      *(undefined4 *)PTR_DAT_08003d88 = uVar30;\n      uVar31 = FUNC_08000cec(uVar11,uVar28);\n      *(undefined4 *)(puVar1 + 4) = uVar31;\n      uVar2 = FUNC_08000cec(uVar2,uVar28);\n      *(undefined4 *)(puVar1 + 8) = uVar2;\n      uVar3 = FUNC_08000cec(uVar3,uVar28);\n      *(undefined4 *)(puVar1 + 0xc) = uVar3;\n      uVar3 = FUNC_08000cec(uVar31,uVar3);\n      uVar2 = FUNC_08000cec(uVar30,uVar2);\n      uVar2 = FUNC_08000ad8(uVar3,uVar2);\n      FUNC_08000adc(uVar2,uVar2);\n      FUN_08000428();\n      uVar32 = FUNC_08005854();\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003d8c);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003d78,DAT_08003d7c);\n      uVar2 = FUN_08000a30();\n      *param_10 = uVar2;\n      uVar31 = *(undefined4 *)puVar1;\n      uVar5 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar31,uVar31);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar30 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar30,uVar30);\n      FUNC_08000adc(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar28,uVar30);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[1] = uVar2;\n      uVar30 = *(undefined4 *)puVar1;\n      uVar31 = *(undefined4 *)(puVar1 + 4);\n      uVar2 = FUNC_08000cec(uVar30,uVar30);\n      uVar3 = FUNC_08000cec(uVar31,uVar31);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      uVar5 = *(undefined4 *)(puVar1 + 8);\n      uVar3 = FUNC_08000cec(uVar5,uVar5);\n      uVar2 = FUNC_08000ad8(uVar2,uVar3);\n      uVar28 = *(undefined4 *)(puVar1 + 0xc);\n      uVar3 = FUNC_08000cec(uVar28,uVar28);\n      FUNC_08000ad8(uVar2,uVar3);\n      uVar32 = FUN_08000428();\n      uVar2 = FUNC_08000cec(uVar31,uVar5);\n      uVar3 = FUNC_08000cec(uVar30,uVar28);\n      uVar2 = FUNC_08000adc(uVar2,uVar3);\n      FUNC_08000adc(uVar2,uVar2);\n      uVar33 = FUN_08000428();\n      uVar32 = thunk_FUN_08006070((int)uVar33,(int)((ulonglong)uVar33 >> 0x20),(int)uVar32,\n                                  (int)((ulonglong)uVar32 >> 0x20));\n      uVar32 = FUNC_080004d0((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),0,DAT_08003ea8);\n      FUNC_08000724((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),DAT_08003ea0,DAT_08003ea4);\n      uVar2 = FUN_08000a30();\n      param_10[2] = uVar2;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08005854",
                "FUN_08000a30",
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08005bc8",
                "FUN_08000adc",
                "FUN_08000724",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003330",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08003330"
        },
        "FUN_08000980": {
            "renaming": {
                "FUN_08000980": "call_function_with_swapped_arguments_08000980",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "code": "void call_function_with_swapped_arguments_08000980(void* arg1, void* arg2, void* arg3, void* arg4)\n{\n    call_function_with_swapped_arguments_08000980(arg3, arg4, arg1, arg2);\n    return;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000980",
            "calling": [
                "FUN_080009f0"
            ],
            "imported": false,
            "current_name": "call_function_with_swapped_arguments_08000980"
        },
        "FUN_08004028": {
            "renaming": {
                "FUN_08004028": "run_animation_08004028",
                "iVar1": "num_iterations",
                "FUNC_0800458c": "play_sound",
                "FUN_08003ff4": "initialize_animation",
                "FUN_08003f3c": "draw_frame",
                "thunk_do_nothing_08001168": "wait"
            },
            "code": "void run_animation_08004028(void)\n{\n  int num_iterations = 3;\n  play_sound();\n  initialize_animation();\n  while (num_iterations > 0)\n  {\n    draw_frame(1, 0, 0);\n    wait(100);\n    draw_frame(0, 1, 0);\n    wait(100);\n    draw_frame(0, 0, 1);\n    wait(100);\n    num_iterations--;\n  }\n  draw_frame(1, 1, 0);\n}",
            "called": [
                "FUN_08003ff4",
                "FUN_08003f3c",
                "thunk_FUN_08001168",
                "FUN_0800458c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004028",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "run_animation_08004028"
        },
        "FUN_0800708c": {
            "renaming": {
                "FUN_0800708c": "do_nothing_0800708c"
            },
            "code": "\nvoid do_nothing_0800708c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800708c",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "do_nothing_0800708c"
        },
        "FUN_08002368": {
            "renaming": {
                "FUN_08002368": "set_values_08002368",
                "param_1": "memory_address",
                "param_2": "values",
                "uVar1": "current_value",
                "puVar2": "pointer",
                "DAT_080023cc": "ptr_dat_080023cc"
            },
            "code": "void set_values_08002368(uint *memory_address, uint *values) {\n  uint current_value = *memory_address;\n  if ((((memory_address == DAT_080023cc) || (memory_address == (uint *)0x40000000)) ||\n      (memory_address == DAT_080023cc - 0x4a00)) || (memory_address == DAT_080023cc - 0x4900)) {\n    current_value = current_value & 0xffffff8f | values[1];\n    if (((memory_address == DAT_080023cc) || (memory_address == (uint *)0x40000000)) ||\n       ((memory_address == DAT_080023cc - 0x4a00 || (memory_address == DAT_080023cc - 0x4900)))) {\n      current_value = current_value & 0xfffffcff | values[3];\n    }\n  }\n  *memory_address = current_value;\n  memory_address[0xb] = values[2];\n  memory_address[10] = *values;\n  uint *pointer = DAT_080023cc;\n  if (memory_address == DAT_080023cc) {\n    pointer = (uint *)values[4];\n  }\n  if (memory_address == DAT_080023cc) {\n    memory_address[0xc] = (uint)pointer;\n  }\n  memory_address[5] = 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002368",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "set_values_08002368"
        },
        "FUN_08002520": {
            "renaming": {
                "FUN_08002520": "set_bit_in_uint_at_offset_08002520",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "bit_value",
                "PTR_": "",
                "DAT_": "",
                "uint": "uint32_t",
                "*": "",
                "&": "",
                "<<": "",
                ">>": "",
                "~": "",
                "|": "",
                "-": "",
                "+": ""
            },
            "code": "void set_bit_in_uint_at_offset_08002520(uint32_t *data, uint32_t offset, uint32_t bit_value) {\n    uint32_t mask = ~(1 << (offset & 0xff));\n    uint32_t shifted_bit_value = bit_value << (offset & 0xff);\n    *data = (*data & mask) | shifted_bit_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002520",
            "calling": [
                "FUN_08002538"
            ],
            "imported": false,
            "current_name": "set_bit_in_uint_at_offset_08002520"
        },
        "FUN_08002008": {
            "renaming": {
                "FUN_08002008": "calculate_result_08002008",
                "uVar1": "value_1",
                "uVar2": "value_2",
                "uVar3": "data",
                "uVar4": "shift_amount_1",
                "uVar5": "result",
                "puVar6": "data_pointer",
                "puVar7": "local_data_pointer",
                "local_24": "local_data",
                "local_20": "data",
                "PTR_DAT_0800208c": "data_pointer",
                "DAT_08002090": "data_1",
                "DAT_08002094": "data_2",
                "count_leading_zeroes": "count_leading_zero_bits",
                "byte": "unsigned char"
            },
            "code": "uint calculate_result_08002008(void)\n{\n  uint result = 0;\n  uint bit_mask = 0xc;\n  uint shift_amount = 0xf;\n  uint shift_amount_2 = 0xff;\n  uint multiplier = 0;\n  uint divisor = 0;\n  uint divisor_index = 0;\n  uint data_index = 0;\n  uint data_mask = 0x3c0000;\n  uint data_shift = 0;\n  uint temp_result = 0;\n  uint i = 0;\n  uint data[5];\n  byte local_data[4] = {1, 2, 0, 0};\n  data[0] = 0;\n  data[1] = 0;\n  data[2] = 0;\n  data[3] = 0;\n  data[4] = 0;\n  for (i = 0; i < 5; i++)\n  {\n    data[i] = *(undefined4 *)(PTR_DAT_0800208c + i * 8);\n  }\n  if ((*(uint *)(DAT_08002090 + 4) & bit_mask) == 8)\n  {\n    data_shift = count_leading_zeroes(0x3c00);\n    if ((int)(*(uint *)(DAT_08002090 + 4) << shift_amount) < 0)\n    {\n      divisor_index = count_leading_zeroes(0x4000);\n      divisor = local_data[(*(uint *)(DAT_08002090 + 4) & 0x20000) >> (divisor_index & shift_amount_2)];\n      temp_result = DAT_08002094 / divisor;\n      multiplier = local_data[((*(uint *)(DAT_08002090 + 4) & data_mask) >> (data_shift & shift_amount_2))];\n      result = temp_result * multiplier;\n    }\n    else\n    {\n      multiplier = local_data[((*(uint *)(DAT_08002090 + 4) & data_mask) >> (data_shift & shift_amount_2))];\n      result = multiplier * DAT_08002094;\n    }\n  }\n  else\n  {\n    result = DAT_08002094;\n  }\n  return result;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002008",
            "calling": [
                "FUN_0800209c"
            ],
            "imported": false,
            "current_name": "calculate_result_08002008"
        },
        "FUN_08002404": {
            "renaming": {
                "FUN_08002404": "update_data_08002404",
                "param_1": "data_address",
                "param_2": "data_array",
                "uVar1": "data_value_3",
                "uVar2": "data_value_2",
                "iVar3": "data_array[0]",
                "DAT_08002458": "constant_data_address",
                "mask1": "0xffffffef",
                "mask2": "0xfffff3ff",
                "mask3": "0xffffffdf",
                "data_offset": "0x20",
                "data_offset_2": "0x18",
                "data_offset_3": "0x38"
            },
            "code": "void update_data_08002404(int data_address, int *data_array){\n    uint mask1 = 0xffffffef;\n    uint mask2 = 0xfffff3ff;\n    uint mask3 = 0xffffffdf;\n    uint data_offset = 0x20;\n    uint data_offset_2 = 0x18;\n    uint data_offset_3 = 0x38;\n    uint data_value_1 = *(uint *)(data_address + data_offset) & mask1;\n    uint data_value_2 = *(uint *)(data_address + 4);\n    uint data_value_3 = *(uint *)(data_address + data_offset) & mask3 | data_array[2] << 4;\n    if (data_address == DAT_08002458) {\n        data_value_3 = (data_value_3 & 0xffffff7f | data_array[3] << 4) & 0xffffffbf;\n        data_value_2 = data_value_2 & mask2 | (data_array[5] | data_array[6]) << 2;\n    }\n    *(uint *)(data_address + 4) = data_value_2;\n    *(uint *)(data_address + data_offset_2) = *(uint *)(data_address + data_offset_2) & 0xffff8cff | data_array[0] << 8;\n    *(int *)(data_address + data_offset_3) = data_array[1];\n    *(uint *)(data_address + data_offset) = data_value_3;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002404",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_08002404"
        },
        "FUN_08005bc8": {
            "renaming": {
                "FUN_08005bc8": "calculate_result_08005bc8",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "char_value",
                "iVar2": "int_value_1",
                "piVar3": "int_pointer_1",
                "puVar4": "undefined_pointer_1",
                "uVar5": "return_value",
                "local_50": "local_variable_1",
                "local_4c": "local_pointer_1",
                "local_48": "local_variable_2",
                "uStack_44": "stack_variable_1",
                "local_40": "local_variable_3",
                "uStack_3c": "stack_variable_2",
                "local_38": "local_variable_4",
                "local_30": "local_variable_5",
                "FUN_08006c0c": "get_value",
                "PTR_DAT_08005c68": "PTR_DAT_08005c68",
                "FUN_08000a04": "function_1",
                "FUN_080009b4": "function_2",
                "PTR_DAT_08005c6c": "PTR_DAT_08005c6c",
                "FUNC_08000724": "function_4",
                "FUN_080072ac": "function_5",
                "LABEL_08005c26": "LABEL_08005c26",
                "LABEL_08005c2e": "LABEL_08005c2e",
                "&local_50": "&local_variable_1",
                "0x21": "0x21"
            },
            "code": "undefined8 calculate_result_08005bc8(undefined4 input_1, undefined4 input_2)\\n{\\n  char char_value;\\n  int int_value_1;\\n  int *int_pointer_1;\\n  undefined4 *undefined_pointer_1;\\n  undefined8 return_value;\\n  undefined4 local_variable_1;\\n  undefined *local_pointer_1;\\n  undefined4 local_variable_2;\\n  undefined4 stack_variable_1;\\n  undefined4 local_variable_3;\\n  undefined4 stack_variable_2;\\n  undefined8 local_variable_4;\\n  int local_variable_5;\\n  \\n  return_value = get_value();\\n  char_value = *PTR_DAT_08005c68;\\n  if (char_value == -1) {\\n    return return_value;\\n  }\\n  local_variable_5 = function_1(input_1, input_2, input_1, input_2);\\n  if (local_variable_5 != 0) {\\n    return return_value;\\n  }\\n  int_value_1 = function_2(input_1, input_2, 0, 0);\\n  if (int_value_1 == 0) {\\n    return return_value;\\n  }\\n  local_variable_1 = 1;\\n  local_pointer_1 = PTR_DAT_08005c6c;\\n  local_variable_2 = input_1;\\n  stack_variable_1 = input_2;\\n  local_variable_3 = input_1;\\n  stack_variable_2 = input_2;\\n  if (char_value == \"\\0\") {\\n    local_variable_4 = 0;\\n    \\n    LABEL_08005c26:\\n    int_value_1 = function_3(&local_variable_1);\\n    if (int_value_1 != 0) goto LABEL_08005c2e;\\n  }\\n  else {\\n    local_variable_4 = FUNC_08000724(0, 0, 0, 0);\\n    if (char_value != \"\\x02\") goto LABEL_08005c26;\\n  }\\n  undefined_pointer_1 = (undefined4 *)function_5();\\n  *undefined_pointer_1 = 0x21;\\n  \\n  LABEL_08005c2e:\\n  if (local_variable_5 != 0) {\\n    int_pointer_1 = (int *)function_5();\\n    *int_pointer_1 = local_variable_5;\\n  }\\n  return local_variable_4;\\n}",
            "called": [
                "FUN_080072ac",
                "FUN_08000a04",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_0800709e",
                "FUN_080009b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bc8",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_08005bc8"
        },
        "FUN_08001436": {
            "renaming": {
                "FUN_08001436": "check_flag_08001436",
                "param_1": "flag_ptr",
                "iVar1": "flag_val",
                "PTR_": "flag_ptr",
                "DAT_": "flag_val"
            },
            "code": "int check_flag_08001436(int *PTR_) {\n  int DAT_ = *PTR_;\n  if ((*(unsigned int *)(DAT_ + 0x14) & 0x400) != 0) {\n    *(unsigned int *)(DAT_ + 0x14) &= 0xfffffbff;\n    PTR_[14] = 4;\n    *(unsigned char *)((int)PTR_ + 0x35) = 0x20;\n    *(unsigned char *)(PTR_ + 13) = 0;\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001436",
            "calling": [
                "FUN_080014e2"
            ],
            "imported": false,
            "current_name": "check_flag_08001436"
        },
        "FUN_08004a30": {
            "renaming": {
                "FUN_08004a30": "update_data_if_needed_08004a30",
                "puVar1": "data_ptr_1",
                "puVar2": "data_ptr_2",
                "puVar3": "data_ptr_3",
                "uVar4": "new_data"
            },
            "code": "void update_data_if_needed_08004a30(void)\n{\n  undefined *data_ptr_1;\n  undefined *data_ptr_2;\n  undefined *data_ptr_3;\n  undefined4 new_data;\n  data_ptr_3 = PTR_DAT_08004a7c;\n  data_ptr_2 = PTR_DAT_08004a78;\n  data_ptr_1 = PTR_DAT_08004a74;\n  if (PTR_DAT_08004a74[1] != '\\0') {\n    if (*PTR_DAT_08004a78 == '\\0') {\n      new_data = FUN_08003068();\n      new_data = FUNC_08000cec(new_data,DAT_08004a80);\n      *(undefined4 *)(data_ptr_3 + 0x1c) = new_data;\n      *data_ptr_2 = 1;\n    }\n    else {\n      new_data = FUN_08003068();\n      new_data = FUNC_08000cec(new_data,DAT_08004a80);\n      *(undefined4 *)(data_ptr_3 + 0x30) = new_data;\n    }\n  }\n  if (data_ptr_1[1] == '\\0') {\n    if (*PTR_DAT_08004a78 != '\\0') {\n      *PTR_DAT_08004a78 = 0;\n    }\n    *(undefined4 *)(PTR_DAT_08004a7c + 0x48) = *(undefined4 *)(data_ptr_1 + 4);\n  }\n  return;\n}",
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a30",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "update_data_if_needed_08004a30"
        },
        "FUN_08004c70": {
            "renaming": {
                "FUN_08004c70": "initialize_system_08004c70",
                "puVar1": "ptr_2",
                "puVar2": "ptr_1",
                "uVar3": "u_var",
                "uVar4": "u_var_2",
                "iVar5": "i_var"
            },
            "code": "int initialize_system_08004c70(void)\n{\n    uint32_t *ptr_1 = PTR_DAT_08004c88;\n    uint8_t *ptr_2 = PTR_DAT_08004c84;\n    if ((ptr_1[0x39] == 0x01) || (ptr_1[0x39] == 0x12)) {\n        if (PTR_DAT_08004c84 == NULL) {\n            return 1;\n        }\n        if (ptr_1[0x38] != 0x01) {\n            ptr_1[0x38] = 0x01;\n            ptr_1[0x3c] = 0;\n            ptr_1[0x2c] = 1;\n            ptr_1[0x2e] = 1;\n            ptr_1[0x38] = 0;\n            uint8_t uVar3 = (ptr_1[0x39] == 0x12) ? 0x32 : 0x22;\n            int iVar5 = *(int *)ptr_1;\n            ptr_1[0x39] = uVar3;\n            uint32_t uVar4 = *(uint *)(iVar5 + 0xc);\n            ptr_1[0x28] = ptr_2;\n            *(uint *)(iVar5 + 0xc) = uVar4 | 0x100;\n            *(uint *)(iVar5 + 0x14) = *(uint *)(iVar5 + 0x14) | 1;\n            *(uint *)(iVar5 + 0xc) = *(uint *)(iVar5 + 0xc) | 0x20;\n            return 0;\n        }\n    }\n    return 2;\n}",
            "called": [
                "FUN_08004c64"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c70",
            "calling": [
                "FUN_08004194"
            ],
            "imported": false,
            "current_name": "initialize_system_08004c70"
        },
        "FUN_08000904": {
            "renaming": {
                "FUN_08000904": "check_params_08000904",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "param_four_shifted",
                "uVar1": "xor_result",
                "bVar2": "is_first_condition_true",
                "bVar3": "is_second_condition_true"
            },
            "code": "uint check_params_08000904(uint first_param, uint second_param, uint third_param, uint fourth_param)\n{\n  uint result;\n  bool is_first_condition_true = ((int)(second_param << 1) >> 0x15 == -1 || (int)(fourth_param << 1) >> 0x15 == -1);\n  bool is_second_condition_true = (((int)(second_param << 1) >> 0x15 == -1 && ((first_param | second_param << 0xc) != 0)) || (((int)(fourth_param << 1) >> 0x15 == -1 && ((third_param | fourth_param << 0xc) != 0))));\n  if (is_first_condition_true && is_second_condition_true) {\n    return 1;\n  }\n  bool are_first_and_third_params_zero = (first_param | second_param << 1) == 0;\n  if (are_first_and_third_params_zero) {\n    are_first_and_third_params_zero = (third_param | fourth_param << 1) == 0;\n  }\n  if (!are_first_and_third_params_zero) {\n    are_first_and_third_params_zero = (second_param == fourth_param) && (first_param == third_param);\n  }\n  if (!are_first_and_third_params_zero) {\n    uint xor_result = second_param ^ fourth_param;\n    bool is_xor_result_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      is_xor_result_zero = second_param == fourth_param;\n    }\n    bool is_fourth_param_less_than_or_equal_to_second_param = -1 < (int)xor_result && fourth_param <= second_param;\n    if (is_xor_result_zero) {\n      is_fourth_param_less_than_or_equal_to_second_param = third_param <= first_param;\n    }\n    uint param_four_shifted = (int)fourth_param >> 0x1f;\n    if (!is_fourth_param_less_than_or_equal_to_second_param) {\n      param_four_shifted = ~param_four_shifted;\n    }\n    result = param_four_shifted | 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000904",
            "calling": [
                "FUN_08000990"
            ],
            "imported": false,
            "current_name": "check_params_08000904"
        },
        "FUN_0800299a": {
            "renaming": {
                "FUN_0800299a": "check_permissions_0800299a",
                "param_1": "parameters",
                "uVar1": "second",
                "sVar2": "counter",
                "uVar3": "first",
                "puVar4": "ptr",
                "uVar5": "value",
                "puVar6": "ptr2",
                "uVar7": "fifth",
                "bVar8": "is_negative_second"
            },
            "code": "void check_permissions_0800299a(uint **param_1)\n{\n  uint first = **param_1;\n  uint third = (*param_1)[3];\n  bool is_negative_first = (int)(first << 0x1a) < 0;\n  bool is_negative_third = (int)(third << 0x1a) < 0;\n  if ((first & 0xf) == 0 && is_negative_first && is_negative_third) {\n    print_error();\n    return;\n  }\n  else {\n    uint fifth = (*param_1)[5] & 1;\n    if (fifth != 0 || (third & 0x120) != 0) {\n      uint* ptr = (uint*)(first << 0x1f);\n      if ((int)ptr < 0) {\n        bool is_negative_second = (int)(third << 0x17) < 0;\n        if (is_negative_second) {\n          ptr = (uint*)((uint)param_1[0xf] | 1);\n        }\n        if (is_negative_second) {\n          param_1[0xf] = ptr;\n        }\n      }\n      if ((int)(first << 0x1d) < 0 && fifth != 0) {\n        param_1[0xf] = (uint*)((uint)param_1[0xf] | 2);\n      }\n      if ((int)(first << 0x1e) < 0 && fifth != 0) {\n        param_1[0xf] = (uint*)((uint)param_1[0xf] | 4);\n      }\n      if ((int)(first << 0x1c) < 0 && fifth != 0) {\n        param_1[0xf] = (uint*)((uint)param_1[0xf] | 8);\n      }\n      if (param_1[0xf] == (uint*)0x0) {\n        return;\n      }\n      if (is_negative_first && is_negative_third) {\n        print_error(param_1);\n      }\n      uint* ptr2 = *param_1;\n      if (-1 < (int)param_1[0xf] << 0x1c && (ptr2[5] & 0x40) == 0) {\n        do_nothing(param_1);\n        param_1[0xf] = (uint*)0x0;\n        return;\n      }\n      ptr2[3] &= 0xfffffedf;\n      ptr2[5] &= 0xfffffffe;\n      *(undefined*)((int)param_1 + 0x39) = 1;\n      do_nothing(param_1);\n      return;\n    }\n  }\n  if ((int)(first << 0x18) < 0 && (int)(third << 0x18) < 0) {\n    if ((*(byte*)((int)param_1 + 0x39) & 0xdf) == 0x12) {\n      uint* ptr3 = param_1[8];\n      if (param_1[2] == (uint*)0x1000) {\n        (*param_1)[1] = *(ushort*)ptr3 & 0x1ff;\n        if (param_1[4] == (uint*)0x0) {\n          ptr3 = (uint*)((int)ptr3 + 2);\n        }\n        else {\n          ptr3 = (uint*)((int)ptr3 + 1);\n        }\n        param_1[8] = ptr3;\n      }\n      else {\n        param_1[8] = (uint*)((int)ptr3 + 1);\n        (*param_1)[1] = (uint)*(byte*)ptr3;\n      }\n      short* ptr4 = (short*)((int)param_1 + 0x26);\n      *ptr4 = *ptr4 - 1;\n      if (*ptr4 == 0) {\n        uint* ptr5 = *param_1;\n        ptr5[3] &= 0xffffff7f;\n        ptr5[3] |= 0x40;\n        return;\n      }\n    }\n  }\n  else if ((int)(first << 0x19) < 0 && (int)(third << 0x19) < 0) {\n    uint* ptr6 = *param_1;\n    ptr6[3] &= 0xffffffbf;\n    if (*(char*)((int)param_1 + 0x39) == '2') {\n      *(undefined*)((int)param_1 + 0x39) = 0x22;\n    }\n    else {\n      *(undefined*)((int)param_1 + 0x39) = 1;\n    }\n    do_nothing2(param_1);\n  }\n  return;\n}",
            "called": [
                "FUN_0800290c",
                "FUN_08002998",
                "FUN_0800290a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800299a",
            "calling": [],
            "imported": false,
            "current_name": "check_permissions_0800299a"
        },
        "FUN_0800114c": {
            "renaming": {
                "FUN_0800114c": "increment_ptr_value_0800114c",
                "PTR_DAT_08001158": "ptr_value"
            },
            "code": "void increment_ptr_value_0800114c(void)\n{\n  int* PTR_DAT_08001158 = (int*)PTR_DAT_08001158;\n  *PTR_DAT_08001158 = *PTR_DAT_08001158 + 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800114c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "increment_ptr_value_0800114c"
        },
        "FUN_080052e4": {
            "renaming": {
                "FUN_080052e4": "count_chars_080052e4",
                "param_1": "start_pos",
                "param_2": "data",
                "param_3": "count",
                "param_4": "end_pos",
                "param_5": "callback",
                "iVar1": "result",
                "uVar2": "start_count",
                "uVar3": "end_count",
                "bVar4": "is_end_count_zero"
            },
            "code": "uint32_t count_chars_080052e4(uint32_t start_pos, uint32_t *data, uint32_t *count, uint32_t end_pos, code *callback)\\n\\\n{\\n\\\n    uint32_t max_pos = data[4];\\n\\\n    if ((int)max_pos < (int)data[2]) {\\n\\\n        max_pos = data[2];\\n\\\n    }\\n\\\n    *count = max_pos;\\n\\\n    if (*(char *)((int)data + 0x43) != \"\\0\") {\\n\\\n        *count = max_pos + 1;\\n\\\n    }\\n\\\n    if ((int)(*data << 0x1a) < 0) {\\n\\\n        *count = *count + 2;\\n\\\n    }\\n\\\n    uint32_t i = *data & 6;\\n\\\n    if (i == 0) {\\n\\\n        for (; (int)i < (int)(data[3] - *count); i++) {\\n\\\n            int result = (*callback)(start_pos, end_pos, (int)data + 0x19, 1);\\n\\\n            if (result == -1) {\\n\\\n                return 0xffffffff;\\n\\\n            }\\n\\\n        }\\n\\\n    }\\n\\\n    uint32_t uVar2 = (uint32_t)*(byte *)((int)data + 0x43);\\n\\\n    if (uVar2 != 0) {\\n\\\n        uVar2 = 1;\\n\\\n    }\\n\\\n    uint32_t uVar3 = uVar2;\\n\\\n    if ((int)(*data << 0x1a) < 0) {\\n\\\n        *(undefined *)((int)data + uVar2 + 0x43) = 0x30;\\n\\\n        uVar3 = uVar2 + 2;\\n\\\n        *(undefined *)((int)data + uVar2 + 0x44) = *(undefined *)((int)data + 0x45);\\n\\\n    }\\n\\\n    int result = (*callback)(start_pos, end_pos, (int)data + 0x43, uVar3);\\n\\\n    if (result != -1) {\\n\\\n        uint32_t end_count = data[3];\\n\\\n        bool bVar4 = (*data & 6) != 4;\\n\\\n        if (bVar4) {\\n\\\n            end_count = 0;\\n\\\n        }\\n\\\n        uint32_t start_count = 0;\\n\\\n        if (!bVar4) {\\n\\\n            end_count = end_count - *count;\\n\\\n        }\\n\\\n        if (!bVar4) {\\n\\\n            end_count = end_count & ~((int)end_count >> 0x1f);\\n\\\n        }\\n\\\n        if ((int)data[4] < (int)data[2]) {\\n\\\n            end_count = end_count + (data[2] - data[4]);\\n\\\n        }\\n\\\n        while (start_count != end_count) {\\n\\\n            result = (*callback)(start_pos, end_pos, (int)data + 0x1a, 1);\\n\\\n            if (result == -1) {\\n\\\n                return 0xffffffff;\\n\\\n            }\\n\\\n            start_count++;\\n\\\n        }\\n\\\n        return 0;\\n\\\n    }\\n\\\n    return 0xffffffff;\\n\\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052e4",
            "calling": [
                "FUN_080053d4"
            ],
            "imported": false,
            "current_name": "count_chars_080052e4"
        },
        "FUN_080014e2": {
            "renaming": {
                "FUN_080014e2": "check_if_param_valid_080014e2",
                "param_1": "param_arr",
                "param_2": "param_size",
                "iVar1": "start_time",
                "iVar2": "check_result"
            },
            "code": "int check_if_param_valid_080014e2(int *param_arr, uint param_size) {\n  int start_time = get_current_time();\n  while(1) {\n    if (*(int *)(param_arr[0] + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    int check_result = check_param(param_arr);\n    if (check_result != 0) {\n      break;\n    }\n    if ((param_size != 0xffffffff) && ((param_size == 0 || (int)(get_current_time() - start_time) > param_size))) {\n      param_arr[14] |= 0x20;\n      *(undefined *)((int)param_arr + 0x35) = 0x20;\n      *(undefined *)(param_arr + 13) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}",
            "called": [
                "FUN_08001436",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080014e2",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8",
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "check_if_param_valid_080014e2"
        },
        "FUN_0800142e": {
            "renaming": {
                "FUN_0800142e": "xor_param_with_ptr_plus_12_0800142e",
                "param_1": "ptr",
                "param_2": "param",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "void xor_param_with_ptr_plus_12_0800142e(int ptr, uint param) {\n  uint *PTR_plus_12 = (uint *)(ptr + 0xc);\n  *PTR_plus_12 = param ^ *PTR_plus_12;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800142e",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "xor_param_with_ptr_plus_12_0800142e"
        },
        "FUN_08004d8c": {
            "renaming": {
                "FUN_08004d8c": "process_input_08004d8c",
                "param_1": "input_ptr",
                "iVar1": "input_value",
                "DAT_08004e04": "TARGET_VALUE_1",
                "DAT_08004e08": "TARGET_ADDRESS_1",
                "_DAT_4002101c": "TARGET_ADDRESS_2",
                "0x40000000": "TARGET_VALUE_2",
                "DAT_08004e0c": "TARGET_VALUE_3",
                "DAT_08004e10": "TARGET_VALUE_4"
            },
            "code": "void process_input_08004d8c(int *input_ptr)\n{\n    int input_value = *input_ptr;\n    if (input_value == DAT_08004e04) {\n        *(uint *)(DAT_08004e08 + 0x18) |= 0x800;\n    }\n    else if (input_value == TARGET_VALUE_2) {\n        *_DAT_4002101c |= 1;\n    }\n    else if (input_value == DAT_08004e0c) {\n        *(uint *)(DAT_08004e08 + 0x1c) |= 2;\n    }\n    else if (input_value == DAT_08004e10) {\n        *(uint *)(DAT_08004e08 + 0x1c) |= 4;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d8c",
            "calling": [
                "FUN_080023d0"
            ],
            "imported": false,
            "current_name": "process_input_08004d8c"
        },
        "FUN_08002250": {
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250",
                "uVar1": "leading_zeroes",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_0800227c": "PTR_DAT_0800227c",
                "PTR_DAT_08002278": "PTR_DAT_08002278",
                "DAT_08002274": "DAT_08002274"
            },
            "code": "uint get_shifted_value_08002250(uint number) {\n    uint count = 0;\n    while (number >>= 1) {\n        count++;\n    }\n    return 31 - count;\n}\n\nuint get_shifted_value_08002250(void) {\n    uint leading_zeroes = get_shifted_value_08002250(0x1c0000);\n    uint shift_amount = (*(uint *)PTR_DAT_0800227c) >> PTR_DAT_08002278[(*(uint *)(DAT_08002274 + 4) & 0x3800) >> (leading_zeroes & 0xff)];\n    return shift_amount;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002250",
            "calling": [
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08002250"
        },
        "FUN_080009b4": {
            "renaming": {
                "FUN_080009b4": "is_end_of_string_080009b4",
                "in_CY": "current_char",
                "FUN_08000990": "execute_some_function"
            },
            "code": "bool is_end_of_string_080009b4(void)\n{\n  char current_char;\n  execute_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009b4",
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_end_of_string_080009b4"
        },
        "FUN_080011fc": {
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bit_index",
                "PTR_DAT_08001210": "array_ptr",
                "DAT_08001210": "array_start_address"
            },
            "code": "void set_bit_in_array_080011fc(uint bit_index) {\n    int* PTR_DAT_08001210 = (int*)(DAT_08001210 + (bit_index >> 5) * 4);\n    int bit_mask = 1 << (bit_index & 0x1f);\n    *PTR_DAT_08001210 = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080011fc",
            "calling": [
                "FUN_08004e7c"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080011fc"
        },
        "FUN_08003068": {
            "renaming": {
                "FUN_08003068": "get_value_from_ptr_dat_08003070_08003068",
                "undefined4": "int",
                "PTR_DAT_08003070": "ptr_dat_08003070"
            },
            "code": "int get_value_from_ptr_dat_08003070_08003068() {\n    return *(int *)PTR_DAT_08003070;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003068",
            "calling": [
                "FUN_08004a30"
            ],
            "imported": false,
            "current_name": "get_value_from_ptr_dat_08003070_08003068"
        },
        "FUN_08005646": {
            "renaming": {
                "FUN_08005646": "reverse_copy_within_range_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "len",
                "puVar1": "end"
            },
            "code": "void reverse_copy_within_range_08005646(char* dest, char* src, int len) {\n  char* end = src + len;\n  if ((src < dest) && (dest < end)) {\n    dest = dest + len;\n    len = len - (int)end;\n    while (end + len != (char*)0x0) {\n      end = end + -1;\n      dest = dest + -1;\n      *dest = *end;\n    }\n    return;\n  }\n  dest = dest - 1;\n  for (; src != end; src = src + 1) {\n    dest = dest + 1;\n    *dest = *src;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005646",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "reverse_copy_within_range_08005646"
        },
        "FUN_08000990": {
            "renaming": {
                "FUN_08000990": "execute_function_08000990",
                "param_1": "input_param",
                "FUN_08000904": "call_initialize"
            },
            "code": "undefined4 execute_function_08000990(undefined4 input_param)\n{\n  call_initialize();\n  return input_param;\n}",
            "called": [
                "FUN_08000904"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000990",
            "calling": [
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_08000980",
                "FUN_080009b4"
            ],
            "imported": false,
            "current_name": "execute_function_08000990"
        },
        "FUN_08000110": {
            "renaming": {
                "FUN_08000110": "check_initialized_08000110",
                "param_1": "data_ptr",
                "*PTR_DAT_08000128": "*data_initialized_ptr",
                "DAT_0800012c": "data_initialized",
                "PTR_FUN_08000130": "data_function_ptr"
            },
            "code": "undefined* check_initialized_08000110(undefined* data_ptr) {\\n  if (*PTR_DAT_08000128 == \"\\0\") {\\n    if (DAT_0800012c != 0) {\\n      data_ptr = PTR_FUN_08000130;\\n    }\\n    *PTR_DAT_08000128 = 1;\\n  }\\n  return data_ptr;\\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000110",
            "calling": [],
            "imported": false,
            "current_name": "check_initialized_08000110"
        },
        "FUN_0800709e": {
            "renaming": {
                "FUN_0800709e": "return_zero_0800709e"
            },
            "code": "int return_zero_0800709e(void)\n{\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800709e",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "return_zero_0800709e"
        },
        "FUN_08002ec0": {
            "renaming": {
                "FUN_08002ec0": "calculate_updated_value_08002ec0",
                "puVar1": "current_ptr",
                "uVar2": "second_value",
                "uVar3": "third_value",
                "uVar4": "fourth_value"
            },
            "code": "void calculate_updated_value_08002ec0(void)\n{\n  undefined *current_ptr;\n  undefined4 second_value;\n  undefined4 third_value;\n  undefined4 fourth_value;\n  \n  current_ptr = PTR_DAT_08002ed0;\n  third_value = *(undefined4 *)(PTR_DAT_08002ecc + 4);\n  fourth_value = *(undefined4 *)(PTR_DAT_08002ed0 + 4);\n  second_value = FUNC_08000ad8(0x3f800000,fourth_value);\n  second_value = FUNC_08000cec(second_value,third_value);\n  third_value = FUNC_08000cec(fourth_value,*(undefined4 *)current_ptr);\n  second_value = FUNC_08000adc(third_value,second_value);\n  *(undefined4 *)current_ptr = second_value;\n  return;\n}",
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec0",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_updated_value_08002ec0"
        },
        "FUN_08004434": {
            "renaming": {
                "FUN_08004434": "send_data_to_device_08004434",
                "param_1": "device_address",
                "param_2": "data_length",
                "param_3": "data",
                "local_10": "local_device_address",
                "local_c": "local_data_length",
                "uStack_8": "local_data"
            },
            "code": "void send_data_to_device_08004434(undefined4 device_address, uint16_t data_length, undefined4 data){\n  undefined4 local_device_address;\n  uint16_t local_data_length;\n  undefined4 local_data;\n  \n  local_device_address = *(undefined4 *)PTR_DEVICE_ADDRESS;\n  local_data_length = data_length & 0xffff0000 | (uint16_t)*(ushort *)(PTR_DEVICE_ADDRESS + 4);\n  local_data = data;\n  send_command_to_device(0x6d, &local_device_address, 6);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004434",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "send_data_to_device_08004434"
        },
        "FUN_08001168": {
            "renaming": {
                "FUN_08001168": "do_nothing_08001168"
            },
            "code": "\nvoid do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001168",
            "calling": [
                "thunk_FUN_08001168",
                "FUN_08001b58"
            ],
            "imported": false,
            "current_name": "do_nothing_08001168"
        },
        "FUN_08006c0c": {
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result_high",
                "uVar2": "mantissa_bits",
                "iVar3": "exponent_bits",
                "uVar4": "exponent_offset",
                "uVar5": "bit",
                "iVar7": "exponent_bias",
                "uVar6": "new_mantissa",
                "uVar8": "bit_mask",
                "uVar9": "bit_mask2",
                "uVar11": "rounding_bit",
                "uVar12": "last_bit",
                "iVar10": "i",
                "uVar13": "result"
            },
            "code": "undefined8 calculate_float_08006c0c(uint exponent, uint mantissa) {\n  \n  // Check if the number is denormalized\n  if ((0x7f800000 & ~mantissa) == 0) {\n    undefined8 result = FUNC_080004d0(exponent, mantissa, exponent, mantissa);\n    result = FUNC_0800016c(exponent, mantissa, (int)result, (int)((ulonglong)result >> 0x20));\n    return result;\n  }\n  \n  // Check if the number is zero\n  if ((int)mantissa < 1) {\n    if ((mantissa & 0x7fffffff | exponent) == 0) {\n      return CONCAT44(mantissa, exponent);\n    }\n    if (mantissa != 0) {\n      undefined8 result = FUNC_08000168(exponent, mantissa, exponent, mantissa);\n      undefined4 result_high = (undefined4)((ulonglong)result >> 0x20);\n      result = FUNC_08000724((int)result, result_high, (int)result, result_high);\n      return result;\n    }\n  }\n  \n  // Calculate the exponent and mantissa of the floating point number\n  int exponent_bits = (int)mantissa >> 0x14;\n  if (exponent_bits == 0) {\n    while (mantissa == 0) {\n      exponent_bits = exponent_bits + -0x15;\n      mantissa = exponent >> 0xb;\n      exponent = exponent << 0x15;\n    }\n    uint bit_count = 0;\n    for (; -1 < (int)(mantissa << 0xb); mantissa = mantissa << 1) {\n      bit_count = bit_count + 1;\n    }\n    exponent_bits = exponent_bits - (bit_count - 1);\n    mantissa = mantissa | exponent >> (0x20 - bit_count & 0xff);\n    exponent = exponent << (bit_count & 0xff);\n  }\n  int exponent_bias = 0x3fe00000 + (exponent_bits + -0x3ff >> 1) * 0x100000;\n  int exponent_offset = 0;\n  uint mantissa_bits = mantissa & 0xfffff | 0x100000;\n  if ((exponent_bits + -0x3ff) * -0x80000000 < 0) {\n    mantissa_bits = mantissa_bits * 2 - ((int)exponent >> 0x1f);\n    exponent = exponent << 1;\n  }\n  mantissa_bits = mantissa_bits * 2 - ((int)exponent >> 0x1f);\n  uint bit_mask = 0x200000;\n  for (int i = 0; i < 0x16; i++) {\n    int bit = exponent_offset + bit_mask;\n    if (bit <= (int)mantissa_bits) {\n      mantissa_bits = mantissa_bits - bit;\n      exponent_offset = exponent_offset + bit;\n      exponent_bias = exponent_bias + bit_mask;\n    }\n    bit_mask = bit_mask >> 1;\n    mantissa_bits = mantissa_bits * 2 - ((int)exponent >> 0x1f);\n    exponent = exponent << 1;\n  }\n  uint rounding_bit = 0x80000000;\n  uint last_bit = 0x20;\n  uint bit_mask2 = 0x80000000;\n  for (int i = 0; i < 0x20; i++) {\n    uint bit = bit_mask2 + rounding_bit;\n    uint new_mantissa = mantissa_bits;\n    if (((int)mantissa_bits < (int)exponent_offset) || ((exponent_offset == mantissa_bits && (bit <= exponent)))) {\n      rounding_bit = bit + bit_mask2;\n      if (((int)bit < 0) && (-1 < (int)rounding_bit)) {\n        new_mantissa = mantissa_bits + 1;\n      }\n      mantissa_bits = mantissa_bits - exponent_offset;\n      if (exponent < bit) {\n        mantissa_bits = mantissa_bits - 1;\n      }\n      exponent = exponent - bit;\n      last_bit = last_bit - 1;\n      mantissa_bits = mantissa_bits * 2 - ((int)exponent >> 0x1f);\n    }\n    exponent = exponent << 1;\n    bit_mask2 = bit_mask2 >> 1;\n    exponent_offset = new_mantissa;\n  }\n  if ((exponent | mantissa_bits) != 0) {\n    if (exponent_bias == 0xffffffff) {\n      exponent_offset = last_bit;\n      exponent_bias = exponent_bias + 1;\n    }\n    else {\n      exponent_offset = exponent_offset + 1 & 0xfffffffe;\n    }\n  }\n  exponent_offset = exponent_offset >> 1;\n  if (exponent_bias << 0x1f < 0) {\n    exponent_offset = exponent_offset | 0x80000000;\n  }\n  return CONCAT44(exponent_bias, exponent_offset);\n}",
            "called": [
                "FUN_080004d0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c0c",
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_float_08006c0c"
        },
        "FUN_0800426c": {
            "renaming": {
                "FUN_0800426c": "calculate_values_and_store_in_memory_0800426c",
                "param_1": "input_parameter_1",
                "param_2": "input_parameter_2",
                "param_3": "input_parameter_3",
                "param_4": "input_parameter_4",
                "puVar1": "pointer_1",
                "puVar2": "pointer_2",
                "uVar3": "value_1",
                "uVar4": "value_2",
                "uVar5": "value_3",
                "uVar6": "value_5",
                "uVar7": "value_7",
                "uVar8": "value_8",
                "uVar9": "value_11",
                "PTR_DAT_08004264": "pointer_data_1",
                "PTR_DAT_08004268": "pointer_data_2",
                "DAT_080042fc": "data_value",
                "FUN_08000ad8": "calculate_value_1",
                "FUN_08000adc": "calculate_value_2",
                "FUN_08001078": "calculate_value_3",
                "FUN_08003fc4": "function_1",
                "FUN_08003fd0": "function_2",
                "FUN_08003fdc": "function_3",
                "FUN_08003fe8": "function_4"
            },
            "code": "void calculate_values_and_store_in_memory_0800426c(uint param_1, uint param_2, uint param_3, uint param_4)\n{\n  uint value_1 = FUNC_08000ad8();\n  uint value_2 = FUNC_08000adc(param_1, param_2);\n  uint value_3 = FUNC_08000ad8(value_1, param_3);\n  uint value_4 = FUNC_08000adc(value_3, param_4);\n  FUNC_08000ad8(value_4, DAT_080042fc);\n  uint value_5 = FUN_08001078();\n  uint value_6 = FUNC_08000adc(value_2, param_3);\n  uint value_7 = FUNC_08000adc(value_6, param_4);\n  FUNC_08000ad8(value_7, DAT_080042fc);\n  uint value_8 = FUN_08001078();\n  uint value_9 = FUNC_08000adc(value_1, param_3);\n  uint value_10 = FUNC_08000adc(value_9, param_4);\n  FUNC_08000ad8(value_10, DAT_080042fc);\n  uint value_11 = FUN_08001078();\n  uint value_12 = FUNC_08000adc(param_3, value_2);\n  uint value_13 = FUNC_08000adc(value_12, param_4);\n  FUNC_08000ad8(value_13, DAT_080042fc);\n  uint max_value = 1000;\n  if (999 < value_11) {\n    value_11 = max_value;\n  }\n  if (999 < value_8) {\n    value_8 = max_value;\n  }\n  if (999 < value_7) {\n    value_7 = max_value;\n  }\n  if (999 < value_5) {\n    value_5 = max_value;\n  }\n  uint* ptr_data_1 = PTR_DAT_08004264;\n  *(uint *)(ptr_data_1 + 8) = value_7 & ~((int)value_7 >> 0x1f);\n  *(uint *)(ptr_data_1 + 0xc) = value_5 & ~((int)value_5 >> 0x1f);\n  *(uint *)(ptr_data_1 + 4) = value_8 & ~((int)value_8 >> 0x1f);\n  *(uint *)ptr_data_1 = value_11 & ~((int)value_11 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(*(uint *)(ptr_data_1 + 4));\n  FUN_08003fdc(*(uint *)(ptr_data_1 + 8));\n  FUN_08003fe8(*(uint *)(ptr_data_1 + 0xc));\n  uint* ptr_data_2 = PTR_DAT_08004268;\n  *(short *)ptr_data_2 = (short)*(uint *)ptr_data_1 + max_value;\n  *(short *)(ptr_data_2 + 2) = (short)*(uint *)(ptr_data_1 + 4) + max_value;\n  *(short *)(ptr_data_2 + 4) = (short)*(uint *)(ptr_data_1 + 8) + max_value;\n  *(short *)(ptr_data_2 + 6) = (short)*(uint *)(ptr_data_1 + 0xc) + max_value;\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08001078",
                "FUN_08000ad8",
                "FUN_08000adc",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800426c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_values_and_store_in_memory_0800426c"
        },
        "FUN_08002538": {
            "renaming": {
                "FUN_08002538": "set_flag_and_return_zero_08002538",
                "param_1": "pointer_to_pointer",
                "param_2": "flag_value",
                "puVar1": "data",
                "puVar2": "pointer"
            },
            "code": "uint32_t set_flag_and_return_zero_08002538(uint32_t **pointer_to_pointer, uint32_t flag_value)\n{\n  uint32_t *pointer = *pointer_to_pointer;\n  uint32_t *data = DAT_08002560;\n  if (pointer == data) {\n    data = (uint32_t *)(pointer[0x11] | 0x8000);\n  }\n  if (pointer == data) {\n    pointer[0x11] = (uint32_t)data;\n  }\n  *pointer |= 1;\n  return 0;\n}",
            "called": [
                "FUN_08002520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002538",
            "calling": [
                "FUN_08003ff4"
            ],
            "imported": false,
            "current_name": "set_flag_and_return_zero_08002538"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "copy_i2c_data_to_buffer_080040e8",
                "param_1": "buffer",
                "param_2": "buffer_size",
                "param_3": "i2c_data",
                "param_4": "i2c_data_size",
                "puVar1": "i2c_data_ptr",
                "puVar4": "buffer_ptr",
                "uVar2": "data_byte",
                "iVar3": "i",
                "iVar5": "buffer_size"
            },
            "code": "void copy_i2c_data_to_buffer_080040e8(uint8_t* buffer, int buffer_size, uint8_t* i2c_data, int i2c_data_size) {\n  uint8_t* i2c_data_ptr;\n  uint8_t data_byte;\n  int i;\n  i2c_data_ptr = i2c_data;\n  for (i = 0; i < i2c_data_size; i++) {\n    data_byte = read_i2c_data_byte(buffer, (i + buffer_size) & 0xffff, i2c_data_ptr, 0x4c, buffer_size);\n    buffer++;\n    *buffer = data_byte;\n    }\n  return;\n}",
            "called": [
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002d88",
                "FUN_08002bf0",
                "FUN_08003298",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "copy_i2c_data_to_buffer_080040e8"
        },
        "FUN_08004ffc": {
            "renaming": {
                "FUN_08004ffc": "initialize_string_08004ffc",
                "param_1": "string",
                "param_2": "max_length",
                "local_78": "string_ptr",
                "local_70": "max_int",
                "local_6c": "initial_length",
                "local_6a": "max_short",
                "local_68": "string_start",
                "local_64": "param_2_copy",
                "uStack_c": "param_3_copy",
                "uStack_8": "param_4_copy",
                "uStack_4": "unused"
            },
            "code": "void initialize_string_08004ffc(undefined *string, undefined4 max_length, undefined4 param_3, undefined4 param_4)\n{\n  undefined *string_ptr [2];\n  undefined4 max_int = 0x7fffffff;\n  undefined2 max_short = 0xffff;\n  undefined2 initial_length = 0x208;\n  undefined *string_start = string;\n  undefined4 param_2_copy = max_length;\n  undefined4 param_3_copy = param_3;\n  undefined4 param_4_copy = param_4;\n  string_ptr[0] = string_start;\n  FUN_080050fc(*(undefined4 *)PTR_PTR_DAT_08005040, string_ptr, param_2_copy);\n  *string_ptr[0] = 0;\n  return;\n}",
            "called": [
                "FUN_080050fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ffc",
            "calling": [
                "FUN_08004cac"
            ],
            "imported": false,
            "current_name": "initialize_string_08004ffc"
        },
        "FUN_0800115c": {
            "renaming": {
                "FUN_0800115c": "get_value_from_pointer_0800115c",
                "PTR_DAT_08001164": "value_pointer"
            },
            "code": "int get_value_from_pointer_0800115c() {\n    int* PTR_DAT_08001164 = (int*)PTR_DAT_08001164;\n    return *PTR_DAT_08001164;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800115c",
            "calling": [
                "FUN_0800209c",
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_080015e8",
                "FUN_08004c18",
                "FUN_08001938",
                "FUN_080016f4",
                "FUN_08001b58",
                "FUN_08001828",
                "thunk_FUN_0800115c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_0800115c"
        },
        "FUN_08002d88": {
            "renaming": {
                "FUN_08002d88": "process_sensor_data_08002d88",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "param_4": "data_4",
                "sVar1": "value_1",
                "sVar2": "value_2",
                "puVar3": "source_ptr",
                "puVar4": "destination_ptr",
                "puVar5": "ptr_1",
                "puVar6": "ptr_2",
                "iVar7": "result",
                "uVar8": "var_1",
                "uVar9": "var_2",
                "local_28": "data_buffer_1",
                "uStack_26": "unused_1",
                "uStack_25": "unused_2",
                "local_24": "data_buffer_2",
                "local_23": "data_buffer_3",
                "local_22": "bitfield_1"
            },
            "code": "void process_sensor_data_08002d88(undefined4 data_1, undefined4 data_2, undefined4 data_3, undefined4 data_4)\n{\n    short value_1;\n    short value_2;\n    undefined *source_ptr;\n    undefined *destination_ptr;\n    undefined *ptr_1;\n    undefined *ptr_2;\n    int result;\n    undefined4 var_1;\n    undefined4 var_2;\n    undefined2 data_buffer_1;\n    undefined unused_1;\n    undefined unused_2;\n    undefined data_buffer_2;\n    undefined data_buffer_3;\n    byte bitfield_1;\n    undefined unused_3;\n    \n    source_ptr = PTR_s____Src_MPU9250_c_08002e80;\n    unused_3 = (undefined)((uint)data_4 >> 0x18);\n    data_buffer_1 = 0;\n    unused_1 = 0;\n    unused_2 = 0;\n    data_buffer_2 = 0;\n    data_buffer_3 = 0;\n    bitfield_1 = 0;\n    result = FUN_0800407c(0x18, 2, PTR_s____Src_MPU9250_c_08002e80, 0xd7, data_1, data_2);\n    if (result << 0x1f < 0)\n    {\n        FUN_080040e8(0x18, 3, &data_buffer_1, 7, source_ptr, 0xda);\n        source_ptr = PTR_DAT_08002e84;\n        if ((int)((uint)bitfield_1 << 0x1c) < 0)\n        {\n            *(short *)(PTR_DAT_08002e94 + 2) = *(short *)(PTR_DAT_08002e94 + 2) + 1;\n        }\n        else\n        {\n            value_1 = CONCAT11(unused_2, unused_1);\n            value_2 = CONCAT11(data_buffer_3, data_buffer_2);\n            *(undefined2 *)PTR_DAT_08002e84 = data_buffer_1;\n            *(short *)(source_ptr + 2) = value_1;\n            *(short *)(source_ptr + 4) = value_2;\n            ptr_2 = PTR_DAT_08002e9c;\n            ptr_1 = PTR_DAT_08002e98;\n            var_2 = *(undefined4 *)PTR_DAT_08002e88;\n            var_1 = FUN_08000c44();\n            var_1 = FUNC_08000cec(var_1, var_2);\n            source_ptr = PTR_DAT_08002e8c;\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)ptr_1);\n            var_1 = FUNC_08000ad8(var_1, *(undefined4 *)ptr_2);\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)source_ptr);\n            destination_ptr = PTR_DAT_08002e90;\n            *(undefined4 *)PTR_DAT_08002e90 = var_1;\n            var_1 = FUN_08000c44((int)value_1);\n            var_1 = FUNC_08000cec(var_1, var_2);\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)(ptr_1 + 4));\n            var_1 = FUNC_08000ad8(var_1, *(undefined4 *)(ptr_2 + 4));\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)(source_ptr + 4));\n            *(undefined4 *)(destination_ptr + 4) = var_1;\n            var_1 = FUN_08000c44((int)value_2);\n            var_1 = FUNC_08000cec(var_1, var_2);\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)(ptr_1 + 8));\n            var_1 = FUNC_08000ad8(var_1, *(undefined4 *)(ptr_2 + 8));\n            var_1 = FUNC_08000cec(var_1, *(undefined4 *)(source_ptr + 8));\n            *(undefined4 *)(destination_ptr + 8) = var_1;\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002d88",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "process_sensor_data_08002d88"
        },
        "FUN_08000c44": {
            "renaming": {
                "FUN_08000c44": "calculate_hash_08000c44",
                "param_1": "input",
                "uVar3": "sign_bit",
                "iVar1": "leading_zeroes",
                "uVar2": "shift_amount",
                "iVar4": "constant",
                "uVar5": "high_bits",
                "shifted_input": "shifted_input",
                "shifted_constant": "result",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08000c44(uint input)\n{\n  uint sign_bit = input & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  int leading_zeroes = count_leading_zeroes(input);\n  uint shift_amount = leading_zeroes - 8;\n  int constant = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (leading_zeroes > 7) {\n    uint high_bits = 0 << (shift_amount & 0xff);\n    uint shifted_input = input << (shift_amount & 0xff);\n    uint shifted_low_bits = 0U >> (0x20 - shift_amount & 0xff);\n    uint overflow = (uint)(0x7fffffff < high_bits);\n    uint result = constant + shifted_input + shifted_low_bits + overflow;\n    if (high_bits == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_input = input << (leading_zeroes + 0x18U & 0xff);\n  uint shifted_constant = constant + ((input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)shifted_input >> 0x1f));\n  if ((shifted_input & 0x7fffffff) == 0) {\n    shifted_constant = shifted_constant & ~(shifted_input >> 0x1f);\n  }\n  return shifted_constant;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c44",
            "calling": [
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_0800411c",
                "FUN_08002bf0",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c44"
        },
        "FUN_08000a04": {
            "renaming": {
                "FUN_08000a04": "is_valid_input_08000a04",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "code": "bool is_valid_input_08000a04(uint32_t input_1, int32_t input_2, uint32_t input_3, int32_t input_4) {\n    bool is_input_2_valid = ((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0);\n    bool is_input_4_valid = ((input_4 << 1) >> 0x15 != -1) || ((input_3 | input_4 << 0xc) == 0);\n    return is_input_2_valid && is_input_4_valid;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a04",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "is_valid_input_08000a04"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_values_080025e8",
                "param_1": "params",
                "iVar1": "val_1",
                "iVar2": "val_2",
                "uVar3": "val_3",
                "iVar4": "val_4",
                "iVar5": "val_5",
                "iVar6": "current"
            },
            "code": "void update_values_080025e8(int *params)\n{\n    int current = *params;\n    uint val_4 = params[4];\n    *(uint *)(current + 0x10) = *(uint *)(current + 0x10) & 0xffffcfff | params[3];\n    *(uint *)(current + 0xc) = params[2] | val_4 | params[5] | *(uint *)(current + 0xc) & 0xffffe9f3;\n    *(uint *)(current + 0x14) = *(uint *)(current + 0x14) & 0xfffffcff | params[6];\n    if (current == DAT_08002720) {\n        int val_1 = FUN_08002250();\n        int val_4 = (int)(((ulonglong)(uint)(val_1 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100);\n        val_1 = FUN_08002250();\n        int val_5 = params[1];\n        int val_2 = FUN_08002250();\n        val_2 = (uint)(val_1 * 0x19) / (uint)(val_5 << 2) + (int)(((ulonglong)(uint)(val_2 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100) * -100;\n        val_1 = FUN_08002250();\n        uint val_3 = (uint)(val_1 * 0x19) / (uint)(params[1] << 2);\n        val_1 = FUN_08002250();\n    }\n    else {\n        int val_1 = FUNC_08002220();\n        int val_4 = (int)(((ulonglong)(uint)(val_1 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100);\n        val_1 = FUNC_08002220();\n        int val_5 = params[1];\n        int val_2 = FUNC_08002220();\n        val_2 = (uint)(val_1 * 0x19) / (uint)(val_5 << 2) + (int)(((ulonglong)(uint)(val_2 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100) * -100;\n        val_1 = FUNC_08002220();\n        uint val_3 = (uint)(val_1 * 0x19) / (uint)(params[1] << 2);\n        val_1 = FUNC_08002220();\n    }\n    *(uint *)(current + 8) = (((val_3 + (int)(((ulonglong)(uint)(val_1 * 0x19) / (ulonglong)(uint)(params[1] << 2)) / 100)) * -100) * 0x10 + 0x32) / 100 & 0xf | (val_2 * 0x10 + 0x32U) / 100 & 0xf0) + val_4 * 0x10;\n}",
            "called": [
                "FUN_08002250",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "update_values_080025e8"
        },
        "FUN_08002b48": {
            "renaming": {
                "FUN_08002b48": "read_and_convert_sensor_data_08002b48",
                "in_r3": "lower_bits",
                "local_18": "converted_value",
                "local_14": "upper_bits",
                "PTR_s____Src_MPU9250_c_08002be4": "buffer",
                "PTR_DAT_08002be8": "lower_bits_ptr",
                "PTR_DAT_08002bec": "converted_values_ptr",
                "puVar1": "buffer_ptr",
                "uVar2": "converted_value"
            },
            "code": "void read_and_convert_sensor_data_08002b48(void)\n{\n  uint16_t lower_bits;\n  uint32_t upper_bits;\n  uint32_t converted_value;\n  uint8_t PTR_s____Src_MPU9250_c_08002be4[6];\n  uint8_t i;\n  uint32_t *PTR_DAT_08002bec = (uint32_t*)0x08002bec;\n  uint16_t *PTR_DAT_08002be8 = (uint16_t*)0x08002be8;\n  uint32_t *upper_bits_ptr = (uint32_t*)0x08002bec;\n  \n  memset(PTR_s____Src_MPU9250_c_08002be4, 0, sizeof(PTR_s____Src_MPU9250_c_08002be4));\n  PTR_s____Src_MPU9250_c_08002be4[0] = 0xd0;\n  PTR_s____Src_MPU9250_c_08002be4[1] = 0x3b;\n  \n  spi_transfer(PTR_s____Src_MPU9250_c_08002be4, sizeof(PTR_s____Src_MPU9250_c_08002be4));\n  \n  lower_bits = PTR_s____Src_MPU9250_c_08002be4[1] << 8 | PTR_s____Src_MPU9250_c_08002be4[0];\n  upper_bits = PTR_s____Src_MPU9250_c_08002be4[5] << 24 | PTR_s____Src_MPU9250_c_08002be4[4] << 16 | PTR_s____Src_MPU9250_c_08002be4[3] << 8 | PTR_s____Src_MPU9250_c_08002be4[2];\n  \n  *PTR_DAT_08002be8 = lower_bits;\n  \n  converted_value = convert_sensor_data(upper_bits);\n  *PTR_DAT_08002bec = converted_value;\n  \n  for (i = 0; i < 3; i++) {\n    converted_value = convert_sensor_data(upper_bits);\n    *PTR_DAT_08002bec = converted_value;\n    PTR_DAT_08002bec++;\n  }\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b48",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "read_and_convert_sensor_data_08002b48"
        },
        "FUN_08004f68": {
            "renaming": {
                "FUN_08004f68": "copy_and_clear_memory_08004f68",
                "iVar1": "index",
                "puVar2": "destination_pointer",
                "UNRECOVERED_JUMPTABLE": "jump_table_address"
            },
            "code": "void copy_and_clear_memory_08004f68(void)\n{\n  int index;\n  undefined4 *destination_pointer;\n  code *jump_table_address;\n  for (index = 0; index < PTR_DAT_08004fa4 - PTR_DAT_08004fa0; index += 4) {\n    *(undefined4 *)(PTR_DAT_08004fa0 + index) = *(undefined4 *)(DAT_08004f9c + index);\n  }\n  for (destination_pointer = (undefined4 *)PTR_DAT_08004fa8; destination_pointer < PTR_DAT_08004fac; destination_pointer++) {\n    *destination_pointer = 0;\n  }\n  execute_function_at_address(FUN_08004f10);\n  execute_function_at_address(FUN_08004fb4);\n  jump_table_address = (code *)0x8004f9a;\n  execute_function_at_address(jump_table_address);\n}",
            "called": [
                "FUN_08004fb4",
                "FUN_080041ae",
                "FUN_08004f10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f68",
            "calling": [],
            "imported": false,
            "current_name": "copy_and_clear_memory_08004f68"
        },
        "FUN_08001170": {
            "renaming": {
                "FUN_08001170": "update_data_08001170",
                "param_1": "param",
                "PTR_DAT_08001190": "ptr",
                "DAT_08001190": "data_start"
            },
            "code": "void update_data_08001170(uint8_t param) {\n    uint32_t* PTR_DAT_08001190 = (uint32_t*)(DAT_08001190 + 0xc);\n    uint32_t mask = 0xf8ff;\n    uint32_t data = 0x5fa0000 | ((param & 7) << 8);\n    *PTR_DAT_08001190 = (*PTR_DAT_08001190 & mask) | data;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001170",
            "calling": [
                "FUN_08004ccc",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "update_data_08001170"
        },
        "FUN_08002bf0": {
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_registers_08002bf0",
                "puVar1": "reg_ptr1",
                "puVar2": "reg_ptr2",
                "uVar3": "reg_val",
                "local_20": "gyro_config",
                "local_1c": "accel_config",
                "PTR_s____Src_MPU9250_c_08002c9c": "N/A",
                "PTR_DAT_08002ca0": "reg_ptr1",
                "ushort": "uint16_t",
                "short": "int16_t",
                "PTR_DAT_08002ca4": "reg_ptr2",
                "*(undefined4 *)PTR_DAT_08002cac": "*(uint32_t *)PTR_DAT_08002cac",
                "(int)CONCAT11(local_20._2_1_,local_20._3_1_)": "gyro_fs_sel",
                "*(undefined4 *)(puVar1 + 4)": "*(uint32_t *)(reg_ptr1 + 4)",
                "*(undefined4 *)(puVar1 + 8)": "*(uint32_t *)(reg_ptr1 + 8)",
                "DAT_08002ca8": "0x40000000",
                "FUNC_08000c44": "read_mpu9250_register",
                "FUNC_08000cec": "write_mpu9250_register",
                "FUNC_08000ad8": "write_ak8963_register"
            },
            "code": "void initialize_mpu9250_registers_08002bf0(void)\n{\n  uint8_t *PTR_DAT_08002ca0;\n  uint8_t *PTR_DAT_08002ca4;\n  uint32_t reg_val;\n  uint32_t gyro_config = 0x43;\n  uint32_t accel_config = 0xD0;\n  uint16_t gyro_fs_sel = 0x7B;\n  uint16_t accel_fs_sel = 6;\n  reg_val = 0;\n  reg_val |= (gyro_fs_sel << 8);\n  reg_val |= gyro_config;\n  PTR_DAT_08002ca0 = PTR_DAT_08002ca0;\n  *(uint16_t *)PTR_DAT_08002ca0 = reg_val;\n  reg_val = 0;\n  reg_val |= accel_fs_sel << 8;\n  reg_val |= accel_config;\n  *(uint16_t *)(PTR_DAT_08002ca0 + 2) = reg_val;\n  PTR_DAT_08002ca4 = PTR_DAT_08002ca4;\n  reg_val = FUNC_08000c44();\n  reg_val = FUNC_08000cec(reg_val, DAT_08002ca8);\n  reg_val = FUNC_08000cec(reg_val, 0x38000000);\n  reg_val = FUNC_08000ad8(reg_val, *(uint32_t *)PTR_DAT_08002ca0);\n  *(undefined4 *)PTR_DAT_08002cac = reg_val;\n  reg_val = FUNC_08000c44(gyro_fs_sel);\n  reg_val = FUNC_08000cec(reg_val, DAT_08002ca8);\n  reg_val = FUNC_08000cec(reg_val, 0x38000000);\n  reg_val = FUNC_08000ad8(reg_val, *(uint32_t *)(PTR_DAT_08002ca0 + 4));\n  *(uint32_t *)(PTR_DAT_08002ca4 + 4) = reg_val;\n  reg_val = FUNC_08000c44(accel_fs_sel);\n  reg_val = FUNC_08000cec(reg_val, DAT_08002ca8);\n  reg_val = FUNC_08000cec(reg_val, 0x38000000);\n  reg_val = FUNC_08000ad8(reg_val, *(uint32_t *)(PTR_DAT_08002ca0 + 8));\n  *(uint32_t *)(PTR_DAT_08002ca4 + 8) = reg_val;\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002bf0",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "initialize_mpu9250_registers_08002bf0"
        },
        "FUN_08002ad0": {
            "renaming": {
                "FUN_08002ad0": "initialize_MPU9250_08002ad0",
                "PTR_s____Src_MPU9250_c_08002b44": "s_MPU9250_register_address"
            },
            "code": "void initialize_MPU9250_08002ad0(void)\n{\n  set_MPU9250_register(0xd0,0x75,PTR_s____Src_MPU9250_c_08002b44,0x3b);\n  set_MPU9250_register(0xd0,0x6b,0x80,1);\n  set_MPU9250_register(0xd0,0x6b,1);\n  set_MPU9250_register(0xd0,0x6c,0,1);\n  set_MPU9250_register(0xd0,0x19,0,1);\n  set_MPU9250_register(0xd0,0x1d,3,1);\n  set_MPU9250_register(0xd0,0x1a,3,1);\n  set_MPU9250_register(0xd0,0x1b,0x10,1);\n  set_MPU9250_register(0xd0,0x1c,8,1);\n  return;\n}",
            "called": [
                "FUN_0800403c",
                "FUN_0800407c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ad0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "initialize_MPU9250_08002ad0"
        },
        "FUN_08001050": {
            "renaming": {
                "FUN_08001050": "check_for_carry_or_zero_flag_08001050",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "code": "bool check_for_carry_or_zero_flag_08001050(void)\n{\n  bool carry_flag = (bool)in_CY;\n  bool zero_flag = (bool)in_ZR;\n  FUN_08000ffc();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001050",
            "calling": [
                "FUN_08002ee8"
            ],
            "imported": false,
            "current_name": "check_for_carry_or_zero_flag_08001050"
        },
        "FUN_080009c8": {
            "renaming": {
                "FUN_080009c8": "check_for_carry_or_zero_080009c8",
                "in_CY": "carry",
                "in_ZR": "is_zero",
                "FUN_08000990": "check_carry"
            },
            "code": "bool check_for_carry_or_zero_080009c8(void)\n{\n  bool carry = check_carry();\n  bool is_zero = check_zero();\n  return !carry || is_zero;\n}",
            "called": [
                "FUN_08000990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009c8",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "check_for_carry_or_zero_080009c8"
        },
        "FUN_08002ed4": {
            "renaming": {
                "FUN_08002ed4": "calculate_new_value_08002ed4",
                "puVar1": "value_ptr",
                "uVar2": "result1",
                "uVar3": "constant1",
                "uVar4": "constant2"
            },
            "code": "void calculate_new_value_08002ed4(void)\n{\n    undefined *value_ptr;\n    undefined4 constant1 = *(undefined4 *)PTR_DAT_08002ee0;\n    undefined4 constant2 = *(undefined4 *)(PTR_DAT_08002ee4 + 4);\n    undefined4 result1 = FUNC_08000ad8(0x3f800000, constant2);\n    result1 = FUNC_08000cec(result1, constant1);\n    undefined4 result2 = FUNC_08000cec(constant2, *(undefined4 *)value_ptr);\n    result1 = FUNC_08000adc(result2, result1);\n    *(undefined4 *)value_ptr = result1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed4",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08002ed4"
        },
        "FUN_08000f9c": {
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_negative_1",
                "uVar2": "param_1_multiplied_by_2",
                "uVar3": "param_2_multiplied_by_2",
                "uVar4": "param_1_or_param_2_without_most_significant_bit",
                "bVar5": "is_param_1_or_param_2_without_most_significant_bit_zero"
            },
            "code": "uint calculate_result_08000f9c(uint param_1, uint param_2)\n{\n    bool is_negative_1 = false;\n    bool is_negative_2 = false;\n    uint param_1_multiplied_by_2 = param_1 * 2;\n    uint param_2_multiplied_by_2 = param_2 * 2;\n    if (((int)param_1_multiplied_by_2 >> 0x18 == -1 || (int)param_2_multiplied_by_2 >> 0x18 == -1) && ((((int)param_1_multiplied_by_2 >> 0x18 == -1 && ((param_1 & 0x7fffff) != 0)) || (((int)param_2_multiplied_by_2 >> 0x18 == -1 && ((param_2 & 0x7fffff) != 0)))))\n    {\n        return 1;\n    }\n    uint param_1_or_param_2_without_most_significant_bit = param_2 & 0x7fffffff | param_1_multiplied_by_2;\n    bool is_param_1_or_param_2_without_most_significant_bit_zero = param_1_or_param_2_without_most_significant_bit == 0;\n    if (!is_param_1_or_param_2_without_most_significant_bit_zero)\n    {\n        uint param_1_xor_param_2 = param_1 ^ param_2;\n        is_param_1_or_param_2_without_most_significant_bit_zero = param_1_xor_param_2 == 0;\n    }\n    is_negative_1 = -1 < (int)param_1_xor_param_2;\n    if (is_negative_1)\n    {\n        param_1 = param_1_multiplied_by_2 + param_2 * -2;\n        is_param_1_or_param_2_without_most_significant_bit_zero = param_1 == 0;\n    }\n    if (is_negative_1 && param_2_multiplied_by_2 <= param_1_multiplied_by_2 && !is_param_1_or_param_2_without_most_significant_bit_zero)\n    {\n        param_1 = (int)param_2 >> 0x1f;\n    }\n    if (!is_negative_1 || param_2_multiplied_by_2 > param_1_multiplied_by_2)\n    {\n        param_1 = ~((int)param_2 >> 0x1f);\n    }\n    if (!is_param_1_or_param_2_without_most_significant_bit_zero)\n    {\n        param_1 |= 1;\n    }\n    return param_1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000f9c",
            "calling": [
                "FUN_08001004"
            ],
            "imported": false,
            "current_name": "calculate_result_08000f9c"
        },
        "FUN_08006228": {
            "renaming": {
                "FUN_08006228": "FUNC_08006228"
            },
            "code": "\nuint FUNC_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  uint extraout_r1;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  uint extraout_r1_02;\n  undefined4 extraout_r1_03;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  ulonglong uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  longlong lVar18;\n  ulonglong uVar19;\n  ulonglong uVar20;\n  undefined8 uVar21;\n  uint local_70;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 = param_4 & 0x7fffffff;\n  if ((uVar10 | param_3) == 0) {\n    return 0;\n  }\n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= (int)DAT_08006428) {\n    if (uVar8 == DAT_08006428) {\n      if (param_1 == 0) {\n        if (uVar8 < uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 != DAT_08006428) || (param_3 == 0)) {\n          if (-1 < (int)param_2) goto LAB_0800632a;\n          if (DAT_08006430 < (int)uVar10) {\n            local_70 = 2;\nLAB_080062ba:\n            if (param_3 == 0) {\n              if (uVar10 == DAT_08006428) {\n                if ((uVar8 + 0xc0100000 | param_1) == 0) {\n                  return 0;\n                }\n                if (DAT_08006434 < (int)uVar8) {\n                  if ((int)param_4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)param_4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (uVar10 == DAT_08006438) {\n                if (-1 < (int)param_4) {\n                  return param_1;\n                }\n                uVar8 = 0;\n                uVar10 = DAT_08006438;\n                goto LAB_08006320;\n              }\n              uVar19 = CONCAT44(param_2,param_1);\n              if (param_4 == 0x40000000) goto LAB_0800634a;\n              if ((param_4 == DAT_0800643c) && (-1 < (int)param_2)) {\n                uVar10 = FUN_08006c0c(param_1,param_2);\n                return uVar10;\n              }\n            }\n          }\n          else {\n            if ((int)uVar10 <= DAT_08006430 + -0x3500000) {\nLAB_0800632a:\n              local_70 = 0;\n              goto LAB_080062ba;\n            }\n            iVar6 = ((int)uVar10 >> 0x14) + -0x3ff;\n            if (0x14 < iVar6) {\n              uVar2 = param_3 >> (0x34U - iVar6 & 0xff);\n              if (param_3 == uVar2 << (0x34U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 == 0) {\n              uVar2 = (int)uVar10 >> (0x14U - iVar6 & 0xff);\n              local_70 = param_3;\n              if (uVar10 == uVar2 << (0x14U - iVar6 & 0xff)) {\n                local_70 = 2 - (uVar2 & 1);\n              }\n              goto LAB_0800630c;\n            }\n            local_70 = 0;\n          }\n          uVar13 = do_nothing_0800708c(param_1,param_2);\n          uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n          uVar11 = (undefined4)(uVar13 >> 0x20);\n          uVar1 = (undefined4)uVar13;\n          uVar20 = uVar13 & 0xffffffff | ((ulonglong)param_2 & 0x7fffffff) << 0x20;\n          if ((param_1 == 0) && ((uVar8 == 0 || ((param_2 & 0x3fffffff) == DAT_08006438)))) {\n            if ((int)param_4 < 0) {\n              uVar13 = FUNC_08000724(0,DAT_08006438,uVar1,uVar11);\n            }\n            if (-1 < (int)param_2) {\n              return (uint)uVar13;\n            }\n            if ((local_70 | uVar8 + 0xc0100000) != 0) {\n              return (uint)uVar13;\n            }\n          }\n          else {\n            uVar2 = 0xffffffff - ((int)param_2 >> 0x1f);\n            uVar13 = CONCAT44(param_2,param_1);\n            if ((local_70 | uVar2) != 0) {\n              if (DAT_08006440 < (int)uVar10) {\n                param_1 = DAT_08006420;\n                param_2 = DAT_08006424;\n                if (DAT_08006440 + 0x2100000 < (int)uVar10) {\n                  if (DAT_08006434 < (int)uVar8) {\nLAB_08006418:\n                    if ((int)param_4 < 1) {\n                      return 0;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  uVar19 = CONCAT44(DAT_08006424,DAT_08006420);\n                  if (-1 < (int)param_4) {\n                    return 0;\n                  }\n                  goto LAB_0800634a;\n                }\n                if ((int)uVar8 <= DAT_08006444) goto LAB_080063fa;\n                if ((int)DAT_08006438 < (int)uVar8) goto LAB_08006418;\n                uVar14 = FUNC_08000168(uVar1,uVar11,0,DAT_080065d0);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar1 = (undefined4)uVar14;\n                uVar14 = FUNC_080004d0(uVar1,uVar11,DAT_080065a8,DAT_080065ac);\n                uVar15 = FUNC_080004d0(uVar1,uVar11,DAT_080065b0,DAT_080065b4);\n                uVar16 = FUNC_080004d0(uVar1,uVar11,0,DAT_080065d4);\n                uVar16 = FUNC_08000168(DAT_080065b8,DAT_080065bc,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar1,uVar11);\n                uVar16 = FUNC_08000168(0,DAT_080065d8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar17 = FUNC_080004d0(uVar1,uVar11,uVar1,uVar11);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                      (int)((ulonglong)uVar17 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),DAT_080065c0,\n                                      DAT_080065c4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                             (int)((ulonglong)uVar15 >> 0x20));\n                lVar18 = (ulonglong)extraout_r1 << 0x20;\n                uVar10 = extraout_r1;\n              }\n              else {\n                local_54 = 0;\n                if (uVar8 < 0x100000) {\n                  uVar20 = FUNC_080004d0();\n                  local_54 = -0x35;\n                }\n                uVar10 = (uint)(uVar20 >> 0x20);\n                uVar1 = (undefined4)uVar20;\n                local_54 = ((int)uVar10 >> 0x14) + -0x3ff + local_54;\n                uVar10 = uVar10 & 0xfffff;\n                uVar8 = uVar10 | 0x3ff00000;\n                if (DAT_0800691c < (int)uVar10) {\n                  if (DAT_08006920 < (int)uVar10) {\n                    uVar8 = uVar8 - 0x100000;\n                    local_54 = local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar6 = 1;\n                }\n                else {\nLAB_08006628:\n                  iVar6 = 0;\n                }\n                uVar7 = *(undefined4 *)(PTR_DAT_08006924 + iVar6 * 8);\n                uVar9 = *(undefined4 *)((int)(PTR_DAT_08006924 + iVar6 * 8) + 4);\n                uVar14 = FUNC_08000168(uVar1,uVar8,uVar7,uVar9);\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_0800016c(uVar1,uVar8,uVar7,uVar9);\n                uVar15 = FUNC_08000724(0,DAT_08006928,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0((int)uVar14,uVar12,(int)uVar15,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = (undefined4)uVar16;\n                uVar16 = FUNC_080004d0(0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,uVar12,(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + iVar6 * 0x40000,\n                                      uVar7,uVar9);\n                uVar16 = FUNC_08000168(uVar1,uVar8,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),0,uVar4);\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,uVar3\n                                     );\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar11,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar1 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar1,uVar3,DAT_080068d0,DAT_080068d4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068d8,\n                                      DAT_080068dc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e0,\n                                      DAT_080068e4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068e8,\n                                      DAT_080068ec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f0,\n                                      DAT_080068f4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar1,uVar3);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_080068f8,\n                                      DAT_080068fc);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar16 = FUNC_0800016c(uVar11,uVar4,0,uVar4);\n                uVar16 = FUNC_080004d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar15 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(0,uVar4,0,uVar4);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar17 = FUNC_0800016c((int)uVar16,uVar3,0,DAT_0800692c);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar15,uVar1);\n                uVar17 = FUNC_080004d0(0,uVar4,0,extraout_r1_00);\n                uVar7 = (undefined4)((ulonglong)uVar17 >> 0x20);\n                uVar21 = FUNC_08000168(0,extraout_r1_00,0,DAT_0800692c);\n                uVar16 = FUNC_08000168((int)uVar21,(int)((ulonglong)uVar21 >> 0x20),(int)uVar16,uVar3\n                                     );\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar14 = FUNC_080004d0((int)uVar14,uVar12,0,extraout_r1_00);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar1 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                FUNC_0800016c((int)uVar17,uVar7,(int)uVar15,uVar1);\n                uVar14 = FUNC_080004d0(0,extraout_r1_01,DAT_08006900,DAT_08006904);\n                uVar16 = FUNC_08000168(0,extraout_r1_01,(int)uVar17,uVar7);\n                uVar15 = FUNC_08000168((int)uVar15,uVar1,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20)\n                                     );\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006908,\n                                      DAT_0800690c);\n                uVar16 = FUNC_080004d0(0,extraout_r1_01,DAT_08006910,DAT_08006914);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),\n                                      *(undefined4 *)(PTR_DAT_08006930 + iVar6 * 8),\n                                      *(undefined4 *)((int)(PTR_DAT_08006930 + iVar6 * 8) + 4));\n                uVar16 = FUN_08000404(local_54);\n                uVar1 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar11 = *(undefined4 *)(PTR_DAT_08006934 + iVar6 * 8);\n                uVar12 = *(undefined4 *)((int)(PTR_DAT_08006934 + iVar6 * 8) + 4);\n                uVar17 = FUNC_0800016c((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar17 = FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),uVar11,uVar12);\n                FUNC_0800016c((int)uVar17,(int)((ulonglong)uVar17 >> 0x20),(int)uVar16,uVar1);\n                uVar16 = FUNC_08000168(0,extraout_r1_02,(int)uVar16,uVar1);\n                lVar18 = FUNC_08000168((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),uVar11,uVar12);\n                uVar10 = extraout_r1_02;\n              }\n              uVar14 = FUNC_08000168((int)lVar18,(int)((ulonglong)lVar18 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              param_2 = DAT_080065dc;\n              if ((local_70 - 1 | uVar2) != 0) {\n                param_2 = DAT_080065d0;\n              }\n              uVar15 = FUNC_08000168(param_3,param_4,0,param_4);\n              uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,uVar10);\n              uVar14 = FUNC_080004d0((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),param_3,param_4);\n              uVar14 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                    (int)((ulonglong)uVar14 >> 0x20));\n              uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar1 = (undefined4)uVar14;\n              uVar14 = FUNC_080004d0(0,uVar10,0,param_4);\n              uVar3 = (undefined4)((ulonglong)uVar14 >> 0x20);\n              uVar11 = (undefined4)uVar14;\n              lVar18 = FUNC_0800016c(uVar1,uVar12,uVar11,uVar3);\n              uVar8 = (uint)((ulonglong)lVar18 >> 0x20);\n              uVar10 = (uint)lVar18;\n              if (DAT_080065e0 < (int)uVar8) {\n                if ((uVar8 + 0xbf700000 | uVar10) == 0) {\n                  uVar15 = FUNC_0800016c(uVar1,uVar12,DAT_08006ba8,DAT_08006bac);\n                  uVar16 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009f0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                       (int)((ulonglong)uVar16 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_080065c8,DAT_080065cc);\n                param_1 = DAT_080065c8;\n                param_2 = DAT_080065cc;\n                goto LAB_0800634a;\n              }\n              if (DAT_08006c04 < (int)(uVar8 & 0x7fffffff)) {\n                if ((DAT_08006c08 + uVar8 | uVar10) == 0) {\n                  uVar15 = FUNC_08000168(uVar10,uVar8,uVar11,uVar3);\n                  iVar6 = FUN_080009c8(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                  if (iVar6 == 0) goto LAB_08006968;\n                }\n                uVar19 = FUNC_080004d0(0,param_2,DAT_08006bf0,DAT_08006bf4);\n                param_1 = DAT_08006bf0;\n                param_2 = DAT_08006bf4;\n              }\n              else {\nLAB_08006968:\n                if (DAT_08006bf8 < (int)(uVar8 & 0x7fffffff)) {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  uVar10 = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  iVar6 = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - uVar10 & 0xff);\n                  if (lVar18 < 0) {\n                    iVar6 = -iVar6;\n                  }\n                  uVar14 = FUNC_08000168(uVar11,uVar3,0,uVar8 & ~(DAT_08006bfc >> (uVar10 & 0xff)));\n                }\n                else {\n                  iVar6 = 0;\n                }\n                local_64 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                local_68 = (undefined4)uVar14;\n                FUNC_0800016c(local_68,local_64,uVar1,uVar12);\n                uVar14 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bb0,DAT_08006bb4);\n                uVar11 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_08000168(0,extraout_r1_03,local_68,local_64);\n                uVar15 = FUNC_08000168(uVar1,uVar12,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bb8,\n                                      DAT_08006bbc);\n                uVar16 = FUNC_080004d0(0,extraout_r1_03,DAT_08006bc0,DAT_08006bc4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                      (int)((ulonglong)uVar16 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_0800016c((int)uVar14,uVar11,(int)uVar15,uVar12);\n                uVar3 = (undefined4)((ulonglong)uVar16 >> 0x20);\n                uVar1 = (undefined4)uVar16;\n                uVar14 = FUNC_08000168(uVar1,uVar3,(int)uVar14,uVar11);\n                uVar14 = FUNC_08000168((int)uVar15,uVar12,(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar12 = (undefined4)((ulonglong)uVar14 >> 0x20);\n                uVar15 = FUNC_080004d0(uVar1,uVar3,uVar1,uVar3);\n                uVar4 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar11 = (undefined4)uVar15;\n                uVar15 = FUNC_080004d0(uVar11,uVar4,DAT_08006bc8,DAT_08006bcc);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd0,\n                                      DAT_08006bd4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006bd8,\n                                      DAT_08006bdc);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be0,\n                                      DAT_08006be4);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_0800016c((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08006be8,\n                                      DAT_08006bec);\n                uVar15 = FUNC_080004d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),uVar11,uVar4);\n                uVar15 = FUNC_08000168(uVar1,uVar3,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n                uVar11 = (undefined4)((ulonglong)uVar15 >> 0x20);\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar15,uVar11);\n                uVar15 = FUNC_08000168((int)uVar15,uVar11,0,0x40000000);\n                uVar15 = FUNC_08000724((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 >> 0x20));\n                uVar16 = FUNC_080004d0(uVar1,uVar3,(int)uVar14,uVar12);\n                uVar14 = FUNC_0800016c((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar14,\n                                      uVar12);\n                uVar14 = FUNC_08000168((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 >> 0x20));\n                uVar14 = FUNC_08000168((int)uVar14,(int)((ulonglong)uVar14 >> 0x20),uVar1,uVar3);\n                uVar13 = FUNC_08000168(0,DAT_08006c00,(int)uVar14,(int)((ulonglong)uVar14 >> 0x20));\n                iVar5 = (int)(uVar13 >> 0x20);\n                uVar10 = iVar5 + iVar6 * 0x100000;\n                uVar19 = uVar13 & 0xffffffff | (ulonglong)uVar10 << 0x20;\n                if ((int)uVar10 < 0x100000) {\n                  uVar19 = FUN_080071c0((int)uVar13,iVar5,iVar6);\n                }\n                param_1 = 0;\n              }\nLAB_0800634a:\n              uVar10 = FUNC_080004d0((int)uVar19,(int)(uVar19 >> 0x20),param_1,param_2);\n              return uVar10;\n            }\n          }\n          uVar1 = (undefined4)(uVar13 >> 0x20);\n          uVar14 = FUNC_08000168((int)uVar13,uVar1,(int)uVar13,uVar1);\n          uVar10 = (uint)((ulonglong)uVar14 >> 0x20);\n          uVar8 = (uint)uVar14;\n          param_1 = uVar8;\n          param_2 = uVar10;\nLAB_08006320:\n          uVar10 = FUNC_08000724(uVar8,uVar10,param_1,param_2);\n          return uVar10;\n        }\n      }\n    }\n    else if ((int)uVar10 <= (int)DAT_08006428) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  uVar10 = FUN_080070a4(PTR_DAT_0800642c);\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_08000404",
                "FUN_080009c8",
                "FUN_080071c0",
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006228",
            "calling": [
                "FUN_08005900"
            ],
            "imported": false,
            "current_name": "FUNC_08006228"
        },
        "FUN_08000c3c": {
            "renaming": {
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "input",
                "iVar1": "leading_zeroes",
                "uVar2": "shift",
                "iVar3": "multiplier",
                "uVar4": "carry",
                "left_shifted": "left_shifted",
                "right_shifted": "right_shifted",
                "7": "7",
                "0x80000000": "0x80000000",
                "0U": "0U",
                "0x20": "0x20",
                "uint": "uint",
                "int": "int",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_hash_08000c3c(uint input){\n  int leading_zeroes = count_leading_zeroes(input);\n  int shift = leading_zeroes - 8;\n  int multiplier = shift * -0x800000 + 0x4a800000;\n  if (leading_zeroes > 7) {\n    uint left_shifted = input << (shift & 0xff);\n    uint right_shifted = 0U >> (0x20 - shift & 0xff);\n    uint carry = (uint)(0x7fffffff < (0 << (shift & 0xff)));\n    uint result = multiplier + left_shifted + right_shifted + carry;\n    if ((0 << (shift & 0xff)) == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint left_shifted = input << (leading_zeroes + 0x18U & 0xff);\n  uint right_shifted = (input >> (0x20 - (leading_zeroes + 0x18U) & 0xff)) - ((int)left_shifted >> 0x1f);\n  uint carry = ~(left_shifted >> 0x1f);\n  uint result = multiplier + right_shifted;\n  if ((left_shifted & 0x7fffffff) == 0) {\n    result = result & carry;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000c3c",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "calculate_hash_08000c3c"
        },
        "FUN_080043bc": {
            "renaming": {
                "FUN_080043bc": "copy_and_process_data_080043bc",
                "PTR_DAT_080043ec": "data_source",
                "local_24": "local_data_copy",
                "local_1c": "destination_end",
                "uVar1": "first_half",
                "uVar2": "second_half",
                "puVar3": "dest_ptr",
                "puVar4": "source_ptr"
            },
            "code": "void copy_and_process_data_080043bc(void)\n{\n  undefined4 first_half;\n  undefined4 second_half;\n  undefined4 *source_ptr = PTR_DAT_080043ec;\n  undefined4 *dest_ptr = local_data_copy;\n  undefined2 *destination_end = local_data_copy + 12;\n  while (dest_ptr < destination_end) {\n    first_half = *source_ptr;\n    second_half = source_ptr[1];\n    source_ptr += 2;\n    *dest_ptr = first_half;\n    dest_ptr[1] = second_half;\n    dest_ptr += 2;\n  }\n  *(undefined2 *)dest_ptr = *(undefined2 *)source_ptr;\n  process_data(0x66, local_data_copy, 0x12);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043bc",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "copy_and_process_data_080043bc"
        },
        "FUN_08001214": {
            "renaming": {
                "FUN_08001214": "check_param_and_set_values_08001214",
                "param_1": "param",
                "iVar2": "data_section_address",
                "puVar1": "data_section_ptr"
            },
            "code": "int check_param_and_set_values_08001214(int param)\n{\n  int data_section_address = DAT_0800123c;\n  int *data_section_ptr = DAT_08001238;\n  if (param - 1U < 0x1000000) {\n    data_section_ptr[1] = param - 1U;\n    *(unsigned char *)(data_section_address + 0x23) = 0xf0;\n    data_section_ptr[2] = 0;\n    *data_section_ptr = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "check_param_and_set_values_08001214"
        },
        "FUN_08003fc4": {
            "renaming": {
                "FUN_08003fc4": "set_value_at_offset_of_pointer_08003fc4",
                "param_1": "value",
                "PTR_DAT_08003fcc": "pointer_data"
            },
            "code": "void set_value_at_offset_of_pointer_08003fc4(int value) {\n    int* pointer = *(int*)PTR_DAT_08003fcc;\n    int offset = 0x40;\n    *(int*)(pointer + offset) = value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fc4",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_value_at_offset_of_pointer_08003fc4"
        },
        "FUN_08000404": {
            "renaming": {
                "FUN_08000404": "reverse_bits_08000404",
                "param_1": "value",
                "uVar1": "result_upper",
                "uVar2": "abs_value",
                "uVar3": "shift_amount",
                "iVar4": "count_leading_zeros",
                "uVar5": "shift_amount2",
                "uVar6": "sign_bit",
                "in_r12": "unused",
                "bVar7": "negative_count_leading_zeros",
                "bVar8": "count_leading_zeros_is_zero",
                "bVar9": "overflow"
            },
            "code": "ulonglong reverse_bits_08000404(uint value) {\n    uint count = 0;\n    for (int i = 31; i >= 0; i--) {\n        if ((value >> i) & 1) {\n            break;\n        }\n        count++;\n    }\n    return count;\n}\n\n\nulonglong reverse_bits_08000404(uint value) {\n    if (value == 0) {\n        return 0;\n    }\n    uint sign_bit = value & 0x80000000;\n    uint abs_value = (int)sign_bit < 0 ? -value : value;\n    uint count_leading_zeros = reverse_bits_08000404(abs_value);\n    uint shift_amount = count_leading_zeros + 0x15;\n    uint result = 0;\n    if (shift_amount < 0x20) {\n        shift_amount = count_leading_zeros + 0xc;\n        if (shift_amount >= 0) {\n            result = abs_value << shift_amount;\n        }\n    }\n    if (shift_amount >= 0x20) {\n        uint shift_amount2 = 0x20 - count_leading_zeros;\n        result = abs_value << (count_leading_zeros & 0x1f);\n        result |= 0U >> (shift_amount2 & 0x1f);\n        if (shift_amount > 0x433) {\n            return sign_bit | (result >> (shift_amount - 0x1f)) & 0x80000000ffffffff;\n        }\n        uint shift_amount3 = ~(0x432 - shift_amount);\n        if (shift_amount3 > 0x1e) {\n            return sign_bit | (result >> (shift_amount3 - 0x1f)) & 0x80000000ffffffff;\n        }\n        int shift_amount4 = shift_amount3 - 0x13;\n        if (shift_amount4 != 0 && (shift_amount3 - 0x1f < 0) == (shift_amount4 < 0)) {\n            shift_amount3++;\n            return sign_bit | (result >> (shift_amount3 & 0x1f)) | ((ulonglong)abs_value << (0x20 - shift_amount3 & 0x1f));\n        }\n        return sign_bit | ((ulonglong)abs_value >> (0x20 - (0xc - shift_amount4) & 0x1f)) | (result << (0xc - shift_amount4 & 0x1f)) & 0x80000000ffffffff;\n    }\n    return sign_bit | (result + (0x432 - shift_amount) * 0x100000) | abs_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000404",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000404"
        },
        "FUN_0800209c": {
            "renaming": {
                "FUN_0800209c": "check_param_0800209c",
                "param_1": "param_1",
                "param_2": "param_len",
                "cVar1": "char_1",
                "cVar2": "char_2",
                "puVar3": "data_ptr",
                "iVar4": "int_var_4",
                "iVar5": "int_var_5",
                "uVar6": "uint_var_6",
                "uVar7": "uint_var_7",
                "data_ptr": "DAT_08002204",
                "data": "data",
                "data_ptr2": "DAT_08002208"
            },
            "code": "uint32_t check_param_0800209c(uint32_t *params, uint32_t param_len) {\n    uint32_t *data_ptr = DAT_08002204;\n    uint32_t data = *data_ptr;\n    if (param_len <= (data & 7) || (data = (data & 0xfffffff8) | param_len, param_len == (data_ptr[0] & 7))) {\n        uint32_t param_1 = params[0];\n        if ((int32_t)(param_1 << 0x1e) < 0) {\n            DAT_08002208[1] = (DAT_08002208[1] & 0xffffff0f) | params[2];\n        }\n        uint32_t *data_ptr2 = DAT_08002208;\n        int32_t param_1_shifted = param_1 << 0x1f;\n        if (param_1_shifted >= 0) {\n            data_ptr = DAT_08002204;\n            if (param_len < (*data_ptr & 7) && ((*data_ptr = (*data_ptr & 0xfffffff8) | param_len), param_len != (data_ptr[0] & 7))) {\n                return 1;\n            }\n            data_ptr = DAT_08002208;\n            data = params[0];\n            if ((data & 4) != 0) {\n                DAT_08002208[1] = (DAT_08002208[1] & 0xfffff8ff) | params[3];\n            }\n            if ((int32_t)(data << 0x1c) < 0) {\n                data_ptr2[1] = (data_ptr2[1] & 0xffffc7ff) | (params[4] << 3);\n            }\n            uint32_t uVar1 = FUN_08002008();\n            uint32_t uVar2 = count_leading_zeroes(0xf000000);\n            *(uint32_t *)PTR_DAT_08002210 = uVar1 >> PTR_DAT_0800220c[(data_ptr2[1] & 0xf0) >> (uVar2 & 0xff)];\n            FUN_08001104(0);\n            return 0;\n        }\n        uint32_t param_2 = params[1];\n        if (param_2 == 1) {\n            char cVar1 = '\\x01';\n            char cVar2 = '\\0';\n        }\n        else {\n            if (param_2 == 2) {\n                data = *DAT_08002208;\n                goto LAB_08002176;\n            }\n            char cVar1 = '\\0';\n            char cVar2 = '\\x01';\n        }\n        uint32_t uVar3 = count_leading_zeroes((uint32_t)(uint8_t)(cVar2 << 6) << 0x18 | (uint32_t)(uint8_t)(cVar1 << 6) << 8);\n        uVar3 = (*DAT_08002208 >> (uVar3 & 0x1f)) << 0x1f;\n        if ((int32_t)uVar3 < 0) {\n            DAT_08002208[1] = (DAT_08002208[1] & 0xfffffffc) | param_2;\n            int32_t iVar4 = FUN_0800115c(param_1_shifted, uVar3);\n            if (params[1] == 1) {\n                do {\n                    if ((data_ptr2[1] & 0xc) == 4) goto LAB_080020ba;\n                    int32_t iVar5 = FUN_0800115c();\n                } while ((uint32_t)(iVar5 - iVar4) < 0x1389);\n            }\n            else if (params[1] == 2) {\n                do {\n                    if ((data_ptr2[1] & 0xc) == 8) goto LAB_080020ba;\n                    int32_t iVar5 = FUN_0800115c();\n                } while ((uint32_t)(iVar5 - iVar4) < 0x1389);\n            }\n            else {\n                do {\n                    if ((data_ptr2[1] & 0xc) == 0) goto LAB_080020ba;\n                    int32_t iVar5 = FUN_0800115c();\n                } while ((uint32_t)(iVar5 - iVar4) < 0x1389);\n            }\n            return 3;\n        }\n    }\n    return 1;\n}",
            "called": [
                "FUN_08002008",
                "FUN_08001104",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800209c",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "check_param_0800209c"
        },
        "FUN_0800403c": {
            "renaming": {
                "FUN_0800403c": "send_i2c_data_0800403c",
                "param_1": "repeated_start",
                "param_2": "address",
                "param_3": "data",
                "param_4": "data_length",
                "iVar1": "status",
                "local_14": "control_byte",
                "PTR_DAT_08004074": "i2c_driver",
                "FUN_08001828": "send_i2c_message",
                "PTR_s____Src_i2c_c_08004078": "i2c_error_log",
                "thunk_do_nothing_08001168": "do_nothing"
            },
            "code": "void send_i2c_data_0800403c(bool repeated_start, uint16_t address, uint8_t* data, uint32_t data_length)\n{\n  int status;\n  uint8_t control_byte[2];\n  control_byte[0] = address >> 8;\n  control_byte[1] = address & 0xFF;\n  status = send_i2c_message(PTR_DAT_08004074, control_byte, 2, data, data_length, repeated_start, 200);\n  if (status != 0) {\n    log_error(PTR_s____Src_i2c_c_08004078,0x1b);\n  }\n  if (repeated_start) {\n    thunk_do_nothing_08001168(0x32);\n  }\n  return;\n}",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08001828",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800403c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "send_i2c_data_0800403c"
        },
        "FUN_08000cec": {
            "renaming": {
                "FUN_08000cec": "FUNC_08000cec"
            },
            "code": "\nuint FUNC_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000cec",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08004a30",
                "FUN_08002bf0",
                "FUN_08002f28",
                "FUN_08004a84",
                "FUN_08002b48"
            ],
            "imported": false,
            "current_name": "FUNC_08000cec"
        },
        "FUN_08006070": {
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "mask",
                "uVar2": "bitwise_shift",
                "uVar4": "mask_param4",
                "uVar5": "result_concat",
                "uVar6": "uVar_concat",
                "uVar7": "uVar7",
                "uVar8": "uVar8",
                "DAT_08006214": "DAT_08006214",
                "DAT_08006210": "DAT_08006210",
                "DAT_08006204": "DAT_08006204",
                "DAT_08006200": "DAT_08006200",
                "DAT_08006220": "DAT_08006220",
                "DAT_080061fc": "DAT_080061fc",
                "DAT_080061f8": "DAT_080061f8",
                "DAT_080061ec": "DAT_080061ec",
                "DAT_080061e8": "DAT_080061e8",
                "DAT_080061f4": "DAT_080061f4",
                "DAT_080061f0": "DAT_080061f0",
                "DAT_0800621c": "DAT_0800621c",
                "DAT_08006218": "DAT_08006218",
                "DAT_080061e4": "DAT_080061e4",
                "DAT_080061e0": "DAT_080061e0",
                "difference": "difference"
            },
            "code": "ulonglong calculate_result_08006070(uint param1, uint param2, uint param3, uint param4) {\n  uint mask = 0x7fffffff;\n  uint uVar2;\n  int difference;\n  uint uVar4;\n  ulonglong result;\n  ulonglong uVar6;\n  ulonglong uVar5;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  uVar6 = ((ulonglong)DAT_08006214 << 32) | DAT_08006210;\n  uVar5 = ((ulonglong)DAT_08006204 << 32) | DAT_08006200;\n  uVar4 = param4 & mask;\n  if (DAT_08006220 < (uVar4 | (-param3 | param3) >> 0x1f) || DAT_08006220 < (param2 & mask | (-param1 | param1) >> 0x1f)) {\n    result = FUNC_0800016c(param1, param2, param3, param4, param4);\n    return result;\n  }\n  if ((param4 + 0xc0100000 | param3) == 0) {\n    result = FUNC_08006d68();\n    return result;\n  }\n  uVar2 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n  if ((param1 | param2) == 0) {\n    if (uVar2 == 2) {\n      return ((ulonglong)DAT_080061fc << 32) | DAT_080061f8;\n    }\n    if (uVar2 != 3) {\n      return ((ulonglong)param2 << 32) | param1;\n    }\n  }\n  else {\n    if ((param3 | uVar4) != 0) {\n      if (uVar4 == DAT_08006220) {\n        if (param2 == uVar4) {\n          if (uVar2 == 2) {\n            return ((ulonglong)DAT_080061ec << 32) | DAT_080061e8;\n          }\n          if (uVar2 == 3) {\n            return ((ulonglong)DAT_080061f4 << 32) | DAT_080061f0;\n          }\n          if (uVar2 != 1) {\n            return ((ulonglong)DAT_0800621c << 32) | DAT_08006218;\n          }\n          return ((ulonglong)DAT_080061e4 << 32) | DAT_080061e0;\n        }\n        if (uVar2 == 2) {\n          return ((ulonglong)DAT_080061fc << 32) | DAT_080061f8;\n        }\n        if (uVar2 == 3) {\n          return uVar5;\n        }\n        if (uVar2 == 1) {\n          return 0x8000000000000000;\n        }\n        return 0;\n      }\n      if (param2 != DAT_08006220) {\n        difference = (int)(param2 - uVar4) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)param4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference, 0x3c))) {\n            uVar6 = 0;\n          }\n          else {\n            FUNC_08000724(param1, param2);\n            do_nothing_0800708c();\n            uVar6 = FUNC_08006d68();\n          }\n        }\n        difference = (int)(uVar6 >> 0x20);\n        if (uVar2 != 1) {\n          if (uVar2 == 2) {\n            uVar8 = FUNC_08000168((int)uVar6, difference, DAT_08006208, DAT_0800620c);\n            uVar7 = ((ulonglong)DAT_080061fc << 32) | DAT_080061f8;\n          }\n          else {\n            if (uVar2 == 0) {\n              return uVar6;\n            }\n            uVar7 = FUNC_08000168((int)uVar6, difference, DAT_08006208, DAT_0800620c);\n            uVar8 = ((ulonglong)DAT_080061fc << 32) | DAT_080061f8;\n          }\n          result = FUNC_08000168((int)uVar7, (int)(uVar7 >> 0x20), (int)uVar8, (int)(uVar8 >> 0x20));\n          return result;\n        }\n        return uVar6 & 0xffffffff | (ulonglong)(difference + 0x80000000) << 0x20;\n      }\n    }\n    result = uVar6;\n    if ((int)param2 < 0) {\n      result = ((ulonglong)DAT_080061dc << 32) | DAT_080061d8;\n    }\n  }\n  return result;\n}\n",
            "called": [
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_08006d68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006070",
            "calling": [
                "thunk_FUN_08006070"
            ],
            "imported": false,
            "current_name": "calculate_result_08006070"
        },
        "thunk_FUN_08006070": {
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "u_var_1",
                "uVar2": "u_var_2",
                "iVar3": "i_var_3",
                "uVar4": "u_var_4",
                "uVar5": "u_var_5",
                "uVar6": "u_var_6",
                "uVar7": "u_var_7",
                "uVar8": "u_var_8",
                "concat1": "concat_1",
                "concat2": "concat_2",
                "mask": "mask",
                "result": "result",
                "DAT_08006220": "DAT_08006220",
                "DAT_08006214": "DAT_08006214",
                "DAT_08006210": "DAT_08006210",
                "DAT_08006204": "DAT_08006204",
                "DAT_08006200": "DAT_08006200",
                "DAT_080061fc": "DAT_080061fc",
                "DAT_080061f8": "DAT_080061f8",
                "DAT_080061f4": "DAT_080061f4",
                "DAT_080061f0": "DAT_080061f0",
                "DAT_080061ec": "DAT_080061ec",
                "DAT_080061e8": "DAT_080061e8",
                "DAT_080061e4": "DAT_080061e4",
                "DAT_080061e0": "DAT_080061e0",
                "DAT_0800621c": "DAT_0800621c",
                "DAT_08006218": "DAT_08006218",
                "FUNC_0800016c": "FUNC_0800016c",
                "FUNC_08006d68": "FUNC_08006d68",
                "FUNC_08000724": "FUNC_08000724",
                "do_nothing_0800708c": "do_nothing_0800708c",
                "SCARRY4": "SCARRY4"
            },
            "code": "ulonglong calculate_result_thunk_08006070(uint param1, uint param2, uint param3, uint param4)\n{\n    uint mask = 0x7fffffff;\n    uint param4_masked = param4 & mask;\n    uint param3_masked = param3 & mask;\n    uint param2_masked = param2 & mask;\n    uint param1_masked = param1 & mask;\n    ulonglong result = 0;\n    ulonglong concat1 = CONCAT44(DAT_08006204, DAT_08006200);\n    ulonglong concat2 = CONCAT44(DAT_08006214, DAT_08006210);\n    if (DAT_08006220 < (param4_masked | (-param3_masked | param3_masked) >> 0x1f) || DAT_08006220 < (param2_masked | (-param1_masked | param1_masked) >> 0x1f)) {\n        result = FUNC_0800016c(param1, param2, param3, param4, param4);\n    } else if ((param4 + 0xc0100000 | param3) == 0) {\n        result = FUNC_08006d68();\n    } else {\n        uint uVar1 = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n        if ((param1_masked | param2_masked) == 0) {\n            if (uVar1 == 2) {\n                result = CONCAT44(DAT_080061fc, DAT_080061f8);\n            } else if (uVar1 == 3) {\n                result = CONCAT44(param2, param1);\n            } else {\n                result = CONCAT44(param2, param1);\n            }\n        } else {\n            if ((param3_masked | param4_masked) != 0) {\n                if (param4_masked == DAT_08006220) {\n                    if (param2_masked == param4_masked) {\n                        if (uVar1 == 2) {\n                            result = CONCAT44(DAT_080061ec, DAT_080061e8);\n                        } else if (uVar1 == 3) {\n                            result = CONCAT44(DAT_080061f4, DAT_080061f0);\n                        } else if (uVar1 == 1) {\n                            result = CONCAT44(DAT_080061e4, DAT_080061e0);\n                        } else {\n                            result = CONCAT44(DAT_0800621c, DAT_08006218);\n                        }\n                    } else if (uVar1 == 2) {\n                        result = CONCAT44(DAT_080061fc, DAT_080061f8);\n                    } else if (uVar1 == 3) {\n                        result = concat2;\n                    } else if (uVar1 == 1) {\n                        result = 0x8000000000000000;\n                    } else {\n                        result = 0;\n                    }\n                } else if (param2_masked != DAT_08006220) {\n                    int iVar3 = (int)(param2_masked - param4_masked) >> 0x14;\n                    if (iVar3 < 0x3d) {\n                        if (((int)param4 < 0) && (iVar3 + 0x3c < 0 != SCARRY4(iVar3, 0x3c))) {\n                            concat2 = 0;\n                        } else {\n                            FUNC_08000724(param1, param2);\n                            do_nothing_0800708c();\n                            concat2 = FUNC_08006d68();\n                        }\n                    }\n                    int iVar4 = (int)(concat2 >> 0x20);\n                    if (uVar1 != 1) {\n                        if (uVar1 == 2) {\n                            ulonglong concat3 = CONCAT44(DAT_080061fc, DAT_080061f8);\n                            ulonglong uVar5 = FUNC_08000168((int)concat2, iVar4, DAT_08006208, DAT_0800620c);\n                            result = FUNC_08000168((int)concat3, (int)(concat3 >> 0x20), (int)uVar5, (int)(uVar5 >> 0x20));\n                        } else {\n                            if (uVar1 == 0) {\n                                result = concat2;\n                            } else {\n                                ulonglong concat3 = CONCAT44(DAT_080061fc, DAT_080061f8);\n                                ulonglong uVar5 = FUNC_08000168((int)concat2, iVar4, DAT_08006208, DAT_0800620c);\n                                result = FUNC_08000168((int)uVar5, (int)(uVar5 >> 0x20), (int)concat3, (int)(concat3 >> 0x20));\n                            }\n                        }\n                    } else {\n                        result = concat2 & 0xffffffff | (ulonglong)(iVar4 + 0x80000000) << 0x20;\n                    }\n                }\n            }\n            if ((int)param2 < 0) {\n                result = CONCAT44(DAT_080061dc, DAT_080061d8);\n            }\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_08006070"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058fc",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "calculate_result_thunk_08006070"
        },
        "FUN_08004cac": {
            "renaming": {
                "FUN_08004cac": "process_data_08004cac",
                "param_1": "data_input",
                "puVar1": "data_ptr",
                "PTR_DAT_08004cc4": "data_start_ptr",
                "FUN_08004ffc": "send_data",
                "PTR_DAT_08004cc8": "data_end_ptr",
                "FUN_08004c8c": "process_data"
            },
            "code": "void process_data_08004cac(undefined4 data_input)\n{\n  undefined *data_ptr;\n  data_ptr = PTR_DAT_08004cc4;\n  send_data(PTR_DAT_08004cc4, PTR_DAT_08004cc8, data_input);\n  process_data_08004cac(data_ptr);\n  return;\n}",
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004cac",
            "calling": [
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004cac"
        },
        "FUN_08004c18": {
            "renaming": {
                "FUN_08004c18": "decode_string_08004c18",
                "param_1": "input_string",
                "puVar1": "output_buffer",
                "iVar2": "loop_counter_1",
                "iVar3": "loop_counter_2",
                "uVar4": "current_char",
                "puVar5": "encoded_string"
            },
            "code": "undefined4 decode_string_08004c18(undefined input_string)\n{\n  undefined *output_buffer;\n  int loop_counter_1;\n  int loop_counter_2;\n  undefined current_char;\n  ushort *encoded_string;\n  encoded_string = (ushort *)PTR_DAT_08004c28;\n  *PTR_DAT_08004c28 = input_string;\n  output_buffer = PTR_DAT_08004c2c;\n  if ((PTR_DAT_08004c2c[0x39] == '\\x01') || (PTR_DAT_08004c2c[0x39] == '\"')) {\n    if (encoded_string == (ushort *)0x0) {\n      return 1;\n    }\n    if (PTR_DAT_08004c2c[0x38] != '\\x01') {\n      PTR_DAT_08004c2c[0x38] = 1;\n      *(undefined4 *)(output_buffer + 0x3c) = 0;\n      *(undefined2 *)(output_buffer + 0x24) = 1;\n      if (output_buffer[0x39] == '\"') {\n        current_char = 0x32;\n      }\n      else {\n        current_char = 0x12;\n      }\n      *(undefined2 *)(output_buffer + 0x26) = 1;\n      output_buffer[0x39] = current_char;\nLAB_080027c4:\n      do {\n        if (*(short *)(output_buffer + 0x26) == 0) {\n          loop_counter_1 = FUN_0800115c();\n          do {\n            if (**(int **)output_buffer << 0x19 < 0) {\n              if (output_buffer[0x39] == '2') {\n                current_char = 0x22;\n              }\n              else {\n                current_char = 1;\n              }\n              output_buffer[0x39] = current_char;\n              output_buffer[0x38] = 0;\n              return 0;\n            }\n            loop_counter_2 = FUN_0800115c();\n          } while ((uint)(loop_counter_2 - loop_counter_1) < 6);\nLAB_0800281c:\n          loop_counter_1 = *(int *)output_buffer;\n          *(uint *)(loop_counter_1 + 0xc) = *(uint *)(loop_counter_1 + 0xc) & 0xffffff7f;\n          *(uint *)(loop_counter_1 + 0xc) = *(uint *)(loop_counter_1 + 0xc) & 0xffffffdf;\n          *(uint *)(loop_counter_1 + 0xc) = *(uint *)(loop_counter_1 + 0xc) & 0xfffffeff;\n          *(uint *)(loop_counter_1 + 0x14) = *(uint *)(loop_counter_1 + 0x14) & 0xfffffffe;\n          output_buffer[0x39] = 1;\n          output_buffer[0x38] = 0;\n          return 3;\n        }\n        *(short *)(output_buffer + 0x26) = *(short *)(output_buffer + 0x26) + -1;\n        if (*(int *)(output_buffer + 8) == 0x1000) {\n          loop_counter_1 = FUN_0800115c();\n          while (-1 < **(int **)output_buffer << 0x18) {\n            loop_counter_2 = FUN_0800115c();\n            if (5 < (uint)(loop_counter_2 - loop_counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)output_buffer)[1] = *encoded_string & 0x1ff;\n          if (*(int *)(output_buffer + 0x10) == 0) {\n            encoded_string = encoded_string + 1;\n            goto LAB_080027c4;\n          }\n        }\n        else {\n          loop_counter_1 = FUN_0800115c();\n          while (-1 < **(int **)output_buffer << 0x18) {\n            loop_counter_2 = FUN_0800115c();\n            if (5 < (uint)(loop_counter_2 - loop_counter_1)) goto LAB_0800281c;\n          }\n          (*(int **)output_buffer)[1] = (uint)*(byte *)encoded_string;\n        }\n        encoded_string = (ushort *)((int)encoded_string + 1);\n      } while( true );\n    }\n  }\n  return 2;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c18",
            "calling": [
                "FUN_08004300",
                "FUN_08004490",
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "decode_string_08004c18"
        },
        "FUN_0800483c": {
            "renaming": {
                "FUN_0800483c": "process_data_0800483c",
                "param_1": "data_type",
                "param_2": "data_size",
                "param_3": "data_offset",
                "param_4": "data_length",
                "param_5": "PTR_08004960",
                "param_6": "PTR_08004964",
                "param_7": "PTR_08004968",
                "param_8": "PTR_0800496c",
                "param_9": "PTR_08004970",
                "param_10": "PTR_08004974",
                "param_11": "PTR_08004978",
                "param_12": "PTR_0800497c",
                "param_13": "PTR_08004980",
                "param_14": "PTR_08004984",
                "param_15": "PTR_08004988",
                "param_16": "PTR_0800498c",
                "param_17": "PTR_08004990",
                "var_1": "result_1",
                "var_2": "result_2",
                "var_3": "result_3",
                "var_4": "result_4",
                "var_5": "result_5",
                "var_6": "result_6",
                "var_7": "result_7",
                "var_8": "result_8",
                "var_9": "result_9",
                "var_10": "result_10",
                "var_11": "result_11",
                "var_12": "result_12",
                "var_13": "result_13",
                "var_14": "result_14",
                "var_15": "result_15",
                "var_16": "result_16",
                "var_17": "result_17",
                "var_18": "result_18"
            },
            "code": "void process_data_0800483c(int *data)\n{\n    int param_1 = data[0];\n    int param_2 = data[1];\n    int param_3 = data[2];\n    int param_4 = data[3];\n    int param_5 = data[4];\n    int param_6 = data[5];\n    int param_7 = data[6];\n    int param_8 = data[7];\n    int param_9 = data[8];\n    int param_10 = data[9];\n    int param_11 = data[10];\n    int param_12 = data[11];\n    int param_13 = data[12];\n    int param_14 = data[13];\n    int param_15 = data[14];\n    int param_16 = data[15];\n    int param_17 = data[16];\n    \n    int var_1 = FUNC_08000adc(param_8, param_10);\n    int var_2 = FUNC_08000ad8(var_1, param_12);\n    data[10] = var_2;\n    \n    if (param_1 == 3) {\n        int var_3 = FUN_08001064(data[10], 0);\n        if (var_3 == 0) {\n            var_3 = FUN_08001028(data[10], DAT_08004974);\n        }\n        else {\n            var_3 = FUN_08001064(data[10], DAT_08004964);\n        }\n        if (var_3 != 0) {\n            int var_4 = FUNC_08000cec(data[10], DAT_08004968);\n            int var_5 = FUN_08001064(data[10], 0);\n            int var_6 = data[10];\n            if (var_5 == 0) {\n                var_6 = var_6 + -0x80000000;\n            }\n            var_4 = FUNC_08000e54(var_4, var_6);\n            int var_7 = FUNC_08000ad8(data[10], var_4);\n            data[10] = var_7;\n        }\n    }\n    \n    int var_8 = FUNC_08000cec(param_2, data[10]);\n    data[14] = var_8;\n    int var_9 = FUNC_08000adc(data[14], param_15);\n    data[15] = var_9;\n    int var_10 = FUN_08001028(data[15], DAT_0800496c);\n    int var_11 = DAT_0800496c;\n    if ((var_10 == 0) && (var_10 = FUN_08001064(data[15], DAT_08004970), var_11 = DAT_08004970, var_10 == 0)) {\n        var_11 = data[15];\n    }\n    data[15] = var_11;\n    int var_12 = FUNC_08000ad8(param_12, param_13);\n    data[16] = var_12;\n    int var_13 = FUNC_08000cec(param_3, data[15]);\n    var_13 = FUNC_08000adc(var_13, data[14]);\n    int var_14 = FUNC_08000cec(param_4, data[16]);\n    int var_15 = FUNC_08000ad8(var_13, var_14);\n    data[18] = var_15;\n    int var_16 = FUN_08000c44(data[17]);\n    int var_17 = FUN_08001028(data[18], DAT_0800496c);\n    int var_18 = DAT_0800496c;\n    if ((var_17 == 0) && (var_17 = FUN_08001064(data[18], DAT_08004970), var_18 = DAT_08004970, var_17 == 0)) {\n        var_18 = data[18];\n    }\n    var_18 = FUNC_08000cec(var_18, var_16);\n    data[18] = var_18;\n    \n    data[13] = param_12;\n    data[11] = data[10];\n    data[20] = data[19];\n    \n    return;\n}",
            "called": [
                "FUN_08000c44",
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_08001064",
                "FUN_08000e54",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800483c",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "process_data_0800483c"
        },
        "FUN_08004c8c": {
            "renaming": {
                "FUN_08004c8c": "process_data_08004c8c",
                "param_1": "data_buffer",
                "uVar1": "bytes_processed",
                "puVar2": "current_byte",
                "FUN_08000150": "process_byte"
            },
            "code": "void process_data_08004c8c(unsigned char *data_buffer)\n{\n  unsigned char *current_byte = data_buffer;\n  while( true ) {\n    uint32_t bytes_processed = process_byte(data_buffer);\n    if (bytes_processed <= (uint32_t)(current_byte - data_buffer)) break;\n    send_processed_byte(*current_byte);\n    current_byte++;\n  }\n  return;\n}",
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c8c",
            "calling": [
                "FUN_08004cac",
                "FUN_08004300",
                "FUN_08004490"
            ],
            "imported": false,
            "current_name": "process_data_08004c8c"
        },
        "FUN_08001460": {
            "renaming": {
                "FUN_08001460": "check_param_08001460",
                "param_1": "param_list",
                "param_2": "param_index",
                "param_3": "max_iterations",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "mask",
                "puVar4": "current_param",
                "*puVar4": "*current_param",
                "param_1[5]": "current_param[5]",
                "param_1[6]": "current_param[6]",
                "param_1[5] << 0x15": "current_param[5] << 0x15",
                "param_1 + 0xd": "param_list + 0xd",
                "param_1 + 0xe": "param_list + 0xe"
            },
            "code": "uint32_t check_param_08001460(uint32_t **param_list, uint32_t param_index, uint32_t max_iterations) {\n    int start_time = get_current_time();\n    do {\n        uint32_t *current_param = *param_list;\n        uint32_t mask_index = (param_index << 8) >> 0x18;\n        uint32_t mask = mask_index == 1 ? current_param[5] : current_param[6];\n        if ((param_index & 0xffff & ~mask) == 0) {\n            return 0;\n        }\n        if ((int)(current_param[5] << 0x15) < 0) {\n            *current_param |= 0x200;\n            current_param[5] &= 0xfffffbff;\n            param_list[0xe] = (uint32_t *)0x4;\n            *((uint8_t *)param_list + 0x35) = 0x20;\n            *((uint32_t *)(param_list + 0xd)) = 0;\n            return 1;\n        }\n    } while ((max_iterations == 0xffffffff) || ((max_iterations != 0 && (get_current_time() - start_time) <= max_iterations)));\n    *((uint8_t *)param_list + 0x35) = 0x20;\n    *((uint32_t *)(param_list + 0xd)) = 0;\n    return 3;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001460",
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "imported": false,
            "current_name": "check_param_08001460"
        },
        "FUN_08001064": {
            "renaming": {
                "FUN_08001064": "is_end_of_string_08001064",
                "in_CY": "current_char",
                "FUN_08000ffc": "execute_function"
            },
            "code": "bool is_end_of_string_08001064(void)\n{\n  char current_char;\n  execute_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000ffc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001064",
            "calling": [
                "FUN_0800483c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08001064"
        },
        "FUN_08003fd0": {
            "renaming": {
                "FUN_08003fd0": "set_value_at_offset_08003fd0",
                "param_1": "value",
                "PTR_DAT_08003fd8": "ptr_data"
            },
            "code": "void set_value_at_offset_08003fd0(int offset, int value) {\n  int* ptr = *(int*)PTR_DAT_08003fd8;\n  int* target_address = ptr + 0x3c;\n  *target_address = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd0",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_value_at_offset_08003fd0"
        },
        "FUN_08000892": {
            "renaming": {
                "FUN_08000892": "calculate_result_08000892",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp5",
                "unaff_r4": "temp6",
                "uVar2": "temp7",
                "uVar3": "temp8",
                "uVar4": "temp9",
                "in_r12": "temp10",
                "bVar4": "condition1",
                "mask": "mask",
                "bit": "bit",
                "exponent": "exponent",
                "nan_exponent": "nan_exponent",
                "temp1": "temp1",
                "temp2": "temp2",
                "temp3": "temp3",
                "temp4": "temp4",
                "temp5": "temp5",
                "temp6": "temp6",
                "temp7": "temp7",
                "temp8": "temp8",
                "temp9": "temp9",
                "temp10": "temp10",
                "carry": "carry",
                "condition1": "condition1",
                "condition2": "condition2"
            },
            "code": "ulonglong calculate_result_08000892(uint input1, uint input2, uint input3, uint input4)\n{\n    uint temp1, temp2, temp3, temp4;\n    bool condition1, condition2;\n    temp1 = input1;\n    temp2 = input2;\n    temp3 = input3;\n    temp4 = input4;\n    uint mask = 0x80000000;\n    uint bit = 0x100000;\n    uint exponent = 0x7ff00000;\n    uint nan_exponent = 0x7ff80000;\n    if (temp4 >> 0x14 != in_r12 & temp4) {\n        if (unaff_r4 == in_r12) {\n            condition1 = (temp1 | temp2 << 0xc) == 0;\n            if (condition1 && temp4 != in_r12) {\n                return (ulonglong)((temp2 ^ temp4) & mask | exponent) << 0x20;\n            }\n        }\n        else if (temp4 >> 0x14 == in_r12) {\n            condition1 = (temp3 | temp4 << 0xc) == 0;\n            if (condition1) {\n                return (ulonglong)((temp2 ^ temp4) & mask) << 0x20;\n            }\n            do {\n                temp3 = temp3 << 1;\n                temp4 = temp4 * 2 + (uint)(temp3 & mask);\n            } while ((temp4 & bit) == 0);\n            return (ulonglong)temp2 << 0x20 | temp1;\n        }\n        else {\n            condition1 = (temp1 | temp2 << 1) == 0;\n            condition2 = (temp3 | temp4 << 1) == 0;\n            if (!condition1 && !condition2) {\n                if (unaff_r4 == 0) {\n                    uint carry = 0;\n                    do {\n                        uint temp5 = temp1 & mask;\n                        temp1 = temp1 << 1;\n                        temp2 = temp2 * 2 + carry + (uint)(temp5 != 0);\n                        carry = temp2 & bit;\n                    } while (carry == 0);\n                    temp2 = temp2 | (temp1 & mask);\n                    if (temp4 != 0) {\n                        return (ulonglong)temp2 << 0x20 | temp1;\n                    }\n                }\n                uint carry = 0;\n                do {\n                    uint temp5 = temp3 & mask;\n                    temp3 = temp3 << 1;\n                    temp4 = temp4 * 2 + carry + (uint)(temp5 != 0);\n                    carry = temp4 & bit;\n                } while (carry == 0);\n                return (ulonglong)temp2 << 0x20 | temp1;\n            }\n            else if (condition1) {\n                return (ulonglong)((temp3 ^ temp4) & mask | exponent) << 0x20;\n            }\n            else {\n                return (ulonglong)((temp2 ^ temp4) & mask | nan_exponent) << 0x20 | temp1;\n            }\n        }\n    }\n    else {\n        return (ulonglong)temp2 << 0x20 | temp1 | nan_exponent;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000892",
            "calling": [
                "FUN_08000724"
            ],
            "imported": false,
            "current_name": "calculate_result_08000892"
        },
        "FUN_08004458": {
            "renaming": {
                "FUN_08004458": "reverse_and_copy_data_08004458",
                "puVar1": "current_output_ptr",
                "uVar2": "current_output_value",
                "puVar3": "current_input_ptr",
                "puVar4": "previous_input_ptr",
                "puVar5": "end_input_ptr",
                "local_30": "output_buffer",
                "local_24": "input_buffer"
            },
            "code": "void reverse_and_copy_data_08004458(void)\n{\n  undefined4 *current_output_ptr;\n  undefined4 current_output_value;\n  undefined4 *current_input_ptr;\n  undefined4 *previous_input_ptr;\n  undefined4 *end_input_ptr;\n  undefined4 output_buffer[3];\n  undefined2 input_buffer[10];\n  \n  current_output_ptr = output_buffer;\n  end_input_ptr = (undefined4 *)PTR_DAT_0800448c + 6;\n  current_input_ptr = (undefined4 *)PTR_DAT_0800448c;\n  do {\n    previous_input_ptr = current_input_ptr;\n    current_output_value = current_input_ptr[1];\n    current_input_ptr += 2;\n    *current_output_ptr = *current_input_ptr;\n    current_output_ptr[1] = current_output_value;\n    current_output_ptr += 2;\n  } while (current_input_ptr != end_input_ptr);\n  current_output_ptr[1] = *current_input_ptr;\n  *(undefined2 *)(current_output_ptr + 2) = *(undefined2 *)(previous_input_ptr + 2);\n  FUN_08004300(0x70,output_buffer,0x1e);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004458",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "reverse_and_copy_data_08004458"
        },
        "thunk_FUN_08001168": {
            "renaming": {
                "thunk_FUN_08001168": "thunk_do_nothing_08001168"
            },
            "code": "\nvoid thunk_do_nothing_08001168(void)\n\n{\n  return;\n}\n\n",
            "called": [
                "FUN_08001168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f64",
            "calling": [
                "FUN_0800403c",
                "FUN_08004028",
                "FUN_08004490",
                "FUN_08003298"
            ],
            "imported": false,
            "current_name": "thunk_do_nothing_08001168"
        },
        "FUN_08000134": {
            "renaming": {
                "FUN_08000134": "concatenate_pointers_08000134",
                "param_1": "first_pointer",
                "param_2": "second_pointer",
                "DAT_08000144": "global_flag",
                "PTR_FUN_0800014c": "global_first_pointer",
                "PTR_DAT_08000148": "global_second_pointer"
            },
            "code": "uint64_t concatenate_pointers_08000134(uint64_t *first_pointer, uint64_t *second_pointer)\n{\n  if (DAT_08000144 != 0) {\n    first_pointer = PTR_FUN_0800014c;\n    second_pointer = PTR_DAT_08000148;\n  }\n  return CONCAT44(second_pointer, first_pointer);\n}",
            "called": [
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000134",
            "calling": [
                "FUN_08004fb4"
            ],
            "imported": false,
            "current_name": "concatenate_pointers_08000134"
        },
        "FUN_08003eb0": {
            "renaming": {
                "FUN_08003eb0": "convert_param_to_64_bit_08003eb0",
                "param_1": "param",
                "PTR_DAT_08003ec4": "ptr_dat",
                "CONCAT44": "concat_44",
                "ulonglong": "long_long",
                "software_interrupt": "sw_interrupt"
            },
            "code": "longlong convert_param_to_64_bit_08003eb0(uint32_t param)\n{\n    if (*(int *)PTR_DAT_08003ec4 == 0) {\n        software_interrupt(0x3f);\n        return CONCAT44(param, 1);\n    }\n    return (ulonglong)param << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003eb0",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "convert_param_to_64_bit_08003eb0"
        },
        "FUN_08005c70": {
            "renaming": {
                "FUN_08005c70": "FUNC_08005c70"
            },
            "code": "\nulonglong FUNC_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  ulonglong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08005f90 < (int)uVar8) {\n    if ((uVar8 + 0xc0100000 | param_1) != 0) {\n      uVar10 = FUNC_08000168(param_1,param_2,param_1,param_2);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar9 = FUNC_08000724((int)uVar10,uVar2,(int)uVar10,uVar2);\n      return uVar9;\n    }\n    uVar9 = FUNC_080004d0(param_1,param_2,DAT_08005f28,DAT_08005f2c);\n    uVar10 = FUNC_080004d0(param_1,param_2,DAT_08005f30,DAT_08005f34);\nLAB_08005cba:\n    uVar9 = FUNC_0800016c((int)uVar9,(int)(uVar9 >> 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 >> 0x20));\n  }\n  else {\n    if ((int)uVar8 <= DAT_08005f94) {\n      if (0x3e3fffff < uVar8) {\n        uVar10 = FUNC_080004d0(param_1,param_2,param_1,param_2);\n        uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n        uVar2 = (undefined4)uVar10;\n        uVar10 = FUNC_080004d0(uVar2,uVar7,DAT_08005f40,DAT_08005f44);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c\n                             );\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_080004d0(uVar2,uVar7,DAT_08005f70,DAT_08005f74);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c\n                             );\n        uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar7);\n        uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n        uVar10 = FUNC_08000724((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                              (int)((ulonglong)uVar11 >> 0x20));\n        uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 = FUNC_0800016c(param_1,param_2,DAT_08005f38,DAT_08005f3c);\n      iVar1 = FUN_080009f0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f98);\n      if (iVar1 != 0) {\n        return uVar9;\n      }\n    }\n    uVar10 = do_nothing_0800708c(param_1,param_2);\n    uVar10 = FUNC_08000168(0,DAT_08005f98,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08005f9c);\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar10 = FUNC_080004d0(uVar2,uVar3,DAT_08005f40,DAT_08005f44);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f48,DAT_08005f4c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f50,DAT_08005f54);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f58,DAT_08005f5c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f60,DAT_08005f64);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f68,DAT_08005f6c);\n    uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar2,uVar3);\n    uVar4 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080004d0(uVar2,uVar3,DAT_08005f70,DAT_08005f74);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f78,DAT_08005f7c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f80,DAT_08005f84);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08005f88,DAT_08005f8c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar3);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08005f98);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar12 = FUN_08006c0c(uVar2,uVar3);\n    uVar6 = (undefined4)((ulonglong)uVar12 >> 0x20);\n    uVar7 = (undefined4)uVar12;\n    if (DAT_08005fa0 < (int)uVar8) {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar10 = FUNC_0800016c((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar7,uVar6);\n      uVar2 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar10 = FUNC_0800016c((int)uVar10,uVar2,(int)uVar10,uVar2);\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08005f30,DAT_08005f34);\n      uVar2 = DAT_08005f28;\n      uVar7 = DAT_08005f2c;\n    }\n    else {\n      uVar10 = FUNC_08000724((int)uVar10,uVar4,(int)uVar11,uVar5);\n      uVar11 = FUNC_0800016c(uVar7,uVar6,uVar7,uVar6);\n      uVar10 = FUNC_080004d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_080004d0(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(uVar2,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar12 = FUNC_0800016c(uVar7,uVar6,0,uVar6);\n      uVar11 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                            (int)((ulonglong)uVar12 >> 0x20));\n      uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar11,uVar2);\n      uVar11 = FUNC_08000168(DAT_08006060,DAT_08006064,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar11 = FUNC_0800016c(0,uVar6,0,uVar6);\n      uVar11 = FUNC_08000168(DAT_08006068,DAT_0800606c,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      uVar10 = FUNC_08000168((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                            (int)((ulonglong)uVar11 >> 0x20));\n      uVar2 = DAT_08006068;\n      uVar7 = DAT_0800606c;\n    }\n    uVar9 = FUNC_08000168(uVar2,uVar7,(int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    if ((int)param_2 < 1) {\n      uVar9 = uVar9 & 0xffffffff | (ulonglong)((int)(uVar9 >> 0x20) + 0x80000000) << 0x20;\n    }\n  }\n  return uVar9;\n}\n\n",
            "called": [
                "FUN_08006c0c",
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005c70",
            "calling": [
                "FUN_08005854"
            ],
            "imported": false,
            "current_name": "FUNC_08005c70"
        },
        "FUN_08002ee8": {
            "renaming": {
                "FUN_08002ee8": "check_and_execute_function_08002ee8",
                "iVar1": "function_result",
                "uVar2": "function_argument",
                "PTR_DAT_08002f18": "original_argument_pointer",
                "DAT_08002f1c": "first_argument",
                "DAT_08002f20": "second_argument_1",
                "DAT_08002f24": "second_argument_2",
                "FUN_08001050": "call_function_with_argument",
                "FUN_08001028": "call_another_function_with_argument",
                "FUNC_08000adc": "execute_function_with_two_arguments"
            },
            "code": "void check_and_execute_function_08002ee8(void)\n{\n  int function_result;\n  undefined4 function_argument;\n  \n  function_argument = *(undefined4 *)(PTR_DAT_08002f18 + 8);\n  function_result = call_function_with_argument(function_argument,DAT_08002f1c);\n  if ((function_result != 0) && (function_result = call_another_function_with_argument(function_argument,DAT_08002f20), function_result != 0)) {\n    FUNC_08000adc(function_argument,DAT_08002f20);\n    return;\n  }\n  FUNC_08000adc(function_argument,DAT_08002f24);\n  return;\n}\n",
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08000adc",
                "FUN_08001028"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ee8",
            "calling": [
                "FUN_08002f28",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "check_and_execute_function_08002ee8"
        },
        "FUN_08001104": {
            "renaming": {
                "FUN_08001104": "calculate_time_elapsed_and_print_08001104",
                "param_1": "starting_time",
                "uVar1": "current_time_in_milliseconds",
                "FUN_08002214": "get_current_time_in_milliseconds",
                "FUN_08001214": "print_time_elapsed",
                "FUN_08001194": "initialize_timer"
            },
            "code": "int calculate_time_elapsed_and_print_08001104(int starting_time) {\n  int time_elapsed_in_milliseconds = get_current_time_in_milliseconds() - starting_time;\n  int time_elapsed_in_seconds = time_elapsed_in_milliseconds / 1000;\n  print_time_elapsed(time_elapsed_in_seconds);\n  return 0;\n}",
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001104",
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "calculate_time_elapsed_and_print_08001104"
        },
        "thunk_FUN_0800115c": {
            "renaming": {
                "thunk_FUN_0800115c": "get_value_from_pointer_thunk_0800115c",
                "undefined4": "int",
                "PTR_DAT_08001164": "value_pointer",
                "int*": "int pointer",
                "int": "value",
                "*(undefined4 *)": "*",
                "return": "return"
            },
            "code": "int get_value_from_pointer_thunk_0800115c(){\n    int* PTR_DAT_08001164 = (int*)PTR_DAT_08001164;\n    int value = *PTR_DAT_08001164;\n    return value;\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f60",
            "calling": [
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_thunk_0800115c"
        },
        "FUN_08006d68": {
            "renaming": {
                "FUN_08006d68": "FUNC_08006d68"
            },
            "code": "\nulonglong FUNC_08006d68(int param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 *puVar9;\n  ulonglong uVar10;\n  undefined8 uVar11;\n  ulonglong uVar12;\n  undefined8 uVar13;\n  \n  uVar10 = CONCAT44(DAT_08007088,DAT_08007060);\n  uVar12 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_08007058 < (int)uVar8) {\n    if (((int)DAT_0800705c < (int)uVar8) || ((uVar8 == DAT_0800705c && (param_1 != 0)))) {\n      uVar10 = FUNC_0800016c(param_1,param_2,param_1,param_2,param_4);\n    }\n    else if ((int)param_2 < 1) {\n      uVar10 = CONCAT44(DAT_08007064,DAT_08007060);\n    }\n  }\n  else {\n    if (DAT_08007068 < (int)uVar8) {\n      uVar11 = do_nothing_0800708c();\n      uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n      uVar2 = (undefined4)uVar11;\n      if (DAT_08007070 < (int)uVar8) {\n        if (DAT_08007074 < (int)uVar8) {\n          uVar12 = FUNC_08000724(0,DAT_0800707c,uVar2,uVar3);\n          iVar1 = 3;\n        }\n        else {\n          uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_080004d0(uVar2,uVar3,0,DAT_08007078);\n          uVar13 = FUNC_0800016c((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,DAT_0800706c);\n          uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 >> 0x20));\n          iVar1 = 2;\n        }\n      }\n      else if (DAT_08007070 + -0xd0000 < (int)uVar8) {\n        uVar11 = FUNC_08000168(uVar2,uVar3,0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,DAT_0800706c);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 1;\n      }\n      else {\n        uVar11 = FUNC_0800016c(uVar2,uVar3,uVar2,uVar3);\n        uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        uVar13 = FUNC_0800016c(uVar2,uVar3,0,0x40000000);\n        uVar12 = FUNC_08000724((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar13,\n                              (int)((ulonglong)uVar13 >> 0x20));\n        iVar1 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_08007068 + -0x1bc0000) {\n        uVar11 = FUNC_0800016c(param_1,param_2,DAT_08006ff8,DAT_08006ffc,param_4);\n        iVar1 = FUN_080009f0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_0800706c);\n        if (iVar1 != 0) {\n          return uVar12;\n        }\n      }\n      iVar1 = -1;\n    }\n    uVar7 = (undefined4)(uVar12 >> 0x20);\n    uVar6 = (undefined4)uVar12;\n    uVar11 = FUNC_080004d0(uVar6,uVar7,uVar6,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar2 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar2,uVar4,uVar2,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar3 = (undefined4)uVar11;\n    uVar11 = FUNC_080004d0(uVar3,uVar5,DAT_08007000,DAT_08007004);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007008,DAT_0800700c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007010,DAT_08007014);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007018,DAT_0800701c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007020,DAT_08007024);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar3,uVar5);\n    uVar11 = FUNC_0800016c((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),DAT_08007028,DAT_0800702c);\n    uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar2,uVar4);\n    uVar2 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar13 = FUNC_080004d0(uVar3,uVar5,DAT_08007030,DAT_08007034);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007038,DAT_0800703c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007040,DAT_08007044);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007048,DAT_0800704c);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar13 = FUNC_08000168((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),DAT_08007050,DAT_08007054);\n    uVar13 = FUNC_080004d0((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),uVar3,uVar5);\n    uVar3 = (undefined4)((ulonglong)uVar13 >> 0x20);\n    if (iVar1 == -1) {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(uVar6,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    }\n    else {\n      uVar11 = FUNC_0800016c((int)uVar11,uVar2,(int)uVar13,uVar3);\n      uVar11 = FUNC_080004d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      puVar9 = (undefined4 *)(PTR_DAT_08007080 + iVar1 * 8);\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),\n                            *(undefined4 *)(PTR_DAT_08007084 + iVar1 * 8),\n                            *(undefined4 *)((int)(PTR_DAT_08007084 + iVar1 * 8) + 4));\n      uVar11 = FUNC_08000168((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),uVar6,uVar7);\n      uVar10 = FUNC_08000168(*puVar9,puVar9[1],(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n      if ((int)param_2 < 0) {\n        uVar10 = uVar10 & 0xffffffff | (ulonglong)((int)(uVar10 >> 0x20) + 0x80000000) << 0x20;\n      }\n    }\n  }\n  return uVar10;\n}\n\n",
            "called": [
                "FUN_080004d0",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_0800708c",
                "FUN_08000168"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006d68",
            "calling": [
                "FUN_08006070"
            ],
            "imported": false,
            "current_name": "FUNC_08006d68"
        },
        "FUN_080072b8": {
            "renaming": {
                "FUN_080072b8": "update_value_at_address_080072b8",
                "param_1": "value_to_add",
                "puVar1": "pointer_to_address"
            },
            "code": "void update_value_at_address_080072b8(int value_to_add)\n{\n  undefined *pointer_to_address;\n  pointer_to_address = PTR_DAT_080072cc;\n  if (*(int *)PTR_DAT_080072cc == 0) {\n    *(undefined **)PTR_DAT_080072cc = PTR_DAT_080072d0;\n  }\n  *(int *)pointer_to_address = value_to_add + *(int *)pointer_to_address;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072b8",
            "calling": [
                "FUN_0800581c"
            ],
            "imported": false,
            "current_name": "update_value_at_address_080072b8"
        },
        "FUN_0800581c": {
            "renaming": {
                "check_and_assign_value": "check_and_assign_value",
                "param_1": "output_value",
                "param_2": "input_value",
                "puVar1": "ptr",
                "iVar2": "result",
                "FUN_0800581c": "check_and_assign_value_0800581c"
            },
            "code": "void check_and_assign_value_0800581c(int *output_value, undefined4 input_value)\n{\n    undefined *ptr = PTR_DAT_08005838;\n    *(undefined4 *)PTR_DAT_08005838 = 0;\n    int result = FUN_080072b8(input_value);\n    if ((result == -1) && (*(int *)ptr != 0)) {\n        *output_value = *(int *)ptr;\n    }\n    return;\n}",
            "called": [
                "FUN_080072b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800581c",
            "calling": [
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "check_and_assign_value_0800581c"
        },
        "FUN_08004d48": {
            "renaming": {
                "FUN_08004d48": "check_if_param_equals_constant_08004d48",
                "param_1": "param",
                "param_2": "constant_value",
                "local_18": "local_variable_1",
                "local_14": "local_variable_2"
            },
            "code": "void check_if_param_equals_constant_08004d48(int *param, undefined4 constant_value)\n{\n  undefined4 local_variable_1;\n  undefined4 local_variable_2;\n  \n  if (*param == constant_value) {\n    local_variable_1 = 0xc0;\n    local_variable_2 = 0x12;\n    call_function_with_args(DAT_08004d84,&local_variable_1,*param,3,param,constant_value);\n    *(uint *)(DAT_08004d88 + 0x1c) |= 0x200000;\n  }\n  return;\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d48",
            "calling": [
                "FUN_08001754"
            ],
            "imported": false,
            "current_name": "check_if_param_equals_constant_08004d48"
        },
        "FUN_080072ac": {
            "renaming": {
                "FUN_080072ac": "get_value_from_data_pointer_080072ac",
                "undefined4": "unsigned int"
            },
            "code": "unsigned int get_value_from_data_pointer_080072ac(void)\n{\n    return *(unsigned int *)PTR_PTR_DAT_080072b4;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072ac",
            "calling": [
                "FUN_08005854",
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "imported": false,
            "current_name": "get_value_from_data_pointer_080072ac"
        },
        "FUN_08002280": {
            "renaming": {
                "FUN_08002280": "set_flags_and_values_08002280",
                "param_1": "base_address",
                "param_2": "values",
                "uVar1": "flags2",
                "uVar2": "flags1",
                "uVar3": "value1"
            },
            "code": "void set_flags_and_values_08002280(int base_address, uint *values){\n  uint flags1;\n  uint flags2;\n  uint value1;\n  uint value2;\n  \n  flags1 = *(uint *)(base_address + 0x20) & 0xfffffffe;\n  value1 = *(uint *)(base_address + 0x18) & 0xffffff8c | *values;\n  value2 = values[1];\n  flags2 = *(uint *)(base_address + 0x20) & 0xfffffffd | values[2];\n  \n  if (base_address == PTR_DAT_080022cc) {\n    flags2 = (flags2 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    flags1 = *(uint *)(base_address + 4) & 0xfffffcff | values[5] | values[6];\n  }\n  \n  *(uint *)(base_address + 0x20) = flags2;\n  *(uint *)(base_address + 0x18) = value1;\n  *(uint *)(base_address + 0x4) = *(uint *)(base_address + 0x4) & 0xfffffcff | values[4];\n  *(uint *)(base_address + 0x34) = value2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002280",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08002280"
        },
        "FUN_08001194": {
            "renaming": {
                "FUN_08001194": "decode_and_store_bits_08001194",
                "param_1": "bits_to_shift",
                "param_2": "bit_mask",
                "param_3": "value_to_store",
                "uVar1": "stored_value",
                "uVar2": "bits_to_keep",
                "uVar3": "shift_amount",
                "uVar4": "bits_to_discard"
            },
            "code": "void decode_and_store_bits_08001194(uint bit_mask, uint bits_to_shift, uint value_to_store)\n{\n    uint shift_amount = (uint)(*(int *)(DAT_080011f4 + 0xc) << 0x15) >> 0x1d;\n    uint bits_to_keep = (1 << (7 - shift_amount)) - 1;\n    uint bits_to_discard = shift_amount + 4;\n    if (bits_to_shift > 3)\n    {\n        bits_to_shift = 4;\n    }\n    if (bits_to_discard < 7)\n    {\n        shift_amount = 0;\n    }\n    if (bits_to_discard > 6)\n    {\n        shift_amount = shift_amount - 3;\n    }\n    undefined stored_value = (undefined)((value_to_store & (1 << shift_amount) - 1U | (bit_mask & bits_to_keep) << shift_amount) << 4);\n    if (-1 < (int)bits_to_shift)\n    {\n        bits_to_shift = bits_to_shift + 0xe000e100;\n    }\n    else\n    {\n        bits_to_shift = bits_to_shift & 0xf;\n        bits_to_keep = DAT_080011f8;\n    }\n    if (-1 < (int)bits_to_shift)\n    {\n        *(undefined *)(bits_to_shift + 0x300) = stored_value;\n    }\n    else\n    {\n        *(undefined *)(bits_to_keep + bits_to_shift) = stored_value;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001194",
            "calling": [
                "FUN_08004e7c",
                "FUN_08004ccc",
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "decode_and_store_bits_08001194"
        },
        "FUN_08002cb0": {
            "renaming": {
                "FUN_08002cb0": "process_mpu9250_data_08002cb0",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "data",
                "puVar1": "src",
                "uVar2": "value",
                "local_c": "register_address",
                "PTR_s____Src_MPU9250_c_08002d80": "PTR_s____Src_MPU9250_c_08002d80",
                "PTR_DAT_08002d84": "PTR_DAT_08002d84"
            },
            "code": "void process_mpu9250_data_08002cb0(undefined4 param_1, undefined4 param_2, undefined4 param_3, uint data)\n{\n    uint8_t* src = PTR_s____Src_MPU9250_c_08002d80;\n    float converted_data[3];\n    uint8_t register_address = 0xd0;\n    uint8_t value = 0x37;\n    uint8_t i2c_device_address = 0x68;\n\n    i2c_write_register(register_address, value, i2c_device_address, param_1, param_2, param_3);\n    i2c_write_register(register_address, 0x6a, 1);\n    i2c_read_register(0x18, 0, src, 0xad);\n    i2c_write_register(0x18, 0xb, 1);\n    i2c_write_register(0x18, 10, 0, 1);\n    i2c_write_register(0x18, 10, 0xf, 1);\n    convert_to_float(converted_data, data);\n    write_to_data_pointer(PTR_DAT_08002d84, converted_data);\n    i2c_write_register(0x18, 10, 0, 1);\n    i2c_write_register(0x18, 10, 0x16, 1);\n}\n",
            "called": [
                "FUN_08000c44",
                "FUN_0800403c",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800407c",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002cb0",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "process_mpu9250_data_08002cb0"
        },
        "FUN_08004348": {
            "renaming": {
                "FUN_08004348": "generate_opcode_08004348",
                "param_1": "opcode_start",
                "param_2": "opcode_length",
                "param_3": "param_3",
                "puVar1": "opcode_ptr",
                "local_10": "opcode",
                "local_c": "opcode_suffix",
                "uStack_8": "param_3_copy"
            },
            "code": "void generate_opcode_08004348(undefined4 opcode_start,uint opcode_length,undefined4 param_3)\n{\n  undefined *opcode_ptr;\n  undefined4 opcode;\n  uint opcode_suffix;\n  undefined4 param_3_copy;\n  \n  opcode_ptr = PTR_OPCODE_START;\n  *PTR_OPCODE_START = 0xe9;\n  opcode_ptr[1] = 3;\n  opcode_ptr[3] = 4;\n  opcode_ptr[2] = 0;\n  opcode = *(undefined4 *)opcode_ptr;\n  opcode_ptr[4] = 0;\n  opcode_ptr[5] = 0;\n  opcode_ptr[6] = 0;\n  opcode_suffix = opcode_length & 0xff000000 | (uint)*(ushort *)(opcode_ptr + 4);\n  param_3_copy = param_3;\n  generate_code(100,&opcode,7);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004348",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "generate_opcode_08004348"
        },
        "FUN_08002324": {
            "renaming": {
                "FUN_08002324": "update_flags_08002324",
                "param_1": "flags_address",
                "param_2": "flag_values",
                "uVar1": "current_flags",
                "iVar2": "first_value",
                "iVar3": "third_value",
                "iVar4": "dat_08002364"
            },
            "code": "void update_flags_08002324(int flags_address,int *flag_values)\n{\n  uint current_flags = *(uint *)(flags_address + 0x04);\n  int first_value = *flag_values;\n  int third_value = flag_values[2];\n  int dat_08002364 = DAT_08002364;\n  if (flags_address == DAT_08002364) {\n    dat_08002364 = flag_values[5];\n    current_flags = current_flags & 0xffffbfff;\n  }\n  if (flags_address == DAT_08002364) {\n    current_flags = current_flags | dat_08002364 << 6;\n  }\n  *(uint *)(flags_address + 0x04) = current_flags;\n  *(uint *)(flags_address + 0x1c) = *(uint *)(flags_address + 0x1c) & 0xffff8cff | first_value << 8;\n  *(int *)(flags_address + 0x40) = flag_values[1];\n  *(uint *)(flags_address + 0x20) = *(uint *)(flags_address + 0x20) & 0xffffdfff | third_value << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002324",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_flags_08002324"
        },
        "FUN_08001078": {
            "renaming": {
                "FUN_08001078": "convert_uint_to_int32_08001078",
                "param_1": "input_value",
                "uVar1": "high_byte",
                "uVar2": "low_byte",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "uint convert_uint_to_int32_08001078(uint input_value)\n{\n  uint shifted_value = input_value << 1;\n  if (shifted_value < 0x7f000000) {\n    return 0;\n  }\n  uint high_byte = shifted_value >> 0x18;\n  uint low_byte = 0x9e - high_byte;\n  if (high_byte < 0x9f && low_byte != 0) {\n    uint shifted_input = (input_value << 8 | 0x80000000) >> (low_byte & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_input = -shifted_input;\n    }\n    return shifted_input;\n  }\n  if ((low_byte == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001078",
            "calling": [
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "convert_uint_to_int32_08001078"
        },
        "FUN_08002564": {
            "renaming": {
                "FUN_08002564": "check_data_validity_08002564",
                "param_1": "data_ptr",
                "param_2": "check_data",
                "uVar1": "result",
                "*(char *)(param_1 + 0xe)": "*(char *)(data_ptr + 0xe)",
                "*(undefined *)((int)param_1 + 0x39)": "*(undefined *)((int)data_ptr + 0x39)",
                "*(uint *)(*param_1 + 0x44)": "*(uint *)(*data_ptr + 0x44)",
                "param_2[0] | param_2[1] | param_2[2] | param_2[3] | param_2[4] | param_2[5] | param_2[6]": "check_data[0] | check_data[1] | check_data[2] | check_data[3] | check_data[4] | check_data[5] | check_data[6]",
                "*(undefined *)(param_1 + 0xe)": "*(undefined *)(data_ptr + 0xe)"
            },
            "code": "int check_data_validity_08002564(int *data_ptr, uint *check_data) {\n    int result = 2;\n    if (*(char *)(data_ptr + 0xe) != '\\x01') {\n        *(undefined *)((int)data_ptr + 0x39) = 2;\n        *(uint *)(*data_ptr + 0x44) = check_data[0] | check_data[1] | check_data[2] | check_data[3] | check_data[4] | check_data[5] | check_data[6];\n        *(undefined *)((int)data_ptr + 0x39) = 1;\n        result = 0;\n        *(undefined *)(data_ptr + 0xe) = 0;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002564",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "check_data_validity_08002564"
        },
        "FUN_08001754": {
            "renaming": {
                "FUN_08001754": "configure_device_08001754",
                "param_1": "device_config",
                "uVar1": "temp",
                "uVar2": "clock_freq_mhz",
                "puVar3": "device_config_ptr_3",
                "puVar4": "device_config_ptr_1",
                "puVar5": "device_config_ptr_2",
                "uVar6": "clock_division",
                "uVar7": "temp",
                "DAT_08001820": "PTR_DAT_08001820",
                "DAT_08001824": "PTR_DAT_08001824"
            },
            "code": "uint32_t configure_device_08001754(uint32_t **device_config)\n{\n  uint32_t clock_division, temp, *device_config_ptr_1, *device_config_ptr_2, *device_config_ptr_3;\n  uint32_t clock_freq, clock_freq_mhz, temp_clock_freq;\n  uint8_t *device_config_byte_ptr;\n  if (device_config == NULL) {\n    return 1;\n  }\n  if (*(char *)((int)device_config + 0x35) == '\\0') {\n    *(undefined *)(device_config + 0xd) = 0;\n    initialize_device();\n  }\n  *(undefined *)((int)device_config + 0x35) = 0x24;\n  device_config_ptr_3 = DAT_08001820;\n  **device_config = **device_config & 0xfffffffe;\n  temp = get_clock_frequency();\n  clock_freq_mhz = (uint32_t)((uint64_t)temp >> 0x20);\n  clock_freq = (uint32_t)temp;\n  device_config_ptr_2 = device_config[1];\n  clock_division = clock_freq / DAT_08001824;\n  if (device_config_ptr_3 < device_config_ptr_2) {\n    clock_freq_mhz = 300;\n  }\n  device_config_ptr_1 = *device_config;\n  if (device_config_ptr_3 < device_config_ptr_2) {\n    clock_freq_mhz = clock_division * clock_freq_mhz;\n  }\n  device_config_ptr_1[1] = clock_division;\n  if (device_config_ptr_3 < device_config_ptr_2) {\n    temp_clock_freq = clock_freq_mhz / 1000;\n  }\n  device_config_ptr_1[8] = temp_clock_freq + 1;\n  if (device_config_ptr_3 < device_config_ptr_2) {\n    device_config_byte_ptr = (uint8_t *)(device_config[2]);\n    if (device_config_byte_ptr == NULL) {\n      temp = clock_freq / ((int)device_config_ptr_2 * 3) | 0x8000;\n    }\n    else {\n      temp = clock_freq / ((int)device_config_ptr_2 * 0x19) | 0xc000;\n    }\n    if ((temp & 0xfff) == 0) {\n      temp = 1;\n    }\n  }\n  else {\n    temp = clock_freq / ((int)device_config_ptr_2 << 1);\n    if ((temp & 0xfff) < 4) {\n      temp = 4;\n    }\n  }\n  device_config_ptr_3 = device_config[8];\n  device_config_ptr_2 = device_config[7];\n  device_config_ptr_1[7] = temp;\n  *device_config_ptr_1 = (uint32_t)device_config_ptr_2 | (uint32_t)device_config_ptr_3;\n  device_config_ptr_1[2] = (uint32_t)device_config[4] | (uint32_t)device_config[3];\n  device_config_ptr_1[3] = (uint32_t)device_config[5] | (uint32_t)device_config[6];\n  *device_config_ptr_1 = *device_config_ptr_1 | 1;\n  device_config[0xe] = NULL;\n  *(undefined *)((int)device_config + 0x35) = 0x20;\n  *(undefined *)((int)device_config + 0x36) = 0;\n  return 0;\n}",
            "called": [
                "FUN_08004d48",
                "FUN_08002220"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001754",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "configure_device_08001754"
        },
        "FUN_08000ad8": {
            "renaming": {
                "FUN_08000ad8": "FUNC_08000ad8"
            },
            "code": "\nuint FUNC_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if ((uVar4 & 0x800000) == 0) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ad8",
            "calling": [
                "FUN_08002ec0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08002bf0",
                "FUN_0800426c"
            ],
            "imported": false,
            "current_name": "FUNC_08000ad8"
        },
        "FUN_08003ec8": {
            "renaming": {
                "FUN_08003ec8": "increment_and_store_at_offset_08003ec8",
                "param_1": "buffer_address",
                "param_2": "data",
                "*(short *)(param_1 + 0x804)": "*offset",
                "*(ushort *)(param_1 + 0x802)": "*index",
                "*(undefined *)(param_1 + (uint)*(ushort *)(param_1 + 0x802))": "*(char *)(buffer_address + (uint)*index)"
            },
            "code": "int increment_and_store_at_offset_08003ec8(int buffer_address, char data) {\n    short *offset = (short *)(buffer_address + 0x804);\n    *offset = *offset + 1;\n    unsigned short *index = (unsigned short *)(buffer_address + 0x802);\n    *(char *)(buffer_address + (uint)*index) = data;\n    *index = (*index + 1U) & 0x7ff;\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ec8",
            "calling": [
                "FUN_08004c30"
            ],
            "imported": false,
            "current_name": "increment_and_store_at_offset_08003ec8"
        },
        "FUN_08002724": {
            "renaming": {
                "FUN_08002724": "set_param_and_call_08002724",
                "param_1": "param_array",
                "iVar1": "var_ptr",
                "FUN_08004e7c": "call_function"
            },
            "code": "int set_param_and_call_08002724(int *param_array) {\n    int param_ptr = param_array;\n    if (param_array != NULL) {\n        if (*(char *)(param_ptr + 0x39) == '\\0') {\n            *(undefined *)(param_array + 0xe) = 0;\n            call_function();\n        }\n        *(undefined *)(param_ptr + 0x39) = 2;\n        *(uint *)(*param_array + 0xc) &= 0xffffdfff;\n        set_param(param_array);\n        int var_ptr = *param_array;\n        *(uint *)(var_ptr + 0x10) &= 0xffffb7ff;\n        *(uint *)(var_ptr + 0x14) &= 0xffffffd5;\n        *(uint *)(var_ptr + 0xc) |= 0x2000;\n        param_array[0xf] = 0;\n        *(undefined *)(param_ptr + 0x39) = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002724",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_param_and_call_08002724"
        },
        "FUN_08003fe8": {
            "renaming": {
                "FUN_08003fe8": "set_value_in_struct_08003fe8",
                "param_1": "value",
                "PTR_DAT_08003ff0": "ptr"
            },
            "code": "void set_value_in_struct_08003fe8(int value)\n{\n  int* PTR_DAT_08003ff0 = (int*)PTR_DAT_08003ff0;\n  int offset = 0x3c;\n  int* target_address = (int*)(*PTR_DAT_08003ff0 + offset);\n  *target_address = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fe8",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_value_in_struct_08003fe8"
        },
        "FUN_08005714": {
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "output",
                "param_2": "size",
                "puVar1": "pointer",
                "uVar2": "result",
                "puVar3": "list_head",
                "iVar4": "padding_size",
                "puVar5": "current_block",
                "uVar6": "block_size",
                "puVar7": "previous_block",
                "uVar8": "adjusted_size"
            },
            "code": "uint allocate_memory_block_08005714(undefined4 *output, uint size)\n{\n  uint adjusted_size = (size + 3 & 0xfffffffc) + 8;\n  if (adjusted_size < 0xc) {\n    adjusted_size = 0xc;\n  }\n  if (((int)adjusted_size < 0) || (adjusted_size < size)) {\n    *output = 0xc;\n  }\n  else {\n    do_nothing_0800583c();\n    uint **list_head = *(uint ***)PTR_DAT_080057c8;\n    uint **previous_block = *(uint ***)PTR_DAT_080057c8;\n    while (uint *current_block = *list_head) {\n      uint block_size = *current_block - adjusted_size;\n      if (-1 < (int)block_size) {\n        if (block_size < 0xc) {\n          if (previous_block == current_block) {\n            adjusted_size = previous_block[1];\n            *(uint **)PTR_DAT_080057c8 = (uint *)adjusted_size;\n          }\n          else {\n            adjusted_size = current_block[1];\n          }\n          if (previous_block != current_block) {\n            previous_block[1] = adjusted_size;\n            previous_block = current_block;\n          }\n        }\n        else {\n          *current_block = block_size;\n          *(uint *)((int)current_block + block_size) = adjusted_size;\n          previous_block = (uint *)((int)current_block + block_size);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = current_block;\n      list_head = (uint **)current_block[1];\n    }\n    if (*(int *)PTR_DAT_080057cc == 0) {\n      uint result = FUN_0800581c(output);\n      *(undefined4 *)PTR_DAT_080057cc = result;\n    }\n    uint *new_block = (uint *)FUN_0800581c(output, adjusted_size);\n    if ((new_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)new_block + 3U & 0xfffffffc), new_block == previous_block ||\n        (int)FUN_0800581c(output, (int)previous_block - (int)new_block) != -1))) {\n      *previous_block = adjusted_size;\nLAB_08005778:\n      do_nothing_0800583e(output);\n      uint new_block_size = (int)previous_block + 0xbU & 0xfffffff8;\n      int padding_size = new_block_size - (int)(previous_block + 1);\n      if (padding_size != 0) {\n        *(int *)((int)previous_block + padding_size) = -padding_size;\n        return new_block_size;\n      }\n      return new_block_size;\n    }\n    *output = 0xc;\n    do_nothing_0800583e(output);\n  }\n  return 0;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005714",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08005714"
        },
        "FUN_08004fb4": {
            "renaming": {
                "FUN_08004fb4": "run_functions_08004fb4",
                "puVar1": "function_pointers_start",
                "iVar2": "function_pointers_length",
                "iVar3": "i"
            },
            "code": "void run_functions_08004fb4(void)\n{\n  undefined *function_pointers_start = PTR_DAT_08004fec;\n  int function_pointers_length = (int)PTR_DAT_08004ff0 - (int)PTR_DAT_08004fec;\n  for (int i = 0; i != function_pointers_length >> 2; i = i + 1) {\n    (**(code **)(function_pointers_start + i * 4))();\n  }\n  do_nothing_080072d4();\n  function_pointers_start = PTR_DAT_08004ff4;\n  function_pointers_length = (int)PTR_DAT_08004ff8 - (int)PTR_DAT_08004ff4;\n  for (int i = 0; i != function_pointers_length >> 2; i = i + 1) {\n    (**(code **)(function_pointers_start + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004fb4",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "run_functions_08004fb4"
        },
        "FUN_080043f0": {
            "renaming": {
                "FUN_080043f0": "process_data_080043f0",
                "param_1": "data_ptr",
                "param_2": "data_len",
                "param_3": "data_type",
                "local_10": "data_start",
                "uStack_c": "data_end",
                "auStack_8": "data_params"
            },
            "code": "void process_data_080043f0(undefined4 data_ptr, undefined4 data_len, undefined4 data_type) {\n  undefined4 data_start = *(undefined4 *)PTR_DAT_0800440c;\n  undefined4 data_end = *(undefined4 *)(PTR_DAT_0800440c + 4);\n  undefined4 data_params[2];\n  data_params[0] = data_type;\n  FUN_08004300(0x68, &data_start, 8, data_params);\n  return;\n}",
            "called": [
                "FUN_08004300"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043f0",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "process_data_080043f0"
        },
        "FUN_08000428": {
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "num",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "mask",
                "uVar2": "num_shifted_copy",
                "uVar3": "result",
                "uVar4": "shifted",
                "uVar5": "num_shifted",
                "uVar7": "shift_amount",
                "bVar8": "is_equal_to_zero",
                "bVar9": "is_less_than_zero",
                "bVar10": "is_negative",
                "param_4_masked": "param_4_masked",
                "leading_zeroes": "leading_zeroes",
                "in_r12": "in_r12",
                "shift_amount2": "shift_amount2",
                "diff": "diff",
                "is_zero": "is_zero"
            },
            "code": "ulonglong reverse_bits_08000428(uint num, undefined4 param_2, undefined4 param_3, uint param_4)\n{\n    uint num_shifted = num << 1;\n    bool is_zero = num_shifted == 0;\n    uint mask = (uint)((num & 0x80000000) != 0) << 0x1f;\n    uint shifted = (uint)((int)num_shifted >> 3) >> 1;\n    uint result = mask | shifted;\n    num = num << 0x1d;\n    if (!is_zero)\n    {\n        uint param_4_masked = num_shifted & 0xff000000;\n        is_zero = param_4_masked == 0;\n    }\n    if (!is_zero)\n    {\n        is_zero = param_4_masked == 0xff000000;\n    }\n    if (!is_zero)\n    {\n        return CONCAT44(result, num) ^ 0x3800000000000000;\n    }\n    if (num_shifted == 0 || param_4_masked == 0xff000000)\n    {\n        return CONCAT44(result, num);\n    }\n    uint num_shifted_copy = num;\n    uint shifted_copy = shifted;\n    if (shifted == 0)\n    {\n        num_shifted_copy = 0;\n        shifted_copy = num;\n    }\n    int leading_zeroes = count_leading_zeroes(shifted_copy);\n    if (shifted == 0)\n    {\n        leading_zeroes = leading_zeroes + 0x20;\n    }\n    uint shift_amount = leading_zeroes - 0xb;\n    bool is_negative = SBORROW4(shift_amount, 0x20);\n    uint shift_amount2 = leading_zeroes - 0x2b;\n    bool is_less_than_zero = (int)shift_amount2 < 0;\n    bool is_equal_to_zero = shift_amount2 == 0;\n    if ((int)shift_amount < 0x20)\n    {\n        is_negative = SCARRY4(shift_amount2, 0xc);\n        leading_zeroes = leading_zeroes + -0x1f;\n        is_less_than_zero = leading_zeroes < 0;\n        is_equal_to_zero = leading_zeroes == 0;\n        shift_amount = shift_amount2;\n        if (!is_equal_to_zero && is_less_than_zero == is_negative)\n        {\n            num_shifted_copy = shifted << (shift_amount & 0xff);\n            shifted_copy = shifted >> (0xcU - leading_zeroes & 0xff);\n            goto LAB_080002f0;\n        }\n    }\n    if (is_equal_to_zero || is_less_than_zero != is_negative)\n    {\n        uint in_r12 = 0x20 - shift_amount;\n    }\n    shifted_copy = shifted_copy << (shift_amount & 0xff);\n    if (is_equal_to_zero || is_less_than_zero != is_negative)\n    {\n        shifted_copy = shifted_copy | num_shifted_copy >> (in_r12 & 0xff);\n    }\n    if (is_equal_to_zero || is_less_than_zero != is_negative)\n    {\n        num_shifted_copy = num_shifted_copy << (shift_amount & 0xff);\n    }\nLAB_080002f0:\n    if ((int)shift_amount < 0x381)\n    {\n        return CONCAT44(shifted_copy + (0x380 - shift_amount) * 0x100000 | mask, num);\n    }\n    uint inverted_shift_amount = ~(0x380 - shift_amount);\n    if ((int)inverted_shift_amount < 0x1f)\n    {\n        int diff = inverted_shift_amount - 0x13;\n        if (diff != 0 && diff < 0 == SCARRY4(inverted_shift_amount - 0x1f, 0xc))\n        {\n            return CONCAT44(mask, num_shifted_copy >> (0x20 - (0xcU - diff) & 0xff) | shifted_copy << (0xcU - diff & 0xff)) & 0x80000000ffffffff;\n        }\n        inverted_shift_amount = inverted_shift_amount + 1;\n        return CONCAT44(mask | shifted_copy >> (inverted_shift_amount & 0xff), num_shifted_copy >> (inverted_shift_amount & 0xff) | shifted_copy << (0x20 - inverted_shift_amount & 0xff));\n    }\n    return CONCAT44(result, shifted_copy >> (inverted_shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000428",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "reverse_bits_08000428"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "set_bit_and_call_functions_08004ccc",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "param_3",
                "DAT_08004d44": "data_address",
                "iVar1": "data_address",
                "uVar2": "mask",
                "uVar3": "bit_value",
                "FUN_08001170": "call_function_1",
                "FUN_08001194": "call_function_2"
            },
            "code": "void set_bit_and_call_functions_08004ccc(int param_1, int param_2, int param_3)\n{\n  int DAT_08004d44 = DAT_08004d44;\n  uint mask = *(uint *)(DAT_08004d44 + 0x18) | 1;\n  *(uint *)(DAT_08004d44 + 0x18) = mask;\n  uint bit_value = *(uint *)(DAT_08004d44 + 0x18) & 1;\n  call_function_1(3, param_2, mask, bit_value, param_1, bit_value, param_3);\n  call_function_2(0xfffffff4, 0);\n  call_function_2(0xfffffff5, 0);\n  call_function_2(0xfffffff6, 0);\n  call_function_2(0xfffffffb, 0);\n  call_function_2(0xfffffffc, 0);\n  call_function_2(0xfffffffe, 0);\n  call_function_2(0xffffffff, 0);\n  return;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08001128"
            ],
            "imported": false,
            "current_name": "set_bit_and_call_functions_08004ccc"
        },
        "FUN_08000a30": {
            "renaming": {
                "FUN_08000a30": "calculate_float_08000a30",
                "param_1": "float_bits",
                "param_2": "float_sign",
                "uVar1": "result",
                "uVar2": "exponent",
                "uVar3": "fraction",
                "in_r12": "exponent_copy",
                "bVar4": "is_exponent_zero",
                "bVar5": "is_exponent_negative"
            },
            "code": "uint calculate_float_08000a30(uint float_bits, uint float_sign) {\n  uint exponent;\n  uint fraction;\n  uint result;\n  bool is_exponent_negative;\n  bool is_exponent_zero;\n  \n  exponent = float_sign * 2;\n  is_exponent_negative = exponent < 0x70000000;\n  fraction = exponent + 0x90000000;\n  result = fraction;\n  if (!is_exponent_negative) {\n    exponent = exponent + 0x8fe00000;\n    result = exponent;\n  }\n  is_exponent_zero = result == 0;\n  if (!is_exponent_negative && fraction >= 0x200000) {\n    is_exponent_zero = exponent == 0x1fc00000;\n  }\n  if (((is_exponent_negative || fraction < 0x200000) || 0x1fc00000 < exponent) || is_exponent_zero) {\n    if ((float_sign & 0x40000000) != 0) {\n      if (((int)exponent >> 0x15 == -1) && ((float_bits | float_sign << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return float_sign & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(exponent + 0x92e00000) < 0 != SCARRY4(fraction,0x2e00000)) {\n      return float_sign & 0x80000000;\n    }\n    exponent = 0x18 - (exponent + 0x92e00000 >> 0x15);\n    result = float_bits >> (exponent & 0xff);\n    if (float_bits << (0x20 - exponent & 0xff) != 0) {\n      result = result | 1;\n    }\n    fraction = float_sign & 0x1fffff | 0x100000;\n    float_bits = result | fraction << (0x20 - exponent & 0xff);\n    fraction = (fraction >> (exponent & 0xff)) << 1;\n  }\n  result = (float_sign & 0x80000000 | float_bits >> 0x1d) + fraction * 4 + (uint)(0x7fffffff < float_bits * 8);\n  if (float_bits * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a30",
            "calling": [
                "FUN_08003330",
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "calculate_float_08000a30"
        },
        "FUN_080023d0": {
            "renaming": {
                "FUN_080023d0": "process_data_080023d0",
                "*param_1": "data_ptr",
                "PTR_": "",
                "DAT_": "",
                "undefined4": "int",
                "char": "unsigned char",
                "FUN_08004d8c": "execute_function"
            },
            "code": "int process_data_080023d0(int* data_ptr){\n    if (data_ptr != NULL){\n        if (*(char*)(data_ptr + 0x39) == 0){\n            *(unsigned char*)(data_ptr + 0xe) = 0;\n            execute_function();\n        }\n        *(unsigned char*)(data_ptr + 0x39) = 2;\n        process_data_080023d0(*data_ptr, data_ptr + 1);\n        *(unsigned char*)(data_ptr + 0x39) = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08004d8c",
                "FUN_08002368"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080023d0",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_data_080023d0"
        },
        "FUN_08004c30": {
            "renaming": {
                "FUN_08004c30": "validate_input_08004c30",
                "param_1": "input",
                "puVar1": "data_pointer_1",
                "puVar2": "data_pointer_2",
                "uVar3": "variable_1",
                "uVar4": "variable_3",
                "iVar5": "variable_2",
                "PTR_DAT_08004c58": "data_pointer_1",
                "DAT_08004c54": "expected_value",
                "PTR_DAT_08004c60": "data_pointer_2"
            },
            "code": "int* validate_input_08004c30(int* input)\n{\n  undefined* PTR_DAT_08004c58 = PTR_DAT_08004c58;\n  int DAT_08004c54 = DAT_08004c54;\n  undefined* PTR_DAT_08004c60 = PTR_DAT_08004c60;\n\n  if (*input != DAT_08004c54)\n  {\n    return input;\n  }\n\n  FUN_08003ec8(PTR_DAT_08004c5c, *PTR_DAT_08004c58);\n\n  if ((PTR_DAT_08004c60[0x39] == '\\x01') || (PTR_DAT_08004c60[0x39] == '\\x12'))\n  {\n    if (PTR_DAT_08004c58 == (undefined*)0x0)\n    {\n      return (int*)0x1;\n    }\n    if (PTR_DAT_08004c60[0x38] != '\\x01')\n    {\n      PTR_DAT_08004c60[0x38] = 1;\n      *(undefined4*)(PTR_DAT_08004c60 + 0x3c) = 0;\n      *(undefined2*)(PTR_DAT_08004c60 + 0x2c) = 1;\n      *(undefined2*)(PTR_DAT_08004c60 + 0x2e) = 1;\n      PTR_DAT_08004c60[0x38] = 0;\n      if (PTR_DAT_08004c60[0x39] == '\\x12')\n      {\n        undefined variable_1 = 0x32;\n      }\n      else\n      {\n        undefined variable_1 = 0x22;\n      }\n      int* variable_2 = *(int*)PTR_DAT_08004c60;\n      PTR_DAT_08004c60[0x39] = variable_1;\n      uint variable_3 = *(uint*)(variable_2 + 0xc);\n      *(undefined**)(PTR_DAT_08004c60 + 0x28) = PTR_DAT_08004c58;\n      *(uint*)(variable_2 + 0xc) = variable_3 | 0x100;\n      *(uint*)(variable_2 + 0x14) = *(uint*)(variable_2 + 0x14) | 1;\n      *(uint*)(variable_2 + 0xc) = *(uint*)(variable_2 + 0xc) | 0x20;\n      return (int*)0x0;\n    }\n  }\n  return (int*)0x2;\n}",
            "called": [
                "FUN_08003ec8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c30",
            "calling": [
                "FUN_0800290c"
            ],
            "imported": false,
            "current_name": "validate_input_08004c30"
        },
        "FUN_080004d0": {
            "renaming": {
                "FUN_080004d0": "FUNC_080004d0"
            },
            "code": "\nulonglong FUNC_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_080006ac();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_080006ac"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080004d0",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_080071c0",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_080004d0"
        },
        "FUN_08003fdc": {
            "renaming": {
                "FUN_08003fdc": "set_param_in_global_08003fdc",
                "param_1": "new_param",
                "PTR_DAT_08003fe4": "ptr",
                "target_ptr": "target_ptr",
                "offset": "offset"
            },
            "code": "void set_param_in_global_08003fdc(int new_param) {\n    int* PTR_DAT_08003fe4 = (int*) PTR_DAT_08003fe4;\n    int offset = 0x38;\n    int* target_PTR_DAT_08003fe4 = (int*) (*PTR_DAT_08003fe4 + offset);\n    *target_PTR_DAT_08003fe4 = new_param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fdc",
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "imported": false,
            "current_name": "set_param_in_global_08003fdc"
        },
        "FUN_080009f0": {
            "renaming": {
                "FUN_080009f0": "is_end_of_string_080009f0",
                "in_CY": "current_char",
                "FUN_08000980": "execute_some_function"
            },
            "code": "bool is_end_of_string_080009f0(void)\n{\n  char current_char;\n  execute_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08000980"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080009f0",
            "calling": [
                "FUN_08005854",
                "FUN_08005c70",
                "FUN_08006228",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "is_end_of_string_080009f0"
        },
        "FUN_08004f10": {
            "renaming": {
                "FUN_08004f10": "set_flags_and_values_08004f10",
                "puVar1": "data_ptr"
            },
            "code": "void set_flags_and_values_08004f10(void)\n{\n  uint *data_ptr;\n  data_ptr = PTR_08004f50;\n  *PTR_08004f50 |= 1;\n  data_ptr[1] = DAT_08004f54 & data_ptr[1];\n  *data_ptr &= 0xfef6ffff;\n  *data_ptr &= 0xfffbffff;\n  data_ptr[1] &= 0xff80ffff;\n  data_ptr[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08004f58 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f10",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "set_flags_and_values_08004f10"
        },
        "FUN_08005044": {
            "renaming": {
                "FUN_08005044": "allocate_memory_08005044",
                "param_1": "memory_block",
                "param_2": "memory_info",
                "param_3": "size",
                "param_4": "alignment",
                "iVar1": "result",
                "uVar2": "required_size",
                "uVar3": "min_size",
                "iVar4": "offset"
            },
            "code": "uint32_t allocate_memory_08005044(uint32_t *memory_block, int *memory_info, uint32_t size, uint32_t alignment) {\n  int offset = memory_info[0] - memory_info[4];\n  uint32_t min_size = (uint32_t)(memory_info[5] * 3) / 2;\n  uint32_t required_size = size + 1 + offset;\n  if (min_size < required_size) {\n    min_size = required_size;\n  }\n  if ((int)((uint16_t)(memory_info[3]) << 0x15) < 0) {\n    uint32_t new_memory_block = allocate_aligned_memory(memory_block, min_size, alignment);\n    if (new_memory_block == 0) {\n      *memory_block = 0xc;\n      memory_info[3] = memory_info[3] | 0x40;\n      return 0xffffffff;\n    }\n    copy_memory(new_memory_block, memory_info[4], offset);\n    memory_info[3] = memory_info[3] & 0xfb7f | 0x80;\n    memory_info[4] = new_memory_block;\n  }\n  else {\n    uint32_t new_memory_block = allocate_memory_08005044(memory_block, memory_info[4], min_size, alignment);\n    if (new_memory_block == 0) {\n      copy_memory(memory_block, memory_info[4], offset);\n      *memory_block = 0xc;\n      memory_info[3] = memory_info[3] | 0x40;\n      return 0xffffffff;\n    }\n    memory_info[4] = new_memory_block;\n  }\n  memory_info[5] = min_size;\n  memory_info[0] = memory_info[4] + offset + size;\n  memory_info[2] = min_size - offset - size;\n  if (size > memory_info[2]) {\n    size = memory_info[2];\n  }\n  copy_memory(*memory_block, alignment, size);\n  memory_info[2] = memory_info[2] - size;\n  *memory_block = *memory_block + size;\n  return 0;\n}",
            "called": [
                "FUN_08005630",
                "FUN_080057d0",
                "FUN_0800567c",
                "FUN_08005646",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005044",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "allocate_memory_08005044"
        },
        "FUN_08004194": {
            "renaming": {
                "FUN_08004194": "initialize_variables_08004194",
                "puVar1": "ptr_1",
                "puVar2": "ptr_2",
                "puVar3": "ptr_3",
                "puVar4": "ptr_4",
                "uVar5": "unsigned_var_5",
                "uVar6": "unsigned_var_6",
                "uVar7": "unsigned_var_7",
                "uVar8": "unsigned_var_8"
            },
            "code": "void initialize_variables_08004194(void)\n{\n    undefined *ptr_3 = PTR_DAT_080049f0;\n    undefined *ptr_2 = PTR_DAT_080049ec;\n    undefined *ptr_1 = PTR_DAT_080049e8;\n    undefined *ptr_4 = PTR_DAT_080049f4;\n    \n    FUN_08004028();\n    FUN_08004c70();\n    FUN_08002ea0();\n    FUN_08003298();\n    \n    ptr_2[0x4c] = 1;\n    ptr_1[0x4c] = 1;\n    ptr_3[0x4c] = 0xffffffff;\n    ptr_4[0x4c] = 1;\n    \n    ptr_2[0x20] = DAT_080049fc;\n    ptr_1[0x20] = DAT_08004a04;\n    ptr_3[0x20] = DAT_08004a0c;\n    ptr_4[0x20] = 0;\n    \n    ptr_2[4] = DAT_080049f8;\n    ptr_2[8] = DAT_08004a10;\n    ptr_2[0xc] = DAT_08004a00;\n    ptr_2[0x10] = DAT_08004a08;\n    ptr_2[0x14] = DAT_08004a10;\n    ptr_2[0x18] = DAT_08004a14;\n    \n    ptr_1[4] = DAT_08004a18;\n    ptr_1[8] = DAT_08004a10;\n    ptr_1[0xc] = DAT_08004a1c;\n    ptr_1[0x10] = DAT_08004a18;\n    ptr_1[0x14] = DAT_08004a10;\n    ptr_1[0x18] = DAT_08004a20;\n    \n    ptr_3[4] = DAT_08004a24;\n    ptr_3[8] = DAT_08004a28;\n    ptr_3[0xc] = DAT_08004a00;\n    \n    ptr_4[4] = DAT_08004a2c;\n}",
            "called": [
                "FUN_08004028",
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08003298"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004194",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "initialize_variables_08004194"
        },
        "FUN_08001240": {
            "renaming": {
                "FUN_08001240": "set_flag_if_param_is_four_08001240",
                "param_1": "param",
                "uVar1": "flag_value",
                "*DAT_08001254": "*data_pointer"
            },
            "code": "void set_flag_if_param_is_four_08001240(int param){\n  uint flag_value;\n  if (param == 4) {\n    flag_value = *DAT_08001254 | 4;\n  }\n  else {\n    flag_value = *DAT_08001254 & 0xfffffffb;\n  }\n  *DAT_08001254 = flag_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001240",
            "calling": [
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_is_four_08001240"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_new_value_08005840",
                "param_1": "current_value",
                "param_2": "data_array",
                "iVar1": "index"
            },
            "code": "int calculate_new_value_08005840(int current_value, int* data_array){\n  int index = current_value - 4;\n  if (current_value < 0) {\n    index += *(data_array + index);\n  }\n  return index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "calculate_new_value_08005840"
        },
        "FUN_08000150": {
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "input_string",
                "pcVar3": "current_char",
                "pcVar2": "next_char",
                "cVar1": "current_char_value"
            },
            "code": "char* find_end_of_string_08000150(char* input_string) {\n  char* current_char = input_string;\n  while (*current_char != '\\0') {\n    current_char++;\n  }\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000150",
            "calling": [
                "FUN_08004c8c"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000150"
        },
        "FUN_08003f3c": {
            "renaming": {
                "FUN_08003f3c": "count_leading_zeroes_and_update_flags_08003f3c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "flags",
                "uVar2": "count",
                "DAT_08003f78": "flags",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "void count_leading_zeroes_and_update_flags_08003f3c(uint32_t param_1, uint32_t param_2, uint32_t param_3)\n{\n  uint32_t DAT_08003f78 = DAT_08003f78;\n  uint32_t count1 = count_leading_zeroes(param_1);\n  uint32_t count2 = count_leading_zeroes(param_2);\n  uint32_t count3 = count_leading_zeroes(param_3);\n  FUN_08001424(DAT_08003f78,0x8000,count1 >> 5);\n  FUN_08001424(DAT_08003f78,0x4000,count2 >> 5);\n  FUN_08001424(DAT_08003f78,0x2000,count3 >> 5);\n  return;\n}",
            "called": [
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f3c",
            "calling": [
                "FUN_08004028",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_and_update_flags_08003f3c"
        },
        "FUN_08002214": {
            "renaming": {
                "FUN_08002214": "get_pointer_value_08002214",
                "undefined4": "uint32_t"
            },
            "code": "uint32_t get_pointer_value_08002214(void)\n{\n    uint32_t* ptr = (uint32_t*)PTR_DAT_0800221c;\n    return *ptr;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002214",
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "get_pointer_value_08002214"
        },
        "FUN_0800729c": {
            "renaming": {
                "FUN_0800729c": "do_nothing_0800729c"
            },
            "code": "\nvoid do_nothing_0800729c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800729c",
            "calling": [
                "FUN_080071c0"
            ],
            "imported": false,
            "current_name": "do_nothing_0800729c"
        },
        "FUN_08001004": {
            "renaming": {
                "FUN_08001004": "concatenate_two_32_bit_integers_to_64_bit_integer_08001004",
                "param_1": "integer_1",
                "param_2": "integer_2"
            },
            "code": "undefined8 concatenate_two_32_bit_integers_to_64_bit_integer_08001004(undefined4 integer_1, undefined4 integer_2)\n{\n  call_function_to_set_up_environment();\n  return CONCAT44(integer_2, integer_1);\n}",
            "called": [
                "FUN_08000f9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001004",
            "calling": [
                "FUN_08001014",
                "FUN_08000ffc",
                "FUN_08001028"
            ],
            "imported": false,
            "current_name": "concatenate_two_32_bit_integers_to_64_bit_integer_08001004"
        },
        "FUN_08003ff4": {
            "renaming": {
                "FUN_08003ff4": "process_data_08003ff4",
                "PTR_DAT_0800401c": "data_start_ptr",
                "PTR_DAT_08004020": "chunk1_ptr",
                "PTR_DAT_08004024": "chunk2_ptr",
                "FUN_08002538": "process_chunk"
            },
            "code": "void process_data_08003ff4(void)\n{\n    undefined *data_ptr;\n\n    data_ptr = PTR_DAT_0800401c;\n    process_chunk(PTR_DAT_08004020, 4);\n    process_chunk(PTR_DAT_08004024, 8);\n    process_chunk(data_ptr, 8);\n    process_chunk(data_ptr, 0xc);\n    return;\n}",
            "called": [
                "FUN_08002538"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ff4",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "process_data_08003ff4"
        },
        "FUN_080041ae": {
            "renaming": {
                "FUN_080041ae": "run_application_080041ae",
                "FUN_08003eb0": "initialize_system",
                "FUN_08004194": "display_welcome_message",
                "FUN_0800114c": "get_user_input",
                "FUNC_0800411c": "process_user_input"
            },
            "code": "void run_application_080041ae(void)\n{\n  initialize_system(0);\n  display_welcome_message();\n  do {\n    get_user_input();\n    FUNC_0800411c();\n  } while(true);\n}",
            "called": [
                "FUN_08003eb0",
                "FUN_0800411c",
                "FUN_0800114c",
                "FUN_08004194"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041ae",
            "calling": [
                "FUN_08004f68"
            ],
            "imported": false,
            "current_name": "run_application_080041ae"
        },
        "FUN_08001128": {
            "renaming": {
                "FUN_08001128": "set_flag_and_run_functions_08001128",
                "FUN_08001170": "run_function_with_parameter",
                "FUN_08001104": "run_function",
                "FUN_08004ccc": "run_function",
                "DAT_08001148": "data_pointer"
            },
            "code": "void set_flag_and_run_functions_08001128(void)\n{\n  *DAT_08001148 = *DAT_08001148 | 0x10;\n  run_function_with_parameter(3);\n  run_function_with_parameter(0);\n  run_function();\n  return;\n}",
            "called": [
                "FUN_08001170",
                "FUN_08004ccc",
                "FUN_08001104"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001128",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_and_run_functions_08001128"
        },
        "FUN_08004514": {
            "renaming": {
                "FUN_08004514": "peripheral_setup_08004514",
                "iVar1": "peripheral_count",
                "uVar2": "delay_time",
                "uVar3": "peripheral_id",
                "iVar4": "peripheral_index",
                "local_44": "peripheral_value",
                "local_40": "peripheral_value_index",
                "local_3c": "peripheral_value_id",
                "local_38": "peripheral_value_limit",
                "local_34": "peripheral_value_last",
                "local_30": "peripheral_index_array",
                "local_20": "peripheral_id_1",
                "local_1c": "peripheral_id_2",
                "local_14": "peripheral_value_1",
                "local_10": "peripheral_value_2",
                "local_c": "delay_increment",
                "PTR_s____Src_peripherals_c_08004588": "peripheral_string"
            },
            "code": "void peripheral_setup_08004514()\n{\n    int peripheral_count;\n    uint32_t delay_time;\n    uint32_t delay_increment = 0x380000;\n    uint32_t peripheral_index[4] = {2, 2, 0, 0};\n    uint32_t peripheral_ids[4] = {2, 0x10, 0, 0};\n    uint32_t peripheral_values[4] = {2, 0x400, 0xf, 0};\n    uint32_t peripheral_limits[4] = {0, 0, 0xffffffff, 0};\n\n    peripheral_count = get_peripheral_count(peripheral_index);\n\n    for (int i = 0; i < peripheral_count; i++) {\n        peripheral_ids[2] = 0x3c;\n        while (true) {\n            uint32_t peripheral_value = get_peripheral_value(peripheral_ids[2]);\n\n            if (set_peripheral_value(&peripheral_values, &peripheral_index, &peripheral_ids, peripheral_value, peripheral_ids[1]) == 0) {\n                break;\n            }\n\n            peripheral_ids[2] = 0x49;\n        }\n\n        delay_time = get_delay_time();\n        delay_time /= 1000;\n\n        set_delay_time(delay_time);\n        set_peripheral_value(&peripheral_limits, &peripheral_index, &peripheral_values, 0xffffffff, 0);\n    }\n}\n",
            "called": [
                "FUN_0800209c",
                "FUN_08002214",
                "FUN_08001240",
                "FUN_08001b58",
                "FUN_08001194",
                "FUN_08004490",
                "FUN_08001214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004514",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "peripheral_setup_08004514"
        },
        "FUN_08004a84": {
            "renaming": {
                "FUN_08004a84": "run_application_08004a84",
                "puVar1": "ptr1",
                "puVar2": "ptr2",
                "puVar3": "ptr3",
                "puVar4": "ptr4",
                "puVar5": "ptr5",
                "uVar6": "value",
                "uVar7": "result",
                "iVar8": "result",
                "PTR_DAT_08004bf0": "ptr_data_1",
                "PTR_DAT_08004bf4": "ptr_data_2",
                "PTR_DAT_08004bf8": "ptr_data_3",
                "PTR_DAT_08004c04": "ptr_data_4",
                "PTR_DAT_08004c08": "ptr_data_5",
                "PTR_DAT_08004c14": "ptr_data_6",
                "FUN_08002ec0": "get_value_1",
                "FUN_08002ed4": "get_value_2",
                "FUN_08002ee8": "get_value_3",
                "FUN_08004a30": "initialize_application",
                "FUN_08001064": "function_1",
                "FUN_08001028": "function_2",
                "FUN_08003f3c": "function_3",
                "FUN_0800483c": "function_4",
                "FUNC_08000adc": "function_5",
                "FUN_080041c4": "function_6",
                "FUN_0800426c": "function_7",
                "FUNC_08000cec": "function_8",
                "FUN_080010c4": "function_9",
                "DAT_08004bfc": "const_2",
                "DAT_08004c00": "const_1",
                "DAT_08004c10": "const_5",
                "DAT_08004c0c": "const_4",
                "DAT_08004c14": "const_3"
            },
            "code": "void run_application_08004a84(void)\n{\n  int result;\n  char *ptr1;\n  char *ptr2;\n  char *ptr3;\n  char *ptr4;\n  char *ptr5;\n  int value;\n  value = get_value_1();\n  ptr2 = PTR_DAT_08004bf4;\n  ptr1 = PTR_DAT_08004bf0;\n  *(int *)(PTR_DAT_08004bf0 + 48) = value;\n  value = get_value_2();\n  *(int *)(PTR_DAT_08004bf4 + 48) = value;\n  value = get_value_3();\n  ptr3 = PTR_DAT_08004bf8;\n  *(int *)(PTR_DAT_08004bf8 + 48) = value;\n  initialize_application();\n  result = function_1(*(int *)(PTR_DAT_08004bf0 + 48), 0);\n  if (result == 0) {\n    result = function_2(*(int *)(PTR_DAT_08004bf0 + 48), DAT_08004c00);\n  }\n  else {\n    result = function_1(*(int *)(PTR_DAT_08004bf0 + 48), DAT_08004bfc);\n  }\n  if (result == 0) {\n    result = function_1(*(int *)(PTR_DAT_08004bf4 + 48), 0);\n    if (result == 0) {\n      result = function_2(*(int *)(PTR_DAT_08004bf4 + 48), DAT_08004c00);\n    }\n    else {\n      result = function_1(*(int *)(PTR_DAT_08004bf4 + 48), DAT_08004c14);\n    }\n    if (result == 0) {\n      function_3(1, 1);\n      function_4(PTR_DAT_08004bf0);\n      ptr4 = PTR_DAT_08004c04;\n      function_4(PTR_DAT_08004bf4);\n      function_4(PTR_DAT_08004bf8);\n      ptr5 = PTR_DAT_08004c08;\n      if (ptr4[1] != 0) {\n        function_4(PTR_DAT_08004c08);\n        value = FUNC_08000adc(*(int *)(ptr5 + 72), DAT_08004c0c);\n        *(int *)(ptr5 + 72) = value;\n      }\n      *(int *)(ptr5 + 72) = *(int *)(ptr4 + 16);\n      if (*ptr4 == 0) {\n        function_6();\n      }\n      else {\n        function_7(*(int *)(ptr5 + 72), *(int *)(PTR_DAT_08004bf0 + 72), *(int *)(PTR_DAT_08004bf4 + 72), *(int *)(PTR_DAT_08004bf8 + 72));\n      }\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf0 + 4), DAT_08004c10);\n      value = function_9();\n      ptr4 = PTR_DAT_08004c14;\n      *(char *)(PTR_DAT_08004c14 + 12) = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf0 + 8), DAT_08004c10);\n      value = function_9();\n      *(char *)(ptr4 + 16) = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf4 + 4), DAT_08004c10);\n      value = function_9();\n      *(char *)ptr4 = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf4 + 8), DAT_08004c10);\n      value = function_9();\n      ptr4[1] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf4 + 12), DAT_08004c10);\n      value = function_9();\n      ptr4[2] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf8 + 4), DAT_08004c10);\n      value = function_9();\n      ptr4[6] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf8 + 8), DAT_08004c10);\n      value = function_9();\n      ptr4[7] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004bf8 + 12), DAT_08004c10);\n      value = function_9();\n      ptr4[8] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004c08 + 4), DAT_08004c10);\n      value = function_9();\n      ptr4[9] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004c08 + 8), DAT_08004c10);\n      value = function_9();\n      ptr4[10] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004c08 + 12), DAT_08004c10);\n      value = function_9();\n      ptr4[11] = value;\n      FUNC_08000cec(*(int *)(PTR_DAT_08004c08 + 16), DAT_08004c10);\n      value = function_9();\n      ptr4[12] = value;\n      return;\n    }\n  }\n  function_6();\n  function_3(0, 1);\n  return;\n}",
            "called": [
                "FUN_0800483c",
                "FUN_08002ec0",
                "FUN_080010c4",
                "FUN_08002ed4",
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_08003f3c",
                "FUN_08004a30",
                "FUN_08000cec",
                "FUN_08000adc",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080041c4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a84",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "run_application_08004a84"
        },
        "FUN_080041c4": {
            "renaming": {
                "FUN_080041c4": "initialize_game_board_080041c4",
                "param_1": "row",
                "param_2": "col",
                "param_3": "val1",
                "param_4": "val2",
                "FUN_08003fc4": "initialize_board",
                "FUN_08003fd0": "initialize_players",
                "FUN_08003fdc": "initialize_scores",
                "FUN_08003fe8": "initialize_game"
            },
            "code": "void initialize_game_board_080041c4(undefined4 row, undefined4 col, undefined4 val1, undefined4 val2)\n{\n  undefined4 extraout_r1;\n  initialize_board(row);\n  initialize_players(val1);\n  initialize_scores(val2);\n  initialize_game(row, extraout_r1, val1, val2);\n  return;\n}",
            "called": [
                "FUN_08003fe8",
                "FUN_08003fd0",
                "FUN_08003fc4",
                "FUN_08003fdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "initialize_game_board_080041c4"
        },
        "FUN_080053d4": {
            "renaming": {
                "FUN_080053d4": "FUNC_080053d4"
            },
            "code": "\nuint FUNC_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_0800558e;\n          if (bVar1 != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\nLAB_0800551e:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_08005404;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_08005424;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_08005424:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_08005610;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080054fa;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08005464:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800548a:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_08005498;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_08005498:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_08005610;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_080054b4;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800544a:\n            puVar5 = PTR_s_0123456789abcdef_0800560c;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800548a;\n          if (bVar1 == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08005464;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08005614(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800557a:\n    *puVar3 = uVar6;\n  }\nLAB_0800558e:\n  param_2[4] = 0;\nLAB_080054fa:\n  iVar2 = FUN_080052e4(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_0800550e:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_0800550e;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053d4",
            "calling": [
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "FUNC_080053d4"
        },
        "FUN_080057d0": {
            "renaming": {
                "FUN_080057d0": "calculate_result_080057d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result",
                "uVar2": "temp_value",
                "FUN_0800567c": "print_result",
                "FUN_08005840": "get_temp_value",
                "FUN_08005714": "calculate_result",
                "FUN_08005630": "do_something"
            },
            "code": "uint calculate_result_080057d0(undefined4 input_1, uint input_2, uint input_3, undefined4 input_4) {\n  uint result = 0;\n  uint temp_value = 0;\n  if (input_2 != 0) {\n    if (input_3 == 0) {\n      print_error();\n      result = input_3;\n    }\n    else {\n      temp_value = get_temp_value();\n      result = input_2;\n      if ((temp_value < input_3) && (result = calculate_result_080057d0(input_1, input_3), result != 0)) {\n        do_something(result, input_2, input_3);\n        print_result(input_1, input_2);\n      }\n    }\n    return result;\n  }\n  result = calculate_result_080057d0(input_1, input_3, input_3, input_4);\n  return result;\n}",
            "called": [
                "FUN_08005630",
                "FUN_08005840",
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057d0",
            "calling": [
                "FUN_08005044"
            ],
            "imported": false,
            "current_name": "calculate_result_080057d0"
        },
        "FUN_0800567c": {
            "renaming": {
                "FUN_0800567c": "insert_node_0800567c",
                "param_1": "head",
                "param_2": "data",
                "param_3": "unused_param",
                "param_4": "unused_param",
                "puVar1": "unused_pointer",
                "extraout_r1": "next_node",
                "ppiVar2": "next_node",
                "ppiVar3": "prev_node",
                "piVar4": "node_data",
                "ppiVar5": "current_node",
                "ppiVar6": "next_node",
                "ppiVar7": "new_node"
            },
            "code": "void insert_node_0800567c(int **head, int data) {\n  if (data == 0) {\n    return;\n  }\n  int **new_node = (int **)(data + -4);\n  if (*(int *)(data + -4) < 0) {\n    new_node = (int **)((int)new_node + *(int *)(data + -4));\n  }\n  do_nothing_0800583c();\n  int **current_node = *(int ***)PTR_DAT_08005710;\n  if (current_node == (int **)0x0) {\n    new_node[1] = (int *)0x0;\n    *(int ***)PTR_DAT_08005710 = new_node;\n  }\n  else if (new_node < current_node) {\n    int **next_node = (int **)*new_node;\n    int **prev_node = (int **)((int)new_node + (int)next_node);\n    if (current_node == prev_node) {\n      int *node_data = *current_node;\n      current_node = (int **)current_node[1];\n      prev_node = (int **)((int)node_data + (int)next_node);\n      *new_node = (int *)prev_node;\n    }\n    new_node[1] = (int *)current_node;\n    *(int ***)PTR_DAT_08005710 = new_node;\n  }\n  else {\n    while (current_node != (int **)0x0 && current_node < new_node) {\n      int **next_node = current_node[1];\n      if (next_node == (int **)0x0) break;\n      current_node = next_node;\n    }\n    int **next_node = (int **)*current_node;\n    if ((int **)((int)current_node + (int)next_node) == new_node) {\n      next_node = (int **)((int)next_node + (int)*new_node);\n      *current_node = (int *)next_node;\n      if (current_node[1] == (int **)((int)current_node + (int)next_node)) {\n        int *node_data = *current_node[1];\n        current_node[1] = (int **)node_data[1];\n        next_node = (int **)((int)next_node + (int)node_data);\n        *current_node = (int *)next_node;\n      }\n    }\n    else if (new_node < (int **)((int)current_node + (int)next_node)) {\n      return;\n    }\n    else {\n      next_node = (int **)((int)new_node + (int)*new_node);\n      if (current_node[1] == next_node) {\n        int *node_data = *current_node[1];\n        current_node[1] = (int **)node_data[1];\n        next_node = (int **)((int)node_data + (int)*new_node);\n        *current_node = (int *)next_node;\n      }\n      new_node[1] = (int *)current_node[1];\n      current_node[1] = new_node;\n    }\n  }\n  do_nothing_0800583e(param_1, current_node, new_node, param_4);\n  return;\n}",
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800567c",
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "imported": false,
            "current_name": "insert_node_0800567c"
        },
        "FUN_0800458c": {
            "renaming": {
                "FUN_0800458c": "FUNC_0800458c"
            },
            "code": "\nvoid FUNC_0800458c(void)\n\n{\n  undefined4 uVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  int local_58;\n  int local_54;\n  int local_50;\n  int local_4c;\n  int local_48;\n  int local_40;\n  int local_3c;\n  int local_38;\n  int local_34;\n  int local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  undefined4 local_20;\n  int local_1c;\n  \n  FUN_08001128();\n  FUN_08004514();\n  uVar4 = DAT_08004800;\n  iVar3 = DAT_080047fc;\n  *(uint *)(DAT_080047fc + 0x18) = *(uint *)(DAT_080047fc + 0x18) | 0x10;\n  iVar5 = 2;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 4;\n  uVar1 = DAT_08004804;\n  *(uint *)(iVar3 + 0x18) = *(uint *)(iVar3 + 0x18) | 8;\n  FUN_08001424(uVar4,0xe000,0,*(uint *)(iVar3 + 0x18) & 8);\n  FUN_08001424(DAT_08004808,0x20,0);\n  local_34 = 0xe000;\n  local_30 = 1;\n  local_28 = 2;\n  FUNC_08001264(DAT_08004800,&local_34);\n  local_34 = 0x20;\n  local_30 = 1;\n  local_28 = 2;\n  FUNC_08001264(DAT_08004808,&local_34);\n  puVar2 = PTR_DAT_0800480c;\n  *(undefined4 *)PTR_DAT_0800480c = DAT_08004810;\n  *(undefined4 *)(puVar2 + 4) = uVar1;\n  *(undefined4 *)(puVar2 + 0x10) = 0x4000;\n  *(undefined4 *)(puVar2 + 8) = 0;\n  *(undefined4 *)(puVar2 + 0xc) = 0;\n  *(undefined4 *)(puVar2 + 0x14) = 0;\n  *(undefined4 *)(puVar2 + 0x18) = 0;\n  *(undefined4 *)(puVar2 + 0x1c) = 0;\n  *(undefined4 *)(puVar2 + 0x20) = 0;\n  iVar3 = FUN_08001754();\n  if (iVar3 == 0) goto LAB_0800463a;\n  uVar4 = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  iVar3 = FUN_08004490(PTR_s____Src_peripherals_c_08004814,uVar4);\nLAB_0800463a:\n                                  uVar4 = DAT_0800481c;\n                                  puVar2 = PTR_DAT_08004818;\n                                  *(int *)(PTR_DAT_08004818 + 8) = iVar3;\n                                  *(int *)(puVar2 + 0xc) = iVar3;\n                                  *(int *)(puVar2 + 0x10) = iVar3;\n                                  *(int *)(puVar2 + 0x18) = iVar3;\n                                  *(int *)(puVar2 + 0x1c) = iVar3;\n                                  *(undefined4 *)puVar2 = uVar4;\n                                  *(undefined4 *)(puVar2 + 4) = 0x1c200;\n                                  *(undefined4 *)(puVar2 + 0x14) = 0xc;\n                                  iVar3 = FUN_08002724(puVar2);\n                                  uVar4 = DAT_08004824;\n                                  puVar2 = PTR_DAT_08004820;\n                                  if (iVar3 == 0) break;\n                                  uVar4 = 0x151;\n                                }\n                                *(undefined4 *)(PTR_DAT_08004820 + 8) = 0;\n                                *(undefined4 *)(puVar2 + 0x10) = 0;\n                                *(undefined4 *)(puVar2 + 0x14) = 0;\n                                *(undefined4 *)puVar2 = uVar4;\n                                *(int *)(puVar2 + 4) = iVar5;\n                                *(undefined4 *)(puVar2 + 0xc) = 1000;\n                                iVar3 = FUN_080023d0(puVar2);\n                                if (iVar3 == 0) break;\n                                uVar4 = 0x88;\n                              }\n                              local_58 = iVar3;\n                              local_54 = iVar3;\n                              iVar3 = FUN_080025a4(puVar2,&local_58);\n                              if (iVar3 == 0) break;\n                              uVar4 = 0x8f;\n                            }\n                            local_50 = 0x60;\n                            local_4c = iVar3;\n                            local_48 = iVar3;\n                            local_40 = iVar3;\n                            local_3c = iVar3;\n                            local_38 = iVar3;\n                            iVar3 = FUN_0800245c(puVar2,&local_50,0xc);\n                            if (iVar3 == 0) break;\n                            uVar4 = 0x9a;\n                          }\n                          local_20 = 0x2000;\n                          local_34 = iVar3;\n                          local_30 = iVar3;\n                          local_2c = iVar3;\n                          local_28 = iVar3;\n                          local_24 = iVar3;\n                          local_1c = iVar3;\n                          iVar3 = FUN_08002564(puVar2,&local_34);\n                          if (iVar3 == 0) break;\n                          uVar4 = 0xa6;\n                        }\n                        FUN_08004e14(puVar2);\n                        puVar2 = PTR_DAT_08004828;\n                        *(undefined4 *)PTR_DAT_08004828 = 0x40000000;\n                        *(int *)(puVar2 + 4) = iVar5;\n                        *(undefined4 *)(puVar2 + 8) = 0;\n                        *(undefined4 *)(puVar2 + 0xc) = 1000;\n                        *(undefined4 *)(puVar2 + 0x10) = 0;\n                        iVar3 = FUN_080023d0(puVar2);\n                        if (iVar3 == 0) break;\n                        uVar4 = 0xc3;\n                      }\n                      local_50 = iVar3;\n                      local_4c = iVar3;\n                      iVar3 = FUN_080025a4(puVar2,&local_50);\n                      if (iVar3 == 0) break;\n                      uVar4 = 0xca;\n                    }\n                    local_34 = 0x60;\n                    local_30 = iVar3;\n                    local_2c = iVar3;\n                    local_24 = iVar3;\n                    iVar3 = FUN_0800245c(puVar2,&local_34,4);\n                    if (iVar3 == 0) break;\n                    uVar4 = 0xd3;\n                  }\n                  FUN_08004e14(puVar2);\n                  uVar4 = DAT_08004830;\n                  puVar2 = PTR_DAT_0800482c;\n                  *(undefined4 *)(PTR_DAT_0800482c + 0xc) = 1000;\n                  *(undefined4 *)puVar2 = uVar4;\n                  *(int *)(puVar2 + 4) = iVar5;\n                  *(undefined4 *)(puVar2 + 8) = 0;\n                  *(undefined4 *)(puVar2 + 0x10) = 0;\n                  iVar3 = FUN_080023d0();\n                  if (iVar3 == 0) break;\n                  uVar4 = 0xf0;\n                }\n                local_50 = 0;\n                local_4c = 0;\n                iVar3 = FUN_080025a4(PTR_DAT_0800482c,&local_50);\n                if (iVar3 == 0) break;\n                uVar4 = 0xf7;\n              }\n              local_34 = 0x60;\n              local_30 = iVar3;\n              local_2c = iVar3;\n              local_24 = iVar3;\n              iVar3 = FUN_0800245c(PTR_DAT_0800482c,&local_34,8);\n              if (iVar3 == 0) break;\n              uVar4 = 0x100;\n            }\n            iVar5 = FUN_0800245c(PTR_DAT_0800482c,&local_34,0xc);\n            if (iVar5 == 0) break;\n            uVar4 = 0x105;\n          }\n          FUN_08004e14(PTR_DAT_0800482c);\n          puVar2 = PTR_DAT_08004834;\n          *(undefined4 *)PTR_DAT_08004834 = DAT_08004838;\n          *(undefined4 *)(puVar2 + 4) = 2;\n          *(undefined4 *)(puVar2 + 8) = 0;\n          *(undefined4 *)(puVar2 + 0xc) = 1000;\n          *(undefined4 *)(puVar2 + 0x10) = 0;\n          iVar3 = FUN_080023d0(puVar2);\n          if (iVar3 == 0) break;\n          uVar4 = 0x122;\n        }\n        local_50 = iVar3;\n        local_4c = iVar3;\n        iVar3 = FUN_080025a4(puVar2,&local_50);\n        if (iVar3 == 0) break;\n        uVar4 = 0x129;\n      }\n      local_34 = 0x60;\n      local_30 = iVar3;\n      local_2c = iVar3;\n      local_24 = iVar3;\n      iVar3 = FUN_0800245c(puVar2,&local_34,8);\n      if (iVar3 == 0) break;\n      uVar4 = 0x132;\n    }\n    iVar3 = FUN_0800245c(puVar2,&local_34,0xc);\n    if (iVar3 == 0) break;\n    uVar4 = 0x137;\n  }\n  FUN_08004e14(puVar2);\n  return;\n}\n\n",
            "called": [
                "FUN_08001754",
                "FUN_080025a4",
                "FUN_0800245c",
                "FUN_080023d0",
                "FUN_08002564",
                "FUN_08001128",
                "FUN_08004490",
                "FUN_08004514",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08002724",
                "FUN_08001424"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800458c",
            "calling": [
                "FUN_08004028"
            ],
            "imported": false,
            "current_name": "FUNC_0800458c"
        },
        "FUN_080072d4": {
            "renaming": {
                "FUN_080072d4": "do_nothing_080072d4"
            },
            "code": "\nvoid do_nothing_080072d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d4",
            "calling": [
                "FUN_08004fb4",
                "FUN_08000110",
                "FUN_08000134"
            ],
            "imported": false,
            "current_name": "do_nothing_080072d4"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "do_nothing_0800583c"
            },
            "code": "\nvoid do_nothing_0800583c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583c"
        },
        "FUN_08000adc": {
            "renaming": {
                "FUN_08000adc": "FUNC_08000adc"
            },
            "code": "\nuint FUNC_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if ((uVar3 & 0x800000) == 0) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08000c12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000adc",
            "calling": [
                "FUN_08002ec0",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002ee8",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_0800426c",
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "FUNC_08000adc"
        },
        "FUN_08000ffc": {
            "renaming": {
                "FUN_08000ffc": "swap_arguments_and_call_function_08000ffc",
                "param_1": "arg1",
                "param_2": "arg2",
                "FUN_08001004": "call_function_with_swapped_arguments"
            },
            "code": "void swap_arguments_and_call_function_08000ffc(void* arg1, void* arg2)\n{\n  call_function_with_swapped_arguments(arg2, arg1);\n  return;\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000ffc",
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "imported": false,
            "current_name": "swap_arguments_and_call_function_08000ffc"
        },
        "FUN_080016f4": {
            "renaming": {
                "FUN_080016f4": "check_if_flag_set_080016f4",
                "param_1": "flag_ptr",
                "param_2": "max_duration",
                "iVar1": "start_time",
                "iVar2": "flag_val"
            },
            "code": "int check_if_flag_set_080016f4(int *flag_ptr, uint32_t max_duration) {\n  int start_time = get_current_time();\n  while(1) {\n    int flag_val = *flag_ptr;\n    if ((*(uint32_t *)(flag_val + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(flag_val + 0x14) << 0x1b < 0) {\n      if ((max_duration == 0) || (get_current_time() - start_time > max_duration)) {\n        flag_ptr[14] |= 0x20;\n        *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n        *(undefined *)(flag_ptr + 0xd) = 0;\n        return 3;\n      }\n    }\n    else {\n      *(uint32_t *)(flag_val + 0x14) &= 0xffffffef;\n      flag_ptr[14] = 0;\n      *(undefined *)(flag_ptr + 0xd) = 0;\n      *(undefined *)((int)flag_ptr + 0x35) = 0x20;\n      return 1;\n    }\n  }\n}",
            "called": [
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080016f4",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "check_if_flag_set_080016f4"
        },
        "FUN_080025a4": {
            "renaming": {
                "FUN_080025a4": "set_flags_080025a4",
                "param_1": "param_array",
                "param_2": "flag_array",
                "uVar1": "flag1",
                "uVar2": "status",
                "iVar3": "ptr",
                "uVar4": "flag2"
            },
            "code": "int set_flags_080025a4(int *param_array, uint *flag_array)\n{\n  uint flag1 = flag_array[0];\n  uint flag2 = flag_array[1];\n  int ptr = *param_array;\n  int status = 2;\n  if (*(char *)(param_array + 0xe) != '\\x01') {\n    *(undefined *)((int)param_array + 0x39) = 2;\n    *(uint *)(ptr + 4) = *(uint *)(ptr + 4) & 0xffffff8f | flag1;\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) & 0xffffff7f | flag2;\n    *(undefined *)((int)param_array + 0x39) = 1;\n    status = 0;\n    *(undefined *)(param_array + 0xe) = 0;\n  }\n  return status;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025a4",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flags_080025a4"
        },
        "FUN_0800583e": {
            "renaming": {
                "FUN_0800583e": "do_nothing_0800583e"
            },
            "code": "\nvoid do_nothing_0800583e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583e",
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "imported": false,
            "current_name": "do_nothing_0800583e"
        },
        "FUN_08002220": {
            "renaming": {
                "FUNC_08002220": "FUN_08002220",
                "uVar1": "count_leading_zeroes_result",
                "PTR_DAT_0800224c": "ptr_dat_value",
                "DAT_08002244": "dat_08002244_value",
                "PTR_DAT_08002248": "PTR_DAT_08002248",
                "count_leading_zeroes": "count_leading_zeroes",
                "num": "num",
                "count": "count",
                "ptr_dat_value": "ptr_dat_value",
                "dat_08002244_value": "dat_08002244_value",
                "shift_amount": "shift_amount",
                "FUN_08002220": "count_leading_zeroes_08002220"
            },
            "code": "uint count_leading_zeroes_08002220(uint num) {\n  uint count = 0;\n  while (num) {\n    count++;\n    num >>= 1;\n  }\n  return 32 - count;\n}\n\nuint FUNC_08002220(void) {\n  uint count_leading_zeroes_08002220_result = count_leading_zeroes_08002220(0xe00000);\n  uint PTR_DAT_0800224c = *(uint *)PTR_DAT_0800224c;\n  uint DAT_08002244 = *(uint *)(DAT_08002244 + 4);\n  uint shift_amount = (DAT_08002244 & 0x700) >> (count_leading_zeroes_08002220_result & 0xff);\n  return PTR_DAT_0800224c >> shift_amount;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002220",
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "imported": false,
            "current_name": "count_leading_zeroes_08002220"
        },
        "FUN_08003034": {
            "renaming": {
                "FUN_08003034": "convert_pressure_to_binary_format_08003034",
                "param_1": "pressure",
                "param_2": "temperature",
                "param_3": "calibration_coefficients",
                "param_4": "calibration_coefficients_length",
                "local_c": "pressure_binary_format",
                "FUN_080040b8": "convert_pressure_to_binary_format_helper"
            },
            "code": "uint convert_pressure_to_binary_format_08003034(uint pressure, uint temperature, uint calibration_coefficients, uint calibration_coefficients_length) {\n  uint pressure_binary_format;\n  pressure_binary_format = pressure;\n  convert_pressure_to_binary_format_08003034_helper(0xee, 0, &pressure_binary_format, 3, calibration_coefficients, calibration_coefficients_length, temperature);\n  return (uint) CONCAT12((undefined)pressure_binary_format, CONCAT11(pressure_binary_format._1_1_, pressure_binary_format._2_1_));\n}\n\nvoid convert_pressure_to_binary_format_08003034_helper(uint conversion_factor, uint conversion_offset, uint* data, uint data_length, uint calibration_coefficients, uint calibration_coefficients_length, uint temperature) {\n  uint i;\n  for (i = 0; i < data_length; i++) {\n    uint calibration_coefficient = calibration_coefficients + (i * 2);\n    uint coefficient_value = *(uint*) calibration_coefficient;\n    uint data_value = *(uint*) data;\n    uint temperature_coefficient = calibration_coefficients + 10;\n    uint temperature_coefficient_value = *(uint*) temperature_coefficient;\n    uint delta_temperature = temperature - temperature_coefficient_value;\n    uint offset = (coefficient_value * delta_temperature) >> conversion_factor;\n    uint binary_value = data_value - offset + conversion_offset;\n    *(uint*) data = binary_value;\n    data++;\n  }\n}\n",
            "called": [
                "FUN_080040b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003034",
            "calling": [
                "FUN_0800411c"
            ],
            "imported": false,
            "current_name": "convert_pressure_to_binary_format_08003034"
        },
        "FUN_08004e7c": {
            "renaming": {
                "FUN_08004e7c": "check_and_set_flag_08004e7c",
                "*param_1": "*flag_ptr",
                "DAT_08004edc": "flag_value",
                "local_18": "first_arg",
                "local_14": "second_arg",
                "local_10": "third_arg",
                "local_c": "unused_variable"
            },
            "code": "void check_and_set_flag_08004e7c(int *flag_ptr) {\n  int DAT_08004edc = 0x4000;\n  int first_arg = 0x200;\n  int second_arg = 2;\n  int third_arg = 3;\n  if (*flag_ptr == DAT_08004edc) {\n    *(uint *)(DAT_08004edc + 0xd818) |= DAT_08004edc;\n    FUNC_08001264(DAT_08004ee0, &first_arg);\n    first_arg = 0x400;\n    second_arg = 0;\n    third_arg = 0;\n    FUNC_08001264(DAT_08004ee0, &first_arg);\n    FUN_08001194(0x25, 0, 0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}",
            "called": [
                "FUN_080011fc",
                "FUN_08001194",
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e7c",
            "calling": [
                "FUN_08002724"
            ],
            "imported": false,
            "current_name": "check_and_set_flag_08004e7c"
        },
        "FUN_08001530": {
            "renaming": {
                "FUN_08001530": "set_flag_and_process_data_08001530",
                "param_1": "data_ptr",
                "param_2": "data_1",
                "param_3": "data_2",
                "param_4": "flag",
                "param_5": "data_3",
                "iVar1": "result",
                "iVar2": "var_2",
                "puVar3": "data",
                "ppuVar4": "data_ptr_copy",
                "uVar5": "data_1_copy",
                "uVar6": "data_2_copy"
            },
            "code": "int set_flag_and_process_data_08001530(uint **data_ptr, uint data_1, uint data_2, int flag, uint data_3) {\n  int result = 0;\n  uint **data_ptr_copy = data_ptr;\n  uint data_1_copy = data_1;\n  uint data_2_copy = data_2;\n  int var_1 = get_current_time();\n  do {\n    uint *data = *data_ptr;\n    do {\n      if ((int)(data[5] << 0x1f) < 0) {\n        data[4] = data_1 & 0xfe;\n        result = process_data(data_ptr, DAT_080015e4, data_3, data, data_ptr_copy, data_1_copy, data_2_copy);\n        if (result == 0) {\n          result = process_data_2(data_ptr, data_3, (*data_ptr)[5], (*data_ptr)[6]);\n          if (result == 0) {\n            data = *data_ptr;\n            if (flag == 1) {\n              goto return_result;\n            }\n            data[4] = data_2 >> 8;\n            result = process_data_2(data_ptr, data_3);\n            if (result == 0) {\n              data = *data_ptr;\n              goto return_result;\n            }\n          }\n          if (data_ptr[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **data_ptr = **data_ptr | 0x200;\n        }\n        else if (data_ptr[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (data_3 == 0xffffffff);\n    if ((data_3 == 0) || (int var_2 = get_current_time(), data_3 < (uint)(var_2 - var_1))) {\n      *(undefined *)((int)data_ptr + 0x35) = 0x20;\n      *(undefined *)(data_ptr + 0xd) = 0;\n      return 3;\n    }\n  } while (true);\n\nreturn_result:\n  data[4] = data_2 & 0xff;\n  return result;\n}",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001530",
            "calling": [
                "FUN_08001828"
            ],
            "imported": false,
            "current_name": "set_flag_and_process_data_08001530"
        },
        "FUN_08003314": {
            "renaming": {
                "FUN_08003314": "set_parameter_value_08003314",
                "param_1": "parameter_value",
                "PTR_DAT_0800331c": "parameter_pointer"
            },
            "code": "void set_parameter_value_08003314(void* parameter_value) {\n  *(void**)PTR_DAT_0800331c = parameter_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003314",
            "calling": [
                "FUN_08002ea0"
            ],
            "imported": false,
            "current_name": "set_parameter_value_08003314"
        },
        "FUN_08005854": {
            "renaming": {
                "FUN_08005854": "FUNC_08005854"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUNC_08005854(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 *puVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined4 local_48;\n  undefined *local_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined4 local_38;\n  undefined4 uStack_34;\n  undefined8 local_30;\n  int local_28;\n  \n  uVar5 = FUNC_08005c70();\n  puVar1 = PTR_DAT_080058f8;\n  if (*PTR_DAT_080058f8 == -1) {\n    return uVar5;\n  }\n  local_28 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  if (local_28 != 0) {\n    return uVar5;\n  }\n  uVar6 = do_nothing_0800708c(param_1,param_2);\n  iVar2 = FUN_080009f0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0,DAT_080058ec);\n  if (iVar2 == 0) {\n    return uVar5;\n  }\n  local_48 = 1;\n  local_44 = PTR_DAT_080058f0;\n  local_40 = param_1;\n  uStack_3c = param_2;\n  local_38 = param_1;\n  uStack_34 = param_2;\n  local_30 = FUN_080070a4(PTR_DAT_080058f4);\n  if (*puVar1 != '\\x02') {\n    iVar2 = FUN_0800709e(&local_48);\n    if (iVar2 != 0) goto LAB_080058d0;\n  }\n  puVar3 = (undefined4 *)FUN_080072ac();\n  *puVar3 = 0x21;\nLAB_080058d0:\n  if (local_28 != 0) {\n    piVar4 = (int *)FUN_080072ac();\n    *piVar4 = local_28;\n  }\n  return local_30;\n}\n\n",
            "called": [
                "FUN_080072ac",
                "FUN_08005c70",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_0800708c",
                "FUN_080070a4"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005854",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "FUNC_08005854"
        },
        "FUN_08000168": {
            "renaming": {
                "FUN_08000168": "FUNC_08000168"
            },
            "code": "\nulonglong FUNC_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_08000278;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000168",
            "calling": [
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000168"
        },
        "FUN_080072e0": {
            "renaming": {
                "FUN_080072e0": "do_nothing_080072e0"
            },
            "code": "\nvoid do_nothing_080072e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072e0",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_080072e0"
        },
        "FUN_08001014": {
            "renaming": {
                "FUN_08001014": "check_input_not_null_08001014",
                "in_ZR": "input_char",
                "FUN_08001004": "get_input_char"
            },
            "code": "bool check_input_not_null_08001014(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08001004"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001014",
            "calling": [
                "FUN_08003330"
            ],
            "imported": false,
            "current_name": "check_input_not_null_08001014"
        },
        "FUN_080071c0": {
            "renaming": {
                "FUN_080071c0": "calculate_result_080071c0",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "param_4": "fourth_param",
                "uVar1": "shifted_second_param",
                "uVar5": "high_bits",
                "iVar2": "sum",
                "uVar3": "uVar3",
                "uVar4": "uVar4",
                "uVar6": "concatenated_params"
            },
            "code": "ulonglong calculate_result_080071c0(uint first_param, uint second_param, int third_param, undefined4 fourth_param)\n{\n  uint shifted_second_param = (second_param << 1) >> 0x15;\n  ulonglong concatenated_params = CONCAT44(second_param, first_param);\n  if (shifted_second_param == 0) {\n    if ((second_param & 0x7fffffff | first_param) == 0) {\n      return concatenated_params;\n    }\n    concatenated_params = FUNC_080004d0(first_param, second_param, 0, DAT_08007290);\n    undefined4 uVar3 = DAT_08007280;\n    undefined4 uVar4 = DAT_08007284;\n    if (third_param < DAT_08007294) goto LAB_0800722e;\n    shifted_second_param = ((uint)((int)(concatenated_params >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_second_param == 0x7ff) {\n    concatenated_params = FUNC_0800016c(first_param, second_param, first_param, second_param, fourth_param);\n    return concatenated_params;\n  }\n  uint high_bits = (uint)(concatenated_params >> 0x20);\n  int sum = shifted_second_param + third_param;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return concatenated_params & 0xffffffff | (ulonglong)(high_bits & 0x800fffff | sum * 0x100000) << 0x20;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n      concatenated_params = concatenated_params & 0xffffffff |\n              (ulonglong)(high_bits & 0x800fffff | (sum + 0x36) * 0x100000) << 0x20;\n      undefined4 uVar3 = 0;\n      undefined4 uVar4 = DAT_08007298;\n      goto LAB_0800722e;\n    }\n    if (third_param < 0xc351) {\n      concatenated_params = do_nothing_0800729c(DAT_08007280, DAT_08007284, (int)concatenated_params, high_bits);\n      undefined4 uVar3 = DAT_08007280;\n      undefined4 uVar4 = DAT_08007284;\n      goto LAB_0800722e;\n    }\n  }\n  concatenated_params = do_nothing_0800729c(DAT_08007288, DAT_0800728c, (int)concatenated_params, high_bits);\n  undefined4 uVar3 = DAT_08007288;\n  undefined4 uVar4 = DAT_0800728c;\nLAB_0800722e:\n  concatenated_params = FUNC_080004d0((int)concatenated_params, (int)(concatenated_params >> 0x20), uVar3, uVar4);\n  return concatenated_params;\n}",
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071c0",
            "calling": [
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "calculate_result_080071c0"
        },
        "FUN_08001258": {
            "renaming": {
                "FUN_08001258": "do_nothing_08001258"
            },
            "code": "\nvoid do_nothing_08001258(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001258",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_08001258"
        },
        "FUN_08005614": {
            "renaming": {
                "FUN_08005614": "find_character_in_string_08005614",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char* find_character_in_string_08005614(char* string, char character, int length) {\n  char* current_char = string;\n  while (current_char != string + length) {\n    if (*current_char == character) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005614",
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "imported": false,
            "current_name": "find_character_in_string_08005614"
        },
        "FUN_08000724": {
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08000892"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000724",
            "calling": [
                "FUN_08005900",
                "FUN_08003330",
                "FUN_08005c70",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08006070",
                "FUN_08006d68"
            ],
            "imported": false,
            "current_name": "FUNC_08000724"
        },
        "FUN_080070a4": {
            "renaming": {
                "FUN_080070a4": "shift_left_32_bits_080070a4",
                "DAT_080070ac": "global_data"
            },
            "code": "unsigned long long shift_left_32_bits_080070a4(void)\n{\n    unsigned long long shifted_value = (unsigned long long)DAT_080070ac << 0x20;\n    return shifted_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080070a4",
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "imported": false,
            "current_name": "shift_left_32_bits_080070a4"
        },
        "FUN_0800407c": {
            "renaming": {
                "FUN_0800407c": "check_data_validity_and_return_value_0800407c",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "return_value_1",
                "param_4": "return_value_2",
                "iVar1": "result",
                "local_14": "local_array",
                "PTR_DAT_080040b4": "PTR_DATA_ARRAY",
                "FUNC_08001938": "validate_data",
                "FUN_08004490": "set_return_value_1"
            },
            "code": "undefined check_data_validity_and_return_value_0800407c(undefined4 data_1, undefined4 data_2, undefined4 return_value_1, undefined4 return_value_2)\n{\n  int result;\n  undefined local_array[8];\n  local_array[0] = 0;\n  result = FUNC_08001938(PTR_DAT_080040b4, data_1, data_2, 1, local_array, 1, 200);\n  if (result != 0) {\n    return_value_1 = set_return_value_1(return_value_1, return_value_2);\n  }\n  return local_array[0];\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800407c",
            "calling": [
                "FUN_08002cb0",
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_080040e8"
            ],
            "imported": false,
            "current_name": "check_data_validity_and_return_value_0800407c"
        },
        "FUN_08001938": {
            "renaming": {
                "FUN_08001938": "FUNC_08001938"
            },
            "code": "\nundefined4\nFUNC_08001938(uint **param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *param_5,ushort param_6,uint param_7)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  uint *puVar4;\n  uint uVar5;\n  undefined *puVar6;\n  bool bVar7;\n  \n  if (*(char *)((int)param_1 + 0x35) != ' ') {\n    return 2;\n  }\n  if (param_5 == (undefined *)0x0) {\n    return 1;\n  }\n  if (param_6 == 0) {\n    return 1;\n  }\n  iVar2 = FUN_0800115c();\n  while (puVar4 = *param_1, (~puVar4[6] & 2) == 0) {\n    iVar3 = FUN_0800115c();\n    if (10000 < (uint)(iVar3 - iVar2)) {\n      *(undefined *)(param_1 + 0xd) = 0;\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(param_1 + 0xd) == '\\x01') {\n    return 2;\n  }\n  uVar5 = *puVar4;\n  *(undefined *)(param_1 + 0xd) = 1;\n  *puVar4 = uVar5 & 0xfffff7ff;\n  *(undefined *)((int)param_1 + 0x35) = 0x22;\n  *(undefined *)((int)param_1 + 0x36) = 0x40;\n  param_1[0xe] = (uint *)0x0;\n  iVar2 = FUN_080015e8(param_1,param_2,param_3,param_4,param_7);\n  if (iVar2 != 0) {\n    *(undefined *)(param_1 + 0xd) = 0;\n    if (param_1[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  puVar4 = *param_1;\n  uVar5 = *puVar4;\n  if (param_6 == 1) {\n    *puVar4 = uVar5 & 0xfffffbff;\n    disableIRQinterrupts();\n    **param_1 = **param_1 | 0x200;\n    enableIRQinterrupts();\n    iVar2 = FUN_080016f4(param_1,param_7);\n    if (iVar2 == 0) {\n      *param_5 = (char)(*param_1)[4];\nLAB_08001ab8:\n      *(undefined *)((int)param_1 + 0x35) = 0x20;\n      *(undefined *)((int)param_1 + 0x36) = 0;\n      *(undefined *)(param_1 + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (param_1[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (param_6 == 2) {\n    *puVar4 = uVar5 | 0x800;\n    disableIRQinterrupts();\n    **param_1 = **param_1 & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *puVar4 = uVar5 | 0x400;\n    while (3 < param_6) {\n      iVar2 = FUN_080016f4(param_1,param_7);\n      if (iVar2 != 0) goto LAB_08001a18;\n      *param_5 = (char)(*param_1)[4];\n      puVar4 = *param_1;\n      bVar7 = (int)(puVar4[5] << 0x1d) < 0;\n      if (bVar7) {\n        puVar4 = (uint *)puVar4[4];\n        puVar6 = param_5 + 2;\n        param_6 = param_6 - 2;\n      }\n      else {\n        puVar6 = param_5 + 1;\n        param_6 = param_6 - 1;\n      }\n      puVar1 = param_5 + 1;\n      param_5 = puVar6;\n      if (bVar7) {\n        *puVar1 = (char)puVar4;\n      }\n    }\n    if (param_6 != 2) {\n      iVar2 = FUN_0800115c();\n      do {\n        puVar4 = *param_1;\n        do {\n          if ((int)(puVar4[5] << 0x1d) < 0) {\n            *puVar4 = *puVar4 & 0xfffffbff;\n            disableIRQinterrupts();\n            *param_5 = (char)(*param_1)[4];\n            iVar2 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (param_7 == 0xffffffff);\n      } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n      goto LAB_08001afa;\n    }\n  }\n  iVar2 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*param_1)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        puVar4 = *param_1;\n        *puVar4 = *puVar4 | 0x200;\n        *param_5 = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[1] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\nLAB_08001afa:\n  *(undefined *)((int)param_1 + 0x35) = 0x20;\n  *(undefined *)(param_1 + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    puVar4 = *param_1;\n    do {\n      if ((int)(puVar4[5] << 0x1d) < 0) {\n        *puVar4 = *puVar4 | 0x200;\n        param_5[1] = (char)puVar4[4];\n        enableIRQinterrupts();\n        param_5[2] = (char)(*param_1)[4];\n        goto LAB_08001ab8;\n      }\n    } while (param_7 == 0xffffffff);\n  } while ((param_7 != 0) && (iVar3 = FUN_0800115c(), (uint)(iVar3 - iVar2) <= param_7));\n  goto LAB_08001afa;\n}\n\n",
            "called": [
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_0800115c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001938",
            "calling": [
                "FUN_080040b8",
                "FUN_0800407c"
            ],
            "imported": false,
            "current_name": "FUNC_08001938"
        },
        "FUN_0800411c": {
            "renaming": {
                "FUN_0800411c": "FUNC_0800411c"
            },
            "code": "\nvoid FUNC_0800411c(void)\n\n{\n  undefined4 *puVar1;\n  byte bVar2;\n  longlong lVar3;\n  uint uVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  int iVar12;\n  undefined4 uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  undefined4 *puVar18;\n  undefined4 unaff_r4;\n  int iVar19;\n  int iVar20;\n  bool bVar21;\n  undefined8 uVar22;\n  \n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004188;\n  if (1 < (uint)(iVar12 - *(int *)PTR_DAT_08004188)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08002f28();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_0800418c;\n  if (2 < (uint)(iVar12 - *(int *)PTR_DAT_0800418c)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004a84();\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar5 = PTR_DAT_08004190;\n  if (3 < (uint)(iVar12 - *(int *)PTR_DAT_08004190)) {\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar5 = uVar13;\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  puVar6 = PTR_DAT_08003254;\n  puVar5 = PTR_DAT_08003250;\n  if ((*PTR_DAT_08003250 != '\\0') && (*PTR_DAT_08003254 != '\\0')) {\n    iVar20 = *(int *)PTR_DAT_0800325c + (uint)*(ushort *)(PTR_DAT_08003258 + 10) * -0x100;\n    uVar14 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) * (longlong)iVar20) >>\n             0x17 | (int)((ulonglong)\n                          ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 0xc) *\n                          (longlong)iVar20) >> 0x20) << 9;\n    uVar15 = (uint)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) * (longlong)iVar20 >> 7);\n    uVar16 = uVar15 + (uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000;\n    uVar8 = (uint)((ulonglong)\n                   ((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20) >> 8)\n    ;\n    iVar12 = uVar14 + 2000;\n    uVar9 = uVar8 + (uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000;\n    bVar21 = (int)uVar14 < 0;\n    if (1999 < iVar12) {\n      uVar14 = 0;\n    }\n    uVar4 = uVar14;\n    if (bVar21 != SBORROW4(iVar12,2000)) {\n      iVar19 = uVar14 * uVar14 * 5;\n      uVar14 = iVar19 >> 2;\n      uVar4 = iVar19 >> 1;\n    }\n    uVar17 = uVar16 - uVar4;\n    lVar3 = (ulonglong)(uVar9 - uVar14) * (ulonglong)*(uint *)PTR_DAT_08003260;\n    iVar19 = *(uint *)PTR_DAT_08003260 *\n             ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 6) * (longlong)iVar20 >>\n                     0x28) + (uint)CARRY4(uVar8,(uint)*(ushort *)(PTR_DAT_08003258 + 2) * 0x8000)) -\n              ((int)uVar14 >> 0x1f)) - (uint)(uVar9 < uVar14)) + (int)((ulonglong)lVar3 >> 0x20);\n    uVar8 = (uint)lVar3 >> 0x15 | iVar19 * 0x800;\n    uVar13 = FUN_08000c44(uVar8 - uVar17 >> 0xf |\n                          (((iVar19 >> 0x15) -\n                           ((((int)((longlong)(int)(uint)*(ushort *)(PTR_DAT_08003258 + 8) *\n                                    (longlong)iVar20 >> 0x27) +\n                             (uint)CARRY4(uVar15,(uint)*(ushort *)(PTR_DAT_08003258 + 4) * 0x10000))\n                            - ((int)uVar4 >> 0x1f)) - (uint)(uVar16 < uVar4))) -\n                          (uint)(uVar8 < uVar17)) * 0x20000);\n    uVar10 = FUNC_08000e54(uVar13,DAT_08003264);\n    *(undefined4 *)PTR_DAT_08003268 = uVar10;\n    uVar13 = FUN_08000c44(iVar12);\n    uVar11 = FUNC_08000e54(uVar13,DAT_08003264);\n    uVar13 = DAT_08003270;\n    *(undefined4 *)PTR_DAT_0800326c = uVar11;\n    FUNC_08000e54(uVar10,uVar13);\n    uVar22 = FUN_08000428();\n    uVar22 = FUNC_08005900((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003240,DAT_08003244);\n    uVar22 = FUNC_08000168(0,DAT_08003274,(int)uVar22,(int)((ulonglong)uVar22 >> 0x20));\n    FUNC_080004d0((int)uVar22,(int)((ulonglong)uVar22 >> 0x20),DAT_08003248,DAT_0800324c);\n    uVar13 = FUN_08000a30();\n    puVar7 = PTR_DAT_08003278;\n    *(undefined4 *)PTR_DAT_0800327c = uVar13;\n    uVar10 = 0;\n    puVar18 = (undefined4 *)puVar7;\n    do {\n      puVar1 = puVar18 + 1;\n      *puVar18 = *puVar1;\n      uVar10 = FUNC_08000adc(uVar10);\n      puVar18 = puVar1;\n    } while ((undefined4 *)(puVar7 + 0x4c) != puVar1);\n    *(undefined4 *)(puVar7 + 0x4c) = uVar13;\n    uVar13 = FUNC_08000adc(uVar10,uVar13);\n    uVar13 = FUNC_08000e54(uVar13,DAT_08003280);\n    *(undefined4 *)PTR_DAT_08003284 = uVar13;\n    iVar12 = FUN_08001078();\n    puVar7 = PTR_DAT_0800328c;\n    *(int *)PTR_DAT_08003288 = iVar12 * 100;\n    bVar2 = *puVar7;\n    *puVar5 = 0;\n    *puVar6 = 0;\n    FUN_0800403c(0xee,bVar2 + 0x50,1);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)PTR_DAT_08003290 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar6 = PTR_DAT_08003294;\n  if (((10 < (uint)(iVar12 - *(int *)PTR_DAT_08003290)) && (*puVar5 == '\\0')) &&\n     (*PTR_DAT_08003254 == '\\0')) {\n    uVar13 = FUN_08003034();\n    puVar7 = PTR_DAT_0800325c;\n    *puVar5 = 1;\n    *(undefined4 *)puVar7 = uVar13;\n    FUN_0800403c(0xee,(byte)*PTR_DAT_0800328c + 0x40,1,0,unaff_r4);\n    uVar13 = thunk_FUN_0800115c();\n    *(undefined4 *)puVar6 = uVar13;\n  }\n  iVar12 = thunk_FUN_0800115c();\n  puVar7 = PTR_DAT_08003254;\n  if (((10 < (uint)(iVar12 - *(int *)puVar6)) && (*puVar5 != '\\0')) && (*PTR_DAT_08003254 == '\\0'))\n  {\n    uVar13 = FUN_08003034();\n    *(undefined4 *)PTR_DAT_08003260 = uVar13;\n    *puVar7 = 1;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000c44",
                "FUN_08005900",
                "FUN_08003034",
                "FUN_08004348",
                "FUN_08002f28",
                "FUN_080043bc",
                "FUN_08004410",
                "thunk_FUN_0800115c",
                "FUN_0800403c",
                "FUN_08000a30",
                "FUN_08001078",
                "FUN_080043f0",
                "FUN_080004d0",
                "FUN_08000428",
                "FUN_08004434",
                "FUN_08000adc",
                "FUN_08004384",
                "FUN_08004a84",
                "FUN_08000168",
                "FUN_08000e54",
                "FUN_08004458"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800411c",
            "calling": [
                "FUN_080041ae"
            ],
            "imported": false,
            "current_name": "FUNC_0800411c"
        },
        "FUN_080022d0": {
            "renaming": {
                "FUN_080022d0": "update_data_080022d0",
                "param_1": "data_index",
                "param_2": "data_array",
                "uVar1": "current_val",
                "uVar2": "var_1",
                "uVar3": "var_2",
                "DAT_08002320": "special_data_index"
            },
            "code": "void update_data_080022d0(int data_index, uint *data_array)\n{\n  uint current_val = *(uint *)(data_index + 0x20);\n  *(uint *)(data_index + 0x20) = current_val & 0xfffffeff;\n  uint var_1 = *(uint *)(data_index + 4);\n  uint var_2 = *data_array;\n  uint var_3 = (current_val & 0xfffffdff) | (data_array[2] << 8);\n  if (data_index == DAT_08002320) {\n    var_3 = (var_3 & 0xfffff7ff) | (data_array[3] << 8);\n    var_1 = (var_1 & 0xffffcfff) | ((data_array[5] | data_array[6]) << 4);\n  }\n  *(uint *)(data_index + 4) = var_1;\n  *(uint *)(data_index + 0x1c) = (*(uint *)(data_index + 0x1c) & 0xffffff8c) | var_2;\n  *(uint *)(data_index + 0x3c) = data_array[1];\n  *(uint *)(data_index + 0x20) = var_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022d0",
            "calling": [
                "FUN_0800245c"
            ],
            "imported": false,
            "current_name": "update_data_080022d0"
        },
        "FUN_080010c4": {
            "renaming": {
                "FUN_080010c4": "check_param_080010c4",
                "param_1": "input_param",
                "uVar1": "shift_amount",
                "shifted_param": "shifted_param",
                "result": "result",
                "is_param_negative": "is_param_negative",
                "is_param_less_than_0x7f000000": "is_param_less_than_0x7f000000"
            },
            "code": "uint check_param_080010c4(uint input_param)\n{\n  uint result;\n  bool is_param_negative = (input_param & 0x80000000) != 0;\n  bool is_param_less_than_0x7f000000 = (input_param << 1) < 0x7f000000;\n\n  if (is_param_negative || is_param_less_than_0x7f000000)\n  {\n    return 0;\n  }\n\n  uint shifted_param = input_param << 1;\n  uint shift_amount = 0x9e - (shifted_param >> 0x18);\n\n  if (shift_amount >= 0)\n  {\n    result = (shifted_param << 8 | 0x80000000) >> (shift_amount & 0xff);\n  }\n  else if (shift_amount == 0xffffff9f && (input_param & 0x7fffff) != 0)\n  {\n    return 0;\n  }\n  else\n  {\n    result = 0xffffffff;\n  }\n\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080010c4",
            "calling": [
                "FUN_08004a84"
            ],
            "imported": false,
            "current_name": "check_param_080010c4"
        },
        "FUN_080040b8": {
            "renaming": {
                "FUN_080040b8": "process_data_080040b8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "output_1",
                "param_6": "output_2",
                "iVar1": "result",
                "FUNC_08001938": "call_function",
                "PTR_DAT_080040e4": "PTR_DATA",
                "FUN_08004490": "send_error"
            },
            "code": "void process_data_080040b8(int input_1, int input_2, int input_3, int input_4, int output_1, int output_2)\n{\n  int result = FUNC_08001938(PTR_DAT_080040e4, input_1, input_2, 1, input_3, input_4, 200, input_4);\n  if (result != 0) {\n    send_error(output_1, output_2);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_08001938",
                "FUN_08004490"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040b8",
            "calling": [
                "FUN_08003034"
            ],
            "imported": false,
            "current_name": "process_data_080040b8"
        },
        "FUN_0800245c": {
            "renaming": {
                "FUN_0800245c": "set_flag_0800245c",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "value",
                "extraout_r1": "temp1",
                "extraout_r1_00": "temp2",
                "extraout_r1_01": "temp3",
                "iVar1": "temp1",
                "iVar3": "temp3",
                "uVar2": "temp1"
            },
            "code": "void set_flag_0800245c(int *data, uint flag, uint value)\n{\n  int temp1;\n  int temp2;\n  int temp3;\n  if (*(char *)(data + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)data + 0x39) = 2;\n  *(undefined *)(data + 0xe) = 1;\n  switch(value) {\n  case 0:\n    set_flag_0800245c2(*data);\n    temp3 = *data;\n    temp1 = *(int *)(flag + 0x10);\n    *(uint *)(temp3 + 0x18) = (*(uint *)(temp3 + 0x18) | 8) & 0xfffffffb | temp1;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    set_flag_0800245c3(*data);\n    temp3 = *data;\n    temp1 = *(int *)(flag + 0x10);\n    *(uint *)(temp3 + 0x18) = (*(uint *)(temp3 + 0x18) | 0x800) & 0xfffffbff | temp1 << 8;\n    break;\n  case 8:\n    set_flag_0800245c4(*data);\n    temp3 = *data;\n    temp2 = *(int *)(flag + 0x10);\n    *(uint *)(temp3 + 0x1c) = (*(uint *)(temp3 + 0x1c) | 8) & 0xfffffffb | temp2;\n    break;\n  case 0xc:\n    set_flag_0800245c5(*data);\n    temp3 = *data;\n    temp1 = *(int *)(flag + 0x10);\n    *(uint *)(temp3 + 0x1c) = (*(uint *)(temp3 + 0x1c) | 0x800) & 0xfffffbff | temp1 << 8;\n    *(uint *)(temp3 + 0x1c) = *(uint *)(temp3 + 0x1c) | (*(uint *)(temp3 + 0x1c) | temp1 << 8);\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(temp3 + 0x18) = (*(uint *)(temp3 + 0x18) | temp1) & 0xfffffffb | (*(uint *)(flag + 0x10));\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)data + 0x39) = 1;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}",
            "called": [
                "FUN_08002324",
                "FUN_080022d0",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800245c",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "set_flag_0800245c"
        },
        "FUN_08004490": {
            "renaming": {
                "FUN_08004490": "print_error_message_and_exit_08004490",
                "param_1": "error_code",
                "param_2": "line_number",
                "puVar2": "at_line_message",
                "puVar3": "error_message",
                "uVar1": "data_port",
                "DAT_08004508": "DATA_PORT",
                "PTR_s_Error_with_08004510": "error_string",
                "PTR_s__at_line__0800450c": "at_line_string",
                "FUN_08001424": "print_bits_to_port",
                "FUN_0800142e": "print_bits_to_port",
                "FUN_08004c8c": "print_integer",
                "FUN_08004cac": "print_integer",
                "FUN_08004c18": "print_character",
                "thunk_do_nothing_08001168": "delay_function"
            },
            "code": "void print_error_message_and_exit_08004490(int error_code, int line_number)\n{\n  int delay = 500;\n  char* error_message = \"Error with \";\n  char* at_line_message = \" at line \";\n\n  print_bits_to_port(DAT_08004508, 0x4000, 1);\n  print_bits_to_port(DAT_08004508, 0x8000, 0);\n  print_bits_to_port(DAT_08004508, 0x2000, 0);\n\n  do {\n    print_bits_to_port(DAT_08004508, 0x4000, 1);\n    print_bits_to_port(DAT_08004508, 0x8000, 0);\n    print_bits_to_port(DAT_08004508, 0x2000, 0);\n    print_string(PTR_s_Error_with_08004510);\n    print_integer(error_code);\n    print_string(PTR_s__at_line__0800450c);\n    print_integer(line_number);\n    print_character(10);\n    thunk_do_nothing_08001168(delay);\n  } while(true);\n}\n",
            "called": [
                "thunk_FUN_08001168",
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "FUN_08004c8c",
                "FUN_08001424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004490",
            "calling": [
                "FUN_080040b8",
                "FUN_0800403c",
                "FUN_0800407c",
                "FUN_0800458c",
                "FUN_08004514"
            ],
            "imported": false,
            "current_name": "print_error_message_and_exit_08004490"
        },
        "FUN_08000e54": {
            "renaming": {
                "FUN_08000e54": "FUNC_08000e54"
            },
            "code": "\nuint FUNC_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000e54",
            "calling": [
                "FUN_0800483c",
                "FUN_08003330",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "imported": false,
            "current_name": "FUNC_08000e54"
        },
        "FUN_080015e8": {
            "renaming": {
                "FUN_080015e8": "set_flags_080015e8",
                "param_1": "flags",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "flag3",
                "param_5": "flag4",
                "puVar3": "flag_ptr",
                "ppuVar4": "flags_ptr",
                "uVar5": "flag5",
                "uVar6": "flag6",
                "iVar1": "result"
            },
            "code": "uint32_t set_flags_080015e8(uint32_t **flags, uint32_t flag1, uint32_t flag2, int flag3, uint32_t flag4) {\n    uint32_t *flag_ptr = *flags;\n    *flag_ptr |= 0x400;\n    *flag_ptr |= 0x100;\n    uint32_t **flags_ptr = flags;\n    uint32_t flag5 = flag1;\n    uint32_t flag6 = flag2;\n    int iVar1 = get_var();\n\nloop:\n    flag_ptr = *flags;\n    while (-1 < (int)(flag_ptr[5] << 0x1f)) {\n        if (flag4 != 0xffffffff) {\n            goto code_r0x08001658;\n        }\n    }\n    flag_ptr[4] = flag1 & 0xfe;\n    int result = set_flag(*flags, DAT_080016f0, flag4, flag_ptr, flags_ptr, flag5, flag6);\n    if (result != 0) {\n        goto end;\n    }\n    result = set_flag(*flags, flag4, (*flags)[5], (*flags)[6]);\n    if (result == 0) {\n        flag_ptr = *flags;\n        if (flag3 != 1) {\n            flag_ptr[4] = flag2 >> 8;\n            result = set_flag(*flags, flag4);\n            if (result != 0) {\n                goto end;\n            }\n            flag_ptr = *flags;\n        }\n        flag_ptr[4] = flag2 & 0xff;\n        result = set_flag(*flags, flag4);\n        if (result == 0) {\n            **flags = **flags | 0x100;\n            iVar1 = get_var();\n            do {\n                do {\n                    if ((int)((*flags)[5] << 0x1f) < 0) {\n                        (*flags)[4] = flag1 & 0xff | 1;\n                        result = set_flag(*flags, DAT_080016f0, flag4);\n                        if (result == 0) {\n                            return 0;\n                        }\n                        end:\n                        if (flags_ptr[0xe] != (uint32_t *)0x4) {\n                            return 3;\n                        }\n                        return 1;\n                    }\n                } while (flag4 == 0xffffffff);\n            } while ((flag4 != 0) && (iVar1 = get_var(), (uint32_t)(iVar1 - iVar1) <= flag4));\n        }\n    }\n    if (flags_ptr[0xe] == (uint32_t *)0x4) {\n        **flags = **flags | 0x200;\n        return 1;\n    }\n    return 3;\n\ncode_r0x08001658:\n    if ((flag4 == 0) || (iVar1 = get_var(), flag4 < (uint32_t)(iVar1 - iVar1))) {\n        goto loop_end;\n    }\n    goto loop;\nloop_end:\n    *(uint8_t *)((int)flags + 0x35) = 0x20;\n    *(uint32_t *)(flags + 0xd) = 0;\n    return 3;\n}\n",
            "called": [
                "FUN_08001460",
                "FUN_080014e2",
                "FUN_0800115c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080015e8",
            "calling": [
                "FUN_08001938"
            ],
            "imported": false,
            "current_name": "set_flags_080015e8"
        },
        "FUN_08004e14": {
            "renaming": {
                "FUN_08004e14": "process_input_08004e14",
                "param_1": "input_value",
                "local_18": "constant_1",
                "local_14": "constant_2",
                "uStack_10": "constant_3",
                "local_c": "parameter_1",
                "iVar2": "value",
                "uVar1": "constant",
                "DAT_08004e6c": "constant",
                "DAT_08004e68": "constant_1",
                "0x40000000": "constant_2",
                "DAT_08004e74": "constant",
                "DAT_08004e70": "constant_3",
                "DAT_08004e78": "constant_4",
                "param_2": "param_2",
                "param_3": "parameter_3"
            },
            "code": "void process_input_08004e14(int *input_value, undefined4 param_2, undefined4 param_3)\n{\n  undefined4 DAT_08004e68 = 0x800;\n  undefined4 DAT_08004e6c_2 = 2;\n  undefined4 DAT_08004e70 = 3;\n  undefined4 DAT_08004e78 = 0x300;\n  int value = *input_value;\n  undefined4 DAT_08004e6c = DAT_08004e6c;\n  if (value == DAT_08004e68) {\n    input_value = &DAT_08004e68;\n  }\n  else if (value == 0x40000000) {\n    input_value = &DAT_08004e6c_2;\n  }\n  else {\n    DAT_08004e6c = DAT_08004e74;\n    if (value == DAT_08004e70) {\n      input_value = &DAT_08004e70;\n    }\n    else {\n      if (value != DAT_08004e78) {\n        return;\n      }\n      input_value = &DAT_08004e78;\n    }\n  }\n  undefined4 parameter_1 = 2;\n  undefined4 parameter_2 = 2;\n  undefined4 parameter_3 = param_3;\n  FUNC_08001264(DAT_08004e6c, input_value);\n}",
            "called": [
                "FUN_08001264"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e14",
            "calling": [
                "FUN_0800458c"
            ],
            "imported": false,
            "current_name": "process_input_08004e14"
        }
    },
    "used_tokens": 159352,
    "layers": [
        [
            "FUN_080050fc",
            "FUN_08001264",
            "FUN_08002ea0",
            "FUN_080006ac",
            "FUN_08001828",
            "FUN_0800290c",
            "FUN_08005bc8",
            "FUN_0800299a",
            "FUN_080052e4",
            "FUN_080014e2",
            "FUN_0800142e",
            "FUN_08004d8c",
            "FUN_08002250",
            "FUN_080009b4",
            "FUN_080011fc",
            "FUN_08003068",
            "FUN_08005646",
            "FUN_08000990",
            "FUN_08000110",
            "FUN_0800709e",
            "FUN_08002ec0",
            "FUN_08004434",
            "FUN_08006c0c",
            "FUN_0800426c",
            "FUN_08002538",
            "FUN_080040e8",
            "FUN_08004ffc",
            "FUN_0800115c",
            "FUN_08002d88",
            "FUN_08000c44",
            "FUN_08000a04",
            "FUN_080025e8",
            "FUN_08002b48",
            "FUN_08004f68",
            "FUN_08001170",
            "FUN_08002bf0",
            "FUN_08002ad0",
            "FUN_08001050",
            "FUN_080009c8",
            "FUN_08002ed4",
            "FUN_08000f9c",
            "FUN_08000c3c",
            "FUN_080043bc",
            "FUN_08001214",
            "FUN_08003fc4",
            "FUN_08000404",
            "FUN_0800209c",
            "FUN_0800403c",
            "FUN_08006070",
            "thunk_FUN_08006070",
            "FUN_08004cac",
            "FUN_08004c18",
            "FUN_0800483c",
            "FUN_08004c8c",
            "FUN_08001460",
            "FUN_08001064",
            "FUN_08003fd0",
            "FUN_08000892",
            "FUN_08004458",
            "FUN_08000134",
            "FUN_08003eb0",
            "FUN_08002ee8",
            "FUN_08001104",
            "thunk_FUN_0800115c",
            "FUN_080072b8",
            "FUN_0800581c",
            "FUN_08004d48",
            "FUN_080072ac",
            "FUN_08002280",
            "FUN_08001194",
            "FUN_08002cb0",
            "FUN_08004348",
            "FUN_08002324",
            "FUN_08001078",
            "FUN_08002564",
            "FUN_08001754",
            "FUN_08003ec8",
            "FUN_08002724",
            "FUN_08003fe8",
            "FUN_08005714",
            "FUN_08004fb4",
            "FUN_080043f0",
            "FUN_08000428",
            "FUN_08004ccc",
            "FUN_08000a30",
            "FUN_080023d0",
            "FUN_08004c30",
            "FUN_08003fdc",
            "FUN_080009f0",
            "FUN_08004f10",
            "FUN_08005044",
            "FUN_08004194",
            "FUN_08001240",
            "FUN_08005840",
            "FUN_08000150",
            "FUN_08003f3c",
            "FUN_08002214",
            "FUN_08001004",
            "FUN_08003ff4",
            "FUN_080041ae",
            "FUN_08001128",
            "FUN_08004514",
            "FUN_08004a84",
            "FUN_080041c4",
            "FUN_080057d0",
            "FUN_0800567c",
            "FUN_08000ffc",
            "FUN_080016f4",
            "FUN_080025a4",
            "FUN_08002220",
            "FUN_08003034",
            "FUN_08004e7c",
            "FUN_08001530",
            "FUN_08003314",
            "FUN_08005854",
            "FUN_08001014",
            "FUN_080071c0",
            "FUN_08005614",
            "FUN_080070a4",
            "FUN_0800407c",
            "FUN_080022d0",
            "FUN_080010c4",
            "FUN_080040b8",
            "FUN_0800245c",
            "FUN_08004490",
            "FUN_080015e8",
            "FUN_08004e14"
        ],
        [
            "FUN_08001264",
            "FUN_0800581c",
            "FUN_08002220",
            "FUN_08005854"
        ],
        [
            "FUN_08001264",
            "FUN_08005854"
        ]
    ],
    "locked_functions": []
}