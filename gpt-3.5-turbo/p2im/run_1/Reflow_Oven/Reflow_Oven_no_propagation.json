{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_data_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeData_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_data_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *str)\n\n{\n  char current_char_value;\n  char *next_char;\n  char *current_char;\n  \n  current_char = str;\n  do {\n    next_char = current_char + 1;\n    current_char_value = *current_char;\n    current_char = next_char;\n  } while (current_char_value != '\\0');\n  return next_char + (-1 - (int)str);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "str",
                "pcVar3": "current_char",
                "pcVar2": "next_char",
                "cVar1": "current_char_value"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_special_value_08000190",
            "code": "\nulonglong calculate_special_value_08000190(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int temp_1;\n  byte temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  int temp_8;\n  uint temp_9;\n  uint temp_10;\n  uint temp_11;\n  uint temp_12;\n  bool temp_13;\n  bool temp_14;\n  bool temp_15;\n  \n  temp_6 = input_4 ^ 0x80000000;\n  temp_9 = input_2 << 1;\n  input_4 = input_4 << 1;\n  temp_13 = ((input_2 ^ temp_6) & 0x7fffffff) == 0;\n  temp_14 = temp_13 && input_1 == input_3;\n  if (!temp_13 || input_1 != input_3) {\n    temp_14 = (temp_9 | input_1) == 0;\n  }\n  if (!temp_14) {\n    temp_14 = (input_4 | input_3) == 0;\n  }\n  temp_8 = (int)temp_9 >> 0x15;\n  if (!temp_14) {\n    temp_14 = temp_8 == -1;\n  }\n  temp_1 = (int)input_4 >> 0x15;\n  if (!temp_14) {\n    temp_14 = temp_1 == -1;\n  }\n  if (temp_14) {\n    if (temp_8 == -1 || temp_1 == -1) {\n      temp_9 = temp_6;\n      temp_11 = input_3;\n      if (temp_8 == -1) {\n        temp_9 = input_2;\n        temp_11 = input_1;\n      }\n      if (temp_8 != -1 || temp_1 != -1) {\n        input_3 = temp_11;\n        temp_6 = temp_9;\n      }\n      temp_14 = (temp_11 | temp_9 << 0xc) == 0;\n      if (temp_14) {\n        temp_14 = (input_3 | temp_6 << 0xc) == 0;\n      }\n      if (temp_14) {\n        temp_14 = temp_9 == temp_6;\n      }\n      if (!temp_14) {\n        temp_9 = temp_9 | 0x80000;\n      }\n      return CONCAT44(temp_9,temp_11);\n    }\n    if (((input_2 ^ temp_6) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((temp_9 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = temp_6;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != temp_6) {\n      return 0;\n    }\n    if (temp_9 >> 0x15 == 0) {\n      temp_14 = (input_1 & 0x80000000) != 0;\n      temp_6 = input_2 * 2 + (uint)temp_14;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)temp_14)) {\n        temp_6 = temp_6 | 0x80000000;\n      }\n      return CONCAT44(temp_6,input_1 << 1);\n    }\n    if (temp_9 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  temp_9 = temp_9 >> 0x15;\n  input_4 = input_4 >> 0x15;\n  temp_11 = input_4 - temp_9;\n  temp_14 = temp_11 != 0;\n  if (input_4 < temp_9) {\n    temp_11 = -temp_11;\n  }\n  temp_10 = input_1;\n  temp_7 = input_2;\n  if (temp_14 && temp_9 <= input_4) {\n    temp_9 = temp_9 + temp_11;\n    temp_10 = input_3;\n    temp_7 = temp_6;\n    input_3 = input_1;\n    temp_6 = input_2;\n  }\n  if (0x36 < temp_11) {\n    return CONCAT44(temp_7,temp_10);\n  }\n  temp_4 = temp_7 & 0xfffff | 0x100000;\n  if ((temp_7 & 0x80000000) != 0) {\n    temp_14 = temp_10 != 0;\n    temp_10 = -temp_10;\n    temp_4 = -temp_4 - (uint)temp_14;\n  }\n  temp_7 = temp_6 & 0xfffff | 0x100000;\n  if ((temp_6 & 0x80000000) != 0) {\n    temp_14 = input_3 != 0;\n    input_3 = -input_3;\n    temp_7 = -temp_7 - (uint)temp_14;\n  }\n  if (temp_9 == temp_11) {\n    temp_7 = temp_7 ^ 0x100000;\n    if (temp_9 == 0) {\n      temp_4 = temp_4 ^ 0x100000;\n      temp_9 = 1;\n    }\n    else {\n      temp_11 = temp_11 - 1;\n    }\n  }\n  temp_6 = -temp_11 + 0x20;\n  if ((int)temp_11 < 0x21) {\n    temp_12 = input_3 << (temp_6 & 0xff);\n    input_3 = input_3 >> (temp_11 & 0xff);\n    temp_3 = temp_10 + input_3;\n    temp_5 = temp_7 << (temp_6 & 0xff);\n    temp_6 = temp_3 + temp_5;\n    temp_4 = temp_4 + CARRY4(temp_10,input_3) + ((int)temp_7 >> (temp_11 & 0xff)) +\n            (uint)CARRY4(temp_3,temp_5);\n  }\n  else {\n    temp_12 = temp_7 << (-temp_11 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp_12 = temp_12 | 2;\n    }\n    temp_7 = (int)temp_7 >> (temp_11 - 0x20 & 0xff);\n    temp_6 = temp_10 + temp_7;\n    temp_4 = temp_4 + ((int)temp_7 >> 0x1f) + (uint)CARRY4(temp_10,temp_7);\n  }\n  input_2 = temp_4 & 0x80000000;\n  temp_11 = temp_4;\n  if ((int)temp_4 < 0) {\n    temp_14 = temp_12 == 0;\n    temp_12 = -temp_12;\n    temp_11 = -temp_6;\n    temp_6 = -(uint)!temp_14 - temp_6;\n    temp_11 = -(uint)(temp_14 <= temp_11) - temp_4;\n  }\n  if (0xfffff < temp_11) {\n    temp_10 = temp_9 - 1;\n    if (0x1fffff < temp_11) {\n      temp_10 = temp_11 & 1;\n      temp_11 = temp_11 >> 1;\n      temp_2 = (byte)temp_6;\n      temp_6 = (uint)(temp_10 != 0) << 0x1f | temp_6 >> 1;\n      temp_12 = (uint)(temp_2 & 1) << 0x1f | temp_12 >> 1;\n      temp_10 = temp_9;\n      if (0xffbfffff < temp_9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    temp_14 = 0x7fffffff < temp_12;\n    if (temp_12 == 0x80000000) {\n      temp_14 = (temp_6 & 1) != 0;\n    }\n    return CONCAT44(temp_11 + temp_10 * 0x100000 + (uint)CARRY4(temp_6,(uint)temp_14) | input_2,\n                    temp_6 + temp_14);\n  }\n  temp_13 = (temp_12 & 0x80000000) != 0;\n  temp_12 = temp_12 << 1;\n  temp_10 = temp_6 * 2;\n  temp_14 = CARRY4(temp_6,temp_6);\n  temp_6 = temp_6 * 2 + (uint)temp_13;\n  temp_11 = temp_11 * 2 + (uint)(temp_14 || CARRY4(temp_10,(uint)temp_13));\n  temp_10 = temp_9 - 2;\n  if ((temp_11 & 0x100000) != 0) goto LAB_080002a0;\n  temp_7 = temp_6;\n  temp_9 = temp_11;\n  if (temp_11 == 0) {\n    temp_7 = 0;\n    temp_9 = temp_6;\n  }\n  temp_8 = LZCOUNT(temp_9);\n  if (temp_11 == 0) {\n    temp_8 = temp_8 + 0x20;\n  }\n  temp_11 = temp_8 - 0xb;\n  temp_15 = SBORROW4(temp_11,0x20);\n  temp_6 = temp_8 - 0x2b;\n  temp_14 = (int)temp_6 < 0;\n  temp_13 = temp_6 == 0;\n  if ((int)temp_11 < 0x20) {\n    temp_15 = SCARRY4(temp_6,0xc);\n    temp_8 = temp_8 + -0x1f;\n    temp_14 = temp_8 < 0;\n    temp_13 = temp_8 == 0;\n    temp_6 = temp_11;\n    if (!temp_13 && temp_14 == temp_15) {\n      temp_7 = temp_9 << (temp_11 & 0xff);\n      temp_9 = temp_9 >> (0xcU - temp_8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (temp_13 || temp_14 != temp_15) {\n    temp_12 = 0x20 - temp_6;\n  }\n  temp_9 = temp_9 << (temp_6 & 0xff);\n  if (temp_13 || temp_14 != temp_15) {\n    temp_9 = temp_9 | temp_7 >> (temp_12 & 0xff);\n  }\n  if (temp_13 || temp_14 != temp_15) {\n    temp_7 = temp_7 << (temp_6 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_11 <= (int)temp_10) {\n    return CONCAT44(temp_9 + (temp_10 - temp_11) * 0x100000 | input_2,temp_7);\n  }\n  temp_6 = ~(temp_10 - temp_11);\n  if ((int)temp_6 < 0x1f) {\n    temp_8 = temp_6 - 0x13;\n    if (temp_8 != 0 && temp_8 < 0 == SCARRY4(temp_6 - 0x1f,0xc)) {\n      return CONCAT44(temp_4,temp_7 >> (0x20 - (0xcU - temp_8) & 0xff) | temp_9 << (0xcU - temp_8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_6 = temp_6 + 1;\n    return CONCAT44(input_2 | temp_9 >> (temp_6 & 0xff),\n                    temp_7 >> (temp_6 & 0xff) | temp_9 << (0x20 - temp_6 & 0xff));\n  }\n  return CONCAT44(temp_4,temp_9 >> (temp_6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_special_value_08000190",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_1",
                "bVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6",
                "uVar7": "temp_7",
                "iVar8": "temp_8",
                "uVar9": "temp_9",
                "uVar10": "temp_10",
                "uVar11": "temp_11",
                "uVar12": "temp_12",
                "bVar13": "temp_13",
                "bVar14": "temp_14",
                "bVar15": "temp_15"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_product_08000194",
            "code": "\nulonglong calculate_product_08000194(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shift_count_1;\n  byte carry_1;\n  uint result_1;\n  uint result_2;\n  uint result_3;\n  int shift_count_2;\n  uint shifted_input_2;\n  uint shifted_input_1;\n  uint shifted_result_2;\n  uint shifted_result_1;\n  uint carry_2;\n  uint result_4;\n  bool carry_flag_1;\n  bool carry_flag_2;\n  bool borrow_flag;\n  \n  shifted_input_2 = input_2 << 1;\n  shifted_result_2 = input_4 << 1;\n  carry_flag_1 = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  carry_flag_2 = carry_flag_1 && input_1 == input_3;\n  if (!carry_flag_1 || input_1 != input_3) {\n    carry_flag_2 = (shifted_input_2 | input_1) == 0;\n  }\n  if (!carry_flag_2) {\n    carry_flag_2 = (shifted_result_2 | input_3) == 0;\n  }\n  shift_count_2 = (int)shifted_input_2 >> 0x15;\n  if (!carry_flag_2) {\n    carry_flag_2 = shift_count_2 == -1;\n  }\n  shift_count_1 = (int)shifted_result_2 >> 0x15;\n  if (!carry_flag_2) {\n    carry_flag_2 = shift_count_1 == -1;\n  }\n  if (carry_flag_2) {\n    if (shift_count_2 == -1 || shift_count_1 == -1) {\n      shifted_result_2 = input_4;\n      shifted_input_2 = input_3;\n      if (shift_count_2 == -1) {\n        shifted_result_2 = input_2;\n        shifted_input_2 = input_1;\n      }\n      if (shift_count_2 != -1 || shift_count_1 != -1) {\n        input_3 = shifted_input_2;\n        input_4 = shifted_result_2;\n      }\n      carry_flag_2 = (shifted_input_2 | shifted_result_2 << 0xc) == 0;\n      if (carry_flag_2) {\n        carry_flag_2 = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (carry_flag_2) {\n        carry_flag_2 = shifted_result_2 == input_4;\n      }\n      if (!carry_flag_2) {\n        shifted_result_2 = shifted_result_2 | 0x80000;\n      }\n      return CONCAT44(shifted_result_2,shifted_input_2);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((shifted_input_2 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (shifted_input_2 >> 0x15 == 0) {\n      carry_flag_2 = (input_1 & 0x80000000) != 0;\n      shifted_result_2 = input_2 * 2 + (uint)carry_flag_2;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)carry_flag_2)) {\n        shifted_result_2 = shifted_result_2 | 0x80000000;\n      }\n      return CONCAT44(shifted_result_2,input_1 << 1);\n    }\n    if (shifted_input_2 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input_2 = shifted_input_2 >> 0x15;\n  shifted_result_2 = shifted_result_2 >> 0x15;\n  shifted_result_1 = shifted_result_2 - shifted_input_2;\n  carry_flag_2 = shifted_result_1 != 0;\n  if (shifted_result_2 < shifted_input_2) {\n    shifted_result_1 = -shifted_result_1;\n  }\n  shifted_input_1 = input_1;\n  result_3 = input_2;\n  if (carry_flag_2 && shifted_input_2 <= shifted_result_2) {\n    shifted_input_2 = shifted_input_2 + shifted_result_1;\n    shifted_input_1 = input_3;\n    result_3 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < shifted_result_1) {\n    return CONCAT44(result_3,shifted_input_1);\n  }\n  shifted_result_2 = result_3 & 0xfffff | 0x100000;\n  if ((result_3 & 0x80000000) != 0) {\n    carry_flag_2 = shifted_input_1 != 0;\n    shifted_input_1 = -shifted_input_1;\n    shifted_result_2 = -shifted_result_2 - (uint)carry_flag_2;\n  }\n  result_3 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    carry_flag_2 = input_3 != 0;\n    input_3 = -input_3;\n    result_3 = -result_3 - (uint)carry_flag_2;\n  }\n  if (shifted_input_2 == shifted_result_1) {\n    result_3 = result_3 ^ 0x100000;\n    if (shifted_input_2 == 0) {\n      shifted_result_2 = shifted_result_2 ^ 0x100000;\n      shifted_input_2 = 1;\n    }\n    else {\n      shifted_result_1 = shifted_result_1 - 1;\n    }\n  }\n  result_4 = -shifted_result_1 + 0x20;\n  if ((int)shifted_result_1 < 0x21) {\n    carry_2 = input_3 << (result_4 & 0xff);\n    input_3 = input_3 >> (shifted_result_1 & 0xff);\n    result_1 = shifted_input_1 + input_3;\n    result_2 = result_3 << (result_4 & 0xff);\n    result_4 = result_1 + result_2;\n    shifted_result_2 = shifted_result_2 + CARRY4(shifted_input_1,input_3) + ((int)result_3 >> (shifted_result_1 & 0xff)) +\n            (uint)CARRY4(result_1,result_2);\n  }\n  else {\n    carry_2 = result_3 << (-shifted_result_1 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      carry_2 = carry_2 | 2;\n    }\n    result_3 = (int)result_3 >> (shifted_result_1 - 0x20 & 0xff);\n    result_4 = shifted_input_1 + result_3;\n    shifted_result_2 = shifted_result_2 + ((int)result_3 >> 0x1f) + (uint)CARRY4(shifted_input_1,result_3);\n  }\n  input_2 = shifted_result_2 & 0x80000000;\n  shifted_result_1 = shifted_result_2;\n  if ((int)shifted_result_2 < 0) {\n    carry_flag_2 = carry_2 == 0;\n    carry_2 = -carry_2;\n    shifted_result_1 = -result_4;\n    result_4 = -(uint)!carry_flag_2 - result_4;\n    shifted_result_1 = -(uint)(carry_flag_2 <= shifted_result_1) - shifted_result_2;\n  }\n  if (0xfffff < shifted_result_1) {\n    shifted_input_1 = shifted_input_2 - 1;\n    if (0x1fffff < shifted_result_1) {\n      shifted_result_2 = shifted_result_1 & 1;\n      shifted_result_1 = shifted_result_1 >> 1;\n      carry_1 = (byte)result_4;\n      result_4 = (uint)(shifted_result_2 != 0) << 0x1f | result_4 >> 1;\n      carry_2 = (uint)(carry_1 & 1) << 0x1f | carry_2 >> 1;\n      shifted_input_1 = shifted_input_2;\n      if (0xffbfffff < shifted_input_2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    carry_flag_2 = 0x7fffffff < carry_2;\n    if (carry_2 == 0x80000000) {\n      carry_flag_2 = (result_4 & 1) != 0;\n    }\n    return CONCAT44(shifted_result_1 + shifted_input_1 * 0x100000 + (uint)CARRY4(result_4,(uint)carry_flag_2) | input_2,\n                    result_4 + carry_flag_2);\n  }\n  carry_flag_1 = (carry_2 & 0x80000000) != 0;\n  carry_2 = carry_2 << 1;\n  shifted_input_1 = result_4 * 2;\n  carry_flag_2 = CARRY4(result_4,result_4);\n  result_4 = result_4 * 2 + (uint)carry_flag_1;\n  shifted_result_1 = shifted_result_1 * 2 + (uint)(carry_flag_2 || CARRY4(shifted_input_1,(uint)carry_flag_1));\n  shifted_input_1 = shifted_input_2 - 2;\n  if ((shifted_result_1 & 0x100000) != 0) goto LAB_080002a0;\n  result_3 = result_4;\n  shifted_input_2 = shifted_result_1;\n  if (shifted_result_1 == 0) {\n    result_3 = 0;\n    shifted_input_2 = result_4;\n  }\n  shift_count_2 = LZCOUNT(shifted_input_2);\n  if (shifted_result_1 == 0) {\n    shift_count_2 = shift_count_2 + 0x20;\n  }\n  result_4 = shift_count_2 - 0xb;\n  borrow_flag = SBORROW4(result_4,0x20);\n  shifted_result_1 = shift_count_2 - 0x2b;\n  carry_flag_2 = (int)shifted_result_1 < 0;\n  carry_flag_1 = shifted_result_1 == 0;\n  if ((int)result_4 < 0x20) {\n    borrow_flag = SCARRY4(shifted_result_1,0xc);\n    shift_count_2 = shift_count_2 + -0x1f;\n    carry_flag_2 = shift_count_2 < 0;\n    carry_flag_1 = shift_count_2 == 0;\n    shifted_result_1 = result_4;\n    if (!carry_flag_1 && carry_flag_2 == borrow_flag) {\n      result_3 = shifted_input_2 << (result_4 & 0xff);\n      shifted_input_2 = shifted_input_2 >> (0xcU - shift_count_2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (carry_flag_1 || carry_flag_2 != borrow_flag) {\n    carry_2 = 0x20 - shifted_result_1;\n  }\n  shifted_input_2 = shifted_input_2 << (shifted_result_1 & 0xff);\n  if (carry_flag_1 || carry_flag_2 != borrow_flag) {\n    shifted_input_2 = shifted_input_2 | result_3 >> (carry_2 & 0xff);\n  }\n  if (carry_flag_1 || carry_flag_2 != borrow_flag) {\n    result_3 = result_3 << (shifted_result_1 & 0xff);\n  }\nLAB_08000318:\n  if ((int)result_4 <= (int)shifted_input_1) {\n    return CONCAT44(shifted_input_2 + (shifted_input_1 - result_4) * 0x100000 | input_2,result_3);\n  }\n  shifted_result_1 = ~(shifted_input_1 - result_4);\n  if ((int)shifted_result_1 < 0x1f) {\n    shift_count_2 = shifted_result_1 - 0x13;\n    if (shift_count_2 != 0 && shift_count_2 < 0 == SCARRY4(shifted_result_1 - 0x1f,0xc)) {\n      return CONCAT44(shifted_result_2,result_3 >> (0x20 - (0xcU - shift_count_2) & 0xff) | shifted_input_2 << (0xcU - shift_count_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted_result_1 = shifted_result_1 + 1;\n    return CONCAT44(input_2 | shifted_input_2 >> (shifted_result_1 & 0xff),\n                    result_3 >> (shifted_result_1 & 0xff) | shifted_input_2 << (0x20 - shifted_result_1 & 0xff));\n  }\n  return CONCAT44(shifted_result_2,shifted_input_2 >> (shifted_result_1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_product_08000194",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shift_count_1",
                "bVar2": "carry_1",
                "uVar3": "result_1",
                "uVar4": "result_2",
                "uVar5": "result_3",
                "iVar6": "shift_count_2",
                "uVar7": "shifted_input_2",
                "uVar8": "shifted_input_1",
                "uVar9": "shifted_result_2",
                "uVar10": "shifted_result_1",
                "uVar11": "carry_2",
                "uVar12": "result_4",
                "bVar13": "carry_flag_1",
                "bVar14": "carry_flag_2",
                "bVar15": "borrow_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_concat_0800040c",
            "code": "\nulonglong shiftAndConcat_0800040c(uint input)\n\n{\n  uint result;\n  uint shift;\n  int count;\n  uint offset;\n  uint mask;\n  bool isNegative;\n  bool isZero;\n  bool carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  count = LZCOUNT(input);\n  offset = count + 0x15;\n  carry = SBORROW4(offset,0x20);\n  shift = count - 0xb;\n  isNegative = (int)shift < 0;\n  isZero = shift == 0;\n  if (offset < 0x20) {\n    carry = SCARRY4(shift,0xc);\n    isNegative = false;\n    isZero = count + 1 == 0;\n    shift = offset;\n    if (!isZero && carry == false) {\n      result = input << offset;\n      input = input >> (0xcU - (count + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != carry) {\n    mask = 0x20 - shift;\n  }\n  input = input << (shift & 0xff);\n  if (isZero || isNegative != carry) {\n    input = input | 0U >> (mask & 0xff);\n  }\n  if (isZero || isNegative != carry) {\n    result = 0 << (shift & 0xff);\n  }\nLAB_08000318:\n  if (offset < 0x433) {\n    return CONCAT44(input + (0x432 - offset) * 0x100000,result);\n  }\n  shift = ~(0x432 - offset);\n  if (0x1e < (int)shift) {\n    return (ulonglong)(input >> (shift - 0x1f & 0xff));\n  }\n  count = shift - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shift - 0x1f,0xc)) {\n    shift = shift + 1;\n    return CONCAT44(input >> (shift & 0xff),\n                    result >> (shift & 0xff) | input << (0x20 - shift & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - count) & 0xff) | input << (0xcU - count & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_concat_0800040c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shift",
                "iVar3": "count",
                "uVar4": "offset",
                "in_r12": "mask",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "carry"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "bitwise_shift_0800042c",
            "code": "\nulonglong bitwiseShift_0800042c(uint input)\n\n{\n  uint shiftCount;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint adjustedShiftCount;\n  uint signBit;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carryFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  shiftCount = 0;\n  leadingZeros = LZCOUNT(absInput);\n  adjustedShiftCount = leadingZeros + 0x15;\n  carryFlag = SBORROW4(adjustedShiftCount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (adjustedShiftCount < 0x20) {\n    carryFlag = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = adjustedShiftCount;\n    if (!isZero && carryFlag == false) {\n      shiftCount = absInput << adjustedShiftCount;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto shiftResult;\n    }\n  }\n  if (isZero || isNegative != carryFlag) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != carryFlag) {\n    absInput = absInput | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carryFlag) {\n    shiftCount = 0 << (shiftAmount & 0xff);\n  }\nshiftResult:\n  if (adjustedShiftCount < 0x433) {\n    return CONCAT44(absInput + (0x432 - adjustedShiftCount) * 0x100000 | signBit,shiftCount);\n  }\n  shiftAmount = ~(0x432 - adjustedShiftCount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    shiftCount >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,shiftCount >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "bitwise_shift_0800042c",
                "param_1": "input",
                "uVar1": "shiftCount",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "adjustedShiftCount",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "carryFlag",
                "LAB_08000318": "shiftResult"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_multiplication_080004f8",
            "code": "\nulonglong calculateMultiplication_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong temp8;\n  \n  temp8 = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    temp8 = FUN_080006d4();\n  }\n  temp1 = (uint)(temp8 >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)temp8 | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)temp8 | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (temp8 & 0xffffffff) * (ulonglong)input3;\n    temp8 = (temp8 & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)temp8;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (temp8 >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_multiplication_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "temp8"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculate_shifted_result_080006d4",
            "code": "\nulonglong calculate_shifted_result_080006d4(uint input_param1,uint input_param2,uint input_param3,uint input_param4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool is_zero;\n  \n  temp3 = temp5 & input_param4 >> 0x14;\n  if (temp2 != temp5 && temp3 != temp5) {\n    is_zero = (input_param1 | input_param2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_param3 | input_param4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_param2 ^ input_param4) & 0x80000000) << 0x20;\n    }\n    if (temp2 == 0) {\n      temp4 = input_param2 & 0x80000000;\n      do {\n        temp1 = input_param1 & 0x80000000;\n        input_param1 = input_param1 << 1;\n        input_param2 = input_param2 * 2 + (uint)(temp1 != 0);\n      } while ((input_param2 & 0x100000) == 0);\n      input_param2 = input_param2 | temp4;\n      if (temp3 != 0) {\n        return CONCAT44(input_param2,input_param1);\n      }\n    }\n    do {\n      temp3 = input_param3 & 0x80000000;\n      input_param3 = input_param3 << 1;\n      input_param4 = input_param4 * 2 + (uint)(temp3 != 0);\n    } while ((input_param4 & 0x100000) == 0);\n    return CONCAT44(input_param2,input_param1);\n  }\n  is_zero = (input_param1 | input_param2 << 1) == 0;\n  if (is_zero) {\n    input_param2 = input_param4;\n    input_param1 = input_param3;\n  }\n  if (!is_zero) {\n    is_zero = (input_param3 | input_param4 << 1) == 0;\n  }\n  temp4 = input_param2;\n  if (((!is_zero) && ((temp2 != temp5 || ((input_param1 | input_param2 << 0xc) == 0)))) &&\n     ((temp3 != temp5 || (input_param1 = input_param3, temp4 = input_param4, (input_param3 | input_param4 << 0xc) == 0)))) {\n    return (ulonglong)((input_param2 ^ input_param4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp4,input_param1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculate_shifted_result_080006d4",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "temp5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 exponentBits,uint combinedBits,uint mantissaBits1,uint mantissaBits2)\n\n{\n  uint exponent1;\n  uint exponent2;\n  uint mantissa1;\n  uint mantissa2;\n  uint temp1;\n  uint temp2;\n  uint flags;\n  int difference;\n  uint count;\n  uint zero1;\n  uint zero2;\n  uint result1;\n  uint result2;\n  uint maxValue;\n  bool isZero1;\n  bool isZero2;\n  bool carry1;\n  undefined8 exponent17;\n  \n  exponent17 = CONCAT44(combinedBits,exponentBits);\n  maxValue = 0x7ff;\n  flags = combinedBits >> 0x14 & 0x7ff;\n  isZero1 = flags == 0;\n  if (!isZero1) {\n    zero1 = mantissaBits2 >> 0x14 & 0x7ff;\n    isZero1 = zero1 == 0;\n  }\n  if (!isZero1) {\n    isZero1 = flags == 0x7ff;\n  }\n  if (!isZero1) {\n    isZero1 = zero1 == 0x7ff;\n  }\n  if (isZero1) {\n    exponent17 = FUN_080008ba();\n  }\n  count = (uint)((ulonglong)exponent17 >> 0x20);\n  result1 = (uint)exponent17;\n  difference = flags - zero1;\n  if ((mantissaBits1 | mantissaBits2 << 0xc) == 0) {\n    flags = (count ^ mantissaBits2) & 0x80000000 | count & 0xfffff;\n    carry1 = SCARRY4(difference,maxValue >> 1);\n    count = difference + (maxValue >> 1);\n    isZero1 = (int)count < 0;\n    isZero2 = count == 0;\n    if (!isZero2 && isZero1 == carry1) {\n      carry1 = SBORROW4(maxValue,count);\n      isZero1 = (int)(maxValue - count) < 0;\n      isZero2 = maxValue == count;\n    }\n    if (!isZero2 && isZero1 == carry1) {\n      flags = flags | count * 0x100000;\n    }\n    if (!isZero2 && isZero1 == carry1) {\n      return CONCAT44(flags,result1);\n    }\n    flags = flags | 0x100000;\n    maxValue = 0;\n    isZero2 = SBORROW4(count,1);\n    count = count - 1;\n    isZero1 = count == 0;\n    mantissa1 = count;\n  }\n  else {\n    mantissa1 = (mantissaBits2 << 0xc) >> 4 | 0x10000000 | mantissaBits1 >> 0x18;\n    maxValue = mantissaBits1 << 8;\n    zero2 = (count << 0xc) >> 4 | 0x10000000 | result1 >> 0x18;\n    result1 = result1 * 0x100;\n    flags = (count ^ mantissaBits2) & 0x80000000;\n    isZero1 = mantissa1 <= zero2;\n    if (zero2 == mantissa1) {\n      isZero1 = maxValue <= result1;\n    }\n    difference = difference + (uint)isZero1;\n    count = difference + 0x3fd;\n    if (isZero1 == false) {\n      mantissa1 = mantissa1 >> 1;\n      maxValue = (uint)((mantissaBits1 >> 0x18 & 1) != 0) << 0x1f | maxValue >> 1;\n    }\n    result2 = result1 - maxValue;\n    zero2 = (zero2 - mantissa1) - (uint)(result1 < maxValue);\n    mantissa2 = mantissa1 >> 1;\n    exponent1 = (uint)((mantissa1 & 1) != 0) << 0x1f | maxValue >> 1;\n    result1 = 0x100000;\n    mantissa1 = 0x80000;\n    while( true ) {\n      isZero1 = exponent1 <= result2;\n      if (mantissa2 < zero2 || zero2 - mantissa2 < (uint)isZero1) {\n        result2 = result2 - exponent1;\n        result1 = result1 | mantissa1;\n        zero2 = (zero2 - mantissa2) - (uint)!isZero1;\n      }\n      temp1 = mantissa2 >> 1;\n      exponent1 = (uint)((mantissa2 & 1) != 0) << 0x1f | exponent1 >> 1;\n      isZero2 = exponent1 <= result2;\n      isZero1 = zero2 - temp1 < (uint)isZero2;\n      maxValue = zero2;\n      if (temp1 < zero2 || isZero1) {\n        result2 = result2 - exponent1;\n        maxValue = (zero2 - temp1) - (uint)!isZero2;\n      }\n      if (temp1 < zero2 || isZero1) {\n        result1 = result1 | mantissa1 >> 1;\n      }\n      zero2 = mantissa2 >> 2;\n      exponent2 = (uint)((temp1 & 1) != 0) << 0x1f | exponent1 >> 1;\n      isZero2 = exponent2 <= result2;\n      isZero1 = maxValue - zero2 < (uint)isZero2;\n      temp1 = maxValue;\n      if (zero2 < maxValue || isZero1) {\n        result2 = result2 - exponent2;\n        temp1 = (maxValue - zero2) - (uint)!isZero2;\n      }\n      if (zero2 < maxValue || isZero1) {\n        result1 = result1 | mantissa1 >> 2;\n      }\n      temp2 = mantissa2 >> 3;\n      exponent1 = (uint)((zero2 & 1) != 0) << 0x1f | exponent2 >> 1;\n      isZero2 = exponent1 <= result2;\n      isZero1 = temp1 - temp2 < (uint)isZero2;\n      zero2 = temp1;\n      if (temp2 < temp1 || isZero1) {\n        result2 = result2 - exponent1;\n        zero2 = (temp1 - temp2) - (uint)!isZero2;\n      }\n      if (temp2 < temp1 || isZero1) {\n        result1 = result1 | mantissa1 >> 3;\n      }\n      maxValue = zero2 | result2;\n      if (maxValue == 0) break;\n      zero2 = zero2 << 4 | result2 >> 0x1c;\n      result2 = result2 << 4;\n      mantissa2 = mantissa2 & 0xfffffff8 | exponent1 >> 0x1d;\n      exponent1 = (exponent2 >> 1) << 3;\n      mantissa1 = mantissa1 >> 4;\n      if (mantissa1 == 0) {\n        temp2 = mantissa2;\n        if ((flags & 0x100000) != 0) goto LAB_0800086a;\n        flags = flags | result1;\n        result1 = 0;\n        mantissa1 = 0x80000000;\n      }\n    }\n    if ((flags & 0x100000) == 0) {\n      flags = flags | result1;\n      result1 = 0;\n    }\nLAB_0800086a:\n    carry1 = 0xfc < count;\n    isZero2 = SBORROW4(count,0xfd);\n    mantissa2 = difference + 0x300;\n    isZero1 = mantissa2 == 0;\n    mantissa1 = mantissa2;\n    if (carry1 && !isZero1) {\n      carry1 = 0x6ff < mantissa2;\n      isZero2 = SBORROW4(mantissa2,0x700);\n      mantissa1 = difference - 0x400;\n      isZero1 = mantissa2 == 0x700;\n    }\n    if (!carry1 || isZero1) {\n      isZero1 = temp2 <= zero2;\n      if (zero2 == temp2) {\n        isZero1 = exponent1 <= result2;\n      }\n      if (zero2 == temp2 && result2 == exponent1) {\n        isZero1 = (result1 & 1) != 0;\n      }\n      return CONCAT44(flags + count * 0x100000 + (uint)CARRY4(result1,(uint)isZero1),result1 + isZero1);\n    }\n  }\n  if (!isZero1 && (int)mantissa1 < 0 == isZero2) {\n    return (ulonglong)(flags & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  carry1 = SCARRY4(count,0x36);\n  isZero1 = (int)(count + 0x36) < 0;\n  isZero2 = count == 0xffffffca;\n  if (isZero2 || isZero1 != carry1) {\n    result1 = 0;\n  }\n  if (isZero2 || isZero1 != carry1) {\n    flags = flags & 0x80000000;\n  }\n  if (isZero2 || isZero1 != carry1) {\n    return CONCAT44(flags,result1);\n  }\n  mantissa1 = -count;\n  zero2 = mantissa1 - 0x20;\n  if (0x1f < (int)mantissa1) {\n    mantissa1 = result1 >> (zero2 & 0xff) | flags << (0x20 - zero2 & 0xff);\n    count = (flags >> (zero2 & 0xff) & ~((flags & 0x80000000) >> (zero2 & 0xff))) -\n            ((int)mantissa1 >> 0x1f);\n    if ((maxValue | result1 << (0x20 - zero2 & 0xff) | mantissa1 << 1) == 0) {\n      count = count & ~(mantissa1 >> 0x1f);\n    }\n    return CONCAT44(flags,count) & 0x80000000ffffffff;\n  }\n  difference = mantissa1 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(zero2,0xc)) {\n    count = 0xc - difference;\n    mantissa1 = result1 << (count & 0xff);\n    result1 = result1 >> (0x20 - count & 0xff) | flags << (count & 0xff);\n    count = result1 + -((int)mantissa1 >> 0x1f);\n    if ((maxValue | mantissa1 << 1) == 0) {\n      count = count & ~(mantissa1 >> 0x1f);\n    }\n    return CONCAT44((flags & 0x80000000) + (uint)CARRY4(result1,-((int)mantissa1 >> 0x1f)),count);\n  }\n  zero2 = result1 << (count + 0x20 & 0xff);\n  result1 = result1 >> (mantissa1 & 0xff) | flags << (count + 0x20 & 0xff);\n  count = result1 + -((int)zero2 >> 0x1f);\n  if ((maxValue | zero2 << 1) == 0) {\n    count = count & ~(zero2 >> 0x1f);\n  }\n  return CONCAT44((flags & 0x80000000) +\n                  ((flags & 0x7fffffff) >> (mantissa1 & 0xff)) +\n                  (uint)CARRY4(result1,-((int)zero2 >> 0x1f)),count);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "exponentBits",
                "param_2": "combinedBits",
                "param_3": "mantissaBits1",
                "param_4": "mantissaBits2",
                "uVar1": "exponent1",
                "uVar2": "exponent2",
                "uVar3": "mantissa1",
                "uVar4": "mantissa2",
                "uVar5": "temp1",
                "uVar6": "temp2",
                "uVar7": "flags",
                "iVar8": "difference",
                "uVar9": "count",
                "unaff_r5": "zero1",
                "uVar10": "zero2",
                "uVar11": "result1",
                "uVar12": "result2",
                "uVar13": "maxValue",
                "bVar14": "isZero1",
                "bVar15": "isZero2",
                "bVar16": "carry1"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "extract_float_bits_080008ba",
            "code": "\nulonglong extractFloatBits_080008ba(uint floatA,uint floatB,uint floatC,uint floatD)\n\n{\n  uint bitA;\n  uint bitB;\n  uint bitC;\n  uint bitD;\n  uint bitE;\n  bool isZero;\n  \n  bitC = bitE & floatD >> 0x14;\n  bitD = floatB;\n  if (bitB != bitE || bitC != bitE) {\n    if (bitB == bitE) {\n      if (((floatA | floatB << 0xc) == 0) && (floatA = floatC, bitD = floatD, bitC != bitE)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((floatB ^ floatD) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bitC == bitE) {\n      floatA = floatC;\n      bitD = floatD;\n      if ((floatC | floatD << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((floatB ^ floatD) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (floatA | floatB << 1) == 0;\n      if (!isZero) {\n        isZero = (floatC | floatD << 1) == 0;\n      }\n      if (!isZero) {\n        if (bitB == 0) {\n          bitD = floatB & 0x80000000;\n          do {\n            bitA = floatA & 0x80000000;\n            floatA = floatA << 1;\n            floatB = floatB * 2 + (uint)(bitA != 0);\n          } while ((floatB & 0x100000) == 0);\n          floatB = floatB | bitD;\n          if (bitC != 0) {\n            return CONCAT44(floatB,floatA);\n          }\n        }\n        do {\n          bitD = floatC & 0x80000000;\n          floatC = floatC << 1;\n          floatD = floatD * 2 + (uint)(bitD != 0);\n        } while ((floatD & 0x100000) == 0);\n        return CONCAT44(floatB,floatA);\n      }\n      if ((floatA | floatB << 1) != 0) goto LAB_0800072c;\n      if ((floatC | floatD << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(bitD,floatA) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "extract_float_bits_080008ba",
                "param_1": "floatA",
                "param_2": "floatB",
                "param_3": "floatC",
                "param_4": "floatD",
                "uVar1": "bitA",
                "unaff_r4": "bitB",
                "uVar2": "bitC",
                "uVar3": "bitD",
                "in_r12": "bitE",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_parameters_0800092c",
            "code": "\nuint check_parameters_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool isZero;\n  bool isNeg;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value1 | value2 << 1) == 0;\n  if (isZero) {\n    isZero = (value3 | value4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value2 == value4;\n  }\n  if (isZero) {\n    isZero = value1 == value3;\n  }\n  if (!isZero) {\n    result = value2 ^ value4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = value2 == value4;\n    }\n    isNeg = -1 < (int)result && value4 <= value2;\n    if (isZero) {\n      isNeg = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isNeg) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isNeg"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid execute_function_080009a8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080009b8(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_080009b8",
            "code": "\nundefined4 initialize_080009b8(undefined4 value)\n\n{\n  FUN_0800092c();\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_080009b8",
                "param_1": "value"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_non_zero_080009c8",
            "code": "\nbool checkIfNonZero_080009c8(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_non_zero_080009c8",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_input_empty_080009dc",
            "code": "\nbool is_input_empty_080009dc(void)\n\n{\n  char input_character;\n  \n  FUN_080009b8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_input_empty_080009dc",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_conditions_080009f0",
            "code": "\nbool check_conditions_080009f0(void)\n\n{\n  undefined is_zero_result;\n  undefined is_carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)is_carry_flag || (bool)is_zero_result;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_conditions_080009f0",
                "in_ZR": "is_zero_result",
                "in_CY": "is_carry_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_and_zr_08000a04",
            "code": "\nbool check_CY_and_ZR_08000a04(void)\n\n{\n  undefined check_ZR;\n  undefined check_CY;\n  \n  FUN_080009a8();\n  return !(bool)check_CY || (bool)check_ZR;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_CY": "check_CY",
                "in_ZR": "check_ZR"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_input_empty_08000a18",
            "code": "\nbool checkIfInputEmpty_08000a18(void)\n\n{\n  char inputCharacter;\n  \n  FUN_080009a8();\n  return inputCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_input_empty_08000a18",
                "in_CY": "inputCharacter"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_parameters_08000a2c",
            "code": "\nundefined4 check_parameters_08000a2c(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_parameters_08000a2c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "unsigned_division_08000a58",
            "code": "\nuint unsigned_division_08000a58(uint dividend,uint divisor)\n\n{\n  uint quotient_shifted;\n  int shifted_value;\n  uint temp_value;\n  \n  shifted_value = divisor * 2 + 0x200000;\n  if (divisor * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    quotient_shifted = shifted_value >> 0x15;\n    temp_value = -quotient_shifted - 0x3e1;\n    if (quotient_shifted < 0xfffffc20 && temp_value != 0) {\n      quotient_shifted = (divisor << 0xb | 0x80000000 | dividend >> 0x15) >> (temp_value & 0xff);\n      if ((divisor & 0x80000000) != 0) {\n        quotient_shifted = -quotient_shifted;\n      }\n      return quotient_shifted;\n    }\n  }\n  else if ((dividend | divisor << 0xc) != 0) {\n    return 0;\n  }\n  divisor = divisor & 0x80000000;\n  if (divisor == 0) {\n    divisor = 0x7fffffff;\n  }\n  return divisor;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "unsigned_division_08000a58",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "quotient_shifted",
                "iVar2": "shifted_value",
                "uVar3": "temp_value"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "validate_param_08000aa8",
            "code": "\nuint validate_param_08000aa8(uint input_value,uint flag)\n\n{\n  int temp_var1;\n  uint temp_var2;\n  \n  if ((flag & 0x80000000) != 0) {\n    return 0;\n  }\n  temp_var1 = flag * 2 + 0x200000;\n  if (flag * 2 < 0xffe00000) {\n    if (-1 < temp_var1) {\n      return 0;\n    }\n    temp_var2 = -(temp_var1 >> 0x15) - 0x3e1;\n    if (-1 < (int)temp_var2) {\n      return (flag << 0xb | 0x80000000 | input_value >> 0x15) >> (temp_var2 & 0xff);\n    }\n  }\n  else if ((input_value | flag << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "validate_param_08000aa8",
                "param_1": "input_value",
                "param_2": "flag",
                "iVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "trigger_software_interrupt_08000ae8",
            "code": "\nvoid triggerSoftwareInterrupt_08000ae8(void)\n\n{\n  interruptHandler(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "trigger_software_interrupt_08000ae8",
                "software_interrupt": "interruptHandler"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_binary_function_08000aec",
            "code": "\nundefined4 executeBinaryFunction_08000aec(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  returnValue = FUN_08000ae8(1,input1,0,0,input4);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_binary_function_08000aec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_conditional_operations_08000b08",
            "code": "\nvoid executeConditionalOperations_08000b08(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_conditional_operations_08000b08",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_controller_08000bcc",
            "code": "\nvoid initializeOvenController_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_controller_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "update_data_08000cd0",
            "code": "\nvoid updateData_08000cd0(void)\n\n{\n  uint currentValue;\n  undefined4 highValue;\n  int result;\n  undefined4 upperValue;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  undefined4 tempValue3;\n  undefined8 returnValue;\n  \n  currentValue = FUN_080058e0();\n  if (DAT_200001b4 < currentValue) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    returnValue = FUN_080015f8(&DAT_2000024c,0);\n    upperValue = (undefined4)((ulonglong)returnValue >> 0x20);\n    highValue = (undefined4)returnValue;\n    DAT_20000188 = highValue;\n    DAT_2000018c = upperValue;\n    result = FUN_080009c8(highValue,upperValue,0,0x40c38800);\n    if (((result != 0) || (result = FUN_080009c8(highValue,upperValue,0,0x40c38880), result != 0)) ||\n       (result = FUN_080009c8(highValue,upperValue,0,0x40c38900), result != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  currentValue = FUN_080058e0();\n  highValue = DAT_20000060;\n  if (DAT_200001b0 < currentValue) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      result = FUN_08005890(DAT_20000060);\n      FUN_08005848(highValue,result == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,tempValue1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,tempValue2,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,tempValue3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  upperValue = DAT_2000018c;\n  highValue = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    result = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        returnValue = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)returnValue >> 0x20),0,0,returnValue);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    result = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (result != 0) {\n      returnValue = FUN_080058e0();\n      DAT_20000254 = (int)returnValue + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)returnValue >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    currentValue = FUN_080058e0();\n    if (DAT_20000254 < currentValue) {\n      result = FUN_080058e0();\n      DAT_20000254 = result + 9000;\n      returnValue = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)returnValue >> 0x20);\n      DAT_20000240 = (undefined4)returnValue;\n      returnValue = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)returnValue != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)returnValue >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    returnValue = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)returnValue != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)returnValue >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    result = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (result != 0) {\n      result = FUN_080058e0();\n      DAT_20000180 = result + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    currentValue = FUN_080058e0();\n    if (DAT_20000180 < currentValue) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    result = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    result = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((result == 0) && (result = FUN_080009c8(highValue,upperValue,0,0x40c38880), result == 0)) &&\n       (result = FUN_080009c8(highValue,upperValue,0,0x40c38900), result == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    result = FUN_08005754(DAT_20000068);\n    if (result == 0) {\n      result = FUN_080058e0();\n      if (0x32 < (uint)(result - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    result = FUN_08005754(DAT_20000068);\n    if (result == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (result = FUN_08005754(DAT_20000068), result != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    result = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(result - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    returnValue = FUN_0800040c(result - DAT_2000025c);\n    result = FUN_080009dc((int)returnValue,(int)((ulonglong)returnValue >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (result == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "update_data_08000cd0",
                "uVar1": "currentValue",
                "uVar2": "highValue",
                "iVar3": "result",
                "uVar4": "upperValue",
                "extraout_r1": "tempValue1",
                "extraout_r1_00": "tempValue2",
                "extraout_r1_01": "tempValue3",
                "uVar5": "returnValue"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_parameters_08001294",
            "code": "\nvoid setParameters_08001294(int ptr,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(ptr + 0x18) = value1;\n  *(undefined *)(ptr + 0x19) = value2;\n  *(undefined *)(ptr + 0x1a) = value3;\n  *(undefined *)(ptr + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_parameters_08001294",
                "param_1": "ptr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_function_three_times_080012a2",
            "code": "\nvoid executeFunctionThreeTimes_080012a2(int functionParameter)\n\n{\n  FUN_08005848(*(undefined *)(functionParameter + 10),0);\n  FUN_08005848(*(undefined *)(functionParameter + 10),1);\n  FUN_08005848(*(undefined *)(functionParameter + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_function_three_times_080012a2",
                "param_1": "functionParameter"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid process_data_080012c0(int data_array,int bitmask)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < 4; i = i + 1) {\n    FUN_08005848(*(undefined *)(data_array + i + 0xb),bitmask >> (i & 0xff) & 1);\n  }\n  FUN_080012a2(data_array);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "data_array",
                "param_2": "bitmask",
                "uVar1": "i"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid processData_080012e8(int dataAddress,int value)\n\n{\n  uint iterator;\n  \n  for (iterator = 0; (int)iterator < 8; iterator = iterator + 1) {\n    FUN_08005848(*(undefined *)(dataAddress + iterator + 0xb),value >> (iterator & 0xff) & 1);\n  }\n  FUN_080012a2(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "dataAddress",
                "param_2": "value",
                "uVar1": "iterator"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "execute_function_08001310",
            "code": "\nvoid executeFunction_08001310(int functionPointer,uint flags,undefined4 argument1,undefined4 argument2)\n\n{\n  FUN_08005848(*(undefined *)(functionPointer + 8),argument1,argument1,argument2,argument2);\n  if (*(char *)(functionPointer + 9) != -1) {\n    FUN_08005848(*(char *)(functionPointer + 9),0);\n  }\n  if ((*(byte *)(functionPointer + 0x13) & 0x10) == 0) {\n    FUN_080012c0(functionPointer,flags >> 4);\n    FUN_080012c0(functionPointer,flags);\n    return;\n  }\n  FUN_080012e8(functionPointer,flags);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "execute_function_08001310",
                "param_1": "functionPointer",
                "param_2": "flags",
                "param_3": "argument1",
                "param_4": "argument2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_0800134e",
            "code": "\nundefined4 initialize_0800134e(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_08001310(data1,data2,1,data4,data4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_0800134e",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08001310(inputParam1,1,0,inputParam4,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_data_08001366",
            "code": "\nvoid processData_08001366(int dataAddress,char charValue,uint limit,undefined4 param)\n\n{\n  char byteValue;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(dataAddress + 0x17) <= (int)limit) {\n    limit = *(byte *)(dataAddress + 0x17) - 1 & 0xff;\n  }\n  byteValue = *(char *)(limit + dataAddress + 0x18);\n  FUN_08001310(dataAddress,charValue + byteValue | 0x80,0,byteValue,param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_data_08001366",
                "param_1": "dataAddress",
                "param_2": "charValue",
                "param_3": "limit",
                "param_4": "param",
                "cVar1": "byteValue"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "update_flag_and_call_function_0800138e",
            "code": "\nvoid updateFlagAndCallFunction_0800138e(int objPtr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte originalFlag;\n  \n  originalFlag = *(byte *)(objPtr + 0x14);\n  *(byte *)(objPtr + 0x14) = originalFlag | 4;\n  FUN_08001310(objPtr,originalFlag | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "update_flag_and_call_function_0800138e",
                "param_1": "objPtr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "originalFlag"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "initialize_params_080013a4",
            "code": "\nvoid initializeParams_080013a4(int data,int buffer,int count,int flag)\n\n{\n  int loopVar;\n  int index;\n  \n  if (1 < count) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 8;\n  }\n  *(char *)(data + 0x17) = (char)count;\n  FUN_08001294(data,0,0x40,buffer,buffer + 0x40);\n  if ((flag != 0) && (count == 1)) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(data + 8),1);\n  if (*(char *)(data + 9) != -1) {\n    FUN_080057b4(*(char *)(data + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(data + 10),1);\n  index = 0;\n  while( true ) {\n    if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n      loopVar = 4;\n    }\n    else {\n      loopVar = 8;\n    }\n    if (loopVar <= index) break;\n    FUN_080057b4(*(undefined *)(data + index + 0xb),1);\n    index = index + 1;\n  }\n  FUN_08005848(*(undefined *)(data + 8),0);\n  FUN_08005848(*(undefined *)(data + 10),0);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,2);\n  }\n  else {\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  }\n  FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  *(undefined *)(data + 0x14) = 4;\n  FUN_0800138e(data);\n  FUN_0800135a(data);\n  *(undefined *)(data + 0x15) = 2;\n  FUN_08001310(data,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "initialize_params_080013a4",
                "param_1": "data",
                "param_2": "buffer",
                "param_3": "count",
                "param_4": "flag",
                "iVar1": "loopVar",
                "iVar2": "index"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "initialize_parameters_080014ba",
            "code": "\nvoid initializeParameters_080014ba(int structAddress,int flag,undefined value1,undefined4 value2,undefined value3,\n                 undefined value4,undefined value5,undefined value6,undefined value7,\n                 undefined value8,undefined value9,undefined value10,undefined value11)\n\n{\n  *(undefined *)(structAddress + 8) = value1;\n  *(char *)(structAddress + 9) = (char)value2;\n  *(undefined *)(structAddress + 10) = value3;\n  *(undefined *)(structAddress + 0xb) = value4;\n  *(undefined *)(structAddress + 0xc) = value5;\n  *(undefined *)(structAddress + 0xd) = value6;\n  *(undefined *)(structAddress + 0xe) = value7;\n  *(undefined *)(structAddress + 0xf) = value8;\n  *(undefined *)(structAddress + 0x10) = value9;\n  *(undefined *)(structAddress + 0x11) = value10;\n  *(undefined *)(structAddress + 0x12) = value11;\n  if (flag == 0) {\n    *(undefined *)(structAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(structAddress + 0x13) = 0;\n  }\n  FUN_080013a4(structAddress,0x10,1,0,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "initialize_parameters_080014ba",
                "param_1": "structAddress",
                "param_2": "flag",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "value7",
                "param_10": "value8",
                "param_11": "value9",
                "param_12": "value10",
                "param_13": "value11"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *outputArray,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3,\n            undefined inputValue4,undefined inputValue5,undefined inputValue6)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(outputArray,1,inputValue1,0xff,inputValue2,inputValue3,inputValue4,inputValue5,inputValue6,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "outputArray",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "param_5": "inputValue4",
                "param_6": "inputValue5",
                "param_7": "inputValue6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *array,uint arraySize,int dataAddress)\n\n{\n  int index;\n  \n  FUN_08001310(array,(arraySize & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*array)(array,*(undefined *)(dataAddress + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "array",
                "param_2": "arraySize",
                "param_3": "dataAddress",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "initialize_data_0800157c",
            "code": "\nundefined * initializeData_0800157c(undefined *dataPointer,undefined4 value1,undefined value2,undefined value3)\n\n{\n  *dataPointer = (char)value1;\n  dataPointer[1] = value2;\n  dataPointer[2] = value3;\n  FUN_080057b4(value1,0);\n  FUN_080057b4(dataPointer[1],1);\n  FUN_080057b4(dataPointer[2],1);\n  FUN_08005848(dataPointer[1],1);\n  FUN_08005848(dataPointer[2],0);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "initialize_data_0800157c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "bitwise_operation_080015b2",
            "code": "\nuint bitwise_operation_080015b2(undefined *data)\n\n{\n  int result;\n  uint bit_index;\n  uint combined_bits;\n  \n  FUN_08005848(data[1],0);\n  combined_bits = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(data[2],1);\n    result = FUN_08005890(*data);\n    if (result != 0) {\n      combined_bits = combined_bits | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(data[2],0);\n  }\n  FUN_08005848(data[1],1);\n  return combined_bits;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "bitwise_operation_080015b2",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "bit_index",
                "uVar3": "combined_bits"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "decode_and_convert_value_080015f8",
            "code": "\nundefined8 decode_and_convert_value_080015f8(undefined4 flags,int mode,undefined4 param_3,undefined4 param_4)\n\n{\n  uint flags_result;\n  undefined8 result;\n  \n  flags_result = FUN_080015b2();\n  if ((flags_result & 0x10000) == 0) {\n    flags_result = flags_result >> 0x12;\n    result = FUN_0800040c(flags_result & 0x1fff);\n    if ((flags_result & 0x2000) != 0) {\n      result = FUN_0800040c(~flags_result & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param_4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (mode == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    flags_result = flags_result & 7;\n    if (flags_result == 2) {\n      return 0x40c3888000000000;\n    }\n    if (flags_result == 4) {\n      return 0x40c3890000000000;\n    }\n    if (flags_result != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "decode_and_convert_value_080015f8",
                "param_1": "flags",
                "param_2": "mode",
                "uVar1": "flags_result",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int data)\n\n{\n  char result;\n  int value1;\n  int value2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined8 temp11;\n  undefined8 temp12;\n  undefined8 temp13;\n  undefined8 temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  \n  flag = *(char *)(data + 0x70);\n  if (flag != '\\0') {\n    value1 = FUN_080058e0();\n    if ((uint)(value1 - *(int *)(data + 0x44)) < *(uint *)(data + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(data + 0x38);\n      temp5 = (*(undefined4 **)(data + 0x38))[1];\n      temp11 = FUN_08000190(**(undefined4 **)(data + 0x40),(*(undefined4 **)(data + 0x40))[1])\n      ;\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp12 = FUN_08000190(temp2,temp5,*(undefined4 *)(data + 0x50),\n                            *(undefined4 *)(data + 0x54));\n      temp1 = (undefined4)((ulonglong)temp12 >> 0x20);\n      temp13 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x20),\n                            *(undefined4 *)(data + 0x24));\n      temp13 = FUN_08000194((int)temp13,(int)((ulonglong)temp13 >> 0x20),\n                            *(undefined4 *)(data + 0x48),*(undefined4 *)(data + 0x4c));\n      *(undefined8 *)(data + 0x48) = temp13;\n      result = *(char *)(data + 0x71);\n      if (result == '\\0') {\n        temp14 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n        temp13 = FUN_08000190((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,\n                              (int)((ulonglong)temp14 >> 0x20));\n        *(undefined8 *)(data + 0x48) = temp13;\n      }\n      temp3 = *(undefined4 *)(data + 0x48);\n      temp6 = *(undefined4 *)(data + 0x4c);\n      temp8 = *(undefined4 *)(undefined8 *)(data + 0x68);\n      temp9 = *(undefined4 *)(data + 0x6c);\n      temp13 = *(undefined8 *)(data + 0x68);\n      value2 = FUN_08000a18(temp3,temp6,temp8,temp9);\n      if (value2 == 0) {\n        temp4 = *(undefined4 *)(data + 0x60);\n        temp7 = *(undefined4 *)(data + 100);\n        value2 = FUN_080009dc(temp3,temp6);\n        if (value2 != 0) {\n          *(undefined4 *)(data + 0x48) = temp4;\n          *(undefined4 *)(data + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(data + 0x48) = temp8;\n        *(undefined4 *)(data + 0x4c) = temp9;\n      }\n      if (result == '\\0') {\n        temp11 = 0;\n      }\n      else {\n        temp11 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n      }\n      temp16 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp15 = (undefined4)temp11;\n      temp10 = *(undefined4 *)(data + 0x48);\n      temp3 = *(undefined4 *)(data + 0x4c);\n      temp11 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x28),\n                            *(undefined4 *)(data + 0x2c));\n      temp11 = FUN_08000190(temp10,temp3,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp11 = FUN_08000194(temp15,temp16,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      value2 = FUN_080009dc(temp8,temp9,(int)temp11,temp10);\n      if (value2 == 0) {\n        temp13 = *(undefined8 *)(data + 0x60);\n        value2 = FUN_080009dc((int)temp11,temp10,*(undefined4 *)(undefined8 *)(data + 0x60),\n                             *(undefined4 *)(data + 100));\n        if (value2 == 0) {\n          temp13 = temp11;\n        }\n      }\n      **(undefined8 **)(data + 0x3c) = temp13;\n      *(undefined4 *)(data + 0x50) = temp2;\n      *(undefined4 *)(data + 0x54) = temp5;\n      *(int *)(data + 0x44) = value1;\n    }\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "value1",
                "iVar3": "value2",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "flag",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "uVar14": "temp10",
                "uVar15": "temp11",
                "uVar16": "temp12",
                "uVar17": "temp13",
                "uVar18": "temp14",
                "local_38": "temp15",
                "uStack_34": "temp16"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_parameters_08001814",
            "code": "\nvoid initializeParameters_08001814(undefined4 *outputArray,undefined4 param_2,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4,undefined4 input5,undefined4 input6,\n                 int condition)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined temp2;\n  bool isTrue;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  \n  result = FUN_080009dc(input1,input2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(input3,input4,0,0), result == 0)) &&\n     (result = FUN_080009dc(input5,input6,0,0), result == 0)) {\n    outputArray[0xd] = condition;\n    isTrue = condition != 1;\n    if (isTrue) {\n      condition = 0;\n    }\n    temp2 = (undefined)condition;\n    if (!isTrue) {\n      temp2 = 1;\n    }\n    *(undefined *)((int)outputArray + 0x71) = temp2;\n    *outputArray = input1;\n    outputArray[1] = input2;\n    outputArray[2] = input3;\n    outputArray[3] = input4;\n    outputArray[4] = input5;\n    outputArray[5] = input6;\n    temp3 = FUN_0800040c(outputArray[0x16]);\n    temp3 = FUN_0800074c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x408f4000);\n    temp1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    outputArray[6] = input1;\n    outputArray[7] = input2;\n    temp4 = FUN_080004f8(input3,input4,(int)temp3,temp1);\n    *(undefined8 *)(outputArray + 8) = temp4;\n    temp3 = FUN_0800074c(input5,input6,(int)temp3,temp1);\n    *(undefined8 *)(outputArray + 10) = temp3;\n    if (outputArray[0xc] == 1) {\n      temp5 = FUN_08000190(0,0,input1,input2);\n      *(undefined8 *)(outputArray + 6) = temp5;\n      temp4 = FUN_08000190(0,0,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      *(undefined8 *)(outputArray + 8) = temp4;\n      temp3 = FUN_08000190(0,0,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      *(undefined8 *)(outputArray + 10) = temp3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_parameters_08001814",
                "param_1": "outputArray",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "condition",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "bVar4": "isTrue",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_app_080018f8",
            "code": "\nvoid initialize_app_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_app_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_data_08001918",
            "code": "\nvoid updateData_08001918(int dataPtr,int size,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  if (0 < size) {\n    result2 = FUN_0800042c(size);\n    result3 = FUN_0800040c(*(undefined4 *)(dataPtr + 0x58));\n    result2 = FUN_0800074c((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                         (int)((ulonglong)result3 >> 0x20),param2);\n    result1 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_080004f8((int)result2,result1,*(undefined4 *)(dataPtr + 0x20),\n                         *(undefined4 *)(dataPtr + 0x24));\n    *(undefined8 *)(dataPtr + 0x20) = result3;\n    result2 = FUN_0800074c(*(undefined4 *)(dataPtr + 0x28),*(undefined4 *)(dataPtr + 0x2c),(int)result2,\n                         result1);\n    *(undefined8 *)(dataPtr + 0x28) = result2;\n    *(int *)(dataPtr + 0x58) = size;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_data_08001918",
                "param_1": "dataPtr",
                "param_2": "size",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_function_08001960",
            "code": "\nvoid updateFunction_08001960(int functionData,undefined4 param2,undefined4 param3,undefined4 param4,\n                 undefined4 param5,undefined4 param6)\n\n{\n  int result;\n  undefined4 *ptrVar;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  result = FUN_08000a04(param3,param4,param5,param6,param4);\n  if (result == 0) {\n    *(undefined4 *)(functionData + 0x60) = param3;\n    *(undefined4 *)(functionData + 100) = param4;\n    *(undefined4 *)(functionData + 0x68) = param5;\n    *(undefined4 *)(functionData + 0x6c) = param6;\n    if (*(char *)(functionData + 0x70) != '\\0') {\n      ptrVar = *(undefined4 **)(functionData + 0x3c);\n      var1 = *ptrVar;\n      var3 = ptrVar[1];\n      result = FUN_080009dc(param5,param6,var1,var3);\n      if (result == 0) {\n        result = FUN_08000a18(param3,param4,var1,var3);\n        if (result != 0) {\n          *ptrVar = param3;\n          ptrVar[1] = param4;\n        }\n      }\n      else {\n        *ptrVar = param5;\n        ptrVar[1] = param6;\n      }\n      var1 = *(undefined4 *)(functionData + 0x48);\n      var3 = *(undefined4 *)(functionData + 0x4c);\n      var2 = *(undefined4 *)(functionData + 0x68);\n      var4 = *(undefined4 *)(functionData + 0x6c);\n      result = FUN_08000a18(var1,var3,var2,var4);\n      if (result != 0) {\n        *(undefined4 *)(functionData + 0x48) = var2;\n        *(undefined4 *)(functionData + 0x4c) = var4;\n        return;\n      }\n      var2 = *(undefined4 *)(functionData + 0x60);\n      var4 = *(undefined4 *)(functionData + 100);\n      result = FUN_080009dc(var1,var3,var2,var4);\n      if (result != 0) {\n        *(undefined4 *)(functionData + 0x48) = var2;\n        *(undefined4 *)(functionData + 0x4c) = var4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_function_08001960",
                "param_1": "functionData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "iVar1": "result",
                "puVar2": "ptrVar",
                "uVar3": "var1",
                "uVar4": "var2",
                "uVar5": "var3",
                "uVar6": "var4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "process_data_080019f6",
            "code": "\nvoid process_data_080019f6(int data_ptr)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  var2 = **(undefined4 **)(data_ptr + 0x3c);\n  var3 = (*(undefined4 **)(data_ptr + 0x3c))[1];\n  *(undefined4 *)(data_ptr + 0x48) = var2;\n  *(undefined4 *)(data_ptr + 0x4c) = var3;\n  var1 = (*(undefined4 **)(data_ptr + 0x38))[1];\n  *(undefined4 *)(data_ptr + 0x50) = **(undefined4 **)(data_ptr + 0x38);\n  *(undefined4 *)(data_ptr + 0x54) = var1;\n  var1 = *(undefined4 *)(data_ptr + 0x68);\n  var4 = *(undefined4 *)(data_ptr + 0x6c);\n  result = FUN_08000a18(var2,var3,var1,var4);\n  if (result == 0) {\n    var1 = *(undefined4 *)(data_ptr + 0x60);\n    var4 = *(undefined4 *)(data_ptr + 100);\n    result = FUN_080009dc(var2,var3,var1,var4);\n    if (result != 0) {\n      *(undefined4 *)(data_ptr + 0x48) = var1;\n      *(undefined4 *)(data_ptr + 0x4c) = var4;\n    }\n    return;\n  }\n  *(undefined4 *)(data_ptr + 0x48) = var1;\n  *(undefined4 *)(data_ptr + 0x4c) = var4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "process_data_080019f6",
                "param_1": "data_ptr",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3",
                "uVar5": "var4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_if_param2_is_one_08001a44",
            "code": "\nvoid setFlagIfParam2IsOne_08001a44(int dataPtr,int flagValue)\n\n{\n  undefined newValue;\n  \n  if (flagValue == 1) {\n    newValue = 1;\n    if (*(char *)(dataPtr + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newValue = 0;\n  }\n  *(undefined *)(dataPtr + 0x70) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_if_param2_is_one_08001a44",
                "param_1": "dataPtr",
                "param_2": "flagValue",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int param1,int param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(param1 + 0x70) != '\\0') && (*(int *)(param1 + 0x30) != param2)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(param1 + 0x18),*(undefined4 *)(param1 + 0x1c),param4\n                        );\n    *(undefined8 *)(param1 + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(param1 + 0x20),*(undefined4 *)(param1 + 0x24));\n    *(undefined8 *)(param1 + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(param1 + 0x28),*(undefined4 *)(param1 + 0x2c));\n    *(undefined8 *)(param1 + 0x28) = result;\n  }\n  *(int *)(param1 + 0x30) = param2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_data_08001ab0",
            "code": "\nint initializeData_08001ab0(int data,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extraResult;\n  \n  *(undefined4 *)(data + 0x3c) = param3;\n  *(undefined4 *)(data + 0x38) = param2;\n  *(undefined4 *)(data + 0x40) = param4;\n  *(undefined *)(data + 0x70) = 0;\n  FUN_08001960(data,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(data + 0x58) = 100;\n  FUN_08001a66(data,param12);\n  FUN_08001814(data,extraResult,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(data + 0x44) = result - *(int *)(data + 0x58);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_data_08001ab0",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extraResult"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "execute_and_return_08001b18",
            "code": "\nundefined4 execute_and_return_08001b18(undefined4 input_value)\n\n{\n  FUN_08001ab0();\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "execute_and_return_08001b18",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_hardware_08001b48",
            "code": "\nvoid initializeHardware_08001b48(void)\n\n{\n  int result;\n  uint uVar2;\n  undefined4 value11 [2];\n  undefined4 value12;\n  undefined4 value6;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 buffer [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  buffer[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08003688(buffer);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value6 = 0xf;\n  value7 = 2;\n  value8 = 0;\n  value9 = 0x400;\n  value10 = 0;\n  result = FUN_08003ad4(&value6);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  value11[0] = 2;\n  value12 = 0x8000;\n  result = FUN_08003c90(value11);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = FUN_08003c44();\n  FUN_08002514(uVar2 / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "local_30": "buffer",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5",
                "iVar1": "result",
                "local_44": "value6",
                "local_40": "value7",
                "local_3c": "value8",
                "local_38": "value9",
                "local_34": "value10",
                "local_54": "value11",
                "local_4c": "value12"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_08001c32",
            "code": "\nvoid initialize_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "validate_and_store_08001c3c",
            "code": "\nundefined4 validate_and_store_08001c3c(uint input_value)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input_value) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,input_value,0);\n  DAT_2000007c = input_value;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "validate_and_store_08001c3c",
                "param_1": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_system_08001c88",
            "code": "\n\n\nundefined4 initializeSystem_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_system_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "addition_operation_08001cac",
            "code": "\nvoid additionOperation_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "addition_operation_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_dat_value_08001cc4",
            "code": "\nundefined4 get_dat_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_dat_value_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_block_08001cd0",
            "code": "\nundefined4 processDataBlock_08001cd0(uint **dataBlock,uint dataSize)\n\n{\n  int initialTime;\n  uint randomNum;\n  int currentTime;\n  undefined4 result;\n  uint *flags;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialTime = FUN_08001cc4();\n  calculationResult = DAT_20000084;\n  flags = *dataBlock;\n  if ((flags[2] & 0x100) == 0) {\n    if (((flags[1] & 0x100) == 0) && ((flags[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**dataBlock & 2) != 0) goto LAB_08001de2;\n      } while ((dataSize == 0xffffffff) ||\n              ((dataSize != 0 && (currentTime = FUN_08001cc4(), (uint)(currentTime - initialTime) <= dataSize))));\n      dataBlock[10] = (uint *)((uint)dataBlock[10] | 4);\n      *(undefined *)(dataBlock + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomNum = FUN_08003da4(2);\n      flags = *dataBlock;\n      if (((flags[4] & 0x24924924) == 0) && ((flags[3] & 0x924924) == 0)) {\n        if ((flags[4] & 0x12492492) == 0) {\n          if ((flags[3] & 0x492492) == 0) {\n            currentTime = 0x14;\n          }\n          else {\n            currentTime = 0x29;\n          }\n        }\n        else {\n          currentTime = 0x29;\n        }\n      }\n      else if (((flags[4] & 0x12492492) == 0) && ((flags[3] & 0x492492) == 0)) {\n        currentTime = 0x54;\n      }\n      else if ((flags[4] & 0x249249) == 0) {\n        if ((flags[3] & 0x249249) == 0) {\n          currentTime = 0x54;\n        }\n        else {\n          currentTime = 0xfc;\n        }\n      }\n      else {\n        currentTime = 0xfc;\n      }\n      calculationResult = (calculationResult / randomNum) * currentTime;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((dataSize != 0xffffffff) &&\n           ((dataSize == 0 || (currentTime = FUN_08001cc4(), dataSize < (uint)(currentTime - initialTime))))) {\n          dataBlock[10] = (uint *)((uint)dataBlock[10] | 4);\n          *(undefined *)(dataBlock + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **dataBlock = 0xffffffed;\n      dataBlock[10] = (uint *)((uint)dataBlock[10] | 0x200);\n      if (((*dataBlock)[2] & 0xe0000) == 0xe0000) {\n        if (dataBlock[3] == (uint *)0x0) {\n          dataBlock[10] = (uint *)((uint)dataBlock[10] & 0xfffffeff);\n          if (((uint)dataBlock[10] & 0x1000) == 0) {\n            dataBlock[10] = (uint *)((uint)dataBlock[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    dataBlock[10] = (uint *)((uint)dataBlock[10] | 0x20);\n    *(undefined *)(dataBlock + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_block_08001cd0",
                "param_1": "dataBlock",
                "param_2": "dataSize",
                "iVar1": "initialTime",
                "uVar2": "randomNum",
                "iVar3": "currentTime",
                "uVar4": "result",
                "puVar5": "flags",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *inputPointer)\n\n{\n  return *(undefined4 *)(*inputPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_settings_08001e48",
            "code": "\nundefined4 updateSettings_08001e48(int *settingsArray,uint *configArray)\n\n{\n  undefined4 returnValue;\n  uint tempValue;\n  int count;\n  \n  if (*(char *)(settingsArray + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(settingsArray + 9) = 1;\n    tempValue = configArray[1];\n    if (tempValue < 7) {\n      tempValue = tempValue * 5 - 5;\n      *(uint *)(*settingsArray + 0x34) =\n           *configArray << (tempValue & 0xff) | *(uint *)(*settingsArray + 0x34) & ~(0x1f << (tempValue & 0xff));\n    }\n    else if (tempValue < 0xd) {\n      tempValue = tempValue * 5 - 0x23;\n      *(uint *)(*settingsArray + 0x30) =\n           *configArray << (tempValue & 0xff) | *(uint *)(*settingsArray + 0x30) & ~(0x1f << (tempValue & 0xff));\n    }\n    else {\n      tempValue = tempValue * 5 - 0x41;\n      *(uint *)(*settingsArray + 0x2c) =\n           *configArray << (tempValue & 0xff) | *(uint *)(*settingsArray + 0x2c) & ~(0x1f << (tempValue & 0xff));\n    }\n    tempValue = *configArray;\n    if (tempValue < 10) {\n      *(uint *)(*settingsArray + 0x10) =\n           configArray[2] << (tempValue * 3 & 0xff) |\n           *(uint *)(*settingsArray + 0x10) & ~(7 << (tempValue * 3 & 0xff));\n    }\n    else {\n      tempValue = tempValue * 3 - 0x1e;\n      *(uint *)(*settingsArray + 0xc) =\n           configArray[2] << (tempValue & 0xff) | *(uint *)(*settingsArray + 0xc) & ~(7 << (tempValue & 0xff));\n    }\n    if (*configArray - 0x10 < 2) {\n      if (*settingsArray == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*configArray == 0x10) {\n            for (count = (DAT_20000084 / 1000000) * 10; count != 0; count = count + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        settingsArray[10] = settingsArray[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(settingsArray + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_settings_08001e48",
                "param_1": "settingsArray",
                "param_2": "configArray",
                "uVar1": "returnValue",
                "uVar2": "tempValue",
                "local_c": "count"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_parent_pointer_08001f80",
            "code": "\nundefined4 getParentPointer_08001f80(int childPointer)\n\n{\n  return *(undefined4 *)(childPointer + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_parent_pointer_08001f80",
                "param_1": "childPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "verify_conditions_08001f84",
            "code": "\nundefined4 verify_conditions_08001f84(int *input_data,undefined4 flag)\n\n{\n  int temp_var1;\n  undefined4 status;\n  int temp_var2;\n  uint loop_counter;\n  \n  temp_var2 = *input_data;\n  if ((*(uint *)(temp_var2 + 8) & 1) == 0) {\n    *(uint *)(temp_var2 + 8) = *(uint *)(temp_var2 + 8) | 1;\n    for (loop_counter = DAT_20000084 / 1000000; loop_counter != 0; loop_counter = loop_counter - 1) {\n    }\n    temp_var2 = FUN_08001cc4(input_data,flag,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*input_data + 8) & 1) != 0) {\n        return 0;\n      }\n      temp_var1 = FUN_08001cc4();\n    } while ((uint)(temp_var1 - temp_var2) < 3);\n    input_data[10] = input_data[10] | 0x10;\n    input_data[0xb] = input_data[0xb] | 1;\n    *(undefined *)(input_data + 9) = 0;\n    status = 1;\n  }\n  else {\n    status = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "verify_conditions_08001f84",
                "param_1": "input_data",
                "param_2": "flag",
                "iVar1": "temp_var1",
                "iVar3": "temp_var2",
                "uVar2": "status",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_function_08002004",
            "code": "\n\n\nint initializeFunction_08002004(int *inputArray)\n\n{\n  int returnValue;\n  undefined4 *ptrToUint;\n  int tempVar;\n  \n  if (*(char *)(inputArray + 9) != '\\x01') {\n    *(undefined *)(inputArray + 9) = 1;\n    returnValue = FUN_08001f84();\n    if (returnValue == 0) {\n      inputArray[10] = inputArray[10] & 0xfffffcfeU | 0x100;\n      ptrToUint = (undefined4 *)*inputArray;\n      if ((ptrToUint == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        inputArray[10] = inputArray[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          inputArray[10] = inputArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        inputArray[10] = inputArray[10] & 0xffefffff;\n        if ((ptrToUint[1] & 0x400) != 0) {\n          inputArray[10] = inputArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((inputArray[10] & 0x1000U) == 0) {\n        inputArray[0xb] = 0;\n      }\n      else {\n        inputArray[0xb] = inputArray[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(inputArray + 9) = 0;\n      *ptrToUint = 0xfffffffd;\n      tempVar = *inputArray;\n      if (((*(uint *)(tempVar + 8) & 0xe0000) == 0xe0000) &&\n         ((tempVar != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(tempVar + 8) = *(uint *)(tempVar + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(tempVar + 8) = *(uint *)(tempVar + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(inputArray + 9) = 0;\n    }\n    return returnValue;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_function_08002004",
                "param_1": "inputArray",
                "iVar1": "returnValue",
                "puVar2": "ptrToUint",
                "iVar3": "tempVar"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_and_values_080020f0",
            "code": "\nundefined4 updateFlagsAndValues_080020f0(int *inputArray)\n\n{\n  int value1;\n  int value2;\n  \n  value2 = *inputArray;\n  if ((*(uint *)(value2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value2 + 8) = *(uint *)(value2 + 8) & 0xfffffffe;\n  value2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*inputArray + 8) & 1) == 0) {\n      return 0;\n    }\n    value1 = FUN_08001cc4();\n  } while ((uint)(value1 - value2) < 3);\n  inputArray[10] = inputArray[10] | 0x10;\n  inputArray[0xb] = inputArray[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_and_values_080020f0",
                "param_1": "inputArray",
                "iVar1": "value1",
                "iVar2": "value2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "check_and_update_settings_0800213c",
            "code": "\nundefined4 check_and_update_settings_0800213c(int *settings)\n\n{\n  int result;\n  uint combined_flags;\n  uint additional_flags;\n  \n  if (settings == (int *)0x0) {\n    return 1;\n  }\n  if (settings[10] == 0) {\n    settings[0xb] = 0;\n    *(undefined *)(settings + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(settings);\n  if (((settings[10] & 0x10U) == 0) && (result == 0)) {\n    settings[10] = settings[10] & 0xffffeefdU | 2;\n    combined_flags = settings[1] | settings[7] | settings[3] << 1;\n    if (settings[2] == 0x100) {\n      additional_flags = 0x100;\n    }\n    else {\n      additional_flags = 0;\n      if (settings[2] == 1) {\n        additional_flags = 0x100;\n      }\n    }\n    if (settings[5] == 1) {\n      if (settings[3] == 0) {\n        additional_flags = additional_flags | (settings[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        settings[10] = settings[10] | 0x20;\n        settings[0xb] = settings[0xb] | 1;\n      }\n    }\n    *(uint *)(*settings + 4) = additional_flags | *(uint *)(*settings + 4) & 0xffff16ff;\n    *(uint *)(*settings + 8) = *(uint *)(*settings + 8) & 0xffe1f7fd | combined_flags;\n    if ((settings[2] == 0x100) || (settings[2] == 1)) {\n      additional_flags = (settings[4] + -1) * 0x100000;\n    }\n    else {\n      additional_flags = 0;\n    }\n    *(uint *)(*settings + 0x2c) = additional_flags | *(uint *)(*settings + 0x2c) & 0xff0fffff;\n    if (combined_flags != (*(uint *)(*settings + 8) & 0xff1f0efe)) {\n      settings[10] = settings[10] & 0xffffffedU | 0x10;\n      settings[0xb] = settings[0xb] | 1;\n      return 1;\n    }\n    settings[0xb] = 0;\n    settings[10] = settings[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  settings[10] = settings[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "check_and_update_settings_0800213c",
                "param_1": "settings",
                "iVar1": "result",
                "uVar2": "combined_flags",
                "uVar3": "additional_flags"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "clear_flags_and_reset_0800224c",
            "code": "\nint clearFlagsAndReset_0800224c(int *param)\n\n{\n  int returnValue;\n  \n  if (param == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    param[10] = param[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*param = 0xffffffe0;\n      *(uint *)(*param + 4) = *(uint *)(*param + 4) & 0xff3f0000;\n      *(uint *)(*param + 8) = *(uint *)(*param + 8) & 0xff0106f0;\n      *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xff000000;\n      *(uint *)(*param + 0x10) = *(uint *)(*param + 0x10) & 0xc0000000;\n      *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xfffff000;\n      *(uint *)(*param + 0x18) = *(uint *)(*param + 0x18) & 0xfffff000;\n      *(uint *)(*param + 0x1c) = *(uint *)(*param + 0x1c) & 0xfffff000;\n      *(uint *)(*param + 0x20) = *(uint *)(*param + 0x20) & 0xfffff000;\n      *(uint *)(*param + 0x24) = *(uint *)(*param + 0x24) & 0xfffff000;\n      *(uint *)(*param + 0x28) = *(uint *)(*param + 0x28) & 0xfffff000;\n      *(uint *)(*param + 0x2c) = *(uint *)(*param + 0x2c) & 0xff000000;\n      *(uint *)(*param + 0x2c) = *(uint *)(*param + 0x2c) & 0xff000000;\n      *(uint *)(*param + 0x30) = *(uint *)(*param + 0x30) & 0xc0000000;\n      *(uint *)(*param + 0x34) = *(uint *)(*param + 0x34) & 0xc0000000;\n      *(uint *)(*param + 0x38) = *(uint *)(*param + 0x38) & 0xffc00000;\n      *(uint *)(*param + 0x38) = *(uint *)(*param + 0x38) & 0xffc00000;\n      FUN_080049f0(param);\n      param[0xb] = 0;\n      param[10] = 0;\n    }\n    *(undefined *)(param + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "clear_flags_and_reset_0800224c",
                "param_1": "param",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "update_status_08002348",
            "code": "\nint updateStatus_08002348(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "update_status_08002348",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "initialize_function_08002384",
            "code": "\nint initializeFunction_08002384(int *functionPointer)\n\n{\n  uint temp1;\n  int returnValue;\n  uint temp2;\n  int temp3;\n  int temp4;\n  int counter;\n  \n  if (*(char *)(functionPointer + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(functionPointer + 9) = 1;\n  returnValue = FUN_080020f0();\n  if (returnValue == 0) {\n    functionPointer[10] = functionPointer[10] & 0xffffeefdU | 2;\n    temp1 = DAT_20000084;\n    temp2 = FUN_08003da4(2);\n    for (counter = temp1 / temp2 << 1; counter != 0; counter = counter + -1) {\n    }\n    FUN_08001f84(functionPointer);\n    *(uint *)(*functionPointer + 8) = *(uint *)(*functionPointer + 8) | 8;\n    temp3 = FUN_08001cc4();\n    while (temp4 = *functionPointer, (*(uint *)(temp4 + 8) & 8) != 0) {\n      temp4 = FUN_08001cc4();\n      if (10 < (uint)(temp4 - temp3)) {\n        functionPointer[10] = functionPointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(functionPointer + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(temp4 + 8) = *(uint *)(temp4 + 8) | 4;\n    temp3 = FUN_08001cc4();\n    while ((*(uint *)(*functionPointer + 8) & 4) != 0) {\n      temp4 = FUN_08001cc4();\n      if (10 < (uint)(temp4 - temp3)) {\n        functionPointer[10] = functionPointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(functionPointer + 9) = 0;\n        return 1;\n      }\n    }\n    functionPointer[10] = functionPointer[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(functionPointer + 9) = 0;\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002384": "initialize_function_08002384",
                "param_1": "functionPointer",
                "uVar1": "temp1",
                "iVar2": "returnValue",
                "uVar3": "temp2",
                "iVar4": "temp3",
                "iVar5": "temp4",
                "local_14": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_flags_08002470",
            "code": "\n\n\nvoid update_flags_08002470(uint flags)\n\n{\n  _DAT_e000ed0c = (flags & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_flags_08002470",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "apply_mask_and_write_08002494",
            "code": "\n\n\nvoid applyMaskAndWrite_08002494(uint address,uint mask,uint value)\n\n{\n  uint shiftCount;\n  uint bitPosition;\n  \n  shiftCount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitPosition = 7 - shiftCount;\n  if (3 < bitPosition) {\n    bitPosition = 4;\n  }\n  if (shiftCount + 4 < 7) {\n    shiftCount = 0;\n  }\n  else {\n    shiftCount = shiftCount - 3;\n  }\n  shiftCount = (mask & (1 << (bitPosition & 0xff)) - 1U) << (shiftCount & 0xff) |\n          (1 << (shiftCount & 0xff)) - 1U & value;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftCount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftCount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "apply_mask_and_write_08002494",
                "param_1": "address",
                "param_2": "mask",
                "param_3": "value",
                "uVar1": "shiftCount",
                "uVar2": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_in_memory_080024f8",
            "code": "\nvoid setBitInMemory_080024f8(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_in_memory_080024f8",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "set_memory_limits_08002514",
            "code": "\n\n\nundefined4 setMemoryLimits_08002514(int memorySize)\n\n{\n  if (memorySize - 1U < 0x1000000) {\n    _DAT_e000e014 = memorySize - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "set_memory_limits_08002514",
                "param_1": "memorySize"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_array_08002540",
            "code": "\nvoid setBitInArray_08002540(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_flag_08002560",
            "code": "\n\n\nvoid updateFlag_08002560(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_flag_08002560",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "execute_initialization_08002582",
            "code": "\nvoid execute_initialization_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "execute_initialization_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_data_0800258c",
            "code": "\n\n\nundefined4 initializeData_0800258c(uint **data)\n\n{\n  uint *value;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    errorCode = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  value = *data;\n  if (value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (callbackFunction != (uint *)0x0) {\n    (*(functionPointer *)callbackFunction)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "data",
                "puVar1": "value",
                "param_1[0xe]": "errorCode",
                "param_1[0xd]": "callbackFunction",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_bits_08002624",
            "code": "\n\n\nvoid updateBits_08002624(uint *target,uint *source)\n\n{\n  uint *targetPtr;\n  uint bitMask;\n  uint bitResult;\n  uint bitPosition;\n  uint opcode;\n  uint newValue;\n  int bitOffset;\n  int registerIndex;\n  \n  newValue = 0;\n  bitPosition = 0;\n  do {\n    if (0xf < bitPosition) {\n      return;\n    }\n    bitMask = 1 << (bitPosition & 0xff);\n    bitResult = *source & bitMask;\n    if (bitMask == bitResult) {\n      opcode = source[1];\n      if (opcode == 0x12) {\n        newValue = source[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          newValue = source[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            newValue = source[3];\n          }\n        }\n        else if (opcode == 3) {\n          newValue = 0;\n        }\n        else if (opcode == 0x11) {\n          newValue = source[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (source[2] == 0) {\n          newValue = 4;\n        }\n        else if (source[2] == 1) {\n          target[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          target[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitPosition;\n      targetPtr = target;\n      if (0xff < bitResult) {\n        bitMask = bitPosition - 8;\n        targetPtr = target + 1;\n      }\n      *targetPtr = *targetPtr & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((source[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitOffset = (bitPosition & 3) << 2;\n        if (target == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (target == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (target == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (target == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bitOffset) | registerIndex << bitOffset;\n        if ((source[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitResult;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitResult;\n        }\n        if ((source[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitResult;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitResult;\n        }\n        if ((source[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitResult;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitResult;\n        }\n        if ((source[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitResult;\n        }\n        else {\n          _DAT_4001040c = bitResult | _DAT_4001040c;\n        }\n      }\n    }\n    bitPosition = bitPosition + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_bits_08002624",
                "param_1": "target",
                "param_2": "source",
                "puVar1": "targetPtr",
                "uVar2": "bitMask",
                "uVar3": "bitResult",
                "uVar4": "bitPosition",
                "uVar5": "opcode",
                "uVar6": "newValue",
                "iVar7": "bitOffset",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int base_address,uint value)\n\n{\n  if ((value & *(uint *)(base_address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "base_address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int objectAddress,int value,int useShift)\n\n{\n  if (useShift == 0) {\n    *(int *)(objectAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "useShift"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_if_flag_set_0800282c",
            "code": "\n\n\nvoid updateDataIfFlagSet_0800282c(uint flag)\n\n{\n  if ((_DAT_40010414 & flag) != 0) {\n    _DAT_40010414 = flag;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_if_flag_set_0800282c",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_permissions_08002848",
            "code": "\nundefined4 updatePermissions_08002848(int *permissions)\n\n{\n  if (*(char *)((int)permissions + 0x3e) == '@') {\n    if (conditionFlag == 0) {\n      *(uint *)(*permissions + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*permissions + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (permissions[4] == 0x4000) {\n    if (*(char *)((int)permissions + 0x3d) == '!') {\n      *(uint *)(*permissions + 0x10) = inputValue & 0xfe;\n    }\n    else {\n      *(uint *)(*permissions + 0x10) = inputValue & 0xffU | 1;\n    }\n  }\n  else if (conditionFlag == 0) {\n    *(uint *)(*permissions + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (conditionFlag == 1) {\n    *(uint *)(*permissions + 0x10) = (uint)(inputValue << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_permissions_08002848",
                "param_1": "permissions",
                "param_1[0x14]": "conditionFlag",
                "param_1[0x11]": "inputValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "update_first_byte_080028d2",
            "code": "\nundefined4 updateFirstByte_080028d2(int *ptrToData)\n\n{\n  *(uint *)(*ptrToData + 0x10) = ptrToDataPlus0x11 & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "update_first_byte_080028d2",
                "param_1": "ptrToData",
                "param_1[0x11]": "ptrToDataPlus0x11"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "process_flags_080028de",
            "code": "\nuint processFlags_080028de(uint **arguments)\n\n{\n  uint *ptr_1;\n  \n  ptr_1 = arguments[0xb];\n  if ((*(char *)((int)arguments + 0x3d) == '\\\"') &&\n     ((ptr_2 != (uint *)0x0 || (*(char *)((int)arguments + 0x3e) != '@')))) {\n    if ((ptr_2 == (uint *)0x0) && (ptr_3 == (uint *)0xc000)) {\n      **arguments = **arguments | 0x100;\n      ptr_2 = (uint *)((int)ptr_2 + 1);\n    }\n    else {\n      if (*(short *)((int)arguments + 0x2a) == 0) {\n        **arguments = **arguments | 0x200;\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 1) {\n        if (ptr_1 == (uint *)0xffff0000) {\n          **arguments = **arguments & 0xfffffbff;\n          ptr_1 = *arguments;\n          if ((ptr_1[1] & 0x800) == 0) {\n            *ptr_1 = *ptr_1 | 0x200;\n          }\n          else {\n            *ptr_1 = *ptr_1 & 0xfffffbff;\n          }\n        }\n        else if (((ptr_1 == (uint *)0x4) || (ptr_1 == (uint *)0x8)) ||\n                (ptr_4 == (uint *)0x12)) {\n          **arguments = **arguments & 0xfffffbff;\n          **arguments = **arguments | 0x200;\n        }\n        else if (arguments[0xb] == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 2) {\n        if (arguments[0xb] == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments | 0x800;\n          **arguments = **arguments & 0xfffffbff;\n        }\n        ptr_1 = *arguments;\n        if ((ptr_1[1] & 0x800) != 0) {\n          ptr_1[1] = ptr_1[1] | 0x1000;\n        }\n      }\n      else {\n        **arguments = **arguments | 0x400;\n        ptr_1 = *arguments;\n        if ((ptr_1[1] & 0x800) != 0) {\n          ptr_1[1] = ptr_1[1] | 0x1000;\n        }\n      }\n      ptr_2 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "process_flags_080028de",
                "param_1": "arguments",
                "puVar1": "ptr_1",
                "param_1[0x14]": "ptr_2",
                "param_1[4]": "ptr_3",
                "param_1[0xc]": "ptr_4",
                "undefined4": "uint"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_data_08002ab8",
            "code": "\nundefined4 updateData_08002ab8(int *data)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_data_08002ab8",
                "param_1": "data",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_array_element_08002ad8",
            "code": "\nundefined4 updateArrayElement_08002ad8(int *array)\n\n{\n  undefined *ptrToElement;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    ptrToElement = (undefined *)array[9];\n    array[9] = (int)(ptrToElement + 1);\n    *ptrToElement = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_array_element_08002ad8",
                "param_1": "array",
                "puVar1": "ptrToElement"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "process_parameters_08002af8",
            "code": "\nundefined4 processParameters_08002af8(uint **parameterList,uint *param_2,int param_3,uint *param_4)\n\n{\n  undefined4 result;\n  uint *pointerVar;\n  \n  if (*(char *)((int)parameterList + 0x3d) == '(') {\n    if (param_2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(parameterList + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(parameterList + 0xf) = 1;\n      pointerVar = *parameterList;\n      if ((*pointerVar & 1) == 0) {\n        *pointerVar = *pointerVar | 1;\n      }\n      **parameterList = **parameterList & 0xfffff7ff;\n      *(undefined *)((int)parameterList + 0x3d) = 0x29;\n      *(undefined *)((int)parameterList + 0x3e) = 0x20;\n      result = 0;\n      parameterList[0x10] = (uint *)0x0;\n      parameterList[9] = param_2;\n      *(short *)((int)parameterList + 0x2a) = (short)param_3;\n      parameterList[0xb] = param_4;\n      *(undefined2 *)(parameterList + 10) = *(undefined2 *)((int)parameterList + 0x2a);\n      *(undefined *)(parameterList + 0xf) = 0;\n      (*parameterList)[1] = (*parameterList)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "process_parameters_08002af8",
                "param_1": "parameterList",
                "uVar1": "result",
                "puVar2": "pointerVar"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "validate_parameters_08002b84",
            "code": "\nundefined4 validateParameters_08002b84(uint **ptrArray,uint *ptrValue,int valueCount,uint *dataPtr)\n\n{\n  undefined4 result;\n  uint *valuePtr;\n  \n  if (*(char *)((int)ptrArray + 0x3d) == '(') {\n    if (ptrValue == (uint *)0x0) {\n      result = 1;\n    }\n    else if (valueCount == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptrArray + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptrArray + 0xf) = 1;\n      valuePtr = *ptrArray;\n      if ((*valuePtr & 1) == 0) {\n        *valuePtr = *valuePtr | 1;\n      }\n      **ptrArray = **ptrArray & 0xfffff7ff;\n      *(undefined *)((int)ptrArray + 0x3d) = 0x2a;\n      *(undefined *)((int)ptrArray + 0x3e) = 0x20;\n      result = 0;\n      ptrArray[0x10] = (uint *)0x0;\n      ptrArray[9] = ptrValue;\n      *(short *)((int)ptrArray + 0x2a) = (short)valueCount;\n      ptrArray[0xb] = dataPtr;\n      *(undefined2 *)(ptrArray + 10) = *(undefined2 *)((int)ptrArray + 0x2a);\n      *(undefined *)(ptrArray + 0xf) = 0;\n      (*ptrArray)[1] = (*ptrArray)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "validate_parameters_08002b84",
                "param_1": "ptrArray",
                "param_2": "ptrValue",
                "param_3": "valueCount",
                "param_4": "dataPtr",
                "uVar1": "result",
                "puVar2": "valuePtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "set_flags_and_values_08002c10",
            "code": "\nundefined4 setFlagsAndValues_08002c10(uint **paramArray)\n\n{\n  uint *ptrParam;\n  \n  if (*(char *)((int)paramArray + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)paramArray + 0x3d) = 0x28;\n  ptrParam = *paramArray;\n  if ((*ptrParam & 1) == 0) {\n    *ptrParam = *ptrParam | 1;\n  }\n  **paramArray = **paramArray | 0x400;\n  (*paramArray)[1] = (*paramArray)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "set_flags_and_values_08002c10",
                "param_1": "paramArray",
                "puVar1": "ptrParam"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_data_08002c54",
            "code": "\nundefined4 processData_08002c54(int *inputArray)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    bytePointer = (byte *)counter;\n    counter = (int)(bytePointer + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      status = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "inputArray",
                "cVar1": "charValue",
                "pbVar2": "bytePointer",
                "param_1[9]": "counter",
                "param_1[0xc]": "status"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_data_08002ca6",
            "code": "\nundefined4 updateData_08002ca6(int *data)\n\n{\n  char character;\n  undefined *pointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    pointer = (undefined *)data[9];\n    data[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_data_08002ca6",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "extract_data_and_call_function_08002cf2",
            "code": "\nundefined4 extract_data_and_call_function_08002cf2(int *data_ptr,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined2 selected_value;\n  uint flag;\n  \n  flag = *(uint *)(*data_ptr + 0x18);\n  if ((flag & 0x80) == 0) {\n    selected_value = *(undefined2 *)(data_ptr + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(data_ptr + 6);\n  }\n  FUN_08004e74(data_ptr,(*(uint *)(*data_ptr + 0x18) & 4) == 0,selected_value,flag,arg3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "extract_data_and_call_function_08002cf2",
                "param_1": "data_ptr",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "selected_value",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "process_parameter_08002d1c",
            "code": "\nundefined4 processParameter_08002d1c(uint **parameter)\n\n{\n  if (((parameter[0xb] == (uint *)0x4) || (parameter[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)parameter + 0x3d) == '(')) {\n    parameter[0xb] = (uint *)0xffff0000;\n    (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n    (*parameter)[5] = 0xfffffbff;\n    **parameter = **parameter & 0xfffffbff;\n    parameter[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)parameter + 0x3d) == '!') {\n    parameter[0xb] = (uint *)0xffff0000;\n    parameter[0xc] = (uint *)0x21;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n    (*parameter)[5] = 0xfffffbff;\n    **parameter = **parameter & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*parameter)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "process_parameter_08002d1c",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_input_08002db2",
            "code": "\nundefined4 processInput_08002db2(uint **input)\n\n{\n  char charValue;\n  uint *ptrValue;\n  \n  charValue = *(char *)((int)input + 0x3d);\n  ptrValue = input[0xb];\n  if ((*(short *)(input + 10) == 0) && (charValue == '!')) {\n    if ((ptrValue == (uint *)0x4) || ((ptrValue == (uint *)0x8 || (ptrValue == (uint *)0xffff0000)))) {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      **input = **input | 0x200;\n      input[0xc] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      if (*(char *)((int)input + 0x3e) == '@') {\n        *(undefined *)((int)input + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)input + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      input[0xc] = (uint *)0x11;\n      *(undefined *)((int)input + 0x3e) = 0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)input + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)input + 0x2a) == 0) {\n      (*input)[1] = (*input)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)input + 0x3e) == '@') {\n      if (input[0x14] == (uint *)0x0) {\n        if (input[0x13] == (uint *)0x1) {\n          (*input)[4] = (uint)input[0x12] & 0xff;\n          input[0x14] = (uint *)((int)input[0x14] + 2);\n        }\n        else {\n          (*input)[4] = (uint)((int)input[0x12] << 0x10) >> 0x18;\n          input[0x14] = (uint *)((int)input[0x14] + 1);\n        }\n      }\n      else if (input[0x14] == (uint *)0x1) {\n        (*input)[4] = (uint)input[0x12] & 0xff;\n        input[0x14] = (uint *)((int)input[0x14] + 1);\n      }\n      else if (input[0x14] == (uint *)0x2) {\n        if (*(char *)((int)input + 0x3d) == '\\\"') {\n          **input = **input | 0x100;\n        }\n        else if (*(char *)((int)input + 0x3d) == '!') {\n          ptrValue = input[9];\n          input[9] = (uint *)((int)ptrValue + 1);\n          (*input)[4] = (uint)*(byte *)ptrValue;\n          *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrValue = input[9];\n      input[9] = (uint *)((int)ptrValue + 1);\n      (*input)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_input_08002db2",
                "param_1": "input",
                "cVar1": "charValue",
                "puVar2": "ptrValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_param_08002efc",
            "code": "\nundefined4 processParam_08002efc(uint **params)\n\n{\n  uint *paramB;\n  \n  paramB = params[0xb];\n  if (*(char *)((int)params + 0x3d) == '!') {\n    if (*(short *)((int)params + 0x2a) == 0) {\n      if (((paramB == (uint *)0x4) || (paramB == (uint *)0x8)) || (paramB == (uint *)0xffff0000)) {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        **params = **params | 0x200;\n        paramC = (uint *)0x0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        if (*(char *)((int)params + 0x3e) == '@') {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        paramC = (uint *)0x11;\n        *(undefined *)((int)params + 0x3e) = 0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      paramB = params[9];\n      params[9] = (uint *)((int)paramB + 1);\n      (*params)[4] = (uint)*(byte *)paramB;\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_param_08002efc",
                "param_1": "params",
                "puVar1": "paramB",
                "param_1[0xc]": "paramC"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_param_08002f9c",
            "code": "\nundefined4 processParam_08002f9c(uint **param)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)param + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)param + 0x2a) < 4) {\n      if (*(ushort *)((int)param + 0x2a) - 2 < 2) {\n        if (param[0xb] == (uint *)0x2) {\n          **param = **param | 0x400;\n        }\n        else {\n          **param = **param & 0xfffffbff;\n          **param = **param | 0x800;\n        }\n        (*param)[1] = (*param)[1] & 0xfffffbff;\n      }\n      else {\n        if (param[0xb] == (uint *)0x2) {\n          **param = **param | 0x400;\n        }\n        else {\n          **param = **param & 0xfffffbff;\n        }\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        ptr = param[9];\n        param[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)(*param)[4];\n        *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        param[0xc] = (uint *)0x0;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      ptr = param[9];\n      param[9] = (uint *)((int)ptr + 1);\n      *(char *)ptr = (char)(*param)[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_param_08002f9c",
                "param_1": "param",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **paramArray)\n\n{\n  uint *pointerVar1;\n  \n  pointerVar1 = paramArray[0xb];\n  if (*(short *)((int)paramArray + 0x2a) == 3) {\n    if (((pointerVar1 == (uint *)0x4) || (pointerVar1 == (uint *)0x8)) || (pointerVar1 == (uint *)0xffff0000)) {\n      **paramArray = **paramArray & 0xfffffbff;\n    }\n    pointerVar1 = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  else if (*(short *)((int)paramArray + 0x2a) == 2) {\n    if (((pointerVar1 == (uint *)0x4) || (pointerVar1 == (uint *)0x8)) || (pointerVar1 == (uint *)0xffff0000)) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffcff;\n      **paramArray = **paramArray | 0x200;\n    }\n    else {\n      if (pointerVar1 == (uint *)0x2) {\n        **paramArray = **paramArray | 0x400;\n      }\n      else {\n        **paramArray = **paramArray & 0xfffffbff;\n      }\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffcff;\n    }\n    pointerVar1 = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    pointerVar1 = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    paramArray[0xc] = (uint *)0x0;\n    if (*(char *)((int)paramArray + 0x3e) == '@') {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    pointerVar1 = paramArray[9];\n    paramArray[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*paramArray)[4];\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "paramArray",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "handle_parameter_0800316c",
            "code": "\nvoid handleParameter_0800316c(uint **param)\n\n{\n  int returnValue;\n  uint *charPtr;\n  uint *paramPtr;\n  \n  if (*(byte *)((int)param + 0x3d) - 0x29 < 2) {\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)param + 0x3d) != '`') && (((*param)[1] & 0x800) == 0)) {\n      *(undefined *)((int)param + 0x3d) = 0x20;\n    }\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3e) = 0;\n  }\n  **param = **param & 0xfffff7ff;\n  paramPtr = *param;\n  if ((paramPtr[1] & 0x800) == 0) {\n    if (*(char *)((int)param + 0x3d) == '`') {\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      param[0x10] = (uint *)0x0;\n      if ((paramPtr[5] & 0x40) != 0) {\n        charPtr = param[9];\n        param[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)paramPtr[4];\n      }\n      **param = **param & 0xfffffffe;\n      FUNC_0800316a(param);\n    }\n    else {\n      if ((paramPtr[5] & 0x40) != 0) {\n        charPtr = param[9];\n        param[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)paramPtr[4];\n      }\n      FUN_08004ef4(param);\n    }\n  }\n  else {\n    paramPtr[1] = paramPtr[1] & 0xfffff7ff;\n    if (*(char *)((int)param[0xd] + 0x21) == '\\x01') {\n      param[0xe][0xd] = (uint)&label1;\n      returnValue = FUN_0800258c(param[0xe]);\n      if (returnValue != 0) {\n        if (((*param)[5] & 0x40) != 0) {\n          paramPtr = param[9];\n          param[9] = (uint *)((int)paramPtr + 1);\n          *(char *)paramPtr = (char)(*param)[4];\n        }\n        **param = **param & 0xfffffffe;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xe][0xd])();\n      }\n    }\n    else {\n      param[0xd][0xd] = (uint)&label1;\n      returnValue = FUN_0800258c(param[0xd]);\n      if (returnValue != 0) {\n        **param = **param & 0xfffffffe;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)param + 0x3d) == constant11) && (((uint)param[0x10] & 4) != 0)) {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_08004ec4(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "handle_parameter_0800316c",
                "param_1": "param",
                "iVar1": "returnValue",
                "puVar2": "charPtr",
                "puVar3": "paramPtr",
                "LAB_080035fc_1": "label1",
                "'('": "constant11"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_parameter_080032b4",
            "code": "\nundefined4 processParameter_080032b4(uint **parameter)\n\n{\n  char charValue;\n  uint *pointerVar1;\n  uint *pointerVar2;\n  \n  charValue = *(char *)((int)parameter + 0x3d);\n  (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n  **parameter = **parameter | 1;\n  **parameter = **parameter & 0xfffffbff;\n  pointerVar1 = *parameter;\n  if ((pointerVar1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameter + 0x3d) == '\\\"') || (*(char *)((int)parameter + 0x3d) == '*')) {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    if ((pointerVar1[5] & 4) != 0) {\n      pointerVar2 = parameter[9];\n      parameter[9] = (uint *)((int)pointerVar2 + 1);\n      *(char *)pointerVar2 = (char)pointerVar1[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    if (((*parameter)[5] & 0x40) != 0) {\n      pointerVar1 = parameter[9];\n      parameter[9] = (uint *)((int)pointerVar1 + 1);\n      *(char *)pointerVar1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n  }\n  if (parameter[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      parameter[0xb] = (uint *)0xffff0000;\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((parameter[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_parameter_080032b4",
                "param_1": "parameter",
                "cVar1": "charValue",
                "puVar2": "pointerVar1",
                "puVar3": "pointerVar2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "check_and_execute_operations_080033b8",
            "code": "\nvoid checkAndExecuteOperations_080033b8(int *inputData)\n\n{\n  int inputValue;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  inputValue = *inputData;\n  flag3 = *(uint *)(inputValue + 0x18);\n  flag1 = *(uint *)(inputValue + 0x14);\n  flag2 = *(uint *)(inputValue + 4);\n  if ((*(char *)((int)inputData + 0x3e) == '\\x10') || (*(char *)((int)inputData + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080028de(inputData);\n        }\n      }\n      else {\n        FUN_080028d2(inputData);\n      }\n    }\n    else {\n      FUN_08002848(inputData);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002f9c(inputData);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800306c(inputData);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002db2(inputData);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002efc(inputData);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_080032b4(inputData);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002ca6(inputData);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ad8(inputData);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08002c54(inputData);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08002ab8(inputData);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "check_and_execute_operations_080033b8",
                "param_1": "inputData",
                "iVar1": "inputValue",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_status_flags_08003520",
            "code": "\nvoid updateStatusFlags_08003520(uint **param)\n\n{\n  char characterVar;\n  uint *ptrVar;\n  uint flagVar1;\n  uint flagVar2;\n  \n  ptrVar = *param;\n  flagVar1 = ptrVar[5];\n  flagVar2 = ptrVar[1];\n  if (((flagVar1 & 0x10100) != 0) && ((flagVar2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 1);\n    ptrVar[5] = 0xfffffeff;\n    **param = **param | 0x8000;\n  }\n  if (((flagVar1 & 0x10200) != 0) && ((flagVar2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 2);\n    (*param)[5] = 0xfffffdff;\n  }\n  if (((flagVar1 & 0x10400) != 0) && ((flagVar2 & 0x100) != 0)) {\n    characterVar = *(char *)((int)param + 0x3d);\n    if (((*(char *)((int)param + 0x3e) == ' ') && (*(short *)((int)param + 0x2a) == 0)) &&\n       (((characterVar == '!' || (characterVar == ')')) || ((characterVar == '(' && (param[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(param);\n    }\n    else {\n      param[0x10] = (uint *)((uint)param[0x10] | 4);\n      if (*(char *)((int)param + 0x3e) == '\\x10') {\n        **param = **param | 0x200;\n      }\n      (*param)[5] = 0xfffffbff;\n    }\n  }\n  if (((flagVar1 & 0x10800) != 0) && ((flagVar2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 8);\n    (*param)[5] = 0xfffff7ff;\n  }\n  if (param[0x10] != (uint *)0x0) {\n    FUN_0800316c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_status_flags_08003520",
                "param_1": "param",
                "cVar1": "characterVar",
                "puVar2": "ptrVar",
                "uVar3": "flagVar1",
                "uVar4": "flagVar2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "countdown_0800365c",
            "code": "\nvoid countdown_0800365c(int input_value)\n\n{\n  bool bVar1;\n  int calculated_value;\n  \n  calculated_value = input_value * (DAT_20000084 / 8000);\n  do {\n    bVar1 = calculated_value != 0;\n    calculated_value = calculated_value + -1;\n  } while (bVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "countdown_0800365c",
                "param_1": "input_value",
                "local_4": "calculated_value"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_and_control_devices_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkAndControlDevices_08003688(uint *deviceFlags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint deviceParameter;\n  bool isFlagSet;\n  \n  if ((*deviceFlags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (deviceFlags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      deviceParameter = deviceFlags[1];\n      if (deviceParameter == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (deviceParameter == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (deviceParameter == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (deviceFlags[1] == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*deviceFlags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (deviceFlags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | deviceFlags[5] << 3;\n    }\n    else if (deviceFlags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | deviceFlags[5] << 3;\n    }\n  }\n  if ((*deviceFlags & 8) != 0) {\n    if (deviceFlags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*deviceFlags & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    deviceParameter = deviceFlags[3];\n    if (deviceParameter == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (deviceParameter == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (deviceParameter == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (deviceFlags[3] == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (deviceFlags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (deviceFlags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (deviceFlags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | deviceFlags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | deviceFlags[8] | deviceFlags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_and_control_devices_08003688",
                "param_1": "deviceFlags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "deviceParameter",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_execution_time_08003a68",
            "code": "\n\n\nuint calculateExecutionTime_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 counter;\n  undefined4 multiplier1;\n  undefined4 multiplier2;\n  undefined4 multiplier3;\n  undefined4 multiplier4;\n  \n  multiplier4 = 0x10100f0e;\n  multiplier3 = 0xd0c0b0a;\n  multiplier2 = 0x9080706;\n  multiplier1 = 0x5040302;\n  counter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&multiplier1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&counter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_execution_time_08003a68",
                "local_1c": "counter",
                "uStack_18": "multiplier1",
                "uStack_14": "multiplier2",
                "uStack_10": "multiplier3",
                "uStack_c": "multiplier4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "check_and_update_configuration_08003ad4",
            "code": "\n\n\nundefined4 check_and_update_configuration_08003ad4(uint *config_values,uint config_size)\n\n{\n  int iVar1;\n  int iVar2;\n  uint config_mode;\n  \n  if ((_DAT_40022000 & 7) < config_size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_values & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | config_values[2];\n  }\n  if ((*config_values & 1) != 0) {\n    config_mode = config_values[1];\n    if (config_mode == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((config_mode != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = config_mode | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08001cc4();\n    if (config_values[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (config_values[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (config_size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*config_values & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | config_values[3];\n  }\n  if ((*config_values & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | config_values[4] << 3;\n  }\n  config_mode = FUN_08003a68();\n  DAT_20000084 = config_mode >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "check_and_update_configuration_08003ad4",
                "param_1": "config_values",
                "param_2": "config_size",
                "uVar3": "config_mode"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "handle_param_08003afa",
            "code": "\n\n\nundefined4 handle_param_08003afa(uint *param_flags,uint max_value)\n\n{\n  int initial_time;\n  int current_time;\n  uint status;\n  \n  if ((*param_flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | param_flags[2];\n  }\n  if ((*param_flags & 1) != 0) {\n    status = param_flags[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    initial_time = FUN_08001cc4();\n    if (param_flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (param_flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (max_value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | max_value;\n    if (max_value != (max_value & 7)) {\n      return 1;\n    }\n  }\n  if ((*param_flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | param_flags[3];\n  }\n  if ((*param_flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | param_flags[4] << 3;\n  }\n  status = FUN_08003a68();\n  DAT_20000084 = status >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "handle_param_08003afa",
                "param_1": "param_flags",
                "param_2": "max_value",
                "iVar1": "initial_time",
                "iVar2": "current_time",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_data_value_08003c44",
            "code": "\nundefined4 get_data_value_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_data_value_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "calculate_shifted_value_08003c50",
            "code": "\n\n\nuint calculateShiftedValue_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "calculate_shifted_value_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "get_shifted_value_08003c70",
            "code": "\n\n\nuint getShiftedValue_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "get_shifted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_settings_08003c90",
            "code": "\n\n\nundefined4 updateSettings_08003c90(uint *settings)\n\n{\n  uint temp1;\n  uint temp2;\n  int startValue;\n  int endValue;\n  bool flag;\n  \n  if ((*settings & 1) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startValue = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        endValue = FUN_08001cc4();\n        if (100 < (uint)(endValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settings[1] & 0x300))) {\n      temp2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp2;\n      if (temp1 != 0) {\n        startValue = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          endValue = FUN_08001cc4();\n          if (5000 < (uint)(endValue - startValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settings[1];\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | settings[2];\n  }\n  if ((*settings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | settings[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_settings_08003c90",
                "param_1": "settings",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "startValue",
                "iVar4": "endValue",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_parameter_08003da4",
            "code": "\n\n\nuint calculateParameter_08003da4(int input)\n\n{\n  uint result;\n  undefined2 constant;\n  undefined4 offset;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  value3 = 0x10100f0e;\n  value2 = 0xd0c0b0a;\n  value1 = 0x9080706;\n  offset = 0x5040302;\n  constant = 0x201;\n  if (input == 2) {\n    result = FUN_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&offset + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_parameter_08003da4",
                "param_1": "input",
                "uVar1": "result",
                "local_24": "constant",
                "uStack_20": "offset",
                "uStack_1c": "value1",
                "uStack_18": "value2",
                "uStack_14": "value3"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "check_and_update_flags_08003ea0",
            "code": "\n\n\nvoid checkAndUpdateFlags_08003ea0(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "check_and_update_flags_08003ea0",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_flags_and_call_function_08003ed8",
            "code": "\nvoid updateFlagsAndCallFunction_08003ed8(uint **functionPointer)\n\n{\n  uint *pointerVar1;\n  \n  *(undefined *)((int)functionPointer + 0x3d) = 2;\n  pointerVar1 = *functionPointer;\n  if ((pointerVar1[8] & 0x1111) == 0) {\n    if ((pointerVar1[8] & 0x444) == 0) {\n      *pointerVar1 = *pointerVar1 & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(functionPointer);\n  *(undefined *)((int)functionPointer + 0x3d) = 0;\n  *(undefined *)(functionPointer + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_flags_and_call_function_08003ed8",
                "param_1": "functionPointer",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_parameters_08003f18",
            "code": "\nvoid processParameters_08003f18(int *parameters)\n\n{\n  int value;\n  \n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(parameters + 7) = 1;\n    if ((*(uint *)(*parameters + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(parameters);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(parameters + 7) = 0;\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(parameters + 7) = 2;\n    if ((*(uint *)(*parameters + 0x18) & 0x300) == 0) {\n      FUN_08004df8(parameters);\n      FUNC_08003f14(parameters);\n    }\n    else {\n      FUNC_08003f12(parameters);\n    }\n    *(undefined *)(parameters + 7) = 0;\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(parameters + 7) = 4;\n    if ((*(uint *)(*parameters + 0x1c) & 3) == 0) {\n      FUN_08004df8(parameters);\n      FUNC_08003f14(parameters);\n    }\n    else {\n      FUNC_08003f12(parameters);\n    }\n    *(undefined *)(parameters + 7) = 0;\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(parameters + 7) = 8;\n    if ((*(uint *)(*parameters + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(parameters);\n      FUNC_08003f14(parameters);\n    }\n    else {\n      FUNC_08003f12(parameters);\n    }\n    *(undefined *)(parameters + 7) = 0;\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(parameters);\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(parameters);\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(parameters);\n  }\n  value = *parameters;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_parameters_08003f18",
                "param_1": "parameters",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bitwise_value_08004092",
            "code": "\nvoid updateBitwiseValue_08004092(int ptr_value,uint bit_position,int new_bit_value)\n\n{\n  *(uint *)(ptr_value + 0x20) = *(uint *)(ptr_value + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(ptr_value + 0x20) = *(uint *)(ptr_value + 0x20) | new_bit_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bitwise_value_08004092",
                "param_1": "ptr_value",
                "param_2": "bit_position",
                "param_3": "new_bit_value"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "initialize_memory_080040b0",
            "code": "\nundefined4 initializeMemory_080040b0(uint **memoryBlock,undefined4 size)\n\n{\n  uint *ptrToMemoryBlock;\n  \n  FUN_08004092(*memoryBlock,size,0);\n  if (((*memoryBlock == (uint *)0x40012c00) && ((statusFlag1 & 0x1111) == 0)) &&\n     ((statusFlag1 & 0x444) == 0)) {\n    statusFlag2 = statusFlag2 & 0xffff7fff;\n  }\n  ptrToMemoryBlock = *memoryBlock;\n  if (((ptrToMemoryBlock[8] & 0x1111) == 0) && ((ptrToMemoryBlock[8] & 0x444) == 0)) {\n    *ptrToMemoryBlock = *ptrToMemoryBlock & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryBlock + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "initialize_memory_080040b0",
                "param_1": "memoryBlock",
                "param_2": "size",
                "puVar1": "ptrToMemoryBlock",
                "uRam40012c20": "statusFlag1",
                "uRam40012c44": "statusFlag2"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_flag_08004110",
            "code": "\nvoid updateFlag_08004110(int baseAddress,uint bitPosition,int valueToUpdate)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | valueToUpdate << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_flag_08004110",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "valueToUpdate"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_permissions_0800412c",
            "code": "\nundefined4 updatePermissions_0800412c(uint **ptrArray,undefined4 param)\n\n{\n  uint *ptr1;\n  \n  FUN_08004110(*ptrArray,param,0);\n  ptr1 = *ptrArray;\n  if (((ptr1[8] & 0x1111) == 0) && ((ptr1[8] & 0x444) == 0)) {\n    ptr1[0x11] = ptr1[0x11] & 0xffff7fff;\n  }\n  ptr1 = *ptrArray;\n  if (((ptr1[8] & 0x1111) == 0) && ((ptr1[8] & 0x444) == 0)) {\n    *ptr1 = *ptr1 & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_permissions_0800412c",
                "param_1": "ptrArray",
                "param_2": "param",
                "puVar1": "ptr1"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "sanitize_data_0800417c",
            "code": "\nvoid sanitizeData_0800417c(int *dataPointer)\n\n{\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xfffffedf;\n  *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "sanitize_data_0800417c",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "parse_data_08004198",
            "code": "\nundefined4 parse_data_08004198(int *input_data)\n\n{\n  short remaining_iterations;\n  byte *current_byte;\n  \n  if (*(char *)((int)input_data + 0x39) != '!') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    *(uint *)(*input_data + 4) = *(ushort *)input_data[8] & 0x1ff;\n    if (input_data[4] == 0) {\n      input_data[8] = input_data[8] + 2;\n    }\n    else {\n      input_data[8] = input_data[8] + 1;\n    }\n  }\n  else {\n    current_byte = (byte *)input_data[8];\n    input_data[8] = (int)(current_byte + 1);\n    *(uint *)(*input_data + 4) = (uint)*current_byte;\n  }\n  remaining_iterations = *(short *)((int)input_data + 0x26) + -1;\n  *(short *)((int)input_data + 0x26) = remaining_iterations;\n  if (remaining_iterations == 0) {\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xffffff7f;\n    *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "parse_data_08004198",
                "param_1": "input_data",
                "sVar1": "remaining_iterations",
                "pbVar2": "current_byte"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_and_update_values_08004204",
            "code": "\nvoid calculateAndUpdateValues_08004204(int *inputArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int baseAddress;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  baseAddress = *inputArray;\n  if (baseAddress != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = inputArray[1];\n    result2 = FUN_08003c50();\n    result7 = inputArray[1];\n    result3 = FUN_08003c50();\n    result8 = inputArray[1];\n    result4 = FUN_08003c50();\n    result9 = inputArray[1];\n    result5 = FUN_08003c50();\n    *(uint *)(baseAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  baseAddress = FUN_08003c70();\n  result5 = inputArray[1];\n  result1 = FUN_08003c70();\n  result6 = inputArray[1];\n  result2 = FUN_08003c70();\n  result7 = inputArray[1];\n  result3 = FUN_08003c70();\n  result8 = inputArray[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(baseAddress * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_and_update_values_08004204",
                "param_1": "inputArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "baseAddress"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_param_080043b4",
            "code": "\nundefined4 check_param_080043b4(uint **input_ptr,uint value,uint expected_result,int initial_value,uint maximum_value)\n\n{\n  int result;\n  \n  do {\n    if (((value & ~**input_ptr) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((maximum_value == 0xffffffff) ||\n          ((maximum_value != 0 && (result = FUN_08001cc4(), (uint)(result - initial_value) <= maximum_value))));\n  (*input_ptr)[3] = (*input_ptr)[3] & 0xfffffe5f;\n  (*input_ptr)[5] = (*input_ptr)[5] & 0xfffffffe;\n  *(undefined *)((int)input_ptr + 0x39) = 0x20;\n  *(undefined *)((int)input_ptr + 0x3a) = 0x20;\n  *(undefined *)(input_ptr + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_param_080043b4",
                "param_1": "input_ptr",
                "param_2": "value",
                "param_3": "expected_result",
                "param_4": "initial_value",
                "param_5": "maximum_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "validate_and_process_data_0800441a",
            "code": "\nundefined4 validateAndProcessData_0800441a(int *data)\n\n{\n  if (data != (int *)0x0) {\n    if (*(char *)((int)data + 0x39) == '\\0') {\n      *(undefined *)(data + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)data + 0x39) = 0x24;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffdfff;\n    FUN_08004204(data);\n    *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xffffb7ff;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xffffffd5;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)data + 0x39) = 0x20;\n    *(undefined *)((int)data + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "validate_and_process_data_0800441a",
                "param_1": "data",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "decode_and_process_data_08004478",
            "code": "\nundefined4 decode_and_process_data_08004478(int *data_array,ushort *data_ptr,int data_length,undefined4 flag)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)data_array + 0x39) == ' ') {\n    if (data_ptr == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (data_length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(data_array + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(data_array + 0xe) = 1;\n      data_array[0xf] = 0;\n      *(undefined *)((int)data_array + 0x39) = 0x21;\n      status = FUN_08001cc4();\n      *(short *)(data_array + 9) = (short)data_length;\n      *(short *)((int)data_array + 0x26) = (short)data_length;\n      while (*(short *)((int)data_array + 0x26) != 0) {\n        *(short *)((int)data_array + 0x26) = *(short *)((int)data_array + 0x26) + -1;\n        if (data_array[2] == 0x1000) {\n          result = FUN_080043b4(data_array,0x80,0,status,flag);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_array + 4) = *data_ptr & 0x1ff;\n          if (data_array[4] == 0) {\n            data_ptr = data_ptr + 1;\n          }\n          else {\n            data_ptr = (ushort *)((int)data_ptr + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(data_array,0x80,0,status,flag);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_array + 4) = (uint)*(byte *)data_ptr;\n          data_ptr = (ushort *)((int)data_ptr + 1);\n        }\n      }\n      result = FUN_080043b4(data_array,0x40,0,status,flag);\n      if (result == 0) {\n        *(undefined *)((int)data_array + 0x39) = 0x20;\n        *(undefined *)(data_array + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "decode_and_process_data_08004478",
                "param_1": "data_array",
                "param_2": "data_ptr",
                "param_3": "data_length",
                "param_4": "flag",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_and_set_data_0800455a",
            "code": "\nundefined4 validate_and_set_data_0800455a(int *data_array,int param_2_value,int param_3_value)\n\n{\n  if (*(char *)((int)data_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (param_2_value == 0) {\n    return 1;\n  }\n  if (param_3_value == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    data_array[8] = param_2_value;\n    *(short *)(data_array + 9) = (short)param_3_value;\n    *(short *)((int)data_array + 0x26) = (short)param_3_value;\n    data_array[15] = 0;\n    *(undefined *)((int)data_array + 0x39) = 0x21;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_and_set_data_0800455a",
                "param_1": "data_array",
                "param_2": "param_2_value",
                "param_3": "param_3_value",
                "param_1[8]": "data_array[8]",
                "param_1[0xf]": "data_array[15]"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_input_080045a2",
            "code": "\nundefined4 validate_input_080045a2(int *input_array,int param_2_value,int param_3_value)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (param_2_value == 0) {\n    return 1;\n  }\n  if (param_3_value == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = param_2_value;\n    *(short *)(input_array + 0xb) = (short)param_3_value;\n    *(short *)((int)input_array + 0x2e) = (short)param_3_value;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_input_080045a2",
                "param_1": "input_array",
                "param_2": "param_2_value",
                "param_3": "param_3_value"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "clear_bit_and_set_character_080045fe",
            "code": "\nundefined4 clearBitAndSetCharacter_080045fe(int *inputPointer)\n\n{\n  *(unsignedInt *)(*inputPointer + 0xc) = *(unsignedInt *)(*inputPointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputPointer + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "clear_bit_and_set_character_080045fe",
                "param_1": "inputPointer",
                "uint": "unsignedInt"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "decode_string_08004618",
            "code": "\nundefined4 decode_string_08004618(int *input_data)\n\n{\n  byte *byte_ptr;\n  short remaining_string_length;\n  undefined *undefined_ptr;\n  \n  if (*(char *)((int)input_data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    if (input_data[4] == 0) {\n      *(ushort *)input_data[10] = (ushort)((uint)(*(int *)(*input_data + 4) << 0x17) >> 0x17);\n      input_data[10] = input_data[10] + 2;\n    }\n    else {\n      *(ushort *)input_data[10] = (ushort)*(undefined4 *)(*input_data + 4) & 0xff;\n      input_data[10] = input_data[10] + 1;\n    }\n  }\n  else if (input_data[4] == 0) {\n    undefined_ptr = (undefined *)input_data[10];\n    input_data[10] = (int)(undefined_ptr + 1);\n    *undefined_ptr = (char)*(undefined4 *)(*input_data + 4);\n  }\n  else {\n    byte_ptr = (byte *)input_data[10];\n    input_data[10] = (int)(byte_ptr + 1);\n    *byte_ptr = (byte)*(undefined4 *)(*input_data + 4) & 0x7f;\n  }\n  remaining_string_length = *(short *)((int)input_data + 0x2e) + -1;\n  *(short *)((int)input_data + 0x2e) = remaining_string_length;\n  if (remaining_string_length != 0) {\n    return 0;\n  }\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xffffffdf;\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xfffffeff;\n  *(uint *)(*input_data + 0x14) = *(uint *)(*input_data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input_data + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "decode_string_08004618",
                "param_1": "input_data",
                "pbVar1": "byte_ptr",
                "sVar2": "remaining_string_length",
                "puVar3": "undefined_ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "check_and_perform_actions_080046b8",
            "code": "\nvoid checkAndPerformActions_080046b8(uint **parameters)\n\n{\n  int result;\n  uint value1;\n  uint *pointer;\n  uint value2;\n  uint value3;\n  \n  pointer = *parameters;\n  value3 = *pointer;\n  value1 = pointer[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    FUN_08004618(parameters);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((value2 = pointer[5] & 1, value2 == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      FUN_08004198(parameters);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      FUN_080045fe(parameters);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 1);\n    }\n    if (((value3 & 4) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 2);\n    }\n    if (((value3 & 2) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 4);\n    }\n    if (((value3 & 8) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 8);\n    }\n    if (parameters[0xf] != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        FUN_08004618(parameters);\n      }\n      if ((((uint)parameters[0xf] & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_08005650(parameters);\n        parameters[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(parameters);\n      pointer = *parameters;\n      if ((pointer[5] & 0x40) == 0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      pointer[5] = pointer[5] & 0xffffffbf;\n      if (parameters[0xd] == (uint *)0x0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      parameters[0xd][0xd] = (uint)&LAB_080047d8_1;\n      result = FUN_0800258c(parameters[0xd]);\n      if (result != 0) {\n        (*(code *)parameters[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "check_and_perform_actions_080046b8",
                "param_1": "parameters",
                "iVar1": "result",
                "uVar2": "value1",
                "puVar3": "pointer",
                "uVar4": "value2",
                "uVar5": "value3"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "get_bit_value_080047f4",
            "code": "\nuint get_bit_value_080047f4(uint input_value,int data_ptr)\n\n{\n  return *(uint *)(data_ptr + ((input_value << 0x18) >> 0x1c) * 4) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "get_bit_value_080047f4",
                "param_1": "input_value",
                "param_2": "data_ptr"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_value_at_index_0800480a",
            "code": "\nvoid setBitValueAtIndex_0800480a(uint index,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (index << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (index & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_value_at_index_0800480a",
                "param_1": "index",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_08004828",
            "code": "\nvoid updateBit_08004828(uint bitIndex,int data)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(data + shiftedIndex * 4) = *(uint *)(data + shiftedIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_08004828",
                "param_1": "bitIndex",
                "param_2": "data",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_address_08004848",
            "code": "\nundefined4 getMemoryAddress_08004848(undefined4 inputParam)\n\n{\n  switch(inputParam) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_memory_region_and_address_08004884",
            "code": "\n\n\nundefined4 setMemoryRegionAndAddress_08004884(undefined4 regionIndex)\n\n{\n  undefined4 returnAddress;\n  \n  switch(regionIndex) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnAddress = 0x40011800;\n    break;\n  default:\n    returnAddress = 0;\n  }\n  return returnAddress;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_memory_region_and_address_08004884",
                "param_1": "regionIndex",
                "uVar1": "returnAddress"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "validate_input_0800492c",
            "code": "\nuint validate_input_0800492c(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08004cce(input_param_1,&DAT_08007400,input_param_3,input_param_4,input_param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "validate_input_0800492c",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "determine_output_value_08004948",
            "code": "\nundefined4 determineOutputValue_08004948(undefined4 inputValue,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 unusedParam3)\n\n{\n  int returnValue;\n  uint shiftedValue;\n  \n  returnValue = FUN_08004cce(inputValue,&DAT_080074b4,unusedParam2,unusedParam3,unusedParam3);\n  shiftedValue = (uint)(returnValue << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "determine_output_value_08004948",
                "param_1": "inputValue",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "unusedParam3",
                "iVar1": "returnValue",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "apply_flag_to_value_08004974",
            "code": "\n\n\nvoid applyFlagToValue_08004974(int *inputValue,undefined4 flag)\n\n{\n  undefined4 result;\n  uint updatedFlag;\n  int oldValue;\n  uint bitMask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  oldValue = *inputValue;\n  if (oldValue == 0x40012400) {\n    updatedFlag = _DAT_40021018 | 0x200;\n    oldValue = 0x200;\n    _DAT_40021018 = updatedFlag;\n  }\n  else {\n    updatedFlag = 0x40012800;\n    if (oldValue == 0x40012800) {\n      updatedFlag = _DAT_40021018 | 0x400;\n      oldValue = 0x400;\n      _DAT_40021018 = updatedFlag;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,flag,updatedFlag,oldValue);\n  bitMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "apply_flag_to_value_08004974",
                "param_1": "inputValue",
                "param_2": "flag",
                "uVar1": "result",
                "uVar2": "updatedFlag",
                "iVar3": "oldValue",
                "local_18": "bitMask",
                "local_14": "constant1",
                "local_10": "constant2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_memory_config_080049f0",
            "code": "\n\n\nvoid updateMemoryConfig_080049f0(int *memoryConfig)\n\n{\n  if (*memoryConfig != 0x40012400) {\n    if (*memoryConfig == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_memory_config_080049f0",
                "param_1": "memoryConfig"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "verify_input_and_process_08004a4c",
            "code": "\nundefined2 verify_input_and_process_08004a4c(undefined4 input_data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000080 = (undefined)input_data;\n    iVar1 = FUN_0800213c(&buffer);\n    if (iVar1 == 0) {\n      length = FUN_0800492c(input_data);\n      if (length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_08001e48(&buffer,&length);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08002384(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08002004(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_08001cd0(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08001f80(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  result = FUN_08001e40(&buffer);\n                }\n                iVar1 = FUN_08002348(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_0800224c(&buffer);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "verify_input_and_process_08004a4c",
                "param_1": "input_data",
                "local_46": "result",
                "local_44": "length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_08004b34",
            "code": "\nvoid initialize_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid processData_08004b3c(undefined4 inputData)\n\n{\n  int result;\n  uint flags;\n  int array [17];\n  \n  array[0] = FUN_08004c78(inputData,&DAT_080074b4);\n  if ((array[0] != 0) &&\n     ((((result = FUN_08004948(inputData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(inputData,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(array,result);\n    }\n    else {\n      FUN_0800412c(array,result);\n    }\n    FUN_08003ed8(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_application_08004b94",
            "code": "\nvoid initialize_application_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_application_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_and_execute_08004b9e",
            "code": "\nvoid initialize_and_execute_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_and_execute_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "set_configuration_08004bb0",
            "code": "\n\n\nvoid set_configuration_08004bb0(uint device_id,undefined4 config_param_1,undefined4 config_param_2)\n\n{\n  undefined4 shifted_device_id;\n  uint bitmask;\n  undefined4 config_param_1_copy;\n  undefined4 config_param_2_copy;\n  undefined4 constant;\n  \n  shifted_device_id = FUN_08004884((device_id << 0x18) >> 0x1c);\n  bitmask = 1 << (device_id & 0xf) & 0xffff;\n  constant = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((device_id - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((device_id == 0xf) || (device_id == 0x13)) || (device_id == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  config_param_1_copy = config_param_1;\n  config_param_2_copy = config_param_2;\n  FUN_08002624(shifted_device_id,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "set_configuration_08004bb0",
                "param_1": "device_id",
                "param_2": "config_param_1",
                "param_3": "config_param_2",
                "uVar1": "shifted_device_id",
                "local_20": "bitmask",
                "local_1c": "config_param_1_copy",
                "local_18": "config_param_2_copy",
                "local_14": "constant"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "process_param_08004c30",
            "code": "\nvoid processParam_08004c30(undefined4 funcPtr,undefined2 dataPtr,int flag,undefined4 arg)\n\n{\n  if (flag == 0) {\n    FUN_0800281e(funcPtr,dataPtr,0,arg,arg);\n    return;\n  }\n  FUN_0800281e(funcPtr,dataPtr,1,arg,arg);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "process_param_08004c30",
                "param_1": "funcPtr",
                "param_2": "dataPtr",
                "param_3": "flag",
                "param_4": "arg"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_08004c48",
            "code": "\nvoid executeFunction_08004c48(undefined4 argument1,undefined2 argument2,undefined4 argument3,undefined4 argument4)\n\n{\n  FUN_08002810(argument1,argument2,argument3,argument4,argument4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_08004c48",
                "param_1": "argument1",
                "param_2": "argument2",
                "param_3": "argument3",
                "param_4": "argument4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "execute_initialization_08004c52",
            "code": "\nvoid executeInitialization_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "execute_initialization_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_in_list_08004c5e",
            "code": "\nundefined4 find_value_in_list_08004c5e(int value,char *list)\n\n{\n  while( true ) {\n    if (*list == -1) {\n      return 0;\n    }\n    if (*list == value) break;\n    list = list + 0xc;\n  }\n  return *(undefined4 *)(list + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_in_list_08004c5e",
                "param_1": "value",
                "param_2": "list"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_and_execute_function_08004c78",
            "code": "\nundefined4 checkAndExecuteFunction_08004c78(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_and_execute_function_08004c78",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_element_08004c8a",
            "code": "\nint find_element_08004c8a(int element,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == element) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_element_08004c8a",
                "param_1": "element",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_param_08004ca2",
            "code": "\nundefined4 check_param_08004ca2(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_param_08004ca2",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_index_08004cb2",
            "code": "\nundefined4 find_value_index_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_index_08004cb2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_param_08004cce",
            "code": "\nundefined4 checkParam_08004cce(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_param_08004cce",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int value_to_find,char *array_ptr)\n\n{\n  if (value_to_find == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0;\n    }\n    if (value_to_find == *array_ptr) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "value_to_find",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_min_08004d06",
            "code": "\nint compareAndReturnMin_08004d06(int result,int temp)\n\n{\n  if (result != temp) {\n    if (result == 0) {\n      return temp;\n    }\n    if (temp == 0) {\n      return result;\n    }\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_min_08004d06",
                "param_1": "result",
                "param_2": "temp"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_if_available_08004d18",
            "code": "\nvoid executeCallbackIfAvailable_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_if_available_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "wait_for_infinite_loop_08004d40",
            "code": "\nvoid waitForInfiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "wait_for_infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_registers_08004d44",
            "code": "\n\n\nvoid initializeRegisters_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_registers_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_data_08004d90",
            "code": "\n\n\nvoid updateData_08004d90(int *data)\n\n{\n  if (*data == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*data == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*data == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*data == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_data_08004d90",
                "param_1": "data"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtractFour_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParameter)\n\n{\n  int callbackResult;\n  \n  callbackResult = FUN_08004df4();\n  if ((*(callbackFunction **)(callbackResult + 0x4c) != (callbackFunction *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(callbackFunction **)(callbackResult + 0x4c))(callbackResult,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "callbackResult",
                "code": "callbackFunction"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_callback_08004e12",
            "code": "\nvoid executeCallback_08004e12(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004df4();\n  if (*(callbackFunction **)(returnValue + 0x48) != (callbackFunction *)0x0) {\n    (**(callbackFunction **)(returnValue + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_callback_08004e12",
                "iVar1": "returnValue",
                "code": "callbackFunction"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_execute_function_08004e20",
            "code": "\nvoid checkAndExecuteFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_execute_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtractFour_08004e70(int number)\n\n{\n  return number + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "number"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "update_data_08004e74",
            "code": "\nvoid updateData_08004e74(int input1,int input2,int input3,undefined4 input4)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004e70();\n  if (input3 == *(int *)(input1 + 0xc)) {\n    if (input2 == 0) {\n      *(undefined *)(returnValue + 0x88) = 0;\n      *(undefined *)(returnValue + 0x5c) = 0;\n      if (*(code **)(returnValue + 100) != (code *)0x0) {\n        (**(code **)(returnValue + 100))();\n      }\n      FUN_08002af8(input1,returnValue + 0x68,*(undefined *)(returnValue + 0x88),8);\n      return;\n    }\n    *(undefined *)(returnValue + 0x5c) = 1;\n    FUN_08002b84(input1,returnValue + 0x68,0x20,8,input4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "update_data_08004e74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_function_08004ec4",
            "code": "\nvoid executeFunction_08004ec4(undefined4 inputParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (((*(functionDataType **)(functionPointer + 0x60) != (functionDataType *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionDataType **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08002c10(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_function_08004ec4",
                "param_1": "inputParameter",
                "iVar1": "functionPointer",
                "code": "functionDataType"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_function_08004ef4",
            "code": "\nvoid checkAndExecuteFunction_08004ef4(undefined4 inputParameter)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(inputParameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_function_08004ef4",
                "param_1": "inputParameter",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "initialize_uart_08004f4c",
            "code": "\n\n\nvoid initializeUART_08004f4c(int *uartConfig)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 uartPinConfig;\n  uint gpioConfig;\n  uint pinMask;\n  uint pinConfig1;\n  uint pinConfig2;\n  undefined4 uartConfigLength;\n  \n  if (uartConfig != (int *)0x0) {\n    peripheral1 = FUN_08004c78((int)*(char *)(uartConfig + 0x16),&DAT_0800764c);\n    peripheral2 = FUN_08004c78((int)*(char *)((int)uartConfig + 0x59),&DAT_08007604);\n    if ((peripheral2 == 0) || (peripheral1 == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",peripheral2);\n    }\n    else {\n      peripheral1 = FUN_08004d06(peripheral1);\n      *uartConfig = peripheral1;\n      if (peripheral1 == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x25;\n        }\n        else if (peripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x26;\n        }\n        else if (peripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x27;\n        }\n        uartPinConfig = FUN_08004884((uint)((int)*(char *)((int)uartConfig + 0x59) << 0x18) >> 0x1c);\n        gpioConfig = FUN_08004cce((int)*(char *)((int)uartConfig + 0x59),&DAT_08007604);\n        pinMask = 1 << (*(byte *)((int)uartConfig + 0x59) & 0xf) & 0xffff;\n        pinConfig1 = (gpioConfig >> 3 & 1) << 4 | gpioConfig & 7;\n        pinConfig2 = (gpioConfig << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((gpioConfig << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartConfigLength = 3;\n        FUN_08002624(uartPinConfig,&pinMask);\n        uartPinConfig = FUN_08004884((uint)((int)*(char *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        gpioConfig = FUN_08004cce((int)*(char *)(uartConfig + 0x16),&DAT_0800764c);\n        pinMask = 1 << (*(byte *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        pinConfig1 = (gpioConfig >> 3 & 1) << 4 | gpioConfig & 7;\n        pinConfig2 = (gpioConfig << 0x1a) >> 0x1e;\n        FUN_08002624(uartPinConfig,&pinMask);\n        (&DAT_2000032c)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_0800441a(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "initialize_uart_08004f4c",
                "param_1": "uartConfig",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "uartPinConfig",
                "uVar4": "gpioConfig",
                "local_20": "pinMask",
                "local_1c": "pinConfig1",
                "local_18": "pinConfig2",
                "local_14": "uartConfigLength"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 value;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    value = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(value,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "check_data_validity_080053d4",
            "code": "\nuint check_data_validity_080053d4(undefined4 status,uint data)\n\n{\n  int initial_status;\n  int check_result;\n  uint index;\n  \n  initial_status = FUN_08001cc4();\n  check_result = FUN_08004c78(2,&DAT_0800764c);\n  if (check_result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (check_result = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != check_result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    check_result = FUN_08004478((&DAT_2000032c)[index],status,data & 0xffff,1000);\n    if (check_result == 0) {\n      return data;\n    }\n    check_result = FUN_08001cc4();\n  } while ((uint)(check_result - initial_status) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "check_data_validity_080053d4",
                "param_1": "status",
                "param_2": "data",
                "iVar1": "initial_status",
                "iVar2": "check_result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_flag_set_0800548c",
            "code": "\nbool isFlagSet_0800548c(int flagValue)\n\n{\n  uint flagMaskedValue;\n  \n  flagMaskedValue = FUN_080047e8((&DAT_2000032c)[*(byte *)(flagValue + 0x44)]);\n  return (flagMaskedValue & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_flag_set_0800548c",
                "param_1": "flagValue",
                "uVar1": "flagMaskedValue"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_flag_set_080054b0",
            "code": "\nbool isFlagSet_080054b0(int flag)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byteVal *)(flag + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_flag_set_080054b0",
                "param_1": "flag",
                "uVar1": "result",
                "byte": "byteVal"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_080054d4",
            "code": "\nundefined4 extract_data_080054d4(int data_address,undefined *extracted_data,undefined4 flag1,undefined4 flag2)\n\n{\n  int result;\n  \n  if (data_address == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *extracted_data = *(undefined *)(data_address + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(data_address + 0x44)],data_address + 0x45,1,&DAT_2000032c,flag2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_080054d4",
                "param_1": "data_address",
                "param_2": "extracted_data",
                "param_3": "flag1",
                "param_4": "flag2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int inputData,undefined4 newValue,undefined4 unused,undefined4 additionalData)\n\n{\n  int result;\n  uint index;\n  \n  if (inputData != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(inputData + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = inputData;\n      FUN_08002494((int)*(char *)(inputData + 0x5a),0,1,index,additionalData);\n      FUN_080024f8((int)*(char *)(inputData + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(inputData + 0x44)],inputData + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "inputData",
                "param_2": "newValue",
                "param_3": "unused",
                "param_4": "additionalData",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPointer,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (dataPointer != 0) {\n    index = *(byte *)(dataPointer + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)index * 4) = dataPointer;\n    FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_element_index_080055bc",
            "code": "\nuint find_element_index_080055bc(int num)\n\n{\n  uint index;\n  \n  if (num == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (num == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_element_index_080055bc",
                "param_1": "num",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_080055e0",
            "code": "\nvoid executeFunction_080055e0(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_080055bc();\n  if (functionIndex < 5) {\n    (**(code **)(&DAT_200002dc + functionIndex * 4))(*(undefined4 *)(&DAT_200002f0 + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_080055e0",
                "uVar1": "functionIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint randomValue;\n  int returnValue;\n  int ptrData;\n  \n  randomValue = FUN_080055bc();\n  ptrData = *(int *)(&DAT_20000318 + randomValue * 4);\n  if ((randomValue < 5) && (returnValue = (**(code **)(&DAT_20000304 + randomValue * 4))(ptrData), returnValue != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(ptrData + 0x44)],\n                 *(int *)(ptrData + 100) + (uint)*(ushort *)(ptrData + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "randomValue",
                "iVar2": "returnValue",
                "iVar3": "ptrData"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocate_memory_080056d8(int size)\n\n{\n  undefined *mem_ptr;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  mem_ptr = DAT_20000340;\n  if (DAT_20000340 + size <= end_of_stack) {\n    DAT_20000340 = DAT_20000340 + size;\n    return mem_ptr;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "mem_ptr",
                "&stack0x00000000": "end_of_stack"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_error_code_08005714",
            "code": "\nerror_code get_error_code_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_error_code_08005714",
                "undefined4": "error_code"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "set_page_size_0800571a",
            "code": "\nundefined4 setPageSize_0800571a(undefined4 flags,int buffer)\n\n{\n  *(undefined4 *)(buffer + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "set_page_size_0800571a",
                "param_1": "flags",
                "param_2": "buffer"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_08005724",
            "code": "\nstatus initialize_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_08005724",
                "undefined4": "status"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nundefined4 initializeApplication_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "get_error_code_0800572c",
            "code": "\nErrorCode getErrorCode_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "get_error_code_0800572c",
                "undefined4": "ErrorCode"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_function_08005730",
            "code": "\nvoid initializeFunction_08005730(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_function_08005730",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_08005750",
            "code": "\nundefined4 initialize_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "decode_and_shift_08005754",
            "code": "\nuint decode_and_shift_08005754(uint input_value)\n\n{\n  bool is_in_range;\n  char character;\n  uint result;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_in_range = true;\n    }\n    else {\n      is_in_range = false;\n    }\n  }\n  else {\n    is_in_range = input_value < 0x3c;\n  }\n  if (is_in_range) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    character = (&DAT_080076f0)[input_value];\n  }\n  else {\n    character = -1;\n  }\n  if (character == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "decode_and_shift_08005754",
                "param_1": "input_value",
                "bVar1": "is_in_range",
                "cVar2": "character",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "execute_operation_080057b4",
            "code": "\nvoid executeOperation_080057b4(uint operationIndex,undefined4 mode,undefined4 param_1,undefined *dataBuffer)\n\n{\n  int result;\n  undefined *tempDataBuffer;\n  int value;\n  \n  if (operationIndex < 0x3c) {\n    value = (int)(char)(&DAT_080076f0)[operationIndex];\n    tempDataBuffer = &DAT_080076f0;\n  }\n  else {\n    value = -1;\n    tempDataBuffer = dataBuffer;\n  }\n  if (value != -1) {\n    result = FUN_080047f4(value,&DAT_20000344,param_1,tempDataBuffer,dataBuffer);\n    if (result != 0) {\n      result = FUN_08004ce2(value,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(value);\n      }\n      FUN_08004828(value,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(value,0);\n      break;\n    case 1:\n      FUN_08004bb0(value,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(value,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(value,0,2);\n    }\n    FUN_0800480a(value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "execute_operation_080057b4",
                "param_1": "operationIndex",
                "param_2": "mode",
                "param_3": "param_1",
                "param_4": "dataBuffer",
                "iVar1": "result",
                "puVar2": "tempDataBuffer",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "extract_data_08005848",
            "code": "\nvoid extractData_08005848(uint dataIndex,undefined4 param2,undefined4 param3,undefined *dataBuffer)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *selectedBuffer;\n  uint selectedValue;\n  \n  if (dataIndex < 0x3c) {\n    selectedValue = (uint)(char)(&DAT_080076f0)[dataIndex];\n    selectedBuffer = &DAT_080076f0;\n  }\n  else {\n    selectedValue = 0xffffffff;\n    selectedBuffer = dataBuffer;\n  }\n  if ((selectedValue != 0xffffffff) &&\n     (result = FUN_080047f4(selectedValue,&DAT_20000358,param3,selectedBuffer,dataBuffer), result != 0)) {\n    shiftedValue = FUN_08004848((selectedValue << 0x18) >> 0x1c);\n    FUN_08004c30(shiftedValue,1 << (selectedValue & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "extract_data_08005848",
                "param_1": "dataIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "dataBuffer",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "selectedBuffer",
                "uVar4": "selectedValue"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_character_validity_08005890",
            "code": "\nchar checkCharacterValidity_08005890(uint character)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedValue;\n  uint characterIndex;\n  \n  if (character < 0x3c) {\n    characterIndex = (uint)(char)(&DAT_080076f0)[character];\n  }\n  else {\n    characterIndex = 0xffffffff;\n  }\n  if (characterIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_080047f4(characterIndex,&DAT_20000358);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08004848((characterIndex << 0x18) >> 0x1c);\n      isValid = FUN_08004c48(shiftedValue,1 << (characterIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_character_validity_08005890",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "characterIndex"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_result_0800591e",
            "code": "\nushort calculateResult_0800591e(int input)\n\n{\n  return (*(short *)(input + 0x134) + 0x40) - *(short *)(input + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_result_0800591e",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int dataPtr)\n\n{\n  int result;\n  ushort incrementedValue;\n  undefined newValue;\n  \n  result = FUN_080054d4(dataPtr,&newValue);\n  if ((result == 0) &&\n     (incrementedValue = *(short *)(dataPtr + 0x60) + 1U & 0x3f, incrementedValue != *(ushort *)(dataPtr + 0x62))) {\n    *(undefined *)(*(int *)(dataPtr + 0x5c) + (uint)*(ushort *)(dataPtr + 0x60)) = newValue;\n    *(ushort *)(dataPtr + 0x60) = incrementedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "dataPtr",
                "iVar1": "result",
                "uVar2": "incrementedValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_function_08005a44",
            "code": "\nvoid initializeFunction_08005a44(int functionArgument)\n\n{\n  *(int *)(functionArgument + 0x130) = functionArgument + 0x11;\n  *(undefined2 *)(functionArgument + 0x134) = 0;\n  *(undefined2 *)(functionArgument + 0x136) = 0;\n  *(int *)(functionArgument + 0x138) = functionArgument + 0x51;\n  *(undefined2 *)(functionArgument + 0x13c) = 0;\n  *(undefined2 *)(functionArgument + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_function_08005a44",
                "param_1": "functionArgument"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_communication_08005a68",
            "code": "\nvoid initializeSerialCommunication_08005a68(int serialPortAddress,undefined4 baudRate,byte serialOptions)\n\n{\n  uint status;\n  char *errorMessage;\n  byte optionBits;\n  int dataBitValue;\n  byte *bytePointer;\n  char character;\n  int offset;\n  code *jumpTableFunction;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x140) = serialOptions;\n  optionBits = serialOptions & 7;\n  if (optionBits == 4) {\n    dataBitValue = 7;\n  }\n  else if (optionBits == 6) {\n    dataBitValue = 8;\n  }\n  else if (optionBits == 2) {\n    dataBitValue = 6;\n  }\n  else {\n    dataBitValue = 0;\n  }\n  if ((serialOptions & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    dataBitValue = dataBitValue + 1;\n  }\n  else if ((serialOptions & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    dataBitValue = dataBitValue + 1;\n  }\n  if ((serialOptions & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (dataBitValue == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (dataBitValue == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    dataBitValue = 0;\n  }\n  if (dataBitValue != 0) {\n    FUN_08004f4c(serialPortAddress + 0xd4);\n    FUN_08005510(serialPortAddress + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTableFunction = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(status + offset);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (status < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[status];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "serialOptions",
                "extraout_r1": "status",
                "pcVar1": "errorMessage",
                "bVar2": "optionBits",
                "iVar3": "dataBitValue",
                "pbVar4": "bytePointer",
                "unaff_r4": "character",
                "unaff_r6": "offset",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunction"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_return_value_08005b24",
            "code": "\nvoid setReturnValue_08005b24(int baseAddress,uint index)\n\n{\n  undefined returnValue;\n  code *jumpTable;\n  \n  if (index < 0x3c) {\n    returnValue = (&DAT_080076f0)[index];\n  }\n  else {\n    returnValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = returnValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_return_value_08005b24",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "returnValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_byte_value_at_offset_08005b3c",
            "code": "\nvoid setByteValueAtOffset_08005b3c(int baseAddress,uint offset)\n\n{\n  undefined byteValue;\n  \n  if (offset < 0x3c) {\n    byteValue = (&DAT_080076f0)[offset];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_byte_value_at_offset_08005b3c",
                "param_1": "baseAddress",
                "param_2": "offset",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_080059c8_1_08007804;\n  if (data == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(param2,&DAT_08007604);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_08004ca2(param2,&DAT_0800764c);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08005a44(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "handle_param_08005bb0",
            "code": "\nvoid handle_param_08005bb0(int option,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (option != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "handle_param_08005bb0",
                "param_1": "option",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_parameters_08005c38",
            "code": "\nvoid checkParameters_08005c38(int isOne,int isFFFF)\n\n{\n  if ((isOne == 1) && (isFFFF == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_parameters_08005c38",
                "param_1": "isOne",
                "param_2": "isFFFF"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPointer,int inputValue,undefined4 arg1,undefined4 arg2)\n\n{\n  undefined4 result;\n  \n  if (inputValue != 0) {\n    result = FUN_08000178(inputValue);\n    result = (**(code **)(*functionPointer + 4))(functionPointer,inputValue,result,*(code **)(*functionPointer + 4),arg2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPointer",
                "param_2": "inputValue",
                "param_3": "arg1",
                "param_4": "arg2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid execute_function_08005cb6(undefined4 *function_ptr)\n\n{\n  (**(code **)*function_ptr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "function_ptr"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_function_08005cc0",
            "code": "\nvoid executeFunction_08005cc0(int *functionPointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*functionPointer + 4))(functionPointer,&DAT_0800786c,2,*(code **)(*functionPointer + 4),arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_function_08005cc0",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculateSum_08005cd4(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_decimal_to_base_08005ce8",
            "code": "\nundefined4 convert_decimal_to_base_08005ce8(int *base_ptr,uint decimal_num,uint base)\n\n{\n  char cVar1;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *char_ptr;\n  char buffer [9];\n  \n  buffer[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  char_ptr = buffer + 1;\n  do {\n    quotient = decimal_num / base;\n    remainder = (decimal_num & 0xff) - (quotient * base & 0xff) & 0xff;\n    char_ptr = char_ptr + -1;\n    cVar1 = (char)remainder;\n    if (remainder < 10) {\n      cVar1 = cVar1 + '0';\n    }\n    else {\n      cVar1 = cVar1 + '7';\n    }\n    *char_ptr = cVar1;\n    decimal_num = quotient;\n  } while (quotient != 0);\n  if (char_ptr == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(char_ptr);\n    result = (**(code **)(*base_ptr + 4))(base_ptr,char_ptr,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_base_08005ce8",
                "param_1": "base_ptr",
                "param_2": "decimal_num",
                "param_3": "base",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "char_ptr",
                "local_15": "buffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_data_08005d42",
            "code": "\nint processData_08005d42(undefined4 *data,uint value,uint flag)\n\n{\n  int result;\n  int negative;\n  \n  if (flag == 0) {\n    result = (**(code **)*data)(data,value & 0xff);\n    return result;\n  }\n  if (flag != 10) {\n    result = FUN_08005ce8(data,value,flag & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(data,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(data,0x2d);\n  negative = FUN_08005ce8(data,-value,10);\n  return negative + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_data_08005d42",
                "param_1": "data",
                "param_2": "value",
                "param_3": "flag",
                "iVar1": "result",
                "iVar2": "negative"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "execute_initial_setup_08005d82",
            "code": "\nvoid executeInitialSetup_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "execute_initial_setup_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "execute_function_08005d8a",
            "code": "\nvoid executeFunction_08005d8a(undefined4 *functionPointer,uint arg1,uint arg2,undefined4 arg3)\n\n{\n  if (arg2 != 0) {\n    FUN_08005ce8(functionPointer,arg1,arg2 & 0xff);\n    return;\n  }\n  (**(code **)*functionPointer)(functionPointer,arg1 & 0xff,0,*(code **)*functionPointer,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "execute_function_08005d8a",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "verify_and_modify_data_08005da8",
            "code": "\nint verify_and_modify_data_08005da8(undefined4 param1,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 temp1;\n  int temp2;\n  byte loop_counter;\n  undefined8 temp3;\n  undefined8 temp4;\n  \n  result = FUN_08000a2c(param3,param4,param3,param4);\n  if (result == 0) {\n    result = FUN_08000a2c(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(param1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(param1,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          temp3 = 0x3fe0000000000000;\n          for (loop_counter = 0; temp1 = (undefined4)((ulonglong)temp3 >> 0x20), loop_counter < param5;\n              loop_counter = loop_counter + 1) {\n            temp3 = FUN_0800074c((int)temp3,temp1,0,0x40240000);\n          }\n          temp3 = FUN_08000194(param3,param4,(int)temp3,temp1);\n          temp1 = FUN_08000aa8();\n          temp4 = FUN_0800040c();\n          temp3 = FUN_08000190((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          temp2 = FUN_08005d8a(param1,temp1,10);\n          result = result + temp2;\n          if (param5 != 0) {\n            temp2 = FUN_08005c96(param1,&DAT_08007868);\n            result = result + temp2;\n          }\n          while (param5 != 0) {\n            temp3 = FUN_080004f8((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x40240000);\n            temp1 = FUN_08000a58();\n            temp2 = FUN_08005d82(param1,temp1,10);\n            result = result + temp2;\n            temp4 = FUN_0800042c(temp1);\n            temp3 = FUN_08000190((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                                 (int)((ulonglong)temp4 >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(param1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(param1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(param1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "verify_and_modify_data_08005da8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "result",
                "uVar2": "temp1",
                "iVar3": "temp2",
                "bVar4": "loop_counter",
                "uVar5": "temp3",
                "uVar6": "temp4"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_08005f5e",
            "code": "\nvoid initialize_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "execute_continuous_function_08005f6c",
            "code": "\nvoid execute_continuous_function_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "execute_continuous_function_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_bits_08005f8c",
            "code": "\nchar countBits_08005f8c(uint input)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_bits_08005f8c",
                "param_1": "input",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_data_08005fc8",
            "code": "\nvoid initializeData_08005fc8(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_08005fa0_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "perform_operation_080060d4",
            "code": "\nvoid performOperation_080060d4(int data)\n\n{\n  int index;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    performOperation_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "perform_operation_080060d4",
                "param_1": "data",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_call_function_080060e4",
            "code": "\nvoid checkAndCallFunction_080060e4(void)\n\n{\n  int functionIndex;\n  \n  functionIndex = FUN_08005f8c();\n  if ((&DAT_200004c4)[functionIndex * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_call_function_080060e4",
                "iVar1": "functionIndex"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "execute_function_08006112",
            "code": "\nvoid executeFunction_08006112(undefined4 param1,undefined4 param2)\n\n{\n  FUN_08006158(param2,param1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "execute_function_08006112",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_error_0800611c",
            "code": "\nvoid assertionFailedError_0800611c(undefined4 file,undefined4 line,char *expression,undefined4 extraInfo)\n\n{\n  undefined4 assertionCondition;\n  char *messagePart;\n  undefined8 timeStamp;\n  undefined4 extraInfoCopy;\n  \n  assertionCondition = *(undefined4 *)(DAT_200000f8 + 0xc);\n  extraInfoCopy = extraInfo;\n  if (expression == (char *)0x0) goto LAB_08006140;\n  messagePart = \", function: \";\n  do {\n    FUN_08006174(assertionCondition,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",extraInfo,file,line\n                 ,messagePart,expression,extraInfoCopy);\n    timeStamp = FUN_08006ac0();\n    line = (undefined4)((ulonglong)timeStamp >> 0x20);\n    assertionCondition = (undefined4)timeStamp;\nLAB_08006140:\n    expression = \"\";\n    messagePart = expression;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_error_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "expression",
                "param_4": "extraInfo",
                "uVar1": "assertionCondition",
                "pcVar2": "messagePart",
                "uVar3": "timeStamp",
                "uVar4": "extraInfoCopy"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_unsigned_int_to_long_long_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftUnsignedIntToLongLong_08006158(undefined4 srcValue,uint shiftAmount)\n\n{\n  return (unsignedLongLong)shiftAmount << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_unsigned_int_to_long_long_08006158",
                "param_1": "srcValue",
                "param_2": "shiftAmount",
                "ulonglong": "unsignedLongLong"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "execute_function_08006174",
            "code": "\nvoid executeFunction_08006174(undefined4 inputParam1,undefined4 inputParam2,undefined4 stackVar1,undefined4 stackVar2)\n\n{\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  uStack_8 = stackVar1;\n  uStack_4 = stackVar2;\n  FUN_08006394(DAT_200000f8,inputParam1,inputParam2,&uStack_8,inputParam1,&uStack_8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "execute_function_08006174",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "stackVar1",
                "param_4": "stackVar2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_with_byte_080061e0",
            "code": "\nvoid fillMemoryWithByte_080061e0(undefined *destination,undefined byte,int size)\n\n{\n  undefined *endPointer;\n  \n  endPointer = destination + size;\n  for (; destination != endPointer; destination = destination + 1) {\n    *destination = byte;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_with_byte_080061e0",
                "param_1": "destination",
                "param_2": "byte",
                "param_3": "size",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "update_list_080061f0",
            "code": "\nvoid updateList_080061f0(undefined4 *listPointer,int size,undefined4 param_3,undefined4 param_4)\n\n{\n  int **newListPointer;\n  int **currentNode;\n  int **nextNode;\n  int *currentPointer;\n  int **previousNode;\n  int **updatedNode;\n  \n  if (size == 0) {\n    return;\n  }\n  updatedNode = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    updatedNode = (int **)((int)updatedNode + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  nextNode = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    updatedNode[1] = (int *)0x0;\n    currentNode = newListPointer;\n    DAT_200005f8 = updatedNode;\n  }\n  else {\n    nextNode = DAT_200005f8;\n    if (updatedNode < DAT_200005f8) {\n      currentNode = (int **)*updatedNode;\n      nextNode = (int **)((int)updatedNode + (int)currentNode);\n      if (DAT_200005f8 == nextNode) {\n        currentPointer = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        nextNode = (int **)((int)currentPointer + (int)currentNode);\n        *updatedNode = (int *)nextNode;\n      }\n      updatedNode[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = updatedNode;\n    }\n    else {\n      do {\n        previousNode = nextNode;\n        nextNode = (int **)previousNode[1];\n        if (nextNode == (int **)0x0) break;\n      } while (nextNode <= updatedNode);\n      currentNode = (int **)*previousNode;\n      if ((int **)((int)previousNode + (int)currentNode) == updatedNode) {\n        currentNode = (int **)((int)currentNode + (int)*updatedNode);\n        *previousNode = (int *)currentNode;\n        if (nextNode == (int **)((int)previousNode + (int)currentNode)) {\n          currentPointer = *nextNode;\n          nextNode = (int **)nextNode[1];\n          currentNode = (int **)((int)currentNode + (int)currentPointer);\n          *previousNode = (int *)currentNode;\n          previousNode[1] = (int *)nextNode;\n        }\n      }\n      else if (updatedNode < (int **)((int)previousNode + (int)currentNode)) {\n        *listPointer = 0xc;\n      }\n      else {\n        currentNode = (int **)((int)updatedNode + (int)*updatedNode);\n        if (nextNode == currentNode) {\n          currentPointer = *nextNode;\n          nextNode = (int **)nextNode[1];\n          currentNode = (int **)((int)currentPointer + (int)*updatedNode);\n          *updatedNode = (int *)currentNode;\n        }\n        updatedNode[1] = (int *)nextNode;\n        previousNode[1] = (int *)updatedNode;\n      }\n    }\n  }\n  FUNC_08006eae(listPointer,currentNode,nextNode,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "update_list_080061f0",
                "param_1": "listPointer",
                "param_2": "size",
                "extraout_r1": "newListPointer",
                "ppiVar1": "currentNode",
                "ppiVar2": "nextNode",
                "piVar3": "currentPointer",
                "ppiVar4": "previousNode",
                "ppiVar5": "updatedNode"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_and_update_memory_08006288",
            "code": "\nuint allocate_and_update_memory_08006288(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int padding;\n  uint *previous_block;\n  uint remaining_space;\n  uint *last_block;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    last_block = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      remaining_space = *previous_block - allocated_size;\n      if (-1 < (int)remaining_space) {\n        if (remaining_space < 0xc) {\n          if (last_block == previous_block) {\n            current_block = (uint *)last_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (last_block != previous_block) {\n            last_block[1] = (uint)current_block;\n            last_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = remaining_space;\n          *(uint *)((int)previous_block + remaining_space) = allocated_size;\n          last_block = (uint *)((int)previous_block + remaining_space);\n        }\n        goto LAB_080062ec;\n      }\n      last_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(result);\n    }\n    current_block = (uint *)FUN_08006920(result,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((last_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == last_block ||\n        (padding = FUN_08006920(result,(int)last_block - (int)current_block), padding != -1)))) {\n      *last_block = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(result);\n      allocated_size = (int)last_block + 0xbU & 0xfffffff8;\n      padding = allocated_size - (int)(last_block + 1);\n      if (padding != 0) {\n        *(int *)((int)last_block + padding) = -padding;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result = 0xc;\n    FUNC_08006eae(result);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_and_update_memory_08006288",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "padding",
                "puVar3": "previous_block",
                "uVar4": "remaining_space",
                "puVar5": "last_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int parameter,byte byte_value,byte **input_data)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint result;\n  \n  temp_var2 = input_data[2] + -1;\n  input_data[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_data[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)byte_value, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_data;\n    *input_data = temp_var2 + 1;\n    *temp_var2 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((parameter != 0) && (*(int *)(parameter + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (input_data == (byte **)&DAT_08007904) {\n    input_data = *(byte ***)(parameter + 4);\n  }\n  else if (input_data == (byte **)&DAT_08007924) {\n    input_data = *(byte ***)(parameter + 8);\n  }\n  else if (input_data == (byte **)&DAT_080078e4) {\n    input_data = *(byte ***)(parameter + 0xc);\n  }\n  input_data[2] = input_data[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_data + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_data[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(parameter,input_data,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    result = (uint)byte_value;\n    temp_var1 = (int)*input_data - (int)input_data[4];\n    if ((temp_var1 < (int)input_data[5]) || (temp_var1 = FUN_08006be0(parameter,input_data), temp_var1 == 0)) {\n      input_data[2] = input_data[2] + -1;\n      temp_var2 = *input_data;\n      *input_data = temp_var2 + 1;\n      *temp_var2 = byte_value;\n      if ((byte *)(temp_var1 + 1) != input_data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_data + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08006be0(parameter,input_data);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "parameter",
                "param_2": "byte_value",
                "param_3": "input_data",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "iterate_and_process_08006370",
            "code": "\nint iterate_and_process_08006370(undefined4 func_ptr,undefined4 input_param,undefined *data_ptr,int size)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_offset;\n  \n  end_ptr = data_ptr + size;\n  current_offset = size;\n  do {\n    if (data_ptr == end_ptr) {\n      return 0;\n    }\n    result = FUN_08006344(func_ptr,*data_ptr,input_param,size,current_offset);\n    size = result + 1;\n    data_ptr = data_ptr + 1;\n  } while (size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "iterate_and_process_08006370",
                "param_1": "func_ptr",
                "param_2": "input_param",
                "param_3": "data_ptr",
                "param_4": "size",
                "iVar1": "result",
                "puVar2": "end_ptr",
                "iVar3": "current_offset"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_printf_format_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parsePrintfFormat_08006394(int formatString,undefined4 *args,byte *buffer,int *bytesWritten)\n\n{\n  int result;\n  int *ptrVar;\n  bool flag;\n  byte *ptrByte1;\n  byte *ptrByte2;\n  int unaff_r9;\n  int index;\n  int *localBytesWritten;\n  uint formatFlags;\n  int fieldWidth;\n  undefined4 precision;\n  int width;\n  int totalBytesWritten;\n  byte formatSpecifier;\n  undefined char1;\n  undefined char2;\n  undefined alignment;\n  undefined4 temp;\n  \n  localBytesWritten = bytesWritten;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (args == &DAT_08007904) {\n    args = *(undefined4 **)(formatString + 4);\n  }\n  else if (args == (undefined4 *)&DAT_08007924) {\n    args = *(undefined4 **)(formatString + 8);\n  }\n  else if (args == (undefined4 *)&DAT_080078e4) {\n    args = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(args + 3) << 0x1c)) || (args[4] == 0)) &&\n     (index = FUN_080069e4(formatString,args), index != 0)) {\n    return -1;\n  }\n  totalBytesWritten = 0;\n  char1 = 0x20;\n  char2 = 0x30;\n  ptrByte1 = buffer;\nLAB_080063d6:\n  ptrByte2 = ptrByte1;\n  if (*ptrByte2 != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  ptrByte1 = ptrByte2 + 1;\n  if (*ptrByte2 != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  index = (int)ptrByte2 - (int)buffer;\n  if (index != 0) {\n    result = FUN_08006370(formatString,args,buffer,index);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(args + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytesWritten;\n    }\n    totalBytesWritten = totalBytesWritten + index;\n  }\n  if (*ptrByte2 == 0) goto LAB_08006580;\n  formatFlags = 0;\n  width = 0;\n  fieldWidth = -1;\n  precision = 0;\n  alignment = 0;\n  temp = 0;\n  ptrByte1 = ptrByte2 + 1;\n  while( true ) {\n    index = FUN_08006e90(\"#-0+ \",*ptrByte1);\n    buffer = ptrByte1 + 1;\n    if (index == 0) break;\n    formatFlags = 1 << (index + 0xf7ff8750U & 0xff) | formatFlags;\n    ptrByte1 = buffer;\n  }\n  if ((int)(formatFlags << 0x1b) < 0) {\n    alignment = 0x20;\n  }\n  if ((int)(formatFlags << 0x1c) < 0) {\n    alignment = 0x2b;\n  }\n  if (*ptrByte1 == 0x2a) {\n    ptrVar = localBytesWritten + 1;\n    index = *localBytesWritten;\n    localBytesWritten = ptrVar;\n    if (index < 0) {\n      width = -index;\n      formatFlags = formatFlags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    flag = false;\n    index = width;\n    buffer = ptrByte1;\n    while( true ) {\n      if (9 < *buffer - 0x30) break;\n      index = index * 10 + (*buffer - 0x30);\n      flag = true;\n      buffer = buffer + 1;\n    }\n    if (!flag) goto LAB_080064be;\n  }\n  width = index;\nLAB_080064be:\n  if (*buffer == 0x2e) {\n    if (buffer[1] == 0x2a) {\n      buffer = buffer + 2;\n      ptrVar = localBytesWritten + 1;\n      fieldWidth = *localBytesWritten;\n      localBytesWritten = ptrVar;\n      if (fieldWidth < 0) {\n        fieldWidth = -1;\n      }\n    }\n    else {\n      flag = false;\n      index = 0;\n      fieldWidth = 0;\n      while( true ) {\n        buffer = buffer + 1;\n        if (9 < *buffer - 0x30) break;\n        index = index * 10 + (*buffer - 0x30);\n        flag = true;\n      }\n      if (flag) {\n        fieldWidth = index;\n      }\n    }\n  }\n  index = FUN_08006e90(&DAT_080078b6,*buffer,3);\n  if (index != 0) {\n    buffer = buffer + 1;\n    formatFlags = formatFlags | 0x40 << (index + 0xf7ff874aU & 0xff);\n  }\n  formatSpecifier = *buffer;\n  buffer = buffer + 1;\n  index = FUN_08006e90(\"efgEFG\",formatSpecifier,6);\n  if (index == 0) {\n    unaff_r9 = FUN_080066b0(formatString,&formatFlags,args,0x8006371,&localBytesWritten);\n    if (unaff_r9 == -1) goto LAB_08006580;\n  }\n  else {\n    localBytesWritten = (int *)(((int)localBytesWritten + 7U & 0xfffffff8) + 8);\n  }\n  totalBytesWritten = totalBytesWritten + unaff_r9;\n  ptrByte1 = buffer;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_printf_format_08006394",
                "param_1": "formatString",
                "param_2": "args",
                "param_3": "buffer",
                "param_4": "bytesWritten",
                "iVar1": "result",
                "piVar2": "ptrVar",
                "bVar3": "flag",
                "pbVar4": "ptrByte1",
                "pbVar5": "ptrByte2",
                "iVar6": "index",
                "local_8c": "localBytesWritten",
                "local_88": "formatFlags",
                "local_84": "fieldWidth",
                "local_80": "precision",
                "local_7c": "width",
                "local_74": "totalBytesWritten",
                "local_70": "formatSpecifier",
                "local_6f": "char1",
                "local_6e": "char2",
                "local_45": "alignment",
                "local_30": "temp"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "convert_and_write_data_080065c0",
            "code": "\nundefined4\nconvertAndWriteData_080065c0(undefined4 inputValue,uint *buffer,uint *outputSize,undefined4 unused1,code *callback)\n\n{\n  int index;\n  int returnValue;\n  uint minOutputSize;\n  uint var4;\n  bool isNotZero;\n  \n  minOutputSize = buffer[4];\n  if ((int)buffer[4] < (int)buffer[2]) {\n    minOutputSize = buffer[2];\n  }\n  *outputSize = minOutputSize;\n  if (*(char *)((int)buffer + 0x43) != '\\0') {\n    *outputSize = minOutputSize + 1;\n  }\n  if ((int)(*buffer << 0x1a) < 0) {\n    *outputSize = *outputSize + 2;\n  }\n  if ((*buffer & 6) == 0) {\n    for (index = 0; index < (int)(buffer[3] - *outputSize); index = index + 1) {\n      returnValue = (*callback)(inputValue,unused1,(int)buffer + 0x19,1);\n      if (returnValue == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  minOutputSize = (uint)*(byte *)((int)buffer + 0x43);\n  if (minOutputSize != 0) {\n    minOutputSize = 1;\n  }\n  var4 = minOutputSize;\n  if ((int)(*buffer << 0x1a) < 0) {\n    *(undefined *)((int)buffer + minOutputSize + 0x43) = 0x30;\n    var4 = minOutputSize + 2;\n    *(undefined *)((int)buffer + minOutputSize + 0x44) = *(undefined *)((int)buffer + 0x45);\n  }\n  index = (*callback)(inputValue,unused1,(int)buffer + 0x43,var4);\n  if (index != -1) {\n    minOutputSize = buffer[3];\n    isNotZero = (*buffer & 6) != 4;\n    if (isNotZero) {\n      minOutputSize = 0;\n    }\n    var4 = 0;\n    if (!isNotZero) {\n      minOutputSize = minOutputSize - *outputSize;\n    }\n    if (!isNotZero) {\n      minOutputSize = minOutputSize & ~((int)minOutputSize >> 0x1f);\n    }\n    if ((int)buffer[4] < (int)buffer[2]) {\n      minOutputSize = minOutputSize + (buffer[2] - buffer[4]);\n    }\n    while( true ) {\n      if (minOutputSize == var4) {\n        return 0;\n      }\n      index = (*callback)(inputValue,unused1,(int)buffer + 0x1a,1);\n      if (index == -1) break;\n      var4 = var4 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "convert_and_write_data_080065c0",
                "param_1": "inputValue",
                "param_2": "buffer",
                "param_3": "outputSize",
                "param_4": "unused1",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "returnValue",
                "uVar3": "minOutputSize",
                "uVar4": "var4",
                "bVar5": "isNotZero"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "convert_to_hex_string_080066b0",
            "code": "\nuint convertToHexString_080066b0(undefined4 param1,uint *input,undefined4 param3,code *converter,uint **output)\n\n{\n  byte byteValue;\n  int index;\n  uint *ptr;\n  int count;\n  char *hexDigits;\n  uint num;\n  uint **ptrPtr;\n  char **ptrPtr2;\n  uint result;\n  uint value;\n  char *ptr1;\n  char *ptr2;\n  uint localArray [2];\n  \n  byteValue = *(byte *)(input + 6);\n  ptr2 = (char *)((int)input + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_0800686a;\n          if (byteValue != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)input + 0x45) = 0x58;\n          hexDigits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          num = *input;\n          ptr = *output;\n          *output = ptr + 1;\n          if (((num & 0x80) == 0) && ((int)(num << 0x19) < 0)) {\n            result = (uint)*(ushort *)ptr;\n          }\n          else {\n            result = *ptr;\n          }\n          if ((int)(num << 0x1f) < 0) {\n            *input = num | 0x20;\n          }\n          if (result == 0) {\n            *input = *input & 0xffffffdf;\n          }\n          num = 0x10;\nLAB_08006790:\n          *(undefined *)((int)input + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_080066e0;\n          result = *input;\n          ptr = *output;\n          if ((result & 0x80) == 0) {\n            *output = ptr + 1;\n            if ((result & 0x40) == 0) goto LAB_08006700;\n            result = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output = ptr + 1;\nLAB_08006700:\n            result = *ptr;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)input + 0x43) = 0x2d;\n          }\n          hexDigits = \"0123456789ABCDEF\";\n          num = 10;\n        }\n        value = input[1];\n        input[2] = value;\n        ptr1 = ptr2;\n        if ((int)value < 0) {\n          if (result != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)input + 0x42) = *hexDigits;\n          ptr1 = (char *)((int)input + 0x42);\n        }\n        else {\n          *input = *input & 0xfffffffb;\n          if (result == 0) {\n            if (value != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              value = result / num;\n              ptr1 = ptr1 + -1;\n              *ptr1 = hexDigits[result - num * value];\n              result = value;\n            } while (value != 0);\n          }\n        }\n        if (((num == 8) && ((int)(*input << 0x1f) < 0)) && ((int)input[1] <= (int)input[4]))\n        {\n          ptr1[-1] = '0';\n          ptr1 = ptr1 + -1;\n        }\n        input[4] = (int)ptr2 - (int)ptr1;\n        ptr2 = ptr1;\n        goto LAB_080067d6;\n      }\n      ptr = *output;\n      *output = ptr + 1;\n      *(char *)((int)input + 0x42) = (char)*ptr;\nLAB_08006740:\n      ptr2 = (char *)((int)input + 0x42);\n      result = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_08006766:\n            result = *input;\n            ptr = *output;\n            if ((result & 0x80) == 0) {\n              *output = ptr + 1;\n              if ((result & 0x40) == 0) goto LAB_08006774;\n              result = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output = ptr + 1;\nLAB_08006774:\n              result = *ptr;\n            }\n            if (byteValue == 0x6f) {\n              num = 8;\n            }\n            else {\n              num = 10;\n            }\n            hexDigits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byteValue == 0x70) {\n            *input = *input | 0x20;\nLAB_08006726:\n            hexDigits = \"0123456789abcdef\";\n            *(undefined *)((int)input + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_08006766;\n          if (byteValue == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)input + 0x42) = byteValue;\n        goto LAB_08006740;\n      }\n      ptrPtr2 = (char **)*output;\n      *output = (uint *)(ptrPtr2 + 1);\n      ptr2 = *ptrPtr2;\n      index = FUN_08006e90(ptr2,0,input[1]);\n      if (index != 0) {\n        input[1] = index - (int)ptr2;\n      }\n      result = input[1];\n    }\n    input[4] = result;\n    *(undefined *)((int)input + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  result = *input;\n  ptrPtr = (uint **)*output;\n  num = input[5];\n  if ((result & 0x80) == 0) {\n    *output = (uint *)(ptrPtr + 1);\n    ptr = *ptrPtr;\n    if ((result & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)num;\n  }\n  else {\n    *output = (uint *)(ptrPtr + 1);\n    ptr = *ptrPtr;\nLAB_08006856:\n    *ptr = num;\n  }\nLAB_0800686a:\n  input[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(param1,input,localArray,param3,converter);\n  if ((index == -1) || (index = (*converter)(param1,param3,ptr2,input[4]), index == -1)) {\nLAB_080067ea:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*input << 0x1e) < 0) {\n      for (index = 0; index < (int)(input[3] - localArray[0]); index = index + 1) {\n        count = (*converter)(param1,param3,(int)input + 0x19,1);\n        if (count == -1) goto LAB_080067ea;\n      }\n    }\n    result = input[3];\n    if ((int)input[3] < (int)localArray[0]) {\n      result = localArray[0];\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "convert_to_hex_string_080066b0",
                "param_1": "param1",
                "param_2": "input",
                "param_3": "param3",
                "param_4": "converter",
                "param_5": "output",
                "bVar1": "byteValue",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "count",
                "pcVar5": "hexDigits",
                "uVar6": "num",
                "ppuVar7": "ptrPtr",
                "ppcVar8": "ptrPtr2",
                "uVar9": "result",
                "uVar10": "value",
                "pcVar11": "ptr1",
                "pcVar12": "ptr2",
                "local_24": "localArray"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int dataPointer;\n  undefined4 param1Copy;\n  undefined4 param2Stack;\n  undefined4 param3Stack;\n  undefined4 param4Stack;\n  \n  dataPointer = DAT_200000f8;\n  param1Copy = param1;\n  param2Stack = param2;\n  param3Stack = param3;\n  param4Stack = param4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(dataPointer,*(undefined4 *)(dataPointer + 8),param1,&param2Stack,param1Copy,&param2Stack);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "dataPointer",
                "uVar2": "param1Copy",
                "uStack_c": "param2Stack",
                "uStack_8": "param3Stack",
                "uStack_4": "param4Stack"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "check_and_update_value_08006920",
            "code": "\nvoid checkAndUpdateValue_08006920(int *resultPointer,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_080056d8(inputValue);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *resultPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "check_and_update_value_08006920",
                "param_1": "resultPointer",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "update_data_080069e4",
            "code": "\nuint updateData_080069e4(undefined4 *output,undefined4 *input)\n\n{\n  int dataPtr;\n  uint result;\n  ushort status;\n  \n  dataPtr = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input == &DAT_08007904) {\n    input = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08007924) {\n    input = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (input == (undefined4 *)&DAT_080078e4) {\n    input = *(undefined4 **)(dataPtr + 0xc);\n  }\n  status = *(ushort *)(input + 3);\n  result = (uint)status;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080061f0(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(output,input);\n  }\n  status = *(ushort *)(input + 3);\n  result = status & 1;\n  if ((status & 1) == 0) {\n    if (-1 < (int)((uint)status << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    status = *(ushort *)(input + 3);\n    result = (int)(short)status & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input + 3) = status | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "update_data_080069e4",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "decode_and_process_data_08006ac0",
            "code": "\nvoid decode_and_process_data_08006ac0(void)\n\n{\n  uint *input_ptr;\n  int temp_var_1;\n  int *data_ptr;\n  int *temp_ptr;\n  uint input_value;\n  ushort flag;\n  int temp_var_2;\n  code *function_ptr;\n  int temp_var_3;\n  uint temp_var_4;\n  code *jump_table_func;\n  bool flag2;\n  undefined8 result;\n  \n  FUN_08006f00(6);\n  jump_table_func = (code *)0x8006acf;\n  result = FUN_0800573c(1);\n  data_ptr = (int *)((ulonglong)result >> 0x20);\n  input_ptr = (uint *)result;\n  flag = *(ushort *)(data_ptr + 3);\n  input_value = (uint)flag;\n  if ((int)(input_value << 0x1c) < 0) {\n    temp_var_1 = data_ptr[4];\n    if (temp_var_1 != 0) {\n      temp_var_2 = input_value << 0x1e;\n      flag2 = temp_var_2 != 0;\n      if (flag2) {\n        temp_var_2 = 0;\n      }\n      temp_var_3 = *data_ptr;\n      if (!flag2) {\n        temp_var_2 = data_ptr[5];\n      }\n      *data_ptr = temp_var_1;\n      data_ptr[2] = temp_var_2;\n      for (temp_var_3 = temp_var_3 - temp_var_1; 0 < temp_var_3; temp_var_3 = temp_var_3 - temp_var_2) {\n        temp_var_2 = (*(code *)data_ptr[10])(input_ptr,data_ptr[8],temp_var_1,temp_var_3);\n        if (temp_var_2 < 1) {\n          flag = *(ushort *)(data_ptr + 3);\n          goto LAB_08006bc6;\n        }\n        temp_var_1 = temp_var_1 + temp_var_2;\n      }\n    }\n  }\n  else if (((0 < data_ptr[1]) || (0 < data_ptr[0x10])) &&\n          (function_ptr = (code *)data_ptr[0xb], function_ptr != (code *)0x0)) {\n    temp_var_4 = *input_ptr;\n    *input_ptr = 0;\n    if ((flag & 0x1000) == 0) {\n      temp_var_1 = (*function_ptr)(input_ptr,data_ptr[8],input_value & 0x1000,1);\n      if ((temp_var_1 == -1) && (input_value = *input_ptr, input_value != 0)) {\n        if ((input_value != 0x1d) && (input_value != 0x16)) {\n          *(ushort *)(data_ptr + 3) = *(ushort *)(data_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table_func)();\n          return;\n        }\n        *input_ptr = temp_var_4;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      temp_var_1 = data_ptr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(data_ptr + 3) << 0x1d) < 0) &&\n       (temp_var_1 = temp_var_1 - data_ptr[1], data_ptr[0xd] != 0)) {\n      temp_var_1 = temp_var_1 - data_ptr[0x10];\n    }\n    temp_var_1 = (*(code *)data_ptr[0xb])(input_ptr,data_ptr[8],temp_var_1,0);\n    flag = *(ushort *)(data_ptr + 3);\n    if ((temp_var_1 == -1) &&\n       ((0x1d < *input_ptr || (-1 < (int)((0x20400001U >> (*input_ptr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(data_ptr + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_func)(0xffffffff);\n      return;\n    }\n    data_ptr[1] = 0;\n    *data_ptr = data_ptr[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((temp_var_1 != -1 || (*input_ptr == 0)))) {\n      data_ptr[0x15] = temp_var_1;\n    }\n    temp_ptr = (int *)data_ptr[0xd];\n    *input_ptr = temp_var_4;\n    if (temp_ptr != (int *)0x0) {\n      if (temp_ptr != data_ptr + 0x11) {\n        FUN_080061f0(input_ptr);\n      }\n      data_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_func)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table_func)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "decode_and_process_data_08006ac0",
                "piVar3": "data_ptr",
                "puVar1": "input_ptr",
                "uVar5": "input_value",
                "uVar6": "flag",
                "iVar2": "temp_var_1",
                "iVar7": "temp_var_2",
                "piVar4": "temp_ptr",
                "iVar9": "temp_var_3",
                "uVar10": "temp_var_4",
                "bVar11": "flag2",
                "uVar12": "result",
                "pcVar8": "function_ptr",
                "UNRECOVERED_JUMPTABLE_00": "jump_table_func"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *data,int *info)\n\n{\n  undefined4 returnValue;\n  int value;\n  int *pointer;\n  uint tempVar;\n  ushort ushortVar;\n  int tempVar2;\n  undefined4 unusedR4;\n  undefined4 unusedR5;\n  code *functionPtr;\n  int tempVar3;\n  uint tempVar4;\n  code *jumpTable;\n  bool condition;\n  \n  if (info[4] != 0) {\n    if ((data != (uint *)0x0) && (data[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (info == &DAT_08007904) {\n      info = (int *)data[1];\n    }\n    else if (info == (int *)&DAT_08007924) {\n      info = (int *)data[2];\n    }\n    else if (info == (int *)&DAT_080078e4) {\n      info = (int *)data[3];\n    }\n    if (*(short *)(info + 3) != 0) {\n      ushortVar = *(ushort *)(info + 3);\n      tempVar = (uint)ushortVar;\n      if ((int)(tempVar << 0x1c) < 0) {\n        value = info[4];\n        if (value != 0) {\n          tempVar2 = tempVar << 0x1e;\n          condition = tempVar2 != 0;\n          if (condition) {\n            tempVar2 = 0;\n          }\n          tempVar3 = *info;\n          if (!condition) {\n            tempVar2 = info[5];\n          }\n          *info = value;\n          info[2] = tempVar2;\n          for (tempVar3 = tempVar3 - value; 0 < tempVar3; tempVar3 = tempVar3 - tempVar2) {\n            tempVar2 = (*(code *)info[10])(data,info[8],value,tempVar3,unusedR4,unusedR5);\n            if (tempVar2 < 1) {\n              ushortVar = *(ushort *)(info + 3);\n              goto LAB_08006bc6;\n            }\n            value = value + tempVar2;\n          }\n        }\n      }\n      else if (((0 < info[1]) || (0 < info[0x10])) &&\n              (functionPtr = (code *)info[0xb], functionPtr != (code *)0x0)) {\n        tempVar4 = *data;\n        *data = 0;\n        if ((ushortVar & 0x1000) == 0) {\n          value = (*functionPtr)(data,info[8],tempVar & 0x1000,1);\n          if ((value == -1) && (tempVar = *data, tempVar != 0)) {\n            if ((tempVar != 0x1d) && (tempVar != 0x16)) {\n              *(ushort *)(info + 3) = *(ushort *)(info + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *data = tempVar4;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          value = info[0x15];\n        }\n        if (((int)((uint)*(ushort *)(info + 3) << 0x1d) < 0) &&\n           (value = value - info[1], info[0xd] != 0)) {\n          value = value - info[0x10];\n        }\n        value = (*(code *)info[0xb])(data,info[8],value,0);\n        ushortVar = *(ushort *)(info + 3);\n        if ((value == -1) &&\n           ((0x1d < *data || (-1 < (int)((0x20400001U >> (*data & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(info + 3) = ushortVar | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        info[1] = 0;\n        *info = info[4];\n        if (((int)((uint)ushortVar << 0x13) < 0) && ((value != -1 || (*data == 0)))) {\n          info[0x15] = value;\n        }\n        pointer = (int *)info[0xd];\n        *data = tempVar4;\n        if (pointer != (int *)0x0) {\n          if (pointer != info + 0x11) {\n            FUN_080061f0(data);\n          }\n          info[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "data",
                "param_2": "info",
                "uVar1": "returnValue",
                "iVar2": "value",
                "piVar3": "pointer",
                "uVar4": "tempVar",
                "uVar5": "ushortVar",
                "iVar6": "tempVar2",
                "unaff_r4": "unusedR4",
                "unaff_r5": "unusedR5",
                "pcVar7": "functionPtr",
                "iVar8": "tempVar3",
                "uVar9": "tempVar4",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "condition"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_08006c40",
            "code": "\nvoid initializeData_08006c40(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080061e0(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x8006f39;\n  data[10] = 0x8006f5b;\n  data[0xb] = 0x8006f93;\n  data[0xc] = &constantValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_08006c40",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_08006fb6_1": "constantValue"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 input,int size)\n\n{\n  undefined4 *dataPointer;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  dataPointer = (undefined4 *)FUN_08006288(input,offset + 0x74);\n  if (dataPointer != (undefined4 *)0x0) {\n    *dataPointer = 0;\n    dataPointer[1] = size;\n    dataPointer[2] = dataPointer + 3;\n    FUN_080061e0(dataPointer + 3,0,offset + 0x68);\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "input",
                "param_2": "size",
                "puVar1": "dataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *startAddress;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    startAddress = &DAT_200000fc;\n    data[10] = &LAB_08006c34_1;\n    if (data == &DAT_200000fc) {\n      startAddress = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000fc) {\n      data[6] = startAddress;\n    }\n    result = FUN_08006d14();\n    data[1] = result;\n    result = FUN_08006d14(data);\n    data[2] = result;\n    result = FUN_08006d14(data);\n    data[3] = result;\n    FUN_08006c40(data[1],4,0);\n    FUN_08006c40(data[2],9,1);\n    FUN_08006c40(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "startAddress"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_structure_08006d14",
            "code": "\nint * initialize_data_structure_08006d14(undefined4 *result,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *current_item;\n  int *inner_item;\n  int **data_structure_ptr;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  data_structure_ptr = (int **)&DAT_20000144;\n  do {\n    inner_item = data_structure_ptr[2];\n    current_item = data_structure_ptr[1];\n    while (current_item = (int *)((int)current_item + -1), -1 < (int)current_item) {\n      if (*(short *)(inner_item + 3) == 0) {\n        *(undefined2 *)((int)inner_item + 0xe) = 0xffff;\n        inner_item[0x19] = 0;\n        *(undefined2 *)(inner_item + 3) = 1;\n        *inner_item = 0;\n        inner_item[2] = 0;\n        inner_item[1] = 0;\n        inner_item[4] = 0;\n        inner_item[5] = 0;\n        inner_item[6] = 0;\n        FUN_080061e0(inner_item + 0x17,0,8,1,param_4);\n        inner_item[0xd] = 0;\n        inner_item[0xe] = 0;\n        inner_item[0x12] = 0;\n        inner_item[0x13] = 0;\n        return inner_item;\n      }\n      inner_item = inner_item + 0x1a;\n    }\n    if (*data_structure_ptr == (int *)0x0) {\n      current_item = (int *)FUN_08006c88(result,4);\n      *data_structure_ptr = current_item;\n      if (current_item == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    data_structure_ptr = (int **)*data_structure_ptr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_structure_08006d14",
                "param_1": "result",
                "piVar1": "current_item",
                "piVar2": "inner_item",
                "ppiVar3": "data_structure_ptr"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_permissions_08006dc8",
            "code": "\nundefined4 checkPermissions_08006dc8(undefined4 param1,int param2,undefined4 *permissionResult,uint *flag)\n\n{\n  int result;\n  undefined4 permission;\n  undefined temp [4];\n  uint localFlag;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_08007004(param1,(int)*(short *)(param2 + 0xe),temp), result < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *flag = (uint)((localFlag & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08006e08:\n  *permissionResult = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_permissions_08006dc8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "permissionResult",
                "param_4": "flag",
                "iVar1": "result",
                "uVar2": "permission",
                "auStack_4c": "temp",
                "local_48": "localFlag"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int dataPtr,int *infoPtr)\n\n{\n  ushort result;\n  int status;\n  int localData;\n  int *localInfo;\n  \n  if (-1 < (int)((uint)*(ushort *)(infoPtr + 3) << 0x1e)) {\n    localData = dataPtr;\n    localInfo = infoPtr;\n    result = FUN_08006dc8(dataPtr,infoPtr,&localData,&localInfo);\n    status = FUN_08006288(dataPtr,localData);\n    if (status != 0) {\n      *(undefined **)(dataPtr + 0x28) = &LAB_08006c34_1;\n      *infoPtr = status;\n      *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) | 0x80;\n      infoPtr[4] = status;\n      infoPtr[5] = localData;\n      if ((localInfo != (int *)0x0) &&\n         (status = FUN_08007028(dataPtr,(int)*(short *)((int)infoPtr + 0xe)), status != 0)) {\n        *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(infoPtr + 3) = result | *(ushort *)(infoPtr + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(infoPtr + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) & 0xfffc | 2;\n  }\n  *infoPtr = (int)infoPtr + 0x47;\n  infoPtr[4] = (int)infoPtr + 0x47;\n  infoPtr[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "dataPtr",
                "param_2": "infoPtr",
                "uVar1": "result",
                "iVar2": "status",
                "local_18": "localData",
                "local_14": "localInfo"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_08006e90",
            "code": "\nchar * find_character_08006e90(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "process_data_08006f00",
            "code": "\nint processData_08006f00(uint input)\n\n{\n  int *dataPtr;\n  undefined4 result;\n  int temp;\n  code *functionPtr;\n  undefined4 unaff_arg4;\n  undefined4 unaff_arg5;\n  undefined4 in_link_register;\n  undefined4 *ptr;\n  \n  dataPtr = DAT_200000f8;\n  ptr = &DAT_200000f8;\n  if (0x1f < input) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  temp = DAT_200000f8[0x11];\n  if ((temp != 0) && (functionPtr = *(code **)(temp + input * 4), functionPtr != (code *)0x0)) {\n    if (functionPtr != (code *)0x1) {\n      if (functionPtr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(temp + input * 4) = 0;\n      (*functionPtr)(input);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  temp = FUN_08005740(result,input,input,0,ptr,unaff_arg4,unaff_arg5,in_link_register);\n  if ((temp == -1) && (DAT_200006a4 != 0)) {\n    *dataPtr = DAT_200006a4;\n  }\n  return temp;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "process_data_08006f00",
                "param_1": "input",
                "piVar1": "dataPtr",
                "uVar2": "result",
                "iVar3": "temp",
                "pcVar4": "functionPtr",
                "unaff_r4": "unaff_arg4",
                "unaff_r5": "unaff_arg5",
                "in_lr": "in_link_register",
                "puVar5": "ptr"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "initialize_value_thunk_08005750",
            "code": "\nunsignedInt initializeValue_thunk_08005750(void)\n\n{\n  result 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "initialize_value_thunk_08005750",
                "undefined4": "unsignedInt",
                "return": "result"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 pointer,int offset)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(pointer,(int)*(short *)(offset + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(offset + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(offset + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(offset + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(offset + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "pointer",
                "param_2": "offset",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "decode_and_update_data_08006f5a",
            "code": "\nvoid decode_and_update_data_08006f5a(int *data_array,int data_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  undefined4 unaff_param_1;\n  undefined4 unaff_param_2;\n  undefined4 return_address;\n  \n  if ((int)((uint)*(ushort *)(data_ptr + 0xc) << 0x17) < 0) {\n    FUN_08007048(data_array,(int)*(short *)(data_ptr + 0xe),0,2);\n  }\n  *(ushort *)(data_ptr + 0xc) = *(ushort *)(data_ptr + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(data_ptr + 0xe),param_3,param_4,param_4,param_4,unaff_param_1,\n                       unaff_param_2,return_address);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *data_array = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "decode_and_update_data_08006f5a",
                "param_1": "data_array",
                "param_2": "data_ptr",
                "iVar1": "result",
                "unaff_r4": "unaff_param_1",
                "unaff_r5": "unaff_param_2",
                "in_lr": "return_address"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_data_08006f92",
            "code": "\nvoid updateData_08006f92(undefined4 data,int offset)\n\n{\n  int result;\n  ushort modifiedBits;\n  bool isError;\n  \n  result = FUN_08007048(data,(int)*(short *)(offset + 0xe));\n  isError = result == -1;\n  if (isError) {\n    modifiedBits = *(ushort *)(offset + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(offset + 0x54) = result;\n    modifiedBits = *(ushort *)(offset + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(offset + 0xc) = modifiedBits;\n  }\n  if (!isError) {\n    *(ushort *)(offset + 0xc) = modifiedBits;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_data_08006f92",
                "param_1": "data",
                "param_2": "offset",
                "iVar1": "result",
                "uVar2": "modifiedBits",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "process_data_08007004",
            "code": "\nvoid processData_08007004(int *output,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input_1,input_2,input_2,0,input_3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "process_data_08007004",
                "param_1": "output",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "validate_and_assign_value_08007028",
            "code": "\nvoid validate_and_assign_value_08007028(int *output_value,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005724(input_value);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_value = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "validate_and_assign_value_08007028",
                "param_1": "output_value",
                "param_2": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "check_and_assign_value_08007048",
            "code": "\nvoid checkAndAssignValue_08007048(int *outputPtr,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005728(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputPtr = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "check_and_assign_value_08007048",
                "param_1": "outputPtr",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "check_and_store_value_0800706c",
            "code": "\nvoid checkAndStoreValue_0800706c(int *array,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800572c(value1,value2,value3,value3,value3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *array = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "check_and_store_value_0800706c",
                "param_1": "array",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 174668,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}