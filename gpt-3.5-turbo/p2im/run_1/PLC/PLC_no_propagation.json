{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "initialize_flag_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initializeFlag_080001ac(undefined4 inputParameter)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "initialize_flag_080001ac",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *input_array,uint target_byte,uint array_length)\n\n{\n  byte current_byte;\n  char is_current_byte_zero;\n  char is_current_byte_shifted_by_8_zeros;\n  char is_current_byte_shifted_by_16_zeros;\n  char is_current_byte_shifted_by_24_zeros;\n  byte *new_array_pointer;\n  uint *new_array;\n  byte *final_result;\n  uint array_offset;\n  uint array_length_multiple_of_8;\n  uint xor_result_1;\n  uint xor_result_2;\n  bool is_xor_result_2_shifted_by_24_zeros;\n  bool is_xor_result_2_shifted_by_0_zeros;\n  bool current_byte5;\n  bool current_byte6;\n  \n  target_byte = target_byte & 0xff;\n  if ((int)array_length < 0x10) {\njump_point:\n    do {\n      if (array_length == 0) {\n        return (byte *)0x0;\n      }\n      new_array = (uint *)((int)input_array + 1);\n      current_byte = *(byte *)input_array;\n      array_length = array_length - 1;\n      input_array = new_array;\n    } while (current_byte != target_byte);\n  }\n  else {\n    array_offset = (uint)input_array & 7;\n    while( true ) {\n      if (array_offset == 0) {\n        array_offset = target_byte | target_byte << 8;\n        array_offset = array_offset | array_offset << 0x10;\n        array_length_multiple_of_8 = array_length & 0xfffffff8;\n        do {\n          new_array = input_array + 2;\n          array_length_multiple_of_8 = array_length_multiple_of_8 - 8;\n          xor_result_1 = *input_array ^ array_offset;\n          xor_result_2 = input_array[1] ^ array_offset;\n          is_current_byte_zero = -((char)xor_result_1 == '\\0');\n          is_current_byte_shifted_by_8_zeros = -((char)(xor_result_1 >> 8) == '\\0');\n          is_current_byte_shifted_by_16_zeros = -((char)(xor_result_1 >> 0x10) == '\\0');\n          is_current_byte_shifted_by_24_zeros = -((char)(xor_result_1 >> 0x18) == '\\0');\n          xor_result_1 = CONCAT13(is_current_byte_shifted_by_24_zeros,CONCAT12(is_current_byte_shifted_by_16_zeros,CONCAT11(is_current_byte_shifted_by_8_zeros,is_current_byte_zero)));\n          is_xor_result_2_shifted_by_24_zeros = (char)xor_result_2 != '\\0';\n          is_xor_result_2_shifted_by_0_zeros = (char)(xor_result_2 >> 8) != '\\0';\n          current_byte5 = (char)(xor_result_2 >> 0x10) != '\\0';\n          current_byte6 = (char)(xor_result_2 >> 0x18) != '\\0';\n          xor_result_2 = CONCAT13(current_byte6 * is_current_byte_shifted_by_24_zeros - !current_byte6,\n                            CONCAT12(current_byte5 * is_current_byte_shifted_by_16_zeros - !current_byte5,\n                                     CONCAT11(is_xor_result_2_shifted_by_0_zeros * is_current_byte_shifted_by_8_zeros - !is_xor_result_2_shifted_by_0_zeros,is_xor_result_2_shifted_by_24_zeros * is_current_byte_zero - !is_xor_result_2_shifted_by_24_zeros)));\n          if (xor_result_2 != 0) {\n            if (xor_result_1 == 0) {\n              final_result = (byte *)((int)input_array + 5);\n              xor_result_1 = xor_result_2;\n            }\n            else {\n              final_result = (byte *)((int)input_array + 1);\n            }\n            if ((xor_result_1 & 1) == 0) {\n              is_xor_result_2_shifted_by_24_zeros = (xor_result_1 & 0x100) == 0;\n              new_array_pointer = final_result + 1;\n              if (is_xor_result_2_shifted_by_24_zeros) {\n                is_xor_result_2_shifted_by_24_zeros = (xor_result_1 & 0x18000) == 0;\n                new_array_pointer = final_result + 2;\n              }\n              final_result = new_array_pointer;\n              if (is_xor_result_2_shifted_by_24_zeros) {\n                final_result = final_result + 1;\n              }\n            }\n            return final_result + -1;\n          }\n          input_array = new_array;\n        } while (array_length_multiple_of_8 != 0);\n        array_length = array_length & 7;\n        goto jump_point;\n      }\n      new_array = (uint *)((int)input_array + 1);\n      array_length = array_length - 1;\n      if (*(byte *)input_array == target_byte) break;\n      array_offset = (uint)new_array & 7;\n      input_array = new_array;\n      if (array_length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)new_array + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "input_array",
                "param_2": "target_byte",
                "param_3": "array_length",
                "bVar1": "current_byte",
                "cVar2": "is_current_byte_zero",
                "cVar3": "is_current_byte_shifted_by_8_zeros",
                "cVar4": "is_current_byte_shifted_by_16_zeros",
                "cVar5": "is_current_byte_shifted_by_24_zeros",
                "pbVar6": "new_array_pointer",
                "puVar7": "new_array",
                "pbVar8": "final_result",
                "uVar9": "array_offset",
                "uVar10": "array_length_multiple_of_8",
                "uVar11": "xor_result_1",
                "uVar12": "xor_result_2",
                "bVar13": "is_xor_result_2_shifted_by_24_zeros",
                "bVar14": "is_xor_result_2_shifted_by_0_zeros",
                "joined_r0x08000290": "jump_point"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "get_return_value_080002d0",
            "code": "\nundefined8 getReturnValue_080002d0(int input1,int input2,int condition1,int condition2)\n\n{\n  undefined8 returnValue;\n  \n  if ((condition2 == 0) && (condition1 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return CONCAT44(input2,input1);\n  }\n  returnValue = FUN_08000300();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "get_return_value_080002d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition1",
                "param_4": "condition2",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "divide_with_remainder_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_with_remainder_08000300(uint dividend,uint dividend_high,uint divisor,uint divisor_high,uint *remainder)\n\n{\n  ulonglong quotient_low;\n  uint quotient_high;\n  uint u1;\n  uint u2;\n  uint u3;\n  uint u4;\n  uint u5;\n  uint u6;\n  uint u7;\n  int shift;\n  bool carry;\n  \n  if (divisor_high == 0) {\n    if (dividend_high < divisor) {\n      shift = leading_zero_count(divisor);\n      if (shift != 0) {\n        divisor = divisor << shift;\n        dividend_high = dividend >> (0x20U - shift & 0xff) | dividend_high << shift;\n        dividend = dividend << shift;\n      }\n      u6 = divisor >> 0x10;\n      u4 = dividend_high / u6;\n      u3 = dividend >> 0x10 | (dividend_high - u6 * u4) * 0x10000;\n      u2 = u4 * (divisor & 0xffff);\n      u1 = u4;\n      if (u3 <= u2 && u2 - u3 != 0) {\n        carry = carry_4(u3,divisor);\n        u3 = u3 + divisor;\n        u1 = u4 - 1;\n        if ((carry == false) && (u3 <= u2 && u2 - u3 != 0)) {\n          u1 = u4 - 2;\n          u3 = u3 + divisor;\n        }\n      }\n      u4 = (u3 - u2) / u6;\n      u3 = dividend & 0xffff | ((u3 - u2) - u6 * u4) * 0x10000;\n      u6 = u4 * (divisor & 0xffff);\n      u2 = u4;\n      if (u3 <= u6 && u6 - u3 != 0) {\n        carry = carry_4(u3,divisor);\n        u3 = u3 + divisor;\n        u2 = u4 - 1;\n        if ((carry == false) && (u3 <= u6 && u6 - u3 != 0)) {\n          u2 = u4 - 2;\n          u3 = u3 + divisor;\n        }\n      }\n      u3 = u3 - u6;\n      u2 = u2 | u1 << 0x10;\n      u1 = 0;\n    }\n    else {\n      if (divisor == 0) {\n        divisor = 1 / 0;\n      }\n      shift = leading_zero_count(divisor);\n      if (shift == 0) {\n        dividend_high = dividend_high - divisor;\n        u3 = divisor >> 0x10;\n        u7 = divisor & 0xffff;\n        u1 = 1;\n      }\n      else {\n        divisor = divisor << shift;\n        u3 = divisor >> 0x10;\n        u2 = dividend_high >> (0x20U - shift & 0xff);\n        u5 = dividend >> (0x20U - shift & 0xff) | dividend_high << shift;\n        u1 = u2 / u3;\n        u7 = divisor & 0xffff;\n        u6 = u5 >> 0x10 | (u2 - u3 * u1) * 0x10000;\n        u4 = u1 * u7;\n        dividend = dividend << shift;\n        u2 = u1;\n        if (u6 <= u4 && u4 - u6 != 0) {\n          carry = carry_4(u6,divisor);\n          u6 = u6 + divisor;\n          u2 = u1 - 1;\n          if ((carry == false) && (u6 <= u4 && u4 - u6 != 0)) {\n            u2 = u1 - 2;\n            u6 = u6 + divisor;\n          }\n        }\n        quotient_high = (u6 - u4) / u3;\n        dividend_high = u5 & 0xffff | ((u6 - u4) - u3 * quotient_high) * 0x10000;\n        u4 = quotient_high * u7;\n        u1 = quotient_high;\n        if (dividend_high <= u4 && u4 - dividend_high != 0) {\n          carry = carry_4(dividend_high,divisor);\n          dividend_high = dividend_high + divisor;\n          u1 = quotient_high - 1;\n          if ((carry == false) && (dividend_high <= u4 && u4 - dividend_high != 0)) {\n            u1 = quotient_high - 2;\n            dividend_high = dividend_high + divisor;\n          }\n        }\n        dividend_high = dividend_high - u4;\n        u1 = u1 | u2 << 0x10;\n      }\n      u5 = dividend_high / u3;\n      u6 = dividend >> 0x10 | (dividend_high - u3 * u5) * 0x10000;\n      u2 = u7 * u5;\n      u4 = u5;\n      if (u6 <= u2 && u2 - u6 != 0) {\n        carry = carry_4(u6,divisor);\n        u6 = u6 + divisor;\n        u4 = u5 - 1;\n        if ((carry == false) && (u6 <= u2 && u2 - u6 != 0)) {\n          u4 = u5 - 2;\n          u6 = u6 + divisor;\n        }\n      }\n      u5 = (u6 - u2) / u3;\n      u3 = dividend & 0xffff | ((u6 - u2) - u3 * u5) * 0x10000;\n      u7 = u7 * u5;\n      u2 = u5;\n      if (u3 <= u7 && u7 - u3 != 0) {\n        carry = carry_4(u3,divisor);\n        u3 = u3 + divisor;\n        u2 = u5 - 1;\n        if ((carry == false) && (u3 <= u7 && u7 - u3 != 0)) {\n          u2 = u5 - 2;\n          u3 = u3 + divisor;\n        }\n      }\n      u3 = u3 - u7;\n      u2 = u2 | u4 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = u3 >> shift;\n      remainder[1] = 0;\n      return CONCAT44(u1,u2);\n    }\n  }\n  else if (dividend_high < divisor_high) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return 0;\n    }\n    u2 = 0;\n    u1 = 0;\n  }\n  else {\n    shift = leading_zero_count(divisor_high);\n    if (shift != 0) {\n      u6 = 0x20 - shift;\n      u1 = divisor >> (u6 & 0xff) | divisor_high << shift;\n      u7 = u1 >> 0x10;\n      u2 = dividend_high >> (u6 & 0xff);\n      quotient_high = dividend >> (u6 & 0xff) | dividend_high << shift;\n      u5 = u2 / u7;\n      u4 = quotient_high >> 0x10 | (u2 - u7 * u5) * 0x10000;\n      u3 = u5 * (u1 & 0xffff);\n      dividend = dividend << shift;\n      u2 = u5;\n      if (u4 <= u3 && u3 - u4 != 0) {\n        carry = carry_4(u4,u1);\n        u4 = u4 + u1;\n        u2 = u5 - 1;\n        if ((carry == false) && (u4 <= u3 && u3 - u4 != 0)) {\n          u2 = u5 - 2;\n          u4 = u4 + u1;\n        }\n      }\n      u5 = (u4 - u3) / u7;\n      u4 = quotient_high & 0xffff | ((u4 - u3) - u7 * u5) * 0x10000;\n      u7 = u5 * (u1 & 0xffff);\n      u3 = u5;\n      if (u4 <= u7 && u7 - u4 != 0) {\n        carry = carry_4(u4,u1);\n        u4 = u4 + u1;\n        u3 = u5 - 1;\n        if ((carry == false) && (u4 <= u7 && u7 - u4 != 0)) {\n          u3 = u5 - 2;\n          u4 = u4 + u1;\n        }\n      }\n      u3 = u3 | u2 << 0x10;\n      quotient_low = (ulonglong)u3 * (ulonglong)(divisor << shift);\n      if (CONCAT44(u4 - u7,dividend) < quotient_low) {\n        quotient_low = quotient_low - CONCAT44(u1,divisor << shift);\n        u3 = u3 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        u2 = ((u4 - u7) - (int)(quotient_low >> 0x20)) - (uint)(dividend < (uint)quotient_low);\n        *remainder = u2 << (u6 & 0xff) | dividend - (uint)quotient_low >> shift;\n        remainder[1] = u2 >> shift;\n      }\n      return (ulonglong)u3;\n    }\n    if ((divisor_high < dividend_high) || (divisor <= dividend)) {\n      carry = dividend < divisor;\n      dividend = dividend - divisor;\n      dividend_high = (dividend_high - divisor_high) - (uint)carry;\n      u2 = 1;\n    }\n    else {\n      u2 = 0;\n    }\n    u1 = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = dividend_high;\n      return (ulonglong)u2;\n    }\n  }\n  return CONCAT44(u1,u2);\n}\n\n",
            "renaming": {
                "FUN_08000300": "divide_with_remainder_08000300",
                "param_1": "dividend",
                "param_2": "dividend_high",
                "param_3": "divisor",
                "param_4": "divisor_high",
                "param_5": "remainder",
                "uVar1": "quotient_low",
                "uVar2": "quotient_high",
                "uVar3": "u1",
                "uVar4": "u2",
                "uVar5": "u3",
                "uVar6": "u4",
                "uVar7": "u5",
                "uVar8": "u6",
                "uVar9": "u7",
                "iVar10": "shift",
                "bVar11": "carry",
                "LZCOUNT": "leading_zero_count",
                "CARRY4": "carry_4"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "perform_software_interrupt_080005e0",
            "code": "\nvoid performSoftwareInterrupt_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "perform_software_interrupt_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "check_and_call_function_080005e4",
            "code": "\nundefined4 checkAndCallFunction_080005e4(undefined4 inputValue,undefined4 unusedParam,undefined4 unusedParam,undefined4 outputValue)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = FUN_080005e0(1,inputValue,0,0,outputValue);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "check_and_call_function_080005e4",
                "param_1": "inputValue",
                "param_2": "unusedParam",
                "param_3": "unusedParam",
                "param_4": "outputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "initialize_data_08000600",
            "code": "\nvoid initializeData_08000600(int **dataPointer,undefined4 parameter)\n\n{\n  char value;\n  int result;\n  \n  value = *(char *)((int)dataPointer + 5);\n  if (value == '\\x02') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (value == '\\x03') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (value == '\\x01') {\n    *dataPointer = &DAT_20000338;\n  }\n  else {\n    *dataPointer = &DAT_20000338;\n  }\n  FUN_08004388(*dataPointer,parameter,6);\n  if (1 < *(byte *)((int)dataPointer + 6)) {\n    FUN_08004110(*(byte *)((int)dataPointer + 6),1);\n    FUN_080041bc(*(undefined *)((int)dataPointer + 6),0);\n  }\n  do {\n    result = (**(code **)(**dataPointer + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)dataPointer + 0x49) = 0;\n  *(undefined *)((int)dataPointer + 0x4a) = 0;\n  *(undefined2 *)(dataPointer + 0x15) = 0;\n  *(undefined2 *)((int)dataPointer + 0x52) = 0;\n  *(undefined2 *)(dataPointer + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "initialize_data_08000600",
                "param_1": "dataPointer",
                "param_2": "parameter",
                "cVar1": "value",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "initialize_data_0800066c",
            "code": "\nvoid initializeData_0800066c(int dataAddress,undefined value,int limit,undefined data)\n\n{\n  *(undefined *)(dataAddress + 4) = value;\n  if (3 < limit) {\n    limit = 0;\n  }\n  *(char *)(dataAddress + 5) = (char)limit;\n  *(undefined *)(dataAddress + 6) = data;\n  *(undefined2 *)(dataAddress + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "initialize_data_0800066c",
                "param_1": "dataAddress",
                "param_2": "value",
                "param_3": "limit",
                "param_4": "data"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_parameter_08000682",
            "code": "\nundefined4 initializeParameter_08000682(undefined4 inputParameter)\n\n{\n  FUN_0800066c();\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_parameter_08000682",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "handle_param_08000690",
            "code": "\nvoid handle_param_08000690(int status,int value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "handle_param_08000690",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint processData_080006b4(int **data)\n\n{\n  bool isFull;\n  undefined result;\n  int returnValue;\n  byte currentIndex;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    isFull = false;\n    while (returnValue = (**(code **)(**data + 8))(), returnValue != 0) {\n      currentIndex = *(byte *)((int)data + 0x49);\n      result = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + currentIndex + 9) = result;\n      currentIndex = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = currentIndex;\n      if (0x3f < currentIndex) {\n        isFull = true;\n      }\n    }\n  }\n  else {\n    isFull = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (isFull) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "isFull",
                "uVar2": "result",
                "iVar3": "returnValue",
                "bVar4": "currentIndex"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_crc_08000728",
            "code": "\nuint calculate_crc_08000728(int data_address,int data_length)\n\n{\n  byte bit_count;\n  uint crc_value;\n  uint bit;\n  uint index;\n  \n  crc_value = 0xffff;\n  for (index = 0; (int)index < data_length; index = index + 1 & 0xff) {\n    crc_value = crc_value ^ *(byte *)(data_address + index + 9);\n    for (bit_count = 1; bit_count < 9; bit_count = bit_count + 1) {\n      bit = crc_value & 1;\n      crc_value = crc_value >> 1;\n      if (bit != 0) {\n        crc_value = crc_value ^ 0xa001;\n      }\n    }\n  }\n  return (crc_value & 0xff) << 8 | crc_value >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_crc_08000728",
                "param_1": "data_address",
                "param_2": "data_length",
                "bVar1": "bit_count",
                "uVar2": "crc_value",
                "uVar3": "bit",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_param_and_call_0800076c",
            "code": "\nvoid updateParamAndCall_0800076c(int **paramArray,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 updatedValue;\n  int result;\n  uint paramIndex;\n  \n  paramIndex = (uint)*(byte *)((int)paramArray + 0x49);\n  updatedValue = FUN_08000728(paramArray,paramIndex,value2,value3,value3);\n  *(char *)((int)paramArray + paramIndex + 9) = (char)((ushort)updatedValue >> 8);\n  paramIndex = paramIndex + 1 & 0xff;\n  *(char *)((int)paramArray + paramIndex + 9) = (char)updatedValue;\n  *(char *)((int)paramArray + 0x49) = (char)paramIndex + '\\x01';\n  if (1 < *(byte *)((int)paramArray + 6)) {\n    FUN_080041bc(*(byte *)((int)paramArray + 6),1);\n  }\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    (**(code **)(**paramArray + 4))(*paramArray,(int)paramArray + 9,*(undefined *)((int)paramArray + 0x49));\n  }\n  if (1 < *(byte *)((int)paramArray + 6)) {\n    FUN_080041bc(*(byte *)((int)paramArray + 6),0);\n  }\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    do {\n      result = (**(code **)(**paramArray + 0xc))();\n    } while (-1 < result);\n  }\n  *(undefined *)((int)paramArray + 0x49) = 0;\n  result = FUN_08004204();\n  paramArray[0x17] = (int *)(result + (uint)*(ushort *)((int)paramArray + 0x56));\n  *(short *)((int)paramArray + 0x52) = *(short *)((int)paramArray + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_param_and_call_0800076c",
                "param_1": "paramArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "updatedValue",
                "iVar2": "result",
                "uVar3": "paramIndex"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_and_update_080007f0",
            "code": "\nundefined4 check_and_update_080007f0(int param,undefined4 data,uint value1,undefined4 value2)\n\n{\n  bool found;\n  byte result;\n  char calculation1;\n  char calculation2;\n  int calculation_result;\n  uint index;\n  int temp;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      found = false;\nLAB_0800080a:\n      if (!found) {\n        *(short *)(param + 0x54) = *(short *)(param + 0x54) + 1;\n        return 1;\n      }\n      temp = *(byte *)(param + 10) - 1;\n      switch(*(byte *)(param + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        calculation1 = FUN_08004640(*(undefined *)(param + 0xb),*(undefined *)(param + 0xc),value1,\n                             temp,value2);\n        calculation2 = FUN_08004640(*(undefined *)(param + 0xd),*(undefined *)(param + 0xe));\n        if (*(byte *)(param + 0x60) < (byte)(calculation2 + calculation1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        temp = FUN_08004640(*(undefined *)(param + 0xb),*(undefined *)(param + 0xc),value1,\n                             temp,value2);\n        if ((uint)*(byte *)(param + 0x60) < (uint)(temp << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        result = FUN_08004640(*(undefined *)(param + 0xb),*(undefined *)(param + 0xc),value1,\n                             temp,value2);\n        if (*(byte *)(param + 0x60) < result) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    value1 = (uint)*(byte *)(param + 10);\n    if ((byte)(&DAT_08005a10)[index] == value1) {\n      found = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  temp = FUN_08004640(*(undefined *)(param + 0xb),*(undefined *)(param + 0xc),value1,temp,\n                       value2);\n  calculation_result = FUN_08004640(*(undefined *)(param + 0xd),*(undefined *)(param + 0xe));\n  if ((uint)*(byte *)(param + 0x60) <\n      (((uint)(temp << 0xc) >> 0x10) + ((uint)(calculation_result << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_and_update_080007f0",
                "param_1": "param",
                "param_2": "data",
                "param_3": "value1",
                "param_4": "value2",
                "bVar1": "found",
                "bVar2": "result",
                "cVar3": "calculation1",
                "cVar4": "calculation2",
                "iVar5": "calculation_result",
                "uVar6": "index",
                "iVar7": "temp"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataOffset,undefined newValue)\n\n{\n  *(undefined *)(dataOffset + 9) = *(undefined *)(dataOffset + 4);\n  *(byte *)(dataOffset + 10) = *(byte *)(dataOffset + 10) ^ 0x80;\n  *(undefined *)(dataOffset + 0xb) = newValue;\n  *(undefined *)(dataOffset + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataOffset",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "process_data_080008e2",
            "code": "\nint processData_080008e2(int bufferAddress,int dataAddress,undefined4 param1,undefined4 param2)\n\n{\n  int result1;\n  uint result2;\n  uint loopIndex;\n  uint bitIndex;\n  char shiftedValue;\n  int offset;\n  \n  result1 = FUN_08004640(*(undefined *)(bufferAddress + 0xb),*(undefined *)(bufferAddress + 0xc),param1,param2,\n                       param2);\n  result2 = FUN_08004640(*(undefined *)(bufferAddress + 0xd),*(undefined *)(bufferAddress + 0xe));\n  shiftedValue = (char)((result2 << 0x15) >> 0x18);\n  if ((result2 & 7) != 0) {\n    shiftedValue = shiftedValue + '\\x01';\n  }\n  *(char *)(bufferAddress + 0xb) = shiftedValue;\n  *(undefined *)(bufferAddress + 0x49) = 3;\n  bitIndex = 0;\n  for (loopIndex = 0; (int)loopIndex < (int)result2; loopIndex = loopIndex + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(dataAddress + ((loopIndex + result1) * 0x100000 >> 0x18) * 2) >>\n         (loopIndex + result1 & 0xf) & 1U) == 0) {\n      offset = (uint)*(byte *)(bufferAddress + 0x49) + bufferAddress;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) & ~(byte)(1 << bitIndex);\n    }\n    else {\n      offset = (uint)*(byte *)(bufferAddress + 0x49) + bufferAddress;\n      *(byte *)(offset + 9) = *(byte *)(offset + 9) | (byte)(1 << bitIndex);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      *(char *)(bufferAddress + 0x49) = *(char *)(bufferAddress + 0x49) + '\\x01';\n      bitIndex = 0;\n    }\n  }\n  if ((result2 & 7) != 0) {\n    *(char *)(bufferAddress + 0x49) = *(char *)(bufferAddress + 0x49) + '\\x01';\n  }\n  shiftedValue = *(char *)(bufferAddress + 0x49);\n  FUN_0800076c(bufferAddress);\n  return (int)(char)(shiftedValue + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "process_data_080008e2",
                "param_1": "bufferAddress",
                "param_2": "dataAddress",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "loopIndex",
                "uVar4": "bitIndex",
                "cVar5": "shiftedValue",
                "iVar6": "offset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "extract_and_update_data_08000998",
            "code": "\nint extract_and_update_data_08000998(int data_array,int source_data,undefined4 param3,undefined4 param4)\n\n{\n  byte temp_byte;\n  char temp_char;\n  byte result1;\n  byte result2;\n  uint loop_var1;\n  uint loop_var2;\n  \n  result1 = FUN_08004640(*(undefined *)(data_array + 0xb),*(undefined *)(data_array + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(data_array + 0xd),*(undefined *)(data_array + 0xe));\n  *(byte *)(data_array + 0xb) = result2 << 1;\n  *(undefined *)(data_array + 0x49) = 3;\n  for (loop_var1 = (uint)result1; loop_var1 < (uint)result1 + (uint)result2; loop_var1 = loop_var1 + 1 & 0xff) {\n    temp_byte = *(byte *)(data_array + 0x49);\n    *(char *)(data_array + (uint)temp_byte + 9) = (char)((ushort)*(undefined2 *)(source_data + loop_var1 * 2) >> 8)\n    ;\n    loop_var2 = temp_byte + 1 & 0xff;\n    temp_char = (char)loop_var2;\n    *(char *)(data_array + 0x49) = temp_char;\n    *(undefined *)(data_array + loop_var2 + 9) = *(undefined *)(source_data + loop_var1 * 2);\n    *(char *)(data_array + 0x49) = temp_char + '\\x01';\n  }\n  temp_char = *(char *)(data_array + 0x49);\n  FUN_0800076c(data_array);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "extract_and_update_data_08000998",
                "param_1": "data_array",
                "param_2": "source_data",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "temp_byte",
                "cVar2": "temp_char",
                "bVar3": "result1",
                "bVar4": "result2",
                "uVar5": "loop_var1",
                "uVar6": "loop_var2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_flag_in_data_08000a00",
            "code": "\nundefined4 updateFlagInData_08000a00(int sourceData,int targetData,undefined4 param3,undefined4 param4)\n\n{\n  uint result1;\n  uint shiftedValue;\n  \n  result1 = FUN_08004640(*(undefined *)(sourceData + 0xb),*(undefined *)(sourceData + 0xc),param3,param4,\n                       param4);\n  shiftedValue = (result1 << 0x14) >> 0x18;\n  if (*(char *)(sourceData + 0xd) == -1) {\n    *(ushort *)(targetData + shiftedValue * 2) =\n         (ushort)(1 << (result1 & 0xf)) | *(ushort *)(targetData + shiftedValue * 2);\n  }\n  else {\n    *(ushort *)(targetData + shiftedValue * 2) =\n         *(ushort *)(targetData + shiftedValue * 2) & ~(ushort)(1 << (result1 & 0xf));\n  }\n  *(undefined *)(sourceData + 0x49) = 6;\n  FUN_0800076c(sourceData);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_flag_in_data_08000a00",
                "param_1": "sourceData",
                "param_2": "targetData",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_data_and_return_08000a4e",
            "code": "\nundefined4 updateDataAndReturn_08000a4e(int dataPointer,int resultPointer)\n\n{\n  byte byteValue;\n  undefined2 updatedValue;\n  \n  byteValue = FUN_08004640(*(undefined *)(dataPointer + 0xb),*(undefined *)(dataPointer + 0xc));\n  updatedValue = FUN_08004640(*(undefined *)(dataPointer + 0xd),*(undefined *)(dataPointer + 0xe));\n  *(undefined2 *)(resultPointer + (uint)byteValue * 2) = updatedValue;\n  *(undefined *)(dataPointer + 0x49) = 6;\n  FUN_0800076c(dataPointer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_data_and_return_08000a4e",
                "param_1": "dataPointer",
                "param_2": "resultPointer",
                "bVar1": "byteValue",
                "uVar2": "updatedValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "update_bits_08000a7a",
            "code": "\nundefined4 updateBits_08000a7a(int dataPointer,int outputPointer,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  int result2;\n  uint counter;\n  uint bitCounter;\n  uint bitPosition;\n  uint bytePosition;\n  uint counter2;\n  \n  result1 = FUN_08004640(*(undefined *)(dataPointer + 0xb),*(undefined *)(dataPointer + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(dataPointer + 0xd),*(undefined *)(dataPointer + 0xe));\n  bitCounter = 0;\n  counter2 = 7;\n  for (counter = 0; (int)counter < result2; counter = counter + 1 & 0xffff) {\n    bytePosition = (counter + result1) * 0x100000 >> 0x18;\n    bitPosition = counter + result1 & 0xf;\n    if (((int)(uint)*(byte *)(dataPointer + counter2 + 9) >> bitCounter & 1U) == 0) {\n      *(ushort *)(outputPointer + bytePosition * 2) = *(ushort *)(outputPointer + bytePosition * 2) & ~(ushort)(1 << bitPosition);\n    }\n    else {\n      *(ushort *)(outputPointer + bytePosition * 2) = (ushort)(1 << bitPosition) | *(ushort *)(outputPointer + bytePosition * 2);\n    }\n    bitCounter = bitCounter + 1 & 0xff;\n    if (7 < bitCounter) {\n      counter2 = counter2 + 1 & 0xff;\n      bitCounter = 0;\n    }\n  }\n  *(undefined *)(dataPointer + 0x49) = 6;\n  FUN_0800076c(dataPointer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "update_bits_08000a7a",
                "param_1": "dataPointer",
                "param_2": "outputPointer",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "counter",
                "uVar4": "bitCounter",
                "uVar5": "bitPosition",
                "uVar6": "bytePosition",
                "uVar7": "counter2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "process_data_08000b04",
            "code": "\nint processData_08000b04(int dataPointer,int outputPointer)\n\n{\n  byte byte1;\n  byte byte2;\n  char charVar;\n  undefined2 result;\n  uint index;\n  \n  byte1 = *(byte *)(dataPointer + 0xc);\n  byte2 = *(byte *)(dataPointer + 0xe);\n  *(undefined *)(dataPointer + 0xd) = 0;\n  *(byte *)(dataPointer + 0xe) = byte2;\n  *(undefined *)(dataPointer + 0x49) = 6;\n  for (index = 0; index < byte2; index = index + 1 & 0xff) {\n    result = FUN_08004640(*(undefined *)(index * 2 + dataPointer + 0x10),\n                         *(undefined *)(dataPointer + (index + 4) * 2 + 9));\n    *(undefined2 *)(outputPointer + (byte1 + index) * 2) = result;\n  }\n  charVar = *(char *)(dataPointer + 0x49);\n  FUN_0800076c(dataPointer);\n  return (int)(char)(charVar + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "process_data_08000b04",
                "param_1": "dataPointer",
                "param_2": "outputPointer",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "cVar3": "charVar",
                "uVar4": "result",
                "uVar5": "index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "process_data_08000b54",
            "code": "\nint processData_08000b54(int **inputArray,int *inputValue,undefined4 inputSize)\n\n{\n  byte value;\n  int result;\n  uint returnValue;\n  int outputValue;\n  \n  inputArray[0x13] = inputValue;\n  *(char *)(inputArray + 0x18) = (char)inputSize;\n  if (*(byte *)((int)inputArray + 5) < 4) {\n    value = (**(code **)(**inputArray + 8))();\n    returnValue = (uint)value;\n  }\n  if (returnValue == 0) {\n    outputValue = 0;\n  }\n  else if ((int)returnValue < 8) {\n    outputValue = 0;\n  }\n  else {\n    outputValue = FUN_080006b4(inputArray);\n    *(char *)(inputArray + 2) = (char)outputValue;\n    if (*(char *)((int)inputArray + 9) == *(char *)(inputArray + 1)) {\n      result = FUN_080007f0(inputArray);\n      if (result < 1) {\n        result = FUN_08004204();\n        inputArray[0x17] = (int *)((uint)*(ushort *)((int)inputArray + 0x56) + result);\n        *(undefined *)(inputArray + 2) = 0;\n        switch(*(undefined *)((int)inputArray + 10)) {\n        case 1:\n        case 2:\n          outputValue = FUN_080008e2(inputArray,inputValue,inputSize);\n          break;\n        case 3:\n        case 4:\n          outputValue = FUN_08000998(inputArray,inputValue,inputSize);\n          break;\n        case 5:\n          outputValue = FUN_08000a00(inputArray,inputValue,inputSize);\n          break;\n        case 6:\n          outputValue = FUN_08000a4e(inputArray,inputValue,inputSize);\n          break;\n        case 0xf:\n          outputValue = FUN_08000a7a(inputArray,inputValue,inputSize);\n          break;\n        case 0x10:\n          outputValue = FUN_08000b04(inputArray,inputValue,inputSize);\n        }\n      }\n      else {\n        if (result != 0xff) {\n          FUN_080008cc(inputArray,result);\n          FUN_0800076c(inputArray);\n        }\n        *(char *)(inputArray + 2) = (char)result;\n        outputValue = (int)(char)result;\n      }\n    }\n    else {\n      outputValue = 0;\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "param_1": "inputArray",
                "param_2": "inputValue",
                "param_3": "inputSize",
                "bVar1": "value",
                "iVar2": "result",
                "unaff_r5": "returnValue",
                "iVar3": "outputValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_memory_08000c4c",
            "code": "\nvoid initializeMemory_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_memory_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_data_structures_08000c64",
            "code": "\nvoid initialize_data_structures_08000c64(void)\n\n{\n  undefined4 parameter;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,parameter,parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_data_structures_08000c64",
                "in_r3": "parameter"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_system_08000c8c",
            "code": "\n\n\nvoid initializeSystem_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 flag;\n  undefined4 value1;\n  undefined4 count1;\n  undefined4 value2;\n  undefined4 count2;\n  undefined4 value3;\n  undefined4 count3;\n  undefined4 count4;\n  undefined4 value4;\n  undefined4 count5;\n  undefined4 count6;\n  undefined4 value5;\n  undefined4 value6;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  value1 = 0x50000;\n  count1 = 2;\n  value2 = 0x400000;\n  count2 = 8;\n  value3 = 0x150;\n  count3 = 2;\n  count4 = 7;\n  FUN_0800201c(&flag);\n  FUN_08001f9c();\n  value4 = 0xf;\n  count5 = 2;\n  count6 = 0;\n  value5 = 0x1400;\n  value6 = 0x1000;\n  FUN_08002488(&value4,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_54": "flag",
                "local_50": "value1",
                "local_3c": "count1",
                "local_38": "value2",
                "local_34": "count2",
                "local_30": "value3",
                "local_2c": "count3",
                "local_28": "count4",
                "local_24": "value4",
                "local_20": "count5",
                "local_1c": "count6",
                "local_18": "value5",
                "local_14": "value6"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_system_08000d8e",
            "code": "\nvoid initializeSystem_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_system_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "check_and_set_param_08000d98",
            "code": "\nundefined4 checkAndSetParam_08000d98(uint input)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,input,0);\n  DAT_20000028 = input;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "check_and_set_param_08000d98",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_system_08000de4",
            "code": "\n\n\nundefined4 initializeSystem_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_system_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "update_and_store_sum_08000e18",
            "code": "\nvoid updateAndStoreSum_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "update_and_store_sum_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_global_variable_08000e30",
            "code": "\nundefined4 getGlobalVariable_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_global_variable_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_register_value_08000e3c",
            "code": "\n\n\nvoid updateRegisterValue_08000e3c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_register_value_08000e3c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_character_08000e60",
            "code": "\n\n\nvoid updateCharacter_08000e60(uint characterIndex,uint originalChar,uint newChar)\n\n{\n  uint shiftAmount;\n  uint maskLength;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  maskLength = 7 - shiftAmount;\n  if (3 < maskLength) {\n    maskLength = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (originalChar & (1 << (maskLength & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & newChar;\n  if ((int)characterIndex < 0) {\n    *(char *)((characterIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(characterIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_character_08000e60",
                "param_1": "characterIndex",
                "param_2": "originalChar",
                "param_3": "newChar",
                "uVar1": "shiftAmount",
                "uVar2": "maskLength"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_08000ec4",
            "code": "\nvoid setBit_08000ec4(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_08000ec4",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "validate_number_08000ee0",
            "code": "\n\n\nundefined4 validate_number_08000ee0(int number)\n\n{\n  if (number - 1U < 0x1000000) {\n    _DAT_e000e014 = number - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "validate_number_08000ee0",
                "param_1": "number"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_at_index_08000f0c",
            "code": "\nvoid setBitAtIndex_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_at_index_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_08000f2c",
            "code": "\n\n\nvoid updateFlag_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "run_initialization_process_08000f4e",
            "code": "\nvoid run_initialization_process_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "run_initialization_process_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "initialize_data_08000f56",
            "code": "\nundefined4 initializeData_08000f56(int dataPointer)\n\n{\n  if (dataPointer != 0) {\n    *(undefined *)(dataPointer + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(dataPointer + 0x10) = 0;\n    *(undefined *)(dataPointer + 4) = 0;\n    *(undefined *)(dataPointer + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "initialize_data_08000f56",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **ptr_ptr_value,uint bit_position)\n\n{\n  **ptr_ptr_value = **ptr_ptr_value & ~(1 << (bit_position & 0xff));\n  *(undefined *)(ptr_ptr_value + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "ptr_ptr_value",
                "param_2": "bit_position"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_bit_value_08000f8c",
            "code": "\nundefined4 updateBitValue_08000f8c(uint **inputArray)\n\n{\n  if (*(char *)((int)inputArray + 0x35) != '\\x02') {\n    result = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)inputArray + 0x35) = 5;\n  **inputArray = **inputArray & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_bit_value_08000f8c",
                "param_1": "inputArray",
                "param_1[0x15]": "result"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *registers,uint *data)\n\n{\n  uint temp1;\n  uint temp2;\n  uint index;\n  uint bitMask;\n  uint value;\n  int registerIndex;\n  uint bitShift;\n  int bitOffset;\n  \n  for (index = 0; index < 0x10; index = index + 1) {\n    temp2 = 1 << (index & 0xff);\n    bitMask = temp2 & *data;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == bitMask) {\n      if ((data[1] == 2) || (data[1] == 0x12)) {\n        registerIndex = (index >> 3) + 8;\n        bitOffset = (index & 7) << 2;\n        registers[registerIndex] = registers[registerIndex] & ~(0xf << bitOffset) | data[4] << bitOffset;\n      }\n      bitShift = index << 1;\n      temp1 = ~(3 << (bitShift & 0xff));\n      *registers = *registers & temp1 | (data[1] & 3) << (bitShift & 0xff);\n      value = data[1];\n      if (((value - 1 < 2) || (value == 0x11)) || (value == 0x12)) {\n        registers[2] = registers[2] & temp1 | data[3] << (bitShift & 0xff);\n        registers[1] = registers[1] & ~temp2 | ((data[1] << 0x1b) >> 0x1f) << (index & 0xff);\n      }\n      registers[3] = temp1 & registers[3] | data[2] << (bitShift & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((data[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        bitOffset = (index & 3) << 2;\n        if (registers == (uint *)0x40020000) {\n          registerIndex = 0;\n        }\n        else if (registers == (uint *)0x40020400) {\n          registerIndex = 1;\n        }\n        else if (registers == (uint *)0x40020800) {\n          registerIndex = 2;\n        }\n        else if (registers == (uint *)0x40020c00) {\n          registerIndex = 3;\n        }\n        else if (registers == (uint *)0x40021000) {\n          registerIndex = 4;\n        }\n        else if (registers == (uint *)0x40021400) {\n          registerIndex = 5;\n        }\n        else if (registers == (uint *)0x40021800) {\n          registerIndex = 6;\n        }\n        else if (registers == (uint *)0x40021c00) {\n          registerIndex = 7;\n        }\n        else if (registers == (uint *)0x40022000) {\n          registerIndex = 8;\n        }\n        else if (registers == (uint *)0x40022400) {\n          registerIndex = 9;\n        }\n        else {\n          registerIndex = 10;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40013800) & ~(0xf << bitOffset) | registerIndex << bitOffset;\n        temp1 = ~bitMask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((data[1] & 0x10000) != 0) {\n          temp2 = bitMask | _DAT_40013c00;\n        }\n        value = temp1 & _DAT_40013c04;\n        if ((data[1] & 0x20000) != 0) {\n          value = bitMask | _DAT_40013c04;\n        }\n        bitShift = temp1 & _DAT_40013c08;\n        if ((data[1] & 0x100000) != 0) {\n          bitShift = bitMask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = value;\n        _DAT_40013c08 = bitShift;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((data[1] & 0x200000) != 0) {\n          temp1 = bitMask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "registers",
                "param_2": "data",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "index",
                "uVar4": "bitMask",
                "uVar5": "value",
                "iVar6": "registerIndex",
                "uVar7": "bitShift",
                "iVar8": "bitOffset"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "update_param_value_08001198",
            "code": "\nvoid updateParamValue_08001198(int baseAddress,int newValue,int shouldShift)\n\n{\n  if (shouldShift == 0) {\n    *(int *)(baseAddress + 0x18) = newValue << 0x10;\n    return;\n  }\n  *(int *)(baseAddress + 0x18) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "update_param_value_08001198",
                "param_1": "baseAddress",
                "param_2": "newValue",
                "param_3": "shouldShift"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_data_if_flag_set_080011a4",
            "code": "\n\n\nvoid update_data_if_flag_set_080011a4(uint flag)\n\n{\n  if ((_DAT_40013c14 & flag) != 0) {\n    _DAT_40013c14 = flag;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_data_if_flag_set_080011a4",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_param_080011c0",
            "code": "\nundefined4 updateParam_080011c0(int *paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x3e) == '@') {\n    if (paramValue1 == 0) {\n      *(uint *)(*paramArray + 0x10) = paramValue2 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = paramValue2 & 0xffU | 1;\n    }\n  }\n  else if (paramArray[4] == 0x4000) {\n    if (*(char *)((int)paramArray + 0x3d) == '!') {\n      *(uint *)(*paramArray + 0x10) = paramValue2 & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArray + 0x10) = paramValue2 & 0xffU | 1;\n    }\n  }\n  else if (paramValue1 == 0) {\n    *(uint *)(*paramArray + 0x10) = (uint)(paramValue2 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (paramValue1 == 1) {\n    *(uint *)(*paramArray + 0x10) = (uint)(paramValue2 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_param_080011c0",
                "param_1": "paramArray",
                "param_1[0x14]": "paramValue1",
                "param_1[0x11]": "paramValue2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "set_uint_value_0800124a",
            "code": "\nundefined4 set_uint_value_0800124a(int *int_ptr)\n\n{\n  *(uint *)(*int_ptr + 0x10) = int_ptr[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "set_uint_value_0800124a",
                "param_1": "int_ptr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "process_input_08001256",
            "code": "\nundefined4 processInput_08001256(uint **input)\n\n{\n  uint *tempVar1;\n  \n  tempVar1 = input[0xb];\n  if ((*(char *)((int)input + 0x3d) == '\\\"') &&\n     ((var1 != (uint *)0x0 || (*(char *)((int)input + 0x3e) != '@')))) {\n    if ((var1 == (uint *)0x0) && (var2 == (uint *)0xc000)) {\n      **input = **input | 0x100;\n      var1 = (uint *)((int)var1 + 1);\n    }\n    else {\n      if (*(short *)((int)input + 0x2a) == 0) {\n        **input = **input | 0x200;\n      }\n      else if (*(short *)((int)input + 0x2a) == 1) {\n        if (tempVar1 == (uint *)0xffff0000) {\n          **input = **input & 0xfffffbff;\n          tempVar1 = *input;\n          if ((tempVar2 & 0x800) == 0) {\n            *tempVar1 = *tempVar1 | 0x200;\n          }\n          else {\n            *tempVar1 = *tempVar1 & 0xfffffbff;\n          }\n        }\n        else if (((tempVar1 == (uint *)0x4) || (tempVar1 == (uint *)0x8)) ||\n                (input[0xc] == (uint *)0x12)) {\n          **input = **input & 0xfffffbff;\n          **input = **input | 0x200;\n        }\n        else if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)input + 0x2a) == 2) {\n        if (input[0xb] == (uint *)0x2) {\n          **input = **input | 0x400;\n        }\n        else {\n          **input = **input & 0xfffffbff;\n          **input = **input | 0x800;\n        }\n        tempVar1 = *input;\n        if ((tempVar2 & 0x800) != 0) {\n          tempVar2 = tempVar2 | 0x1000;\n        }\n      }\n      else {\n        **input = **input | 0x400;\n        tempVar1 = *input;\n        if ((tempVar2 & 0x800) != 0) {\n          tempVar2 = tempVar2 | 0x1000;\n        }\n      }\n      var1 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "process_input_08001256",
                "param_1": "input",
                "puVar1": "tempVar1",
                "param_1[0x14]": "var1",
                "param_1[4]": "var2",
                "puVar1[1]": "tempVar2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_data_08001420",
            "code": "\nundefined4 updateData_08001420(int *data)\n\n{\n  byte *bytePtr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)dataArray;\n    dataArray = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_data_08001420",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "param_1[9]": "dataArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_parameter_value_08001440",
            "code": "\nundefined4 updateParameterValue_08001440(int *parameter)\n\n{\n  undefined *tempPointer;\n  \n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    tempPointer = (undefined *)dataArray;\n    dataArray = (int)(tempPointer + 1);\n    *tempPointer = (char)*(undefined4 *)(*parameter + 0x10);\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_parameter_value_08001440",
                "param_1": "parameter",
                "puVar1": "tempPointer",
                "param_1[9]": "dataArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "validate_and_initialize_params_08001460",
            "code": "\nundefined4 validateAndInitializeParams_08001460(uint **paramList,uint *optionalParam,int optionalParamLength,uint *requiredParam)\n\n{\n  undefined4 resultCode;\n  uint *tempPtr;\n  \n  if (*(char *)((int)paramList + 0x3d) == '(') {\n    if (optionalParam == (uint *)0x0) {\n      resultCode = 1;\n    }\n    else if (optionalParamLength == 0) {\n      resultCode = 1;\n    }\n    else if (*(char *)(paramList + 0xf) == '\\x01') {\n      resultCode = 2;\n    }\n    else {\n      *(undefined *)(paramList + 0xf) = 1;\n      tempPtr = *paramList;\n      if ((*tempPtr & 1) == 0) {\n        *tempPtr = *tempPtr | 1;\n      }\n      **paramList = **paramList & 0xfffff7ff;\n      *(undefined *)((int)paramList + 0x3d) = 0x29;\n      *(undefined *)((int)paramList + 0x3e) = 0x20;\n      resultCode = 0;\n      paramList[0x10] = (uint *)0x0;\n      paramList[9] = optionalParam;\n      *(short *)((int)paramList + 0x2a) = (short)optionalParamLength;\n      paramList[0xb] = requiredParam;\n      *(undefined2 *)(paramList + 10) = *(undefined2 *)((int)paramList + 0x2a);\n      *(undefined *)(paramList + 0xf) = 0;\n      (*paramList)[1] = (*paramList)[1] | 0x700;\n    }\n  }\n  else {\n    resultCode = 2;\n  }\n  return resultCode;\n}\n\n",
            "renaming": {
                "FUN_08001460": "validate_and_initialize_params_08001460",
                "param_1": "paramList",
                "param_2": "optionalParam",
                "param_3": "optionalParamLength",
                "param_4": "requiredParam",
                "uVar1": "resultCode",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "check_and_process_data_080014ec",
            "code": "\nundefined4 check_and_process_data_080014ec(uint **data_ptr,uint *data_value,int data_count,uint *data_ptr2)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)data_ptr + 0x3d) == '(') {\n    if (data_value == (uint *)0x0) {\n      result = 1;\n    }\n    else if (data_count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data_ptr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xf) = 1;\n      ptr = *data_ptr;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **data_ptr = **data_ptr & 0xfffff7ff;\n      *(undefined *)((int)data_ptr + 0x3d) = 0x2a;\n      *(undefined *)((int)data_ptr + 0x3e) = 0x20;\n      result = 0;\n      ptr_array = (uint *)0x0;\n      data_ptr3 = data_value;\n      *(short *)((int)data_ptr + 0x2a) = (short)data_count;\n      data_ptr4 = data_ptr2;\n      *(undefined2 *)(data_ptr + 10) = *(undefined2 *)((int)data_ptr + 0x2a);\n      *(undefined *)(data_ptr + 0xf) = 0;\n      (*data_ptr)[1] = (*data_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "check_and_process_data_080014ec",
                "param_1": "data_ptr",
                "param_2": "data_value",
                "param_3": "data_count",
                "param_4": "data_ptr2",
                "uVar1": "result",
                "puVar2": "ptr",
                "param_1[0x10]": "ptr_array",
                "param_1[9]": "data_ptr3",
                "param_1[0xb]": "data_ptr4"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_and_set_flags_08001578",
            "code": "\nundefined4 initializeAndSetFlags_08001578(uint **param)\n\n{\n  uint *firstElementPtr;\n  \n  if (*(char *)((int)param + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)param + 0x3d) = 0x28;\n  firstElementPtr = *param;\n  if ((*firstElementPtr & 1) == 0) {\n    *firstElementPtr = *firstElementPtr | 1;\n  }\n  **param = **param | 0x400;\n  (*param)[1] = (*param)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_and_set_flags_08001578",
                "param_1": "param",
                "puVar1": "firstElementPtr"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "process_input_080015bc",
            "code": "\nundefined4 processInput_080015bc(int *inputData)\n\n{\n  char charValue;\n  byte *byteArray;\n  \n  charValue = *(char *)((int)inputData + 0x3d);\n  if (*(short *)((int)inputData + 0x2a) != 0) {\n    byteArray = (byte *)arrayAtIndex9;\n    arrayAtIndex9 = (int)(byteArray + 1);\n    *(uint *)(*inputData + 0x10) = (uint)*byteArray;\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    if ((*(short *)((int)inputData + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*inputData + 4) = *(uint *)(*inputData + 4) & 0xfffffbff;\n      valueAtIndexC = 0x21;\n      *(undefined *)((int)inputData + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "process_input_080015bc",
                "param_1": "inputData",
                "cVar1": "charValue",
                "pbVar2": "byteArray",
                "param_1[9]": "arrayAtIndex9",
                "param_1[0xc]": "valueAtIndexC"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "process_parameter_0800160e",
            "code": "\nundefined4 processParameter_0800160e(int *parameter)\n\n{\n  char character;\n  undefined *pointer;\n  \n  character = *(char *)((int)parameter + 0x3d);\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    pointer = (undefined *)parameter[9];\n    parameter[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*parameter + 0x10);\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    if ((*(short *)((int)parameter + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xfffffbff;\n      arrayElement = 0x22;\n      *(undefined *)((int)parameter + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "process_parameter_0800160e",
                "param_1": "parameter",
                "cVar1": "character",
                "puVar2": "pointer",
                "param_1[0xc]": "arrayElement"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_data_0800165a",
            "code": "\nundefined4 processData_0800165a(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result;\n  uint flags;\n  \n  flags = *(uint *)(*data + 0x18);\n  if ((flags & 0x80) == 0) {\n    result = *(undefined2 *)(data + 3);\n  }\n  else {\n    result = *(undefined2 *)(data + 6);\n  }\n  FUN_08003880(data,(*(uint *)(*data + 0x18) & 4) == 0,result,flags,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_data_0800165a",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "update_configuration_08001684",
            "code": "\nundefined4 updateConfiguration_08001684(uint **config)\n\n{\n  if (((config[0xb] == (uint *)0x4) || (config[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)config + 0x3d) == '(')) {\n    config[0xb] = (uint *)0xffff0000;\n    (*config)[1] = (*config)[1] & 0xfffff8ff;\n    (*config)[5] = 0xfffffbff;\n    **config = **config & 0xfffffbff;\n    config[0xc] = (uint *)0x0;\n    *(undefined *)((int)config + 0x3d) = 0x20;\n    *(undefined *)((int)config + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)config + 0x3d) == '!') {\n    config[0xb] = (uint *)0xffff0000;\n    config[0xc] = (uint *)0x21;\n    *(undefined *)((int)config + 0x3d) = 0x20;\n    *(undefined *)((int)config + 0x3e) = 0;\n    (*config)[1] = (*config)[1] & 0xfffff8ff;\n    (*config)[5] = 0xfffffbff;\n    **config = **config & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*config)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "update_configuration_08001684",
                "param_1": "config"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_param_0800171a",
            "code": "\nundefined4 processParam_0800171a(uint **paramArray)\n\n{\n  char charValue;\n  uint *pointerValue;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  pointerValue = paramArray[0xb];\n  if ((*(short *)(paramArray + 10) == 0) && (charValue == '!')) {\n    if ((pointerValue == (uint *)0x4) || ((pointerValue == (uint *)0x8 || (pointerValue == (uint *)0xffff0000)))) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n      **paramArray = **paramArray | 0x200;\n      paramArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      if (*(char *)((int)paramArray + 0x3e) == '@') {\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n      paramArray[0xc] = (uint *)0x11;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)paramArray + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      (*paramArray)[1] = (*paramArray)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)paramArray + 0x3e) == '@') {\n      if (paramArray[0x14] == (uint *)0x0) {\n        if (paramArray[0x13] == (uint *)0x1) {\n          (*paramArray)[4] = (uint)paramArray[0x12] & 0xff;\n          paramArray[0x14] = (uint *)((int)paramArray[0x14] + 2);\n        }\n        else {\n          (*paramArray)[4] = (uint)((int)paramArray[0x12] << 0x10) >> 0x18;\n          paramArray[0x14] = (uint *)((int)paramArray[0x14] + 1);\n        }\n      }\n      else if (paramArray[0x14] == (uint *)0x1) {\n        (*paramArray)[4] = (uint)paramArray[0x12] & 0xff;\n        paramArray[0x14] = (uint *)((int)paramArray[0x14] + 1);\n      }\n      else if (paramArray[0x14] == (uint *)0x2) {\n        if (*(char *)((int)paramArray + 0x3d) == '\\\"') {\n          **paramArray = **paramArray | 0x100;\n        }\n        else if (*(char *)((int)paramArray + 0x3d) == '!') {\n          pointerValue = paramArray[9];\n          paramArray[9] = (uint *)((int)pointerValue + 1);\n          (*paramArray)[4] = (uint)*(byte *)pointerValue;\n          *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerValue = paramArray[9];\n      paramArray[9] = (uint *)((int)pointerValue + 1);\n      (*paramArray)[4] = (uint)*(byte *)pointerValue;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_param_0800171a",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "pointerValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "handle_param_08001864",
            "code": "\nundefined4 handleParam_08001864(uint **paramArray)\n\n{\n  uint *pointerVal;\n  \n  pointerVal = paramArray[11];\n  if (*(char *)((int)paramArray + 0x3d) == '!') {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      if (((pointerVal == (uint *)0x4) || (pointerVal == (uint *)0x8)) || (pointerVal == (uint *)0xffff0000)) {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        **paramArray = **paramArray | 0x200;\n        paramArray[12] = (uint *)0x0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        if (*(char *)((int)paramArray + 0x3e) == '@') {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        paramArray[12] = (uint *)0x11;\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      pointerVal = paramArray[9];\n      paramArray[9] = (uint *)((int)pointerVal + 1);\n      (*paramArray)[4] = (uint)*(byte *)pointerVal;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "handle_param_08001864",
                "param_1": "paramArray",
                "puVar1": "pointerVal",
                "param_1[0xb]": "paramArray[11]",
                "param_1[0xc]": "paramArray[12]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_param_08001904",
            "code": "\nundefined4 processParam_08001904(uint **param)\n\n{\n  uint *tempVar;\n  \n  if (*(char *)((int)param + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)param + 0x2a) < 4) {\n      if (*(ushort *)((int)param + 0x2a) < 2) {\n        **param = **param & 0xfffffbff;\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        tempVar = param[9];\n        param[9] = (uint *)((int)tempVar + 1);\n        *(char *)tempVar = (char)(*param)[4];\n        *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        param[0xc] = (uint *)0x0;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      tempVar = param[9];\n      param[9] = (uint *)((int)tempVar + 1);\n      *(char *)tempVar = (char)(*param)[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n      if (*(short *)((int)param + 0x2a) == 3) {\n        (*param)[1] = (*param)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_param_08001904",
                "param_1": "param",
                "puVar1": "tempVar"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "update_flag_and_data_080019a0",
            "code": "\nundefined4 updateFlagAndData_080019a0(uint **inputParams)\n\n{\n  uint *tempPointer;\n  \n  if (*(short *)((int)inputParams + 0x2a) == 4) {\n    (*inputParams)[1] = (*inputParams)[1] & 0xfffffbff;\n    tempPointer = dataPointer;\n    dataPointer = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputParams + 0x2a) == 3) {\n    (*inputParams)[1] = (*inputParams)[1] & 0xfffffbff;\n    **inputParams = **inputParams & 0xfffffbff;\n    tempPointer = dataPointer;\n    dataPointer = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputParams + 0x2a) == 2) {\n    if ((int)inputParams[0xb] - 1U < 2) {\n      **inputParams = **inputParams & 0xfffffbff;\n      **inputParams = **inputParams | 0x100;\n    }\n    else {\n      **inputParams = **inputParams | 0x200;\n    }\n    tempPointer = dataPointer;\n    dataPointer = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    tempPointer = dataPointer;\n    dataPointer = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    (*inputParams)[1] = (*inputParams)[1] & 0xfffffcff;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    inputParams[0xc] = (uint *)0x0;\n    if (*(char *)((int)inputParams + 0x3e) == '@') {\n      *(undefined *)((int)inputParams + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)inputParams + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempPointer = dataPointer;\n    dataPointer = (uint *)((int)tempPointer + 1);\n    *(char *)tempPointer = (char)(*inputParams)[4];\n    *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "update_flag_and_data_080019a0",
                "param_1": "inputParams",
                "puVar1": "tempPointer",
                "param_1[9]": "dataPointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_input_08001ab0",
            "code": "\nvoid processInput_08001ab0(uint **input)\n\n{\n  int returnValue;\n  uint *tempPtr1;\n  uint *tempPtr2;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  tempPtr2 = *input;\n  if ((tempPtr2[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = input[9];\n        input[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_08001aac(input);\n    }\n    else {\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = input[9];\n        input[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      FUN_08003900(input);\n    }\n  }\n  else {\n    tempPtr2[1] = tempPtr2[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x35) == '\\x01') {\n      input[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = FUN_08000f8c(input[0xe]);\n      if (returnValue != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          tempPtr2 = input[9];\n          input[9] = (uint *)((int)tempPtr2 + 1);\n          *(char *)tempPtr2 = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0x14])();\n      }\n    }\n    else {\n      input[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = FUN_08000f8c(input[0xd]);\n      if (returnValue != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_080038d0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_input_08001ab0",
                "param_1": "input",
                "iVar1": "returnValue",
                "puVar2": "tempPtr1",
                "puVar3": "tempPtr2"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_params_08001bfc",
            "code": "\nundefined4 processParams_08001bfc(uint **params)\n\n{\n  char charValue;\n  uint *ptrValue1;\n  uint *ptrValue2;\n  \n  charValue = *(char *)((int)params + 0x3d);\n  (*params)[1] = (*params)[1] & 0xfffff8ff;\n  **params = **params | 1;\n  **params = **params & 0xfffffbff;\n  ptrValue1 = *params;\n  if ((ptrValue1[1] & 0x800) != 0) {\n    if ((*(char *)((int)params + 0x3d) == '\\\"') || (*(char *)((int)params + 0x3d) == '*')) {\n      *(short *)((int)params + 0x2a) = (short)*(undefined4 *)(*params[0xe] + 4);\n    }\n    else {\n      *(short *)((int)params + 0x2a) = (short)*(undefined4 *)(*params[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)params + 0x2a) != 0) {\n    if ((ptrValue1[5] & 4) != 0) {\n      ptrValue2 = params[9];\n      params[9] = (uint *)((int)ptrValue2 + 1);\n      *(char *)ptrValue2 = (char)ptrValue1[4];\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n    if (((*params)[5] & 0x40) != 0) {\n      ptrValue1 = params[9];\n      params[9] = (uint *)((int)ptrValue1 + 1);\n      *(char *)ptrValue1 = (char)(*params)[4];\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n    params[0x10] = (uint *)((uint)params[0x10] | 4);\n  }\n  if (params[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      params[0xb] = (uint *)0xffff0000;\n      params[0xc] = (uint *)0x0;\n      *(undefined *)((int)params + 0x3d) = 0x20;\n      *(undefined *)((int)params + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((params[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      params[0xc] = (uint *)0x0;\n      *(undefined *)((int)params + 0x3d) = 0x20;\n      *(undefined *)((int)params + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_params_08001bfc",
                "param_1": "params",
                "cVar1": "charValue",
                "puVar2": "ptrValue1",
                "puVar3": "ptrValue2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_data_08001d00",
            "code": "\nvoid processData_08001d00(int *data)\n\n{\n  int value;\n  uint flags1;\n  uint flags2;\n  uint flags3;\n  \n  value = *data;\n  flags3 = *(uint *)(value + 0x18);\n  flags1 = *(uint *)(value + 0x14);\n  flags2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flags1 & 0x10001) == 0) || ((flags2 & 0x200) == 0)) {\n      if (((flags1 & 0x10008) == 0) || ((flags2 & 0x200) == 0)) {\n        if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n          FUN_08001256(data);\n        }\n      }\n      else {\n        FUN_0800124a(data);\n      }\n    }\n    else {\n      FUN_080011c0(data);\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08001904(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_080019a0(data);\n        return;\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_0800171a(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08001864(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((flags1 & 0x10010) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_08001bfc(data);\n      return;\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_0800160e(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08001440(data);\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_080015bc(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08001420(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_data_08001d00",
                "param_1": "data",
                "iVar1": "value",
                "uVar2": "flags1",
                "uVar3": "flags2",
                "uVar4": "flags3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "update_flags_and_values_08001e68",
            "code": "\nvoid updateFlagsAndValues_08001e68(uint **pointer_array)\n\n{\n  char temp_char;\n  uint *ptr_temp;\n  uint value_1;\n  uint value_2;\n  \n  ptr_temp = *pointer_array;\n  value_1 = ptr_temp[5];\n  value_2 = ptr_temp[1];\n  if (((value_1 & 0x10100) != 0) && ((value_2 & 0x100) != 0)) {\n    pointer_array[0x10] = (uint *)((uint)pointer_array[0x10] | 1);\n    ptr_temp[5] = 0xfffffeff;\n  }\n  if (((value_1 & 0x10200) != 0) && ((value_2 & 0x100) != 0)) {\n    pointer_array[0x10] = (uint *)((uint)pointer_array[0x10] | 2);\n    (*pointer_array)[5] = 0xfffffdff;\n  }\n  if (((value_1 & 0x10400) != 0) && ((value_2 & 0x100) != 0)) {\n    temp_char = *(char *)((int)pointer_array + 0x3d);\n    if (((*(char *)((int)pointer_array + 0x3e) == ' ') && (*(short *)((int)pointer_array + 0x2a) == 0)) &&\n       (((temp_char == '!' || (temp_char == ')')) || ((temp_char == '(' && (pointer_array[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(pointer_array);\n    }\n    else {\n      pointer_array[0x10] = (uint *)((uint)pointer_array[0x10] | 4);\n      if (*(char *)((int)pointer_array + 0x3e) == '\\x10') {\n        **pointer_array = **pointer_array | 0x200;\n      }\n      (*pointer_array)[5] = 0xfffffbff;\n    }\n  }\n  if (((value_1 & 0x10800) != 0) && ((value_2 & 0x100) != 0)) {\n    pointer_array[0x10] = (uint *)((uint)pointer_array[0x10] | 8);\n    (*pointer_array)[5] = 0xfffff7ff;\n  }\n  if (pointer_array[0x10] != (uint *)0x0) {\n    FUN_08001ab0(pointer_array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "update_flags_and_values_08001e68",
                "param_1": "pointer_array",
                "cVar1": "temp_char",
                "puVar2": "ptr_temp",
                "uVar3": "value_1",
                "uVar4": "value_2"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "initialize_system_08001f9c",
            "code": "\n\n\nundefined4 initializeSystem_08001f9c(void)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initialValue = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initialValue = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentValue = FUN_08000e30();\n      } while ((uint)(currentValue - initialValue) < 0x3e9);\n      return 3;\n    }\n    currentValue = FUN_08000e30();\n  } while ((uint)(currentValue - initialValue) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "initialize_system_08001f9c",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "validate_and_control_0800201c",
            "code": "\n\n\nundefined4 validate_and_control_0800201c(uint *param_1)\n\n{\n  int initial_time;\n  int current_time;\n  undefined4 result;\n  bool flag;\n  \n  if (param_1 == (uint *)0x0) {\n    return 1;\n  }\n  if ((*param_1 & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (param1_1 == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (param1_1 == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (param1_1 == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (param1_1 == 0) {\n        initial_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - initial_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initial_time = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          current_time = FUN_08000e30();\n          if (100 < (uint)(current_time - initial_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (param1_3 != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | param1_4 << 3;\n    }\n    else if (param1_3 == 0) {\n      _DAT_42470000 = 0;\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | param1_4 << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param1_5 == 0) {\n      _DAT_42470e80 = 0;\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    flag = (_DAT_40023840 & 0x10000000) == 0;\n    if (flag) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initial_time = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08000e30();\n        if (2 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    if (param1_2 == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (param1_2 == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (param1_2 == 0) {\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initial_time = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        current_time = FUN_08000e30();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (param1_6 == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (param1_6 == 2) {\n    _DAT_42470060 = 0;\n    initial_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             param1_7 | param1_8 | param1_9 << 6 | ((param1_10 >> 1) - 1) * 0x10000 |\n             param1_11 << 0x18;\n        _DAT_42470060 = 1;\n        initial_time = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08000e30();\n        } while ((uint)(current_time - initial_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - initial_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    initial_time = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08000e30();\n    } while ((uint)(current_time - initial_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "validate_and_control_0800201c",
                "iVar1": "initial_time",
                "iVar2": "current_time",
                "uVar3": "result",
                "bVar4": "flag",
                "param_1[1]": "param1_1",
                "param_1[2]": "param1_2",
                "param_1[3]": "param1_3",
                "param_1[4]": "param1_4",
                "param_1[5]": "param1_5",
                "param_1[6]": "param1_6",
                "param_1[7]": "param1_7",
                "param_1[8]": "param1_8",
                "param_1[9]": "param1_9",
                "param_1[10]": "param1_10",
                "param_1[0xb]": "param1_11"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_clock_speed_080023b4",
            "code": "\n\n\nuint calculateClockSpeed_080023b4(void)\n\n{\n  undefined4 input_r3;\n  uint result;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = FUN_080002d0(result * 16000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)computeCarry(result * 0x3d08,result)) * 0x400 | result * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_r3);\n  }\n  else {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = FUN_080002d0(result * 8000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)computeCarry(result * 0x3d08,result)) * 0x200,_DAT_40023804 & 0x3f,0,input_r3);\n  }\n  return result / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_clock_speed_080023b4",
                "in_r3": "input_r3",
                "uVar1": "result",
                "CARRY4": "computeCarry"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "configure_peripheral_08002488",
            "code": "\n\n\nundefined4 configurePeripheral_08002488(uint *config,uint configSize)\n\n{\n  int startTime;\n  int endTime;\n  uint status;\n  \n  if (config == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < configSize) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)configSize);\n    if (configSize != (configSize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 2) != 0) {\n    if ((*config & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*config & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | config[2];\n  }\n  if ((*config & 1) != 0) {\n    status = config[1];\n    if (status == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (status - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = status | _DAT_40023808 & 0xfffffffc;\n    startTime = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == config[1] * 4) break;\n      endTime = FUN_08000e30();\n      if (5000 < (uint)(endTime - startTime)) {\n        return 3;\n      }\n    }\n  }\n  if (configSize < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)configSize);\n    if (configSize != (configSize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | config[3];\n  }\n  if ((*config & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | config[4] << 3;\n  }\n  status = FUN_080023b4();\n  DAT_2000002c = status >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "configure_peripheral_08002488",
                "param_1": "config",
                "param_2": "configSize",
                "iVar1": "startTime",
                "iVar2": "endTime",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_data_pointer_080025e0",
            "code": "\nundefined4 get_data_pointer_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_data_pointer_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "calculate_shifted_result_080025ec",
            "code": "\n\n\nuint calculate_shifted_result_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "calculate_shifted_result_080025ec",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "get_shifted_value_0800260c",
            "code": "\n\n\nuint getShiftedValue_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "get_shifted_value_0800260c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "initialize_flags_0800262c",
            "code": "\n\n\nvoid initializeFlags_0800262c(int *flagsArray)\n\n{\n  if (((*(uint *)(*flagsArray + 0xc) & 0x100) != 0) && ((*(uint *)(*flagsArray + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*flagsArray + 0xc) = *(uint *)(*flagsArray + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*flagsArray + 0xc) & 0x200) != 0) && ((*(uint *)(*flagsArray + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(flagsArray);\n    *(uint *)(*flagsArray + 0xc) = *(uint *)(*flagsArray + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)flagsArray + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "initialize_flags_0800262c",
                "param_1": "flagsArray"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "update_configuration_0800268e",
            "code": "\nvoid updateConfiguration_0800268e(uint **config)\n\n{\n  uint *data;\n  \n  *(undefined *)((int)config + 0x39) = 2;\n  data = *config;\n  if ((data[8] & 0x1111) == 0) {\n    if ((data[8] & 0x444) == 0) {\n      *data = *data & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(config);\n  *(undefined *)((int)config + 0x39) = 0;\n  *(undefined *)(config + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "update_configuration_0800268e",
                "param_1": "config",
                "puVar1": "data"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_conditions_080026ce",
            "code": "\nvoid processConditions_080026ce(int *param)\n\n{\n  int value;\n  \n  value = *param;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 6) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 6) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 6) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(param + 6) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_0800376e(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800293e(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_080026cc(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_0800293c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_conditions_080026ce",
                "param_1": "param",
                "iVar1": "value"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bitwise_value_08002848",
            "code": "\nvoid updateBitwiseValue_08002848(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bitwise_value_08002848",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "update_memory_08002864",
            "code": "\nundefined4 updateMemory_08002864(uint **memoryPointer,undefined4 value)\n\n{\n  bool isSpecialAddress;\n  uint *currentPointer;\n  \n  FUN_08002848(*memoryPointer,value,0);\n  currentPointer = *memoryPointer;\n  if (currentPointer == (uint *)0x40010000) {\n    isSpecialAddress = true;\n  }\n  else if (currentPointer == (uint *)0x40010400) {\n    isSpecialAddress = true;\n  }\n  else {\n    isSpecialAddress = false;\n  }\n  if (((isSpecialAddress) && ((currentPointer[8] & 0x1111) == 0)) && ((currentPointer[8] & 0x444) == 0)) {\n    currentPointer[0x11] = currentPointer[0x11] & 0xffff7fff;\n  }\n  currentPointer = *memoryPointer;\n  if (((currentPointer[8] & 0x1111) == 0) && ((currentPointer[8] & 0x444) == 0)) {\n    *currentPointer = *currentPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryPointer + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "update_memory_08002864",
                "param_1": "memoryPointer",
                "param_2": "value",
                "bVar1": "isSpecialAddress",
                "puVar2": "currentPointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_bitwise_value_080028d4",
            "code": "\nvoid updateBitwiseValue_080028d4(int ptr,uint bitPosition,int newValue)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_bitwise_value_080028d4",
                "param_1": "ptr",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_flags_and_values_080028f0",
            "code": "\nundefined4 updateFlagsAndValues_080028f0(uint **ptrArray,undefined4 param2)\n\n{\n  uint *ptr;\n  \n  FUN_080028d4(*ptrArray,param2,0);\n  ptr = *ptrArray;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    ptr[0x11] = ptr[0x11] & 0xffff7fff;\n  }\n  ptr = *ptrArray;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_flags_and_values_080028f0",
                "param_1": "ptrArray",
                "param_2": "param2",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "clear_flags_08002940",
            "code": "\nvoid clearFlags_08002940(int *dataPtr)\n\n{\n  *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "clear_flags_08002940",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_data_0800295c",
            "code": "\nundefined4 processData_0800295c(int *data)\n\n{\n  short counter;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  counter = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "sVar1": "counter",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_and_update_value_080029c8",
            "code": "\nvoid calculateAndUpdateValue_080029c8(int *inputArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int baseAddress;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       *(uint *)(*inputArray + 0xc) & 0xffff69f3 | inputArray[2] | inputArray[4] | inputArray[5] | inputArray[7];\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  if (inputArray[7] == 0x8000) {\n    baseAddress = *inputArray;\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      result1 = FUN_080025ec();\n      result6 = inputArray[1];\n      result2 = FUN_080025ec();\n      result7 = inputArray[1];\n      result3 = FUN_080025ec();\n      result8 = inputArray[1];\n      result4 = FUN_080025ec();\n      result9 = inputArray[1];\n      result5 = FUN_080025ec();\n      *(uint *)(baseAddress + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                          (int)(((ulonglong)(uint)(result5 * 0x19) /\n                                (ulonglong)(uint)(inputArray[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n             (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n      return;\n    }\n    result1 = FUN_0800260c();\n    result6 = inputArray[1];\n    result2 = FUN_0800260c();\n    result7 = inputArray[1];\n    result3 = FUN_0800260c();\n    result8 = inputArray[1];\n    result4 = FUN_0800260c();\n    result9 = inputArray[1];\n    result5 = FUN_0800260c();\n    *(uint *)(baseAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 1) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 1) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 1)) / 100) * 0x10;\n    return;\n  }\n  baseAddress = *inputArray;\n  if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n    result1 = FUN_080025ec();\n    result6 = inputArray[1];\n    result2 = FUN_080025ec();\n    result7 = inputArray[1];\n    result3 = FUN_080025ec();\n    result8 = inputArray[1];\n    result4 = FUN_080025ec();\n    result9 = inputArray[1];\n    result5 = FUN_080025ec();\n    *(uint *)(baseAddress + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result1 = FUN_0800260c();\n  result6 = inputArray[1];\n  result2 = FUN_0800260c();\n  result7 = inputArray[1];\n  result3 = FUN_0800260c();\n  result8 = inputArray[1];\n  result4 = FUN_0800260c();\n  result9 = inputArray[1];\n  result5 = FUN_0800260c();\n  *(uint *)(baseAddress + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                      (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n         (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_and_update_value_080029c8",
                "param_1": "inputArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "baseAddress"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "validate_params_08002d0c",
            "code": "\nundefined4 validate_params_08002d0c(uint **pointer_array,uint mask,uint condition,int value,uint threshold)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**pointer_array) == 0) != condition) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (result = FUN_08000e30(), (uint)(result - value) <= threshold))));\n  (*pointer_array)[3] = (*pointer_array)[3] & 0xfffffe5f;\n  (*pointer_array)[5] = (*pointer_array)[5] & 0xfffffffe;\n  *(undefined *)((int)pointer_array + 0x39) = 0x20;\n  *(undefined *)((int)pointer_array + 0x3a) = 0x20;\n  *(undefined *)(pointer_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "validate_params_08002d0c",
                "param_1": "pointer_array",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "value",
                "param_5": "threshold",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "initialize_data_08002d72",
            "code": "\nundefined4 initializeData_08002d72(int *dataPointer)\n\n{\n  if (dataPointer != (int *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 0x24;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffdfff;\n    FUN_080029c8(dataPointer);\n    *(uint *)(*dataPointer + 0x10) = *(uint *)(*dataPointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x2000;\n    value4 = 0;\n    *(undefined *)((int)dataPointer + 0x39) = 0x20;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "initialize_data_08002d72",
                "param_1": "dataPointer",
                "param_1[0xf]": "value4"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_data_08002dd0",
            "code": "\nundefined4 processData_08002dd0(int *data,ushort *input,int input_length,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)data + 0x39) == ' ') {\n    if (input == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (input_length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(data + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(data + 0xe) = 1;\n      data[0xf] = 0;\n      *(undefined *)((int)data + 0x39) = 0x21;\n      status = FUN_08000e30();\n      *(short *)(data + 9) = (short)input_length;\n      *(short *)((int)data + 0x26) = (short)input_length;\n      while (*(short *)((int)data + 0x26) != 0) {\n        *(short *)((int)data + 0x26) = *(short *)((int)data + 0x26) + -1;\n        if (data[2] == 0x1000) {\n          result = FUN_08002d0c(data,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = *input & 0x1ff;\n          if (data[4] == 0) {\n            input = input + 1;\n          }\n          else {\n            input = (ushort *)((int)input + 1);\n          }\n        }\n        else {\n          result = FUN_08002d0c(data,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = (uint)*(byte *)input;\n          input = (ushort *)((int)input + 1);\n        }\n      }\n      result = FUN_08002d0c(data,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)data + 0x39) = 0x20;\n        *(undefined *)(data + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "param_1": "data",
                "param_2": "input",
                "param_3": "input_length",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "verify_and_set_data_08002eb2",
            "code": "\nundefined4 verify_and_set_data_08002eb2(int *data_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)data_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    data_array[8] = value_1;\n    *(short *)(data_array + 9) = (short)value_2;\n    *(short *)((int)data_array + 0x26) = (short)value_2;\n    data_array[0xf] = 0;\n    *(undefined *)((int)data_array + 0x39) = 0x21;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "verify_and_set_data_08002eb2",
                "param_1": "data_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "data_array[8]",
                "param_1[0xf]": "data_array[0xf]"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "validate_and_update_data_08002efa",
            "code": "\nundefined4 validate_and_update_data_08002efa(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data_value1 = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "validate_and_update_data_08002efa",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "data_value1"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "clear_flag_08002f4c",
            "code": "\nundefined4 clearFlag_08002f4c(int *flagPointer)\n\n{\n  *(uint *)(*flagPointer + 0xc) = *(uint *)(*flagPointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)flagPointer + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "clear_flag_08002f4c",
                "param_1": "flagPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_data_08002f66",
            "code": "\nundefined4 processData_08002f66(int *data)\n\n{\n  byte *bytePtr;\n  short counter;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefinedPtr = (undefined *)data[10];\n    data[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    bytePtr = (byte *)data[10];\n    data[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffedf;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_data_08002f66",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "sVar2": "counter",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "check_flags_08002ffc",
            "code": "\nvoid checkFlags_08002ffc(uint **inputParams)\n\n{\n  int returnValue;\n  uint flagValue;\n  uint *paramPtr;\n  uint tempFlag;\n  uint inputValue;\n  \n  paramPtr = *inputParams;\n  inputValue = *paramPtr;\n  flagValue = paramPtr[3];\n  if ((((inputValue & 0xf) == 0) && ((inputValue & 0x20) != 0)) && ((flagValue & 0x20) != 0)) {\n    FUN_08002f66(inputParams);\n    return;\n  }\n  if (((inputValue & 0xf) == 0) || ((tempFlag = paramPtr[5] & 1, tempFlag == 0 && ((flagValue & 0x120) == 0)))) {\n    if (((inputValue & 0x80) != 0) && ((flagValue & 0x80) != 0)) {\n      FUN_0800295c(inputParams);\n      return;\n    }\n    if (((inputValue & 0x40) != 0) && ((flagValue & 0x40) != 0)) {\n      FUN_08002f4c(inputParams);\n    }\n  }\n  else {\n    if (((inputValue & 1) != 0) && ((flagValue & 0x100) != 0)) {\n      outputFlags = (uint *)((uint)outputFlags | 1);\n    }\n    if (((inputValue & 4) != 0) && (tempFlag != 0)) {\n      outputFlags = (uint *)((uint)outputFlags | 2);\n    }\n    if (((inputValue & 2) != 0) && (tempFlag != 0)) {\n      outputFlags = (uint *)((uint)outputFlags | 4);\n    }\n    if (((inputValue & 8) != 0) && (tempFlag != 0)) {\n      outputFlags = (uint *)((uint)outputFlags | 8);\n    }\n    if (outputFlags != (uint *)0x0) {\n      if (((inputValue & 0x20) != 0) && ((flagValue & 0x20) != 0)) {\n        FUN_08002f66(inputParams);\n      }\n      if ((((uint)outputFlags & 8) == 0) && (((*inputParams)[5] & 0x40) == 0)) {\n        FUNC_08003f94(inputParams);\n        outputFlags = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(inputParams);\n      paramPtr = *inputParams;\n      if ((paramPtr[5] & 0x40) == 0) {\n        FUNC_08003f94(inputParams);\n        return;\n      }\n      paramPtr[5] = paramPtr[5] & 0xffffffbf;\n      if (outputPtr == (uint *)0x0) {\n        FUNC_08003f94(inputParams);\n        return;\n      }\n      outputPtr[0x14] = (uint)&label1;\n      returnValue = FUN_08000f8c(outputPtr);\n      if (returnValue != 0) {\n        (*(code *)outputPtr[0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "check_flags_08002ffc",
                "param_1": "inputParams",
                "iVar1": "returnValue",
                "uVar2": "flagValue",
                "puVar3": "paramPtr",
                "uVar4": "tempFlag",
                "uVar5": "inputValue",
                "param_1[0xf]": "outputFlags",
                "param_1[0xd]": "outputPtr",
                "LAB_0800311c_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combineBytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "get_bit_value_08003138",
            "code": "\nuint getBitValue_08003138(uint value,int addressOffset)\n\n{\n  return *(uint *)(addressOffset + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "get_bit_value_08003138",
                "param_1": "value",
                "param_2": "addressOffset"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_in_array_0800314e",
            "code": "\nvoid setBitInArray_0800314e(uint bitIndex,int array)\n\n{\n  uint bitOffset;\n  \n  bitOffset = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(array + bitOffset * 4) = *(uint *)(array + bitOffset * 4) | 1 << (bitIndex & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_0800314e",
                "param_1": "bitIndex",
                "param_2": "array",
                "uVar1": "bitOffset"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "update_bit_in_array_0800316c",
            "code": "\nvoid updateBitInArray_0800316c(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "update_bit_in_array_0800316c",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "get_memory_address_0800318c",
            "code": "\nundefined4 getMemoryAddress_0800318c(undefined4 inputValue)\n\n{\n  switch(inputValue) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "get_memory_address_0800318c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_memory_address_080031fc",
            "code": "\n\n\nundefined4 setMemoryAddress_080031fc(undefined4 option)\n\n{\n  undefined4 newMemoryAddress;\n  \n  switch(option) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    newMemoryAddress = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    newMemoryAddress = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    newMemoryAddress = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    newMemoryAddress = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    newMemoryAddress = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    newMemoryAddress = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    newMemoryAddress = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    newMemoryAddress = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    newMemoryAddress = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    newMemoryAddress = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    newMemoryAddress = 0x40022800;\n    break;\n  default:\n    newMemoryAddress = 0;\n  }\n  return newMemoryAddress;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_memory_address_080031fc",
                "param_1": "option",
                "uVar1": "newMemoryAddress"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_permission_08003380",
            "code": "\nundefined4 check_permission_08003380(undefined4 input_param,undefined4 data_param,undefined4 config_param,undefined4 flag_param)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_param,&DAT_08005a18,config_param,flag_param,flag_param);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_permission_08003380",
                "param_1": "input_param",
                "param_2": "data_param",
                "param_3": "config_param",
                "param_4": "flag_param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "determine_result_0800339c",
            "code": "\nundefined4 determineResult_0800339c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_0800354a(input_1,&DAT_08005a3c,input_3,input_4,input_4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "determine_result_0800339c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_data_bits_080033c8",
            "code": "\n\n\nvoid clearDataBits_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_data_bits_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_function_080033d8",
            "code": "\nvoid processFunction_080033d8(undefined4 inputParameter)\n\n{\n  int result;\n  int localArray [5];\n  \n  localArray[0] = FUN_080034f4(inputParameter,&DAT_08005a18);\n  if ((localArray[0] != 0) && ((result = FUN_08003380(inputParameter), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(localArray,result);\n    FUN_08000f56(localArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_function_080033d8",
                "param_1": "inputParameter",
                "iVar1": "result",
                "local_1c": "localArray"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "run_initialization_0800340c",
            "code": "\nvoid runInitialization_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "run_initialization_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_data_08003414",
            "code": "\nvoid processData_08003414(undefined4 input)\n\n{\n  int result;\n  uint flag;\n  int values [16];\n  \n  values[0] = FUN_080034f4(input,&DAT_08005a3c);\n  if ((values[0] != 0) &&\n     ((((result = FUN_0800339c(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_0800354a(input,&DAT_08005a3c);\n    if ((flag & 0x100000) == 0) {\n      FUN_08002864(values,result);\n    }\n    else {\n      FUN_080028f0(values,result);\n    }\n    FUN_0800268e(values);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_data_08003414",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flag",
                "local_4c": "values"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_0800346c",
            "code": "\nvoid initialize_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_application_08003476",
            "code": "\nvoid initializeApplication_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_application_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "update_bit_08003486",
            "code": "\nvoid updateBit_08003486(uint input,undefined4 value1,undefined4 value2)\n\n{\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 constant;\n  \n  shiftedValue = FUN_080031fc((input << 0x18) >> 0x1c);\n  bitMask = 1 << (input & 0xf) & 0xffff;\n  constant = 2;\n  ptr1 = value1;\n  ptr2 = value2;\n  FUN_08000fb4(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "update_bit_08003486",
                "param_1": "input",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "shiftedValue",
                "local_24": "bitMask",
                "local_20": "ptr1",
                "local_1c": "ptr2",
                "local_18": "constant"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "choose_action_based_on_parameter_080034b6",
            "code": "\nvoid chooseActionBasedOnParameter_080034b6(undefined4 funcPtr,undefined2 dataPtr,int flag,undefined4 sharedParam)\n\n{\n  if (flag == 0) {\n    FUN_08001198(funcPtr,dataPtr,0,sharedParam,sharedParam);\n    return;\n  }\n  FUN_08001198(funcPtr,dataPtr,1,sharedParam,sharedParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "choose_action_based_on_parameter_080034b6",
                "param_1": "funcPtr",
                "param_2": "dataPtr",
                "param_3": "flag",
                "param_4": "sharedParam"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_system_080034ce",
            "code": "\nvoid initializeSystem_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_system_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_value_in_array_080034da",
            "code": "\nundefined4 find_value_in_array_080034da(int target,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_value_in_array_080034da",
                "param_1": "target",
                "param_2": "array"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_return_value_080034f4",
            "code": "\nundefined4 checkReturnValue_080034f4(int value)\n\n{\n  undefined4 returnValue;\n  \n  if (value != -1) {\n    returnValue = FUN_080034da();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_return_value_080034f4",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_value_index_08003506",
            "code": "\nint find_value_index_08003506(int target_value,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == target_value) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_value_index_08003506",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "check_validity_0800351e",
            "code": "\nundefined4 checkValidity_0800351e(int inputValue)\n\n{\n  undefined4 result;\n  \n  if (inputValue != 0) {\n    result = FUN_08003506();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "check_validity_0800351e",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_in_array_0800352e",
            "code": "\nundefined4 find_value_in_array_0800352e(int value_to_find,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value_to_find) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_in_array_0800352e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "get_return_value_0800354a",
            "code": "\nundefined4 getReturnValue_0800354a(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800352e();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "get_return_value_0800354a",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "find_value_in_array_0800355e",
            "code": "\nundefined4 findValueInArray_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "find_value_in_array_0800355e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "compare_and_return_smaller_08003582",
            "code": "\nint compare_and_return_smaller_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "compare_and_return_smaller_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_callback_function_08003594",
            "code": "\nvoid execute_callback_function_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_callback_function_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_device_080035bc",
            "code": "\n\n\nvoid initializeDevice_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_device_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "update_memory_access_080035fc",
            "code": "\n\n\nvoid updateMemoryAccess_080035fc(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*memoryAddress == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*memoryAddress == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*memoryAddress == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*memoryAddress == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*memoryAddress == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*memoryAddress == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*memoryAddress == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*memoryAddress == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*memoryAddress == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "update_memory_access_080035fc",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtractFour_08003750(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "trigger_callback_08003754",
            "code": "\nvoid triggerCallback_08003754(int callbackParam)\n\n{\n  int callbackHandler;\n  \n  callbackHandler = FUN_08003750();\n  if ((*(code **)(callbackHandler + 0x48) != (code *)0x0) && (*(char *)(callbackParam + 0x18) == '\\x01')) {\n    (**(code **)(callbackHandler + 0x48))(callbackHandler,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "trigger_callback_08003754",
                "param_1": "callbackParam",
                "iVar1": "callbackHandler"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_callback_0800376e",
            "code": "\nvoid executeCallback_0800376e(void)\n\n{\n  int result;\n  \n  result = FUN_08003750();\n  if (*(code **)(result + 0x44) != (code *)0x0) {\n    (**(code **)(result + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_callback_0800376e",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_execute_functions_0800377c",
            "code": "\nvoid check_and_execute_functions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_execute_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtract_four_0800387c(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "update_data_and_call_function_if_needed_08003880",
            "code": "\nvoid updateDataAndCallFunctionIfNeeded_08003880(int dataPointer,int flag,int checkValue,undefined4 paramValue)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (checkValue == *(int *)(dataPointer + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08001460(dataPointer,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    FUN_080014ec(dataPointer,result + 0x68,0x20,8,paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "update_data_and_call_function_if_needed_08003880",
                "param_1": "dataPointer",
                "param_2": "flag",
                "param_3": "checkValue",
                "param_4": "paramValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_function_and_cleanup_080038d0",
            "code": "\nvoid execute_function_and_cleanup_080038d0(undefined4 input_parameter)\n\n{\n  int function_result;\n  \n  function_result = FUN_0800387c();\n  if (((*(function_pointer **)(function_result + 0x60) != (function_pointer *)0x0) && (*(char *)(function_result + 0x5e) == '\\x01')) &&\n     (*(char *)(function_result + 0x2c) != ' ')) {\n    (**(function_pointer **)(function_result + 0x60))(function_result + 0x68);\n  }\n  FUN_08001578(input_parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_function_and_cleanup_080038d0",
                "param_1": "input_parameter",
                "iVar1": "function_result",
                "code": "function_pointer"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_update_flag_08003900",
            "code": "\nvoid checkAndUpdateFlag_08003900(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    FUN_08001578(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_update_flag_08003900",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "configure_uart_pins_08003978",
            "code": "\n\n\nvoid configureUARTPins_08003978(int *pinConfig)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 uartPin1Config;\n  uint uartPin2Config;\n  uint uartPin1Mask;\n  uint uartPin2Mask;\n  uint uartPin2Shift;\n  undefined4 gpioMode;\n  uint uartPin1Shift;\n  \n  if (pinConfig != (int *)0x0) {\n    uartPin1 = FUN_080034f4((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n    uartPin2 = FUN_080034f4((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_08003582(uartPin1);\n      *pinConfig = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pinConfig + 0x11) = 0;\n          *(undefined *)(pinConfig + 0x17) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pinConfig + 0x11) = 1;\n          *(undefined *)(pinConfig + 0x17) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pinConfig + 0x11) = 2;\n          *(undefined *)(pinConfig + 0x17) = 0x27;\n        }\n        else if (uartPin1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pinConfig + 0x11) = 3;\n          *(undefined *)(pinConfig + 0x17) = 0x34;\n        }\n        else if (uartPin1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pinConfig + 0x11) = 4;\n          *(undefined *)(pinConfig + 0x17) = 0x35;\n        }\n        else if (uartPin1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pinConfig + 0x11) = 5;\n          *(undefined *)(pinConfig + 0x17) = 0x47;\n        }\n        else if (uartPin1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pinConfig + 0x11) = 6;\n          *(undefined *)(pinConfig + 0x17) = 0x52;\n        }\n        else if (uartPin1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pinConfig + 0x11) = 7;\n          *(undefined *)(pinConfig + 0x17) = 0x53;\n        }\n        uartPin1Config = FUN_080031fc((uint)((int)*(short *)((int)pinConfig + 0x5a) << 0x18) >> 0x1c);\n        uartPin2Config = FUN_0800354a((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n        uartPin1Mask = 1 << (*(ushort *)((int)pinConfig + 0x5a) & 0xf) & 0xffff;\n        uartPin2Mask = (uartPin2Config >> 3 & 1) << 4 | uartPin2Config & 7;\n        uartPin2Shift = (uartPin2Config << 0x1a) >> 0x1e;\n        uartPin1Shift = (uartPin2Config << 0x11) >> 0x19;\n        gpioMode = 3;\n        FUN_08000fb4(uartPin1Config,&uartPin1Mask);\n        uartPin1Config = FUN_080031fc((uint)((int)*(short *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        uartPin2Config = FUN_0800354a((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n        uartPin1Mask = 1 << (*(ushort *)(pinConfig + 0x16) & 0xf) & 0xffff;\n        uartPin2Mask = (uartPin2Config >> 3 & 1) << 4 | uartPin2Config & 7;\n        uartPin2Shift = (uartPin2Config << 0x1a) >> 0x1e;\n        FUN_08000fb4(uartPin1Config,&uartPin1Mask);\n        (&DAT_200002b4)[*(byte *)(pinConfig + 0x11)] = pinConfig + 1;\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = pinConfig[0x12];\n        pinConfig[3] = pinConfig[0x13];\n        pinConfig[4] = pinConfig[0x14];\n        pinConfig[5] = pinConfig[0x15];\n        pinConfig[6] = 0xc;\n        pinConfig[7] = 0;\n        pinConfig[8] = 0;\n        FUN_08002d72(pinConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "configure_uart_pins_08003978",
                "param_1": "pinConfig",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "uartPin1Config",
                "uVar4": "uartPin2Config",
                "local_2c": "uartPin1Mask",
                "local_28": "uartPin2Mask",
                "local_24": "uartPin2Shift",
                "local_20": "gpioMode",
                "local_1c": "uartPin1Shift"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 tempResult;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    tempResult = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(tempResult,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "tempResult"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "check_connection_08003d18",
            "code": "\nuint check_connection_08003d18(undefined4 undefined_param,uint input_value)\n\n{\n  int previous_result;\n  int connection_status;\n  uint index;\n  \n  previous_result = FUN_08000e30();\n  connection_status = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (connection_status == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 10 &&\n      (((&DAT_200002b4)[index] == 0 ||\n       (connection_status = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[index] != connection_status))));\n      index = index + 1 & 0xff) {\n  }\n  if (9 < index) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    index = (uint)DAT_20000074;\n  }\n  do {\n    connection_status = FUN_08002dd0((&DAT_200002b4)[index],undefined_param,input_value & 0xffff,1000);\n    if (connection_status == 0) {\n      return input_value;\n    }\n    connection_status = FUN_08000e30();\n  } while ((uint)(connection_status - previous_result) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "check_connection_08003d18",
                "param_1": "undefined_param",
                "param_2": "input_value",
                "iVar1": "previous_result",
                "iVar2": "connection_status",
                "uVar3": "index"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "verify_status_08003dd0",
            "code": "\nbool verify_status_08003dd0(int input_value)\n\n{\n  uint status_code;\n  \n  status_code = FUN_0800312c((&DAT_200002b4)[*(byte *)(input_value + 0x44)]);\n  return (status_code & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "verify_status_08003dd0",
                "param_1": "input_value",
                "uVar1": "status_code"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_condition_met_08003df4",
            "code": "\nbool isConditionMet_08003df4(int input)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_condition_met_08003df4",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "copy_data_and_call_function_08003e18",
            "code": "\nundefined4 copy_data_and_call_function_08003e18(int data_ptr,undefined *output_ptr,undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  \n  if (data_ptr == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *output_ptr = *(undefined *)(data_ptr + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(data_ptr + 0x44)],data_ptr + 0x45,1,&DAT_200002b4,arg2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "copy_data_and_call_function_08003e18",
                "param_1": "data_ptr",
                "param_2": "output_ptr",
                "param_3": "arg1",
                "param_4": "arg2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_data_08003e54",
            "code": "\nvoid updateData_08003e54(int inputData,undefined4 newValue,undefined4 unusedParameter,undefined4 anotherValue)\n\n{\n  int result;\n  uint index;\n  \n  if (inputData != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(inputData + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = newValue;\n      *(int *)(&DAT_2000023c + index * 4) = inputData;\n      FUN_08000e60((int)*(char *)(inputData + 0x5c),0,1,index,anotherValue);\n      FUN_08000ec4((int)*(char *)(inputData + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(inputData + 0x44)],inputData + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_data_08003e54",
                "param_1": "inputData",
                "param_2": "newValue",
                "param_3": "unusedParameter",
                "param_4": "anotherValue",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_param_08003eac",
            "code": "\nvoid updateParam_08003eac(int paramPointer,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (paramPointer != 0) {\n    byteValue = *(byte *)(paramPointer + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)byteValue * 4) = paramPointer;\n    FUN_08000e60((int)*(char *)(paramPointer + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(paramPointer + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(paramPointer + 0x44)],\n                 *(int *)(paramPointer + 0x68) + (uint)*(ushort *)(paramPointer + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_param_08003eac",
                "param_1": "paramPointer",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_value_index_08003f00",
            "code": "\nuint find_value_index_08003f00(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_value_index_08003f00",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_function_08003f24",
            "code": "\nvoid executeFunction_08003f24(void)\n\n{\n  uint result;\n  \n  result = FUN_08003f00();\n  if (result < 10) {\n    (**(code **)(&DAT_20000214 + result * 4))(*(undefined4 *)(&DAT_2000023c + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_function_08003f24",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "execute_function_08003f48",
            "code": "\nvoid executeFunction_08003f48(void)\n\n{\n  uint randomValue;\n  int returnCode;\n  int dataPointer;\n  \n  randomValue = FUN_08003f00();\n  dataPointer = *(int *)(&DAT_2000028c + randomValue * 4);\n  if ((randomValue < 10) && (returnCode = (**(code **)(&DAT_20000264 + randomValue * 4))(dataPointer), returnCode != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 0x68) + (uint)*(ushort *)(dataPointer + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "execute_function_08003f48",
                "uVar1": "randomValue",
                "iVar2": "returnCode",
                "iVar3": "dataPointer"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocateMemory_08004094(int size)\n\n{\n  undefined *memoryBlock;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  memoryBlock = DAT_200002dc;\n  if (DAT_200002dc + size <= endOfMemory) {\n    DAT_200002dc = DAT_200002dc + size;\n    return memoryBlock;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "memoryBlock",
                "&stack0x00000000": "endOfMemory"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "initialize_return_code_080040d0",
            "code": "\nundefined4 initializeReturnCode_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "initialize_return_code_080040d0"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "set_memory_page_size_080040d6",
            "code": "\nundefined4 setMemoryPageSize_080040d6(undefined4 param,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "set_memory_page_size_080040d6",
                "param_1": "param",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "initialize_080040e0",
            "code": "\nundefined4 initialize_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "initialize_080040e0"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_program_080040e4",
            "code": "\nundefined4 initializeProgram_080040e4(void)\n\n{\n  status 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_program_080040e4",
                "return": "status"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_080040e8",
            "code": "\nundefined4 initialize_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_080040e8"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "initialize_080040ec",
            "code": "\nvoid initialize_080040ec(undefined4 param_1,undefined4 source_param,undefined4 dest_param,undefined4 size_param)\n\n{\n  FUN_08003d18(source_param,dest_param,dest_param,size_param,size_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "initialize_080040ec",
                "param_2": "source_param",
                "param_3": "dest_param",
                "param_4": "size_param"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "do_nothing_loop_080040f8",
            "code": "\nvoid doNothingLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "do_nothing_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "initialize_variable_080040fc",
            "code": "\nundefined4 initializeVariable_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "initialize_variable_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "initialize_application_0800410c",
            "code": "\nundefined4 initializeApplication_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "initialize_application_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "process_data_08004110",
            "code": "\nvoid processData_08004110(uint dataIndex,undefined4 mode,undefined4 param3,undefined *buffer)\n\n{\n  int result;\n  undefined *source;\n  int value;\n  \n  if (dataIndex < 0x60) {\n    value = (int)*(short *)(&DAT_08005d3c + dataIndex * 2);\n    source = &DAT_08005d3c;\n  }\n  else {\n    value = -1;\n    source = buffer;\n  }\n  if (value != -1) {\n    result = FUN_08003138(value,&DAT_200002e0,param3,source,buffer);\n    if (result != 0) {\n      result = FUN_0800355e(value,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(value,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(value);\n        }\n      }\n      else {\n        FUN_080033d8(value);\n      }\n      FUN_0800316c(value,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08003486(value,0);\n      break;\n    case 1:\n      FUN_08003486(value,1,0);\n      break;\n    case 2:\n      FUN_08003486(value,0,1);\n      break;\n    case 3:\n      FUN_08003486(value,0,2);\n    }\n    FUN_0800314e(value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "process_data_08004110",
                "param_1": "dataIndex",
                "param_2": "mode",
                "param_3": "param3",
                "param_4": "buffer",
                "iVar1": "result",
                "puVar2": "source",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "decode_and_process_data_080041bc",
            "code": "\nvoid decode_and_process_data_080041bc(uint input_index,undefined4 value_1,undefined4 value_2,undefined *buffer)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *data_ptr;\n  uint decoded_value;\n  \n  if (input_index < 0x60) {\n    decoded_value = (uint)*(short *)(&DAT_08005d3c + input_index * 2);\n    data_ptr = &DAT_08005d3c;\n  }\n  else {\n    decoded_value = 0xffffffff;\n    data_ptr = buffer;\n  }\n  if ((decoded_value != 0xffffffff) &&\n     (result = FUN_08003138(decoded_value,&DAT_2000030c,value_2,data_ptr,buffer), result != 0)) {\n    shifted_value = FUN_0800318c((decoded_value << 0x18) >> 0x1c);\n    FUN_080034b6(shifted_value,1 << (decoded_value & 0xf) & 0xffff,value_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "decode_and_process_data_080041bc",
                "param_1": "input_index",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "buffer",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "data_ptr",
                "uVar4": "decoded_value"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "execute_initialization_08004204",
            "code": "\nvoid execute_initialization_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "execute_initialization_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_offset_08004240",
            "code": "\nushort calculateOffset_08004240(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x138) + 0x40) - *(short *)(baseAddress + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_data_080042ac",
            "code": "\nvoid updateData_080042ac(int input)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_08003e18(input,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(input + 100) + 1U & 0x3f, newIndex != *(ushort *)(input + 0x66))) {\n    *(undefined *)(*(int *)(input + 0x60) + (uint)*(ushort *)(input + 100)) = newValue;\n    *(ushort *)(input + 100) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_data_080042ac",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "initialize_data_080042e8",
            "code": "\nundefined4 initializeData_080042e8(int dataAddress,undefined dataValue)\n\n{\n  byte lowerByte;\n  byte maskedByte;\n  int incrementedValue;\n  \n  *(undefined *)(dataAddress + 0x10) = 1;\n  incrementedValue = *(ushort *)(dataAddress + 0x140) + 1;\n  lowerByte = (byte)incrementedValue;\n  maskedByte = lowerByte & 0x7f;\n  if (incrementedValue == 0) {\n    maskedByte = -(-lowerByte & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(dataAddress + 0x142) == (ushort)maskedByte);\n  *(undefined *)(*(int *)(dataAddress + 0x13c) + (uint)*(ushort *)(dataAddress + 0x140)) = dataValue;\n  *(ushort *)(dataAddress + 0x140) = (ushort)maskedByte;\n  incrementedValue = FUN_08003df4(dataAddress + 0xd4);\n  if (incrementedValue == 0) {\n    FUN_08003eac(dataAddress + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "initialize_data_080042e8",
                "param_1": "dataAddress",
                "param_2": "dataValue",
                "bVar1": "lowerByte",
                "bVar2": "maskedByte",
                "iVar3": "incrementedValue"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_parameters_08004364",
            "code": "\nvoid initializeParameters_08004364(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x134) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x138) = 0;\n  *(undefined2 *)(baseAddress + 0x13a) = 0;\n  *(int *)(baseAddress + 0x13c) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x140) = 0;\n  *(undefined2 *)(baseAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_parameters_08004364",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_serial_port_08004388",
            "code": "\nvoid initializeSerialPort_08004388(int serialPortAddress,undefined4 baudRate,byte settings)\n\n{\n  uint filePermission;\n  byte settingsMask;\n  int bitsPerSecond;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x144) = settings;\n  settingsMask = settings & 7;\n  if (settingsMask == 4) {\n    bitsPerSecond = 7;\n  }\n  else if (settingsMask == 6) {\n    bitsPerSecond = 8;\n  }\n  else if (settingsMask == 2) {\n    bitsPerSecond = 6;\n  }\n  else {\n    bitsPerSecond = 0;\n  }\n  if ((settings & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    bitsPerSecond = bitsPerSecond + 1;\n  }\n  else if ((settings & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    bitsPerSecond = bitsPerSecond + 1;\n  }\n  if ((settings & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (bitsPerSecond == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (bitsPerSecond == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    bitsPerSecond = 0;\n  }\n  if (bitsPerSecond != 0) {\n    FUN_08003978(serialPortAddress + 0xd4);\n    FUN_08003e54(serialPortAddress + 0xd4,0x80042ad);\n    return;\n  }\n  jumpTable = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (filePermission < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + filePermission * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_serial_port_08004388",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "settings",
                "extraout_r1": "filePermission",
                "bVar1": "settingsMask",
                "iVar2": "bitsPerSecond",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "apply_jump_table_08004444",
            "code": "\nvoid applyJumpTable_08004444(int destinationAddress,uint jumpIndex)\n\n{\n  undefined2 jumpValue;\n  code *unrecoveredJumpTable;\n  \n  if (jumpIndex < 0x60) {\n    jumpValue = *(undefined2 *)(&DAT_08005d3c + jumpIndex * 2);\n  }\n  else {\n    jumpValue = 0xffff;\n  }\n  *(undefined2 *)(destinationAddress + 0x12e) = jumpValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecoveredJumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "apply_jump_table_08004444",
                "param_1": "destinationAddress",
                "param_2": "jumpIndex",
                "uVar1": "jumpValue",
                "UNRECOVERED_JUMPTABLE": "unrecoveredJumpTable"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "initialize_value_08004460",
            "code": "\nvoid initializeValue_08004460(int baseAddress,uint offset)\n\n{\n  undefined2 newValue;\n  \n  if (offset < 0x60) {\n    newValue = *(undefined2 *)(&DAT_08005d3c + offset * 2);\n  }\n  else {\n    newValue = 0xffff;\n  }\n  *(undefined2 *)(baseAddress + 300) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "initialize_value_08004460",
                "param_1": "baseAddress",
                "param_2": "offset",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_parameters_0800447c",
            "code": "\nundefined4 *\ninitializeParameters_0800447c(undefined4 *outputArray,undefined4 inputValue,undefined4 inputSize,undefined4 inputData)\n\n{\n  undefined2 tempValue;\n  \n  outputArray[1] = 0;\n  outputArray[2] = 1000;\n  *outputArray = &PTR_FUN_080042e8_1_08005ed4;\n  if (outputArray == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,inputSize,&DAT_20000338,inputData);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    tempValue = FUN_0800351e(inputValue,&DAT_08005c10);\n    *(undefined2 *)((int)outputArray + 0x12e) = tempValue;\n    tempValue = FUN_0800351e(inputValue,&DAT_08005ca0);\n    *(undefined2 *)(outputArray + 0x4b) = tempValue;\n  }\n  FUN_08004364(outputArray);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_parameters_0800447c",
                "param_1": "outputArray",
                "param_2": "inputValue",
                "param_3": "inputSize",
                "param_4": "inputData",
                "uVar1": "tempValue"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_and_handle_param_080044d8",
            "code": "\nvoid check_and_handle_param_080044d8(int param_a,int param_b,undefined4 param_c,undefined4 param_d)\n\n{\n  if (param_a != 1) {\n    return;\n  }\n  if (param_b == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,param_c,0xffff,param_d);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_and_handle_param_080044d8",
                "param_1": "param_a",
                "param_2": "param_b",
                "param_3": "param_c",
                "param_4": "param_d"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_data_08004544",
            "code": "\nvoid initializeData_08004544(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08005f28;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "check_params_08004560",
            "code": "\nvoid checkParams_08004560(int inputValue1,int inputValue2)\n\n{\n  if ((inputValue1 == 1) && (inputValue2 == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "check_params_08004560",
                "param_1": "inputValue1",
                "param_2": "inputValue2"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_parameter_and_value_08004640",
            "code": "\nuint combineParameterAndValue_08004640(int inputValue,uint flag)\n\n{\n  return flag | inputValue << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_parameter_and_value_08004640",
                "param_1": "inputValue",
                "param_2": "flag"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_08004648",
            "code": "\nvoid initialize_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "perform_operation_08004658",
            "code": "\nvoid perform_operation_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "perform_operation_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar countSetBits_08004678(uint number)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "number",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_settings_080046b4",
            "code": "\nvoid initializeSettings_080046b4(int flag,int value,undefined4 unused_param_1,undefined4 unused_param_2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,pointer_1,&DAT_20000000,&DAT_20000488,unused_param_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_settings_080046b4",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused_param_1",
                "param_4": "unused_param_2",
                "&LAB_0800468c_1": "pointer_1"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "process_data_080047c0",
            "code": "\nvoid processData_080047c0(int data)\n\n{\n  int index;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    processData_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "process_data_080047c0",
                "param_1": "data",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_and_execute_action_080047d0",
            "code": "\nvoid checkAndExecuteAction_080047d0(void)\n\n{\n  int actionIndex;\n  \n  actionIndex = FUN_08004678();\n  if ((&DAT_20000494)[actionIndex * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_and_execute_action_080047d0",
                "iVar1": "actionIndex"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "function_call_a_080047fe",
            "code": "\nvoid function_call_A_080047fe(undefined4 argument_A,undefined4 argument_B)\n\n{\n  FUN_08004844(argument_B,argument_A);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "function_call_a_080047fe",
                "param_1": "argument_A",
                "param_2": "argument_B"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "assertion_failed_08004808",
            "code": "\nvoid assertionFailed_08004808(undefined4 assertion,undefined4 file,char *lineNumber,undefined4 function)\n\n{\n  undefined4 tempVar1;\n  char *message;\n  undefined8 returnValue;\n  undefined4 tempVar2;\n  \n  tempVar1 = *(undefined4 *)(DAT_200000a0 + 0xc);\n  tempVar2 = function;\n  if (lineNumber == (char *)0x0) goto LAB_0800482c;\n  message = \", function: \";\n  do {\n    FUN_08004860(tempVar1,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,assertion,file\n                 ,message,lineNumber,tempVar2);\n    returnValue = FUN_080051ac();\n    file = (undefined4)((ulonglong)returnValue >> 0x20);\n    tempVar1 = (undefined4)returnValue;\nLAB_0800482c:\n    lineNumber = \"\";\n    message = lineNumber;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "assertion_failed_08004808",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "lineNumber",
                "param_4": "function",
                "uVar1": "tempVar1",
                "pcVar2": "message",
                "uVar3": "returnValue",
                "uVar4": "tempVar2"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "shift_left_by32_bits_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong shiftLeftBy32Bits_08004844(undefined4 param1,uint input)\n\n{\n  return (ulonglong)input << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "shift_left_by32_bits_08004844",
                "param_1": "param1",
                "param_2": "input"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "initialize_function_08004860",
            "code": "\nvoid initializeFunction_08004860(undefined4 inputParam1,undefined4 inputParam2,undefined4 tempVar1,undefined4 tempVar2)\n\n{\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  tempVar3 = tempVar1;\n  tempVar4 = tempVar2;\n  FUN_08004a84(DAT_200000a0,inputParam1,inputParam2,&tempVar3,inputParam1,&tempVar3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "initialize_function_08004860",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "tempVar1",
                "param_4": "tempVar2",
                "uStack_8": "tempVar3",
                "uStack_4": "tempVar4"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_all_functions_08004884",
            "code": "\nvoid execute_all_functions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_all_functions_08004884",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "memset_080048cc",
            "code": "\nvoid memset_080048cc(undefined *destination,undefined value,int num_bytes)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + num_bytes;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "memset_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "num_bytes",
                "puVar1": "end_address"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "process_data_080048dc",
            "code": "\nvoid processData_080048dc(undefined4 *output,int dataSize,undefined4 param3,undefined4 param4)\n\n{\n  int *temp1;\n  int **temp2;\n  int **current;\n  int **previous;\n  int **temp3;\n  int **newNode;\n  bool isMatch;\n  \n  if (dataSize == 0) {\n    return;\n  }\n  newNode = (int **)(dataSize + -4);\n  if (*(int *)(dataSize + -4) < 0) {\n    newNode = (int **)((int)newNode + *(int *)(dataSize + -4));\n  }\n  FUNC_0800557c();\n  previous = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    newNode[1] = (int *)0x0;\n    current = temp2;\n    DAT_200005c8 = newNode;\n  }\n  else {\n    previous = DAT_200005c8;\n    if (newNode < DAT_200005c8) {\n      current = (int **)*newNode;\n      previous = (int **)((int)newNode + (int)current);\n      isMatch = DAT_200005c8 == previous;\n      if (isMatch) {\n        previous = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      newNode[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = newNode;\n      if (isMatch) {\n        previous = (int **)((int)previous + (int)current);\n        *newNode = (int *)previous;\n      }\n    }\n    else {\n      do {\n        temp3 = previous;\n        previous = (int **)temp3[1];\n        if (previous == (int **)0x0) break;\n      } while (previous <= newNode);\n      current = (int **)*temp3;\n      if ((int **)((int)temp3 + (int)current) == newNode) {\n        current = (int **)((int)current + (int)*newNode);\n        *temp3 = (int *)current;\n        if (previous == (int **)((int)temp3 + (int)current)) {\n          temp1 = *previous;\n          previous = (int **)previous[1];\n          temp3[1] = (int *)previous;\n          current = (int **)((int)current + (int)temp1);\n          *temp3 = (int *)current;\n        }\n      }\n      else if (newNode < (int **)((int)temp3 + (int)current)) {\n        *output = 0xc;\n      }\n      else {\n        current = (int **)((int)newNode + (int)*newNode);\n        isMatch = previous == current;\n        if (isMatch) {\n          current = (int **)*previous;\n          previous = (int **)previous[1];\n        }\n        newNode[1] = (int *)previous;\n        if (isMatch) {\n          current = (int **)((int)current + (int)*newNode);\n          *newNode = (int *)current;\n        }\n        temp3[1] = (int *)newNode;\n      }\n    }\n  }\n  FUNC_0800557e(output,current,previous,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "process_data_080048dc",
                "param_1": "output",
                "param_2": "dataSize",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "temp1",
                "extraout_r1": "temp2",
                "ppiVar2": "current",
                "ppiVar3": "previous",
                "ppiVar4": "temp3",
                "ppiVar5": "newNode",
                "bVar6": "isMatch"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_and_copy_memory_08004978",
            "code": "\nuint allocate_and_copy_memory_08004978(undefined4 *result_pointer,uint memory_size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *next_block;\n  uint block_difference;\n  uint *previous_block;\n  uint new_block_size;\n  \n  new_block_size = (memory_size + 3 & 0xfffffffc) + 8;\n  if (new_block_size < 0xc) {\n    new_block_size = 0xc;\n  }\n  if (((int)new_block_size < 0) || (new_block_size < memory_size)) {\n    *result_pointer = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    previous_block = DAT_200005c8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_difference = *next_block - new_block_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *next_block = block_difference;\n          *(uint *)((int)next_block + block_difference) = new_block_size;\n          previous_block = (uint *)((int)next_block + block_difference);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(result_pointer);\n    }\n    current_block = (uint *)FUN_0800500c(result_pointer,new_block_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (remaining_space = FUN_0800500c(result_pointer,(int)previous_block - (int)current_block), remaining_space != -1)))) {\n      *previous_block = new_block_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(result_pointer);\n      new_block_size = (int)previous_block + 0xbU & 0xfffffff8;\n      remaining_space = new_block_size - (int)(previous_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)previous_block + remaining_space) = -remaining_space;\n        return new_block_size;\n      }\n      return new_block_size;\n    }\n    *result_pointer = 0xc;\n    FUNC_0800557e(result_pointer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_and_copy_memory_08004978",
                "param_1": "result_pointer",
                "param_2": "memory_size",
                "puVar1": "current_block",
                "iVar2": "remaining_space",
                "puVar3": "next_block",
                "uVar4": "block_difference",
                "puVar5": "previous_block",
                "uVar6": "new_block_size"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_data_08004a34",
            "code": "\nuint processData_08004a34(int input_1,byte input_2,byte **input_3)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint result;\n  \n  tempVar2 = input_3[2] + -1;\n  input_3[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)input_3[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)input_2, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *input_3;\n    *input_3 = tempVar2 + 1;\n    *tempVar2 = input_2;\n    return (uint)input_2;\n  }\n  if ((input_1 != 0) && (*(int *)(input_1 + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (input_3 == (byte **)&DAT_08005fc0) {\n    input_3 = *(byte ***)(input_1 + 4);\n  }\n  else if (input_3 == (byte **)&DAT_08005fe0) {\n    input_3 = *(byte ***)(input_1 + 8);\n  }\n  else if (input_3 == (byte **)&DAT_08005fa0) {\n    input_3 = *(byte ***)(input_1 + 0xc);\n  }\n  input_3[2] = input_3[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(input_3 + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = input_3[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_080050d0(input_1,input_3,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    tempVar1 = (int)*input_3 - (int)input_3[4];\n    result = (uint)input_2;\n    if ((tempVar1 < (int)input_3[5]) || (tempVar1 = FUN_080052cc(input_1,input_3), tempVar1 == 0)) {\n      input_3[2] = input_3[2] + -1;\n      tempVar2 = *input_3;\n      *input_3 = tempVar2 + 1;\n      *tempVar2 = input_2;\n      if ((byte *)(tempVar1 + 1) != input_3[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_3 + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      tempVar1 = FUN_080052cc(input_1,input_3);\n      if (tempVar1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_data_08004a34",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint process_data_08004a60(undefined4 arg1,undefined4 arg2,undefined *data,int length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_length;\n  \n  end_ptr = data + length;\n  current_length = length;\n  do {\n    if (data == end_ptr) {\n      return 0;\n    }\n    result = FUN_08004a34(arg1,*data,arg2,length,current_length);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "end_ptr",
                "iVar3": "current_length"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "parse_format_string_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint parseFormatString_08004a84(int formatString,undefined4 *args,byte *param_3,int *num)\n\n{\n  int result;\n  int *ptr;\n  bool isDigit;\n  byte *bytePtr;\n  byte *currentByte;\n  int unaffected_r9;\n  int index;\n  int *ptrArray;\n  uint flags;\n  int precision;\n  undefined4 ignore;\n  int width;\n  int totalLength;\n  byte conversion;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined sign;\n  undefined4 tmp;\n  \n  ptrArray = num;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (args == &DAT_08005fc0) {\n    args = *(undefined4 **)(formatString + 4);\n  }\n  else if (args == (undefined4 *)&DAT_08005fe0) {\n    args = *(undefined4 **)(formatString + 8);\n  }\n  else if (args == (undefined4 *)&DAT_08005fa0) {\n    args = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(args + 3) << 0x1c)) || (args[4] == 0)) &&\n     (index = FUN_080050d0(formatString,args), index != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  bytePtr = param_3;\nLAB_08004ac6:\n  currentByte = bytePtr;\n  if (*currentByte != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  bytePtr = currentByte + 1;\n  if (*currentByte != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  index = (int)currentByte - (int)param_3;\n  if (index != 0) {\n    result = FUN_08004a60(formatString,args,param_3,index);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(args + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + index;\n  }\n  if (*currentByte == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  ignore = 0;\n  sign = 0;\n  tmp = 0;\n  bytePtr = currentByte + 1;\n  while( true ) {\n    index = FUN_08000230(\"#-0+ \",*bytePtr);\n    param_3 = bytePtr + 1;\n    if (index == 0) break;\n    flags = 1 << (index + 0xf7ffa094U & 0xff) | flags;\n    bytePtr = param_3;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign = 0x2b;\n  }\n  if (*bytePtr == 0x2a) {\n    ptr = ptrArray + 1;\n    index = *ptrArray;\n    ptrArray = ptr;\n    if (index < 0) {\n      width = -index;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    isDigit = false;\n    index = width;\n    param_3 = bytePtr;\n    while( true ) {\n      if (9 < *param_3 - 0x30) break;\n      index = index * 10 + (*param_3 - 0x30);\n      isDigit = true;\n      param_3 = param_3 + 1;\n    }\n    if (!isDigit) goto LAB_08004bae;\n  }\n  width = index;\nLAB_08004bae:\n  if (*param_3 == 0x2e) {\n    if (param_3[1] == 0x2a) {\n      precision = *ptrArray;\n      if (precision < 0) {\n        precision = -1;\n      }\n      param_3 = param_3 + 2;\n      ptrArray = ptrArray + 1;\n    }\n    else {\n      isDigit = false;\n      precision = 0;\n      index = 0;\n      while( true ) {\n        param_3 = param_3 + 1;\n        if (9 < *param_3 - 0x30) break;\n        index = index * 10 + (*param_3 - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        precision = index;\n      }\n    }\n  }\n  index = FUN_08000230(&DAT_08005f72,*param_3,3);\n  if (index != 0) {\n    flags = flags | 0x40 << (index + 0xf7ffa08eU & 0xff);\n    param_3 = param_3 + 1;\n  }\n  conversion = *param_3;\n  param_3 = param_3 + 1;\n  index = FUN_08000230(\"efgEFG\",conversion,6);\n  if (index == 0) {\n    unaffected_r9 = FUN_08004d9c(formatString,&flags,args,0x8004a61,&ptrArray);\n    if (unaffected_r9 == -1) goto LAB_08004c70;\n  }\n  else {\n    ptrArray = (int *)(((int)ptrArray + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + unaffected_r9;\n  bytePtr = param_3;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "parse_format_string_08004a84",
                "param_1": "formatString",
                "param_2": "args",
                "param_4": "num",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "isDigit",
                "pbVar4": "bytePtr",
                "pbVar5": "currentByte",
                "unaff_r9": "unaffected_r9",
                "iVar6": "index",
                "local_8c": "ptrArray",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "ignore",
                "local_7c": "width",
                "local_74": "totalLength",
                "local_70": "conversion",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "sign",
                "local_30": "tmp"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "function_name_08004cb0",
            "code": "\nundefined4\nfunction_name_08004cb0(undefined4 input_param,uint *data_array,uint *output_param,undefined4 param_4,code *callback_func)\n\n{\n  int index_1;\n  int index_2;\n  uint max_value;\n  uint current_value;\n  bool condition;\n  \n  max_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_value = data_array[2];\n  }\n  *output_param = max_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_param = max_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_param = *output_param + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index_1 = 0; index_1 < (int)(data_array[3] - *output_param); index_1 = index_1 + 1) {\n      index_2 = (*callback_func)(input_param,param_4,(int)data_array + 0x19,1);\n      if (index_2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_value + 0x43) = 0x30;\n    *(undefined *)((int)data_array + max_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n    max_value = max_value + 2;\n  }\n  index_1 = (*callback_func)(input_param,param_4,(int)data_array + 0x43,max_value);\n  if (index_1 != -1) {\n    max_value = data_array[3];\n    condition = (*data_array & 6) == 4;\n    if (condition) {\n      max_value = max_value - *output_param;\n    }\n    if (condition) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    else {\n      max_value = 0;\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_value = max_value + (data_array[2] - data_array[4]);\n    }\n    current_value = 0;\n    while( true ) {\n      if (max_value == current_value) {\n        return 0;\n      }\n      index_1 = (*callback_func)(input_param,param_4,(int)data_array + 0x1a,1);\n      if (index_1 == -1) break;\n      current_value = current_value + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "function_name_08004cb0",
                "param_1": "input_param",
                "param_2": "data_array",
                "param_3": "output_param",
                "param_5": "callback_func",
                "iVar1": "index_1",
                "iVar2": "index_2",
                "uVar3": "max_value",
                "uVar4": "current_value",
                "bVar5": "condition"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "decode_and_process_data_08004d9c",
            "code": "\nuint decode_and_process_data_08004d9c(undefined4 input_param,uint *data,undefined4 buffer_size,code *callback_function,uint **ptr_to_data_ptr)\n\n{\n  byte byte_value;\n  int integer_value_1;\n  uint *ptr_value_1;\n  int integer_value_2;\n  char *char_ptr_1;\n  uint uint_value_1;\n  uint **ptr_to_ptr_value;\n  char **ptr_to_char_ptr;\n  uint uint_value_2;\n  uint uint_value_3;\n  char *char_ptr_2;\n  char *data_ptr;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  data_ptr = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08004f56;\n          if (byte_value != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          char_ptr_1 = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          uint_value_1 = *data;\n          ptr_value_1 = *ptr_to_data_ptr;\n          *ptr_to_data_ptr = ptr_value_1 + 1;\n          if (((uint_value_1 & 0x80) == 0) && ((int)(uint_value_1 << 0x19) < 0)) {\n            uint_value_2 = (uint)*(ushort *)ptr_value_1;\n          }\n          else {\n            uint_value_2 = *ptr_value_1;\n          }\n          if ((int)(uint_value_1 << 0x1f) < 0) {\n            *data = uint_value_1 | 0x20;\n          }\n          if (uint_value_2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          uint_value_1 = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08004dcc;\n          uint_value_2 = *data;\n          ptr_value_1 = *ptr_to_data_ptr;\n          if ((uint_value_2 & 0x80) == 0) {\n            *ptr_to_data_ptr = ptr_value_1 + 1;\n            if ((uint_value_2 & 0x40) == 0) goto LAB_08004dec;\n            uint_value_2 = (uint)(short)*(ushort *)ptr_value_1;\n          }\n          else {\n            *ptr_to_data_ptr = ptr_value_1 + 1;\nLAB_08004dec:\n            uint_value_2 = *ptr_value_1;\n          }\n          if ((int)uint_value_2 < 0) {\n            uint_value_2 = -uint_value_2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          char_ptr_1 = \"0123456789ABCDEF\";\n          uint_value_1 = 10;\n        }\n        uint_value_3 = data[1];\n        data[2] = uint_value_3;\n        char_ptr_2 = data_ptr;\n        if ((int)uint_value_3 < 0) {\n          if (uint_value_2 != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)data + 0x42) = *char_ptr_1;\n          char_ptr_2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (uint_value_2 == 0) {\n            if (uint_value_3 != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              uint_value_3 = uint_value_2 / uint_value_1;\n              char_ptr_2 = char_ptr_2 + -1;\n              *char_ptr_2 = char_ptr_1[uint_value_2 - uint_value_1 * uint_value_3];\n              uint_value_2 = uint_value_3;\n            } while (uint_value_3 != 0);\n          }\n        }\n        if (((uint_value_1 == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          char_ptr_2[-1] = '0';\n          char_ptr_2 = char_ptr_2 + -1;\n        }\n        data[4] = (int)data_ptr - (int)char_ptr_2;\n        data_ptr = char_ptr_2;\n        goto LAB_08004ec2;\n      }\n      ptr_value_1 = *ptr_to_data_ptr;\n      *ptr_to_data_ptr = ptr_value_1 + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr_value_1;\nLAB_08004e2c:\n      data_ptr = (char *)((int)data + 0x42);\n      uint_value_2 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08004e52:\n            uint_value_2 = *data;\n            ptr_value_1 = *ptr_to_data_ptr;\n            if ((uint_value_2 & 0x80) == 0) {\n              *ptr_to_data_ptr = ptr_value_1 + 1;\n              if ((uint_value_2 & 0x40) == 0) goto LAB_08004e60;\n              uint_value_2 = (uint)*(ushort *)ptr_value_1;\n            }\n            else {\n              *ptr_to_data_ptr = ptr_value_1 + 1;\nLAB_08004e60:\n              uint_value_2 = *ptr_value_1;\n            }\n            char_ptr_1 = \"0123456789ABCDEF\";\n            if (byte_value == 0x6f) {\n              uint_value_1 = 8;\n            }\n            else {\n              uint_value_1 = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)data + 0x45) = 0x78;\n            char_ptr_1 = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08004e52;\n          if (byte_value == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto LAB_08004e2c;\n      }\n      ptr_to_char_ptr = (char **)*ptr_to_data_ptr;\n      *ptr_to_data_ptr = (uint *)(ptr_to_char_ptr + 1);\n      data_ptr = *ptr_to_char_ptr;\n      integer_value_1 = FUN_08000230(data_ptr,0,data[1]);\n      if (integer_value_1 != 0) {\n        data[1] = integer_value_1 - (int)data_ptr;\n      }\n      uint_value_2 = data[1];\n    }\n    data[4] = uint_value_2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  uint_value_2 = *data;\n  ptr_to_ptr_value = (uint **)*ptr_to_data_ptr;\n  uint_value_1 = data[5];\n  if ((uint_value_2 & 0x80) == 0) {\n    *ptr_to_data_ptr = (uint *)(ptr_to_ptr_value + 1);\n    ptr_value_1 = *ptr_to_ptr_value;\n    if ((uint_value_2 & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr_value_1 = (short)uint_value_1;\n  }\n  else {\n    *ptr_to_data_ptr = (uint *)(ptr_to_ptr_value + 1);\n    ptr_value_1 = *ptr_to_ptr_value;\nLAB_08004f42:\n    *ptr_value_1 = uint_value_1;\n  }\nLAB_08004f56:\n  data[4] = 0;\nLAB_08004ec2:\n  integer_value_1 = FUN_08004cb0(input_param,data,local_array,buffer_size,callback_function);\n  if ((integer_value_1 == -1) || (integer_value_1 = (*callback_function)(input_param,buffer_size,data_ptr,data[4]), integer_value_1 == -1)) {\nLAB_08004ed6:\n    uint_value_2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (integer_value_1 = 0; integer_value_1 < (int)(data[3] - local_array[0]); integer_value_1 = integer_value_1 + 1) {\n        integer_value_2 = (*callback_function)(input_param,buffer_size,(int)data + 0x19,1);\n        if (integer_value_2 == -1) goto LAB_08004ed6;\n      }\n    }\n    uint_value_2 = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      uint_value_2 = local_array[0];\n    }\n  }\n  return uint_value_2;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "decode_and_process_data_08004d9c",
                "param_1": "input_param",
                "param_2": "data",
                "param_3": "buffer_size",
                "param_4": "callback_function",
                "param_5": "ptr_to_data_ptr",
                "bVar1": "byte_value",
                "iVar2": "integer_value_1",
                "puVar3": "ptr_value_1",
                "iVar4": "integer_value_2",
                "pcVar5": "char_ptr_1",
                "uVar6": "uint_value_1",
                "ppuVar7": "ptr_to_ptr_value",
                "ppcVar8": "ptr_to_char_ptr",
                "uVar9": "uint_value_2",
                "uVar10": "uint_value_3",
                "pcVar11": "char_ptr_2",
                "pcVar12": "data_ptr",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "execute_function_08004fdc",
            "code": "\nvoid executeFunction_08004fdc(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int dataPointer;\n  undefined4 arg1Copy;\n  undefined4 arg2Copy;\n  undefined4 arg3Copy;\n  undefined4 arg4Copy;\n  \n  dataPointer = DAT_200000a0;\n  arg1Copy = arg1;\n  arg2Copy = arg2;\n  arg3Copy = arg3;\n  arg4Copy = arg4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(dataPointer,*(undefined4 *)(dataPointer + 8),arg1,&arg2Copy,arg1Copy,&arg2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "execute_function_08004fdc",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "dataPointer",
                "uVar2": "arg1Copy",
                "uStack_c": "arg2Copy",
                "uStack_8": "arg3Copy",
                "uStack_4": "arg4Copy"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "find_error_and_set_param_0800500c",
            "code": "\nvoid findErrorAndSetParam_0800500c(int *outputParam,undefined4 inputParam)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_08004094(inputParam);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputParam = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "find_error_and_set_param_0800500c",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "update_data_080050d0",
            "code": "\nuint updateData_080050d0(undefined4 *output,undefined4 *input)\n\n{\n  int dataPointer;\n  uint result;\n  ushort flags;\n  \n  dataPointer = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input == &DAT_08005fc0) {\n    input = *(undefined4 **)(dataPointer + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08005fe0) {\n    input = *(undefined4 **)(dataPointer + 8);\n  }\n  else if (input == (undefined4 *)&DAT_08005fa0) {\n    input = *(undefined4 **)(dataPointer + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080048dc(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output,input);\n  }\n  flags = *(ushort *)(input + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "update_data_080050d0",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataPointer",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "process_binary_data_080051ac",
            "code": "\nvoid processBinaryData_080051ac(void)\n\n{\n  uint *dataPointer;\n  int variable1;\n  int *arrayPointer;\n  int *arrayPointer2;\n  uint shortValue;\n  ushort flagValue;\n  int variable2;\n  code *functionPointer;\n  int variable3;\n  uint value;\n  code *jumpTable;\n  bool isZero;\n  undefined8 result;\n  \n  FUN_080055d0(6);\n  jumpTable = (code *)0x80051bb;\n  result = FUN_080040f8(1);\n  arrayPointer = (int *)((ulonglong)result >> 0x20);\n  dataPointer = (uint *)result;\n  flagValue = *(ushort *)(arrayPointer + 3);\n  shortValue = (uint)flagValue;\n  if ((int)(shortValue << 0x1c) < 0) {\n    variable1 = arrayPointer[4];\n    if (variable1 != 0) {\n      variable2 = shortValue << 0x1e;\n      isZero = variable2 == 0;\n      variable3 = *arrayPointer;\n      if (isZero) {\n        variable2 = arrayPointer[5];\n      }\n      *arrayPointer = variable1;\n      if (!isZero) {\n        variable2 = 0;\n      }\n      arrayPointer[2] = variable2;\n      for (variable3 = variable3 - variable1; 0 < variable3; variable3 = variable3 - variable2) {\n        variable2 = (*(code *)arrayPointer[10])(dataPointer,arrayPointer[8],variable1,variable3);\n        if (variable2 < 1) {\n          flagValue = *(ushort *)(arrayPointer + 3);\n          goto LAB_080052b2;\n        }\n        variable1 = variable1 + variable2;\n      }\n    }\n  }\n  else if (((0 < arrayPointer[1]) || (0 < arrayPointer[0x10])) &&\n          (functionPointer = (code *)arrayPointer[0xb], functionPointer != (code *)0x0)) {\n    value = *dataPointer;\n    *dataPointer = 0;\n    if ((flagValue & 0x1000) == 0) {\n      variable1 = (*functionPointer)(dataPointer,arrayPointer[8],shortValue & 0x1000,1);\n      if ((variable1 == -1) && (shortValue = *dataPointer, shortValue != 0)) {\n        if ((shortValue != 0x1d) && (shortValue != 0x16)) {\n          *(ushort *)(arrayPointer + 3) = *(ushort *)(arrayPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = value;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      variable1 = arrayPointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(arrayPointer + 3) << 0x1d) < 0) &&\n       (variable1 = variable1 - arrayPointer[1], arrayPointer[0xd] != 0)) {\n      variable1 = variable1 - arrayPointer[0x10];\n    }\n    variable1 = (*(code *)arrayPointer[0xb])(dataPointer,arrayPointer[8],variable1,0);\n    flagValue = *(ushort *)(arrayPointer + 3);\n    if ((variable1 == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(arrayPointer + 3) = flagValue | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    arrayPointer[1] = 0;\n    *arrayPointer = arrayPointer[4];\n    if (((int)((uint)flagValue << 0x13) < 0) && ((variable1 != -1 || (*dataPointer == 0)))) {\n      arrayPointer[0x15] = variable1;\n    }\n    arrayPointer2 = (int *)arrayPointer[0xd];\n    *dataPointer = value;\n    if (arrayPointer2 != (int *)0x0) {\n      if (arrayPointer2 != arrayPointer + 0x11) {\n        FUN_080048dc(dataPointer);\n      }\n      arrayPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "process_binary_data_080051ac",
                "puVar1": "dataPointer",
                "iVar2": "variable1",
                "piVar3": "arrayPointer",
                "piVar4": "arrayPointer2",
                "uVar5": "shortValue",
                "uVar6": "flagValue",
                "iVar7": "variable2",
                "pcVar8": "functionPointer",
                "iVar9": "variable3",
                "uVar10": "value",
                "bVar11": "isZero",
                "uVar12": "result",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "process_data_080052cc",
            "code": "\nundefined4 processData_080052cc(uint *dataPointer,int *infoPointer)\n\n{\n  undefined4 returnValue;\n  int offset;\n  int *tempPointer;\n  uint tempValue;\n  ushort tempShort;\n  int temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  code *functionPtr;\n  int count;\n  uint tempValue2;\n  code *unrecoveredTable;\n  bool bVar10;\n  \n  if (infoPointer[4] != 0) {\n    if ((dataPointer != (uint *)0x0) && (dataPointer[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (infoPointer == &DAT_08005fc0) {\n      infoPointer = (int *)dataPointer[1];\n    }\n    else if (infoPointer == (int *)&DAT_08005fe0) {\n      infoPointer = (int *)dataPointer[2];\n    }\n    else if (infoPointer == (int *)&DAT_08005fa0) {\n      infoPointer = (int *)dataPointer[3];\n    }\n    if (*(short *)(infoPointer + 3) != 0) {\n      tempShort = *(ushort *)(infoPointer + 3);\n      tempValue = (uint)tempShort;\n      if ((int)(tempValue << 0x1c) < 0) {\n        offset = infoPointer[4];\n        if (offset != 0) {\n          temp1 = tempValue << 0x1e;\n          bVar10 = temp1 == 0;\n          count = *infoPointer;\n          if (bVar10) {\n            temp1 = infoPointer[5];\n          }\n          *infoPointer = offset;\n          if (!bVar10) {\n            temp1 = 0;\n          }\n          infoPointer[2] = temp1;\n          for (count = count - offset; 0 < count; count = count - temp1) {\n            temp1 = (*(code *)infoPointer[10])(dataPointer,infoPointer[8],offset,count,temp2,temp3);\n            if (temp1 < 1) {\n              tempShort = *(ushort *)(infoPointer + 3);\n              goto LAB_080052b2;\n            }\n            offset = offset + temp1;\n          }\n        }\n      }\n      else if (((0 < infoPointer[1]) || (0 < infoPointer[0x10])) &&\n              (functionPtr = (code *)infoPointer[0xb], functionPtr != (code *)0x0)) {\n        tempValue2 = *dataPointer;\n        *dataPointer = 0;\n        if ((tempShort & 0x1000) == 0) {\n          offset = (*functionPtr)(dataPointer,infoPointer[8],tempValue & 0x1000,1);\n          if ((offset == -1) && (tempValue = *dataPointer, tempValue != 0)) {\n            if ((tempValue != 0x1d) && (tempValue != 0x16)) {\n              *(ushort *)(infoPointer + 3) = *(ushort *)(infoPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*unrecoveredTable)();\n              return returnValue;\n            }\n            *dataPointer = tempValue2;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          offset = infoPointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(infoPointer + 3) << 0x1d) < 0) &&\n           (offset = offset - infoPointer[1], infoPointer[0xd] != 0)) {\n          offset = offset - infoPointer[0x10];\n        }\n        offset = (*(code *)infoPointer[0xb])(dataPointer,infoPointer[8],offset,0);\n        tempShort = *(ushort *)(infoPointer + 3);\n        if ((offset == -1) &&\n           ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(infoPointer + 3) = tempShort | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredTable)(0xffffffff);\n          return returnValue;\n        }\n        infoPointer[1] = 0;\n        *infoPointer = infoPointer[4];\n        if (((int)((uint)tempShort << 0x13) < 0) && ((offset != -1 || (*dataPointer == 0)))) {\n          infoPointer[0x15] = offset;\n        }\n        tempPointer = (int *)infoPointer[0xd];\n        *dataPointer = tempValue2;\n        if (tempPointer != (int *)0x0) {\n          if (tempPointer != infoPointer + 0x11) {\n            FUN_080048dc(dataPointer);\n          }\n          infoPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredTable)();\n          return returnValue;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*unrecoveredTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "process_data_080052cc",
                "param_1": "dataPointer",
                "param_2": "infoPointer",
                "uVar1": "returnValue",
                "iVar2": "offset",
                "piVar3": "tempPointer",
                "uVar4": "tempValue",
                "uVar5": "tempShort",
                "iVar6": "temp1",
                "unaff_r4": "temp2",
                "unaff_r5": "temp3",
                "pcVar7": "functionPtr",
                "iVar8": "count",
                "uVar9": "tempValue2",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredTable"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_parameters_0800532c",
            "code": "\nvoid initializeParameters_0800532c(undefined4 *parameters,undefined2 value1,undefined2 value2)\n\n{\n  *parameters = 0;\n  parameters[1] = 0;\n  parameters[2] = 0;\n  *(undefined2 *)(parameters + 3) = value1;\n  parameters[0x19] = 0;\n  *(undefined2 *)((int)parameters + 0xe) = value2;\n  parameters[4] = 0;\n  parameters[5] = 0;\n  parameters[6] = 0;\n  FUN_080048cc(parameters + 0x17,0,8);\n  parameters[9] = 0x8005609;\n  parameters[10] = 0x800562b;\n  parameters[0xb] = 0x8005663;\n  parameters[8] = parameters;\n  parameters[0xc] = &label1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_parameters_0800532c",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_08005686_1": "label1"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_array_08005374",
            "code": "\nundefined4 * initializeArray_08005374(undefined4 array,int size)\n\n{\n  undefined4 *arrayPtr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  arrayPtr = (undefined4 *)FUN_08004978(array,offset + 0x74);\n  if (arrayPtr != (undefined4 *)0x0) {\n    *arrayPtr = 0;\n    arrayPtr[1] = size;\n    arrayPtr[2] = arrayPtr + 3;\n    FUN_080048cc(arrayPtr + 3,0,offset + 0x68);\n  }\n  return arrayPtr;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_array_08005374",
                "param_1": "array",
                "param_2": "size",
                "puVar1": "arrayPtr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *dataPtr)\n\n{\n  undefined4 result;\n  undefined4 *tempPtr;\n  \n  if (dataPtr[6] == 0) {\n    dataPtr[0x12] = 0;\n    dataPtr[0x13] = 0;\n    dataPtr[0x14] = 0;\n    tempPtr = &DAT_200000a4;\n    dataPtr[10] = &label;\n    if (dataPtr == &DAT_200000a4) {\n      tempPtr = (undefined4 *)0x1;\n    }\n    if (dataPtr == &DAT_200000a4) {\n      dataPtr[6] = tempPtr;\n    }\n    result = FUN_08005400();\n    dataPtr[1] = result;\n    result = FUN_08005400(dataPtr);\n    dataPtr[2] = result;\n    result = FUN_08005400(dataPtr);\n    dataPtr[3] = result;\n    FUN_0800532c(dataPtr[1],4,0);\n    FUN_0800532c(dataPtr[2],9,1);\n    FUN_0800532c(dataPtr[3],0x12,2);\n    dataPtr[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "dataPtr",
                "uVar1": "result",
                "puVar2": "tempPtr",
                "LAB_08005320_1": "label"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_data_08005400",
            "code": "\nint * initializeData_08005400(undefined4 *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current;\n  int *next;\n  int **pointerArray;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  pointerArray = (int **)&DAT_200000ec;\n  do {\n    next = pointerArray[2];\n    current = pointerArray[1];\n    while (current = (int *)((int)current + -1), -1 < (int)current) {\n      if (*(short *)(next + 3) == 0) {\n        *(undefined2 *)((int)next + 0xe) = 0xffff;\n        *(undefined2 *)(next + 3) = 1;\n        next[0x19] = 0;\n        *next = 0;\n        next[2] = 0;\n        next[1] = 0;\n        next[4] = 0;\n        next[5] = 0;\n        next[6] = 0;\n        FUN_080048cc(next + 0x17,0,8,1,param4);\n        next[0xd] = 0;\n        next[0xe] = 0;\n        next[0x12] = 0;\n        next[0x13] = 0;\n        return next;\n      }\n      next = next + 0x1a;\n    }\n    if (*pointerArray == (int *)0x0) {\n      current = (int *)FUN_08005374(output,4);\n      *pointerArray = current;\n      if (current == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    pointerArray = (int **)*pointerArray;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_data_08005400",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current",
                "piVar2": "next",
                "ppiVar3": "pointerArray"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_file_permissions_080054b4",
            "code": "\nundefined4 checkFilePermissions_080054b4(undefined4 param1,int fileInfo,undefined4 *permissionType,uint *result)\n\n{\n  int returnValue;\n  undefined4 permission;\n  undefined temporaryBuffer [4];\n  uint fileFlags;\n  \n  if ((*(short *)(fileInfo + 0xe) < 0) ||\n     (returnValue = FUN_080056d4(param1,(int)*(short *)(fileInfo + 0xe),temporaryBuffer), returnValue < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(fileInfo + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *result = (uint)((fileFlags & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_080054f4:\n  *permissionType = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_file_permissions_080054b4",
                "param_1": "param1",
                "param_2": "fileInfo",
                "param_3": "permissionType",
                "param_4": "result",
                "iVar1": "returnValue",
                "uVar2": "permission",
                "auStack_4c": "temporaryBuffer",
                "local_48": "fileFlags"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "update_binary_info_080054fc",
            "code": "\nvoid updateBinaryInfo_080054fc(int binaryAddress,int *binaryInfo)\n\n{\n  ushort updatedValue;\n  int result;\n  int localAddress;\n  int *localInfo;\n  \n  if (-1 < (int)((uint)*(ushort *)(binaryInfo + 3) << 0x1e)) {\n    localAddress = binaryAddress;\n    localInfo = binaryInfo;\n    updatedValue = FUN_080054b4(binaryAddress,binaryInfo,&localAddress,&localInfo);\n    result = FUN_08004978(binaryAddress,localAddress);\n    if (result != 0) {\n      *(undefined **)(binaryAddress + 0x28) = &LAB_08005320_1;\n      *binaryInfo = result;\n      *(ushort *)(binaryInfo + 3) = *(ushort *)(binaryInfo + 3) | 0x80;\n      binaryInfo[5] = localAddress;\n      binaryInfo[4] = result;\n      if ((localInfo != (int *)0x0) &&\n         (result = FUN_080056f8(binaryAddress,(int)*(short *)((int)binaryInfo + 0xe)), result != 0)) {\n        *(ushort *)(binaryInfo + 3) = *(ushort *)(binaryInfo + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(binaryInfo + 3) = updatedValue | *(ushort *)(binaryInfo + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(binaryInfo + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(binaryInfo + 3) = *(ushort *)(binaryInfo + 3) & 0xfffc | 2;\n  }\n  *binaryInfo = (int)binaryInfo + 0x47;\n  binaryInfo[4] = (int)binaryInfo + 0x47;\n  binaryInfo[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "update_binary_info_080054fc",
                "param_1": "binaryAddress",
                "param_2": "binaryInfo",
                "uVar1": "updatedValue",
                "iVar2": "result",
                "local_18": "localAddress",
                "local_14": "localInfo"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "process_function_080055d0",
            "code": "\nint processFunction_080055d0(uint inputValue)\n\n{\n  int *ptrArray;\n  undefined4 returnValue;\n  int index;\n  code *functionPointer;\n  undefined4 auxiliaryVar1;\n  undefined4 auxiliaryVar2;\n  undefined4 linkRegister;\n  undefined4 *ptrArrayCopy;\n  \n  ptrArray = DAT_200000a0;\n  ptrArrayCopy = &DAT_200000a0;\n  if (0x1f < inputValue) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  index = DAT_200000a0[0x11];\n  if ((index != 0) && (functionPointer = *(code **)(index + inputValue * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + inputValue * 4) = 0;\n      (*functionPointer)(inputValue);\n    }\n    return 0;\n  }\n  returnValue = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  index = FUN_080040fc(returnValue,inputValue,inputValue,0,ptrArrayCopy,auxiliaryVar1,auxiliaryVar2,linkRegister);\n  if ((index == -1) && (DAT_20000674 != 0)) {\n    *ptrArray = DAT_20000674;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "process_function_080055d0",
                "param_1": "inputValue",
                "piVar1": "ptrArray",
                "uVar2": "returnValue",
                "iVar3": "index",
                "pcVar4": "functionPointer",
                "unaff_r4": "auxiliaryVar1",
                "unaff_r5": "auxiliaryVar2",
                "in_lr": "linkRegister",
                "puVar5": "ptrArrayCopy"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "handle_function_thunk_0800410c",
            "code": "\nundefined4 handle_function_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "handle_function_thunk_0800410c"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_variable_08005608",
            "code": "\nvoid updateVariable_08005608(undefined4 input1,int input2)\n\n{\n  int result;\n  uint newVar;\n  bool isPositive;\n  \n  result = FUN_0800573c(input1,(int)*(short *)(input2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newVar = *(int *)(input2 + 0x54) + result;\n  }\n  else {\n    newVar = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(input2 + 0x54) = newVar;\n  }\n  if (!isPositive) {\n    *(short *)(input2 + 0xc) = (short)newVar;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_variable_08005608",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "newVar",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "validate_and_update_data_0800562a",
            "code": "\nvoid validate_and_update_data_0800562a(int *output_ptr,int input_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 var_1;\n  undefined4 var_2;\n  undefined4 var_3;\n  \n  if ((int)((uint)*(ushort *)(input_ptr + 0xc) << 0x17) < 0) {\n    FUN_08005718(output_ptr,(int)*(short *)(input_ptr + 0xe),0,2);\n  }\n  *(ushort *)(input_ptr + 0xc) = *(ushort *)(input_ptr + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  iVar1 = FUN_080040ec((int)*(short *)(input_ptr + 0xe),param_3,param_4,param_4,param_4,var_1,\n                       var_2,var_3);\n  if ((iVar1 == -1) && (DAT_20000674 != 0)) {\n    *output_ptr = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "validate_and_update_data_0800562a",
                "param_1": "output_ptr",
                "param_2": "input_ptr",
                "unaff_r4": "var_1",
                "unaff_r5": "var_2",
                "in_lr": "var_3"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_data_08005662",
            "code": "\nvoid updateData_08005662(undefined4 param1,int param2)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isInvalid;\n  \n  result = FUN_08005718(param1,(int)*(short *)(param2 + 0xe));\n  isInvalid = result == -1;\n  if (isInvalid) {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(param2 + 0x54) = result;\n    updatedValue = *(ushort *)(param2 + 0xc) | 0x1000;\n  }\n  if (isInvalid) {\n    *(ushort *)(param2 + 0xc) = updatedValue;\n  }\n  if (!isInvalid) {\n    *(ushort *)(param2 + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_data_08005662",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isInvalid"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "extract_and_check_error_080056d4",
            "code": "\nvoid extract_and_check_error_080056d4(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040d6(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "extract_and_check_error_080056d4",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "check_and_update_value_080056f8",
            "code": "\nvoid checkAndUpdateValue_080056f8(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e0(input);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "check_and_update_value_080056f8",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "set_return_value_if_error_08005718",
            "code": "\nvoid setReturnValueIfError_08005718(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e4(arg1,arg2,arg3,arg3,arg3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "set_return_value_if_error_08005718",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "update_parameter_if_error_0800573c",
            "code": "\nvoid updateParameterIfError_0800573c(int *outputValue,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e8(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputValue = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "update_parameter_if_error_0800573c",
                "param_1": "outputValue",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_variables_08005760",
            "code": "\nvoid initializeVariables_08005760(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_variables_08005760",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 119038,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}