{
    "functions": {
        "FUN_08007246": {
            "renaming": {
                "FUN_08007246": "execute_application_08007246",
                "FUN_08003748": "initialize_network",
                "FUN_08004046": "load_configuration",
                "do_nothing_08007244": "do_nothing"
            },
            "code": "void execute_application_08007246(void)\n{\n  initialize_network();\n  load_configuration();\n  do_nothing();\n  return;\n}",
            "called": [
                "FUN_08004046",
                "FUN_08003748",
                "FUN_08007244"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007246",
            "calling": [],
            "imported": false,
            "current_name": "execute_application_08007246"
        },
        "FUN_0800a042": {
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "result",
                "param_2": "data_ptr",
                "param_3": "param1",
                "param_4": "param2",
                "sVar1": "data",
                "puVar2": "ptr",
                "iVar3": "operation_result",
                "unaff_r4": "unused1",
                "unaff_r5": "unused2",
                "in_lr": "unused3"
            },
            "code": "void process_data_0800a042(int *result, int data_ptr, int param1, int param2) {\n  short data = *(short *)(data_ptr + 0xe);\n  if ((int)((uint)*(ushort *)(data_ptr + 0xc) << 0x17) < 0) {\n    perform_operation(result, data, 0, 2);\n  }\n  *(ushort *)(data_ptr + 0xc) &= 0xefff;\n  int operation_result = perform_operation(data, param1, param2, param2, param2, 0, 0, 0);\n  if ((operation_result == -1) && (*(int *)PTR_DAT_0800a0c8 != 0)) {\n    *result = *(int *)PTR_DAT_0800a0c8;\n  }\n  return;\n}",
            "called": [
                "FUN_0800a130",
                "FUN_0800885c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a042",
            "calling": [],
            "imported": false,
            "current_name": "process_data_0800a042"
        },
        "FUN_08008694": {
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "bVar1": "data_index",
                "PTR_DAT_080086dc": "data_array",
                "PTR_DAT_080086e0": "data_ptr_array",
                "FUN_08003f30": "update_data_1",
                "FUN_08003f94": "update_data_2",
                "FUN_0800688e": "update_data_3"
            },
            "code": "void update_data_08008694(int data_ptr, uint32_t new_data){\n\tif (data_ptr != 0) {\n\t\tuint8_t data_index = *(uint8_t *)(data_ptr + 0x44);\n\t\tPTR_DAT_080086dc[data_index] = new_data;\n\t\tPTR_DAT_080086e0[data_index] = data_ptr;\n\t\tupdate_data_08008694_1(*(char *)(data_ptr + 0x5a));\n\t\tupdate_data_08008694_2(*(char *)(data_ptr + 0x5a));\n\t\tupdate_data_08008694_3(data_index);\n\t}\n}",
            "called": [
                "FUN_08003f94",
                "FUN_08003f30",
                "FUN_0800688e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008694",
            "calling": [],
            "imported": false,
            "current_name": "update_data_08008694"
        },
        "FUN_08002ce0": {
            "renaming": {
                "FUN_08002ce0": "initialize_data_08002ce0",
                "param_1": "data",
                "iVar1": "data_offset",
                "FUN_0800314e": "initialize_subroutine",
                "FUN_080032bc": "initialize_subroutine",
                "PTR_FUN_08002c2c_1_08002d90": "ptr_fun_1",
                "PTR_LAB_08002c40_1_08002d94": "ptr_lab_1",
                "PTR_LAB_08002c7c_1_08002d98": "ptr_lab_2",
                "PTR_LAB_08002c90_1_08002d9c": "ptr_lab_3",
                "PTR_LAB_08002c54_1_08002da0": "ptr_lab_4",
                "PTR_LAB_08002c68_1_08002da4": "ptr_lab_5",
                "PTR_LAB_08002ca4_1_08002da8": "ptr_lab_6",
                "PTR_LAB_08002cb8_1_08002dac": "ptr_lab_7",
                "PTR_LAB_08002e1a_1_08002db0": "ptr_lab_8",
                "PTR_LAB_08002dea_1_08002db4": "ptr_lab_9",
                "PTR_LAB_08002cd0_1_08002db8": "ptr_lab_10"
            },
            "code": "int initialize_data_08002ce0(int data)\n{\n  int data_offset = data + 0x44;\n  // Call functions to initialize data\n  initialize_subroutine(data_offset, data, 0x40);\n  *(undefined *)(data + 0xc4) = 0;\n  *(undefined4 *)(data + 200) = 0;\n  *(undefined *)(data + 0x1f8) = 0;\n  initialize_subroutine(data_offset, 0xe0, PTR_FUN_08002c2c_1_08002d90, 0);\n  initialize_subroutine(data_offset, 0x90, PTR_LAB_08002c40_1_08002d94, 0);\n  initialize_subroutine(data_offset, 0xc0, PTR_LAB_08002c7c_1_08002d98, 0);\n  initialize_subroutine(data_offset, 0xd0, PTR_LAB_08002c90_1_08002d9c, 0);\n  initialize_subroutine(data_offset, 0xf4, PTR_LAB_08002c54_1_08002da0, 0);\n  initialize_subroutine(data_offset, 0xf5, PTR_LAB_08002c68_1_08002da4, 0);\n  initialize_subroutine(data_offset, 0x71, PTR_LAB_08002ca4_1_08002da8, 0);\n  initialize_subroutine(data_offset, 0xf0, PTR_LAB_08002cb8_1_08002dac, 0);\n  initialize_subroutine(data_offset, 0x79, PTR_LAB_08002e1a_1_08002db0, data);\n  initialize_subroutine(data_offset, 0xf9, PTR_LAB_08002dea_1_08002db4, data);\n  initialize_subroutine(data_offset, 0xff, PTR_LAB_08002cd0_1_08002db8, 0);\n  return data;\n}",
            "called": [
                "FUN_08003366",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370",
                "FUN_08003306",
                "FUN_08003350",
                "FUN_0800314e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ce0",
            "calling": [
                "FUN_08002dbc"
            ],
            "imported": false,
            "current_name": "initialize_data_08002ce0"
        },
        "FUN_08005188": {
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data_ptr",
                "iVar1": "data",
                "uVar2": "field_2",
                "uVar3": "field_3",
                "uVar4": "field_1",
                "DAT_080052e8": "ACTION_1_FLAG",
                "DAT_080052d4": "ACTION_2_FLAG",
                "DAT_080052dc": "ACTION_3_FLAG",
                "DAT_080052ec": "ACTION_4_FLAG",
                "DAT_080052e4": "ACTION_5_FLAG",
                "DAT_080052e0": "ACTION_6_FLAG",
                "DAT_080052d8": "ACTION_9_FLAG"
            },
            "code": "void process_data_08005188(int *data_ptr) {\n  int data = *data_ptr;\n  uint field_1 = *(uint *)(data + 0x18);\n  uint field_2 = *(uint *)(data + 0x14);\n  uint field_3 = *(uint *)(data + 4);\n  if ((*(char *)((int)data_ptr + 0x3e) == '\\x10') || (*(char *)((int)data_ptr + 0x3e) == '@')) {\n    if (((field_2 & 0x10001) == 0) || ((field_3 & 0x200) == 0)) {\n      if (((DAT_080052e8 & field_2) == 0) || ((field_3 & 0x200) == 0)) {\n        if (((DAT_080052d4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n          perform_action_1(data_ptr);\n        }\n      }\n      else {\n        perform_action_2(data_ptr);\n      }\n    }\n    else {\n      perform_action_3(data_ptr);\n    }\n    if ((DAT_080052dc & field_1) == 0) {\n      if ((((DAT_080052ec & field_2) != 0) && ((field_3 & 0x400) != 0)) && ((DAT_080052e4 & field_2) == 0)) {\n        perform_action_4(data_ptr);\n        return;\n      }\n      if (((DAT_080052e4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n        perform_action_5(data_ptr);\n        return;\n      }\n    }\n    else {\n      if ((((DAT_080052e0 & field_2) != 0) && ((field_3 & 0x400) != 0)) && ((DAT_080052e4 & field_2) == 0)) {\n        perform_action_6(data_ptr);\n        return;\n      }\n      if (((DAT_080052e4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n        perform_action_7(data_ptr);\n        return;\n      }\n    }\n  }\n  else {\n    if (((DAT_080052d4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n      perform_action_8();\n      return;\n    }\n    if (((DAT_080052d8 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n      perform_action_9(data_ptr);\n      return;\n    }\n    if ((DAT_080052dc & field_1) == 0) {\n      if ((((DAT_080052ec & field_2) != 0) && ((field_3 & 0x400) != 0)) && ((DAT_080052e4 & field_2) == 0)) {\n        perform_action_10(data_ptr);\n        return;\n      }\n      if (((DAT_080052e4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n        perform_action_11(data_ptr);\n      }\n    }\n    else {\n      if ((((DAT_080052e0 & field_2) != 0) && ((field_3 & 0x400) != 0)) && ((DAT_080052e4 & field_2) == 0)) {\n        perform_action_12(data_ptr);\n        return;\n      }\n      if (((DAT_080052e4 & field_2) != 0) && ((field_3 & 0x200) != 0)) {\n        perform_action_13(data_ptr);\n        return;\n      }\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004396",
                "FUN_08004d6c",
                "FUN_08004a24",
                "FUN_080043a2",
                "FUN_0800457c",
                "FUN_08004ac2",
                "FUN_0800459c",
                "FUN_08005084",
                "FUN_08004b82",
                "FUN_08004ccc",
                "FUN_08004a76",
                "FUN_08004e3c",
                "FUN_0800430c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005188",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08005188"
        },
        "FUN_08007244": {
            "renaming": {
                "FUN_08007244": "do_nothing_08007244"
            },
            "code": "\nvoid do_nothing_08007244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007244",
            "calling": [
                "FUN_08007246"
            ],
            "imported": false,
            "current_name": "do_nothing_08007244"
        },
        "FUN_08009db0": {
            "renaming": {
                "FUN_08009db0": "find_valid_pi_08009db0",
                "param_1": "error_code",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "piVar1": "valid_pi",
                "piVar2": "pi",
                "iVar3": "ptr",
                "ppiVar4": "ppi",
                "PTR_PTR_DAT_08009e24": "PTR_PTR_DAT_08009e24",
                "FUN_08009d50": "initialize_ptr",
                "short": "short",
                "create_pi": "create_pi",
                "initialize_pi": "initialize_pi"
            },
            "code": "int* find_valid_pi_08009db0(int* error_code, int param_2, int param_3, int param_4)\n{\n  int* valid_pi = NULL;\n  int* pi = NULL;\n  int ptr = *(int*)PTR_PTR_DAT_08009e24;\n  if (*(int*)(ptr + 0x18) == 0) {\n    initialize_ptr(ptr);\n  }\n  int** ppi = (int**)(ptr + 0x48);\n  while (true) {\n    pi = ppi[2];\n    valid_pi = ppi[1];\n    while (valid_pi = (int*)((int)valid_pi - 1), -1 < (int)valid_pi) {\n      if (*(short*)(pi + 3) == 0) {\n        *(undefined2*)((int)pi + 0xe) = 0xffff;\n        pi[0x19] = 0;\n        *(undefined2*)(pi + 3) = 1;\n        *pi = 0;\n        pi[2] = 0;\n        pi[1] = 0;\n        pi[4] = 0;\n        pi[5] = 0;\n        pi[6] = 0;\n        initialize_pi(pi + 0x17, 0, 8, 1, param_4);\n        pi[0xd] = 0;\n        pi[0xe] = 0;\n        pi[0x12] = 0;\n        pi[0x13] = 0;\n        return pi;\n      }\n      pi = pi + 0x1a;\n    }\n    if (*ppi == NULL) {\n      valid_pi = (int*)create_pi(error_code, 4);\n      *ppi = valid_pi;\n      if (valid_pi == NULL) {\n        *error_code = 0xc;\n        return NULL;\n      }\n    }\n    ppi = (int**)*ppi;\n  }\n}",
            "called": [
                "FUN_08009d24",
                "FUN_08009d50",
                "FUN_080091c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009db0",
            "calling": [
                "FUN_08009d50"
            ],
            "imported": false,
            "current_name": "find_valid_pi_08009db0"
        },
        "FUN_08002c2c": {
            "renaming": {
                "FUN_08002c2c": "execute_function_if_not_null_08002c2c",
                "param_1": "function_pointer",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "pcVar1": "function",
                "PTR_DAT_08002c3c": "function_pointer_pointer"
            },
            "code": "void execute_function_if_not_null_08002c2c(code* function_pointer, int param1, int param2, int param3, int param4)\n{\n    code* function = *(code**)PTR_DAT_08002c3c;\n    if (function != NULL)\n    {\n        (*function)(param1, param2, param3, function, param4);\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c2c",
            "calling": [],
            "imported": false,
            "current_name": "execute_function_if_not_null_08002c2c"
        },
        "FUN_08001bf8": {
            "renaming": {
                "FUN_08001bf8": "process_data_and_return_08001bf8",
                "param_1": "data_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_0800288c": "call_data_processing_function"
            },
            "code": "void process_data_and_return_08001bf8(undefined4 data_ptr, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  call_data_processing_function(data_ptr, param_2, param_3, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_0800288c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001bf8",
            "calling": [
                "FUN_08001c18",
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "process_data_and_return_08001bf8"
        },
        "FUN_080072f0": {
            "renaming": {
                "FUN_080072f0": "call_function_with_params_and_double_last_param_080072f0",
                "param_1": "function_param_1",
                "param_2": "function_param_2",
                "param_3": "function_param_3",
                "param_4": "double_param_1",
                "FUN_080042d4": "call_function_with_params_and_double_last_param"
            },
            "code": "void call_function_with_params_and_double_last_param_080072f0(undefined4 function_param_1, undefined2 function_param_2, undefined4 function_param_3, undefined4 double_param_1)\n{\n  call_function_with_params_and_double_last_param_080072f0(function_param_1, function_param_2, function_param_3, double_param_1, double_param_1);\n  return;\n}",
            "called": [
                "FUN_080042d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072f0",
            "calling": [
                "FUN_08008a6c"
            ],
            "imported": false,
            "current_name": "call_function_with_params_and_double_last_param_080072f0"
        },
        "FUN_08000178": {
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "str",
                "pcVar2": "current_char",
                "pcVar3": "str_ptr",
                "cVar1": "current_char_val"
            },
            "code": "char* find_end_of_string_08000178(char* str) {\n  char* current_char = str;\n  while (*current_char != '\\0') {\n    current_char++;\n  }\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000178",
            "calling": [
                "FUN_08002e44",
                "FUN_08008e7c",
                "FUN_080032a2"
            ],
            "imported": false,
            "current_name": "find_end_of_string_08000178"
        },
        "FUN_080069ec": {
            "renaming": {
                "FUN_080069ec": "handle_data_080069ec",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "data_val_2",
                "puVar3": "data_ptr",
                "uVar4": "is_true",
                "uVar5": "data_val_1"
            },
            "code": "void handle_data_080069ec(uint **data)\n{\n  uint *data_ptr = *data;\n  uint data_val_1 = *data_ptr;\n  uint data_val_2 = data_ptr[3];\n  \n  if ((((data_val_1 & 0xf) == 0) && ((data_val_1 & 0x20) != 0)) && ((data_val_2 & 0x20) != 0)) {\n    handle_case_1(data);\n    return;\n  }\n  if (((data_val_1 & 0xf) == 0) || ((data_ptr[5] & 1) == 0 && ((data_val_2 & 0x120) == 0)))) {\n    if (((data_val_1 & 0x80) != 0) && ((data_val_2 & 0x80) != 0)) {\n      handle_case_2(data);\n      return;\n    }\n    if (((data_val_1 & 0x40) != 0) && ((data_val_2 & 0x40) != 0)) {\n      handle_case_3(data);\n    }\n  }\n  else {\n    if (((data_val_1 & 1) != 0) && ((data_val_2 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((data_val_1 & 4) != 0) && ((data_ptr[5] & 1) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((data_val_1 & 2) != 0) && ((data_ptr[5] & 1) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((data_val_1 & 8) != 0) && ((data_ptr[5] & 1) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((data_val_1 & 0x20) != 0) && ((data_val_2 & 0x20) != 0)) {\n        handle_case_1(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        do_nothing(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      handle_case_4(data);\n      data_ptr = *data;\n      if ((data_ptr[5] & 0x40) == 0) {\n        do_nothing(data);\n        return;\n      }\n      data_ptr[5] = data_ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        do_nothing(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)PTR_LAB_08006b0c_1_08006b08;\n      int result = execute_func(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08006932",
                "FUN_08004050",
                "FUN_0800877c",
                "FUN_0800694c",
                "FUN_080064b0",
                "FUN_080064cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069ec",
            "calling": [],
            "imported": false,
            "current_name": "handle_data_080069ec"
        },
        "FUN_0800a168": {
            "renaming": {
                "FUN_0800a168": "process_integer_0800a168",
                "param_1": "result",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "puVar1": "ptr_data",
                "iVar2": "status"
            },
            "code": "void process_integer_0800a168(int *result, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n    undefined *ptr_data = PTR_DAT_0800a188;\n    *(undefined4 *)PTR_DAT_0800a188 = 0;\n    int status = FUN_08008858(param_2, param_3, param_4, param_4, param_4);\n    if ((status == -1) && (*(int *)ptr_data != 0)) {\n        *result = *(int *)ptr_data;\n    }\n    return;\n}",
            "called": [
                "FUN_08008858"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a168",
            "calling": [
                "FUN_0800a020"
            ],
            "imported": false,
            "current_name": "process_integer_0800a168"
        },
        "FUN_080067ac": {
            "renaming": {
                "FUN_080067ac": "decode_data_080067ac",
                "param_1": "data_ptr",
                "param_2": "input_data",
                "param_3": "data_length",
                "param_4": "param_4",
                "uVar1": "result",
                "iVar2": "status"
            },
            "code": "int decode_data_080067ac(int *data_ptr, ushort *input_data, int data_length, undefined4 param_4)\n{\n  undefined4 uVar1;\n  int status = 0;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (input_data == (ushort *)0x0 || data_length == 0 || *(char *)(data_ptr + 0xe) == '\\x01') {\n      if(*(char *)(data_ptr + 0xe) != '\\x01') {\n        *(undefined *)(data_ptr + 0xe) = 1;\n        data_ptr[0xf] = 0;\n        *(undefined *)((int)data_ptr + 0x39) = 0x21;\n        uVar1 = FUN_08003760();\n        *(short *)(data_ptr + 9) = (short)data_length;\n        *(short *)((int)data_ptr + 0x26) = (short)data_length;\n      }\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          status = FUN_080066e8(data_ptr,0x80,0,uVar1,param_4);\n          if (status != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *input_data & 0x1ff;\n          if (data_ptr[4] == 0) {\n            input_data = input_data + 1;\n          }\n          else {\n            input_data = (ushort *)((int)input_data + 1);\n          }\n        }\n        else {\n          status = FUN_080066e8(data_ptr,0x80,0,uVar1,param_4);\n          if (status != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)input_data;\n          input_data = (ushort *)((int)input_data + 1);\n        }\n      }\n      status = FUN_080066e8(data_ptr,0x40,0,uVar1,param_4);\n      if (status == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n    else {\n      status = 1;\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}",
            "called": [
                "FUN_08003760",
                "FUN_080066e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080067ac",
            "calling": [
                "FUN_08008500"
            ],
            "imported": false,
            "current_name": "decode_data_080067ac"
        },
        "FUN_0800735a": {
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "search_value",
                "param_2": "array",
                "*param_2": "*array"
            },
            "code": "unsigned int find_value_in_array_0800735a(int search_value, char* array) {\n    while (true) {\n        if (*array == -1) {\n            return 0xffffffff;\n        }\n        if (*array == search_value) {\n            break;\n        }\n        array = array + 0xc;\n    }\n    return *(unsigned int*)(array + 8);\n}",
            "called": [
                "FUN_0800735a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800735a",
            "calling": [
                "FUN_08007376",
                "FUN_0800735a"
            ],
            "imported": false,
            "current_name": "find_value_in_array_0800735a"
        },
        "FUN_08008c20": {
            "renaming": {
                "FUN_08008c20": "initialize_struct_08008c20",
                "param_1": "struct_ptr",
                "*(int *)(param_1 + 0x130)": "*ptr_1",
                "param_1 + 0x11": "struct_ptr + 0x11",
                "*(undefined2 *)(param_1 + 0x134)": "*ptr_2",
                "*(undefined2 *)(param_1 + 0x136)": "*ptr_3",
                "*(int *)(param_1 + 0x138)": "*ptr_4",
                "param_1 + 0x51": "struct_ptr + 0x51",
                "*(undefined2 *)(param_1 + 0x13c)": "*ptr_5",
                "*(undefined2 *)(param_1 + 0x13e)": "*ptr_6"
            },
            "code": "void initialize_struct_08008c20(int struct_ptr) {\n    int* ptr_1 = (int*)(struct_ptr + 0x130);\n    *ptr_1 = struct_ptr + 0x11;\n    short* ptr_2 = (short*)(struct_ptr + 0x134);\n    *ptr_2 = 0;\n    short* ptr_3 = (short*)(struct_ptr + 0x136);\n    *ptr_3 = 0;\n    int* ptr_4 = (int*)(struct_ptr + 0x138);\n    *ptr_4 = struct_ptr + 0x51;\n    short* ptr_5 = (short*)(struct_ptr + 0x13c);\n    *ptr_5 = 0;\n    short* ptr_6 = (short*)(struct_ptr + 0x13e);\n    *ptr_6 = 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c20",
            "calling": [
                "FUN_08008d30"
            ],
            "imported": false,
            "current_name": "initialize_struct_08008c20"
        },
        "FUN_08000a64": {
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "status",
                "uVar2": "i",
                "PTR_DAT_08000ad8": "data_array",
                "PTR_DAT_08000adc": "data_array1",
                "PTR_DAT_08000ae0": "data_array2",
                "FUNC_080005f8": "log_error",
                "FUN_080036ac": "check_data",
                "FUN_0800738a": "process_data_item",
                "*PTR_DAT_08000ae4": "completion_status",
                "FUN_08002a26": "notify_completion",
                "PTR_DAT_08000ae8": "completion_notification"
            },
            "code": "void process_data_08000a64()\n{\n  int status;\n  uint8_t i;\n  for (i = 0; i < 0x3c; i++) {\n    if (PTR_DAT_08000ad8[i] == -1) {\n      status = 0;\n    }\n    else {\n      status = check_data(PTR_DAT_08000ad8[i]);\n      if (status == 0) {\n        status = 0;\n      }\n      else {\n        status = check_data(PTR_DAT_08000ad8[i]);\n        if (status == 1) {\n          status = 0;\n        }\n        else {\n          status = process_data_08000a64_item(PTR_DAT_08000ad8[i], PTR_DAT_08000adc);\n          if (status == 0) {\n            status = process_data_08000a64_item(PTR_DAT_08000ad8[i], PTR_DAT_08000ae0);\n          }\n        }\n      }\n    }\n    if (status != 0) {\n      log_error(i, 6);\n    }\n  }\n  *PTR_DAT_08000ae4 = 1;\n  notify_completion(PTR_DAT_08000ae8);\n  return;\n}",
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000a64",
            "calling": [
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "process_data_08000a64"
        },
        "FUN_0800723c": {
            "renaming": {
                "FUN_0800723c": "call_first_function_0800723c",
                "FUN_08003760": "perform_initialization"
            },
            "code": "void call_first_function_0800723c(void)\n{\n  perform_initialization();\n  return;\n}",
            "called": [
                "FUN_08003760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800723c",
            "calling": [
                "FUN_08008abc"
            ],
            "imported": false,
            "current_name": "call_first_function_0800723c"
        },
        "FUN_080043a2": {
            "renaming": {
                "FUN_080043a2": "process_input_080043a2",
                "param_1": "input_array",
                "puVar1": "ptr_1"
            },
            "code": "uint32_t process_input_080043a2(uint32_t **input_array)\n{\n  uint32_t *ptr_1 = input_array[11];\n  if ((*(char *)((int)input_array + 0x3d) == '\"') && ((input_array[20] != (uint32_t *)0x0 || (*(char *)((int)input_array + 0x3e) != '@')))) {\n    if ((input_array[20] == (uint32_t *)0x0) && (input_array[4] == (uint32_t *)0xc000)) {\n      **input_array = **input_array | 0x100;\n      input_array[20] = (uint32_t *)((int)input_array[20] + 1);\n    }\n    else {\n      uint16_t var_1 = *(uint16_t *)((int)input_array + 0x2a);\n      if (var_1 == 0) {\n        **input_array = **input_array | 0x200;\n      }\n      else if (var_1 == 1) {\n        if (ptr_1 == (uint32_t *)0xffff0000) {\n          **input_array = **input_array & 0xfffffbff;\n          ptr_1 = *input_array;\n          if ((ptr_1[1] & 0x800) == 0) {\n            *ptr_1 = *ptr_1 | 0x200;\n          }\n          else {\n            *ptr_1 = *ptr_1 & 0xfffffbff;\n          }\n        }\n        else if (((ptr_1 == (uint32_t *)0x4) || (ptr_1 == (uint32_t *)0x8)) || (input_array[12] == (uint32_t *)0x12)) {\n          **input_array = **input_array & 0xfffffbff;\n          **input_array = **input_array | 0x200;\n        }\n        else if (input_array[11] == (uint32_t *)0x2) {\n          **input_array = **input_array | 0x400;\n        }\n        else {\n          **input_array = **input_array & 0xfffffbff;\n        }\n      }\n      else if (var_1 == 2) {\n        if (input_array[11] == (uint32_t *)0x2) {\n          **input_array = **input_array | 0x400;\n        }\n        else {\n          **input_array = **input_array | 0x800;\n          **input_array = **input_array & 0xfffffbff;\n        }\n        ptr_1 = *input_array;\n        if ((ptr_1[1] & 0x800) != 0) {\n          ptr_1[1] = ptr_1[1] | 0x1000;\n        }\n      }\n      else {\n        **input_array = **input_array | 0x400;\n        ptr_1 = *input_array;\n        if ((ptr_1[1] & 0x800) != 0) {\n          ptr_1[1] = ptr_1[1] | 0x1000;\n        }\n      }\n      input_array[20] = (uint32_t *)0x0;\n    }\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080043a2",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_input_080043a2"
        },
        "FUN_0800694c": {
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "data",
                "pbVar1": "output_byte_ptr",
                "sVar2": "count",
                "puVar3": "output_ptr",
                "string": "string_ptr",
                "data_type": "data_type",
                "data_value": "data_value",
                "output_ptr": "output_ptr",
                "output_byte_ptr": "output_byte_ptr",
                "count_ptr": "count_ptr"
            },
            "code": "int process_data_0800694c(int *data) {\n  char *string = (char *)(data + 0x3a);\n  if (*string != '\"') {\n    return 2;\n  }\n  int data_type = data[2];\n  int data_value = *(int *)(*data + 4);\n  int *output_ptr = (int *)(data + 10);\n  if (data_type == 0x1000) {\n    if (data[4] == 0) {\n      *output_ptr = (unsigned short)((data_value << 0x17) >> 0x17);\n      output_ptr++;\n    }\n    else {\n      *output_ptr = (unsigned short)data_value & 0xff;\n      output_ptr++;\n    }\n  }\n  else if (data[4] == 0) {\n    char *output_byte_ptr = (char *)output_ptr;\n    *output_byte_ptr = (char)data_value;\n    output_ptr++;\n  }\n  else {\n    char *output_byte_ptr = (char *)output_ptr;\n    *output_byte_ptr = (char)data_value & 0x7f;\n    output_ptr++;\n  }\n  short *count_ptr = (short *)(data + 0x2e);\n  (*count_ptr)--;\n  if (*count_ptr != 0) {\n    return 0;\n  }\n  *(unsigned int *)(*data + 0xc) &= 0xffffffdf;\n  *(unsigned int *)(*data + 0xc) &= 0xfffffeff;\n  *(unsigned int *)(*data + 0x14) &= 0xfffffffe;\n  *string = 0x20;\n  perform_additional_tasks();\n  return 0;\n}",
            "called": [
                "FUN_0800870c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800694c",
            "calling": [
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "process_data_0800694c"
        },
        "FUN_08006280": {
            "renaming": {
                "FUN_08006280": "set_flags_08006280",
                "param_1": "data",
                "param_2": "flag",
                "puVar1": "ptr",
                "DAT_080062f0": "global_data"
            },
            "code": "uint32_t set_flags_08006280(uint32_t **data, uint32_t flag)\n{\n    uint32_t *ptr;\n\n    switch (flag) {\n        case 0:\n            (*data)[3] |= 0x02;\n            break;\n        case 4:\n            (*data)[3] |= 0x04;\n            break;\n        case 8:\n            (*data)[3] |= 0x08;\n            break;\n        case 0xc:\n            (*data)[3] |= 0x10;\n            break;\n    }\n    set_data(*data, flag, 1);\n    ptr = *data;\n    if (ptr == DAT_080062f0) {\n        ptr[0x11] |= 0x8000;\n    }\n    **data |= 0x01;\n    return 0;\n}",
            "called": [
                "FUN_08006262"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006280",
            "calling": [
                "FUN_08007648"
            ],
            "imported": false,
            "current_name": "set_flags_08006280"
        },
        "FUN_08007258": {
            "renaming": {
                "FUN_08007258": "process_data_08007258",
                "param_1": "data",
                "param_2": "flag1",
                "param_3": "flag2",
                "uVar1": "shifted_data",
                "local_20": "bit_mask",
                "local_14": "constant1",
                "local_1c": "var1",
                "local_18": "var2"
            },
            "code": "void process_data_08007258(uint8_t data, uint32_t flag1, uint32_t flag2)\n{\n    uint32_t shifted_data = (data << 0x18) >> 0x1c;\n    uint16_t bit_mask = 1 << (data & 0xf) & 0xffff;\n    uint32_t constant1 = 3;\n    *(uint32_t *)(DAT_080072d0 + 0x18) |= 1;\n    if ((data - 0xd & 0xff) < 2) {\n        *(uint32_t *)(DAT_080072d4 + 4) &= 0xf8ffffff;\n        *(uint32_t *)(DAT_080072d4 + 4) |= 0x4000000;\n    }\n    if ((data == 0xf) || (data == 0x13) || (data == 0x14)) {\n        *(uint32_t *)(DAT_080072d4 + 4) &= 0xf8ffffff;\n        *(uint32_t *)(DAT_080072d4 + 4) |= 0x2000000;\n    }\n    uint32_t var1 = flag1;\n    uint32_t var2 = flag2;\n    FUN_080040e8(FUN_08006bb8(shifted_data), &bit_mask);\n    return;\n}",
            "called": [
                "FUN_080040e8",
                "FUN_08006bb8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007258",
            "calling": [
                "FUN_08008990"
            ],
            "imported": false,
            "current_name": "process_data_08007258"
        },
        "FUN_0800a0ec": {
            "renaming": {
                "FUN_0800a0ec": "process_result_0800a0ec",
                "param_1": "result_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "puVar1": "ptr",
                "iVar2": "result"
            },
            "code": "void process_result_0800a0ec(int *result_ptr, undefined4 param_2, undefined4 param_3, undefined4 param_4) {\n    undefined *ptr = PTR_DAT_0800a10c;\n    *(undefined4 *)PTR_DAT_0800a10c = 0;\n    int result = FUN_08008846(param_2, param_3, param_3, 0, param_4);\n    if (result == -1 && *(int *)ptr != 0) {\n        *result_ptr = *(int *)ptr;\n    }\n    return;\n}",
            "called": [
                "FUN_08008846"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a0ec",
            "calling": [
                "FUN_08009e64"
            ],
            "imported": false,
            "current_name": "process_result_0800a0ec"
        },
        "FUN_08008df8": {
            "renaming": {
                "FUN_08008df8": "initialize_params_08008df8",
                "param_1": "ptr_params",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "param_5": "param_5"
            },
            "code": "void initialize_params_08008df8(undefined4 *ptr_params, undefined param_2, undefined param_3, undefined param_4, undefined param_5)\n{\n  *ptr_params = PTR_PTR_LAB_08008dbe_1_08008e10;\n  *(undefined *)(ptr_params + 1) = param_2;\n  *(undefined *)((int)ptr_params + 5) = param_3;\n  *(undefined *)((int)ptr_params + 6) = param_4;\n  *(undefined *)((int)ptr_params + 7) = param_5;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008df8",
            "calling": [
                "FUN_08008e14"
            ],
            "imported": false,
            "current_name": "initialize_params_08008df8"
        },
        "FUN_08009f4a": {
            "renaming": {
                "FUN_08009f4a": "do_nothing_08009f4a"
            },
            "code": "\nvoid do_nothing_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009f4a",
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "imported": false,
            "current_name": "do_nothing_08009f4a"
        },
        "FUN_08006c7c": {
            "renaming": {
                "FUN_08006c7c": "check_status_08006c7c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "status"
            },
            "code": "uint8_t check_status_08006c7c(uint32_t input1, uint32_t *input2, uint32_t input3, uint32_t input4) {\n  int result = FUN_08007376(input1, PTR_DAT_08006ca4, input3, input4, input4);\n  uint8_t status = (uint8_t)((result << 12) >> 27);\n  if (status == 3) {\n    return 8;\n  }\n  if (status == 4) {\n    return 0xc;\n  }\n  if (status == 2) {\n    return 4;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08007376"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c7c",
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "imported": false,
            "current_name": "check_status_08006c7c"
        },
        "FUN_08006b5c": {
            "renaming": {
                "FUN_08006b5c": "set_bit_to_zero_08006b5c",
                "param_1": "bit_position",
                "param_2": "array",
                "uVar1": "index",
                "*(uint *)(param_2 + uVar1 * 4)": "array_element",
                "*(uint *)(param_2 + uVar1 * 4) & ~(1 << (param_1 & 0xf))": "*array_element & ~bit_mask",
                "uint uVar1;": "uint index;",
                "uint uVar1;\\n  uVar1 = (param_1 << 0x18) >> 0x1c;": "uint index = (bit_position << 0x18) >> 0x1c;",
                "uint bit_mask = 1 << (bit_position & 0xf);": "uint bit_mask = 1 << (bit_position & 0xf);",
                "*(uint *)(param_2 + uVar1 * 4) & ~(1 << (param_1 & 0xf));": "*array_element & ~bit_mask;",
                "return;": "return;"
            },
            "code": "void set_bit_to_zero_08006b5c(uint bit_position, int* array){\n  uint index = (bit_position << 0x18) >> 0x1c;\n  uint* array_element = (uint*)(array + index * 4);\n  uint bit_mask = 1 << (bit_position & 0xf);\n  *array_element = *array_element & ~bit_mask;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b5c",
            "calling": [
                "FUN_08008990"
            ],
            "imported": false,
            "current_name": "set_bit_to_zero_08006b5c"
        },
        "FUN_08007376": {
            "renaming": {
                "FUN_08007376": "get_result_08007376",
                "param_1": "input_value",
                "uVar1": "result",
                "FUN_0800735a": "calculate_result"
            },
            "code": "int get_result_08007376(int input_value) {\n  int result;\n  if (input_value == -1) {\n    result = -1;\n  } else {\n    result = calculate_result();\n  }\n  return result;\n}",
            "called": [
                "FUN_0800735a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007376",
            "calling": [
                "FUN_08006e68",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006c7c",
                "FUN_08006c60"
            ],
            "imported": false,
            "current_name": "get_result_08007376"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "send_interrupt_signal_08000188"
            },
            "code": "void send_interrupt_signal_08000188(void)\n{\n  software_interrupt(0x3f);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [
                "FUN_0800018c"
            ],
            "imported": false,
            "current_name": "send_interrupt_signal_08000188"
        },
        "FUN_08004f3c": {
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "param_1": "data",
                "iVar1": "index",
                "puVar2": "current_data_ptr",
                "puVar3": "previous_data_ptr"
            },
            "code": "void process_data_08004f3c(uint **data)\n{\n    int index;\n    uint *current_data_ptr;\n    uint *previous_data_ptr;\n\n    if (*(byte *)((int)data + 0x3d) - 0x29 < 2)\n    {\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x28;\n    }\n    else\n    {\n        if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0))\n        {\n            *(undefined *)((int)data + 0x3d) = 0x20;\n        }\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3e) = 0;\n    }\n    **data = **data & 0xfffff7ff;\n    previous_data_ptr = *data;\n    if ((previous_data_ptr[1] & 0x800) == 0)\n    {\n        if (*(char *)((int)data + 0x3d) == '`')\n        {\n            *(undefined *)((int)data + 0x3d) = 0x20;\n            data[0x10] = (uint *)0x0;\n            if ((previous_data_ptr[5] & 0x40) != 0)\n            {\n                current_data_ptr = data[9];\n                data[9] = (uint *)((int)current_data_ptr + 1);\n                *(char *)current_data_ptr = (char)previous_data_ptr[4];\n            }\n            **data = **data & 0xfffffffe;\n            do_nothing(data);\n        }\n        else\n        {\n            if ((previous_data_ptr[5] & 0x40) != 0)\n            {\n                current_data_ptr = data[9];\n                data[9] = (uint *)((int)current_data_ptr + 1);\n                *(char *)current_data_ptr = (char)previous_data_ptr[4];\n            }\n            process_data_08004f3c_part_2(data);\n        }\n    }\n    else\n    {\n        previous_data_ptr[1] = previous_data_ptr[1] & 0xfffff7ff;\n        if (*(char *)((int)data[0xd] + 0x21) == '\\x01')\n        {\n            data[0xe][0xd] = (uint)PTR_LAB_080053cc_1_0800507c;\n            index = do_something(data[0xe]);\n            if (index != 0)\n            {\n                if (((*data)[5] & 0x40) != 0)\n                {\n                    current_data_ptr = data[9];\n                    data[9] = (uint *)((int)current_data_ptr + 1);\n                    *(char *)current_data_ptr = (char)(*data)[4];\n                }\n                **data = **data & 0xfffffffe;\n                *(undefined *)((int)data + 0x3d) = 0x20;\n                (*(code *)data[0xe][0xd])();\n            }\n        }\n        else\n        {\n            data[0xd][0xd] = (uint)PTR_LAB_080053cc_1_0800507c;\n            index = do_something(data[0xd]);\n            if (index != 0)\n            {\n                **data = **data & 0xfffffffe;\n                *(undefined *)((int)data + 0x3d) = 0x20;\n                (*(code *)data[0xd][0xd])();\n            }\n        }\n    }\n    if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0))\n    {\n        data[0xb] = DAT_08005080;\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        *(undefined *)((int)data + 0x3e) = 0;\n        process_data_08004f3c_part_3(data);\n    }\n    return;\n}",
            "called": [
                "FUN_08004050",
                "FUN_08007ff0",
                "FUN_08004f3a",
                "FUN_08008020"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f3c",
            "calling": [
                "FUN_08005084",
                "FUN_080052f0"
            ],
            "imported": false,
            "current_name": "process_data_08004f3c"
        },
        "FUN_080033cc": {
            "renaming": {
                "FUN_080033cc": "decode_string_080033cc",
                "param_1": "str_ptr",
                "param_2": "ptr_2",
                "param_3": "ptr_3",
                "param_4": "ptr_4",
                "pcVar3": "str_ptr_1",
                "cVar1": "first_char",
                "iVar2": "decoded_length"
            },
            "code": "void decode_string_080033cc(int str_ptr, int ptr_2, int ptr_3, int ptr_4) {\n    char first_char = *(char *)(*(int *)(str_ptr + 4));\n    if (first_char == 'q') {\n        if (*(int *)(str_ptr + 0x68) != 0) {\n            int decoded_length = decode_substring(str_ptr, *(int *)(str_ptr + 0x18) - 1, (char *)(*(int *)(str_ptr + 4)) + 1, (char *)(*(int *)(str_ptr + 4)), ptr_4);\n            increase_memory_allocation(str_ptr, 0, decoded_length + 1);\n            (**(code **)(str_ptr + 0x68))(*(undefined4 *)(str_ptr + 0x40), *(int *)(str_ptr + 4) + 1);\n            return;\n        }\n    }\n    else if (first_char == 'y') {\n        if (*(code **)(str_ptr + 0x70) != (code *)0x0) {\n            if (*(uint *)(str_ptr + 0x18) < 3) {\n                (**(code **)(str_ptr + 0x70))(*(undefined4 *)(str_ptr + 0x34), 0, 0);\n                return;\n            }\n            int decoded_length = decode_substring(str_ptr, *(uint *)(str_ptr + 0x18) - 3, (char *)(*(int *)(str_ptr + 4)) + 3, (char *)(*(int *)(str_ptr + 4)), ptr_4);\n            increase_memory_allocation(str_ptr, 0, decoded_length + 3);\n            int str_ptr_1 = *(int *)(str_ptr + 4);\n            (**(code **)(str_ptr + 0x70))(*(undefined4 *)(str_ptr + 0x34), *(undefined *)(str_ptr_1 + 1), *(undefined *)(str_ptr_1 + 2), str_ptr_1 + 3);\n            return;\n        }\n    }\n    else if (*(code **)(str_ptr + 0x6c) != (code *)0x0) {\n        (**(code **)(str_ptr + 0x6c))(*(undefined4 *)(str_ptr + 0x44), first_char, *(int *)(str_ptr + 0x18) - 1, (char *)(*(int *)(str_ptr + 4)) + 1);\n    }\n    return;\n}",
            "called": [
                "FUN_080033a8",
                "FUN_08003376"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080033cc",
            "calling": [
                "FUN_08003474"
            ],
            "imported": false,
            "current_name": "decode_string_080033cc"
        },
        "FUN_08003de4": {
            "renaming": {
                "FUN_08003de4": "check_status_08003de4",
                "param_1": "status",
                "iVar1": "result",
                "FUN_08003b8c": "check_connection"
            },
            "code": "int check_status_08003de4(int status)\n{\n    int result;\n\n    if (*(char *)(status + 0x24) == '\\x01') {\n        return 2;\n    }\n    *(undefined *)(status + 0x24) = 1;\n    result = check_connection();\n    if (result == 0) {\n        *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n    }\n    *(undefined *)(status + 0x24) = 0;\n    return result;\n}",
            "called": [
                "FUN_08003b8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003de4",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "check_status_08003de4"
        },
        "FUN_08004f3a": {
            "renaming": {
                "FUN_08004f3a": "do_nothing_08004f3a"
            },
            "code": "\nvoid do_nothing_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004f3a",
            "calling": [
                "FUN_08004f3c"
            ],
            "imported": false,
            "current_name": "do_nothing_08004f3a"
        },
        "FUN_08000500": {
            "renaming": {
                "FUN_08000500": "update_servo_08000500",
                "param_1": "servo_index",
                "param_2": "servo_value",
                "param_3": "max_servos_attached",
                "param_4": "unused",
                "bVar1": "current_servo_count",
                "PTR_DAT_0800056c": "servo_count_ptr",
                "PTR_DAT_08000584": "error_message_ptr",
                "PTR_s_Max_servos_attached_08000580": "max_servos_attached_string_ptr",
                "bVar2": "last_detached_servo_index",
                "PTR_DAT_08000570": "last_detached_servo_ptr",
                "PTR_DAT_08000578": "servo_positions",
                "PTR_DAT_08000574": "last_detached_servo_positions",
                "FUN_08002f14": "print_error_message",
                "FUN_080025ac": "set_servo_position",
                "FUN_08002634": "set_servo_position_no_value"
            },
            "code": "void update_servo_08000500(int servo_index, int servo_value, int max_servos_attached, undefined4 unused) {\n  byte current_servo_count = *PTR_DAT_0800056c;\n  if (current_servo_count > 11) {\n    print_error_message(max_servos_attached);\n    return;\n  }\n  byte last_detached_servo_index = *PTR_DAT_08000570;\n  if (last_detached_servo_index == 0) {\n    PTR_DAT_08000578[servo_index] = current_servo_count;\n    *PTR_DAT_0800056c = current_servo_count + 1;\n  }\n  else {\n    PTR_DAT_08000578[servo_index] = PTR_DAT_08000574[last_detached_servo_index - 1];\n    *PTR_DAT_08000570 = last_detached_servo_index - 1;\n  }\n  if ((servo_value > 0) && (max_servos_attached > 0)) {\n    set_servo_position(PTR_DAT_08000578[servo_index], servo_index, servo_value, max_servos_attached);\n    return;\n  }\n  set_servo_position(PTR_DAT_08000578[servo_index], servo_index);\n  return;\n}",
            "called": [
                "FUN_080025ac",
                "FUN_08002f14",
                "FUN_08002634"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000500",
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "update_servo_08000500"
        },
        "FUN_08009d24": {
            "renaming": {
                "FUN_08009d24": "allocate_memory_block_08009d24",
                "param_1": "base_address",
                "param_2": "block_size",
                "puVar1": "memory_block_address",
                "iVar2": "offset"
            },
            "code": "undefined4 allocate_memory_block_08009d24(undefined4 base_address, int block_size)\n{\n  undefined4 *memory_block_address;\n  int offset = (block_size - 1) * 0x68;\n  memory_block_address = (undefined4 *)FUN_08009270(base_address, offset + 0x74);\n  if (memory_block_address != (undefined4 *)0x0) {\n    *memory_block_address = 0;\n    memory_block_address[1] = block_size;\n    memory_block_address[2] = memory_block_address + 3;\n    FUN_080091c6(memory_block_address + 3, 0, offset + 0x68);\n  }\n  return memory_block_address;\n}",
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009d24",
            "calling": [
                "FUN_08009db0"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08009d24"
        },
        "FUN_0800344a": {
            "renaming": {
                "FUN_0800344a": "clear_memory_0800344a",
                "param_1": "memory_address",
                "uVar1": "index"
            },
            "code": "void clear_memory_0800344a(int memory_address)\n{\n    uint index;\n    *(undefined4 *)(memory_address + 0x10) = 0;\n    *(undefined *)(memory_address + 0xc) = 0;\n    *(undefined *)(memory_address + 0xd) = 0;\n    for (index = 0; index < *(uint *)(memory_address + 8); index = index + 1) {\n        *(undefined *)(*(int *)(memory_address + 4) + index) = 0;\n    }\n    *(undefined *)(memory_address + 0x14) = 0;\n    *(undefined4 *)(memory_address + 0x18) = 0;\n    if (*(code **)(memory_address + 0x78) != (code *)0x0) {\n        (**(code **)(memory_address + 0x78))(*(undefined4 *)(memory_address + 0x48));\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800344a",
            "calling": [
                "FUN_08003474"
            ],
            "imported": false,
            "current_name": "clear_memory_0800344a"
        },
        "FUN_080071e4": {
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "input_data",
                "local_50": "data_array",
                "FUN_08007320": "get_data",
                "PTR_DAT_08007238": "PTR_DATA",
                "FUN_08006c7c": "get_data_type",
                "FUN_08007376": "get_data",
                "FUN_080063c0": "process_data_type_1",
                "FUN_08006460": "process_data_type_2",
                "FUN_08005e2e": "finalize_data_processing"
            },
            "code": "void process_data_080071e4(uint32_t input_data){\n  int data_array[17];\n  data_array[0] = get_data(input_data, PTR_DAT_08007238);\n  if ((data_array[0] != 0) && ((((input_data = get_data_type(input_data)) == 0) || (input_data == 4)) || ((input_data == 8) || ((input_data == 12) || (input_data == 24))))){\n    uint32_t flag = get_data(input_data, PTR_DAT_08007238);\n    if ((flag & 0x100000) == 0){\n      process_data_080071e4_type_1(data_array, input_data);\n    }\n    else{\n      process_data_080071e4_type_2(data_array, input_data);\n    }\n    finalize_data_processing(data_array);\n  }\n  return;\n}\n",
            "called": [
                "FUN_08007376",
                "FUN_08007320",
                "FUN_08005e2e",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_080063c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080071e4",
            "calling": [
                "FUN_08008990"
            ],
            "imported": false,
            "current_name": "process_data_080071e4"
        },
        "FUN_08008e72": {
            "renaming": {
                "FUN_08008e72": "execute_function_pointer_08008e72",
                "param_1": "function_pointer"
            },
            "code": "void execute_function_pointer_08008e72(void *function_pointer)\n{\n  (*(void (*)())function_pointer)();\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e72",
            "calling": [],
            "imported": false,
            "current_name": "execute_function_pointer_08008e72"
        },
        "FUN_080022f8": {
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "PTR_DAT_080023e0": "PTR_DATA",
                "FUN_08002ec4": "get_data",
                "FUN_08002ed2": "process",
                "FUN_08008abc": "calculate",
                "PTR_DAT_080023e4": "PTR_RESULT_1",
                "PTR_DAT_080023ec": "PTR_RESULT_2",
                "PTR_DAT_080023e8": "PTR_RESULT_3",
                "PTR_DAT_080023f4": "PTR_DATA_1",
                "FUN_080036ac": "process_value",
                "FUN_08002fa0": "check_value",
                "PTR_DAT_080023f0": "PTR_DATA_2",
                "FUN_08008880": "get_new_value",
                "FUN_08002ef2": "set_value",
                "PTR_DAT_080023f8": "PTR_DATA_3",
                "PTR_DAT_080023fc": "PTR_DATA_4"
            },
            "code": "void process_data_080022f8(void)\n{\n  bool flag;\n  int result;\n  undefined4 value;\n  uint i, j;\n  initialize();\n  while (result = get_data(PTR_DAT_080023e0), result != 0) {\n    process(PTR_DAT_080023e0);\n  }\n  result = calculate();\n  *(int *)PTR_DAT_080023e4 = result;\n  if (*(uint *)PTR_DAT_080023ec < (uint)(result - *(int *)PTR_DAT_080023e8)) {\n    *(uint *)PTR_DAT_080023e8 = *(int *)PTR_DAT_080023e8 + *(uint *)PTR_DAT_080023ec;\n    for (i = 0; i < 0x3c; i = (i + 1) & 0xff) {\n      j = i - 0x2e & 0xff;\n      if (j < 0xe) {\n        if (i < 0x3c) {\n          result = (int)(char)PTR_DAT_080023f4[i];\n        }\n        else {\n          result = -1;\n        }\n        result = process_value(result);\n        if (result == 0) {\n          flag = false;\n        }\n        else {\n          if (i < 0x3c) {\n            result = (int)(char)PTR_DAT_080023f4[i];\n          }\n          else {\n            result = -1;\n          }\n          result = process_value(result);\n          if (result == 1) {\n            flag = false;\n          }\n          else {\n            result = check_value(PTR_DAT_080023e0, i);\n            if (result == 2) {\n              flag = true;\n            }\n            else {\n              flag = false;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if ((flag) && ((*(int *)PTR_DAT_080023f0 >> j & 1U) != 0)) {\n        value = get_new_value(j);\n        set_value(PTR_DAT_080023e0, j, value);\n      }\n    }\n    if (-1 < (char)*PTR_DAT_080023f8) {\n      for (i = 0; (int)i < (char)*PTR_DAT_080023f8 + 1; i = (i + 1) & 0xff) {\n        result = i * 0xc;\n        process_data_080022f8(PTR_DAT_080023fc[result], *(undefined4 *)(PTR_DAT_080023fc + result + 4), PTR_DAT_080023fc[result + 8], PTR_DAT_080023fc[result + 9]);\n      }\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_080036ac",
                "FUN_08001c18",
                "FUN_08000ef8",
                "FUN_08002ef2",
                "FUN_08002ec4",
                "FUN_08002fa0",
                "FUN_08008880"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080022f8",
            "calling": [
                "FUN_08008f1c"
            ],
            "imported": false,
            "current_name": "process_data_080022f8"
        },
        "FUN_080072fa": {
            "renaming": {
                "FUN_080072fa": "execute_startup_procedures_080072fa",
                "FUN_08003724": "perform_memory_initialization",
                "FUN_080035b8": "perform_io_initialization"
            },
            "code": "void execute_startup_procedures_080072fa(void)\n{\n  perform_memory_initialization();\n  perform_io_initialization();\n  return;\n}",
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072fa",
            "calling": [
                "FUN_080036a2"
            ],
            "imported": false,
            "current_name": "execute_startup_procedures_080072fa"
        },
        "FUN_08005084": {
            "renaming": {
                "FUN_08005084": "process_input_08005084",
                "param_1": "input",
                "cVar1": "current_char",
                "puVar2": "input_ptr",
                "puVar3": "temp_ptr"
            },
            "code": "uint32_t process_input_08005084(uint32_t **input)\n{\n    char current_char = *(char *)((int)input + 0x3d);\n    (*input)[1] &= 0xfffff8ff;\n    **input |= 1;\n    **input &= 0xfffffbff;\n    uint32_t *input_ptr = *input;\n    if ((input_ptr[1] & 0x800) != 0)\n    {\n        if ((*(char *)((int)input + 0x3d) == '\"') || (*(char *)((int)input + 0x3d) == '*'))\n        {\n            *(int16_t *)((int)input + 0x2a) = (int16_t)*(uint32_t *)(*input[0xe] + 4);\n        }\n        else\n        {\n            *(int16_t *)((int)input + 0x2a) = (int16_t)*(uint32_t *)(*input[0xd] + 4);\n        }\n    }\n    if (*(int16_t *)((int)input + 0x2a) != 0)\n    {\n        if ((input_ptr[5] & 4) != 0)\n        {\n            uint32_t *temp_ptr = input[9];\n            input[9] = (uint32_t *)((int)temp_ptr + 1);\n            *(char *)temp_ptr = (char)input_ptr[4];\n            *(int16_t *)((int)input + 0x2a) = *(int16_t *)((int)input + 0x2a) - 1;\n        }\n        if (((*input)[5] & 0x40) != 0)\n        {\n            uint32_t *temp_ptr = input[9];\n            input[9] = (uint32_t *)((int)temp_ptr + 1);\n            *(char *)temp_ptr = (char)(*input)[4];\n            *(int16_t *)((int)input + 0x2a) = *(int16_t *)((int)input + 0x2a) - 1;\n        }\n        input[0x10] = (uint32_t *)((uint32_t)input[0x10] | 4);\n    }\n    if (input[0x10] == (uint32_t *)0x0)\n    {\n        if (((current_char == '(') || (current_char == '*')) || (current_char == ')'))\n        {\n            input[0xb] = PTR_DAT_08005184;\n            input[0xc] = (uint32_t *)0x0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            *(undefined *)((int)input + 0x3e) = 0;\n            do_something_08007ff0();\n        }\n        else if ((input[0xc] == (uint32_t *)0x22) || (current_char == '\"'))\n        {\n            input[0xc] = (uint32_t *)0x0;\n            *(undefined *)((int)input + 0x3d) = 0x20;\n            *(undefined *)((int)input + 0x3e) = 0;\n            do_nothing_08004a74();\n        }\n    }\n    else\n    {\n        do_something_else_08004f3c();\n    }\n    return 0;\n}",
            "called": [
                "FUN_08007ff0",
                "FUN_08004a74",
                "FUN_08004f3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005084",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_input_08005084"
        },
        "FUN_0800291c": {
            "renaming": {
                "FUN_0800291c": "initialize_params_0800291c",
                "param_1": "params",
                "*param_1": "func_ptr",
                "puVar1": "ptr_dat_08002944",
                "PTR_DAT_08002944": "PTR_DAT_08002944"
            },
            "code": "void initialize_params_0800291c(int *params)\n{\n  params[0] = func_ptr;\n  params[1] = 0;\n  params[2] = 1000;\n  params[27] = *(PTR_DAT_08002944 + 0xE);\n  *(char *)((char *)params + 0x6D) = *(PTR_DAT_08002944 + 0xF);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800291c",
            "calling": [
                "FUN_08002948"
            ],
            "imported": false,
            "current_name": "initialize_params_0800291c"
        },
        "FUN_08002ac0": {
            "renaming": {
                "FUN_08002ac0": "process_data_08002ac0",
                "param_1": "data_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_08002a58": "call_data_processing_function"
            },
            "code": "void process_data_08002ac0(undefined4 data_ptr, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  call_data_processing_function(data_ptr, 1, param_3, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_08002a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ac0",
            "calling": [
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "process_data_08002ac0"
        },
        "FUN_08003346": {
            "renaming": {
                "FUN_08003346": "update_parameters_08003346",
                "param_1": "base_address",
                "param_2": "parameter_2",
                "param_3": "new_value_1",
                "param_4": "new_value_2"
            },
            "code": "void update_parameters_08003346(int base_address, int parameter_2, int new_value_1, int new_value_2)\n{\n  if (parameter_2 == 0x79) {\n    *(int *)(base_address + 0x70) = new_value_1;\n    *(int *)(base_address + 0x34) = new_value_2;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003346",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "update_parameters_08003346"
        },
        "FUN_080032bc": {
            "renaming": {
                "FUN_080032bc": "initialize_data_080032bc",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "uVar1": "leading_zeroes"
            },
            "code": "void initialize_data_080032bc(void *data, int param1, int param2)\n{\n    *(int *)(data + 4) = param1;\n    *(int *)(data + 8) = param2;\n    data[12] = 0;\n    data[13] = 0;\n    *(int *)(data + 16) = 0;\n    data[20] = 0;\n    *(int *)(data + 24) = 0;\n    *(int *)(data + 28) = 0;\n    *(int *)(data + 32) = 0;\n    *(int *)(data + 36) = 0;\n    *(int *)(data + 40) = 0;\n    *(int *)(data + 44) = 0;\n    *(int *)(data + 48) = 0;\n    *(int *)(data + 52) = 0;\n    *(int *)(data + 56) = 0;\n    *(int *)(data + 60) = 0;\n    *(int *)(data + 64) = 0;\n    *(int *)(data + 68) = 0;\n    *(int *)(data + 72) = 0;\n    *(int *)(data + 76) = 0;\n    *(int *)(data + 80) = 0;\n    *(int *)(data + 84) = 0;\n    *(int *)(data + 88) = 0;\n    *(int *)(data + 92) = 0;\n    *(int *)(data + 96) = 0;\n    *(int *)(data + 100) = 0;\n    *(int *)(data + 104) = 0;\n    *(int *)(data + 108) = 0;\n    *(int *)(data + 112) = 0;\n    *(int *)(data + 116) = 0;\n    *(int *)(data + 120) = 0;\n    *(int *)(data + 124) = 0;\n    int leading_zeroes = count_leading_zeroes(param1);\n    data[0] = (char)(leading_zeroes >> 5);\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080032bc",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "initialize_data_080032bc"
        },
        "FUN_08003106": {
            "renaming": {
                "FUN_08003106": "execute_function_with_args_08003106",
                "param_1": "function_ptr",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "puVar1": "function"
            },
            "code": "void execute_function_with_args_08003106(uint32_t *function_ptr, uint32_t arg1, uint32_t arg2, uint32_t arg3)\n{\n  uint32_t *function = (uint32_t *)*function_ptr;\n  if (function != NULL) {\n    (**(void (**)(uint32_t *, uint32_t))(function))(function, 0xf0);\n    (***(void (***)(uint32_t *))(uint32_t *)*function_ptr)((uint32_t *)*function_ptr, 0x6f);\n    (***(void (***)(uint32_t *))(uint32_t *)*function_ptr)((uint32_t *)*function_ptr, arg1);\n    execute_function_with_args_08003106(function_ptr, arg2, arg3, arg2);\n    (***(void (***)(uint32_t *))(uint32_t *)*function_ptr)((uint32_t *)*function_ptr, 0xf7);\n  }\n  return;\n}",
            "called": [
                "FUN_0800307a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003106",
            "calling": [
                "FUN_08003158"
            ],
            "imported": false,
            "current_name": "execute_function_with_args_08003106"
        },
        "FUN_080077b0": {
            "renaming": {
                "FUN_080077b0": "FUNC_080077b0"
            },
            "code": "\nvoid FUNC_080077b0(int *param_1,int param_2,int param_3,int param_4,undefined param_5)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  int *piVar9;\n  uint local_38;\n  uint local_34;\n  uint local_30;\n  undefined4 local_2c;\n  \n  if (param_1 != (int *)0x0) {\n    piVar9 = param_1 + 1;\n    iVar2 = FUN_08007320((int)*(char *)(param_1 + 0x16),PTR_DAT_08007a74);\n    iVar3 = FUN_08007320((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08007a78);\n    if ((iVar2 == 0) || (iVar3 == 0)) {\n      FUN_080098d8(PTR_s_ERROR__at_least_one_I2C_pin_has_n_08007a88);\n    }\n    else {\n      iVar3 = FUN_080073ae(iVar2,iVar3);\n      *param_1 = iVar3;\n      iVar2 = DAT_08007a7c;\n      if (iVar3 == 0) {\n        FUN_080098d8(PTR_s_ERROR__I2C_pins_mismatch_08007a8c);\n      }\n      else {\n        if (iVar3 == DAT_08007a7c) {\n          *(uint *)(DAT_08007a7c + 0x1bc1c) = *(uint *)(DAT_08007a7c + 0x1bc1c) | 0x200000;\n          *(uint *)(iVar2 + 0x1bc10) = *(uint *)(iVar2 + 0x1bc10) | 0x200000;\n          *(uint *)(iVar2 + 0x1bc10) = *(uint *)(iVar2 + 0x1bc10) & 0xffdfffff;\n          *(undefined *)((int)param_1 + 0x5a) = 0x1f;\n          *(undefined *)((int)param_1 + 0x5b) = 0x20;\n          *(int **)PTR_DAT_08007a90 = piVar9;\n        }\n        iVar2 = DAT_08007a80;\n        if (*param_1 == DAT_08007a80) {\n          *(uint *)(DAT_08007a80 + 0x1b81c) = *(uint *)(DAT_08007a80 + 0x1b81c) | 0x400000;\n          *(uint *)(iVar2 + 0x1b810) = *(uint *)(iVar2 + 0x1b810) | 0x400000;\n          *(uint *)(iVar2 + 0x1b810) = *(uint *)(iVar2 + 0x1b810) & 0xffbfffff;\n          *(undefined *)((int)param_1 + 0x5a) = 0x21;\n          *(undefined *)((int)param_1 + 0x5b) = 0x22;\n          *(int **)(PTR_DAT_08007a90 + 4) = piVar9;\n        }\n        uVar4 = FUN_08006bb8((uint)((int)*(char *)((int)param_1 + 0x59) << 0x18) >> 0x1c);\n        puVar1 = PTR_DAT_08007a78;\n        local_38 = 1 << ((int)*(char *)((int)param_1 + 0x59) & 0xfU) & 0xffff;\n        uVar5 = FUN_08007376((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08007a78);\n        uVar6 = FUN_08007376((int)*(char *)((int)param_1 + 0x59),puVar1);\n        local_34 = (uVar5 >> 3 & 1) << 4 | uVar6 & 7;\n        local_2c = 3;\n        iVar2 = FUN_08007376((int)*(char *)((int)param_1 + 0x59),puVar1);\n        local_30 = (uint)(iVar2 << 0x1a) >> 0x1e;\n        iVar3 = FUN_08007376((int)*(char *)((int)param_1 + 0x59),puVar1);\n        iVar2 = DAT_08007a84;\n        uVar7 = *(uint *)(DAT_08007a84 + 0x18) | 1;\n        *(uint *)(DAT_08007a84 + 0x18) = uVar7;\n        uVar6 = DAT_08007d4c;\n        uVar5 = DAT_08007a94;\n        uVar8 = *(uint *)(iVar2 + 0x18) & 1;\n        switch((uint)(iVar3 << 0x11) >> 0x19) {\n        case 1:\n          uVar8 = *(uint *)(DAT_08007a94 + 4) | 0x7000001;\n          *(uint *)(DAT_08007a94 + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 2:\n          uVar8 = *(uint *)(DAT_08007a94 + 4) & 0xfffffffe | 0x7000000;\n          *(uint *)(DAT_08007a94 + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 3:\n          uVar8 = *(uint *)(DAT_08007a94 + 4) | 0x7000002;\n          *(uint *)(DAT_08007a94 + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 4:\n          uVar8 = *(uint *)(DAT_08007a94 + 4) & 0xfffffffd | 0x7000000;\n          *(uint *)(DAT_08007a94 + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 5:\n          uVar8 = *(uint *)(DAT_08007a94 + 4) | 0x7000004;\n          *(uint *)(DAT_08007a94 + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 6:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffffb | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 7:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000008;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 8:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffff7 | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 9:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000030;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 10:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffffcf | 0x7000010;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xb:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffffcf | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xc:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x70000c0;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xd:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffff3f | 0x7000040;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xe:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffff3f | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xf:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000300;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x10:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffcff | 0x7000200;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x11:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffcff | 0x7000100;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x12:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffcff | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x13:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000c00;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x14:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffff3ff | 0x7000800;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x15:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffff3ff | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x16:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7001000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x17:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffefff | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x1b:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7008000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x1c:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffff7fff | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x21:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xf8ffffff;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x22:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xf8ffffff | 0x1000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x23:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xf8ffffff | 0x2000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x24:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xf8ffffff | 0x4000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar6;\n        }\n        FUN_080040e8(uVar4,&local_38,uVar7,uVar8);\n        uVar4 = FUN_08006bb8((uint)((int)*(char *)(param_1 + 0x16) << 0x18) >> 0x1c);\n        puVar1 = PTR_DAT_08007a74;\n        local_38 = 1 << ((int)*(char *)(param_1 + 0x16) & 0xfU) & 0xffff;\n        uVar5 = FUN_08007376((int)*(char *)(param_1 + 0x16),PTR_DAT_08007a74);\n        uVar6 = FUN_08007376((int)*(char *)(param_1 + 0x16),puVar1);\n        local_34 = (uVar5 >> 3 & 1) << 4 | uVar6 & 7;\n        local_2c = 3;\n        iVar2 = FUN_08007376((int)*(char *)(param_1 + 0x16),puVar1);\n        local_30 = (uint)(iVar2 << 0x1a) >> 0x1e;\n        iVar3 = FUN_08007376((int)*(char *)(param_1 + 0x16),puVar1);\n        iVar2 = DAT_08007a84;\n        uVar7 = *(uint *)(DAT_08007a84 + 0x18) | 1;\n        *(uint *)(DAT_08007a84 + 0x18) = uVar7;\n        uVar6 = DAT_08007e70;\n        uVar5 = DAT_08007d4c;\n        uVar8 = *(uint *)(iVar2 + 0x18) & 1;\n        switch((uint)(iVar3 << 0x11) >> 0x19) {\n        case 1:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000001;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 2:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffffe | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 3:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000002;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 4:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffffd | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 5:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000004;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 6:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffffb | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 7:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000008;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 8:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xfffffff7 | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 9:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x7000030;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 10:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffffcf | 0x7000010;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 0xb:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) & 0xffffffcf | 0x7000000;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 0xc:\n          uVar8 = *(uint *)(DAT_08007d4c + 4) | 0x70000c0;\n          *(uint *)(DAT_08007d4c + 4) = uVar8;\n          uVar7 = uVar5;\n          break;\n        case 0xd:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xffffff3f | 0x7000040;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xe:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xffffff3f | 0x7000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0xf:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) | 0x7000300;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x10:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xfffffcff | 0x7000200;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x11:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xfffffcff | 0x7000100;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x12:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xfffffcff | 0x7000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x13:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) | 0x7000c00;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x14:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xfffff3ff | 0x7000800;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x15:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xfffff3ff | 0x7000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x16:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) | 0x7001000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x17:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xffffefff | 0x7000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x1b:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) | 0x7008000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x1c:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xffff7fff | 0x7000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x21:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xf8ffffff;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x22:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xf8ffffff | 0x1000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x23:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xf8ffffff | 0x2000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n          break;\n        case 0x24:\n          uVar8 = *(uint *)(DAT_08007e70 + 4) & 0xf8ffffff | 0x4000000;\n          *(uint *)(DAT_08007e70 + 4) = uVar8;\n          uVar7 = uVar6;\n        }\n        FUN_080040e8(uVar4,&local_38,uVar7,uVar8);\n        param_1[1] = *param_1;\n        param_1[2] = param_2;\n        param_1[3] = 0;\n        param_1[4] = param_4;\n        param_1[7] = 0xff;\n        param_1[5] = param_3;\n        param_1[6] = 0;\n        param_1[8] = 0;\n        param_1[9] = 0;\n        *(undefined *)((int)param_1 + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)param_1 + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)param_1 + 0x5a));\n        FUN_08003f30((int)*(char *)((int)param_1 + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)param_1 + 0x5b));\n        FUN_080045c0(piVar9);\n        *(undefined *)((int)param_1 + 0x5d) = param_5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08007376",
                "FUN_080098d8",
                "FUN_08007320",
                "FUN_080073ae",
                "FUN_080045c0",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080077b0",
            "calling": [
                "FUN_08002968"
            ],
            "imported": false,
            "current_name": "FUNC_080077b0"
        },
        "FUN_08007708": {
            "renaming": {
                "FUN_08007708": "execute_fun_08007708",
                "FUN_08007438": "call_fun"
            },
            "code": "void execute_fun_08007708() {\n  call_fun();\n  return;\n}",
            "called": [
                "FUN_08007438"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007708",
            "calling": [
                "FUN_08006060"
            ],
            "imported": false,
            "current_name": "execute_fun_08007708"
        },
        "FUN_0800018c": {
            "renaming": {
                "FUN_0800018c": "check_if_ptr_dat_is_zero_0800018c",
                "param_1": "input_param",
                "param_2": "param_1",
                "param_3": "param_2",
                "param_4": "param_3",
                "uVar1": "result"
            },
            "code": "int check_if_ptr_dat_is_zero_0800018c(int input_param, int param_1, int param_2, int param_3)\n{\n    int result;\n    if (*(int *)PTR_DAT_080001a4 != 0)\n    {\n        result = 0;\n    }\n    else\n    {\n        result = FUN_08000188(1, input_param, 0, 0, param_3);\n    }\n    return result;\n}",
            "called": [
                "FUN_08000188"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800018c",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "check_if_ptr_dat_is_zero_0800018c"
        },
        "FUN_08003f94": {
            "renaming": {
                "FUN_08003f94": "set_bit_at_index_08003f94",
                "param_1": "index",
                "DAT_08003fac": "data_array"
            },
            "code": "void set_bit_at_index_08003f94(uint index) {\n  if (index >= 0) {\n    *(int *)(DAT_08003fac + (index >> 5) * 4) = 1 << (index & 0x1f);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f94",
            "calling": [
                "FUN_080077b0",
                "FUN_08007648",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_08003f94"
        },
        "FUN_08008c44": {
            "renaming": {
                "FUN_08008c44": "decode_flags_08008c44",
                "param_1": "flags",
                "param_2": "arg2",
                "param_3": "arg3",
                "bVar1": "last_3_bits",
                "iVar2": "num_bits_set",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_08008d14": "PTR_PTR_DAT_08008d14"
            },
            "code": "void decode_flags_08008c44(int flags, int arg2, byte arg3)\n{\n  int num_bits_set = 0;\n  int jump_table_index;\n  \n  set_value_at_offset(flags, 0x11c, arg2);\n  set_value_at_offset(flags, 0x140, arg3);\n  \n  int last_3_bits = arg3 & 7;\n  if (last_3_bits == 4) {\n    num_bits_set = 7;\n  }\n  else if (last_3_bits == 6) {\n    num_bits_set = 8;\n  }\n  else if (last_3_bits == 2) {\n    num_bits_set = 6;\n  }\n  \n  if ((arg3 & 0x30) == 0x30) {\n    set_value_at_offset(flags, 0x128, 0x600);\n    num_bits_set++;\n  }\n  else if ((arg3 & 0x20) == 0) {\n    set_value_at_offset(flags, 0x128, 0);\n  }\n  else {\n    set_value_at_offset(flags, 0x128, 0x400);\n    num_bits_set++;\n  }\n  \n  if ((arg3 & 8) == 0) {\n    set_value_at_offset(flags, 0x124, 0);\n  }\n  else {\n    set_value_at_offset(flags, 0x124, 0x2000);\n  }\n  \n  if (num_bits_set == 8) {\n    set_value_at_offset(flags, 0x120, 0);\n  }\n  else if (num_bits_set == 9) {\n    set_value_at_offset(flags, 0x120, 0x1000);\n  }\n  \n  if (num_bits_set != 0) {\n    initialize_memory_at_offset(flags, 0xd4);\n    FUN_0800863c(flags + 0xd4, PTR_uRam08008cf0);\n    return;\n  }\n  \n  jump_table_index = FUN_080090cc(PTR_uRam08008cfc, 299, PTR_uRam08008cf8, PTR_uRam08008cf4);\n  if (jump_table_index < 0x3c) {\n    uRam0000012d = PTR_DAT_08008d14[jump_table_index];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n  \n  code *jump_table = (code *)0x8008cee;\n  (*jump_table)(0, jump_table_index, &stack0x00000148);\n  return;\n}\n\n",
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c44",
            "calling": [
                "FUN_08003048"
            ],
            "imported": false,
            "current_name": "decode_flags_08008c44"
        },
        "FUN_08002a26": {
            "renaming": {
                "FUN_08002a26": "process_data_08002a26",
                "param_1": "data_start",
                "param_2": "data_end",
                "param_3": "metadata",
                "param_4": "result_buffer",
                "FUN_08002a1c": "call_subroutine"
            },
            "code": "void process_data_08002a26(undefined4 data_start, undefined4 data_end, undefined4 metadata, undefined4 result_buffer) {\n  call_subroutine(data_start, 0x33, metadata, result_buffer, result_buffer);\n  return;\n}",
            "called": [
                "FUN_08002a1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a26",
            "calling": [
                "FUN_08000a64"
            ],
            "imported": false,
            "current_name": "process_data_08002a26"
        },
        "FUN_0800430c": {
            "renaming": {
                "FUN_0800430c": "set_flag_0800430c",
                "param_1": "flag_ptr",
                "*(char *)((int)param_1 + 0x3e)": "c1",
                "param_1[0x14]": "flag_ptr[0x14]",
                "*(uint *)(*param_1 + 0x10)": "*ptr",
                "param_1[0x11]": "flag",
                "*(char *)((int)param_1 + 0x3d)": "c2",
                "param_1[4]": "flag_ptr[4]",
                "(uint)(param_1[0x11] << 0x10) >> 0x17 & 6": "val",
                "undefined4": "uint32_t"
            },
            "code": "uint32_t set_flag_0800430c(uint32_t *flag_ptr) {\n    uint32_t flag = *flag_ptr;\n    uint32_t *ptr = (uint32_t *)flag_ptr;\n    char c1 = *(char *)(ptr + 0x3e);\n    char c2 = *(char *)(ptr + 0x3d);\n    uint32_t val = (flag >> 0x11) & 0x6;\n    if (c1 == '@') {\n        if (flag_ptr[0x14] == 0) {\n            *ptr = (flag & 0xfffffffe) | 0x10;\n        } else {\n            *ptr = (flag & 0xfffffffe) | 0x11;\n        }\n    } else if (flag_ptr[4] == 0x4000) {\n        if (c2 == '!') {\n            *ptr = (flag & 0xfffffffe) | 0x10;\n        } else {\n            *ptr = (flag & 0xfffffffe) | 0x11;\n        }\n    } else if (flag_ptr[0x14] == 0) {\n        *ptr = (val | 0xf0) << 0x10;\n    } else if (flag_ptr[0x14] == 1) {\n        *ptr = (val | 0xf1) << 0x10;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800430c",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "set_flag_0800430c"
        },
        "FUN_08006060": {
            "renaming": {
                "FUN_08006060": "check_and_initialize_user_data_08006060",
                "param_1": "user_data_ptr",
                "*(char *)((int)param_1 + 0x3d)": "user_data_ptr[0x3d]",
                "*(undefined *)(param_1 + 0xf)": "user_data_ptr[0xf]",
                "FUN_08007708": "initialize_user_data",
                "*(undefined *)((int)param_1 + 0x3d)": "user_data_ptr[0x3d]",
                "FUN_08005fe8": "process_user_data"
            },
            "code": "int check_and_initialize_user_data_08006060(int *user_data_ptr)\n{\n    if (user_data_ptr != NULL) {\n        if (user_data_ptr[0x3d] == 0) {\n            user_data_ptr[0xf] = 0;\n            initialize_user_data();\n        }\n        user_data_ptr[0x3d] = 2;\n        process_user_data(user_data_ptr[0], user_data_ptr + 1);\n        user_data_ptr[0x3d] = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006060",
            "calling": [
                "FUN_08007648"
            ],
            "imported": false,
            "current_name": "check_and_initialize_user_data_08006060"
        },
        "FUN_08003350": {
            "renaming": {
                "FUN_08003350": "update_values_08003350",
                "param_1": "obj_ptr",
                "param_2": "value",
                "param_3": "value1",
                "param_4": "value2"
            },
            "code": "void update_values_08003350(int obj_ptr, int value, undefined4 value1, undefined4 value2)\n{\n    if (value == 0xf9) {\n        *(undefined4 *)(obj_ptr + 0x74) = value1;\n        *(undefined4 *)(obj_ptr + 0x38) = value2;\n        return;\n    }\n    if (value != 0xff) {\n        return;\n    }\n    *(undefined4 *)(obj_ptr + 0x78) = value1;\n    *(undefined4 *)(obj_ptr + 0x48) = value2;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003350",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "update_values_08003350"
        },
        "FUN_08009698": {
            "renaming": {
                "FUN_08009698": "FUNC_08009698"
            },
            "code": "\nuint FUNC_08009698(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  int iVar4;\n  undefined *puVar5;\n  uint uVar6;\n  uint **ppuVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined *puVar10;\n  undefined *puVar11;\n  uint local_24 [2];\n  \n  bVar1 = *(byte *)(param_2 + 6);\n  puVar11 = (undefined *)((int)param_2 + 0x43);\n  if (bVar1 != 0x6e) {\n    if (bVar1 < 0x6f) {\n      if (bVar1 != 99) {\n        if (bVar1 < 100) {\n          if (bVar1 == 0) goto LAB_08009852;\n          if (bVar1 != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)param_2 + 0x45) = 0x58;\n          puVar5 = PTR_s_0123456789ABCDEF_080098d4;\nLAB_080097e2:\n          uVar6 = *param_2;\n          puVar3 = *param_5;\n          *param_5 = puVar3 + 1;\n          if (((uVar6 & 0x80) == 0) && ((int)(uVar6 << 0x19) < 0)) {\n            uVar8 = (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar8 = *puVar3;\n          }\n          if ((int)(uVar6 << 0x1f) < 0) {\n            *param_2 = uVar6 | 0x20;\n          }\n          if (uVar8 == 0) {\n            *param_2 = *param_2 & 0xffffffdf;\n          }\n          uVar6 = 0x10;\nLAB_08009778:\n          *(undefined *)((int)param_2 + 0x43) = 0;\n        }\n        else {\n          if ((bVar1 != 100) && (bVar1 != 0x69)) goto LAB_080096c8;\n          uVar8 = *param_2;\n          puVar3 = *param_5;\n          if ((uVar8 & 0x80) == 0) {\n            *param_5 = puVar3 + 1;\n            if ((uVar8 & 0x40) == 0) goto LAB_080096e8;\n            uVar8 = (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 = puVar3 + 1;\nLAB_080096e8:\n            uVar8 = *puVar3;\n          }\n          if ((int)uVar8 < 0) {\n            uVar8 = -uVar8;\n            *(undefined *)((int)param_2 + 0x43) = 0x2d;\n          }\n          uVar6 = 10;\n          puVar5 = PTR_s_0123456789ABCDEF_080098d4;\n        }\n        uVar9 = param_2[1];\n        param_2[2] = uVar9;\n        puVar10 = puVar11;\n        if ((int)uVar9 < 0) {\n          if (uVar8 != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(undefined *)((int)param_2 + 0x42) = *puVar5;\n          puVar10 = (undefined *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 = *param_2 & 0xfffffffb;\n          if (uVar8 == 0) {\n            if (uVar9 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              uVar9 = uVar8 / uVar6;\n              puVar10 = puVar10 + -1;\n              *puVar10 = puVar5[uVar8 - uVar6 * uVar9];\n              uVar8 = uVar9;\n            } while (uVar9 != 0);\n          }\n        }\n        if (((uVar6 == 8) && ((int)(*param_2 << 0x1f) < 0)) && ((int)param_2[1] <= (int)param_2[4]))\n        {\n          puVar10[-1] = 0x30;\n          puVar10 = puVar10 + -1;\n        }\n        param_2[4] = (int)puVar11 - (int)puVar10;\n        puVar11 = puVar10;\n        goto LAB_080097be;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) = (char)*puVar3;\nLAB_08009728:\n      puVar11 = (undefined *)((int)param_2 + 0x42);\n      uVar8 = 1;\n    }\n    else {\n      if (bVar1 != 0x73) {\n        if (bVar1 < 0x74) {\n          if (bVar1 == 0x6f) {\nLAB_0800974e:\n            uVar8 = *param_2;\n            puVar3 = *param_5;\n            if ((uVar8 & 0x80) == 0) {\n              *param_5 = puVar3 + 1;\n              if ((uVar8 & 0x40) == 0) goto LAB_0800975c;\n              uVar8 = (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 = puVar3 + 1;\nLAB_0800975c:\n              uVar8 = *puVar3;\n            }\n            puVar5 = PTR_s_0123456789ABCDEF_080098d4;\n            if (bVar1 == 0x6f) {\n              uVar6 = 8;\n            }\n            else {\n              uVar6 = 10;\n            }\n            goto LAB_08009778;\n          }\n          if (bVar1 == 0x70) {\n            *param_2 = *param_2 | 0x20;\nLAB_0800970e:\n            puVar5 = PTR_s_0123456789abcdef_080098d0;\n            *(undefined *)((int)param_2 + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (bVar1 == 0x75) goto LAB_0800974e;\n          if (bVar1 == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)param_2 + 0x42) = bVar1;\n        goto LAB_08009728;\n      }\n      puVar3 = *param_5;\n      *param_5 = puVar3 + 1;\n      puVar11 = (undefined *)*puVar3;\n      iVar2 = FUN_08009f2c(puVar11,0,param_2[1]);\n      if (iVar2 != 0) {\n        param_2[1] = iVar2 - (int)puVar11;\n      }\n      uVar8 = param_2[1];\n    }\n    param_2[4] = uVar8;\n    *(undefined *)((int)param_2 + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  uVar8 = *param_2;\n  ppuVar7 = (uint **)*param_5;\n  uVar6 = param_2[5];\n  if ((uVar8 & 0x80) == 0) {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\n    if ((uVar8 & 0x40) == 0) goto LAB_0800983e;\n    *(short *)puVar3 = (short)uVar6;\n  }\n  else {\n    *param_5 = (uint *)(ppuVar7 + 1);\n    puVar3 = *ppuVar7;\nLAB_0800983e:\n    *puVar3 = uVar6;\n  }\nLAB_08009852:\n  param_2[4] = 0;\nLAB_080097be:\n  iVar2 = FUN_080095a8(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 == -1) || (iVar2 = (*param_4)(param_1,param_3,puVar11,param_2[4]), iVar2 == -1)) {\nLAB_080097d2:\n    uVar8 = 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 << 0x1e) < 0) {\n      for (iVar2 = 0; iVar2 < (int)(param_2[3] - local_24[0]); iVar2 = iVar2 + 1) {\n        iVar4 = (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar4 == -1) goto LAB_080097d2;\n      }\n    }\n    uVar8 = param_2[3];\n    if ((int)param_2[3] < (int)local_24[0]) {\n      uVar8 = local_24[0];\n    }\n  }\n  return uVar8;\n}\n\n",
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009698",
            "calling": [
                "FUN_0800937c"
            ],
            "imported": false,
            "current_name": "FUNC_08009698"
        },
        "FUN_08006186": {
            "renaming": {
                "FUN_08006186": "set_flags_08006186",
                "param_1": "flags_ptr",
                "param_2": "param_offset",
                "param_3": "flag_value",
                "*(char *)(param_1 + 0xf)": "*(char *)(flags_ptr + 0xf)",
                "*(undefined *)(param_1 + 0xf)": "*(undefined *)(flags_ptr + 0xf)",
                "*(undefined *)((int)param_1 + 0x3d)": "*(undefined *)((int)flags_ptr + 0x3d)",
                "*(uint *)(*param_1 + 0x18)": "*(uint *)(*flags_ptr + 0x18)",
                "*(uint *)(*param_1 + 0x1c)": "*(uint *)(*flags_ptr + 0x1c)",
                "*(uint *)(param_2 + 0x10)": "*(uint *)(param_offset + 0x10)",
                "*(int *)(param_2 + 0x10)": "*(int *)(param_offset + 0x10)",
                "FUN_08005cec": "set_flag1",
                "FUN_080060c4": "set_flag2",
                "FUN_08005d48": "set_flag3",
                "FUN_08005dac": "set_flag4"
            },
            "code": "undefined4 set_flags_08006186(int *flags_ptr, int param_offset, undefined4 flag_value) {\n  if (*(char *)(flags_ptr + 0xf) != '\\x01') {\n    *(undefined *)(flags_ptr + 0xf) = 1;\n    *(undefined *)((int)flags_ptr + 0x3d) = 2;\n    switch(flag_value) {\n    case 0:\n      set_flag1(*flags_ptr);\n      *(uint *)(*flags_ptr + 0x18) |= 8;\n      *(uint *)(*flags_ptr + 0x18) &= 0xfffffffb;\n      *(uint *)(*flags_ptr + 0x18) |= *(uint *)(param_offset + 0x10);\n      break;\n    case 4:\n      set_flag2(*flags_ptr);\n      *(uint *)(*flags_ptr + 0x18) |= 0x800;\n      *(uint *)(*flags_ptr + 0x18) &= 0xfffffbff;\n      *(uint *)(*flags_ptr + 0x18) |= *(int *)(param_offset + 0x10) << 8;\n      break;\n    case 8:\n      set_flag3(*flags_ptr);\n      *(uint *)(*flags_ptr + 0x1c) |= 8;\n      *(uint *)(*flags_ptr + 0x1c) &= 0xfffffffb;\n      *(uint *)(*flags_ptr + 0x1c) |= *(uint *)(param_offset + 0x10);\n      break;\n    case 0xc:\n      set_flag4(*flags_ptr);\n      *(uint *)(*flags_ptr + 0x1c) |= 0x800;\n      *(uint *)(*flags_ptr + 0x1c) &= 0xfffffbff;\n      *(uint *)(*flags_ptr + 0x1c) |= *(int *)(param_offset + 0x10) << 8;\n    }\n    *(undefined *)((int)flags_ptr + 0x3d) = 1;\n    *(undefined *)(flags_ptr + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}",
            "called": [
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec",
                "FUN_08005d48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006186",
            "calling": [
                "FUN_08007118"
            ],
            "imported": false,
            "current_name": "set_flags_08006186"
        },
        "FUN_08007710": {
            "renaming": {
                "FUN_08007710": "call_function_before_return_08007710",
                "FUN_080074e0": "call_helper_function"
            },
            "code": "void call_function_before_return_08007710(void)\n{\n  call_helper_function();\n  return;\n}",
            "called": [
                "FUN_080074e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007710",
            "calling": [
                "FUN_08005df4"
            ],
            "imported": false,
            "current_name": "call_function_before_return_08007710"
        },
        "FUN_08003474": {
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "bVar1": "b"
            },
            "code": "void process_data_08003474(int data_ptr, uint data_size) {\n    byte b;\n\n    if (*(char *)(data_ptr + 0x14) != '\\0') {\n        if (data_size != 0xf7) {\n            call_func(data_ptr, data_size, *(undefined4 *)(data_ptr + 0x18));\n            *(int *)(data_ptr + 0x18) = *(int *)(data_ptr + 0x18) + 1;\n            return;\n        }\n        *(undefined *)(data_ptr + 0x14) = 0;\n        reset_data();\n        return;\n    }\n\n    if ((*(int *)(data_ptr + 0x10) == 0) || (0x7f < (int)data_size)) {\n        if ((int)data_size < 0xf0) {\n            *(byte *)(data_ptr + 0xd) = (byte)data_size & 0xf;\n            data_size = data_size & 0xf0;\n        }\n        if (data_size == 0xf0) {\n            *(undefined *)(data_ptr + 0x14) = 1;\n            *(undefined4 *)(data_ptr + 0x18) = 0;\n            return;\n        }\n        if (data_size < 0xf1) {\n            if (data_size != 0xc0) {\n                if (data_size < 0xc1) {\n                    if (data_size != 0x90) {\n                        return;\n                    }\n                }\n                else {\n                    if (data_size == 0xd0) goto LAB_0800359c;\n                    if (data_size != 0xe0) {\n                        return;\n                    }\n                }\nLAB_08003586:\n                *(undefined4 *)(data_ptr + 0x10) = 2;\n                *(char *)(data_ptr + 0xc) = (char)data_size;\n                return;\n            }\nLAB_0800359c:\n            *(undefined4 *)(data_ptr + 0x10) = 1;\n            *(char *)(data_ptr + 0xc) = (char)data_size;\n            return;\n        }\n        if (data_size != 0xf9) {\n            if (0xf9 < data_size) {\n                if (data_size == 0xff) {\n                    process_data_08003474_reset(data_ptr);\n                    return;\n                }\n                return;\n            }\n            if (1 < data_size - 0xf4) {\n                return;\n            }\n            goto LAB_08003586;\n        }\n        if (*(code **)(data_ptr + 0x74) != (code *)0x0) {\n            (**(code **)(data_ptr + 0x74))(*(undefined4 *)(data_ptr + 0x38));\n        }\n    }\n    else {\n        *(int *)(data_ptr + 0x10) = *(int *)(data_ptr + 0x10) + -1;\n        call_func(data_ptr);\n        if ((*(int *)(data_ptr + 0x10) == 0) && (b = *(byte *)(data_ptr + 0xc), b != 0)) {\n            if (b == 0xd0) {\n                if (*(code **)(data_ptr + 0x58) != (code *)0x0) {\n                    (**(code **)(data_ptr + 0x58))(*(undefined4 *)(data_ptr + 0x28), *(undefined *)(data_ptr + 0xd), **(undefined **)(data_ptr + 4));\n                }\n            }\n            else if (b < 0xd1) {\n                if (b == 0x90) {\n                    if (*(code **)(data_ptr + 0x50) != (code *)0x0) {\n                        (**(code **)(data_ptr + 0x50))(*(undefined4 *)(data_ptr + 0x20), *(undefined *)(data_ptr + 0xd), (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n                    }\n                }\n                else if ((b == 0xc0) && (*(code **)(data_ptr + 0x54) != (code *)0x0)) {\n                    (**(code **)(data_ptr + 0x54))(*(undefined4 *)(data_ptr + 0x24), *(undefined *)(data_ptr + 0xd), **(undefined **)(data_ptr + 4));\n                }\n            }\n            else if (b == 0xf4) {\n                if (*(code **)(data_ptr + 0x5c) != (code *)0x0) {\n                    (**(code **)(data_ptr + 0x5c))(*(undefined4 *)(data_ptr + 0x2c), (*(undefined **)(data_ptr + 4))[1], **(undefined **)(data_ptr + 4));\n                }\n            }\n            else if (b == 0xf5) {\n                if (*(code **)(data_ptr + 0x60) != (code *)0x0) {\n                    (**(code **)(data_ptr + 0x60))(*(undefined4 *)(data_ptr + 0x30), (*(undefined **)(data_ptr + 4))[1], **(undefined **)(data_ptr + 4));\n                }\n            }\n            else if ((b == 0xe0) && (*(code **)(data_ptr + 0x4c) != (code *)0x0)) {\n                (**(code **)(data_ptr + 0x4c))(*(undefined4 *)(data_ptr + 0x1c), *(undefined *)(data_ptr + 0xd), (uint)(*(byte **)(data_ptr + 4))[1] + (uint)**(byte **)(data_ptr + 4) * 0x80);\n            }\n            *(undefined *)(data_ptr + 0xc) = 0;\n            return;\n        }\n    }\n    return;\n}\n",
            "called": [
                "FUN_0800344a",
                "FUN_080033cc",
                "FUN_08003376"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003474",
            "calling": [
                "FUN_08002ed2"
            ],
            "imported": false,
            "current_name": "process_data_08003474"
        },
        "FUN_08006b7c": {
            "renaming": {
                "FUN_08006b7c": "get_data_by_index_08006b7c",
                "param_1": "index",
                "DAT_08006ba4": "data_0",
                "DAT_08006bb4": "data_1",
                "DAT_08006ba8": "data_2",
                "DAT_08006bac": "data_3",
                "DAT_08006bb0": "data_4"
            },
            "code": "int get_data_by_index_08006b7c(int index)\n{\n    switch(index) {\n        case 0:\n            return DAT_08006ba4;\n        case 1:\n            return DAT_08006bb4;\n        case 2:\n            return DAT_08006ba8;\n        case 3:\n            return DAT_08006bac;\n        case 4:\n            return DAT_08006bb0;\n        default:\n            return 0;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b7c",
            "calling": [
                "FUN_08008a6c",
                "FUN_08008a24"
            ],
            "imported": false,
            "current_name": "get_data_by_index_08006b7c"
        },
        "FUN_08008e7c": {
            "renaming": {
                "FUN_08008e7c": "convert_to_base_08008e7c",
                "param_1": "PTR_arr",
                "param_2": "num",
                "param_3": "base",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "digit_ptr",
                "cVar1": "digit",
                "local_15": "reversed_digits"
            },
            "code": "undefined4 convert_to_base_08008e7c(int *PTR_arr,uint num,uint base)\n{\n  char digit;\n  undefined4 result;\n  uint quotient;\n  uint remainder;\n  char *digit_ptr;\n  char reversed_digits [9];\n  reversed_digits[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  digit_ptr = reversed_digits + 1;\n  do {\n    quotient = num / base;\n    remainder = (num & 0xff) - (quotient * base & 0xff) & 0xff;\n    digit_ptr = digit_ptr + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *digit_ptr = digit;\n    num = quotient;\n  } while (quotient != 0);\n  if (digit_ptr == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(digit_ptr);\n    result = (**(code **)(*PTR_arr + 4))(PTR_arr,digit_ptr,result);\n  }\n  return result;\n}",
            "called": [
                "FUN_08000178"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e7c",
            "calling": [
                "FUN_08008ed6"
            ],
            "imported": false,
            "current_name": "convert_to_base_08008e7c"
        },
        "FUN_08003aa0": {
            "renaming": {
                "FUN_08003aa0": "check_parameter_status_08003aa0",
                "param_1": "param_array",
                "iVar1": "status",
                "puVar2": "ptr"
            },
            "code": "int check_parameter_status_08003aa0(undefined4 *param_array)\n{\n  int status;\n  undefined4 *ptr;\n  \n  if (*(char *)(param_array + 9) != '\\x01') {\n    *(undefined *)(param_array + 9) = 1;\n    status = initialize_param();\n    if (status == 0) {\n      param_array[10] = param_array[10] & 0xfffffcfe | 0x100;\n      ptr = (undefined4 *)*param_array;\n      if ((ptr == PTR_08003b84) && ((PTR_08003b84[-0xff] & 0xf0000) != 0)) {\n        param_array[10] = param_array[10] | 0x100000;\n        if ((*(uint *)(PTR_08003b88 + 4) & 0x400) != 0) {\n          param_array[10] = param_array[10] & 0xffffcfff | 0x1000;\n        }\n      }\n      else {\n        param_array[10] = param_array[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          param_array[10] = param_array[10] & 0xffffcfff | 0x1000;\n        }\n      }\n      if ((param_array[10] & 0x1000) == 0) {\n        param_array[0xb] = 0;\n      }\n      else {\n        param_array[0xb] = param_array[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(param_array + 9) = 0;\n      *ptr = 0xfffffffd;\n      param_array = (undefined4 *)*param_array;\n      if (((param_array[2] & 0xe0000) == 0xe0000) &&\n         ((param_array != PTR_08003b84 || ((PTR_08003b84[-0xff] & 0xf0000) == 0)))) {\n        param_array[2] = param_array[2] | 0x500000;\n      }\n      else {\n        param_array[2] = param_array[2] | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(param_array + 9) = 0;\n    }\n    return status;\n  }\n  return 2;\n}",
            "called": [
                "FUN_08003a20"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003aa0",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "check_parameter_status_08003aa0"
        },
        "FUN_08003ce8": {
            "renaming": {
                "FUN_08003ce8": "initialize_device_08003ce8",
                "param_1": "device_ptr",
                "iVar1": "status",
                "FUN_08003b8c": "initialize_device_2",
                "*(undefined4 *)*param_1": "*(int *)*device_ptr",
                "*(uint *)(*param_1 + 4)": "*(unsigned int *)(*device_ptr + 4)",
                "DAT_08003ddc": "DAT_08003ddc",
                "*(uint *)(*param_1 + 8)": "*(unsigned int *)(*device_ptr + 8)",
                "DAT_08003de0": "DAT_08003de0",
                "*(uint *)(*param_1 + 0xc)": "*(unsigned int *)(*device_ptr + 0xc)",
                "*(uint *)(*param_1 + 0x10)": "*(unsigned int *)(*device_ptr + 0x10)",
                "*(uint *)(*param_1 + 0x14)": "*(unsigned int *)(*device_ptr + 0x14)",
                "*(uint *)(*param_1 + 0x18)": "*(unsigned int *)(*device_ptr + 0x18)",
                "*(uint *)(*param_1 + 0x1c)": "*(unsigned int *)(*device_ptr + 0x1c)",
                "*(uint *)(*param_1 + 0x20)": "*(unsigned int *)(*device_ptr + 0x20)",
                "*(uint *)(*param_1 + 0x24)": "*(unsigned int *)(*device_ptr + 0x24)",
                "*(uint *)(*param_1 + 0x28)": "*(unsigned int *)(*device_ptr + 0x28)",
                "*(uint *)(*param_1 + 0x2c)": "*(unsigned int *)(*device_ptr + 0x2c)",
                "*(uint *)(*param_1 + 0x30)": "*(unsigned int *)(*device_ptr + 0x30)",
                "*(uint *)(*param_1 + 0x34)": "*(unsigned int *)(*device_ptr + 0x34)",
                "*(uint *)(*param_1 + 0x38)": "*(unsigned int *)(*device_ptr + 0x38)",
                "FUN_08006d24": "initialize_device_3",
                "param_1[0xb]": "device_ptr[11]",
                "param_1[10]": "device_ptr[10]",
                "*(undefined *)(param_1 + 9)": "*(unsigned char *)(device_ptr + 9)"
            },
            "code": "int initialize_device_08003ce8(int *device_ptr)\n{\n  int status;\n  if (device_ptr == NULL) {\n    status = 1;\n  }\n  else {\n    device_ptr[10] |= 2;\n    status = initialize_device_08003ce8_2();\n    if (status == 0) {\n      *(int *)*device_ptr = -32;\n      *(unsigned int *)(*device_ptr + 4) &= DAT_08003ddc;\n      *(unsigned int *)(*device_ptr + 8) &= DAT_08003de0;\n      *(unsigned int *)(*device_ptr + 0xc) &= 0xff000000;\n      *(unsigned int *)(*device_ptr + 0x10) &= 0xc0000000;\n      *(unsigned int *)(*device_ptr + 0x14) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x18) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x1c) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x20) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x24) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x28) &= 0xfffff000;\n      *(unsigned int *)(*device_ptr + 0x2c) &= 0xff000000;\n      *(unsigned int *)(*device_ptr + 0x2c) &= 0xff000000;\n      *(unsigned int *)(*device_ptr + 0x30) &= 0xc0000000;\n      *(unsigned int *)(*device_ptr + 0x34) &= 0xc0000000;\n      *(unsigned int *)(*device_ptr + 0x38) &= 0xffc00000;\n      *(unsigned int *)(*device_ptr + 0x38) &= 0xffc00000;\n      initialize_device_08003ce8_3(device_ptr);\n      device_ptr[11] = 0;\n      device_ptr[10] = 0;\n    }\n    *(unsigned char *)(device_ptr + 9) = 0;\n  }\n  return status;\n}\n",
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003ce8",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "initialize_device_08003ce8"
        },
        "FUN_08005fe8": {
            "renaming": {
                "FUN_08005fe8": "update_data_08005fe8",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "uVar1": "current_data",
                "DAT_0800605c": "special_ptr_1",
                "0x40000000": "special_ptr_2"
            },
            "code": "void update_data_08005fe8(uint *data_ptr, uint *new_data)\n{\n  uint current_data = *data_ptr;\n  bool is_special_ptr = (data_ptr == DAT_0800605c || data_ptr == special_ptr_2 || data_ptr == special_ptr_3 || data_ptr == special_ptr_4);\n  if (is_special_ptr) {\n    current_data = current_data & 0xffffff8f | new_data[1];\n  }\n  bool is_another_special_ptr = (data_ptr == DAT_0800605c || data_ptr == special_ptr_2 || data_ptr == special_ptr_3 || data_ptr == special_ptr_4);\n  if (is_another_special_ptr) {\n    current_data = current_data & 0xfffffcff | new_data[3];\n  }\n  *data_ptr = current_data & 0xffffff7f | new_data[5];\n  data_ptr[11] = new_data[2];\n  data_ptr[10] = *new_data;\n  if (data_ptr == DAT_0800605c) {\n    data_ptr[12] = new_data[4];\n  }\n  data_ptr[5] = 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005fe8",
            "calling": [
                "FUN_08006060",
                "FUN_08006092"
            ],
            "imported": false,
            "current_name": "update_data_08005fe8"
        },
        "FUN_08008804": {
            "renaming": {
                "FUN_08008804": "get_index_08008804",
                "param_1": "index",
                "iVar1": "current_index",
                "puVar2": "data_ptr"
            },
            "code": "int get_index_08008804(int index)\n{\n  int current_index = *(int *)PTR_DAT_08008834;\n  undefined *data_ptr = (undefined *)(index + current_index);\n  if (data_ptr <= &stack0x00000000) {\n    *(undefined **)PTR_DAT_08008834 = data_ptr;\n    return current_index;\n  }\n  *(undefined4 *)PTR_DAT_0800883c = 0xc;\n  return -1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008804",
            "calling": [
                "FUN_08009918"
            ],
            "imported": false,
            "current_name": "get_index_08008804"
        },
        "FUN_0800738a": {
            "renaming": {
                "FUN_0800738a": "check_value_in_string_0800738a",
                "param_1": "search_value",
                "param_2": "string_to_search",
                "*param_2": "*string_to_search"
            },
            "code": "int check_value_in_string_0800738a(int search_value, char *string_to_search)\n{\n  if (search_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*string_to_search == -1) {\n      return 0;\n    }\n    if (search_value == *string_to_search) break;\n    string_to_search = string_to_search + 0xc;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738a",
            "calling": [
                "FUN_080088e0",
                "FUN_08008990",
                "FUN_08001cd0",
                "FUN_08000a64",
                "FUN_080005f8",
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "check_value_in_string_0800738a"
        },
        "FUN_08004e3c": {
            "renaming": {
                "FUN_08004e3c": "decode_packet_08004e3c",
                "param_1": "packet_ptr",
                "puVar1": "packet_data",
                "param_1[0xb]": "packet_ptr[0xb]",
                "(int)param_1 + 0x2a": "(int)packet_ptr + 0x2a",
                "*(short *)((int)param_1 + 0x2a)": "*(short *)((int)packet_ptr + 0x2a)",
                "**param_1": "**packet_ptr",
                "(uint *)0x4": "(uint *)0x4",
                "(uint *)0x8": "(uint *)0x8",
                "(uint *)0xffff0000": "(uint *)0xffff0000",
                "param_1[9]": "packet_ptr[9]",
                "(int)puVar1 + 1": "(int)packet_payload + 1",
                "(char)(*param_1)[4]": "(char)(*packet_ptr)[4]",
                "*(char *)puVar1": "*(char *)packet_payload",
                "*(short *)((int)param_1 + 0x2a) + -1": "packet_length--",
                "(*packet_ptr)[1]": "(*packet_ptr)[1]",
                "0xfffffcff": "0xfffffcff",
                "**packet_ptr | 0x200": "**packet_ptr | 0x200",
                "packet_data == (uint *)0x2": "packet_data == (uint *)0x2",
                "**packet_ptr | 0x400": "**packet_ptr | 0x400",
                "*(undefined *)((int)param_1 + 0x3d)": "*(undefined *)((int)packet_ptr + 0x3d)",
                "0x20": "0x20",
                "packet_ptr[0xc]": "packet_ptr[0xc]",
                "(char *)((int)param_1 + 0x3e)": "(char *)((int)packet_ptr + 0x3e)",
                "*(undefined *)((int)param_1 + 0x3e)": "*(undefined *)((int)packet_ptr + 0x3e)",
                "do_nothing_08004d6a": "do_nothing_08004d6a",
                "do_nothing_08004a20": "do_nothing_08004a20",
                "*(char *)((int)packet_ptr + 0x3e) == '@'": "*(char *)((int)packet_ptr + 0x3e) == '@'"
            },
            "code": "uint decode_packet_08004e3c(uint **packet_ptr)\n{\n  uint *packet_data = packet_ptr[0xb];\n  short packet_length = *(short *)((int)packet_ptr + 0x2a);\n  if (packet_length == 3) {\n    if (((packet_data == (uint *)0x4) || (packet_data == (uint *)0x8)) || (packet_data == (uint *)0xffff0000)) {\n      **packet_ptr = **packet_ptr & 0xfffffbff;\n    }\n    uint *packet_payload = packet_ptr[9];\n    packet_ptr[9] = (uint *)((int)packet_payload + 1);\n    *(char *)packet_payload = (char)(*packet_ptr)[4];\n    packet_length--;\n  }\n  else if (packet_length == 2) {\n    if (((packet_data == (uint *)0x4) || (packet_data == (uint *)0x8)) || (packet_data == (uint *)0xffff0000)) {\n      (*packet_ptr)[1] = (*packet_ptr)[1] & 0xfffffcff;\n      **packet_ptr = **packet_ptr | 0x200;\n    }\n    else {\n      if (packet_data == (uint *)0x2) {\n        **packet_ptr = **packet_ptr | 0x400;\n      }\n      else {\n        **packet_ptr = **packet_ptr & 0xfffffbff;\n      }\n      (*packet_ptr)[1] = (*packet_ptr)[1] & 0xfffffcff;\n    }\n    uint *packet_payload = packet_ptr[9];\n    packet_ptr[9] = (uint *)((int)packet_payload + 1);\n    *(char *)packet_payload = (char)(*packet_ptr)[4];\n    packet_length--;\n    packet_payload = packet_ptr[9];\n    packet_ptr[9] = (uint *)((int)packet_payload + 1);\n    *(char *)packet_payload = (char)(*packet_ptr)[4];\n    packet_length--;\n    *(undefined *)((int)packet_ptr + 0x3d) = 0x20;\n    packet_ptr[0xc] = (uint *)0x0;\n    if (*(char *)((int)packet_ptr + 0x3e) == '@') {\n      *(undefined *)((int)packet_ptr + 0x3e) = 0;\n      do_nothing_08004d6a();\n    }\n    else {\n      *(undefined *)((int)packet_ptr + 0x3e) = 0;\n      do_nothing_08004a20();\n    }\n  }\n  else {\n    uint *packet_payload = packet_ptr[9];\n    packet_ptr[9] = (uint *)((int)packet_payload + 1);\n    *(char *)packet_payload = (char)(*packet_ptr)[4];\n    packet_length--;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004a20",
                "FUN_08004d6a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004e3c",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "decode_packet_08004e3c"
        },
        "FUN_080091a0": {
            "renaming": {
                "FUN_080091a0": "call_function_with_pointer_to_pointer_080091a0",
                "param_1": "parameter",
                "PTR_PTR_DAT_080091ac": "pointer_to_pointer"
            },
            "code": "void call_function_with_pointer_to_pointer_080091a0(void* PTR_PTR_DAT_080091ac, void* parameter) {\n  void (*function_pointer)(void*) = *(void (**)(void*))PTR_PTR_DAT_080091ac;\n  function_pointer(parameter);\n  return;\n}",
            "called": [
                "FUN_080091d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091a0",
            "calling": [
                "FUN_08002e44"
            ],
            "imported": false,
            "current_name": "call_function_with_pointer_to_pointer_080091a0"
        },
        "FUN_08002a1c": {
            "renaming": {
                "FUN_08002a1c": "call_with_repeated_param_08002a1c",
                "param_1": "data",
                "param_2": "data_size",
                "param_3": "func",
                "param_4": "times",
                "FUN_08002968": "func",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void call_with_repeated_param_08002a1c(void* data, int data_size, void* func, int param, int times){\n  for(int i = 0; i < times; i++){\n    ((void (*)(void*,int))func)(data,data_size);\n  }\n  return;\n}",
            "called": [
                "FUN_08002968"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a1c",
            "calling": [
                "FUN_08002a26"
            ],
            "imported": false,
            "current_name": "call_with_repeated_param_08002a1c"
        },
        "FUN_08007718": {
            "renaming": {
                "FUN_08007718": "subtract_four_from_param_08007718",
                "param_1": "input_param",
                "return": "result"
            },
            "code": "int subtract_four_from_param_08007718(int input_param)\n{\n    int result = input_param - 4;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007718",
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "imported": false,
            "current_name": "subtract_four_from_param_08007718"
        },
        "FUN_08002948": {
            "renaming": {
                "FUN_08002948": "check_param_and_call_08002948",
                "param_1": "param1",
                "param_2": "param2",
                "PTR_DAT_08002964": "PTR_DATA"
            },
            "code": "void check_param_and_call_08002948(int param1, int param2)\n{\n    if (param1 != 1)\n    {\n        return;\n    }\n\n    if (param2 == 0xffff)\n    {\n        call_with_ptr(PTR_DAT_08002964);\n    }\n\n    return;\n}",
            "called": [
                "FUN_0800291c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002948",
            "calling": [
                "FUN_08002c1e"
            ],
            "imported": false,
            "current_name": "check_param_and_call_08002948"
        },
        "FUN_08009e64": {
            "renaming": {
                "FUN_08009e64": "check_file_type_08009e64",
                "param_1": "file_header",
                "param_2": "file_header_size",
                "param_3": "result",
                "param_4": "error_code",
                "iVar1": "status",
                "uVar2": "result_code",
                "auStack_4c": "magic_number"
            },
            "code": "int check_file_type_08009e64(uint16_t* file_header, int file_header_size, uint32_t* result, uint32_t* error_code) {\n    int status = 0;\n    uint16_t magic_number = file_header[7];\n    if (magic_number < 0) {\n        status = get_file_type(file_header, (int)magic_number, result);\n        if (status < 0) {\n            *error_code = 0;\n            if (((uint32_t)file_header[6] << 0x18) < 0) {\n                *result = 0x40;\n                goto LAB_08009ea4;\n            }\n        }\n        else {\n            *error_code = (uint32_t)((status & 0xf000) == 0x2000);\n        }\n    }\n    else {\n        *result = 0x400;\n    }\n    LAB_08009ea4:\n    return 0;\n}",
            "called": [
                "FUN_0800a0ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009e64",
            "calling": [
                "FUN_08009eac"
            ],
            "imported": false,
            "current_name": "check_file_type_08009e64"
        },
        "FUN_08002acc": {
            "renaming": {
                "FUN_08002acc": "process_input_08002acc",
                "param_1": "input_length",
                "puVar1": "data_pointer",
                "iVar2": "result",
                "uVar3": "new_input_length"
            },
            "code": "void process_input_08002acc(uint input_length, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined *data_pointer;\n  int result;\n  undefined new_input_length;\n  data_pointer = PTR_DAT_08002afc;\n  if ((byte)*PTR_DAT_08002af8 < input_length) {\n    if (input_length < 0x20) {\n      input_length = 0x20;\n    }\n    result = FUN_08009908(*(undefined4 *)PTR_DAT_08002afc,input_length,param_3,(uint)(byte)*PTR_DAT_08002af8,param_4);\n    *(int *)data_pointer = result;\n    if (result == 0) {\n      new_input_length = 0;\n    }\n    else {\n      new_input_length = (undefined)input_length;\n    }\n    *PTR_DAT_08002af8 = new_input_length;\n  }\n  return;\n}",
            "called": [
                "FUN_08009908"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002acc",
            "calling": [
                "FUN_08002b68"
            ],
            "imported": false,
            "current_name": "process_input_08002acc"
        },
        "FUN_08002a30": {
            "renaming": {
                "FUN_08002a30": "initialize_data_section_08002a30",
                "param_1": "flag",
                "param_2": "value"
            },
            "code": "void initialize_data_section_08002a30(int flag, int value) {\n    *PTR_DAT_08002a48 = 1;\n    *PTR_DAT_08002a4c = (char)(value << 1);\n    *PTR_DAT_08002a50 = 0;\n    *PTR_DAT_08002a54 = 0;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a30",
            "calling": [
                "FUN_08001c18",
                "FUN_08001cd0",
                "FUN_08002b68"
            ],
            "imported": false,
            "current_name": "initialize_data_section_08002a30"
        },
        "FUN_0800932c": {
            "renaming": {
                "FUN_0800932c": "decode_input_0800932c",
                "param_1": "input_length",
                "param_2": "input_byte",
                "param_3": "input_buffer",
                "iVar1": "buffer_length",
                "pbVar2": "buffer",
                "pbVar3": "buffer_2",
                "uVar4": "return_value",
                "PTR_DAT_08009a74": "input_ptr_1",
                "PTR_DAT_08009a78": "input_ptr_2",
                "PTR_DAT_08009a7c": "input_ptr_3"
            },
            "code": "uint decode_input_0800932c(int input_length, byte input_byte, byte **input_buffer){\n  int buffer_length = (int)(*input_buffer)[2] - 1;\n  (*input_buffer)[2] = buffer_length;\n  if(buffer_length >= -1 || ((*input_buffer)[6] <= buffer_length && (byte *)(uint)input_byte != (byte *)0xa)) {\n    byte *buffer = *input_buffer;\n    *input_buffer = buffer + 1;\n    *buffer = input_byte;\n    return (uint)input_byte;\n  }\n  if(input_length != 0 && (*(int *)(input_length + 0x18) == 0)) {\n    fail_decode();\n  }\n  if(input_buffer == (byte **)PTR_DAT_08009a74) {\n    input_buffer = *(byte ***)(input_length + 4);\n  }\n  else if(input_buffer == (byte **)PTR_DAT_08009a78) {\n    input_buffer = *(byte ***)(input_length + 8);\n  }\n  else if(input_buffer == (byte **)PTR_DAT_08009a7c) {\n    input_buffer = *(byte ***)(input_length + 0xc);\n  }\n  (*input_buffer)[2] = (*input_buffer)[6];\n  byte *buffer_2 = (byte *)(uint)*(ushort *)(input_buffer + 3);\n  int buffer_2_length = (int)buffer_2 << 0x1c;\n  if(((buffer_2_length < 0) && (buffer_2 = input_buffer[4], buffer_2 != (byte *)0x0)) || (buffer_2_length = decode_helper(input_length, input_buffer, buffer_2_length, buffer_2, buffer), buffer_2_length == 0)) {\n    uint return_value = (uint)input_byte;\n    int buffer_diff = (int)*input_buffer - (int)input_buffer[4];\n    if(buffer_diff < (int)input_buffer[5] || (buffer_diff = decode_helper(input_length, input_buffer), buffer_diff == 0)) {\n      (*input_buffer)[2] = (*input_buffer)[2] - 1;\n      byte *buffer = *input_buffer;\n      *input_buffer = buffer + 1;\n      *buffer = input_byte;\n      if((byte *)(buffer_diff + 1) != input_buffer[5]) {\n        if(-1 < (int)((uint)*(ushort *)(input_buffer + 3) << 0x1f)) {\n          return return_value;\n        }\n        if(return_value != 10) {\n          return return_value;\n        }\n      }\n      buffer_diff = decode_helper(input_length, input_buffer);\n      if(buffer_diff == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}",
            "called": [
                "FUN_08009c7c",
                "FUN_08009d50",
                "FUN_08009a80"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800932c",
            "calling": [
                "FUN_08009358"
            ],
            "imported": false,
            "current_name": "decode_input_0800932c"
        },
        "FUN_0800322c": {
            "renaming": {
                "FUN_0800322c": "execute_function_at_pointer_0800322c",
                "param_1": "pointer_to_function",
                "param_2": "arg1",
                "param_3": "arg2",
                "puVar1": "function_pointer"
            },
            "code": "void execute_function_at_pointer_0800322c(uint32_t *pointer_to_function, uint32_t arg1, uint32_t arg2)\n{\n    uint32_t *function_pointer = (uint32_t *)*pointer_to_function;\n    if (function_pointer != NULL)\n    {\n        (**(void (**)(uint32_t *, uint32_t)) *function_pointer)(function_pointer, 0xf9);\n        (***(void (***)(uint32_t *))function_pointer)((uint32_t *)function_pointer, arg1);\n        (***(void (***)(uint32_t *))function_pointer)((uint32_t *)function_pointer, arg2);\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800322c",
            "calling": [
                "FUN_08002ddc"
            ],
            "imported": false,
            "current_name": "execute_function_at_pointer_0800322c"
        },
        "FUN_080099a4": {
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "str",
                "param_2": "substr",
                "pcVar1": "str_ptr",
                "pcVar2": "str_start",
                "pcVar3": "substr_ptr"
            },
            "code": "char* find_substring_080099a4(char* str, char* substr) {\n    char* str_ptr;\n    char* substr_ptr;\n    char* str_start;\n    \n    if (*str == '\\0') {\n        if (*substr != '\\0') {\n            str = NULL;\n        }\n        return str;\n    }\n    \n    do {\n        str_ptr = str;\n        if (*str_ptr == '\\0') {\n            return NULL;\n        }\n        substr_ptr = substr - 1;\n        str_start = str_ptr - 1;\n        \n        do {\n            substr_ptr++;\n            if (*substr_ptr == '\\0') {\n                return str_ptr;\n            }\n            str_start++;\n            str = str_ptr + 1;\n        } while (*str_start == *substr_ptr);\n    } while (true);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080099a4",
            "calling": [
                "FUN_08002e44"
            ],
            "imported": false,
            "current_name": "find_substring_080099a4"
        },
        "FUN_08005a1c": {
            "renaming": {
                "FUN_08005a1c": "get_value_from_pointer_08005a1c",
                "PTR_DAT_08005a24": "pointer_data"
            },
            "code": "get_value_from_pointer_08005a1c() {\n    return *(undefined4 *)PTR_DAT_08005a24;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a1c",
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005a1c"
        },
        "FUN_08001cd0": {
            "renaming": {
                "FUN_08001cd0": "FUNC_08001cd0"
            },
            "code": "\nvoid FUNC_08001cd0(undefined4 param_1,int param_2,byte *param_3,undefined4 param_4)\n\n{\n  byte bVar1;\n  byte bVar2;\n  byte bVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  undefined4 uVar6;\n  byte bVar7;\n  char cVar8;\n  int iVar9;\n  int iVar10;\n  char cVar11;\n  uint uVar12;\n  uint uVar13;\n  int iVar14;\n  bool bVar15;\n  \n  puVar5 = PTR_DAT_080022e8;\n  puVar4 = PTR_DAT_08002044;\n  switch(param_1) {\n  case 0x69:\n    FUN_08002f1e(PTR_DAT_080022e8,0xf0);\n    FUN_08002f1e(puVar5,0x6a);\n    for (uVar12 = 0; uVar12 < 0x3c; uVar12 = uVar12 + 1 & 0xff) {\n      uVar13 = uVar12 - 0x2e & 0xff;\n      if (uVar13 < 0xe) {\n        if (uVar12 < 0x3c) {\n          iVar9 = (int)(char)PTR_DAT_080022e4[uVar12];\n        }\n        else {\n          iVar9 = -1;\n        }\n        iVar9 = FUN_080036ac(iVar9);\n        if (iVar9 == 0) {\n          uVar13 = 0x7f;\n        }\n        else {\n          if (uVar12 < 0x3c) {\n            iVar9 = (int)(char)PTR_DAT_080022e4[uVar12];\n          }\n          else {\n            iVar9 = -1;\n          }\n          iVar9 = FUN_080036ac(iVar9);\n          if (iVar9 == 1) {\n            uVar13 = 0x7f;\n          }\n        }\n      }\n      else {\n        uVar13 = 0x7f;\n      }\n      FUN_08002f1e(PTR_DAT_080022e8,uVar13);\n    }\n    FUN_08002f1e(PTR_DAT_080022e8,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(PTR_DAT_08002044,0xf0);\n    FUN_08002f1e(puVar4,0x6c);\n    for (uVar12 = 0; uVar12 < 0x3c; uVar12 = uVar12 + 1 & 0xff) {\n      if (uVar12 < 0x3c) {\n        if (PTR_DAT_080022e4[uVar12] == -1) {\n          bVar15 = false;\n        }\n        else {\n          iVar9 = FUN_080036ac();\n          if (iVar9 == 0) {\n            bVar15 = false;\n          }\n          else {\n            iVar9 = FUN_080036ac((int)(char)PTR_DAT_08002060[uVar12]);\n            if (iVar9 == 1) {\n              bVar15 = false;\n            }\n            else {\n              bVar15 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar15 = false;\n      }\n      puVar4 = PTR_DAT_08002044;\n      if (bVar15) {\n        FUN_08002f1e(PTR_DAT_08002044,0);\n        FUN_08002f1e(puVar4,1);\n        FUN_08002f1e(puVar4,0xb);\n        FUN_08002f1e(puVar4,1);\n        FUN_08002f1e(puVar4,1);\n        FUN_08002f1e(puVar4,1);\n      }\n      if ((uVar12 - 0x2e & 0xff) < 0xe) {\n        if (uVar12 < 0x3c) {\n          iVar9 = (int)(char)PTR_DAT_08002060[uVar12];\n        }\n        else {\n          iVar9 = -1;\n        }\n        iVar9 = FUN_080036ac(iVar9);\n        if (iVar9 == 0) {\n          bVar15 = false;\n        }\n        else {\n          if (uVar12 < 0x3c) {\n            iVar9 = (int)(char)PTR_DAT_08002060[uVar12];\n          }\n          else {\n            iVar9 = -1;\n          }\n          iVar9 = FUN_080036ac(iVar9);\n          if (iVar9 == 1) {\n            bVar15 = false;\n          }\n          else {\n            bVar15 = true;\n          }\n        }\n      }\n      else {\n        bVar15 = false;\n      }\n      puVar4 = PTR_DAT_080022e8;\n      if (bVar15) {\n        FUN_08002f1e(PTR_DAT_080022e8,2);\n        FUN_08002f1e(puVar4,10);\n      }\n      if (uVar12 < 0x3c) {\n        if (PTR_DAT_080022e4[uVar12] == -1) {\n          iVar9 = 0;\n        }\n        else {\n          iVar9 = FUN_080036ac();\n          if (iVar9 == 0) {\n            iVar9 = 0;\n          }\n          else {\n            iVar9 = FUN_080036ac((int)(char)PTR_DAT_080022e4[uVar12]);\n            if (iVar9 == 1) {\n              iVar9 = 0;\n            }\n            else {\n              iVar9 = FUN_0800738a((int)(char)PTR_DAT_080022e4[uVar12],PTR_DAT_080022ec);\n            }\n          }\n        }\n      }\n      else {\n        iVar9 = 0;\n      }\n      puVar4 = PTR_DAT_080022e8;\n      if (iVar9 != 0) {\n        FUN_08002f1e(PTR_DAT_080022e8,3);\n        FUN_08002f1e(puVar4,8);\n      }\n      if (uVar12 < 0x3c) {\n        if (PTR_DAT_080022e4[uVar12] == -1) {\n          bVar15 = false;\n        }\n        else {\n          iVar9 = FUN_080036ac();\n          if (iVar9 == 0) {\n            bVar15 = false;\n          }\n          else {\n            iVar9 = FUN_080036ac((int)(char)PTR_DAT_080022e4[uVar12]);\n            if (iVar9 == 1) {\n              bVar15 = false;\n            }\n            else {\n              bVar15 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar15 = false;\n      }\n      puVar4 = PTR_DAT_080022e8;\n      if (bVar15) {\n        FUN_08002f1e(PTR_DAT_080022e8,4);\n        FUN_08002f1e(puVar4,0xe);\n      }\n      if (uVar12 < 0x3c) {\n        if (PTR_DAT_080022e4[uVar12] == -1) {\n          iVar9 = 0;\n        }\n        else {\n          iVar9 = FUN_080036ac();\n          if (iVar9 == 0) {\n            iVar9 = 0;\n          }\n          else {\n            iVar9 = FUN_080036ac((int)(char)PTR_DAT_080022e4[uVar12]);\n            if (iVar9 == 1) {\n              iVar9 = 0;\n            }\n            else {\n              iVar9 = FUN_0800738a((int)(char)PTR_DAT_080022e4[uVar12],PTR_DAT_080022f0);\n              if (iVar9 == 0) {\n                iVar9 = FUN_0800738a((int)(char)PTR_DAT_080022e4[uVar12],PTR_DAT_080022f4);\n              }\n            }\n          }\n        }\n      }\n      else {\n        iVar9 = 0;\n      }\n      puVar4 = PTR_DAT_080022e8;\n      if (iVar9 != 0) {\n        FUN_08002f1e(PTR_DAT_080022e8,6);\n        FUN_08002f1e(puVar4,1);\n      }\n      FUN_08002f1e(PTR_DAT_080022e8,0x7f);\n    }\n    FUN_08002f1e(PTR_DAT_080022e8,0xf7);\n    return;\n  case 0x6d:\n    if (param_2 != 0) {\n      bVar1 = *param_3;\n      FUN_08002f1e(PTR_DAT_080022e8,0xf0);\n      FUN_08002f1e(puVar5,0x6e);\n      FUN_08002f1e(puVar5,bVar1);\n      if (bVar1 < 0x3c) {\n        uVar6 = FUN_08002fa0(puVar5,bVar1);\n        FUN_08002f1e(puVar5,uVar6);\n        uVar12 = FUN_08002fba(puVar5,bVar1);\n        FUN_08002f1e(puVar5,uVar12 & 0x7f);\n        uVar12 = FUN_08002fba(puVar5,bVar1);\n        if ((uVar12 & 0xff80) != 0) {\n          iVar9 = FUN_08002fba(puVar5,bVar1);\n          FUN_08002f1e(puVar5,(uint)(iVar9 << 0x12) >> 0x19);\n        }\n        uVar12 = FUN_08002fba(PTR_DAT_080022e8,bVar1);\n        puVar4 = PTR_DAT_080022e8;\n        if ((uVar12 & 0xc000) != 0) {\n          iVar9 = FUN_08002fba(PTR_DAT_080022e8,bVar1);\n          FUN_08002f1e(puVar4,(uint)(iVar9 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(PTR_DAT_080022e8,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < param_2) {\n      uVar12 = (uint)param_3[1];\n      if (2 < param_2) {\n        uVar12 = uVar12 | (uint)param_3[2] << 7;\n      }\n      if (3 < param_2) {\n        uVar12 = uVar12 | (uint)param_3[3] << 0xe;\n      }\n      FUN_08000214(*param_3,uVar12);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < param_2) {\n      uVar12 = (uint)*param_3;\n      bVar1 = param_3[1];\n      bVar7 = param_3[2];\n      bVar2 = param_3[3];\n      bVar3 = param_3[4];\n      if (uVar12 < 0x3c) {\n        if (PTR_DAT_08002060[uVar12] == -1) {\n          bVar15 = false;\n        }\n        else {\n          iVar9 = FUN_080036ac();\n          if (iVar9 == 0) {\n            bVar15 = false;\n          }\n          else {\n            iVar9 = FUN_080036ac((int)(char)PTR_DAT_08002060[uVar12]);\n            if (iVar9 == 1) {\n              bVar15 = false;\n            }\n            else {\n              bVar15 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar15 = false;\n      }\n      if (bVar15) {\n        if ((byte)PTR_DAT_08002064[uVar12] < 0xc) {\n          iVar9 = FUN_080026f8(PTR_DAT_08002068 + (uint)(byte)PTR_DAT_08002064[uVar12] * 3);\n        }\n        else {\n          iVar9 = 0;\n        }\n        if (iVar9 != 0) {\n          FUN_08000588(uVar12);\n        }\n        FUN_08000500(uVar12,(uint)bVar1 + (uint)bVar7 * 0x80,(uint)bVar2 + (uint)bVar3 * 0x80);\n        FUNC_080005f8(uVar12,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    bVar1 = param_3[1];\n    bVar7 = bVar1 & 0x18;\n    if ((bVar1 & 0x20) != 0) {\n      FUN_08002f14(PTR_DAT_08002044,PTR_s_10_bit_addressing_not_supported_08002040,bVar7,bVar1,\n                   param_4);\n      return;\n    }\n    bVar2 = *param_3;\n    bVar15 = (bVar1 & 0x40) == 0;\n    if (bVar7 < 0x19) {\n      switch(bVar7) {\n      case 0:\n        FUN_08002a30(PTR_DAT_08002048,bVar2);\n        for (uVar12 = 2; (int)uVar12 < param_2; uVar12 = uVar12 + 2 & 0xff) {\n          FUN_08001bf8(param_3[uVar12 + 1] * -0x80 + param_3[uVar12]);\n        }\n        FUN_08002ac0(PTR_DAT_08002048);\n        return;\n      case 8:\n        if (param_2 == 6) {\n          iVar9 = (uint)param_3[2] + (uint)param_3[3] * 0x80;\n          cVar8 = param_3[4] + param_3[5] * -0x80;\n        }\n        else {\n          cVar8 = param_3[2] + param_3[3] * -0x80;\n          iVar9 = -1;\n        }\n        FUN_08001c18(bVar2,iVar9,cVar8);\n        return;\n      case 0x10:\n        cVar8 = *PTR_DAT_0800204c;\n        if (cVar8 + 1 < 8) {\n          if (param_2 == 6) {\n            iVar9 = (uint)param_3[2] + (uint)param_3[3] * 0x80;\n            cVar11 = param_3[4] + param_3[5] * -0x80;\n          }\n          else {\n            cVar11 = param_3[2] + param_3[3] * -0x80;\n            iVar9 = -1;\n          }\n          *PTR_DAT_0800204c = cVar8 + '\\x01';\n          puVar4 = PTR_DAT_08002050;\n          iVar10 = (char)(cVar8 + '\\x01') * 0xc;\n          PTR_DAT_08002050[iVar10] = bVar2;\n          *(int *)(puVar4 + iVar10 + 4) = iVar9;\n          puVar4[iVar10 + 8] = cVar11;\n          puVar4[iVar10 + 9] = bVar15;\n          return;\n        }\n        FUN_08002f14(PTR_DAT_08002044,PTR_s_too_many_queries_08002054,(int)cVar8,bVar15,param_4);\n        return;\n      case 0x18:\n        cVar8 = *PTR_DAT_0800204c;\n        if (cVar8 < 1) {\n          *PTR_DAT_0800204c = 0xff;\n          return;\n        }\n      }\n      for (uVar12 = 0; iVar9 = cVar8 + 1, (int)uVar12 < iVar9; uVar12 = uVar12 + 1 & 0xff) {\n        if (bVar2 == PTR_DAT_08002050[uVar12 * 0xc]) goto LAB_08001e66;\n      }\n      uVar12 = 0;\nLAB_08001e66:\n      for (; puVar4 = PTR_DAT_08002050, (int)uVar12 < iVar9; uVar12 = uVar12 + 1 & 0xff) {\n        if (uVar12 < 8) {\n          iVar10 = (uVar12 + 1) * 0xc;\n          iVar14 = uVar12 * 0xc;\n          PTR_DAT_08002050[iVar14] = PTR_DAT_08002050[iVar10];\n          *(undefined4 *)(puVar4 + iVar14 + 4) = *(undefined4 *)(puVar4 + iVar10 + 4);\n          puVar4[iVar14 + 8] = puVar4[iVar10 + 8];\n          puVar4[iVar14 + 9] = puVar4[iVar10 + 9];\n        }\n      }\n      *PTR_DAT_0800204c = cVar8 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    iVar9 = (uint)*param_3 + (uint)param_3[1] * 0x80;\n    if ((1 < param_2) && (iVar9 != 0)) {\n      *(int *)PTR_DAT_08002058 = iVar9;\n    }\n    if (*PTR_DAT_0800205c == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < param_2) &&\n       (iVar9 = (uint)*param_3 + (uint)param_3[1] * 0x80, *(int *)PTR_DAT_0800206c = iVar9,\n       iVar9 == 0)) {\n      *(undefined4 *)PTR_DAT_0800206c = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000500",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002fa0",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_0800738a",
                "FUN_08002f1e",
                "FUN_080026f8",
                "FUN_08000a64",
                "FUN_08002a30",
                "FUN_08001bf8",
                "FUN_08000588",
                "FUN_08000214",
                "FUN_080005f8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001cd0",
            "calling": [],
            "imported": false,
            "current_name": "FUNC_08001cd0"
        },
        "FUN_08003760": {
            "renaming": {
                "FUN_08003760": "get_value_from_pointer_08003760",
                "PTR_DAT_08003768": "value_pointer"
            },
            "code": "int get_value_from_pointer_08003760() {\n    int* PTR_DAT_08003768 = PTR_DAT_08003768;\n    int value = *PTR_DAT_08003768;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003760",
            "calling": [
                "FUN_08003b8c",
                "FUN_08003e20",
                "FUN_080066e8",
                "FUN_08008500",
                "FUN_080058d2",
                "FUN_08003a20",
                "FUN_0800723c",
                "FUN_0800376c",
                "FUN_080067ac",
                "FUN_08007f0e",
                "FUN_08005460",
                "FUN_08005aa4",
                "FUN_08007e74"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08003760"
        },
        "FUN_08007320": {
            "renaming": {
                "FUN_08007320": "check_param_is_not_minus_one_08007320",
                "param_1": "input_param",
                "uVar1": "result",
                "FUN_08007306": "call_some_function"
            },
            "code": "int check_param_is_not_minus_one_08007320(int input_param)\n{\n  int result = 0;\n  if (input_param != -1) {\n    result = call_some_function();\n  }\n  return result;\n}",
            "called": [
                "FUN_08007306"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007320",
            "calling": [
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08008500",
                "FUN_080084b0",
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "check_param_is_not_minus_one_08007320"
        },
        "FUN_08000be8": {
            "renaming": {
                "FUN_08000be8": "update_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "value",
                "puVar1": "data_ptr1",
                "puVar2": "data_ptr2"
            },
            "code": "void update_data_08000be8(int index, uint32_t mask, int condition, undefined4 value)\n{\n  undefined *data_ptr1;\n  undefined *data_ptr2;\n  data_ptr2 = (undefined *)((byte)PTR_DAT_08000c0c[index] & mask);\n  data_ptr1 = PTR_DAT_08000c0c;\n  if ((condition != 0) || (data_ptr1 = (undefined *)(uint)(byte)PTR_DAT_08000c10[index], data_ptr2 != data_ptr1))\n  {\n    update_data_08000be8_helper(PTR_DAT_08000c14, index, data_ptr2, data_ptr1, value);\n    PTR_DAT_08000c10[index] = (char)data_ptr2;\n  }\n  return;\n}",
            "called": [
                "FUN_08002efe"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000be8",
            "calling": [
                "FUN_08000ef8"
            ],
            "imported": false,
            "current_name": "update_data_08000be8"
        },
        "FUN_08003fd8": {
            "renaming": {
                "FUN_08003fd8": "check_param_and_set_values_08003fd8",
                "param_1": "input_param",
                "puVar1": "ptr_to_dat_08003ffc"
            },
            "code": "int check_param_and_set_values_08003fd8(int input_param)\n{\n  int *ptr_to_dat_08003ffc;\n  ptr_to_dat_08003ffc = DAT_08003ffc;\n  if (input_param - 1U < 0x1000000) {\n    ptr_to_dat_08003ffc[1] = input_param - 1U;\n    *(undefined *)(DAT_08004000 + 0x23) = 0xf0;\n    ptr_to_dat_08003ffc[2] = 0;\n    *ptr_to_dat_08003ffc = 7;\n    return 0;\n  }\n  return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fd8",
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "check_param_and_set_values_08003fd8"
        },
        "FUN_0800307a": {
            "renaming": {
                "FUN_0800307a": "encode_data_0800307a",
                "param_1": "function_pointer",
                "param_2": "data_length",
                "param_3": "data",
                "param_4": "max_data_length",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "total_bits_encoded",
                "uVar4": "byte_offset"
            },
            "code": "void encode_data_0800307a(uint32_t *function_pointer, uint32_t data_length, uint8_t *data, uint32_t max_data_length) {\n    uint32_t current_byte = (uint32_t)*data;\n    if (max_data_length == 0) {\n        max_data_length = 0xffffffff;\n    }\n    uint32_t bit_offset = 0;\n    uint32_t byte_offset = 0;\n    uint32_t total_bits_encoded = 0;\n    while ((byte_offset < data_length) && (total_bits_encoded < max_data_length)) {\n        (***(code ***)(uint32_t *)*function_pointer)(\n            (uint32_t *)*function_pointer,\n            ((uint32_t)data[byte_offset] << (bit_offset & 0xff) | current_byte) & 0x7f\n        );\n        current_byte = (int)(uint32_t)data[byte_offset] >> (7 - bit_offset & 0xff) & 0xff;\n        bit_offset += 1;\n        while ((total_bits_encoded = total_bits_encoded + 1, bit_offset > 6 && (total_bits_encoded < max_data_length))) {\n            (***(code ***)(uint32_t *)*function_pointer)((uint32_t *)*function_pointer, current_byte & 0x7f);\n            current_byte = current_byte >> 7;\n            bit_offset -= 7;\n        }\n        byte_offset += 1;\n    }\n    if ((bit_offset != 0) && (total_bits_encoded < max_data_length)) {\n        (***(code ***)(uint32_t *)*function_pointer)((uint32_t *)*function_pointer, (1 << (bit_offset & 0xff)) - 1U & current_byte);\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800307a",
            "calling": [
                "FUN_0800319e",
                "FUN_08003106",
                "FUN_080031ce",
                "FUN_08003158",
                "FUN_0800325a"
            ],
            "imported": false,
            "current_name": "encode_data_0800307a"
        },
        "FUN_08004b80": {
            "renaming": {
                "FUN_08004b80": "do_nothing_08004b80"
            },
            "code": "\nvoid do_nothing_08004b80(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b80",
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "imported": false,
            "current_name": "do_nothing_08004b80"
        },
        "FUN_0800319e": {
            "renaming": {
                "FUN_0800319e": "execute_function_on_pointer_0800319e",
                "param_1": "ptr_function_pointer",
                "param_2": "param_2",
                "param_3": "param_3",
                "puVar1": "ptr_function",
                "local_a": "local_param_3",
                "*puVar1": "*ptr_function",
                "FUN_0800307a": "update_param"
            },
            "code": "void execute_function_on_pointer_0800319e(uint32_t *ptr_function_pointer, uint32_t param_2, uint16_t param_3) {\n  uint32_t *ptr_function;\n  uint16_t local_param_3;\n\n  ptr_function = (uint32_t *)*ptr_function_pointer;\n  if (ptr_function != NULL) {\n    local_param_3 = param_3;\n    (**(void (**)(uint32_t *, uint32_t))(ptr_function))(ptr_function, param_2 & 0xf | 0x90);\n    update_param(ptr_function_pointer, 2, &local_param_3);\n  }\n  return;\n}",
            "called": [
                "FUN_0800307a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800319e",
            "calling": [
                "FUN_08002efe"
            ],
            "imported": false,
            "current_name": "execute_function_on_pointer_0800319e"
        },
        "FUN_08008d00": {
            "renaming": {
                "FUN_08008d00": "set_value_at_index_08008d00",
                "param_1": "index",
                "param_2": "value",
                "uVar1": "value_to_set",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "code": "void set_value_at_index_08008d00(int index, uint value) {\n  undefined value_to_set;\n  code *jump_table;\n  if (value < 0x3c) {\n    value_to_set = PTR_DAT_08008d14[value];\n  }\n  else {\n    value_to_set = 0xff;\n  }\n  *(undefined *)(index + 0x12d) = value_to_set;\n  (*jump_table)();\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008d00",
            "calling": [
                "FUN_08008d30"
            ],
            "imported": false,
            "current_name": "set_value_at_index_08008d00"
        },
        "FUN_08009190": {
            "renaming": {
                "FUN_08009190": "call_other_function_and_pass_param_08009190",
                "param_1": "param",
                "PTR_PTR_DAT_0800919c": "ptr_to_ptr_array",
                "FUN_08009270": "call_function_at_address"
            },
            "code": "void call_other_function_and_pass_param_08009190(void* PTR_PTR_DAT_0800919c, int param){\n  call_function_at_address(*(void**)PTR_PTR_DAT_0800919c, param);\n  return;\n}",
            "called": [
                "FUN_08009270"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009190",
            "calling": [
                "FUN_08002e44"
            ],
            "imported": false,
            "current_name": "call_other_function_and_pass_param_08009190"
        },
        "FUN_08004b82": {
            "renaming": {
                "FUN_08004b82": "process_input_08004b82",
                "param_1": "input",
                "cVar1": "current_char",
                "puVar2": "ptr_to_11th_element",
                "PTR_DAT_0804a1e0": "do_nothing_08004a1e",
                "PTR_DAT_0804b800": "do_nothing_08004b80"
            },
            "code": "uint32_t process_input_08004b82(uint32_t **input)\n{\n  char current_char;\n  uint32_t *ptr_to_11th_element = input[0xb];\n  \n  if ((*(uint16_t *)(input + 10) == 0) && ((current_char = *(char *)((int)input + 0x3d)) == '!')) {\n    if ((ptr_to_11th_element == (uint32_t *)0x4) || ((ptr_to_11th_element == (uint32_t *)0x8 || (ptr_to_11th_element == (uint32_t *)0xffff0000)))) {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      **input = **input | 0x200;\n      input[0xc] = (uint32_t *)0x0;\n      *(char *)((int)input + 0x3d) = 0x20;\n      if (*(char *)((int)input + 0x3e) == '@') {\n        *(char *)((int)input + 0x3e) = 0;\n        PTR_DAT_0804b800();\n      }\n      else {\n        *(char *)((int)input + 0x3e) = 0;\n        PTR_DAT_0804a1e0();\n      }\n    }\n    else {\n      (*input)[1] = (*input)[1] & 0xfffff8ff;\n      input[0xc] = (uint32_t *)0x11;\n      *(char *)((int)input + 0x3e) = 0;\n      *(char *)((int)input + 0x3d) = 0x20;\n      PTR_DAT_0804a1e0();\n    }\n  }\n  else if ((current_char == '!') || ((*(char *)((int)input + 0x3e) == '@' && (current_char == '\"')))) {\n    if (*(uint16_t *)((int)input + 0x2a) == 0) {\n      (*input)[1] = (*input)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)input + 0x3e) == '@') {\n      if (input[0x14] == (uint32_t *)0x0) {\n        if (input[0x13] == (uint32_t *)0x1) {\n          (*input)[4] = (uint32_t)input[0x12] & 0xff;\n          input[0x14] = (uint32_t *)((int)input[0x14] + 2);\n        }\n        else {\n          (*input)[4] = (uint32_t)((int)input[0x12] << 0x10) >> 0x18;\n          input[0x14] = (uint32_t *)((int)input[0x14] + 1);\n        }\n      }\n      else if (input[0x14] == (uint32_t *)0x1) {\n        (*input)[4] = (uint32_t)input[0x12] & 0xff;\n        input[0x14] = (uint32_t *)((int)input[0x14] + 1);\n      }\n      else if (input[0x14] == (uint32_t *)0x2) {\n        if (*(char *)((int)input + 0x3d) == '\"') {\n          **input = **input | 0x100;\n        }\n        else if (*(char *)((int)input + 0x3d) == '!') {\n          uint32_t *ptr_to_9th_element = input[9];\n          input[9] = (uint32_t *)((int)ptr_to_9th_element + 1);\n          (*input)[4] = (uint32_t)*(uint8_t *)ptr_to_9th_element;\n          *(uint16_t *)((int)input + 0x2a) = *(uint16_t *)((int)input + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      uint32_t *ptr_to_9th_element = input[9];\n      input[9] = (uint32_t *)((int)ptr_to_9th_element + 1);\n      (*input)[4] = (uint32_t)*(uint8_t *)ptr_to_9th_element;\n      *(uint16_t *)((int)input + 0x2a) = *(uint16_t *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n",
            "called": [
                "FUN_08004b80",
                "FUN_08004a1e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004b82",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_input_08004b82"
        },
        "FUN_0800997e": {
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "start_index",
                "param_2": "end_index",
                "iVar1": "current_index",
                "iVar2": "last_index",
                "FUN_08009938": "find_next_occurrence"
            },
            "code": "int find_last_occurrence_0800997e(int start_index, int end_index, undefined4 param_3, undefined4 param_4) {\n  int last_index = -1;\n  if (end_index != 0) {\n    int current_index = start_index;\n    while (current_index = find_next_occurrence(start_index, end_index, param_3, current_index, param_4), current_index != 0) {\n      start_index = current_index + 1;\n      last_index = current_index;\n    }\n    return last_index;\n  }\n  last_index = find_next_occurrence();\n  return last_index;\n}",
            "called": [
                "FUN_08009938"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800997e",
            "calling": [
                "FUN_08002e44"
            ],
            "imported": false,
            "current_name": "find_last_occurrence_0800997e"
        },
        "FUN_08002dbc": {
            "renaming": {
                "FUN_08002dbc": "check_param_08002dbc",
                "param_1": "param1",
                "param_2": "param2",
                "FUN_08002ce0": "execute_function"
            },
            "code": "void check_param_08002dbc(int param1, int param2)\n{\n    if (param1 != 1) {\n        return;\n    }\n    if (param2 == 0xffff) {\n        execute_function(PTR_DAT_08002dd8);\n    }\n    return;\n}",
            "called": [
                "FUN_08002ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002dbc",
            "calling": [],
            "imported": false,
            "current_name": "check_param_08002dbc"
        },
        "FUN_08002e44": {
            "renaming": {
                "FUN_08002e44": "calculate_string_length_08002e44",
                "param_1": "string_address",
                "param_2": "string_length",
                "param_3": "character_1",
                "param_4": "character_2",
                "iVar3": "cpp_string_address",
                "iVar4": "forward_slash_index",
                "bVar1": "string_offset",
                "cVar2": "character_offset",
                "puVar5": "string_pointer"
            },
            "code": "void calculate_string_length_08002e44(int string_address, int string_length, undefined character_1, undefined character_2)\n{\n  byte string_offset;\n  char character_offset;\n  int cpp_string_address = find_substring(string_length, PTR_s__cpp_08002ec0);\n  int forward_slash_index = find_substring(string_length, 0x2f);\n  if (forward_slash_index == 0) {\n    forward_slash_index = find_substring(string_length, 0x5c);\n  }\n  if (forward_slash_index != 0) {\n    string_length = forward_slash_index + 1;\n  }\n  if (cpp_string_address == 0) {\n    character_offset = get_character(string_length);\n    *(char *)(string_address + 0xc4) = character_offset + '\\x02';\n  }\n  else {\n    *(char *)(string_address + 0xc4) = ((char)cpp_string_address - (char)string_length) + '\\x02';\n  }\n  allocate_memory(*(undefined4 *)(string_address + 200));\n  string_offset = *(byte *)(string_address + 0xc4);\n  undefined *string_pointer = (undefined *)allocate_memory(string_offset + 1);\n  *(undefined **)(string_address + 200) = string_pointer;\n  string_pointer[string_offset] = 0;\n  *string_pointer = character_1;\n  string_pointer[1] = character_2;\n  copy_string(string_pointer + 2, string_length, *(byte *)(string_address + 0xc4) - 2);\n  return;\n}\n",
            "called": [
                "FUN_080091a0",
                "FUN_0800997e",
                "FUN_080099a4",
                "FUN_08009954",
                "FUN_08009190",
                "FUN_08000178"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e44",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "calculate_string_length_08002e44"
        },
        "FUN_0800242c": {
            "renaming": {
                "FUN_0800242c": "send_data_to_server_0800242c",
                "param_1": "server_address",
                "param_2": "timeout_ms",
                "param_3": "port_number",
                "param_4": "data",
                "FUN_08007648": "send_data",
                "PTR_LAB_08002444_1_08002440": "data_length"
            },
            "code": "void send_data_to_server_0800242c(int server_address, int timeout_ms, int port_number, char *data, int PTR_LAB_08002444_1_08002440)\n{\n  send_data(server_address, timeout_ms, port_number, data, PTR_LAB_08002444_1_08002440);\n  return;\n}",
            "called": [
                "FUN_08007648"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800242c",
            "calling": [
                "FUN_080025ac"
            ],
            "imported": false,
            "current_name": "send_data_to_server_0800242c"
        },
        "FUN_080058d2": {
            "renaming": {
                "FUN_080058d2": "perform_task_080058d2",
                "param_1": "task_flags",
                "param_2": "task_param",
                "puVar1": "task_data",
                "iVar2": "time_start",
                "iVar3": "time_now",
                "uVar4": "wait_time",
                "DAT_08005a10": "status",
                "DAT_08005a0c": "task_data",
                "PTR_DAT_08005a18": "result_ptr",
                "PTR_DAT_08005a14": "result_shift"
            },
            "code": "uint32_t perform_task_080058d2(uint32_t *task_flags, uint32_t task_param) {\n  uint32_t *DAT_08005a10 = DAT_08005a10;\n  uint32_t *DAT_08005a0c = DAT_08005a0c;\n  uint32_t time_start;\n  uint32_t time_now;\n  uint32_t wait_time;\n\n  if ((*task_flags & 2) != 0) {\n    DAT_08005a10[1] = (DAT_08005a10[1] & 0xffffff0f) | DAT_08005a0c[2];\n  }\n\n  if ((*task_flags & 1) != 0) {\n    uint32_t operation = DAT_08005a0c[1];\n    if (operation == 1) {\n      if ((*DAT_08005a10 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (operation != 2 && ((*DAT_08005a10 & 2) == 0)) {\n      return 1;\n    }\n    DAT_08005a10[1] = operation | (DAT_08005a10[1] & 0xfffffffc);\n    time_start = FUN_08003760();\n    if (operation == 1) {\n      while ((DAT_08005a10[1] & 0xc) != 4) {\n        time_now = FUN_08003760();\n        wait_time = time_now - time_start;\n        if (wait_time > 5000) {\n          return 3;\n        }\n      }\n    }\n    else if (operation == 2) {\n      while ((DAT_08005a10[1] & 0xc) != 8) {\n        time_now = FUN_08003760();\n        wait_time = time_now - time_start;\n        if (wait_time > 5000) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((DAT_08005a10[1] & 0xc) != 0) {\n        time_now = FUN_08003760();\n        wait_time = time_now - time_start;\n        if (wait_time > 5000) {\n          return 3;\n        }\n      }\n    }\n  }\n\n  if ((task_param < (*DAT_08005a0c & 7)) && (*DAT_08005a0c = (*DAT_08005a0c & 0xfffffff8) | task_param, task_param != (*DAT_08005a0c & 7))) {\n    return 1;\n  }\n\n  if ((*task_flags & 4) != 0) {\n    DAT_08005a10[1] = (DAT_08005a10[1] & 0xfffff8ff) | DAT_08005a0c[3];\n  }\n\n  if ((*task_flags & 8) != 0) {\n    DAT_08005a10[1] = (DAT_08005a10[1] & 0xffffc7ff) | (DAT_08005a0c[4] << 3);\n  }\n\n  uint32_t result = FUN_08005840();\n  *(uint32_t *)PTR_DAT_08005a18 = result >> PTR_DAT_08005a14[(DAT_08005a10[1] << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}",
            "called": [
                "FUN_08003760",
                "FUN_080036d8",
                "FUN_08005840"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058d2",
            "calling": [
                "FUN_080058ac"
            ],
            "imported": false,
            "current_name": "perform_task_080058d2"
        },
        "FUN_08002c00": {
            "renaming": {
                "FUN_08002c00": "execute_program_08002c00",
                "FUN_08002b68": "initialize_program"
            },
            "code": "void execute_program_08002c00(void)\n{\n  initialize_program();\n  return;\n}",
            "called": [
                "FUN_08002b68"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c00",
            "calling": [
                "FUN_08002c14"
            ],
            "imported": false,
            "current_name": "execute_program_08002c00"
        },
        "FUN_08003f30": {
            "renaming": {
                "FUN_08003f30": "write_bits_to_memory_08003f30",
                "param_1": "memory_address",
                "param_2": "bits_to_write",
                "param_3": "mask",
                "uVar1": "bits_to_shift",
                "uVar2": "num_bits_to_write",
                "DAT_08003f8c": "ptr_data_1",
                "DAT_08003f90": "ptr_data_2"
            },
            "code": "void write_bits_to_memory_08003f30(uint memory_address, uint bits_to_write, uint mask)\n{\n  uint bits_to_shift = (uint)(*(int *)(DAT_08003f8c + 0xc) << 0x15) >> 0x1d;\n  uint num_bits_to_write = 7 - bits_to_shift;\n  if (num_bits_to_write > 3) {\n    num_bits_to_write = 4;\n  }\n  if (bits_to_shift + 4 < 7) {\n    bits_to_shift = 0;\n  }\n  else {\n    bits_to_shift = bits_to_shift - 3;\n  }\n  uint bits_to_write_shifted = (bits_to_write & (1 << (num_bits_to_write & 0xff)) - 1U) << (bits_to_shift & 0xff) | (1 << (bits_to_shift & 0xff)) - 1U & mask;\n  if ((int)memory_address < 0) {\n    *(char *)(DAT_08003f90 + (memory_address & 0xf)) = (char)(bits_to_write_shifted << 4);\n  }\n  else {\n    *(char *)(memory_address + 0xe000e400) = (char)(bits_to_write_shifted << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f30",
            "calling": [
                "FUN_080036d8",
                "FUN_080077b0",
                "FUN_08007648",
                "FUN_08008694",
                "FUN_0800863c",
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "write_bits_to_memory_08003f30"
        },
        "FUN_08007f78": {
            "renaming": {
                "FUN_08007f78": "subtract_four_from_param_08007f78",
                "param_1": "input_param",
                "return": "result"
            },
            "code": "int subtract_four_from_param_08007f78(int input_param)\n{\n  int result = input_param - 4;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f78",
            "calling": [
                "FUN_08007ff0",
                "FUN_08008020",
                "FUN_08007fa0"
            ],
            "imported": false,
            "current_name": "subtract_four_from_param_08007f78"
        },
        "FUN_08006b28": {
            "renaming": {
                "FUN_08006b28": "get_bit_from_uint_at_index_08006b28",
                "param_1": "num",
                "param_2": "index",
                "PTR_": "ptr",
                "DAT_": "masked_num"
            },
            "code": "uint get_bit_from_uint_at_index_08006b28(uint num, int index) {\n    uint* PTR_ = (uint*)(index + ((num << 0x18) >> 0x1c) * 4);\n    uint DAT_ = num & 0xf;\n    uint result = (*PTR_ >> DAT_) & 1;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b28",
            "calling": [
                "FUN_080088e0",
                "FUN_08008a6c",
                "FUN_08008990",
                "FUN_08008a24"
            ],
            "imported": false,
            "current_name": "get_bit_from_uint_at_index_08006b28"
        },
        "FUN_080085dc": {
            "renaming": {
                "FUN_080085dc": "is_valid_input_080085dc",
                "param_1": "input",
                "uVar1": "result",
                "PTR_DAT_080085fc": "ptr_data"
            },
            "code": "bool is_valid_input_080085dc(int input)\n{\n    uint32_t ptr = PTR_DAT_080085fc + (uint32_t)*(byte *)(input + 0x44) * 4;\n    uint32_t result = FUN_08006b1c(*(uint32_t *)(ptr));\n    return (result & 0x21) == 0x21;\n}",
            "called": [
                "FUN_08006b1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080085dc",
            "calling": [],
            "imported": false,
            "current_name": "is_valid_input_080085dc"
        },
        "FUN_08006b1c": {
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "ptr_param",
                "*(byte *)(param_1 + 0x3a)": "byte_1",
                "*(byte *)(param_1 + 0x39)": "byte_2",
                "combined_byte": "combined_byte"
            },
            "code": "byte combine_bytes_08006b1c(int ptr_param)\n{\n    byte byte_1 = *(byte *)(ptr_param + 0x3a);\n    byte byte_2 = *(byte *)(ptr_param + 0x39);\n    byte combined_byte = byte_1 | byte_2;\n    return combined_byte;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b1c",
            "calling": [
                "FUN_080085dc",
                "FUN_080085b8"
            ],
            "imported": false,
            "current_name": "combine_bytes_08006b1c"
        },
        "FUN_08008ed6": {
            "renaming": {
                "FUN_08008ed6": "execute_function_08008ed6",
                "param_1": "function_ptr",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "code": "void execute_function_08008ed6(uint32_t *function_ptr, uint32_t arg1, uint32_t arg2, uint32_t arg3)\n{\n  if (arg2 != 0) {\n    execute_function_08008ed6(function_ptr, arg1, arg2 & 0xff, arg3);\n    return;\n  }\n  (**(code **)*function_ptr)(function_ptr, arg1 & 0xff, 0, *(code **)*function_ptr, arg3);\n  return;\n}",
            "called": [
                "FUN_08008e7c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ed6",
            "calling": [
                "FUN_08008eec"
            ],
            "imported": false,
            "current_name": "execute_function_08008ed6"
        },
        "FUN_0800a130": {
            "renaming": {
                "FUN_0800a130": "process_data_0800a130",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "puVar1": "ptr_data",
                "iVar2": "status"
            },
            "code": "void process_data_0800a130(int *result, undefined4 arg1, undefined4 arg2, undefined4 arg3)\n{\n  undefined *ptr_data = PTR_DAT_0800a150;\n  *(undefined4 *)PTR_DAT_0800a150 = 0;\n  int status = do_processing(arg1, arg2, arg3, arg3, arg3);\n  if ((status == -1) && (*(int *)ptr_data != 0)) {\n    *result = *(int *)ptr_data;\n  }\n  return;\n}",
            "called": [
                "FUN_08008854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a130",
            "calling": [
                "FUN_0800a042",
                "FUN_0800a07a"
            ],
            "imported": false,
            "current_name": "process_data_0800a130"
        },
        "FUN_08008f3c": {
            "renaming": {
                "FUN_08008f3c": "count_bits_set_08008f3c",
                "param_1": "number",
                "cVar1": "bits_set"
            },
            "code": "char count_bits_set_08008f3c(uint number) {\n  char bits_set = 0;\n  while (number != 1) {\n    bits_set++;\n    number = number >> 1;\n  }\n  return bits_set;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008f3c",
            "calling": [
                "FUN_08009094"
            ],
            "imported": false,
            "current_name": "count_bits_set_08008f3c"
        },
        "FUN_08002ef2": {
            "renaming": {
                "FUN_08002ef2": "calculate_result_08002ef2",
                "param_1": "input_val",
                "result": "result"
            },
            "code": "void calculate_result_08002ef2(int input_val, undefined4 param_2, undefined2 param_3, undefined4 param_4)\n{\n  int result = input_val + 0x40;\n  FUN_08003158(result, param_2, param_3, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_08003158"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef2",
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "imported": false,
            "current_name": "calculate_result_08002ef2"
        },
        "FUN_08007332": {
            "renaming": {
                "FUN_08007332": "find_value_from_array_08007332",
                "param_1": "search_value",
                "param_2": "array_ptr",
                "PTR_": "",
                "DAT_": "",
                "*param_2": "*array_ptr"
            },
            "code": "int find_value_from_array_08007332(int search_value, char *array_ptr)\n{\n  while(true)\n  {\n    if(*(int *)(array_ptr + 4) == 0)\n    {\n      return -1;\n    }\n    if(*(int *)(array_ptr + 4) == search_value)\n    {\n      break;\n    }\n    array_ptr = array_ptr + 0xc;\n  }\n  return (int)*array_ptr;\n}",
            "called": [
                "FUN_08007332"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007332",
            "calling": [
                "FUN_08007332",
                "FUN_0800734a"
            ],
            "imported": false,
            "current_name": "find_value_from_array_08007332"
        },
        "FUN_08006128": {
            "renaming": {
                "FUN_08006128": "process_data_08006128",
                "param_1": "data",
                "param_2": "data_size",
                "param_3": "operation_type",
                "*(char *)(param_1 + 0xf)": "*(char *)(data + 0xf)",
                "*(char *)((int)param_1 + 0x3d)": "*(char *)((int)data + 0x3d)",
                "FUN_08005cec": "perform_operation_1",
                "FUN_080060c4": "perform_operation_2",
                "FUN_08005d48": "perform_operation_3",
                "FUN_08005dac": "perform_operation_4"
            },
            "code": "int process_data_08006128(int *data, int data_size, int operation_type) {\n  if (*(char *)(data + 0xf) != '\\x01') {\n    *(char *)(data + 0xf) = 1;\n    *(char *)((int)data + 0x3d) = 2;\n    switch(operation_type) {\n      case 0:\n        perform_operation_1(*data);\n        break;\n      case 4:\n        perform_operation_2(*data);\n        break;\n      case 8:\n        perform_operation_3(*data);\n        break;\n      case 0xc:\n        perform_operation_4(*data);\n        break;\n    }\n    *(char *)((int)data + 0x3d) = 1;\n    *(char *)(data + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}",
            "called": [
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec",
                "FUN_08005d48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006128",
            "calling": [
                "FUN_08007648"
            ],
            "imported": false,
            "current_name": "process_data_08006128"
        },
        "FUN_08003658": {
            "renaming": {
                "FUN_08003658": "copy_data_and_call_functions_08003658",
                "iVar1": "index",
                "puVar2": "data_ptr",
                "UNRECOVERED_JUMPTABLE": "jumptable_ptr"
            },
            "code": "void copy_data_and_call_functions_08003658(void)\n{\n  int index;\n  undefined4 *data_ptr;\n  code *jumptable_ptr;\n  for (index = 0; PTR_DAT_08003690 + index < PTR_DAT_08003694; index += 4) {\n    *(undefined4 *)(PTR_DAT_08003690 + index) = *(undefined4 *)(DAT_0800368c + index);\n  }\n  for (data_ptr = (undefined4 *)PTR_DAT_08003698; data_ptr < PTR_DAT_0800369c; data_ptr++) {\n    *data_ptr = 0;\n  }\n  call_function_1();\n  call_function_2();\n  jumptable_ptr = (code *)0x800368a;\n  call_function_3(jumptable_ptr);\n  return;\n}",
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003658",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_call_functions_08003658"
        },
        "FUN_08009a80": {
            "renaming": {
                "FUN_08009a80": "extract_value_08009a80",
                "*param_1": "*output",
                "*param_2": "*input",
                "uVar1": "value",
                "uVar2": "flags",
                "iVar3": "ptr"
            },
            "code": "uint extract_value_08009a80(undefined4 *output, undefined4 *input) {\n  uint value;\n  ushort flags;\n  int ptr = *(int *)PTR_PTR_DAT_08009b4c;\n  if ((ptr != 0) && (*(int *)(ptr + 0x18) == 0)) {\n    free(ptr);\n  }\n  if (input == (undefined4 *)PTR_DAT_08009b50) {\n    input = *(undefined4 **)(ptr + 4);\n  }\n  else if (input == (undefined4 *)PTR_DAT_08009b54) {\n    input = *(undefined4 **)(ptr + 8);\n  }\n  else if (input == (undefined4 *)PTR_DAT_08009b58) {\n    input = *(undefined4 **)(ptr + 0xc);\n  }\n  flags = *(ushort *)(input + 3);\n  value = (uint)flags;\n  if (-1 < (int)(value << 0x1c)) {\n    if (-1 < (int)(value << 0x1b)) {\n      *output = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(value << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          free(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    free(output, input);\n  }\n  flags = *(ushort *)(input + 3);\n  value = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      value = input[5];\n    }\n    input[2] = value;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    flags = *(ushort *)(input + 3);\n    value = (int)(short)flags & 0x80;\n    if (value != 0) {\n      *(ushort *)(input + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    value = 0;\n  }\n  return value;\n}",
            "called": [
                "FUN_08009eac",
                "FUN_08009d50",
                "FUN_080091d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009a80",
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "imported": false,
            "current_name": "extract_value_08009a80"
        },
        "FUN_08004a74": {
            "renaming": {
                "FUN_08004a74": "do_nothing_08004a74"
            },
            "code": "\nvoid do_nothing_08004a74(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a74",
            "calling": [
                "FUN_08005084",
                "FUN_08004a76"
            ],
            "imported": false,
            "current_name": "do_nothing_08004a74"
        },
        "FUN_080062f4": {
            "renaming": {
                "FUN_080062f4": "set_bit_080062f4",
                "param_1": "bits_array",
                "param_2": "bit_index",
                "puVar1": "bits",
                "DAT_0800638c": "DAT_0800638c",
                "PTR_080482e8": "PTR_080482e8",
                "PTR_FUN_08006262": "set_bits",
                "ptr": "ptr"
            },
            "code": "uint32_t set_bit_080062f4(uint32_t **bits_array, uint32_t bit_index) {\\n\\\n        uint32_t *bits = *bits_array;\\n\\\n        switch(bit_index) {\\n\\\n            case 0:\\n\\\n                bits[3] &= 0xfffffffd;\\n\\\n                break;\\n\\\n            case 4:\\n\\\n                bits[3] &= 0xfffffffb;\\n\\\n                break;\\n\\\n            case 8:\\n\\\n                bits[3] &= 0xfffffff7;\\n\\\n                break;\\n\\\n            case 12:\\n\\\n                bits[3] &= 0xffffffef;\\n\\\n                break;\\n\\\n        }\\n\\\n        PTR_FUN_08006262(bits_array, bit_index, 0);\\n\\\n        uint32_t *ptr = *bits_array;\\n\\\n        if (((ptr == DAT_0800638c) && ((ptr[8] & 0x1111) == 0)) && ((ptr[8] & 0x444) == 0)) {\\n\\\n            ptr[0x11] &= 0xffff7fff;\\n\\\n        }\\n\\\n        ptr = *bits_array;\\n\\\n        if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\\n\\\n            *ptr &= 0xfffffffe;\\n\\\n        }\\n\\\n        return 0;\\n\\\n    }",
            "called": [
                "FUN_08006262"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080062f4",
            "calling": [
                "FUN_080076e0"
            ],
            "imported": false,
            "current_name": "set_bit_080062f4"
        },
        "FUN_080073e8": {
            "renaming": {
                "FUN_080073e8": "do_nothing_loop_080073e8"
            },
            "code": "void do_nothing_loop_080073e8(void)\n{\n  while(true) {\n    /* Do nothing */\n  }\n}",
            "called": [
                "FUN_080073e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073e8",
            "calling": [
                "FUN_080073e8",
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "do_nothing_loop_080073e8"
        },
        "FUN_08004a76": {
            "renaming": {
                "FUN_08004a76": "process_input_08004a76",
                "param_1": "input_array",
                "cVar1": "last_char",
                "puVar2": "output_ptr"
            },
            "code": "int process_input_08004a76(int *input_array)\n{\n  char last_char = *(char *)((int)input_array + 0x3d);\n  if (*(short *)((int)input_array + 0x2a) != 0) {\n    undefined *output_ptr = (undefined *)input_array[9];\n    input_array[9] = (int)(output_ptr + 1);\n    *output_ptr = (char)*(undefined4 *)(*input_array + 0x10);\n    *(short *)((int)input_array + 0x2a) = *(short *)((int)input_array + 0x2a) + -1;\n    if ((*(short *)((int)input_array + 0x2a) == 0) && (last_char == '*')) {\n      *(uint *)(*input_array + 4) = *(uint *)(*input_array + 4) & 0xfffffbff;\n      input_array[0xc] = 0x22;\n      *(undefined *)((int)input_array + 0x3d) = 0x28;\n      do_nothing_08004a74();\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a76",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_input_08004a76"
        },
        "FUN_0800877c": {
            "renaming": {
                "FUN_0800877c": "do_nothing_0800877c"
            },
            "code": "\nvoid do_nothing_0800877c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800877c",
            "calling": [
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "do_nothing_0800877c"
        },
        "FUN_0800267c": {
            "renaming": {
                "FUN_0800267c": "update_value_if_less_than_12_0800267c",
                "param_1": "value_ptr",
                "param_2": "current_value",
                "iVar1": "new_value",
                "first_calculation": "first_calculation",
                "second_calculation": "second_calculation"
            },
            "code": "void update_value_if_less_than_12_0800267c(byte *value_ptr, int current_value) {\n  int new_value;\n  if (*value_ptr < 0xc) {\n    int first_calculation = (0x88 - (char)value_ptr[1]) * 4;\n    int second_calculation = (600 - (char)value_ptr[2]) * 4;\n    if ((first_calculation - current_value == 0 || first_calculation < current_value) && (current_value == second_calculation || current_value + (600 - (char)value_ptr[2]) * -4 < 0 != SBORROW4(current_value, second_calculation))) {\n      new_value = current_value;\n    }\n    *(int *)(PTR_DAT_080026ac + (uint)*value_ptr * 8 + 4) = new_value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800267c",
            "calling": [
                "FUN_080026b0"
            ],
            "imported": false,
            "current_name": "update_value_if_less_than_12_0800267c"
        },
        "FUN_080047f4": {
            "renaming": {
                "FUN_080047f4": "process_input_080047f4",
                "param_1": "input_ptr",
                "param_2": "input_data",
                "param_3": "output_data",
                "param_4": "param_4",
                "uVar1": "result",
                "puVar2": "current_input_ptr",
                "local_c": "loop_count"
            },
            "code": "uint32_t process_input_080047f4(uint32_t **input_ptr, uint32_t *input_data, uint32_t *output_data, uint16_t param_4) {\n  uint32_t result;\n  uint32_t *current_input_ptr;\n  int32_t loop_count;\n  \n  if ((*input_ptr)[0x3d] == ' ') {\n    loop_count = (uint32_t)(((uint64_t)DAT_080048c0 * (uint64_t)((*PTR_DAT_080048bc) >> 3)) >> 0x28) * 0x19;\n    do {\n      if (loop_count == 0) {\n        input_ptr[0xc] = NULL;\n        (*input_ptr)[0x3d] = 0x20;\n        input_ptr[0xf] = 0;\n        return 3;\n      }\n      current_input_ptr = *input_ptr;\n      loop_count--;\n    } while ((current_input_ptr[6] & 2) != 0);\n    if ((*input_ptr)[0xf] == 1) {\n      result = 2;\n    }\n    else {\n      input_ptr[0xf] = 1;\n      if ((*current_input_ptr & 1) == 0) {\n        *current_input_ptr = *current_input_ptr | 1;\n      }\n      **input_ptr = **input_ptr & 0xfffff7ff;\n      (*input_ptr)[0x3d] = 0x22;\n      (*input_ptr)[0x3e] = 0x10;\n      result = 0;\n      input_ptr[0x10] = NULL;\n      input_ptr[9] = output_data;\n      (*input_ptr)[0xb] = DAT_080048c4;\n      input_ptr[10] = &param_4;\n      input_ptr[0x11] = input_data;\n      **input_ptr = **input_ptr | 0x400;\n      **input_ptr = **input_ptr | 0x100;\n      input_ptr[0xf] = 0;\n      (*input_ptr)[1] = (*input_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080047f4",
            "calling": [
                "FUN_08007f0e"
            ],
            "imported": false,
            "current_name": "process_input_080047f4"
        },
        "FUN_0800376c": {
            "renaming": {
                "FUN_0800376c": "check_param_0800376c",
                "param_1": "param_list",
                "param_2": "param_count",
                "iVar1": "time_start",
                "uVar2": "uVar2",
                "iVar3": "uVar3",
                "uVar4": "result",
                "puVar5": "param",
                "uVar6": "uVar6",
                "local_1c": "local_var"
            },
            "code": "uint32_t check_param_0800376c(uint32_t **param_list, uint32_t param_count) {\n    uint32_t time_start = get_start_time();\n    uint32_t *param = *param_list;\n    uint32_t result = 0;\n    uint32_t local_var = 0;\n    \n    if ((param[2] & 0x100) == 0) {\n        if (((param[1] & 0x100) == 0) && ((param[0xb] & 0xf00000) == 0)) {\n            while ((**param_list & 2) == 0) {\n                if ((param_count != 0xffffffff) && ((param_count != 0) && (get_start_time() - time_start > param_count))) {\n                    (*param_list)[10] |= 4;\n                    (*param_list)[9] = 0;\n                    return 3;\n                }\n            }\n            (*param_list)[10] |= 4;\n            (*param_list)[9] = 0;\n            result = 3;\n        } else {\n            uint32_t uVar6 = *(uint32_t *)PTR_DAT_080038c8;\n            uint32_t uVar2 = FUN_08005bb8(2);\n            uint32_t *param = *param_list;\n            if (((param[4] & DAT_080038cc) == 0) && ((param[3] & DAT_080038cc + 0xdc000000) == 0)) {\n                if ((param[4] & DAT_080038d0) == 0) {\n                    if ((param[3] & DAT_080038d4) == 0) {\n                        local_var = 0x14;\n                    } else {\n                        local_var = 0x29;\n                    }\n                } else {\n                    local_var = 0x29;\n                }\n            } else if (((param[4] & DAT_080038d0) == 0) && ((param[3] & DAT_080038d0 + 0xee000000) == 0)) {\n                local_var = 0x54;\n            } else if ((DAT_080038d8 & param[4]) == 0) {\n                if ((DAT_080038d8 & param[3]) == 0) {\n                    local_var = 0x54;\n                } else {\n                    local_var = 0xfc;\n                }\n            } else {\n                local_var = 0xfc;\n            }\n            uint32_t uVar3 = (uVar6 / uVar2) * local_var;\n            while ((local_var <= uVar3) && (uVar3 - local_var != 0)) {\n                if ((param_count != 0xffffffff) && ((param_count != 0) && (get_start_time() - time_start > param_count))) {\n                    (*param_list)[10] |= 4;\n                    (*param_list)[9] = 0;\n                    return 3;\n                }\n                local_var++;\n            }\n            **param_list = 0xffffffed;\n            (*param_list)[10] |= 0x200;\n            if (((*param_list)[2] & 0xe0000) == 0xe0000) {\n                if (param_list[3] == (uint32_t *)0x0) {\n                    (*param_list)[10] &= 0xfffffeff;\n                    if (((*param_list)[10] & 0x1000) == 0) {\n                        (*param_list)[10] |= 1;\n                        result = 0;\n                    } else {\n                        result = 0;\n                    }\n                } else {\n                    result = 0;\n                }\n            } else {\n                result = 0;\n            }\n        }\n    } else {\n        (*param_list)[10] |= 0x20;\n        (*param_list)[9] = 0;\n        result = 1;\n    }\n    return result;\n}",
            "called": [
                "FUN_08003760",
                "FUN_08005bb8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800376c",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "check_param_0800376c"
        },
        "FUN_08003e20": {
            "renaming": {
                "FUN_08003e20": "process_data_08003e20",
                "param_1": "data",
                "iVar1": "status",
                "uVar2": "divisor",
                "iVar3": "start_time",
                "iVar4": "current_time",
                "uVar5": "last_time",
                "local_14": "local_var"
            },
            "code": "int process_data_08003e20(int *data)\n{\n    int status = 0;\n    uint divisor = 0;\n    int start_time = 0;\n    int current_time = 0;\n    int last_time = 0;\n    int local_var = 0;\n    \n    if (*(char *)(data + 9) == '\\x01') {\n        return 2;\n    }\n    \n    *(undefined *)(data + 9) = 1;\n    \n    status = check_data_validity();\n    if (status == 0) {\n        data[10] = data[10] & 0xffffeefdU | 2;\n        divisor = *(uint *)PTR_DAT_08003f08;\n        divisor = FUN_08005bb8(2);\n        local_var = *(uint *)PTR_DAT_08003f08 / divisor << 1;\n        while (local_var != 0) {\n            local_var = local_var - 1;\n        }\n        update_data(data);\n        *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n        start_time = get_current_time();\n        while ((*(uint *)(*data + 8) & 8) != 0) {\n            current_time = get_current_time();\n            if (10 < (uint)(current_time - start_time)) {\n                data[10] = data[10] & 0xffffffedU | 0x10;\n                *(undefined *)(data + 9) = 0;\n                return 1;\n            }\n        }\n        *(uint *)(current_time + 8) = *(uint *)(current_time + 8) | 4;\n        last_time = get_current_time();\n        while ((*(uint *)(*data + 8) & 4) != 0) {\n            current_time = get_current_time();\n            if (10 < (uint)(current_time - last_time)) {\n                data[10] = data[10] & 0xffffffedU | 0x10;\n                *(undefined *)(data + 9) = 0;\n                return 1;\n            }\n        }\n        data[10] = data[10] & 0xfffffffcU | 1;\n    }\n    \n    *(undefined *)(data + 9) = 0;\n    return status;\n}",
            "called": [
                "FUN_08003760",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003a20"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003e20",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "process_data_08003e20"
        },
        "FUN_08005a48": {
            "renaming": {
                "FUN_08005a48": "calculate_shifted_value_08005a48",
                "uVar1": "shifted_value",
                "FUN_08005a1c": "get_value_from_another_function",
                "PTR_DAT_08005a64": "array_of_shift_values",
                "DAT_08005a60": "global_variable"
            },
            "code": "unsigned int calculate_shifted_value_08005a48(void)\n{\n  unsigned int shifted_value;\n  shifted_value = get_value_from_another_function();\n  unsigned int index = (*(int *)(DAT_08005a60 + 4) << 0x12) >> 0x1d;\n  unsigned int shifted_value_after_index_shift = shifted_value >> PTR_DAT_08005a64[index];\n  return shifted_value_after_index_shift;\n}",
            "called": [
                "FUN_08005a1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a48",
            "calling": [
                "FUN_08005bb8",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08005a48"
        },
        "FUN_080033a8": {
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "dest",
                "param_2": "size",
                "param_3": "src",
                "iVar2": "dest_index",
                "uVar3": "src_index",
                "bVar1": "byte1"
            },
            "code": "void copy_and_shift_bits_080033a8(uint8_t *dest, uint32_t size, uint8_t *src)\n{\n  uint32_t dest_index = 0;\n  for (uint32_t src_index = 0; src_index < size; src_index += 2) {\n    uint8_t bVar1 = *(src + src_index);\n    *(dest + dest_index) = bVar1;\n    *(dest + dest_index) = (*(src + src_index + 1) << 7) | bVar1;\n    dest_index++;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080033a8",
            "calling": [
                "FUN_080033cc"
            ],
            "imported": false,
            "current_name": "copy_and_shift_bits_080033a8"
        },
        "FUN_08002c14": {
            "renaming": {
                "FUN_08002c14": "call_08002c14_08002c14",
                "FUN_08002c00": "call_FUN_08002c00"
            },
            "code": "void call_08002c14_08002c14(void)\n{\n  call_FUN_08002c00();\n  return;\n}",
            "called": [
                "FUN_08002c00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c14",
            "calling": [
                "FUN_08001c18"
            ],
            "imported": false,
            "current_name": "call_08002c14_08002c14"
        },
        "FUN_08008d18": {
            "renaming": {
                "FUN_08008d18": "get_value_at_index_08008d18",
                "param_1": "index",
                "param_2": "max_index",
                "uVar1": "value"
            },
            "code": "void get_value_at_index_08008d18(int index, uint8_t max_index) {\n  uint8_t value = max_index < 0x3c ? PTR_DAT_08008d2c[max_index] : 0xff;\n  *(uint8_t *)(index + 300) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008d18",
            "calling": [
                "FUN_08008d30"
            ],
            "imported": false,
            "current_name": "get_value_at_index_08008d18"
        },
        "FUN_08009084": {
            "renaming": {
                "FUN_08009084": "execute_function_08009084",
                "param_1": "function_ptr",
                "iVar1": "index",
                "FUN_0800a18c": "initialize",
                "FUN_08008f3c": "get_result_index",
                "PTR_DAT_080090b0": "PTR_DAT_080090b0",
                "*0x14": "*0x14",
                "result_index": "result_index"
            },
            "code": "void execute_function_08009084(int function_ptr) {\n  int index = *(int *)(function_ptr + 8);\n  if (index != 0) {\n    (**(code **)(function_ptr + 0xc))();\n    return;\n  }\n  initialize();\n  int result_index = get_result_index();\n  if (*(int *)(PTR_DAT_080090b0 + result_index * 0x14 + 0xc) != 0) {\n    execute_function_08009084();\n  }\n  return;\n}",
            "called": [
                "FUN_0800a18c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009084",
            "calling": [
                "FUN_08009094"
            ],
            "imported": false,
            "current_name": "execute_function_08009084"
        },
        "FUN_0800a020": {
            "renaming": {
                "FUN_0800a020": "calculate_new_value_0800a020",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "result_1",
                "uVar2": "new_value",
                "bVar3": "is_positive"
            },
            "code": "void calculate_new_value_0800a020(undefined4 input_1, int input_2)\n{\n  int result_1 = calculate_offset(input_1, (int)*(short *)(input_2 + 0xe));\n  bool is_positive = result_1 >= 0;\n  uint new_value;\n  if (is_positive) {\n    new_value = *(int *)(input_2 + 0x54) + result_1;\n  }\n  else {\n    new_value = *(ushort *)(input_2 + 0xc) & 0xffffefff;\n  }\n  if (is_positive) {\n    *(uint *)(input_2 + 0x54) = new_value;\n  }\n  if (!is_positive) {\n    *(short *)(input_2 + 0xc) = (short)new_value;\n  }\n  return;\n}",
            "called": [
                "FUN_0800a168"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a020",
            "calling": [],
            "imported": false,
            "current_name": "calculate_new_value_0800a020"
        },
        "FUN_08005840": {
            "renaming": {
                "FUN_08005840": "calculate_result_08005840",
                "uVar1": "result",
                "uVar2": "flag",
                "local_1c": "local_value",
                "abStack_18": "stack_array",
                "uStack_14": "stack_value",
                "uStack_10": "stack_value2",
                "uStack_c": "stack_value3"
            },
            "code": "uint calculate_result_08005840(void)\n{\n  uint result = 0;\n  uint flag = *(uint *)(DAT_080058a0 + 4);\n  uint value = DAT_080058a8;\n  byte stack_array[4];\n  stack_array[0] = *(byte *)(PTR_DAT_0800589c + (flag << 10) >> 0x1c);\n  uint stack_value = *(uint *)PTR_DAT_0800589c;\n  uint stack_value2 = *(uint *)(PTR_DAT_0800589c + 4);\n  uint stack_value3 = *(uint *)(PTR_DAT_0800589c + 8);\n  uint local_value = *(uint *)(PTR_DAT_0800589c + 0x10);\n  if ((flag & 0xc) == 8) {\n    if ((flag & 0x10000) == 0) {\n      result = value * (uint)stack_array[0];\n    }\n    else {\n      result = (DAT_080058a8 * stack_array[0]) / (uint)*(byte *)((int)&local_value - ((*(int *)(DAT_080058a0 + 4) << 0xe) >> 0x1f));\n    }\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005840",
            "calling": [
                "FUN_080058d2"
            ],
            "imported": false,
            "current_name": "calculate_result_08005840"
        },
        "FUN_08007f7c": {
            "renaming": {
                "FUN_08007f7c": "set_param2_if_param1_not_zero_08007f7c",
                "param_1": "ptr_obj",
                "param_2": "param2",
                "*(int *)(param_1 + 0x60)": "*(int *)(ptr_obj + 0x60)",
                "FUN_080049e0": "call_another_function"
            },
            "code": "void set_param2_if_param1_not_zero_08007f7c(int ptr_obj, int param2) {\n    if (ptr_obj != 0) {\n        if (param2 != 0) {\n            *(int *)(ptr_obj + 0x60) = param2;\n            call_another_function(ptr_obj + 4);\n        }\n    }\n}",
            "called": [
                "FUN_080049e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f7c",
            "calling": [
                "FUN_08002968"
            ],
            "imported": false,
            "current_name": "set_param2_if_param1_not_zero_08007f7c"
        },
        "FUN_08006d80": {
            "renaming": {
                "FUN_08006d80": "my_function_08006d80",
                "param_1": "input_value",
                "local_46": "output_value",
                "local_44": "temp_value",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "temp",
                "local_34": "zero1",
                "local_30": "zero2",
                "local_2c": "zero3",
                "local_28": "one",
                "local_24": "zero4",
                "local_20": "zero5",
                "local_1c": "constant",
                "local_10": "zero6",
                "PTR_DAT_08006e60": "ptr_data1",
                "PTR_DAT_08006e64": "ptr_data2",
                "FUN_080091c6": "memset",
                "FUN_08007320": "my_helper_function",
                "FUN_08003bd8": "my_second_helper_function",
                "FUN_08006c60": "my_third_helper_function",
                "FUN_080038e4": "my_fourth_helper_function",
                "FUN_08003e20": "my_fifth_helper_function",
                "FUN_08003aa0": "my_sixth_helper_function",
                "FUN_0800376c": "my_seventh_helper_function",
                "FUN_08003a1c": "my_eighth_helper_function"
            },
            "code": "typedef unsigned short uint16_t;\n\ntypedef struct {\n    uint16_t value1;\n    uint16_t value2;\n    uint16_t value3;\n} StructType;\n\n\nuint16_t my_function_08006d80(uint16_t input_value)\n{\n    int success = 0;\n    StructType local_struct;\n    uint16_t output_value = 0;\n\n    memset(&local_struct, 0, sizeof(local_struct));\n\n    local_struct.value1 = my_helper_function(input_value, PTR_DAT_08006e60);\n\n    if (local_struct.value1 != 0) {\n        local_struct.value3 = 0xe0000;\n        *PTR_DAT_08006e64 = (char)input_value;\n        success = my_second_helper_function(&local_struct);\n        if (success && local_struct.value2 < 0x12) {\n            StructType temp_struct;\n            memset(&temp_struct, 0, sizeof(temp_struct));\n            temp_struct.value1 = local_struct.value1;\n            success = my_third_helper_function(&temp_struct, &local_struct.value2);\n            if (success) {\n                success = my_fourth_helper_function(&temp_struct);\n                if (success) {\n                    success = my_fifth_helper_function(&temp_struct);\n                    if (success) {\n                        success = my_sixth_helper_function(&temp_struct, 10);\n                        if (success) {\n                            uint16_t temp_value = my_seventh_helper_function(&temp_struct);\n                            if ((temp_value & 0x200) != 0) {\n                                output_value = my_eighth_helper_function(&temp_struct);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return output_value;\n}\n",
            "called": [
                "FUN_0800376c",
                "FUN_08003aa0",
                "FUN_08007320",
                "FUN_08003e20",
                "FUN_08003bd8",
                "FUN_080038dc",
                "FUN_08003de4",
                "FUN_080038e4",
                "FUN_080091c6",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_08003ce8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d80",
            "calling": [
                "FUN_08008880"
            ],
            "imported": false,
            "current_name": "my_function_08006d80"
        },
        "FUN_08006c60": {
            "renaming": {
                "FUN_08006c60": "calculate_result_08006c60",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "code": "uint calculate_result_08006c60(uint param_1, uint param_2, uint param_3, uint param_4)\n{\n  int result = perform_calculation(param_1, PTR_DAT_08006c78, param_3, param_4, param_4);\n  uint shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result > 0x11) {\n    shifted_result = 0;\n  }\n  return shifted_result;\n}",
            "called": [
                "FUN_08007376"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c60",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "calculate_result_08006c60"
        },
        "FUN_08003306": {
            "renaming": {
                "FUN_08003306": "set_values_08003306",
                "param_1": "object_address",
                "param_2": "value",
                "param_3": "first_value",
                "param_4": "second_value",
                "PTR_": "",
                "DAT_": ""
            },
            "code": "void set_values_08003306(int object_address, uint value, undefined4 first_value, undefined4 second_value)\n{\n    if (value == 208)\n    {\n        *(undefined4 *)(object_address + 88) = first_value;\n        *(undefined4 *)(object_address + 40) = second_value;\n        return;\n    }\n    if (value > 208)\n    {\n        if (value == 244)\n        {\n            *(undefined4 *)(object_address + 92) = first_value;\n            *(undefined4 *)(object_address + 44) = second_value;\n            return;\n        }\n        if (value == 245)\n        {\n            *(undefined4 *)(object_address + 96) = first_value;\n            *(undefined4 *)(object_address + 48) = second_value;\n        }\n        else if (value == 224)\n        {\n            *(undefined4 *)(object_address + 76) = first_value;\n            *(undefined4 *)(object_address + 28) = second_value;\n            return;\n        }\n        return;\n    }\n    if (value == 144)\n    {\n        *(undefined4 *)(object_address + 80) = first_value;\n        *(undefined4 *)(object_address + 32) = second_value;\n        return;\n    }\n    if (value == 192)\n    {\n        *(undefined4 *)(object_address + 84) = first_value;\n        *(undefined4 *)(object_address + 36) = second_value;\n        return;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003306",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "set_values_08003306"
        },
        "FUN_08002578": {
            "renaming": {
                "FUN_08002578": "execute_main_function_08002578",
                "FUN_080076e0": "execute_helper_function"
            },
            "code": "void execute_main_function_08002578(void)\n{\n  execute_helper_function();\n  return;\n}",
            "called": [
                "FUN_080076e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002578",
            "calling": [
                "FUN_08002644"
            ],
            "imported": false,
            "current_name": "execute_main_function_08002578"
        },
        "FUN_08006932": {
            "renaming": {
                "FUN_08006932": "set_flag_and_call_function_08006932",
                "param_1": "ptr_param_1",
                "*param_1": "*ptr_param_1",
                "uint": "unsigned_int",
                "*ptr_uint": "ptr_unsigned_int",
                "uint_value": "unsigned_int_value",
                "ptr_char": "ptr_character",
                "*ptr_char": "*ptr_character",
                "FUN_08008730": "call_another_function"
            },
            "code": "int set_flag_and_call_function_08006932(int *ptr_param_1)\n{\n  uint *ptr_uint = (uint *)(*ptr_param_1 + 0xc);\n  uint uint_value = *ptr_uint & 0xffffffbf;\n  *ptr_uint = uint_value;\n  char *ptr_char = (char *)((int)ptr_param_1 + 0x39);\n  *ptr_char = 0x20;\n  call_another_function();\n  return 0;\n}",
            "called": [
                "FUN_08008730"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006932",
            "calling": [
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_function_08006932"
        },
        "FUN_080060c4": {
            "renaming": {
                "FUN_080060c4": "update_parameters_080060c4",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "var1",
                "uVar2": "var2",
                "iVar3": "var3",
                "DAT_08006124": "PTR_DAT_08006124",
                "mask1": "mask1",
                "mask2": "mask2",
                "mask3": "mask3",
                "mask4": "mask4"
            },
            "code": "void update_parameters_080060c4(int param1, int *param2) {\n  uint mask1 = 0xffffffef;\n  uint mask2 = 0xfffff3ff;\n  uint mask3 = 0xffff8cff;\n  uint mask4 = 0xffffffdf;\n  uint var1 = *(uint *)(param1 + 0x20) & mask1;\n  uint var2 = *(uint *)(param1 + 4);\n  int var3 = *param2;\n  var1 = var1 | param2[2] << 4;\n  if (param1 == DAT_08006124) {\n    var1 = (var1 & mask4) | param2[3] << 4;\n    var2 = (var2 & mask2) | param2[5] << 2 | param2[6] << 2;\n  }\n  *(uint *)(param1 + 4) = var2;\n  *(uint *)(param1 + 0x18) = (*(uint *)(param1 + 0x18) & mask3) | var3 << 8;\n  *(int *)(param1 + 0x38) = param2[1];\n  *(uint *)(param1 + 0x20) = var1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080060c4",
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "imported": false,
            "current_name": "update_parameters_080060c4"
        },
        "FUN_08009eac": {
            "renaming": {
                "process_data": "process_data",
                "param_1": "data_index",
                "param_2": "data_array",
                "uVar1": "flag",
                "iVar2": "temp_index",
                "local_18": "temp_index",
                "local_14": "temp_array",
                "PTR_LAB_08009cd0_1_08009f28": "LAB_PTR_1",
                "FUN_08009eac": "process_data_08009eac"
            },
            "code": "void process_data_08009eac(int data_index, int *data_array)\n{\n  ushort flag;\n  int temp_index;\n  int temp_array[6];\n  \n  if (-1 < (int)((uint)*(ushort *)(data_array + 3) << 0x1e)) {\n    temp_index = data_index;\n    temp_array = data_array;\n    flag = get_flag(temp_index, temp_array, &temp_index, &temp_array);\n    if (check_value(temp_index) != 0) {\n      *(undefined **)(data_index + 0x28) = PTR_LAB_08009cd0_1_08009f28;\n      *data_array = check_value(temp_index);\n      *(ushort *)(data_array + 3) = *(ushort *)(data_array + 3) | 0x80;\n      data_array[4] = check_value(temp_index);\n      data_array[5] = temp_index;\n      if ((temp_array != (int *)0x0) && (check_value_2(data_index, (int)*(short *)((int)data_array + 0xe)) != 0)) {\n        *(ushort *)(data_array + 3) = *(ushort *)(data_array + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(data_array + 3) = flag | *(ushort *)(data_array + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(data_array + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(data_array + 3) = *(ushort *)(data_array + 3) & 0xfffc | 2;\n  }\n  *data_array = (int)data_array + 0x47;\n  data_array[4] = (int)data_array + 0x47;\n  data_array[5] = 1;\n  return;\n}",
            "called": [
                "FUN_08009e64",
                "FUN_08009270",
                "FUN_0800a110"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009eac",
            "calling": [
                "FUN_08009a80"
            ],
            "imported": false,
            "current_name": "process_data_08009eac"
        },
        "FUN_080072d8": {
            "renaming": {
                "FUN_080072d8": "set_flag_if_param_not_zero_080072d8",
                "param_1": "flag",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_080042e2": "set_flag_with_params"
            },
            "code": "void set_flag_if_param_not_zero_080072d8(undefined4 flag, undefined2 param_2, int param_3, undefined4 param_4)\n{\n  if (param_3 == 0) {\n    set_flag_with_params(flag, param_2, 0, param_4, param_4);\n    return;\n  }\n  set_flag_with_params(flag, param_2, 1, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_080042e2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080072d8",
            "calling": [
                "FUN_08008a24"
            ],
            "imported": false,
            "current_name": "set_flag_if_param_not_zero_080072d8"
        },
        "FUN_080045c0": {
            "renaming": {
                "FUN_080045c0": "calculate_result_080045c0",
                "param_1": "input_array",
                "uVar2": "random_number",
                "puVar3": "ptr1",
                "uVar4": "result",
                "bVar1": "should_return_1",
                "do_nothing_080045bc": "do_nothing",
                "DAT_08004714": "DAT_1",
                "DAT_08004718": "DAT_2",
                "DAT_0800471c": "DAT_3",
                "DAT_08004720": "DAT_4",
                "DAT_08004724": "DAT_5"
            },
            "code": "uint32_t calculate_result_080045c0(uint32_t **input_array)\\n{\\n  bool should_return_1;\\n  uint32_t random_number, *ptr1, result, ptr2_value;\\n  if (input_array == NULL) {\\n    return 1;\\n  }\\n  if (*(char *)((int)input_array + 0x3d) == \"\\0\") {\\n    *(undefined *)(input_array + 0xf) = 0;\\n    do_nothing_080045bc();\\n  }\\n  *(undefined *)((int)input_array + 0x3d) = 0x24;\\n  **input_array = **input_array & 0xfffffffe;\\n  random_number = get_random_number();\\n  if (DAT_08004714 < input_array[1]) {\\n    should_return_1 = random_number <= DAT_08004720;\\n  }\\n  else if (DAT_08004718 < random_number) {\\n    should_return_1 = false;\\n  }\\n  else {\\n    should_return_1 = true;\\n  }\\n  if (should_return_1) {\\n    return 1;\\n  }\\n  result = (uint32_t)((uint64_t)DAT_0800471c * (uint64_t)random_number >> 0x32);\\n  (*input_array)[1] = result;\\n  if (DAT_08004714 < input_array[1]) {\\n    result = (uint32_t)((uint64_t)DAT_08004724 * (uint64_t)(result * 300) >> 0x26);\\n  }\\n  (*input_array)[8] = result + 1;\\n  ptr1 = input_array[1];\\n  if (DAT_08004714 < ptr1) {\\n    if (input_array[2] == NULL) {\\n      result = count_leading_zeroes((random_number - 1) / (uint32_t)((int)ptr1 * 3) + 1 & 0xfff);\\n    }\\n    else {\\n      result = count_leading_zeroes((random_number - 1) / (uint32_t)((int)ptr1 * 0x19) + 1 & 0xfff);\\n    }\\n    if (result >> 5 == 0) {\\n      if (input_array[2] == NULL) {\\n        random_number = (random_number - 1) / (uint32_t)((int)ptr1 * 3) + 1 & 0xfff | 0x8000;\\n      }\\n      else {\\n        random_number = (random_number - 1) / (uint32_t)((int)ptr1 * 0x19) + 1 & 0xfff | 0xc000;\\n      }\\n    }\\n    else {\\n      random_number = 1;\\n    }\\n  }\\n  else {\\n    random_number = (random_number - 1) / (uint32_t)((int)ptr1 << 1) + 1 & 0xfff;\\n    if (random_number < 4) {\\n      random_number = 4;\\n    }\\n  }\\n  (*input_array)[7] = random_number;\\n  **input_array = (uint32_t)input_array[7] | (uint32_t)input_array[8];\\n  (*input_array)[2] = (uint32_t)input_array[4] | (uint32_t)input_array[3];\\n  (*input_array)[3] = (uint32_t)input_array[5] | (uint32_t)input_array[6];\\n  **input_array = **input_array | 1;\\n  input_array[0x10] = NULL;\\n  *(undefined *)((int)input_array + 0x3d) = 0x20;\\n  input_array[0xc] = NULL;\\n  *(undefined *)((int)input_array + 0x3e) = 0;\\n  return 0;\\n}",
            "called": [
                "FUN_08005a28",
                "FUN_080045bc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080045c0",
            "calling": [
                "FUN_080077b0"
            ],
            "imported": false,
            "current_name": "calculate_result_080045c0"
        },
        "FUN_08007e74": {
            "renaming": {
                "FUN_08007e74": "check_input_08007e74",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "iVar1": "start_time",
                "iVar2": "input_value",
                "uVar3": "time_elapsed",
                "iVar4": "result",
                "iVar5": "input_address",
                "uVar6": "param_4"
            },
            "code": "int check_input_08007e74(int input, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  int start_time = FUN_08003760();\n  int result = 2;\n  uint time_elapsed = 0;\n  do {\n    int input_address = input + 4;\n    int input_value = FUN_08004728(input_address, param_2, param_3, param_4, param_4);\n    if (input_value == 0) {\n      result = 0;\n      int space_found = 0;\n      while ((input_value = FUN_0800542a(input_address), input_value != 0x20 && (space_found == 0))) {\n        int current_time = FUN_08003760();\n        time_elapsed = current_time - start_time;\n        if (time_elapsed < 0x65) {\n          input_value = FUN_08005430(input_address);\n          if (input_value != 0) {\n            space_found = 2;\n          }\n        }\n        else {\n          space_found = 1;\n        }\n      }\n    }\n    input_value = FUN_08005430(input_address);\n  } while ((input_value == 4) && (time_elapsed < 100));\n  return result;\n}",
            "called": [
                "FUN_08004728",
                "FUN_08003760",
                "FUN_08005430",
                "FUN_0800542a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e74",
            "calling": [
                "FUN_08002a58"
            ],
            "imported": false,
            "current_name": "check_input_08007e74"
        },
        "FUN_08002efe": {
            "renaming": {
                "FUN_08002efe": "calculate_new_address_and_call_function_08002efe",
                "param_1": "base_address",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "FUN_0800319e": "function_with_new_address"
            },
            "code": "void calculate_new_address_and_call_function_08002efe(int base_address, int param_2, short param_3, int param_4)\n{\n  function_with_new_address(base_address + 0x40, param_2, param_3, param_4, param_4);\n  return;\n}",
            "called": [
                "FUN_0800319e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002efe",
            "calling": [
                "FUN_08000be8"
            ],
            "imported": false,
            "current_name": "calculate_new_address_and_call_function_08002efe"
        },
        "FUN_08002f84": {
            "renaming": {
                "FUN_08002f84": "set_value_if_param_is_max_08002f84",
                "param_1": "data_ptr",
                "param_2": "param_value",
                "param_3": "new_value",
                "PTR_DAT_08002f90": "data_ptr"
            },
            "code": "void set_value_if_param_is_max_08002f84(uint32_t *PTR_DAT_08002f90, uint8_t param_value, uint32_t new_value) {\n  if (param_value == 0xff) {\n    *PTR_DAT_08002f90 = new_value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f84",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "set_value_if_param_is_max_08002f84"
        },
        "FUN_08002ddc": {
            "renaming": {
                "FUN_08002ddc": "process_data_08002ddc",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "multiplier",
                "param_4": "constant",
                "FUN_0800322c": "call_function"
            },
            "code": "void process_data_08002ddc(int data, int offset, int multiplier, int constant) {\n  call_function(data + offset, 2, 5, constant, constant);\n  return;\n}",
            "called": [
                "FUN_0800322c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ddc",
            "calling": [
                "FUN_08002e26"
            ],
            "imported": false,
            "current_name": "process_data_08002ddc"
        },
        "FUN_08009094": {
            "renaming": {
                "FUN_08009094": "check_if_valid_entry_08009094",
                "iVar1": "random_index",
                "FUN_08008f3c": "get_random_index",
                "PTR_DAT_080090b0": "entry_data_pointer",
                "0x14": "entry_data_size",
                "0xc": "entry_data_offset",
                "value_ptr": "entry_value_pointer",
                "*value_ptr": "entry_value",
                "FUN_08009084": "do_something"
            },
            "code": "void check_if_valid_entry_08009094(void)\n{\n    int random_index = get_random_index();\n    int* value_ptr = (int*)(PTR_DAT_080090b0 + random_index * 0x14 + 0xc);\n    if (*value_ptr != 0)\n    {\n        do_something();\n    }\n    return;\n}",
            "called": [
                "FUN_08009084",
                "FUN_08008f3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009094",
            "calling": [
                "FUN_080042f0"
            ],
            "imported": false,
            "current_name": "check_if_valid_entry_08009094"
        },
        "FUN_08009f2c": {
            "renaming": {
                "FUN_08009f2c": "find_char_in_string_08009f2c",
                "param_1": "str",
                "param_2": "ch",
                "param_3": "len",
                "pcVar1": "current_char",
                "pcVar2": "current_char"
            },
            "code": "char* find_char_in_string_08009f2c(char* str, char ch, int len) {\n  char* current_char = str;\n  while (current_char != str + len) {\n    if (*current_char == ch) {\n      return current_char;\n    }\n    current_char++;\n  }\n  return NULL;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009f2c",
            "calling": [
                "FUN_08009698",
                "FUN_0800937c"
            ],
            "imported": false,
            "current_name": "find_char_in_string_08009f2c"
        },
        "FUN_0800a154": {
            "renaming": {
                "FUN_0800a154": "calculate_value_0800a154",
                "param_1": "offset",
                "param_2": "data",
                "iVar1": "value"
            },
            "code": "int calculate_value_0800a154(int offset, int* data)\n{\n  int value = *(data + offset - 4) - 4;\n  if (*(data + offset - 4) < 0) {\n    value += *(data + offset + value);\n  }\n  return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a154",
            "calling": [
                "FUN_08009908"
            ],
            "imported": false,
            "current_name": "calculate_value_0800a154"
        },
        "FUN_08002580": {
            "renaming": {
                "FUN_08002580": "increment_byte_and_store_offset_08002580",
                "*param_1": "*output_byte",
                "bVar1": "current_byte"
            },
            "code": "void increment_byte_and_store_offset_08002580(byte *output_byte) {\n  byte current_byte = *PTR_DAT_080025a4;\n  if (current_byte > 11) {\n    *output_byte = 255;\n    return;\n  }\n  *PTR_DAT_080025a4 = current_byte + 1;\n  *output_byte = current_byte;\n  *(undefined4 *)(PTR_DAT_080025a8 + (uint)current_byte * 8 + 4) = 0x5dc;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002580",
            "calling": [
                "FUN_080004d4"
            ],
            "imported": false,
            "current_name": "increment_byte_and_store_offset_08002580"
        },
        "FUN_08007f8e": {
            "renaming": {
                "FUN_08007f8e": "update_param_08007f8e",
                "param_1": "param_1",
                "param_2": "param_2",
                "PTR_": "ptr",
                "DAT_": "data",
                "FUN_080049e0": "update_param_helper"
            },
            "code": "void update_param_08007f8e(int param_1, int param_2)\n{\n  if (param_1 != 0 && param_2 != 0) {\n    int* PTR_ = (int*)(param_1 + 100);\n    *PTR_ = param_2;\n    update_param_08007f8e_helper(param_1 + 4);\n  }\n  return;\n}",
            "called": [
                "FUN_080049e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f8e",
            "calling": [
                "FUN_08002968"
            ],
            "imported": false,
            "current_name": "update_param_08007f8e"
        },
        "FUN_08006b3e": {
            "renaming": {
                "FUN_08006b3e": "set_bit_at_index_08006b3e",
                "param_1": "index",
                "param_2": "array",
                "uVar1": "array_index",
                "*(uint *)(param_2 + uVar1 * 4)": "element",
                "*(uint *)(param_2 + uVar1 * 4) | 1 << (param_1 & 0xf)": "*element |= 1 << (index & 0xf)"
            },
            "code": "void set_bit_at_index_08006b3e(uint index, int* array) {\n  uint array_index = (index << 0x18) >> 0x1c;\n  uint* element = (uint*)(array + array_index * 4);\n  *element |= 1 << (index & 0xf);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b3e",
            "calling": [
                "FUN_080088e0",
                "FUN_08008990"
            ],
            "imported": false,
            "current_name": "set_bit_at_index_08006b3e"
        },
        "FUN_08006262": {
            "renaming": {
                "FUN_08006262": "set_bit_in_uint_array_08006262",
                "param_1": "array_start_index",
                "param_2": "bit_index",
                "param_3": "bit_value",
                "PTR_": "array_ptr",
                "DAT_": "bit_mask, masked_array_value, shifted_bit_value, updated_array_value"
            },
            "code": "void set_bit_in_uint_array_08006262(int array_start_index, uint bit_index, int bit_value){\n  uint* PTR_ = (uint*)(array_start_index + 0x20);\n  uint bit_mask = ~(1 << (bit_index & 0xff));\n  uint masked_array_value = *PTR_ & bit_mask;\n  uint shifted_bit_value = bit_value << (bit_index & 0xff);\n  uint updated_array_value = masked_array_value | shifted_bit_value;\n  *PTR_ = updated_array_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006262",
            "calling": [
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390",
                "FUN_080063c0"
            ],
            "imported": false,
            "current_name": "set_bit_in_uint_array_08006262"
        },
        "FUN_08007110": {
            "renaming": {
                "FUN_08007110": "call_function_at_0x08007110_08007110",
                "FUN_080074e0": "call_function_at_0x080074e0"
            },
            "code": "void call_function_at_0x08007110_08007110(void)\n{\n  call_function_at_0x08007110_08007110();\n  return;\n}",
            "called": [
                "FUN_080074e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007110",
            "calling": [
                "FUN_08005e2e"
            ],
            "imported": false,
            "current_name": "call_function_at_0x08007110_08007110"
        },
        "FUN_08007594": {
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timer_instance",
                "DAT_080075d0": "MAX_TIMER_INSTANCE",
                "DAT_080075d4": "UNKNOWN_TIMER_INSTANCE_1",
                "PTR_s_TIM__Unknown_timer_instance_080075d8": "TIM_UNKNOWN_TIMER_INSTANCE"
            },
            "code": "int check_timer_instance_08007594(uint timer_instance){\n\tif (timer_instance == DAT_080075d0){\n\t\treturn 0;\n\t}\n\tif (timer_instance == UNKNOWN_TIMER_INSTANCE){\n\t\treturn 1;\n\t}\n\tif (UNKNOWN_TIMER_INSTANCE < timer_instance){\n\t\tif (timer_instance == DAT_080075d4){\n\t\t\treturn 1;\n\t\t}\n\t\tif (timer_instance == DAT_080075d4 + 0x12400){\n\t\t\treturn 2;\n\t\t}\n\t}\n\telse if (timer_instance == MIN_TIMER_INSTANCE){\n\t\treturn 1;\n\t}\n\tinit_timer_instance(PTR_s_TIM__Unknown_timer_instance_080075d8);\n\treturn 0;\n}",
            "called": [
                "FUN_080098d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007594",
            "calling": [
                "FUN_080075dc"
            ],
            "imported": false,
            "current_name": "check_timer_instance_08007594"
        },
        "FUN_080073ec": {
            "renaming": {
                "FUN_080073ec": "set_bit_and_clear_flags_080073ec",
                "puVar1": "data_ptr",
                "DAT_0800742c": "PTR_DATA_START",
                "DAT_08007430": "PTR_FLAG_MASK",
                "0xfef6ffff": "PTR_FIRST_FLAG_MASK",
                "0xfffbffff": "PTR_SECOND_FLAG_MASK",
                "0xff80ffff": "PTR_THIRD_FLAG_MASK"
            },
            "code": "void set_bit_and_clear_flags_080073ec(void)\n{\n  uint *data_ptr;\n  data_ptr = DAT_0800742c;\n  *DAT_0800742c |= 1;\n  data_ptr[1] &= DAT_08007430;\n  *data_ptr &= PTR_FIRST_FLAG_MASK;\n  *data_ptr &= PTR_SECOND_FLAG_MASK;\n  data_ptr[1] &= PTR_THIRD_FLAG_MASK;\n  data_ptr[2] = 0x9f0000;\n  *(undefined4 *)(DAT_08007434 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073ec",
            "calling": [
                "FUN_08003658"
            ],
            "imported": false,
            "current_name": "set_bit_and_clear_flags_080073ec"
        },
        "FUN_08008ef4": {
            "renaming": {
                "FUN_08008ef4": "calculate_value_range_08008ef4",
                "param_1": "end_value",
                "param_2": "start_value",
                "param_3": "range_end",
                "param_4": "range_start",
                "param_5": "offset",
                "uint": "unsigned int"
            },
            "code": "int calculate_value_range_08008ef4(int end_value, int start_value, int range_end, int range_start, int offset) {\n    int range = range_end - range_start;\n    int value_range = end_value - start_value;\n    int value_in_range = value_range * (offset - range_start);\n    int result = value_in_range / range + start_value;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ef4",
            "calling": [
                "FUN_080026b0"
            ],
            "imported": false,
            "current_name": "calculate_value_range_08008ef4"
        },
        "FUN_08002df6": {
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data_ptr",
                "puVar1": "data",
                "FUN_080031ce": "process_data_helper"
            },
            "code": "void process_data_08002df6(int data_ptr) {\n  if (*(byte *)(data_ptr + 0xc4) == 0) {\n    return;\n  }\n  undefined *data = *(undefined **)(data_ptr + 200);\n  process_data_08002df6_helper(data_ptr + 0x40, *data, data[1], *(byte *)(data_ptr + 0xc4) - 2, data + 2);\n  return;\n}",
            "called": [
                "FUN_080031ce"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002df6",
            "calling": [
                "FUN_08002e26"
            ],
            "imported": false,
            "current_name": "process_data_08002df6"
        },
        "FUN_080045bc": {
            "renaming": {
                "FUN_080045bc": "do_nothing_080045bc"
            },
            "code": "\nvoid do_nothing_080045bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080045bc",
            "calling": [
                "FUN_080045c0"
            ],
            "imported": false,
            "current_name": "do_nothing_080045bc"
        },
        "FUN_08007118": {
            "renaming": {
                "process_data": "process_data",
                "param_1": "data",
                "param_2": "divisor",
                "param_3": "value",
                "param_4": "param_4",
                "param_5": "flag",
                "uVar1": "quotient",
                "iVar2": "result",
                "iVar3": "type",
                "local_74": "var1",
                "local_70": "var2",
                "local_6c": "var3",
                "local_68": "var4",
                "local_64": "var5",
                "local_60": "var6",
                "local_5c": "var7",
                "local_58": "var8",
                "local_54": "var9",
                "local_50": "var10",
                "local_4c": "var11",
                "local_48": "var12",
                "local_44": "var13",
                "local_1b": "var14",
                "FUN_080091c6": "allocate_memory",
                "FUN_08007320": "get_data",
                "PTR_DAT_080071dc": "ptr_data",
                "PTR_DAT_080071e0": "ptr_data_2",
                "FUN_08006092": "check_type",
                "FUN_08006c7c": "check_type",
                "FUN_08006186": "process_data_2",
                "FUN_08007376": "get_data",
                "FUN_08006390": "process_data_3",
                "FUN_0800643c": "process_data_4",
                "FUN_08007118": "process_data_08007118"
            },
            "code": "void process_data_08007118(undefined4 data, uint divisor, int value, undefined4 param_4, char flag) {\n  uint quotient;\n  int result;\n  int type;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int var8;\n  int var9;\n  undefined4 var10;\n  int var11;\n  undefined4 var12;\n  undefined4 var13;\n  undefined var14;\n  allocate_memory(&var8, 0, 0x40);\n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  var8 = get_data(data, PTR_DAT_080071dc);\n  if (var8 != 0) {\n    quotient = calculate_quotient();\n    result = quotient / divisor - 1;\n    var11 = value + -1;\n    var12 = 0;\n    var10 = 0;\n    var13 = 0;\n    var14 = 0;\n    if (flag == '\\x01') {\n      *PTR_DAT_080071e0 = (char)data;\n      type = check_type(&var8);\n      if (type != 0) {\n        return;\n      }\n    }\n    type = check_type(data);\n    if ((((type == 0) || (type == 4)) || (type == 8)) || ((type == 0xc || (type == 0x18)))) {\n      var1 = 0x60;\n      var3 = 0;\n      var5 = 0;\n      var4 = 0;\n      var7 = 0;\n      var6 = 0;\n      var2 = param_4;\n      var9 = process_data_08007118_2(&var8, &var1,type);\n      if (var9 == 0) {\n        quotient = get_data(data, PTR_DAT_080071dc);\n        if ((quotient & 0x100000) == 0) {\n          process_data_08007118_3(&var8,type);\n        }\n        else {\n          process_data_08007118_4(&var8,type);\n        }\n      }\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007376",
                "FUN_08007320",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006390",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08006092",
                "FUN_080075dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007118",
            "calling": [
                "FUN_080088e0"
            ],
            "imported": false,
            "current_name": "process_data_08007118"
        },
        "FUN_08009fe8": {
            "renaming": {
                "FUN_08009fe8": "process_input_08009fe8",
                "param_1": "input_value",
                "puVar1": "pointer_to_result",
                "uVar2": "result_of_thunk",
                "piVar3": "function_pointer_array",
                "iVar4": "result",
                "pcVar5": "function_pointer",
                "unaff_r4": "unaff_r4",
                "unaff_r5": "unaff_r5",
                "in_lr": "in_lr",
                "puVar6": "pointer_to_pointer_to_function_pointer_array",
                "PTR_PTR_DAT_08009ff4": "PTR_PTR_DAT_08009ff4",
                "PTR_DAT_0800a018": "PTR_DAT_0800a018"
            },
            "code": "int process_input_08009fe8(uint input_value) {\n    int *function_pointer_array = *(int **)PTR_PTR_DAT_08009ff4;\n    if (input_value > 31) {\n        *function_pointer_array = 22;\n        return -1;\n    }\n    int function_pointer_address = function_pointer_array[17];\n    if (function_pointer_address != 0) {\n        code *function_pointer = *(code **)(function_pointer_address + input_value * 4);\n        if (function_pointer != (code *)0x0) {\n            if (function_pointer != (code *)0x1) {\n                if (function_pointer == (code *)0xffffffff) {\n                    *function_pointer_array = 22;\n                    return 1;\n                }\n                *(undefined4 *)(function_pointer_address + input_value * 4) = 0;\n                (*function_pointer)(input_value);\n            }\n            return 0;\n        }\n    }\n    undefined *pointer_to_pointer_to_function_pointer_array = PTR_PTR_DAT_08009ff4;\n    undefined4 result_of_thunk = thunk_FUN_0800887c(function_pointer_array);\n    undefined *pointer_to_result = PTR_DAT_0800a018;\n    *(undefined4 *)PTR_DAT_0800a018 = 0;\n    int result = FUN_0800886c(result_of_thunk, input_value, input_value, 0, pointer_to_pointer_to_function_pointer_array, unaff_r4, unaff_r5, in_lr);\n    if ((result == -1) && (*(int *)pointer_to_result != 0)) {\n        *function_pointer_array = *(int *)pointer_to_result;\n    }\n    return result;\n}",
            "called": [
                "FUN_0800886c",
                "thunk_FUN_0800887c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009fe8",
            "calling": [
                "FUN_08009b5c"
            ],
            "imported": false,
            "current_name": "process_input_08009fe8"
        },
        "FUN_08002c1e": {
            "renaming": {
                "FUN_08002c1e": "process_data_08002c1e",
                "param_1": "start_index",
                "param_2": "max_index",
                "param_3": "data_ptr",
                "param_4": "data_size",
                "FUN_08002948": "perform_operation"
            },
            "code": "void process_data_08002c1e(int start_index, int max_index, int* data_ptr, int data_size) {\n  perform_operation(1, max_index, data_ptr, data_size, data_size);\n  return;\n}",
            "called": [
                "FUN_08002948"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c1e",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08002c1e"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "extract_data_08005a68",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "DAT_08005a9c": "data_ptr"
            },
            "code": "void extract_data_08005a68(uint8_t *output_buffer, uint32_t *input_buffer) {\n  output_buffer[0] = 0xf;\n  uint32_t *DAT_08005a9c = &input_buffer[1];\n  output_buffer[1] = *DAT_08005a9c & 3;\n  output_buffer[2] = *DAT_08005a9c & 0xf0;\n  output_buffer[3] = *DAT_08005a9c & 0x700;\n  output_buffer[4] = *DAT_08005a9c >> 3 & 0x700;\n  *output_buffer = *input_buffer & 7;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_080075dc"
            ],
            "imported": false,
            "current_name": "extract_data_08005a68"
        },
        "FUN_08008f78": {
            "renaming": {
                "FUN_08008f78": "initialize_values_08008f78",
                "param_1": "input_1",
                "param_2": "input_2",
                "puVar1": "data_ptr"
            },
            "code": "void initialize_values_08008f78(int input_1, int input_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined *data_ptr;\n  \n  data_ptr = PTR_DAT_08009018;\n  if (input_1 != 1) {\n    return;\n  }\n  if (input_2 == 0xffff) {\n    *PTR_DAT_08009018 = 6;\n    *(undefined4 *)(data_ptr + 0xc) = 0;\n    data_ptr[0x14] = 7;\n    *(undefined4 *)(data_ptr + 0x20) = 0;\n    data_ptr[0x28] = 8;\n    *(undefined4 *)(data_ptr + 0x34) = 0;\n    data_ptr[0x3c] = 9;\n    *(undefined4 *)(data_ptr + 0x48) = 0;\n    data_ptr[0x50] = 10;\n    *(undefined4 *)(data_ptr + 0x5c) = 0;\n    data_ptr[100] = 0x17;\n    *(undefined4 *)(data_ptr + 0x70) = 0;\n    data_ptr[0x78] = 0x17;\n    *(undefined4 *)(data_ptr + 0x84) = 0;\n    data_ptr[0x8c] = 0x17;\n    *(undefined4 *)(data_ptr + 0x98) = 0;\n    data_ptr[0xa0] = 0x17;\n    *(undefined4 *)(data_ptr + 0xac) = 0;\n    data_ptr[0xb4] = 0x17;\n    *(undefined4 *)(data_ptr + 0xc0) = 0;\n    data_ptr[200] = 0x28;\n    *(undefined4 *)(data_ptr + 0xd4) = 0;\n    data_ptr[0xdc] = 0x28;\n    *(undefined4 *)(data_ptr + 0xe8) = 0;\n    data_ptr[0xf0] = 0x28;\n    *(undefined4 *)(data_ptr + 0xfc) = 0;\n    data_ptr[0x104] = 0x28;\n    *(undefined4 *)(data_ptr + 0x110) = 0;\n    data_ptr[0x118] = 0x28;\n    *(undefined4 *)(data_ptr + 0x124) = 0;\n    data_ptr[300] = 0x28;\n    *(undefined4 *)(data_ptr + 0x138) = 0;\n    FUN_080090c2(0, PTR_LAB_08008f50_1_08009020, PTR_DAT_0800901c, data_ptr, param_4);\n  }\n  return;\n}",
            "called": [
                "FUN_080090c2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008f78",
            "calling": [],
            "imported": false,
            "current_name": "initialize_values_08008f78"
        },
        "FUN_08008d30": {
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "data_ptr",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "temp_var"
            },
            "code": "undefined4* initialize_data_08008d30(undefined4* data_ptr, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n    undefined temp_var;\n    data_ptr[1] = 0;\n    data_ptr[2] = 1000;\n    *data_ptr = PTR_PTR_LAB_08008ba4_1_08008d7c;\n    if (data_ptr == (undefined4*)PTR_DAT_08008d80) {\n        FUN_08008d00(data_ptr, 0, param_3, PTR_DAT_08008d80, param_4);\n        FUN_08008d18(data_ptr, 1);\n    }\n    else {\n        temp_var = FUN_0800734a(param_2, PTR_DAT_08008d84);\n        *(undefined*)((int)data_ptr + 0x12d) = temp_var;\n        temp_var = FUN_0800734a(param_2, PTR_DAT_08008d88);\n        *(undefined*)(data_ptr + 0x4b) = temp_var;\n    }\n    FUN_08008c20(data_ptr);\n    return data_ptr;\n}",
            "called": [
                "FUN_08008d00",
                "FUN_0800734a",
                "FUN_08008c20",
                "FUN_08008d18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008d30",
            "calling": [
                "FUN_08008d8c"
            ],
            "imported": false,
            "current_name": "initialize_data_08008d30"
        },
        "FUN_08002f94": {
            "renaming": {
                "FUN_08002f94": "update_ptr_dat_value_08002f94",
                "param_1": "new_value",
                "param_2": "ptr_dat_address",
                "param_3": "N/A",
                "PTR_DAT_08002f9c": "ptr_dat_address",
                "DAT_08002f9c": "N/A"
            },
            "code": "void update_ptr_dat_value_08002f94(undefined4 new_value, undefined4 PTR_DAT_08002f9c){\n  *(undefined4 *)PTR_DAT_08002f9c = new_value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f94",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "update_ptr_dat_value_08002f94"
        },
        "FUN_0800734a": {
            "renaming": {
                "FUN_0800734a": "check_if_not_zero_return_0xffffffff_else_call_08007332_0800734a",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "code": "int check_if_not_zero_return_0xffffffff_else_call_08007332_0800734a(int input_param) {\n  int result;\n  if (input_param != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}",
            "called": [
                "FUN_08007332"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800734a",
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "imported": false,
            "current_name": "check_if_not_zero_return_0xffffffff_else_call_08007332_0800734a"
        },
        "FUN_08000aec": {
            "renaming": {
                "FUN_08000aec": "decode_message_08000aec",
                "bVar1": "is_valid",
                "iVar2": "character",
                "uVar3": "index",
                "*PTR_DAT_08000bc0": "decoder_status",
                "*PTR_DAT_08000bc4": "decoder_input",
                "FUN_080005e0": "initialize_decoder",
                "PTR_DAT_08000bc8": "decoder_output_1",
                "PTR_DAT_08000bcc": "decoder_output_2",
                "PTR_DAT_08000bd0": "decoder_output_3",
                "PTR_DAT_08000bd4": "encoded_message",
                "FUN_080036ac": "decode_character",
                "FUNC_080005f8": "set_decoder_output",
                "PTR_DAT_08000bd8": "decoder_output_status",
                "*PTR_DAT_08000bdc": "decoder_output_length",
                "*PTR_DAT_08000be0": "decoder_output_type",
                "*PTR_DAT_08000be4": "decoder_output_data"
            },
            "code": "void decode_message_08000aec(void)\\n{\\n  bool is_valid;\\n  int character;\\n  uint index;\\n  *PTR_DAT_08000bc0 = 1;\\n  if (*PTR_DAT_08000bc4 != \"\\0\") {\\n    initialize_decoder();\\n  }\\n  for (index = 0; index < 5; index++) {\\n    PTR_DAT_08000bc8[index] = 0;\\n    PTR_DAT_08000bcc[index] = 0;\\n    PTR_DAT_08000bd0[index] = 0;\\n  }\\n  for (index = 0; index < 0x3c; index++) {\\n    if ((index - 0x2e & 0xff) < 0xe) {\\n      if (index < 0x3c) {\\n        character = (int)(char)PTR_DAT_08000bd4[index];\\n      }\\n      else {\\n        character = -1;\\n      }\\n      character = decode_character(character);\\n      if (character == 0) {\\n        is_valid = false;\\n      }\\n      else {\\n        if (index < 0x3c) {\\n          character = (int)(char)PTR_DAT_08000bd4[index];\\n        }\\n        else {\\n          character = -1;\\n        }\\n        character = decode_character(character);\\n        if (character == 1) {\\n          is_valid = false;\\n        }\\n        else {\\n          is_valid = true;\\n        }\\n      }\\n    }\\n    else {\\n      is_valid = false;\\n    }\\n    if (is_valid) {\\n      FUNC_080005f8(index, 2);\\n    }\\n    else {\\n      if (index < 0x3c) {\\n        if (((PTR_DAT_08000bd4[index] != -1) && (character = decode_character(), character != 0)) && (character = decode_character((int)(char)PTR_DAT_08000bd4[index]), character != 1)) {\\n          is_valid = true;\\n        }\\n      }\\n      if (is_valid) {\\n        FUNC_080005f8(index, 1);\\n      }\\n    }\\n    PTR_DAT_08000bd8[index] = 0xff;\\n  }\\n  *(undefined4 *)PTR_DAT_08000bdc = 0;\\n  *PTR_DAT_08000be0 = 0;\\n  *PTR_DAT_08000be4 = 0;\\n  *PTR_DAT_08000bc0 = 0;\\n  return;\\n}",
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000aec",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "decode_message_08000aec"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "execute_function_08008eec",
                "FUN_08008ed6": "call_another_function"
            },
            "code": "void execute_function_08008eec(void)\n{\n  call_another_function();\n  return;\n}",
            "called": [
                "FUN_08008ed6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008eec",
            "calling": [],
            "imported": false,
            "current_name": "execute_function_08008eec"
        },
        "FUN_080068d6": {
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "array_size",
                "param_3": "element_size",
                "*(char *)((int)param_1 + 0x3a)": "input_array[58]",
                "*(char *)(param_1 + 0xe)": "input_array[14]",
                "param_1[10]": "input_array[10]",
                "*(short *)(param_1 + 0xb)": "input_array[11]",
                "*(short *)((int)param_1 + 0x2e)": "input_array[30]",
                "param_1[0xf]": "input_array[15]",
                "*(undefined *)((int)param_1 + 0x3a)": "input_array[58]",
                "*(undefined *)(param_1 + 0xe)": "input_array[14]",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(*input_array + 12)",
                "*(uint *)(*param_1 + 0x14)": "*(uint *)(*input_array + 20)"
            },
            "code": "int validate_input_080068d6(int *input_array, int array_size, int element_size) {\n  if (input_array[10] != ' ') {\n    return 2;\n  }\n  if (array_size == 0) {\n    return 1;\n  }\n  if (element_size == 0) {\n    return 1;\n  }\n  if (input_array[14] != 1) {\n    input_array[10] = array_size;\n    input_array[11] = (short)element_size;\n    input_array[14] = 0;\n    input_array[30] = (short)element_size;\n    input_array[58] = 34;\n    *(uint *)(*input_array + 12) = *(uint *)(*input_array + 12) | 256;\n    *(uint *)(*input_array + 20) = *(uint *)(*input_array + 20) | 1;\n    *(uint *)(*input_array + 12) = *(uint *)(*input_array + 12) | 32;\n    return 0;\n  }\n  return 2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080068d6",
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "imported": false,
            "current_name": "validate_input_080068d6"
        },
        "FUN_080032a2": {
            "renaming": {
                "FUN_080032a2": "send_message_080032a2",
                "param_1": "socket_fd",
                "param_2": "message_type",
                "param_3": "message_length",
                "param_4": "message_data",
                "uVar1": "data_length",
                "FUN_08000178": "strlen"
            },
            "code": "void send_message_080032a2(int socket_fd, int message_type, int message_length, void* message_data) {\n  // Get the length of the message data\n  int data_length = strlen((char*)message_data);\n  // Send the message to the socket\n  send(socket_fd, &message_type, sizeof(message_type), 0);\n  send(socket_fd, &data_length, sizeof(data_length), 0);\n  send(socket_fd, message_data, message_length, 0);\n  return;\n}",
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080032a2",
            "calling": [
                "FUN_08002f14"
            ],
            "imported": false,
            "current_name": "send_message_080032a2"
        },
        "FUN_08001b48": {
            "renaming": {
                "FUN_08001b48": "initialize_system_08001b48",
                "puVar1": "ptr_data",
                "PTR_DAT_08001bc0": "ptr_data",
                "PTR_s__home_bo_p2im_p2im_real_firmware_08001bc4": "module_data",
                "PTR_FUN_08000214_1_08001bc8": "function_ptr_1",
                "PTR_LAB_080002ec_1_08001bcc": "function_ptr_2",
                "DAT_08001bd0": "data_ptr_1",
                "PTR_LAB_08000c18_1_08001bd4": "function_ptr_3",
                "DAT_08001bd8": "data_ptr_2",
                "PTR_LAB_080001a8_1_08001bdc": "function_ptr_4",
                "PTR_FUNC_08001cd0_1_08001be0": "function_ptr_5",
                "DAT_08001be4": "data_ptr_3",
                "initialize_module": "initialize_module",
                "execute_function": "execute_function",
                "execute_function_with_ptr": "execute_function_with_ptr",
                "initialize_sub_system": "initialize_sub_system",
                "set_mode": "set_mode"
            },
            "code": "void initialize_system_08001b48(void)\n{\n  undefined *PTR_DAT_08001bc0 = PTR_DAT_08001bc0;\n  initialize_module(PTR_DAT_08001bc0,PTR_s__home_bo_p2im_p2im_real_firmware_08001bc4,2,5);\n  execute_function(PTR_DAT_08001bc0,0xe0,PTR_FUN_08000214_1_08001bc8);\n  execute_function(PTR_DAT_08001bc0,0x90,PTR_LAB_080002ec_1_08001bcc);\n  execute_function(PTR_DAT_08001bc0,0xc0,DAT_08001bd0);\n  execute_function(PTR_DAT_08001bc0,0xd0,PTR_LAB_08000c18_1_08001bd4);\n  execute_function(PTR_DAT_08001bc0,0xf4,DAT_08001bd8);\n  execute_function(PTR_DAT_08001bc0,0xf5,PTR_LAB_080001a8_1_08001bdc);\n  execute_function_with_ptr(PTR_DAT_08001bc0,0xf0,PTR_FUNC_08001cd0_1_08001be0);\n  execute_function(PTR_DAT_08001bc0,0xff,DAT_08001be4);\n  execute_function_with_ptr(PTR_DAT_08001bc0,0xe100);\n  initialize_sub_system();\n  set_mode(0);\n  return;\n}",
            "called": [
                "FUN_08002f94",
                "FUN_08000aec",
                "FUN_08002e44",
                "FUN_08003048",
                "FUN_08002f84",
                "FUN_08002f2c",
                "FUN_0800018c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001b48",
            "calling": [
                "FUN_08008f1c"
            ],
            "imported": false,
            "current_name": "initialize_system_08001b48"
        },
        "FUN_08006390": {
            "renaming": {
                "FUN_08006390": "set_flag_and_increment_counter_08006390",
                "param_1": "data_ptr",
                "param_2": "flag_value",
                "puVar1": "data",
                "DAT_080063bc": "PTR_DAT_080063bc"
            },
            "code": "uint32_t set_flag_and_increment_counter_08006390(uint32_t **data_ptr, uint32_t flag_value)\n{\n  uint32_t *data = *data_ptr;\n  if (data == DAT_080063bc) {\n    data[0x11] |= 0x8000;\n  }\n  **data_ptr |= 0x1;\n  return 0;\n}",
            "called": [
                "FUN_08006262"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006390",
            "calling": [
                "FUN_08007118"
            ],
            "imported": false,
            "current_name": "set_flag_and_increment_counter_08006390"
        },
        "FUN_08009f48": {
            "renaming": {
                "FUN_08009f48": "do_nothing_08009f48"
            },
            "code": "\nvoid do_nothing_08009f48(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009f48",
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "imported": false,
            "current_name": "do_nothing_08009f48"
        },
        "FUN_08004d6a": {
            "renaming": {
                "FUN_08004d6a": "do_nothing_08004d6a"
            },
            "code": "\nvoid do_nothing_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d6a",
            "calling": [
                "FUN_08004d6c",
                "FUN_08004e3c"
            ],
            "imported": false,
            "current_name": "do_nothing_08004d6a"
        },
        "FUN_08008730": {
            "renaming": {
                "FUN_08008730": "process_data_08008730",
                "uVar1": "rand_num",
                "iVar2": "func_ret_val",
                "iVar3": "data_ptr",
                "FUN_080086e8": "get_random_number",
                "PTR_DAT_08008770": "DATA_ARRAY_PTR",
                "PTR_DAT_08008774": "FUNC_PTR_ARRAY",
                "FUN_0800688e": "send_data",
                "PTR_DAT_08008778": "DATA_PTR_ARRAY"
            },
            "code": "void process_data_08008730(void)\n{\n  uint rand_num;\n  int data_ptr;\n  \n  rand_num = get_random_number();\n  data_ptr = *(int *)(PTR_DAT_08008770 + rand_num * 4);\n  if ((rand_num < 5) && (data_ptr = (**(code **)(PTR_DAT_08008774 + rand_num * 4))(data_ptr), data_ptr != -1)) {\n    send_data(*(undefined4 *)(PTR_DAT_08008778 + (uint)*(byte *)(data_ptr + 0x44) * 4),\n                 *(int *)(data_ptr + 100) + (uint)*(ushort *)(data_ptr + 0x6a),1);\n  }\n  return;\n}",
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008730",
            "calling": [
                "FUN_08006932"
            ],
            "imported": false,
            "current_name": "process_data_08008730"
        },
        "FUN_08005df4": {
            "renaming": {
                "FUN_08005df4": "check_and_modify_value_of_param_08005df4",
                "param_1": "param",
                "puVar1": "param_ptr"
            },
            "code": "void check_and_modify_value_of_param_08005df4(uint **param_1)\n{\n  uint *param_ptr;\n  *(undefined *)((int)param_1 + 0x3d) = 2;\n  param_ptr = *param_1;\n  if ((param_ptr[8] & 0x1111) == 0) {\n    if ((param_ptr[8] & 0x444) == 0) {\n      *param_ptr = *param_ptr & 0xfffffffe;\n    }\n  }\n  call_another_function(param_1);\n  *(undefined *)((int)param_1 + 0x3d) = 0;\n  *(undefined *)(param_1 + 0xf) = 0;\n  return;\n}",
            "called": [
                "FUN_08007710"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005df4",
            "calling": [
                "FUN_080076e0"
            ],
            "imported": false,
            "current_name": "check_and_modify_value_of_param_08005df4"
        },
        "FUN_08009148": {
            "renaming": {
                "FUN_08009148": "run_functions_08009148",
                "puVar1": "function_ptrs_start",
                "iVar2": "function_ptrs_length",
                "iVar3": "i"
            },
            "code": "void run_functions_08009148(void)\n{\n  undefined *function_ptrs_start = PTR_DAT_08009180;\n  int function_ptrs_length = (int)PTR_DAT_08009184 - (int)PTR_DAT_08009180;\n  for (int i = 0; i < function_ptrs_length >> 2; i++) {\n    (**(code **)(function_ptrs_start + i * 4))();\n  }\n  do_nothing_0800a424();\n  function_ptrs_start = PTR_DAT_08009188;\n  function_ptrs_length = (int)PTR_DAT_0800918c - (int)PTR_DAT_08009188;\n  for (int i = 0; i < function_ptrs_length >> 2; i++) {\n    (**(code **)(function_ptrs_start + i * 4))();\n  }\n  return;\n}",
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009148",
            "calling": [
                "FUN_08003658"
            ],
            "imported": false,
            "current_name": "run_functions_08009148"
        },
        "FUN_08005460": {
            "renaming": {
                "FUN_08005460": "FUNC_08005460"
            },
            "code": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined4 FUNC_08005460(uint *param_1)\n\n{\n  uint *puVar1;\n  uint *puVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  bool bVar7;\n  \n  puVar1 = DAT_08005720;\n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005720[1] & 0xc) == 4) ||\n       (((DAT_08005720[1] & 0xc) == 8 && ((DAT_08005720[1] & 0x10000) != 0)))) {\n      if (((*DAT_08005720 & 0x20000) != 0) && (param_1[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      uVar6 = param_1[1];\n      if (uVar6 == 0x10000) {\n        *DAT_08005720 = *DAT_08005720 | 0x10000;\n      }\n      else if (uVar6 == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (uVar6 == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        *DAT_08005720 = *DAT_08005720 & 0xfffeffff;\n        *puVar1 = *puVar1 & 0xfffbffff;\n      }\n      if (param_1[1] == 0) {\n        iVar3 = FUN_08003760();\n        while ((*DAT_08005720 & 0x20000) != 0) {\n          iVar4 = FUN_08003760();\n          if (100 < (uint)(iVar4 - iVar3)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar3 = FUN_08003760();\n        while ((*DAT_08005720 & 0x20000) == 0) {\n          iVar4 = FUN_08003760();\n          if (100 < (uint)(iVar4 - iVar3)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005720[1] & 0xc) == 0) ||\n       (((DAT_08005720[1] & 0xc) == 8 && ((DAT_08005720[1] & 0x10000) == 0)))) {\n      if (((*DAT_08005720 & 2) != 0) && (param_1[4] != 1)) {\n        return 1;\n      }\n      *DAT_08005720 = *DAT_08005720 & 0xffffff07 | param_1[5] << 3;\n    }\n    else if (param_1[4] == 0) {\n      *DAT_08005724 = 0;\n      iVar3 = FUN_08003760();\n      while ((*DAT_08005720 & 2) != 0) {\n        iVar4 = FUN_08003760();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005724 = 1;\n      iVar3 = FUN_08003760();\n      while ((*DAT_08005720 & 2) == 0) {\n        iVar4 = FUN_08003760();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n      *DAT_08005720 = *DAT_08005720 & 0xffffff07 | param_1[5] << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[6] == 0) {\n      *DAT_08005728 = 0;\n      iVar3 = FUN_08003760();\n      while ((DAT_08005720[9] & 2) != 0) {\n        iVar4 = FUN_08003760();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005728 = 1;\n      iVar3 = FUN_08003760();\n      while ((DAT_08005720[9] & 2) == 0) {\n        iVar4 = FUN_08003760();\n        if (2 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    bVar7 = (DAT_08005720[7] & 0x10000000) == 0;\n    if (bVar7) {\n      DAT_08005720[7] = DAT_08005720[7] | 0x10000000;\n    }\n    if ((*DAT_0800572c & 0x100) == 0) {\n      *DAT_0800572c = *DAT_0800572c | 0x100;\n      iVar3 = FUN_08003760();\n      while ((*DAT_0800572c & 0x100) == 0) {\n        iVar4 = FUN_08003760();\n        if (100 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    puVar2 = DAT_08005838;\n    puVar1 = DAT_08005720;\n    uVar6 = param_1[3];\n    if (uVar6 == 1) {\n      DAT_08005720[8] = DAT_08005720[8] | 1;\n    }\n    else if (uVar6 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (uVar6 == 5) {\n      DAT_08005838[8] = DAT_08005838[8] | 4;\n      puVar2[8] = puVar2[8] | 1;\n    }\n    else {\n      DAT_08005720[8] = DAT_08005720[8] & 0xfffffffe;\n      puVar1[8] = puVar1[8] & 0xfffffffb;\n    }\n    if (param_1[3] == 0) {\n      iVar3 = FUN_08003760();\n      while ((DAT_08005838[8] & 2) != 0) {\n        iVar4 = FUN_08003760();\n        if (5000 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar3 = FUN_08003760();\n      while ((DAT_08005720[8] & 2) == 0) {\n        iVar4 = FUN_08003760();\n        if (5000 < (uint)(iVar4 - iVar3)) {\n          return 3;\n        }\n      }\n    }\n    if (bVar7) {\n      DAT_08005838[7] = DAT_08005838[7] & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\n    uVar5 = 0;\n  }\n  else if ((DAT_08005838[1] & 0xc) == 8) {\n    uVar5 = 1;\n  }\n  else if (param_1[7] == 2) {\n    *DAT_0800583c = 0;\n    iVar3 = FUN_08003760();\n    do {\n      if ((*DAT_08005838 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          DAT_08005838[1] = DAT_08005838[1] & 0xfffdffff | param_1[2];\n        }\n        DAT_08005838[1] = DAT_08005838[1] & 0xffc2ffff | param_1[8] | param_1[9];\n        *DAT_0800583c = 1;\n        iVar3 = FUN_08003760();\n        do {\n          if ((*DAT_08005838 & 0x2000000) != 0) {\n            return 0;\n          }\n          iVar4 = FUN_08003760();\n        } while ((uint)(iVar4 - iVar3) < 3);\n        return 3;\n      }\n      iVar4 = FUN_08003760();\n    } while ((uint)(iVar4 - iVar3) < 3);\n    uVar5 = 3;\n  }\n  else {\n    *DAT_0800583c = 0;\n    iVar3 = FUN_08003760();\n    do {\n      if ((*DAT_08005838 & 0x2000000) == 0) {\n        return 0;\n      }\n      iVar4 = FUN_08003760();\n    } while ((uint)(iVar4 - iVar3) < 3);\n    uVar5 = 3;\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08003760",
                "FUN_08005434"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005460",
            "calling": [
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "FUNC_08005460"
        },
        "FUN_08008854": {
            "renaming": {
                "FUN_08008854": "return_zero_08008854"
            },
            "code": "int return_zero_08008854(void) {\n                     return 0;\n                 }",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008854",
            "calling": [
                "FUN_0800a130"
            ],
            "imported": false,
            "current_name": "return_zero_08008854"
        },
        "FUN_080064cc": {
            "renaming": {
                "FUN_080064cc": "read_data_from_param_080064cc",
                "param_1": "param_data",
                "pbVar2": "data_byte_ptr",
                "sVar1": "data_length_ptr",
                "first_char": "first_char",
                "data_format": "data_format",
                "data_ptr": "data_ptr",
                "data_value_ptr": "data_value_ptr"
            },
            "code": "int read_data_from_param_080064cc(int *param_data) {\n  char first_char = *(char *)((int)param_data + 0x39);\n  if (first_char != '!') {\n    return 2;\n  }\n  int data_format = param_data[2];\n  uint *data_ptr = (uint *)*param_data;\n  uint *data_value_ptr = (uint *)(*param_data + 4);\n  short *data_length_ptr = (short *)((int)param_data + 0x26);\n  byte *data_byte_ptr = (byte *)param_data[8];\n  if (data_format == 0x1000) {\n    *data_value_ptr = *(ushort *)data_byte_ptr & 0x1ff;\n    if (param_data[4] == 0) {\n      param_data[8] = param_data[8] + 2;\n    }\n    else {\n      param_data[8] = param_data[8] + 1;\n    }\n  }\n  else {\n    *data_value_ptr = (uint)*data_byte_ptr;\n    param_data[8] = (int)(data_byte_ptr + 1);\n  }\n  *data_length_ptr = *data_length_ptr - 1;\n  if (*data_length_ptr == 0) {\n    *data_value_ptr = *data_value_ptr & 0xffffff7f;\n    *data_value_ptr = *data_value_ptr | 0x40;\n    return 0;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064cc",
            "calling": [
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "read_data_from_param_080064cc"
        },
        "FUN_08004d6c": {
            "renaming": {
                "FUN_08004d6c": "update_flags_08004d6c",
                "param_1": "flag",
                "puVar1": "b_ptr",
                "flag_char": "flag_char",
                "flag_short": "flag_short",
                "DAT_08004d84": "0x2",
                "PTR_DAT_08004d88": "flag_ptr",
                "PTR_DAT_08004d8c": "flag_char_2"
            },
            "code": "uint32_t update_flags_08004d6c(uint32_t **flag)\n{\n    uint32_t *PTR_DAT_08004d88 = *flag;\n    char flag_char = *(char *)((int)flag + 0x3d);\n    uint16_t flag_short = *(uint16_t *)((int)flag + DAT_08004d84a);\n    if (flag_char == '\"') {\n        if (flag_short < 4) {\n            uint32_t *b_ptr = flag[0xb];\n            if (b_ptr == (uint32_t *)DAT_08004d84) {\n                *PTR_DAT_08004d88 |= 0x400;\n            }\n            else {\n                *PTR_DAT_08004d88 &= 0xfffffbff;\n                *PTR_DAT_08004d88 |= 0x800;\n            }\n            PTR_DAT_08004d88[1] &= 0xfffffbff;\n        }\n        else {\n            uint32_t *b_ptr = flag[9];\n            *b_ptr = (uint32_t)((int)*b_ptr + 1);\n            *(char *)b_ptr = (char)PTR_DAT_08004d88[4];\n            flag_short--;\n            *(undefined *)((int)flag + 0x3d) = DAT_08004d840;\n            flag[0xc] = (uint32_t *)0x0;\n            char PTR_DAT_08004d8c = *(char *)((int)flag + 0x3e);\n            if (PTR_DAT_08004d8c == '@') {\n                *(undefined *)((int)flag + 0x3e) = 0;\n                do_nothing_08004d6a();\n            }\n            else {\n                *(undefined *)((int)flag + 0x3e) = 0;\n                do_nothing_08004a20();\n            }\n        }\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004a20",
                "FUN_08004d6a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d6c",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "update_flags_08004d6c"
        },
        "FUN_08004ac2": {
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "data_ptr",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "data_val",
                "uVar2": "data_flag",
                "FUN_08007fa0": "call_function"
            },
            "code": "undefined4 process_data_08004ac2(int *data_ptr, undefined4 arg2, undefined4 arg3, undefined4 arg4)\n{\n    undefined2 data_val;\n    uint32_t data_flag;\n    data_flag = *(uint32_t *)(*data_ptr + 0x18);\n    if ((data_flag & 0x80) == 0) {\n        data_val = *(undefined2 *)(data_ptr + 3);\n    }\n    else {\n        data_val = *(undefined2 *)(data_ptr + 6);\n    }\n    call_function(data_ptr, (*(uint32_t *)(*data_ptr + 0x18) & 4) == 0, data_val, data_flag, arg4);\n    return 0;\n}",
            "called": [
                "FUN_08007fa0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ac2",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_data_08004ac2"
        },
        "FUN_08008850": {
            "renaming": {
                "FUN_08008850": "return_one_08008850"
            },
            "code": "int return_one_08008850() {\n  int result = 1;\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008850",
            "calling": [
                "FUN_0800a110"
            ],
            "imported": false,
            "current_name": "return_one_08008850"
        },
        "FUN_08006ca8": {
            "renaming": {
                "FUN_08006ca8": "process_data_08006ca8",
                "param_1": "data",
                "param_2": "size",
                "iVar2": "data_offset",
                "uVar3": "result",
                "uVar4": "flag",
                "uVar5": "current_data",
                "local_18": "bit_mask",
                "local_14": "const_3",
                "local_10": "const_0",
                "puVar1": "ptr",
                "DAT_08006d14": "target_data_1",
                "DAT_08006d18": "target_data_2",
                "PTR_DAT_08006d1c": "ptr_dat"
            },
            "code": "void process_data_08006ca8(uint *data, undefined4 size)\n{\n  uint current_data = *data;\n  uint target_data;\n  uint flag_1 = 0x200;\n  uint flag_2 = 0x400;\n  uint flag_1_result;\n  uint flag_2_result;\n  uint bit_mask;\n  undefined4 result;\n  undefined *ptr = PTR_DAT_08006d1c;\n  target_data = DAT_08006d14;\n\n  if (current_data == target_data) {\n    *(uint *)(DAT_08006d20 + 0x18) |= flag_1;\n    flag_1_result = *(uint *)(DAT_08006d20 + 0x18) & flag_1;\n  }\n  else {\n    target_data = DAT_08006d18;\n    if (current_data == target_data) {\n      *(uint *)(DAT_08006d20 + 0x18) |= flag_2;\n      flag_2_result = *(uint *)(DAT_08006d20 + 0x18) & flag_2;\n    }\n  }\n\n  bit_mask = 1 << ((byte)*ptr & 0xf) & 0xffff;\n  result = FUN_08006bb8((uint)((int)(char)*ptr << 0x18) >> 0x1c, size, flag_1_result, flag_2_result);\n  FUN_080040e8(result, &bit_mask);\n}\n",
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ca8",
            "calling": [
                "FUN_08003bd8"
            ],
            "imported": false,
            "current_name": "process_data_08006ca8"
        },
        "FUN_08002fc2": {
            "renaming": {
                "FUN_08002fc2": "set_value_at_offset_08002fc2",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "value",
                "*(undefined4 *)(param_1 + (param_2 + 0x42) * 4)": "*(int *)(base_address + (offset + 0x42) * 4)"
            },
            "code": "void set_value_at_offset_08002fc2(int base_address, int offset, int value)\n{\n  *(int *)(base_address + (offset + 0x42) * 4) = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fc2",
            "calling": [
                "FUN_080005f8",
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "set_value_at_offset_08002fc2"
        },
        "FUN_08008afa": {
            "renaming": {
                "FUN_08008afa": "calculate_result_08008afa",
                "param_1": "input_param",
                "*(short *)(param_1 + 0x134)": "first_value",
                "*(short *)(param_1 + 0x136)": "second_value",
                "result": "result"
            },
            "code": "ushort calculate_result_08008afa(int input_param){\n    ushort first_value = *(ushort *)(input_param + 0x134);\n    ushort second_value = *(ushort *)(input_param + 0x136);\n    ushort result = (first_value + 0x40) - second_value & 0x3f;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008afa",
            "calling": [
                "FUN_08008bf4"
            ],
            "imported": false,
            "current_name": "calculate_result_08008afa"
        },
        "FUN_08003048": {
            "renaming": {
                "process_data": "process_data",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "puVar1": "data_start_ptr",
                "FUN_08003048": "process_data_08003048"
            },
            "code": "void process_data_08003048(undefined4 data_ptr, undefined4 data_size, undefined4 param_3, undefined4 param_4)\n{\n    undefined *data_start_ptr;\n    data_start_ptr = PTR_DAT_08003068;\n    FUN_08008c44(data_start_ptr, data_size, 6, param_4, param_4);\n    FUN_08003002(data_ptr);\n    FUN_08002e26(data_ptr, data_start_ptr);\n    return;\n}",
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003048",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "process_data_08003048"
        },
        "FUN_0800937c": {
            "renaming": {
                "FUN_0800937c": "FUNC_0800937c"
            },
            "code": "\nint FUNC_0800937c(int param_1,undefined *param_2,byte *param_3,int *param_4)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int *piVar3;\n  bool bVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  int unaff_r9;\n  int iVar7;\n  int *local_8c;\n  uint local_88;\n  int local_84;\n  undefined4 local_80;\n  int local_7c;\n  int local_74;\n  byte local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  local_8c = param_4;\n  if ((param_1 != 0) && (*(int *)(param_1 + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (param_2 == PTR_DAT_08009588) {\n    param_2 = *(undefined **)(param_1 + 4);\n  }\n  else if (param_2 == PTR_DAT_08009590) {\n    param_2 = *(undefined **)(param_1 + 8);\n  }\n  else if (param_2 == PTR_DAT_08009594) {\n    param_2 = *(undefined **)(param_1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(param_2 + 0xc) << 0x1c)) || (*(int *)(param_2 + 0x10) == 0)) &&\n     (iVar7 = FUN_08009a80(param_1,param_2), iVar7 != 0)) {\n    return -1;\n  }\n  local_74 = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  pbVar5 = param_3;\nLAB_080093be:\n  pbVar6 = pbVar5;\n  if (*pbVar6 != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  pbVar5 = pbVar6 + 1;\n  if (*pbVar6 != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  iVar7 = (int)pbVar6 - (int)param_3;\n  if (iVar7 != 0) {\n    iVar2 = FUN_08009358(param_1,param_2,param_3,iVar7);\n    if (iVar2 == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(param_2 + 0xc) << 0x19) < 0) {\n        return -1;\n      }\n      return local_74;\n    }\n    local_74 = local_74 + iVar7;\n  }\n  if (*pbVar6 == 0) goto LAB_08009568;\n  local_88 = 0;\n  local_7c = 0;\n  local_84 = -1;\n  local_80 = 0;\n  local_45 = 0;\n  local_30 = 0;\n  pbVar5 = pbVar6 + 1;\n  while( true ) {\n    iVar7 = FUN_08009f2c(PTR_s___0__0800958c,*pbVar5);\n    puVar1 = PTR_DAT_08009598;\n    param_3 = pbVar5 + 1;\n    if (iVar7 == 0) break;\n    local_88 = 1 << (iVar7 - (int)PTR_s___0__0800958c & 0xffU) | local_88;\n    pbVar5 = param_3;\n  }\n  if ((int)(local_88 << 0x1b) < 0) {\n    local_45 = 0x20;\n  }\n  if ((int)(local_88 << 0x1c) < 0) {\n    local_45 = 0x2b;\n  }\n  if (*pbVar5 == 0x2a) {\n    piVar3 = local_8c + 1;\n    iVar7 = *local_8c;\n    local_8c = piVar3;\n    if (-1 < iVar7) goto LAB_08009498;\n    local_7c = -iVar7;\n    local_88 = local_88 | 2;\n  }\n  else {\n    bVar4 = false;\n    iVar7 = local_7c;\n    param_3 = pbVar5;\n    while( true ) {\n      if (9 < *param_3 - 0x30) break;\n      iVar7 = iVar7 * 10 + (*param_3 - 0x30);\n      bVar4 = true;\n      param_3 = param_3 + 1;\n    }\n    if (bVar4) {\nLAB_08009498:\n      local_7c = iVar7;\n    }\n  }\n  if (*param_3 == 0x2e) {\n    if (param_3[1] == 0x2a) {\n      param_3 = param_3 + 2;\n      piVar3 = local_8c + 1;\n      local_84 = *local_8c;\n      local_8c = piVar3;\n      if (local_84 < 0) {\n        local_84 = -1;\n      }\n    }\n    else {\n      bVar4 = false;\n      iVar7 = 0;\n      local_84 = 0;\n      while( true ) {\n        param_3 = param_3 + 1;\n        if (9 < *param_3 - 0x30) break;\n        iVar7 = iVar7 * 10 + (*param_3 - 0x30);\n        bVar4 = true;\n      }\n      if (bVar4) {\n        local_84 = iVar7;\n      }\n    }\n  }\n  iVar7 = FUN_08009f2c(PTR_DAT_08009598,*param_3,3);\n  if (iVar7 != 0) {\n    param_3 = param_3 + 1;\n    local_88 = local_88 | 0x40 << (iVar7 - (int)puVar1 & 0xffU);\n  }\n  local_70 = *param_3;\n  param_3 = param_3 + 1;\n  iVar7 = FUN_08009f2c(PTR_s_efgEFG_0800959c,local_70,6);\n  if (iVar7 == 0) {\n    iVar7 = FUNC_08009698(param_1,&local_88,param_2,DAT_080095a4,&local_8c);\n  }\n  else {\n    iVar7 = param_1;\n    if (DAT_080095a0 == 0) {\n      local_8c = (int *)(((int)local_8c + 7U & 0xfffffff8) + 8);\n      iVar7 = unaff_r9;\n      goto LAB_0800951a;\n    }\n  }\n  if (iVar7 == -1) goto LAB_08009568;\nLAB_0800951a:\n  local_74 = local_74 + iVar7;\n  pbVar5 = param_3;\n  unaff_r9 = iVar7;\n  goto LAB_080093be;\n}\n\n",
            "called": [
                "FUN_08009698",
                "FUN_08009d50",
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009a80"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800937c",
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "imported": false,
            "current_name": "FUNC_0800937c"
        },
        "FUN_08000214": {
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "data_index",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "bVar1": "should_call",
                "iVar2": "result",
                "PTR_DAT_080002d8": "data_pointer",
                "PTR_DAT_080002dc": "data_array",
                "PTR_DAT_080002e0": "temp_array",
                "PTR_DAT_080002e4": "temp_pointer",
                "PTR_DAT_080002e8": "valid_data"
            },
            "code": "void process_data_08000214(uint data_index, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n    bool should_call = false;\n    int result = 0;\n    if (data_index <= 0x3b)\n    {\n        result = get_data(PTR_DAT_080002d8, data_index, param_3, param_4, param_4);\n        if (result == 3)\n        {\n            if (data_index < 0x3c)\n            {\n                if (PTR_DAT_080002dc[data_index] == -1)\n                {\n                    should_call = false;\n                }\n                else\n                {\n                    int temp_result = get_temp_result();\n                    if (temp_result == 0)\n                    {\n                        should_call = false;\n                    }\n                    else if (temp_result == 1)\n                    {\n                        should_call = false;\n                    }\n                    else\n                    {\n                        should_call = validate_data(PTR_DAT_080002dc[data_index], PTR_DAT_080002e8);\n                    }\n                }\n            }\n            if (should_call)\n            {\n                call_function(param_2, data_index);\n            }\n            update_data(PTR_DAT_080002d8, data_index, param_2);\n        }\n        else if (result == 4)\n        {\n            if (data_index < 0x3c)\n            {\n                if (PTR_DAT_080002dc[data_index] == -1)\n                {\n                    should_call = false;\n                }\n                else\n                {\n                    int temp_result = get_temp_result();\n                    if (temp_result == 0)\n                    {\n                        should_call = false;\n                    }\n                    else if (temp_result == 1)\n                    {\n                        should_call = false;\n                    }\n                    else\n                    {\n                        should_call = true;\n                    }\n                }\n            }\n            if (should_call)\n            {\n                process_data_08000214(PTR_DAT_080002e4 + (uint)(byte)PTR_DAT_080002e0[data_index] * 3, param_2);\n            }\n            update_data(PTR_DAT_080002d8, data_index, param_2);\n            return;\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_0800021a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000214",
            "calling": [
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "process_data_08000214"
        },
        "FUN_08003724": {
            "renaming": {
                "FUN_08003724": "set_flag_and_call_functions_08003724",
                "FUN_08003f0c": "call_function_a",
                "FUN_080036d8": "call_function_b",
                "do_nothing_080036d4": "do_nothing",
                "DAT_08003744": "data_pointer"
            },
            "code": "int set_flag_and_call_functions_08003724(void)\n{\n  *DAT_08003744 = *DAT_08003744 | 0x10;\n  call_function_a(3);\n  call_function_b(0xf);\n  do_nothing_080036d4();\n  return 0;\n}",
            "called": [
                "FUN_080036d8",
                "FUN_08003f0c",
                "FUN_080036d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003724",
            "calling": [
                "FUN_080072fa"
            ],
            "imported": false,
            "current_name": "set_flag_and_call_functions_08003724"
        },
        "FUN_080038dc": {
            "renaming": {
                "FUN_080038dc": "get_offset_from_ptr_080038dc",
                "param_1": "ptr_to_offset",
                "*param_1": "*ptr_to_offset",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "int get_offset_from_ptr_080038dc(int *PTR_to_offset)\n{\n    int offset = *(int *)(*PTR_to_offset + 0x4c);\n    return offset;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080038dc",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "get_offset_from_ptr_080038dc"
        },
        "FUN_080025ac": {
            "renaming": {
                "FUN_080025ac": "process_data_080025ac",
                "*param_1": "data_ptr",
                "param_2": "data_len",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "ptr_val",
                "uVar2": "data_index",
                "uVar3": "hash_val",
                "iVar4": "offset_1/offset_2",
                "PTR_DAT_08002628": "PTR_DAT_08002628",
                "DAT_0800262c": "DAT_0800262c",
                "PTR_DAT_08002630": "PTR_DAT_08002630",
                "FUN_08008990": "call_func_1",
                "FUN_08002400": "call_func_2",
                "FUN_0800242c": "call_func_3"
            },
            "code": "byte process_data_080025ac(byte *data_ptr, uint data_len, int param_3, int param_4)\n{\n  uint data_index;\n  uint ptr_index;\n  uint ptr_val;\n  int offset_1;\n  int offset_2;\n  uint hash_val;\n\n  if (*data_ptr < 0xc) {\n    call_func_1(data_len, 1, param_3, *data_ptr, param_4);\n    data_index = (uint)*data_ptr;\n    ptr_val = (byte)PTR_DAT_08002628[data_index * 8] & 0xffffffc0 | data_len & 0x3f;\n    PTR_DAT_08002628[data_index * 8] = (char)ptr_val;\n    offset_1 = -param_3 + 0x220;\n    if (offset_1 < 0) {\n      offset_1 = -param_3 + 0x223;\n    }\n    data_ptr[1] = (byte)((uint)(offset_1 << 0x16) >> 0x18);\n    offset_2 = -param_4 + 0x960;\n    if (offset_2 < 0) {\n      offset_2 = -param_4 + 0x963;\n    }\n    data_ptr[2] = (byte)((uint)(offset_2 << 0x16) >> 0x18);\n    hash_val = (uint)((ulonglong)DAT_0800262c * (ulonglong)*data_ptr >> 0x23);\n    if (call_func_2(hash_val, ptr_val, data_index, (int)((ulonglong)DAT_0800262c * (ulonglong)*data_ptr)) == 0) {\n      PTR_DAT_08002630[0x44] = (char)hash_val;\n      call_func_3();\n    }\n    PTR_DAT_08002628[(uint)*data_ptr * 8] = PTR_DAT_08002628[(uint)*data_ptr * 8] | 0x40;\n  }\n  return *data_ptr;\n}",
            "called": [
                "FUN_08008990",
                "FUN_08002400",
                "FUN_0800242c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025ac",
            "calling": [
                "FUN_08000500",
                "FUN_08002634"
            ],
            "imported": false,
            "current_name": "process_data_080025ac"
        },
        "FUN_08002634": {
            "renaming": {
                "FUN_08002634": "process_data_08002634",
                "param_1": "input1",
                "param_2": "input2",
                "FUN_080025ac": "send_data",
                "param_4": "output"
            },
            "code": "void process_data_08002634(int input1, int input2) {\n  send_data(input1, input2, 0x220, 0x960, output);\n  return;\n}",
            "called": [
                "FUN_080025ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002634",
            "calling": [
                "FUN_08000500"
            ],
            "imported": false,
            "current_name": "process_data_08002634"
        },
        "FUN_08002f0a": {
            "renaming": {
                "FUN_08002f0a": "process_data_08002f0a",
                "param_1": "data_ptr",
                "FUN_0800325a": "call_another_function"
            },
            "code": "void process_data_08002f0a(int data_ptr)\n{\n  call_another_function(data_ptr + 0x40);\n  return;\n}",
            "called": [
                "FUN_0800325a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f0a",
            "calling": [
                "FUN_08001c18"
            ],
            "imported": false,
            "current_name": "process_data_08002f0a"
        },
        "FUN_08005bb8": {
            "renaming": {
                "FUN_08005bb8": "calculate_value_08005bb8",
                "param_1": "input",
                "uVar1": "result",
                "local_24": "local_variable",
                "abStack_20": "stack_array",
                "uStack_1c": "data_1",
                "uStack_18": "data_2",
                "uStack_14": "data_3"
            },
            "code": "uint calculate_value_08005bb8(int input)\n{\n  uint result;\n  undefined2 local_variable;\n  byte stack_array[4];\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_3;\n  \n  data_3 = *(undefined4 *)(PTR_DAT_08005ca0 + 8);\n  data_2 = *(undefined4 *)(PTR_DAT_08005ca0 + 4);\n  data_1 = *(undefined4 *)PTR_DAT_08005ca0;\n  local_variable = *(undefined2 *)(PTR_DAT_08005ca0 + 0x10);\n  if (input == 2) {\n    result = calculate_value_08005bb8_helper();\n    result = result / ((((DAT_08005ca4[1] << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input == 0x10) {\n    if ((*DAT_08005ca4 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      result = DAT_08005cb0;\n      if ((DAT_08005ca4[1] & 0x10000) != 0) {\n        result = DAT_08005ca8 / *(byte *)((int)&local_variable - ((int)(DAT_08005ca4[1] << 0xe) >> 0x1f));\n      }\n      result = result * stack_array[(DAT_08005ca4[1] << 10) >> 0x1c];\n      if ((DAT_08005ca4[1] & 0x400000) == 0) {\n        result = (uint)((ulonglong)DAT_08005cac * (ulonglong)(result * 2) >> 0x21);\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((DAT_08005ca4[8] & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else {\n      result = DAT_08005ca4[8] & 0x300;\n      if ((result == 0x200) && ((DAT_08005ca4[9] & 2) != 0)) {\n        result = 32000;\n      }\n      else if (result == 0x300) {\n        if ((*DAT_08005ca4 & 0x20000) == 0) {\n          result = 0;\n        }\n        else {\n          result = 0xf424;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_08005a48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bb8",
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "imported": false,
            "current_name": "calculate_value_08005bb8"
        },
        "FUN_08007648": {
            "renaming": {
                "FUN_08007648": "initialize_game_08007648",
                "param_1": "game_state",
                "param_2": "game_mode",
                "param_3": "difficulty",
                "param_4": "game_id",
                "cVar1": "current_char",
                "uVar2": "random_value",
                "iVar3": "result",
                "puVar4": "current_state",
                "local_34": "zero_ptr",
                "local_30": "difficulty_ptr",
                "local_2c": "zero_ptr_2",
                "local_28": "zero_ptr_3",
                "local_24": "zero_ptr_4",
                "local_20": "zero_ptr_5",
                "local_1c": "zero_ptr_6"
            },
            "code": "void initialize_game_08007648(uint32_t *game_state, uint32_t game_mode, uint32_t difficulty, uint32_t game_id)\n{\n    uint32_t random_value;\n    uint32_t *current_state = game_state + 1;\n    uint32_t zero = 0;\n    uint32_t one = 1;\n    uint32_t *local_34 = &zero;\n    uint32_t *local_30 = &zero;\n    uint32_t *local_2c = &zero;\n    uint32_t *local_28 = &zero;\n    uint32_t *local_24 = &zero;\n    uint32_t *local_20 = &zero;\n    uint32_t *local_1c = &zero;\n    *game_state = 0x40000000;\n    *(game_state + 1) = 0x40000000;\n    *(game_state + 4) = game_mode;\n    random_value = generate_random_value();\n    *(game_state + 2) = (uint32_t)(((uint64_t)DAT_080076dc * (uint64_t)random_value) >> 0x32) - 1;\n    *(game_state + 5) = 0;\n    *(game_state + 3) = 0;\n    *(game_state + 6) = 0;\n    *(game_state + 0x13) = game_id;\n    *local_34 = 0;\n    *local_2c = 0;\n    *local_24 = 0;\n    *local_28 = 0;\n    *local_20 = 0;\n    *local_1c = 0;\n    *local_30 = difficulty;\n    uint32_t cVar = get_current_character(*game_state);\n    print_character(cVar, 0xe, 0);\n    cVar = get_current_character(*game_state);\n    print_character(cVar);\n    int32_t result = check_game_completion(current_state);\n    if ((result == 0) && (result = check_game_loss(current_state, local_34, 0), result == 0)) {\n        reset_game(current_state, 0);\n    }\n}\n",
            "called": [
                "FUN_08006280",
                "FUN_08007544",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_08003f30",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007648",
            "calling": [
                "FUN_0800242c"
            ],
            "imported": false,
            "current_name": "initialize_game_08007648"
        },
        "FUN_08008858": {
            "renaming": {
                "FUN_08008858": "return_zero_08008858"
            },
            "code": "int return_zero_08008858(){\n\treturn 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008858",
            "calling": [
                "FUN_0800a168"
            ],
            "imported": false,
            "current_name": "return_zero_08008858"
        },
        "FUN_08004a20": {
            "renaming": {
                "FUN_08004a20": "do_nothing_08004a20"
            },
            "code": "\nvoid do_nothing_08004a20(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a20",
            "calling": [
                "FUN_08004d6c",
                "FUN_08004e3c"
            ],
            "imported": false,
            "current_name": "do_nothing_08004a20"
        },
        "FUN_080063c0": {
            "renaming": {
                "FUN_080063c0": "verify_parameters_080063c0",
                "param_1": "params",
                "param_2": "param_count",
                "puVar1": "param_ptr",
                "DAT_0800641c": "PTR_end_of_params"
            },
            "code": "uint verify_parameters_080063c0(uint **params, uint param_count) {\n  uint *param_ptr = *params;\n  FUN_process_parameters(*params, param_count, 0);\n  if (((param_ptr == DAT_0800641c) && ((param_ptr[8] & 0x1111) == 0)) && ((param_ptr[8] & 0x444) == 0)) {\n    param_ptr[0x11] = param_ptr[0x11] & 0xffff7fff;\n  }\n  param_ptr = *params;\n  if (((param_ptr[8] & 0x1111) == 0) && ((param_ptr[8] & 0x444) == 0)) {\n    *param_ptr = *param_ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)params + 0x3d) = 1;\n  return 0;\n}",
            "called": [
                "FUN_08006262"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080063c0",
            "calling": [
                "FUN_080071e4"
            ],
            "imported": false,
            "current_name": "verify_parameters_080063c0"
        },
        "FUN_08004a24": {
            "renaming": {
                "FUN_08004a24": "decode_message_08004a24",
                "param_1": "message_ptr",
                "cVar1": "message_type",
                "pbVar2": "message_data_ptr"
            },
            "code": "int decode_message_08004a24(int *message_ptr) {\n    char message_type = *(char *)((int)message_ptr + 0x3d);\n    if (*(short *)((int)message_ptr + 0x2a) != 0) {\n        byte *message_data_ptr = (byte *)message_ptr[9];\n        message_ptr[9] = (int)(message_data_ptr + 1);\n        *(uint *)(*message_ptr + 0x10) = (uint)*message_data_ptr;\n        *(short *)((int)message_ptr + 0x2a) = *(short *)((int)message_ptr + 0x2a) + -1;\n        if ((*(short *)((int)message_ptr + 0x2a) == 0) && (message_type == ')')) {\n            *(uint *)(*message_ptr + 4) = *(uint *)(*message_ptr + 4) & 0xfffffbff;\n            message_ptr[0xc] = 0x21;\n            *(undefined *)((int)message_ptr + 0x3d) = 0x28;\n            do_nothing_08004a22();\n        }\n    }\n    return 0;\n}",
            "called": [
                "FUN_08004a22"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a24",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "decode_message_08004a24"
        },
        "FUN_08004a22": {
            "renaming": {
                "FUN_08004a22": "do_nothing_08004a22"
            },
            "code": "\nvoid do_nothing_08004a22(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a22",
            "calling": [
                "FUN_08004a24",
                "FUN_08004aec"
            ],
            "imported": false,
            "current_name": "do_nothing_08004a22"
        },
        "FUN_08002fba": {
            "renaming": {
                "FUN_08002fba": "get_value_at_offset_08002fba",
                "param_1": "base_address",
                "param_2": "offset",
                "*(undefined4 *)(param_1 + (param_2 + 0x42) * 4)": "*(int *)(base_address + (offset + 0x42) * 4)"
            },
            "code": "int get_value_at_offset_08002fba(int base_address, int offset){\n\treturn *(int *)(base_address + (offset + 0x42) * 4);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fba",
            "calling": [
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "get_value_at_offset_08002fba"
        },
        "FUN_080090cc": {
            "renaming": {
                "FUN_080090cc": "assert_failed_080090cc",
                "param_1": "line",
                "param_2": "file",
                "param_3": "expression",
                "param_4": "errno_copy",
                "uVar1": "errno",
                "puVar2": "PTR_s___function__080090fc",
                "uVar3": "uVar3",
                "uVar4": "uVar4"
            },
            "code": "void assert_failed_080090cc(int line, char *file, char *expression) {\n  int errno_copy = errno;\n  fprintf(stderr, \"assertion '%s' failed, file '%s', line %d, errno %d\\n\",\n          expression, file, line, errno_copy);\n  abort();\n}\n",
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080090cc",
            "calling": [
                "FUN_08008c44"
            ],
            "imported": false,
            "current_name": "assert_failed_080090cc"
        },
        "FUN_080049e0": {
            "renaming": {
                "FUN_080049e0": "set_flags_080049e0",
                "param_1": "flags_ptr",
                "puVar1": "flags",
                "PTR_": "flags",
                "DAT_": "constants"
            },
            "code": "uint32_t set_flags_080049e0(uint32_t **PTR__ptr)\n{\n  uint32_t *PTR_ = *PTR__ptr;\n  if (PTR_[15] != ' ') {\n    return 2;\n  }\n  PTR_[15] = 0x28;\n  if ((PTR_[0] & 1) == 0) {\n    PTR_[0] |= 1;\n  }\n  PTR_[0][0] |= 0x400;\n  PTR_[0][1] |= 0x300;\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080049e0",
            "calling": [
                "FUN_08007f7c",
                "FUN_08007ff0",
                "FUN_08007f8e",
                "FUN_08008020"
            ],
            "imported": false,
            "current_name": "set_flags_080049e0"
        },
        "FUN_08006d24": {
            "renaming": {
                "FUN_08006d24": "update_flags_08006d24",
                "param_1": "flag",
                "iVar1": "flags_ptr"
            },
            "code": "void update_flags_08006d24(int *flag)\n{\n  int flags_ptr = DAT_08006d7c;\n  if (*flag != DAT_08006d74) {\n    if (*flag == DAT_08006d78) {\n      *(uint *)(flags_ptr + 0xc) |= 0x400;\n      *(uint *)(flags_ptr + 0xc) &= 0xfffffbff;\n      *(uint *)(flags_ptr + 0x18) &= 0xfffffbff;\n    }\n    return;\n  }\n  *(uint *)(flags_ptr + 0xc) |= 0x200;\n  *(uint *)(flags_ptr + 0xc) &= 0xfffffdff;\n  *(uint *)(flags_ptr + 0x18) &= 0xfffffdff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d24",
            "calling": [
                "FUN_08003ce8"
            ],
            "imported": false,
            "current_name": "update_flags_08006d24"
        },
        "FUN_080098d8": {
            "renaming": {
                "FUN_080098d8": "process_data_080098d8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "iVar1": "ptr",
                "uVar2": "data1",
                "uStack_c": "data2",
                "uStack_8": "data3",
                "uStack_4": "data4",
                "PTR_PTR_DAT_08009904": "PTR_DATA",
                "FUN_08009d50": "clean_up",
                "FUNC_0800937c": "execute"
            },
            "code": "void process_data_080098d8(int data1, int data2, int data3, int data4)\n{\n  int ptr = *(int *)PTR_PTR_DAT_08009904;\n  if ((ptr != 0) && (*(int *)(ptr + 0x18) == 0)) {\n    clean_up(ptr);\n  }\n  FUNC_0800937c(ptr, *(int *)(ptr + 8), data1, &data2, data1, &data2);\n  return;\n}",
            "called": [
                "FUN_08009d50",
                "FUN_0800937c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080098d8",
            "calling": [
                "FUN_08007544",
                "FUN_08007594",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_080075dc"
            ],
            "imported": false,
            "current_name": "process_data_080098d8"
        },
        "FUN_08009270": {
            "renaming": {
                "FUN_08009270": "allocate_memory_block_08009270",
                "param_1": "error_code",
                "param_2": "size",
                "puVar1": "pointer_1",
                "uVar2": "result",
                "puVar3": "current_block_ptr",
                "iVar4": "padding",
                "puVar5": "block_ptr",
                "uVar6": "block_size",
                "puVar7": "prev_block_ptr",
                "uVar8": "aligned_size"
            },
            "code": "uint allocate_memory_block_08009270(undefined4 *error_code, uint size) {\n  uint aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *error_code = 0xc;\n  }\n  else {\n    do_nothing_08009f48();\n    uint *prev_block_ptr = *(uint **)PTR_DAT_08009324;\n    uint *current_block_ptr = *(uint **)PTR_DAT_08009324;\n    while (current_block_ptr != (uint *)0x0) {\n      uint block_size = *current_block_ptr - aligned_size;\n      if (-1 < (int)block_size) {\n        if (block_size < 0xc) {\n          if (prev_block_ptr == current_block_ptr) {\n            uint next_block = prev_block_ptr[1];\n            *(uint *)PTR_DAT_08009324 = next_block;\n          }\n          else {\n            uint next_block = current_block_ptr[1];\n            prev_block_ptr[1] = next_block;\n            prev_block_ptr = current_block_ptr;\n          }\n        }\n        else {\n          *current_block_ptr = block_size;\n          *(uint *)((int)current_block_ptr + block_size) = aligned_size;\n          prev_block_ptr = (uint *)((int)current_block_ptr + block_size);\n        }\n        do_nothing_08009f4a(error_code);\n        uint aligned_block_size = (int)prev_block_ptr + 0xbU & 0xfffffff8;\n        int padding = aligned_block_size - (int)(prev_block_ptr + 1);\n        if (padding != 0) {\n          *(int *)((int)prev_block_ptr + padding) = -padding;\n          return aligned_block_size;\n        }\n        return aligned_block_size;\n      }\n      prev_block_ptr = current_block_ptr;\n      current_block_ptr = (uint *)current_block_ptr[1];\n    }\n    if (*(int *)PTR_DAT_08009328 == 0) {\n      uint result = FUN_08009918(error_code);\n      *(undefined4 *)PTR_DAT_08009328 = result;\n    }\n    uint *new_block_ptr = (uint *)FUN_08009918(error_code,aligned_size);\n    if ((new_block_ptr != (uint *)0xffffffff) && ((prev_block_ptr = (uint *)((int)new_block_ptr + 3U & 0xfffffffc), new_block_ptr == prev_block_ptr || (padding = FUN_08009918(error_code,(int)prev_block_ptr - (int)new_block_ptr), padding != -1)))) {\n      *prev_block_ptr = aligned_size;\n      do_nothing_08009f4a(error_code);\n      uint aligned_block_size = (int)prev_block_ptr + 0xbU & 0xfffffff8;\n      padding = aligned_block_size - (int)(prev_block_ptr + 1);\n      if (padding != 0) {\n        *(int *)((int)prev_block_ptr + padding) = -padding;\n        return aligned_block_size;\n      }\n      return aligned_block_size;\n    }\n    *error_code = 0xc;\n    do_nothing_08009f4a(error_code);\n  }\n  return 0;\n}",
            "called": [
                "FUN_08009918",
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009270",
            "calling": [
                "FUN_08009d24",
                "FUN_08009eac",
                "FUN_08009908",
                "FUN_08009190"
            ],
            "imported": false,
            "current_name": "allocate_memory_block_08009270"
        },
        "FUN_08005e6c": {
            "renaming": {
                "FUN_08005e6c": "do_nothing_08005e6c"
            },
            "code": "\nvoid do_nothing_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e6c",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "do_nothing_08005e6c"
        },
        "FUN_08008500": {
            "renaming": {
                "FUN_08008500": "check_value_08008500",
                "param_1": "value_to_check",
                "param_2": "max_value",
                "cVar1": "character",
                "iVar2": "start_time",
                "iVar3": "character_value",
                "uVar4": "index",
                "PTR_DAT_080085a8": "characters",
                "PTR_DAT_080085ac": "character_data",
                "PTR_DAT_080085b0": "values",
                "PTR_DAT_080085b4": "max_value_data",
                "FUN_08003760": "get_current_time",
                "FUN_08007320": "get_character_value",
                "FUN_080067ac": "execute_function"
            },
            "code": "uint check_value_08008500(uint value_to_check, uint max_value) {\n  int start_time = get_current_time();\n  char character = PTR_DAT_080085a8[1];\n  int character_value = get_character_value((int)character, PTR_DAT_080085ac);\n  if (character_value == 0) {\n    return 0;\n  }\n  uint index = 0;\n  while (index < 5 && (PTR_DAT_080085b0[index] != 0 && (character_value = get_character_value((int)character, PTR_DAT_080085ac), *PTR_DAT_080085b0[index] != character_value))) {\n    index++;\n  }\n  if (index > 4) {\n    if (max_value > 4 && (update_value(), max_value > 4)) {\n      return 0;\n    }\n    index = (uint)max_value;\n  }\n  do {\n    character_value = execute_function(*PTR_DAT_080085b0[index], value_to_check, max_value & 0xffff, 1000);\n    if (character_value == 0) {\n      return max_value;\n    }\n    int current_time = get_current_time();\n  } while ((uint)(current_time - start_time) < 1000);\n  return 0;\n}",
            "called": [
                "FUN_08003760",
                "FUN_08007320",
                "FUN_080067ac",
                "FUN_080084b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008500",
            "calling": [
                "FUN_0800885c"
            ],
            "imported": false,
            "current_name": "check_value_08008500"
        },
        "FUN_080048c8": {
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_pointer",
                "param_2": "input_array",
                "param_3": "array_size",
                "param_4": "output_array",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "code": "int validate_input_080048c8(uint **input_pointer, uint *input_array, int array_size, uint *output_array) {\n    int result = 0;\n    uint *ptr;\n    if (*(char *)((int)input_pointer + 0x3d) == '(') {\n        if (input_array == NULL || array_size == 0) {\n            result = 1;\n        }\n        else if (*(char *)(input_pointer + 0xf) == '\\x01') {\n            result = 2;\n        }\n        else {\n            *(undefined *)(input_pointer + 0xf) = 1;\n            ptr = *input_pointer;\n            if ((*ptr & 1) == 0) {\n                *ptr = *ptr | 1;\n            }\n            **input_pointer = **input_pointer & 0xfffff7ff;\n            *(undefined *)((int)input_pointer + 0x3d) = 0x29;\n            *(undefined *)((int)input_pointer + 0x3e) = 0x20;\n            result = 0;\n            input_pointer[0x10] = NULL;\n            input_pointer[9] = input_array;\n            *(short *)((int)input_pointer + 0x2a) = (short)array_size;\n            input_pointer[0xb] = output_array;\n            *(undefined2 *)(input_pointer + 10) = *(undefined2 *)((int)input_pointer + 0x2a);\n            *(undefined *)(input_pointer + 0xf) = 0;\n            (*input_pointer)[1] = (*input_pointer)[1] | 0x700;\n        }\n    }\n    else {\n        result = 2;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080048c8",
            "calling": [
                "FUN_08007fa0"
            ],
            "imported": false,
            "current_name": "validate_input_080048c8"
        },
        "FUN_08009954": {
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "size",
                "pcVar3": "destination_ptr",
                "iVar2": "remaining_size",
                "cVar1": "current_char"
            },
            "code": "void copy_string_08009954(char *destination, char *source, int size)\n{\n  char current_char;\n  int remaining_size = size;\n  \n  do {\n    current_char = *source;\n    *destination = current_char;\n    destination++;\n    source++;\n    remaining_size--;\n  } while (current_char != '\\0');\n  \n  for (; remaining_size > 0; remaining_size--) {\n    *destination = '\\0';\n    destination++;\n  }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009954",
            "calling": [
                "FUN_08002e44"
            ],
            "imported": false,
            "current_name": "copy_string_08009954"
        },
        "FUN_08005aa4": {
            "renaming": {
                "FUN_08005aa4": "set_flags_08005aa4",
                "*param_1": "*flags",
                "puVar1": "flag_ptr1",
                "iVar2": "time1",
                "iVar3": "time2",
                "uVar4": "flag1",
                "bVar5": "flag3"
            },
            "code": "uint32_t set_flags_08005aa4(uint32_t *flags)\\n\\\n{\\n\\\n  uint32_t *flag_ptr1;\\n\\\n  uint32_t *flag_ptr2;\\n\\\n  int time1;\\n\\\n  int time2;\\n\\\n  uint32_t flag1;\\n\\\n  uint32_t flag2;\\n\\\n  bool flag3;\\n\\\n  \\n\\\n  if ((*flags & 1) != 0) {\\n\\\n    flag3 = (*(uint32_t *)(DAT_08005bac + 0x1c) & 0x10000000) == 0;\\n\\\n    if (flag3) {\\n\\\n      *(uint32_t *)(DAT_08005bac + 0x1c) |= 0x10000000;\\n\\\n    }\\n\\\n    if ((*DAT_08005bb0 & 0x100) == 0) {\\n\\\n      *DAT_08005bb0 |= 0x100;\\n\\\n      time1 = FUN_08003760();\\n\\\n      while ((*DAT_08005bb0 & 0x100) == 0) {\\n\\\n        time2 = FUN_08003760();\\n\\\n        if (100 < (uint)(time2 - time1)) {\\n\\\n          return 3;\\n\\\n        }\\n\\\n      }\\n\\\n    }\\n\\\n    flag_ptr1 = DAT_08005bb4;\\n\\\n    flag_ptr2 = DAT_08005bac;\\n\\\n    flag1 = *(uint32_t *)(DAT_08005bac + 0x20) & 0x300;\\n\\\n    if ((flag1 != 0) && (flag1 != (flags[1] & 0x300))) {\\n\\\n      flag1 = *(uint32_t *)(DAT_08005bac + 0x20);\\n\\\n      *DAT_08005bb4 = 1;\\n\\\n      *flag_ptr1 = 0;\\n\\\n      *(uint32_t *)(flag_ptr2 + 0x20) = flag1 & 0xfffffcff;\\n\\\n      if ((flag1 & 1) != 0) {\\n\\\n        time1 = FUN_08003760();\\n\\\n        while ((*(uint32_t *)(DAT_08005bac + 0x20) & 2) == 0) {\\n\\\n          time2 = FUN_08003760();\\n\\\n          if (5000 < (uint)(time2 - time1)) {\\n\\\n            return 3;\\n\\\n          }\\n\\\n        }\\n\\\n      }\\n\\\n    }\\n\\\n    flag2 = DAT_08005bac;\\n\\\n    *(uint32_t *)(DAT_08005bac + 0x20) = *(uint32_t *)(DAT_08005bac + 0x20) & 0xfffffcff | flags[1];\\n\\\n    if (flag3) {\\n\\\n      *(uint32_t *)(flag2 + 0x1c) &= 0xefffffff;\\n\\\n    }\\n\\\n  }\\n\\\n  if ((*flags & 2) != 0) {\\n\\\n    *(uint32_t *)(DAT_08005bac + 4) = *(uint32_t *)(DAT_08005bac + 4) & 0xffff3fff | flags[2];\\n\\\n  }\\n\\\n  if ((*flags & 0x10) != 0) {\\n\\\n    *(uint32_t *)(DAT_08005bac + 4) = *(uint32_t *)(DAT_08005bac + 4) & 0xffbfffff | flags[3];\\n\\\n  }\\n\\\n  return 0;\\n\\\n}",
            "called": [
                "FUN_08003760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005aa4",
            "calling": [
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "set_flags_08005aa4"
        },
        "FUN_08005e6e": {
            "renaming": {
                "FUN_08005e6e": "process_flags_08005e6e",
                "param_1": "flags",
                "iVar1": "flags",
                "do_nothing_08005e6a": "do_nothing",
                "do_nothing_08005e68": "do_nothing_else",
                "FUN_0800771c": "do_something",
                "FUN_08007736": "do_something_else",
                "do_nothing_080064ae": "do_nothing_2",
                "do_nothing_08005e6c": "do_nothing_3",
                "do_nothing_080064ac": "do_nothing_4"
            },
            "code": "void process_flags_08005e6e(int *param_1)\n{\n  int flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 2) != 0) && ((*(uint *)(flags + 0xc) & 2) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xfffffffd;\n    *(undefined *)(param_1 + 7) = 1;\n    if ((*(uint *)(*param_1 + 0x18) & 3) == 0) {\n      do_something();\n      do_nothing_08005e6a(param_1);\n    }\n    else {\n      do_nothing_08005e68(param_1);\n    }\n    *(undefined *)(param_1 + 7) = 0;\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 4) != 0) && ((*(uint *)(flags + 0xc) & 4) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xfffffffb;\n    *(undefined *)(param_1 + 7) = 2;\n    if ((*(uint *)(*param_1 + 0x18) & 0x300) == 0) {\n      do_something(param_1);\n      do_nothing_08005e6a(param_1);\n    }\n    else {\n      do_nothing_08005e68(param_1);\n    }\n    *(undefined *)(param_1 + 7) = 0;\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 8) != 0) && ((*(uint *)(flags + 0xc) & 8) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xfffffff7;\n    *(undefined *)(param_1 + 7) = 4;\n    if ((*(uint *)(*param_1 + 0x1c) & 3) == 0) {\n      do_something(param_1);\n      do_nothing_08005e6a(param_1);\n    }\n    else {\n      do_nothing_08005e68(param_1);\n    }\n    *(undefined *)(param_1 + 7) = 0;\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 0x10) != 0) && ((*(uint *)(flags + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xffffffef;\n    *(undefined *)(param_1 + 7) = 8;\n    if ((*(uint *)(*param_1 + 0x1c) & 0x300) == 0) {\n      do_something(param_1);\n      do_nothing_08005e6a(param_1);\n    }\n    else {\n      do_nothing_08005e68(param_1);\n    }\n    *(undefined *)(param_1 + 7) = 0;\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 1) != 0) && ((*(uint *)(flags + 0xc) & 1) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xfffffffe;\n    do_something_else(param_1);\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 0x80) != 0) && ((*(uint *)(flags + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xffffff7f;\n    do_nothing_080064ae(param_1);\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 0x40) != 0) && ((*(uint *)(flags + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xffffffbf;\n    do_nothing_08005e6c(param_1);\n  }\n  flags = *param_1;\n  if (((*(uint *)(flags + 0x10) & 0x20) != 0) && ((*(uint *)(flags + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(flags + 0x10) = 0xffffffdf;\n    do_nothing_080064ac(param_1);\n  }\n  return;\n}",
            "called": [
                "FUN_08005e6c",
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e68",
                "FUN_080064ae",
                "FUN_08007736",
                "FUN_080064ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e6e",
            "calling": [],
            "imported": false,
            "current_name": "process_flags_08005e6e"
        },
        "FUN_08004024": {
            "renaming": {
                "FUN_08004024": "update_flag_08004024",
                "param_1": "flag_value",
                "DAT_08004040": "flag_ptr"
            },
            "code": "void update_flag_08004024(int flag_value) {\n    if (flag_value != 4) {\n        *DAT_08004040 = *DAT_08004040 & 0xfffffffb;\n        return;\n    }\n    *DAT_08004040 = *DAT_08004040 | 4;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004024",
            "calling": [
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "update_flag_08004024"
        },
        "FUN_08005e6a": {
            "renaming": {
                "FUN_08005e6a": "do_nothing_08005e6a"
            },
            "code": "\nvoid do_nothing_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e6a",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "do_nothing_08005e6a"
        },
        "FUN_08002400": {
            "renaming": {
                "FUN_08002400": "check_if_valid_index_08002400",
                "param_1": "index",
                "uVar1": "counter"
            },
            "code": "int check_if_valid_index_08002400(int index)\n{\n  int counter = 0;\n  while(counter <= 11) {\n    if (PTR_DAT_08002428[(index * 12 + counter) * 8] & 0x40) {\n      return 1;\n    }\n    counter++;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002400",
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "imported": false,
            "current_name": "check_if_valid_index_08002400"
        },
        "FUN_08004a1e": {
            "renaming": {
                "FUN_08004a1e": "do_nothing_08004a1e"
            },
            "code": "\nvoid do_nothing_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004a1e",
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "imported": false,
            "current_name": "do_nothing_08004a1e"
        },
        "FUN_08000588": {
            "renaming": {
                "FUN_08000588": "reverse_string_08000588",
                "param_1": "index",
                "cVar1": "current_char",
                "cVar2": "target_char",
                "puVar3": "data_ptr",
                "PTR_DAT_080005cc": "data_array",
                "FUN_08002644": "reverse_string_internal",
                "PTR_DAT_080005d0": "string_ptr",
                "PTR_DAT_080005d4": "string_ptr",
                "PTR_DAT_080005d8": "next_index_ptr",
                "PTR_DAT_080005dc": "reversed_string"
            },
            "code": "void reverse_string_08000588(int index)\n{\n    char current_char;\n    char target_char;\n    undefined *data_ptr;\n    data_ptr = PTR_DAT_080005cc;\n    target_char = PTR_DAT_080005cc[index];\n    reverse_string_08000588_internal(PTR_DAT_080005cc + (uint)target_char * 3);\n    current_char = *PTR_DAT_080005d0;\n    if ((target_char == current_char) && (current_char != '\\0')) {\n        *PTR_DAT_080005d0 = current_char - 1;\n    }\n    else if (current_char != '\\0') {\n        char next_char = *PTR_DAT_080005d8;\n        *PTR_DAT_080005d8 = next_char + 1U;\n        PTR_DAT_080005dc[(byte)(next_char + 1U) - 1] = target_char;\n    }\n    PTR_DAT_080005cc[index] = 0xff;\n    return;\n}",
            "called": [
                "FUN_08002644"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000588",
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "reverse_string_08000588"
        },
        "FUN_08002644": {
            "renaming": {
                "FUN_08002644": "process_byte_08002644",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar2": "input_value",
                "bVar1": "byte_value",
                "iVar3": "result"
            },
            "code": "void process_byte_08002644(byte *input, uint32_t param_2, uint32_t param_3, uint32_t param_4) {\n  uint32_t uVar1 = (uint32_t)*input;\n  byte bVar2 = PTR_DAT_08002670[uVar1 * 8];\n  PTR_DAT_08002670[uVar1 * 8] = bVar2 & 0xbf;\n  int32_t iVar3 = FUN_08002400((uint32_t)((uint64_t)DAT_08002674 * (uint64_t)uVar1 >> 0x23), param_2, bVar2 & 0xbf, (int32_t)((uint64_t)DAT_08002674 * (uint64_t)uVar1), param_4);\n  if (iVar3 == 0) {\n    FUN_08002578(PTR_DAT_08002678);\n  }\n  return;\n}",
            "called": [
                "FUN_08002578",
                "FUN_08002400"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002644",
            "calling": [
                "FUN_08000588"
            ],
            "imported": false,
            "current_name": "process_byte_08002644"
        },
        "FUN_08008868": {
            "renaming": {
                "FUN_08008868": "do_nothing_loop_08008868"
            },
            "code": "void do_nothing_loop_08008868(void)\n{\n  while(true) {\n    // Do nothing block with infinite loop\n  }\n}",
            "called": [
                "FUN_08008868"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008868",
            "calling": [
                "FUN_08009b5c",
                "FUN_08008868"
            ],
            "imported": false,
            "current_name": "do_nothing_loop_08008868"
        },
        "FUN_080036ac": {
            "renaming": {
                "FUN_080036ac": "check_parameter_value_080036ac",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "code": "uint check_parameter_value_080036ac(int input_value) {\n  uint result = 0xffffffff;\n  if ((uint)(input_value << 0x18) >> 0x1c < 5) {\n    for (uint i = 0; i < 0x3c && input_value != (char)PTR_DAT_080036d0[i]; ++i) {\n    }\n  }\n  else {\n    result = 0xffffffff;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036ac",
            "calling": [
                "FUN_080022f8",
                "FUN_08000aec",
                "FUN_08000ef8",
                "FUN_08001cd0",
                "FUN_08000a64",
                "FUN_080005f8",
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "check_parameter_value_080036ac"
        },
        "FUN_08002f1e": {
            "renaming": {
                "FUN_08002f1e": "execute_function_at_address_08002f1e",
                "param_1": "address",
                "**(code **)**(undefined4 **)(param_1 + 0xc0)": "*(void (**)(void))(address + 0xc0)",
                "function_pointer": "function_pointer"
            },
            "code": "void execute_function_at_address_08002f1e(int address)\n{\n  void (*function_pointer)() = *(void (**)(void))(address + 0xc0);\n  function_pointer();\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f1e",
            "calling": [
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "execute_function_at_address_08002f1e"
        },
        "FUN_0800885c": {
            "renaming": {
                "FUN_0800885c": "call_with_params_0800885c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "FUN_08008500": "call_function"
            },
            "code": "void call_with_params_0800885c(void* param1, void* param2, void* param3, void* param4){\n  call_function(param2, param3, param3, param4, param4);\n  return;\n}",
            "called": [
                "FUN_08008500"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800885c",
            "calling": [
                "FUN_0800a042"
            ],
            "imported": false,
            "current_name": "call_with_params_0800885c"
        },
        "FUN_0800643c": {
            "renaming": {
                "FUN_0800643c": "set_bit_and_flag_0800643c",
                "param_1": "data_ptr",
                "param_2": "flag_value",
                "*param_1": "data",
                "0x11": "flag_index",
                "0x8000": "flag_bit",
                "**param_1": "set_bit"
            },
            "code": "uint32_t set_bit_and_flag_0800643c(uint32_t **data_ptr, uint32_t flag_value)\n{\n\tint flag_bit = 0x8000;\n\tint *data = *data_ptr;\n\tint flag_index = 0x11;\n\tint set_bit = 1;\n\n\tFUN_08006420(data, flag_value, 4);\n\tdata[flag_index] |= flag_bit;\n\t*data |= set_bit;\n\treturn 0;\n}",
            "called": [
                "FUN_08006420"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800643c",
            "calling": [
                "FUN_08007118"
            ],
            "imported": false,
            "current_name": "set_bit_and_flag_0800643c"
        },
        "FUN_08002fca": {
            "renaming": {
                "FUN_08002fca": "repeat_function_with_params_08002fca",
                "param_1": "param_1",
                "param_2": "param_2",
                "param_3": "times_to_repeat",
                "param_4": "param_4",
                "param_5": "func_ptr",
                "uVar1": "repeat_count",
                "do_nothing_08008ac4": "do_nothing",
                "FUN_08008a24": "call_function_with_param",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void repeat_function_with_params_08002fca(int times_to_repeat, void (*func_ptr)(void*), void* param_1, void* param_2)\n{\n  uint repeat_count;\n  for (repeat_count = 0; (int)repeat_count < times_to_repeat; repeat_count = repeat_count + 1 & 0xff) {\n    func_ptr(param_2);\n    increment_value_by_one(param_1);\n    func_ptr(param_2);\n    decrement_value_by_one(param_1);\n  }\n  return;\n}",
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fca",
            "calling": [
                "FUN_08003002"
            ],
            "imported": false,
            "current_name": "repeat_function_with_params_08002fca"
        },
        "FUN_08009c7c": {
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "data",
                "param_2": "params",
                "uVar1": "result",
                "iVar2": "j",
                "piVar3": "k",
                "uVar4": "temp",
                "uVar5": "flag",
                "iVar6": "i",
                "unaff_r4": "unused_1",
                "unaff_r5": "unused_2",
                "pcVar7": "func_ptr",
                "iVar8": "unused_3",
                "uVar9": "unused_4",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar10": "is_negative"
            },
            "code": "uint32_t process_data_08009c7c(uint32_t *data, int *params) {\n  uint32_t result;\n  int i, j, k;\n  uint32_t temp, flag;\n  code *func_ptr;\n  code *jump_table;\n  bool is_negative;\n  \n  if (params[4] != 0) {\n    if ((data != NULL) && (data[6] == 0)) {\n      initialize_data();\n    }\n    if (params == (int *)PTR_DAT_08009cc4) {\n      params = (int *)data[1];\n    }\n    else if (params == (int *)PTR_DAT_08009cc8) {\n      params = (int *)data[2];\n    }\n    else if (params == (int *)PTR_DAT_08009ccc) {\n      params = (int *)data[3];\n    }\n    if (*(uint16_t *)(params + 3) != 0) {\n      flag = *(uint16_t *)(params + 3);\n      if ((int)(flag << 0x1c) < 0) {\n        j = params[4];\n        if (j != 0) {\n          k = flag << 0x1e;\n          is_negative = k != 0;\n          if (is_negative) {\n            k = 0;\n          }\n          i = *params;\n          if (!is_negative) {\n            k = params[5];\n          }\n          *params = j;\n          params[2] = k;\n          for (i = i - j; i > 0; i = i - k) {\n            temp = (*(code *)params[10])(data, params[8], j, i, 0, 0);\n            if (temp < 1) {\n              flag = *(uint16_t *)(params + 3);\n              goto LAB_08009c62;\n            }\n            j = j + temp;\n          }\n        }\n      }\n      else if (((params[1] > 0) || (params[0x10] > 0)) && ((func_ptr = (code *)params[0xb]) != NULL)) {\n        temp = *data;\n        *data = 0;\n        if ((flag & 0x1000) == 0) {\n          k = (*func_ptr)(data, params[8], flag & 0x1000, 1, 0, 0);\n          if ((k == -1) && ((temp = *data) != 0)) {\n            if ((temp != 0x1d) && (temp != 0x16)) {\n              *(uint16_t *)(params + 3) = *(uint16_t *)(params + 3) | 0x40;\n              jump_table = (code *)UNRECOVERED_JUMPTABLE_00;\n              result = (*jump_table)(0xffffffff);\n              return result;\n            }\n            *data = temp;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          k = params[0x15];\n        }\n        if (((int)((uint)flag << 0x1d) < 0) && ((k = k - params[1], params[0xd] != 0))) {\n          k = k - params[0x10];\n        }\n        k = (*(code *)params[0xb])(data, params[8], k, 0, 0, 0);\n        flag = *(uint16_t *)(params + 3);\n        if ((k == -1) && ((temp = *data) > 0x1d || (-1 < (int)((DAT_08009c78 >> (temp & 0xff)) << 0x1f))))) {\n          *(uint16_t *)(params + 3) = flag | 0x40;\n          jump_table = (code *)UNRECOVERED_JUMPTABLE_00;\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        params[1] = 0;\n        *params = params[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((k != -1) || (*data == 0))) {\n          params[0x15] = k;\n        }\n        j = params[0xd];\n        *data = temp;\n        if (j != NULL) {\n          if (j != params + 0x11) {\n            cleanup_data(data);\n          }\n          params[0xd] = 0;\n          jump_table = (code *)UNRECOVERED_JUMPTABLE_00;\n          result = (*jump_table)(0);\n          return result;\n        }\n      }\nLAB_08009b86:\n      jump_table = (code *)UNRECOVERED_JUMPTABLE_00;\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08009d50"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009c7c",
            "calling": [
                "FUN_0800932c"
            ],
            "imported": false,
            "current_name": "process_data_08009c7c"
        },
        "FUN_08009b5c": {
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "puVar1": "data_ptr",
                "iVar2": "data_len",
                "piVar3": "ptr1",
                "piVar4": "ptr2",
                "uVar5": "flag",
                "uVar6": "flag_bits",
                "iVar7": "offset1",
                "func_ptr": "func_ptr",
                "iVar9": "offset2",
                "uVar10": "temp_data",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "bool_val",
                "uVar12": "var12"
            },
            "code": "void process_data_08009b5c(void)\n{\n    uint *data_ptr;\n    int data_len;\n    int *ptr1;\n    int *ptr2;\n    uint flag;\n    ushort flag_bits;\n    int offset1;\n    code *func_ptr;\n    int offset2;\n    uint temp_data;\n    code *jump_table;\n    bool bool_val;\n    undefined8 var12;\n\n    initialize(6);\n    jump_table = (code *)0x8009b6b;\n    var12 = get_data(1);\n    ptr1 = (int *)((ulonglong)var12 >> 0x20);\n    data_ptr = (uint *)var12;\n    flag_bits = *(ushort *)(ptr1 + 3);\n    flag = (uint)flag_bits;\n    if ((int)(flag << 0x1c) < 0) {\n        data_len = ptr1[4];\n        if (data_len != 0) {\n            offset1 = flag << 0x1e;\n            bool_val = offset1 != 0;\n            if (bool_val) {\n                offset1 = 0;\n            }\n            offset2 = *ptr1;\n            if (!bool_val) {\n                offset1 = ptr1[5];\n            }\n            *ptr1 = data_len;\n            ptr1[2] = offset1;\n            for (offset2 = offset2 - data_len; 0 < offset2; offset2 = offset2 - offset1) {\n                offset1 = (*(code *)ptr1[10])(data_ptr,ptr1[8],data_len,offset2);\n                if (offset1 < 1) {\n                    flag_bits = *(ushort *)(ptr1 + 3);\n                    goto LAB_08009c62;\n                }\n                data_len = data_len + offset1;\n            }\n        }\n    }\n    else if (((0 < ptr1[1]) || (0 < ptr1[0x10])) && (func_ptr = (code *)ptr1[0xb], func_ptr != (code *)0x0)) {\n        temp_data = *data_ptr;\n        *data_ptr = 0;\n        if ((flag_bits & 0x1000) == 0) {\n            data_len = (*func_ptr)(data_ptr,ptr1[8],flag & 0x1000,1);\n            if ((data_len == -1) && ((flag = *data_ptr, flag != 0))) {\n                if ((flag != 0x1d) && (flag != 0x16)) {\n                    *(ushort *)(ptr1 + 3) = *(ushort *)(ptr1 + 3) | 0x40;\n                    jump_table();\n                    return;\n                }\n                *data_ptr = temp_data;\n                goto LAB_08009b86;\n            }\n        }\n        else {\n            data_len = ptr1[0x15];\n        }\n        if (((int)((uint)*(ushort *)(ptr1 + 3) << 0x1d) < 0) && (data_len = data_len - ptr1[1], ptr1[0xd] != 0)) {\n            data_len = data_len - ptr1[0x10];\n        }\n        data_len = (*(code *)ptr1[0xb])(data_ptr,ptr1[8],data_len,0);\n        flag_bits = *(ushort *)(ptr1 + 3);\n        if ((data_len == -1) && ((0x1d < *data_ptr || (-1 < (int)((DAT_08009c78 >> (*data_ptr & 0xff)) << 0x1f)))) {\n            *(ushort *)(ptr1 + 3) = flag_bits | 0x40;\n            jump_table(0xffffffff);\n            return;\n        }\n        ptr1[1] = 0;\n        *ptr1 = ptr1[4];\n        if (((int)((uint)flag_bits << 0x13) < 0) && ((data_len != -1 || (*data_ptr == 0)))) {\n            ptr1[0x15] = data_len;\n        }\n        ptr2 = (int *)ptr1[0xd];\n        *data_ptr = temp_data;\n        if (ptr2 != (int *)0x0) {\n            if (ptr2 != ptr1 + 0x11) {\n                free_data(data_ptr);\n            }\n            ptr1[0xd] = 0;\n            jump_table();\n            return;\n        }\n    }\nLAB_08009b86:\n    jump_table(0);\n    return;\n}",
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009b5c",
            "calling": [
                "FUN_0800a18c",
                "FUN_080090cc"
            ],
            "imported": false,
            "current_name": "process_data_08009b5c"
        },
        "FUN_0800021a": {
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "data_index",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "bVar1": "is_valid",
                "iVar2": "result",
                "PTR_DAT_080002d8": "PTR_DATA",
                "PTR_DAT_080002dc": "PTR_DATA_1",
                "PTR_DAT_080002e0": "PTR_DATA_3",
                "PTR_DAT_080002e4": "PTR_DATA_2",
                "PTR_DAT_080002e8": "PTR_DATA_4",
                "FUN_08002fa0": "get_data",
                "FUN_080036ac": "get_data_2",
                "FUN_0800738a": "process_data_3",
                "FUN_080026b0": "process_data_2",
                "FUN_080088e0": "set_data"
            },
            "code": "void process_data_0800021a(uint data_index, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n    bool is_valid;\n    int result;\n\n    result = get_data(PTR_DAT_080002d8, data_index, param_3, param_4, param_4);\n    if (result == 3)\n    {\n        if (data_index < 0x3c)\n        {\n            if (PTR_DAT_080002dc[data_index] == -1)\n            {\n                is_valid = false;\n            }\n            else\n            {\n                result = get_data_2();\n                if (result == 0)\n                {\n                    is_valid = false;\n                }\n                else\n                {\n                    result = get_data_2((int)(char)PTR_DAT_080002dc[data_index]);\n                    if (result == 1)\n                    {\n                        is_valid = false;\n                    }\n                    else\n                    {\n                        is_valid = true;\n                    }\n                }\n            }\n        }\n        else\n        {\n            is_valid = false;\n        }\n        if (is_valid)\n        {\n            process_data_0800021a_2(data_index, param_2);\n        }\n        set_data(PTR_DAT_080002d8, data_index, param_2);\n    }\n    else if (result == 4)\n    {\n        if (data_index < 0x3c)\n        {\n            if (PTR_DAT_080002dc[data_index] == -1)\n            {\n                is_valid = false;\n            }\n            else\n            {\n                result = get_data_2();\n                if (result == 0)\n                {\n                    is_valid = false;\n                }\n                else\n                {\n                    result = get_data_2((int)(char)PTR_DAT_080002dc[data_index]);\n                    if (result == 1)\n                    {\n                        is_valid = false;\n                    }\n                    else\n                    {\n                        is_valid = true;\n                    }\n                }\n            }\n        }\n        else\n        {\n            is_valid = false;\n        }\n        if (is_valid)\n        {\n            process_data_0800021a_3(PTR_DAT_080002e4 + (uint)(byte)PTR_DAT_080002e0[data_index] * 3, param_2);\n        }\n        set_data(PTR_DAT_080002d8, data_index, param_2);\n        return;\n    }\n    return;\n}",
            "called": [
                "FUN_08002fc2",
                "FUN_080026b0",
                "FUN_080036ac",
                "FUN_080088e0",
                "FUN_0800738a",
                "FUN_08002fa0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800021a",
            "calling": [
                "FUN_08000214"
            ],
            "imported": false,
            "current_name": "process_data_0800021a"
        },
        "FUN_08008a6c": {
            "renaming": {
                "FUN_08008a6c": "decode_character_08008a6c",
                "param_1": "character_index",
                "cVar1": "decoded_char",
                "iVar2": "function_result",
                "uVar3": "var_3",
                "uVar4": "char_value"
            },
            "code": "char decode_character_08008a6c(uint character_index) {\n    char decoded_char;\n    int function_result;\n    undefined4 var_3;\n    uint char_value;\n\n    if (character_index < 0x3c) {\n        char_value = (uint)(char)PTR_DAT_08008ab4[character_index];\n    }\n    else {\n        char_value = 0xffffffff;\n    }\n    if (char_value == 0xffffffff) {\n        decoded_char = '\\0';\n    }\n    else {\n        function_result = FUN_08006b28(char_value, PTR_DAT_08008ab8);\n        if (function_result == 0) {\n            decoded_char = '\\0';\n        }\n        else {\n            var_3 = FUN_08006b7c((char_value << 0x18) >> 0x1c);\n            decoded_char = FUN_080072f0(var_3, 1 << (char_value & 0xf) & 0xffff);\n        }\n    }\n    if (decoded_char != '\\0') {\n        decoded_char = '\\x01';\n    }\n    return decoded_char;\n}",
            "called": [
                "FUN_08006b28",
                "FUN_08006b7c",
                "FUN_080072f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a6c",
            "calling": [
                "FUN_08000ef8"
            ],
            "imported": false,
            "current_name": "decode_character_08008a6c"
        },
        "FUN_080026f8": {
            "renaming": {
                "FUN_080026f8": "get_byte_from_ptr_dat_08002708_times_8_and_shift_left_then_right_080026f8",
                "*param_1": "*input_byte",
                "PTR_DAT_08002708": "PTR_DAT_08002708",
                "byte": "uint8_t",
                "(uint)*param_1": "(uint)*input_byte",
                "byte_from_ptr_dat_08002708": "byte_from_ptr_dat_08002708",
                "shifted_byte": "shifted_byte",
                "result": "result"
            },
            "code": "uint get_byte_from_ptr_dat_08002708_times_8_and_shift_left_then_right_080026f8(uint8_t *input_byte) {\n    uint8_t byte_from_ptr_dat_08002708 = PTR_DAT_08002708[(uint)*input_byte * 8];\n    uint shifted_byte = (uint)byte_from_ptr_dat_08002708 << 0x19;\n    uint result = shifted_byte >> 0x1f;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080026f8",
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "get_byte_from_ptr_dat_08002708_times_8_and_shift_left_then_right_080026f8"
        },
        "FUN_080085b8": {
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "flag_index",
                "uVar1": "result",
                "PTR_DAT_080085d8": "PTR_DAT",
                "byte": "byte_val"
            },
            "code": "bool is_flag_set_080085b8(int flag_index)\n{\n    uint32_t ptr = PTR_DAT_080085d8_080085d8 + (uint32_t)*(byte *)(flag_index + 0x44) * 4;\n    uint32_t result = FUN_08006b1c(*(uint32_t *)ptr);\n    return (result & 0x22) == 0x22;\n}",
            "called": [
                "FUN_08006b1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080085b8",
            "calling": [
                "FUN_0800863c",
                "FUN_08008600"
            ],
            "imported": false,
            "current_name": "is_flag_set_080085b8"
        },
        "FUN_08001c08": {
            "renaming": {
                "FUN_08001c08": "get_data_from_pointer_08001c08",
                "uVar1": "result",
                "FUN_08002720": "call_function_with_pointer_data"
            },
            "code": "define PTR_DAT_08001c14 as a constant\n\nvoid get_data_from_pointer_08001c08(void)\n{\n  // Call function with pointer data\n  undefined result = call_function_with_pointer_data(PTR_DAT_08001c14);\n  return result;\n}",
            "called": [
                "FUN_08002720"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c08",
            "calling": [
                "FUN_08001c18"
            ],
            "imported": false,
            "current_name": "get_data_from_pointer_08001c08"
        },
        "FUN_080075dc": {
            "renaming": {
                "FUN_080075dc": "check_clock_source_080075dc",
                "param_1": "clock_source",
                "local_20": "clock_source_subtype",
                "local_1c": "local_counter_1",
                "local_18": "local_counter_2",
                "local_14": "clock_source_type",
                "local_10": "local_counter_3",
                "local_c": "local_counter_4",
                "FUN_08005a68": "get_counters",
                "FUN_08007594": "check_clock_type",
                "FUN_08005a28": "get_type1_clock_source",
                "FUN_08005a48": "get_type2_clock_source"
            },
            "code": "int check_clock_source_080075dc(uint clock_source) {\n  uint local_counter_1 = 0;\n  uint local_counter_2 = 0;\n  uint clock_source_type = 0;\n  uint clock_source_subtype = 0;\n  uint local_counter_3 = 0;\n  uint local_counter_4 = 0;\n  uint local_counter_5 = 0;\n  get_counters(&local_counter_1, &local_counter_5);\n  int result = check_clock_type(clock_source);\n  clock_source_type = local_counter_3;\n  clock_source_subtype = local_counter_2;\n  if (result == 1) {\n    result = get_type1_clock_source();\n  }\n  else if (result == 2) {\n    result = get_type2_clock_source();\n    clock_source_subtype = clock_source_type;\n  }\n  else {\n    print_error(PTR_s_TIM__Unknown_clock_source_08007644);\n    result = 0;\n    clock_source_subtype = 0;\n  }\n  if (clock_source_subtype != 0x500) {\n    if (clock_source_subtype < 0x501) {\n      if (clock_source_subtype != 0x400) {\n        return result;\n      }\n    }\n    else if ((clock_source_subtype != 0x600) && (clock_source_subtype != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n",
            "called": [
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a28",
                "FUN_08005a68",
                "FUN_08005a48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080075dc",
            "calling": [
                "FUN_08007118",
                "FUN_08007648"
            ],
            "imported": false,
            "current_name": "check_clock_source_080075dc"
        },
        "FUN_08007544": {
            "renaming": {
                "FUN_08007544": "determine_timer_priority_08007544",
                "param_1": "timer_id",
                "0xffffffff": "TIMER_NOT_FOUND",
                "DAT_08007588": "TIMER_BASE_ADDRESS",
                "0x40000000": "TIMER_INTERRUPT",
                "DAT_0800758c": "SECOND_TIMER_ADDRESS",
                "PTR_s_TIM__Unknown_timer_IRQn_08007590": "timer_interrupt_handler"
            },
            "code": "uint32_t determine_timer_priority_08007544(uint32_t timer_id) {\n  if (timer_id == 0xffffffff) {\n    return 0;\n  }\n  if (timer_id == DAT_08007588) {\n    return 0x1d;\n  }\n  if (DAT_08007588 < timer_id) {\n    if (timer_id == DAT_0800758c) {\n      return 0x1e;\n    }\n    if (timer_id == DAT_0800758c + 0x12400) {\n      return 0x19;\n    }\n  }\n  else if (timer_id == 0x40000000) {\n    return 0x1c;\n  }\n  register_interrupt_handler(TIM_IRQn, PTR_s_TIM__Unknown_timer_IRQn_08007590);\n  return 0;\n}",
            "called": [
                "FUN_080098d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007544",
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "imported": false,
            "current_name": "determine_timer_priority_08007544"
        },
        "FUN_08007ff0": {
            "renaming": {
                "FUN_08007ff0": "check_and_execute_function_08007ff0",
                "param_1": "param",
                "iVar1": "function_ptr_address",
                "FUN_08007f78": "get_function_ptr_address",
                "*(code **)(iVar1 + 0x60)": "function_ptr",
                "code": "code_pointer",
                "*(char *)(iVar1 + 0x5c)": "is_valid",
                "*(char *)(iVar1 + 0x2c)": "space_check",
                "'\\x01'": "valid_char",
                "(*function_ptr)": "execute_function",
                "FUN_080049e0": "execute_clean_up"
            },
            "code": "void check_and_execute_function_08007ff0(undefined4 param_1)\n{\n  int function_ptr_address = get_function_ptr_address();\n  code* function_ptr = *(code**)(function_ptr_address + 0x60);\n  char is_valid = *(char*)(function_ptr_address + 0x5c);\n  char space_check = *(char*)(function_ptr_address + 0x2c);\n  if ((function_ptr != (code*)0x0) && (is_valid == '\\x01') && (space_check != ' ')) {\n    (*function_ptr)(function_ptr_address + 0x68);\n  }\n  execute_clean_up(param_1);\n  return;\n}",
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ff0",
            "calling": [
                "FUN_08005084",
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "imported": false,
            "current_name": "check_and_execute_function_08007ff0"
        },
        "FUN_08008990": {
            "renaming": {
                "FUN_08008990": "decode_data_08008990",
                "param_1": "data_index",
                "param_2": "flag",
                "param_3": "param_3",
                "param_4": "data_ptr",
                "iVar1": "result",
                "puVar2": "data_start_ptr",
                "iVar3": "data_value"
            },
            "code": "void decode_data_08008990(uint data_index, undefined4 flag, undefined4 param_3, undefined *data_ptr)\n{\n  int data_value;\n  undefined *data_start_ptr;\n  int result;\n\n  if (data_index < 0x3c) {\n    data_value = (int)(char)PTR_DAT_08008a14[data_index];\n    data_start_ptr = PTR_DAT_08008a14;\n  }\n  else {\n    data_value = -1;\n    data_start_ptr = data_ptr;\n  }\n\n  if (data_value != -1) {\n    result = FUN_08006b28(data_value, PTR_DAT_08008a18, param_3, data_start_ptr, data_ptr);\n    if (result != 0) {\n      result = FUN_0800738a(data_value, PTR_DAT_08008a1c);\n      if (result != 0) {\n        FUN_080071e4(data_value);\n      }\n      FUN_08006b5c(data_value, PTR_DAT_08008a18);\n    }\n\n    switch(flag) {\n    case 0:\n      FUN_08007258(data_value, 0);\n      break;\n    case 1:\n      FUN_08007258(data_value, 1, 0);\n      break;\n    case 2:\n      FUN_08007258(data_value, 0, 1);\n      break;\n    case 3:\n      FUN_08007258(data_value, 0, 2);\n    }\n\n    FUN_08006b3e(data_value, PTR_DAT_08008a20);\n  }\n  return;\n}",
            "called": [
                "FUN_08006b28",
                "FUN_08006b3e",
                "FUN_080071e4",
                "FUN_08006b5c",
                "FUN_0800738a",
                "FUN_08007258"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008990",
            "calling": [
                "FUN_080088e0",
                "FUN_08003002",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "decode_data_08008990"
        },
        "FUN_08008078": {
            "renaming": {
                "FUN_08008078": "FUNC_08008078"
            },
            "code": "\nvoid FUNC_08008078(int *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  uint local_20;\n  uint local_1c;\n  uint local_18;\n  undefined4 local_14;\n  \n  if (param_1 != (int *)0x0) {\n    iVar2 = FUN_08007320((int)*(char *)(param_1 + 0x16),PTR_DAT_08008330);\n    iVar3 = FUN_08007320((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08008334);\n    if ((iVar3 == 0) || (iVar2 == 0)) {\n      FUN_080098d8(PTR_s_ERROR__at_least_one_UART_pin_has_08008348,iVar3);\n    }\n    else {\n      iVar4 = FUN_080073ae(iVar2);\n      *param_1 = iVar4;\n      iVar1 = DAT_08008340;\n      iVar3 = DAT_0800833c;\n      iVar2 = DAT_08008338;\n      if (iVar4 == 0) {\n        FUN_080098d8(PTR_s_ERROR__U_S_ART_pins_mismatch_0800834c);\n      }\n      else {\n        if (iVar4 == DAT_08008338) {\n          *(uint *)(DAT_08008338 + 0xd80c) = *(uint *)(DAT_08008338 + 0xd80c) | 0x4000;\n          *(uint *)(iVar2 + 0xd80c) = *(uint *)(iVar2 + 0xd80c) & 0xffffbfff;\n          *(uint *)(iVar2 + 0xd818) = *(uint *)(iVar2 + 0xd818) | 0x4000;\n          *(undefined *)(param_1 + 0x11) = 0;\n          *(undefined *)((int)param_1 + 0x5a) = 0x25;\n        }\n        else if (iVar4 == DAT_0800833c) {\n          *(uint *)(DAT_0800833c + 0x1cc10) = *(uint *)(DAT_0800833c + 0x1cc10) | 0x20000;\n          *(uint *)(iVar3 + 0x1cc10) = *(uint *)(iVar3 + 0x1cc10) & 0xfffdffff;\n          *(uint *)(iVar3 + 0x1cc1c) = *(uint *)(iVar3 + 0x1cc1c) | 0x20000;\n          *(undefined *)(param_1 + 0x11) = 1;\n          *(undefined *)((int)param_1 + 0x5a) = 0x26;\n        }\n        else if (iVar4 == DAT_08008340) {\n          *(uint *)(DAT_08008340 + 0x1c810) = *(uint *)(DAT_08008340 + 0x1c810) | 0x40000;\n          *(uint *)(iVar1 + 0x1c810) = *(uint *)(iVar1 + 0x1c810) & 0xfffbffff;\n          *(uint *)(iVar1 + 0x1c81c) = *(uint *)(iVar1 + 0x1c81c) | 0x40000;\n          *(undefined *)(param_1 + 0x11) = 2;\n          *(undefined *)((int)param_1 + 0x5a) = 0x27;\n        }\n        uVar5 = FUN_08006bb8((uint)((int)*(char *)((int)param_1 + 0x59) << 0x18) >> 0x1c);\n        uVar6 = FUN_08007376((int)*(char *)((int)param_1 + 0x59),PTR_DAT_08008334);\n        local_20 = 1 << (*(byte *)((int)param_1 + 0x59) & 0xf) & 0xffff;\n        local_1c = (uVar6 >> 3 & 1) << 4 | uVar6 & 7;\n        local_18 = (uVar6 << 0x1a) >> 0x1e;\n        *(uint *)(DAT_08008344 + 0x18) = *(uint *)(DAT_08008344 + 0x18) | 1;\n        switch((uVar6 << 0x11) >> 0x19) {\n        case 1:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) | 0x7000001;\n          break;\n        case 2:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) | 0x7000002;\n          break;\n        case 4:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) | 0x7000004;\n          break;\n        case 6:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) | 0x7000008;\n          break;\n        case 8:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          *(uint *)(DAT_08008350 + 4) = *(uint *)(DAT_08008350 + 4) | 0x7000030;\n          break;\n        case 10:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) | 0x70000c0;\n          break;\n        case 0xd:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) | 0x7000300;\n          break;\n        case 0x10:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) | 0x7000c00;\n          break;\n        case 0x14:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) | 0x7001000;\n          break;\n        case 0x17:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) | 0x7008000;\n          break;\n        case 0x1c:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xf8ffffff;\n          break;\n        case 0x22:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          *(uint *)(DAT_080084ac + 4) = *(uint *)(DAT_080084ac + 4) & 0xf8ffffff | 0x4000000;\n        }\n        local_14 = 3;\n        FUN_080040e8(uVar5,&local_20);\n        uVar5 = FUN_08006bb8((uint)((int)*(char *)(param_1 + 0x16) << 0x18) >> 0x1c);\n        uVar6 = FUN_08007376((int)*(char *)(param_1 + 0x16),PTR_DAT_08008330);\n        local_20 = 1 << (*(byte *)(param_1 + 0x16) & 0xf) & 0xffff;\n        local_1c = (uVar6 >> 3 & 1) << 4 | uVar6 & 7;\n        local_18 = (uVar6 << 0x1a) >> 0x1e;\n        FUN_080040e8(uVar5,&local_20);\n        *(int **)(PTR_DAT_08008354 + (uint)*(byte *)(param_1 + 0x11) * 4) = param_1 + 1;\n        param_1[1] = *param_1;\n        param_1[2] = param_1[0x12];\n        param_1[3] = param_1[0x13];\n        param_1[4] = param_1[0x14];\n        param_1[5] = param_1[0x15];\n        param_1[6] = 0xc;\n        param_1[7] = 0;\n        param_1[8] = 0;\n        FUN_0800674e(param_1 + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008078",
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "imported": false,
            "current_name": "FUNC_08008078"
        },
        "FUN_08004396": {
            "renaming": {
                "FUN_08004396": "set_param_1_value_08004396",
                "param_1": "ptr_param_1"
            },
            "code": "int set_param_1_value_08004396(int *ptr_param_1, int value) {\n  uint *data_ptr = (uint *)(*ptr_param_1 + 0x10);\n  *data_ptr = value & 0xff;\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004396",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "set_param_1_value_08004396"
        },
        "FUN_08003fb0": {
            "renaming": {
                "FUN_08003fb0": "set_bit_in_array_08003fb0",
                "param_1": "bit_index",
                "DAT_08003fd4": "array_base_addr"
            },
            "code": "void set_bit_in_array_08003fb0(uint bit_index) {\n  if (bit_index >= 0) {\n    int* array_ptr = (int*)(DAT_08003fd4 + ((bit_index >> 5) + 0x20) * 4);\n    int bit_mask = 1 << (bit_index & 0x1f);\n    *array_ptr = bit_mask;\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003fb0",
            "calling": [
                "FUN_080076e0"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08003fb0"
        },
        "FUN_080052f0": {
            "renaming": {
                "FUN_080052f0": "check_flags_080052f0",
                "param_1": "data",
                "cVar1": "current_char",
                "puVar2": "ptr_data",
                "uVar3": "flag_1",
                "uVar4": "flag_2",
                "DAT_080053c8": "FLAG_1_MASK",
                "0x100": "FLAG_2_MASK",
                "0x10200": "FLAG_3_MASK",
                "0x10400": "FLAG_4_MASK",
                "0x10800": "FLAG_5_MASK",
                "0xc": "data_12"
            },
            "code": "void check_flags_080052f0(uint **data) {\n  char current_char;\n  uint *ptr_data = *data;\n  uint flag_1 = ptr_data[5];\n  uint flag_2 = ptr_data[1];\n  \n  if (((flag_1 & DAT_080053c8) != 0) && ((flag_2 & FLAG_2_MASK) != 0)) {\n    data[16] = (uint *)((uint)data[16] | 1);\n    ptr_data[5] = 0xfffffeff;\n    **data = **data | 0x8000;\n  }\n  if (((flag_1 & FLAG_3_MASK) != 0) && ((flag_2 & FLAG_2_MASK) != 0)) {\n    data[16] = (uint *)((uint)data[16] | 2);\n    (*data)[5] = 0xfffffdff;\n  }\n  if (((flag_1 & FLAG_4_MASK) != 0) && ((flag_2 & FLAG_2_MASK) != 0)) {\n    current_char = *(char *)((int)data + 0x3d);\n    if (((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0)) && (((current_char == '!' || (current_char == ')')) || ((current_char == '(' && (data[12] == (uint *)0x21)))))) {\n      do_something(data);\n    }\n    else {\n      data[16] = (uint *)((uint)data[16] | 4);\n      if (*(char *)((int)data + 0x3e) == '\\x10') {\n        **data = **data | 0x200;\n      }\n      (*data)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag_1 & FLAG_5_MASK) != 0) && ((flag_2 & FLAG_2_MASK) != 0)) {\n    data[16] = (uint *)((uint)data[16] | 8);\n    (*data)[5] = 0xfffff7ff;\n  }\n  if (data[16] != (uint *)0x0) {\n    do_something_else(data);\n  }\n  return;\n}",
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052f0",
            "calling": [],
            "imported": false,
            "current_name": "check_flags_080052f0"
        },
        "FUN_08008f0c": {
            "renaming": {
                "FUN_08008f0c": "do_nothing_08008f0c"
            },
            "code": "\nvoid do_nothing_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008f0c",
            "calling": [
                "FUN_08008f1c"
            ],
            "imported": false,
            "current_name": "do_nothing_08008f0c"
        },
        "FUN_08002ec4": {
            "renaming": {
                "FUN_08002ec4": "call_function_from_pointer_08002ec4",
                "param_1": "param_1",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void call_function_from_pointer_08002ec4(int param_1)\n{\n    int **ptr1 = (int **)(param_1 + 0xc0);\n    int *ptr2 = *ptr1;\n    code *function_pointer = *(code **)(ptr2 + 8);\n    function_pointer();\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ec4",
            "calling": [
                "FUN_080022f8"
            ],
            "imported": false,
            "current_name": "call_function_from_pointer_08002ec4"
        },
        "FUN_08007306": {
            "renaming": {
                "FUN_08007306": "find_param_in_array_08007306",
                "param_1": "target_param",
                "param_2": "param_array",
                "*param_2": "*param_array",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int find_param_in_array_08007306(int target_param, char *param_array)\n{\n    while (*param_array != -1) {\n        if (*param_array == target_param) {\n            break;\n        }\n        param_array += 12;\n    }\n    return *(int *)(param_array + 4);\n}",
            "called": [
                "FUN_08007306"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007306",
            "calling": [
                "FUN_08007320",
                "FUN_08007306"
            ],
            "imported": false,
            "current_name": "find_param_in_array_08007306"
        },
        "FUN_08008f0e": {
            "renaming": {
                "FUN_08008f0e": "execute_program_08008f0e",
                "FUN_08003f0c": "initialize_program",
                "FUN_080036a2": "run_program"
            },
            "code": "void execute_program_08008f0e(void)\n{\n  initialize_program(3);\n  run_program();\n  return;\n}",
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008f0e",
            "calling": [
                "FUN_08009148"
            ],
            "imported": false,
            "current_name": "execute_program_08008f0e"
        },
        "FUN_08002f2c": {
            "renaming": {
                "FUN_08002f2c": "update_value_at_address_if_condition_met_08002f2c",
                "param_1": "value",
                "param_2": "address",
                "param_3": "value",
                "PTR_DAT_08002f78": "address_0xd0",
                "PTR_DAT_08002f7c": "address_0xf4",
                "PTR_DAT_08002f80": "address_0xf5",
                "PTR_DAT_08002f6c": "address_0xe0",
                "PTR_DAT_08002f74": "address_0x90",
                "PTR_DAT_08002f70": "address_0xc0"
            },
            "code": "void update_value_at_address_if_condition_met_08002f2c(uint8_t value, uint16_t address) {\n    if (address == 0xd0) {\n        *(uint8_t *)PTR_DAT_08002f78 = value;\n        return;\n    }\n    if (address > 0xd0) {\n        if (address == 0xf4) {\n            *(uint8_t *)PTR_DAT_08002f7c = value;\n            return;\n        }\n        if (address == 0xf5) {\n            *(uint8_t *)PTR_DAT_08002f80 = value;\n        }\n        else if (address == 0xe0) {\n            *(uint8_t *)PTR_DAT_08002f6c = value;\n            return;\n        }\n        return;\n    }\n    if (address == 0x90) {\n        *(uint8_t *)PTR_DAT_08002f74 = value;\n        return;\n    }\n    if (address == 0xc0) {\n        *(uint8_t *)PTR_DAT_08002f70 = value;\n        return;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f2c",
            "calling": [
                "FUN_08001b48"
            ],
            "imported": false,
            "current_name": "update_value_at_address_if_condition_met_08002f2c"
        },
        "FUN_08004954": {
            "renaming": {
                "FUN_08004954": "check_valid_input_08004954",
                "param_1": "input_ptr",
                "param_2": "input_data",
                "param_3": "input_length",
                "param_4": "input_param",
                "uVar1": "return_value",
                "puVar2": "ptr_to_input_data"
            },
            "code": "int check_valid_input_08004954(uint **input_ptr, uint *input_data, int input_length, uint *input_param) {\n  int return_value;\n  uint *ptr_to_input_data;\n  if (*(char *)((int)input_ptr + 0x3d) == '(') {\n    if (input_data == (uint *)0x0) {\n      return_value = 1;\n    }\n    else if (input_length == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(input_ptr + 0xf) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(input_ptr + 0xf) = 1;\n      ptr_to_input_data = *input_ptr;\n      if ((*ptr_to_input_data & 1) == 0) {\n        *ptr_to_input_data = *ptr_to_input_data | 1;\n      }\n      **input_ptr = **input_ptr & 0xfffff7ff;\n      *(undefined *)((int)input_ptr + 0x3d) = 0x2a;\n      *(undefined *)((int)input_ptr + 0x3e) = 0x20;\n      return_value = 0;\n      input_ptr[0x10] = (uint *)0x0;\n      input_ptr[9] = input_data;\n      *(short *)((int)input_ptr + 0x2a) = (short)input_length;\n      input_ptr[0xb] = input_param;\n      *(undefined2 *)(input_ptr + 10) = *(undefined2 *)((int)input_ptr + 0x2a);\n      *(undefined *)(input_ptr + 0xf) = 0;\n      (*input_ptr)[1] = (*input_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004954",
            "calling": [
                "FUN_08007fa0"
            ],
            "imported": false,
            "current_name": "check_valid_input_08004954"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "update_params_08005cec",
                "param_1": "first_param",
                "param_2": "second_param",
                "uVar1": "updated_val_1",
                "uVar2": "updated_val_2",
                "uVar3": "updated_val_3",
                "DAT_08005d44": "CONSTANT_MATCH",
                "(uint *)(param_1 + 0x20)": "param_1_ptr"
            },
            "code": "void update_params_08005cec(int param_1, uint *param_2)\n{\n    uint updated_val_1;\n    uint updated_val_2;\n    uint updated_val_3;\n    \n    // Update first parameter\n    uint *param_1_ptr = (uint *)(param_1 + 0x20);\n    *param_1_ptr = *param_1_ptr & 0xfffffffe;\n    \n    // Update second parameter\n    updated_val_2 = *(uint *)(param_1 + 4);\n    updated_val_3 = *param_2;\n    updated_val_1 = (*(uint *)(param_1 + 0x20) & 0xfffffffd) | param_2[2];\n    \n    // Update values if first parameter matches a constant\n    if (param_1 == DAT_08005d44) {\n        updated_val_1 = (updated_val_1 & 0xfffffff7 | param_2[3]) & 0xfffffffb;\n        updated_val_2 = (updated_val_2 & 0xfffffcff) | param_2[5] | param_2[6];\n    }\n    \n    // Update remaining parameters\n    *(uint *)(param_1 + 4) = updated_val_2;\n    *(uint *)(param_1 + 0x18) = (*(uint *)(param_1 + 0x18) & 0xffffff8c) | updated_val_3;\n    *(uint *)(param_1 + 0x34) = param_2[1];\n    *(uint *)(param_1 + 0x20) = updated_val_1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "imported": false,
            "current_name": "update_params_08005cec"
        },
        "FUN_0800886c": {
            "renaming": {
                "FUN_0800886c": "set_ptr_dat_value_to_22_0800886c",
                "PTR_DAT_08008878": "ptr_dat_value"
            },
            "code": "void set_ptr_dat_value_to_22_0800886c(void)\n{\n  int* PTR_DAT_08008878 = (int*)PTR_DAT_08008878;\n  *PTR_DAT_08008878 = 22;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800886c",
            "calling": [
                "FUN_08009fe8"
            ],
            "imported": false,
            "current_name": "set_ptr_dat_value_to_22_0800886c"
        },
        "FUN_08003748": {
            "renaming": {
                "FUN_08003748": "update_data_from_pointer_08003748",
                "PTR_DAT_08003758": "data_ptr",
                "PTR_DAT_0800375c": "byte_ptr",
                "uint": "unsigned int",
                "byte": "unsigned char",
                "int": "int",
                "*PTR_DAT_08003758": "*int_ptr",
                "*PTR_DAT_0800375c": "*byte_ptr",
                "(uint)(byte)*PTR_DAT_0800375c + *(int *)PTR_DAT_08003758": "byte_val + int_val",
                "*(uint *)PTR_DAT_08003758": "*data_ptr"
            },
            "code": "void update_data_from_pointer_08003748(void)\n{\n    uint* PTR_DAT_08003758 = (uint*)PTR_DAT_08003758;\n    byte* PTR_DAT_0800375c = (byte*)PTR_DAT_0800375c;\n    int* int_ptr = (int*)PTR_DAT_08003758;\n    uint byte_val = (uint)(*PTR_DAT_0800375c);\n    uint int_val = (*PTR_DAT_08003758);\n    *(uint *)PTR_DAT_08003758 = (uint)(byte)*PTR_DAT_0800375c + *(int *)PTR_DAT_08003758;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003748",
            "calling": [
                "FUN_08007246"
            ],
            "imported": false,
            "current_name": "update_data_from_pointer_08003748"
        },
        "FUN_080040e8": {
            "renaming": {
                "FUN_080040e8": "process_bits_080040e8",
                "param_1": "bit_array",
                "param_2": "control_data",
                "puVar1": "bit_array_ptr",
                "uVar2": "control_index",
                "uVar3": "bit_mask",
                "uVar4": "control_val",
                "uVar5": "bit_offset",
                "uVar6": "control_offset",
                "uVar7": "bit_val",
                "iVar8": "bit_index",
                "uVar9": "control_mask",
                "iVar10": "control_index"
            },
            "code": "void process_bits_080040e8(uint *bit_array, uint *control_data) {\n  uint *bit_array_ptr;\n  uint control_val;\n  uint bit_mask;\n  uint bit_val;\n  uint bit_offset;\n  uint control_type;\n  uint control_offset;\n  int bit_index;\n  uint control_index;\n  uint control_mask;\n  \n  bit_offset = 0;\n  bit_val = 0;\n  do {\n    if (bit_offset > 15) {\n      return;\n    }\n    bit_mask = 1 << bit_offset;\n    control_val = *control_data & bit_mask;\n    if (control_val == bit_mask) {\n      control_type = control_data[1];\n      if (control_type == 0x12) {\n        control_offset = control_data[3] + 0xc;\n      }\n      else if (control_type < 0x13) {\n        if (control_type == 2) {\n          control_offset = control_data[3] + 8;\n        }\n        else if (control_type < 3) {\n          if (control_type == 0) goto LAB_0800423a;\n          if (control_type == 1) {\n            control_offset = control_data[3];\n          }\n        }\n        else if (control_type == 3) {\n          control_offset = 0;\n        }\n        else if (control_type == 0x11) {\n          control_offset = control_data[3] + 4;\n        }\n      }\n      else {\n        if (control_type != control_data[0x2d]) {\n          if (control_data[0x2d] < control_type) {\n            if (control_type == control_data[0x2e]) goto LAB_0800423a;\n            control_mask = control_data[0x2e] + 0x10000;\n            control_index = control_data[0x2e];\n          }\n          else {\n            control_mask = control_data[0x2d] - 0x100000;\n            control_index = control_data[0x2d];\n          }\n          if ((control_type != control_mask) && (control_type != control_index - 0xf0000)) goto LAB_080040fe;\n        }\n        control_offset = 4;\n        if (control_data[2] == 1) {\n          bit_array[4] = bit_mask;\n          control_offset = 8;\n        }\n        else if (control_data[2] == 2) {\n          bit_array[5] = bit_mask;\n          control_offset = 8;\n        }\n      }\n      bit_index = bit_offset;\n      bit_array_ptr = bit_array;\n      if (bit_mask > 255) {\n        bit_index = bit_offset - 8;\n        bit_array_ptr = bit_array + 1;\n      }\n      *bit_array_ptr = *bit_array_ptr & ~(0xf << (bit_index << 2)) | control_offset << (bit_index << 2);\n      if ((control_data[1] & 0x10000000) != 0) {\n        *(uint *)(control_data[0x2b] + 0x18) = *(uint *)(control_data[0x2b] + 0x18) | 1;\n        bit_index = (bit_offset & 3) << 2;\n        if (bit_array == control_data[0x2f]) {\n          control_index = 0;\n        }\n        else if (bit_array == control_data[0x2f] + 0x100) {\n          control_index = 1;\n        }\n        else if (bit_array == control_data[0x2f] + 0x200) {\n          control_index = 2;\n        }\n        else if (bit_array == control_data[0x2f] + 0x300) {\n          control_index = 3;\n        }\n        else {\n          control_index = 4;\n        }\n        *(uint *)(control_data[0x2c] + ((bit_offset >> 2) + 2) * 4) = *(uint *)(control_data[0x2c] + ((bit_offset >> 2) + 2) * 4) & ~(0xf << bit_index) | control_index << bit_index;\n        if ((control_data[1] & 0x10000) == 0) {\n          *control_data[0x30] = *control_data[0x30] & ~bit_mask;\n        }\n        else {\n          *control_data[0x30] = *control_data[0x30] | bit_mask;\n        }\n        if ((control_data[1] & 0x20000) == 0) {\n          control_data[0x31] = control_data[0x31] & ~bit_mask;\n        }\n        else {\n          control_data[0x31] = control_data[0x31] | bit_mask;\n        }\n        if ((control_data[1] & 0x100000) == 0) {\n          control_data[0x32] = control_data[0x32] & ~bit_mask;\n        }\n        else {\n          control_data[0x32] = control_data[0x32] | bit_mask;\n        }\n        if ((control_data[1] & 0x200000) == 0) {\n          control_data[0x33] = control_data[0x33] & ~bit_mask;\n        }\n        else {\n          control_data[0x33] = bit_mask | control_data[0x33];\n        }\n      }\n    }\n    bit_offset++;\n  } while(true);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080040e8",
            "calling": [
                "FUN_08006e68",
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_08007258",
                "FUN_080077b0"
            ],
            "imported": false,
            "current_name": "process_bits_080040e8"
        },
        "FUN_080036d4": {
            "renaming": {
                "FUN_080036d4": "do_nothing_080036d4"
            },
            "code": "\nvoid do_nothing_080036d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036d4",
            "calling": [
                "FUN_08003724"
            ],
            "imported": false,
            "current_name": "do_nothing_080036d4"
        },
        "FUN_0800288c": {
            "renaming": {
                "FUN_0800288c": "write_data_to_memory_0800288c",
                "param_1": "mem_address",
                "param_2": "data",
                "puVar1": "memory_ptr",
                "iVar2": "write_result",
                "uVar3": "success",
                "cVar4": "new_char",
                "uVar5": "new_char",
                "uVar6": "new_size",
                "local_11": "data"
            },
            "code": "int write_data_to_memory_0800288c(int mem_address, char data){\n    undefined *memory_ptr;\n    int write_result;\n    int success = 0;\n    char new_char;\n    uint new_size;\n    undefined local_11;\n    \n    memory_ptr = PTR_DAT_08002914;\n    local_11 = data;\n    if (*PTR_DAT_08002908 == \"\\0\") {\n        write_result = FUN_08007ede(mem_address + 0x14, &local_11, 1);\n        if (write_result == 0) {\n            success = 1;\n        }\n    }\n    else {\n        new_size = (byte)*PTR_DAT_0800290c + 1;\n        if ((byte)*PTR_DAT_08002910 < new_size) {\n            if (new_size < 0x20) {\n                new_size = 0x20;\n            }\n            write_result = FUN_08009908(*(undefined4 *)PTR_DAT_08002914, new_size);\n            *(int *)memory_ptr = write_result;\n            if (write_result == 0) {\n                new_char = 0;\n            }\n            else {\n                new_char = (char)new_size;\n            }\n            *PTR_DAT_08002910 = new_char;\n        }\n        memory_ptr = PTR_DAT_08002918;\n        if (*(int *)PTR_DAT_08002914 == 0) {\n            *(int *)(mem_address + 4) = 1;\n            success = 0;\n        }\n        else {\n            *(char *)(*(int *)PTR_DAT_08002914 + (uint)(byte)*PTR_DAT_08002918) = local_11;\n            new_char = *memory_ptr + \"\\x01\";\n            *memory_ptr = new_char;\n            *PTR_DAT_0800290c = new_char;\n            success = 1;\n        }\n    }\n    return success;\n}",
            "called": [
                "FUN_08007ede",
                "FUN_08009908"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800288c",
            "calling": [
                "FUN_08001bf8"
            ],
            "imported": false,
            "current_name": "write_data_to_memory_0800288c"
        },
        "FUN_0800010c": {
            "renaming": {
                "FUN_0800010c": "initialize_0800010c",
                "*param_1": "input_string",
                "*PTR_DAT_08000124": "*PTR_NULL_TERMINATOR",
                "DAT_08000128": "DAT_FUNCTION_POINTER",
                "PTR_FUN_0800012c": "PTR_FUNCTION"
            },
            "code": "char* initialize_0800010c(char* input_string){\\n    if (*PTR_DAT_08000124 == \"\\0\") {\\n        if (DAT_08000128 != 0) {\\n            input_string = PTR_FUN_0800012c;\\n        }\\n        *PTR_DAT_08000124 = 1;\\n    }\\n    return input_string;\\n}",
            "called": [
                "FUN_0800a424"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800010c",
            "calling": [],
            "imported": false,
            "current_name": "initialize_0800010c"
        },
        "FUN_08002e26": {
            "renaming": {
                "FUN_08002e26": "set_parameter_08002e26",
                "param_1": "object_address",
                "param_2": "parameter_value",
                "FUN_08003154": "initialize_object",
                "FUN_08002ddc": "perform_object_operations",
                "FUN_08002df6": "perform_object_operations"
            },
            "code": "void set_parameter_08002e26(int object_address, undefined4 parameter_value)\n{\n  *(undefined4 *)(object_address + 0xc0) = parameter_value;\n  initialize_object(object_address);\n  perform_object_operations(object_address);\n  return;\n}",
            "called": [
                "FUN_08003154",
                "FUN_08002ddc",
                "FUN_08002df6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e26",
            "calling": [
                "FUN_08003048"
            ],
            "imported": false,
            "current_name": "set_parameter_08002e26"
        },
        "FUN_080036d8": {
            "renaming": {
                "FUN_080036d8": "calculate_value_and_set_080036d8",
                "param_1": "input_value",
                "iVar1": "result",
                "*(uint *)PTR_DAT_0800371c": "memory_location_1",
                "byte)*PTR_DAT_08003718": "memory_location_2",
                "quotient": "quotient",
                "0xf": "max_value",
                "FUN_08003f30": "set_value",
                "*(uint *)PTR_DAT_08003720": "memory_location_3"
            },
            "code": "uint32_t calculate_value_and_set_080036d8(uint32_t input_value) {\n    uint32_t quotient = (*(uint32_t*)PTR_DAT_0800371c) / (1000 / (byte)*PTR_DAT_08003718);\n    uint32_t result = FUN_08003fd8(quotient);\n    if (result != 0) {\n        return 1;\n    }\n    if (input_value > 0xf) {\n        return 1;\n    }\n    FUN_08003f30(0xffffffff, input_value, 0);\n    *(uint32_t*)PTR_DAT_08003720 = input_value;\n    return 0;\n}",
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036d8",
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "imported": false,
            "current_name": "calculate_value_and_set_080036d8"
        },
        "FUN_08006e68": {
            "renaming": {
                "FUN_08006e68": "FUNC_08006e68"
            },
            "code": "\nvoid FUNC_08006e68(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint local_20;\n  undefined4 local_1c;\n  undefined4 local_18;\n  undefined4 local_14;\n  \n  puVar1 = PTR_DAT_08007100;\n  iVar2 = FUN_08007376((int)(char)*PTR_DAT_08007100,PTR_DAT_08007104);\n  FUN_08007438(param_1);\n  uVar3 = FUN_08006bb8((uint)((int)(char)*puVar1 << 0x18) >> 0x1c);\n  local_1c = 2;\n  local_18 = 0;\n  local_14 = 3;\n  *(uint *)(DAT_08007108 + 0x18) = *(uint *)(DAT_08007108 + 0x18) | 1;\n  switch((uint)(iVar2 << 0x11) >> 0x19) {\n  case 1:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000001;\n    break;\n  case 2:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000002;\n    break;\n  case 4:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000004;\n    break;\n  case 6:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000008;\n    break;\n  case 8:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000030;\n    break;\n  case 10:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x70000c0;\n    break;\n  case 0xd:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000300;\n    break;\n  case 0x10:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7000c00;\n    break;\n  case 0x14:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7001000;\n    break;\n  case 0x17:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) | 0x7008000;\n    break;\n  case 0x1c:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xf8ffffff;\n    break;\n  case 0x22:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    *(uint *)(DAT_0800710c + 4) = *(uint *)(DAT_0800710c + 4) & 0xf8ffffff | 0x4000000;\n  }\n  local_20 = 1 << ((byte)*PTR_DAT_08007100 & 0xf) & 0xffff;\n  FUN_080040e8(uVar3,&local_20);\n  return;\n}\n\n",
            "called": [
                "FUN_08007376",
                "FUN_08007438",
                "FUN_080040e8",
                "FUN_08006bb8"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08006e68",
            "calling": [
                "FUN_08006092"
            ],
            "imported": false,
            "current_name": "FUNC_08006e68"
        },
        "FUN_080086e8": {
            "renaming": {
                "FUN_080086e8": "find_param_index_080086e8",
                "param_1": "param",
                "uVar1": "index"
            },
            "code": "uint find_param_index_080086e8(int param) {\n  uint index;\n  if (param == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while (true) {\n      if (index > 4) {\n        return index;\n      }\n      if (param == *(int *)(PTR_DAT_08008708 + index * 4)) {\n        break;\n      }\n      index = (index + 1) & 0xff;\n    }\n  }\n  return index;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080086e8",
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "imported": false,
            "current_name": "find_param_index_080086e8"
        },
        "FUN_0800a110": {
            "renaming": {
                "FUN_0800a110": "process_input_0800a110",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "data_ptr",
                "iVar2": "result"
            },
            "code": "void process_input_0800a110(int *output, undefined4 input) {\n  undefined *data_ptr;\n  int result;\n  data_ptr = PTR_DAT_0800a12c;\n  *(undefined4 *)PTR_DAT_0800a12c = 0;\n  result = perform_calculation(input);\n  if ((result == -1) && (*(int *)data_ptr != 0)) {\n    *output = *(int *)data_ptr;\n  }\n  return;\n}",
            "called": [
                "FUN_08008850"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a110",
            "calling": [
                "FUN_08009eac"
            ],
            "imported": false,
            "current_name": "process_input_0800a110"
        },
        "FUN_08003b8c": {
            "renaming": {
                "FUN_08003b8c": "check_if_flag_is_set_08003b8c",
                "param_1": "flag_array",
                "iVar1": "current_time",
                "iVar2": "flag_array_pointer"
            },
            "code": "int check_if_flag_is_set_08003b8c(int *flag_array) {\n    int flag_array_pointer = *flag_array;\n    if ((*(unsigned int *)(flag_array_pointer + 8) & 1) == 0) {\n        return 0;\n    }\n    *(unsigned int *)(flag_array_pointer + 8) &= 0xfffffffe;\n    int initial_time = get_current_time();\n    do {\n        if ((*(unsigned int *)(*flag_array + 8) & 1) == 0) {\n            return 0;\n        }\n        int current_time = get_current_time();\n    } while ((unsigned int)(current_time - initial_time) < 3);\n    flag_array[10] |= 0x10;\n    flag_array[11] |= 1;\n    return 1;\n}",
            "called": [
                "FUN_08003760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b8c",
            "calling": [
                "FUN_08003e20",
                "FUN_08003bd8",
                "FUN_08003de4",
                "FUN_08003ce8"
            ],
            "imported": false,
            "current_name": "check_if_flag_is_set_08003b8c"
        },
        "FUN_080035b8": {
            "renaming": {
                "FUN_080035b8": "initialize_components_080035b8",
                "iVar1": "result",
                "local_54": "factor",
                "local_4c": "factor[1]",
                "local_44": "divisor[0]",
                "local_40": "divisor[1]",
                "local_3c": "divisor[2]",
                "local_38": "divisor[3]",
                "local_34": "divisor[4]",
                "local_30": "multiplier",
                "local_20": "multiplier[1]",
                "local_1c": "multiplier[2]",
                "local_14": "multiplier[3]",
                "local_10": "divisor[2]",
                "local_c": "divisor[3]",
                "PTR_s__home_bo__arduino15_packages_STM_08003654": "PTR_error_message",
                "DAT_08003650": "DAT_constant"
            },
            "code": "void initialize_components_080035b8()\n{\n  int result;\n  uint32_t multiplier[4] = {2, 0, 0x10, 2};\n  uint32_t divisor[5] = {0xf, 2, 0, 0x400, 0};\n  uint32_t factor[2] = {2, 0x8000};\n  result = FUNC_08005460(multiplier);\n  if (result != 0) {\n    FUN_080073e8(PTR_s__home_bo__arduino15_packages_STM_08003654, 0x88);\n  }\n  result = FUN_080058ac(divisor);\n  if (result != 0) {\n    FUN_080073e8(PTR_s__home_bo__arduino15_packages_STM_08003654, 0x95);\n  }\n  result = FUN_08005aa4(factor);\n  if (result != 0) {\n    FUN_080073e8(PTR_s__home_bo__arduino15_packages_STM_08003654, 0x9c);\n  }\n  uint32_t uVar = FUN_08005a1c();\n  FUN_08003fd8((uint32_t)((uint64_t)DAT_08003650 * (uint64_t)uVar >> 0x26));\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff, 0);\n}\n",
            "called": [
                "FUN_080073e8",
                "FUN_08005a1c",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_080058ac",
                "FUN_08005460",
                "FUN_08003f30",
                "FUN_08005aa4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035b8",
            "calling": [
                "FUN_080072fa"
            ],
            "imported": false,
            "current_name": "initialize_components_080035b8"
        },
        "FUN_08001c18": {
            "renaming": {
                "FUN_08001c18": "receive_i2c_data_and_verify_08001c18",
                "param_1": "device_address",
                "param_2": "expected_data_length",
                "param_3": "error_code",
                "param_4": "error_message",
                "puVar1": "data_ptr",
                "uVar2": "received_byte",
                "iVar3": "received_data_length",
                "iVar4": "i",
                "bVar5": "data_received"
            },
            "code": "void receive_i2c_data_and_verify_08001c18(uint8_t device_address, uint32_t expected_data_length, int error_code, uint32_t error_message) {\n  \n  uint8_t *data_ptr;\n  uint8_t received_byte;\n  int received_data_length;\n  bool data_received;\n  \n  data_ptr = received_data_buffer;\n  if (expected_data_length == 0xffffffff) {\n    expected_data_length = 0;\n  }\n  else {\n    set_i2c_device_address(received_data_buffer, device_address);\n    send_i2c_start_bit();\n    send_i2c_device_address(received_data_buffer);\n  }\n  set_i2c_register_address(received_data_buffer, device_address, error_code);\n  received_data_length = get_received_data_length(received_data_buffer);\n  if (expected_data_length < received_data_length) {\n    print_error_message(error_message, \"Too many bytes received\");\n  }\n  else {\n    received_data_length = get_received_data_length(received_data_buffer);\n    if (received_data_length < expected_data_length) {\n      print_error_message(error_message, \"Too few bytes received\");\n    }\n  }\n  data_ptr[0] = (char)device_address;\n  data_ptr[1] = (char)expected_data_length;\n  for (int i = 0; i < expected_data_length; i++) {\n    if (get_received_data_length(received_data_buffer) == 0) {\n      data_received = false;\n    }\n    else {\n      data_received = true;\n    }\n    if (data_received) {\n      received_byte = receive_i2c_byte();\n      data_ptr[i + 2] = received_byte;\n    }\n  }\n  send_i2c_stop_bit();\n  print_i2c_data(received_data_buffer, expected_data_length + 2);\n  return;\n}",
            "called": [
                "FUN_08002f0a",
                "FUN_08001c08",
                "FUN_08002a58",
                "FUN_0800270c",
                "FUN_08001bf8",
                "FUN_08002a30",
                "FUN_08002c14",
                "FUN_08002f14"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001c18",
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0"
            ],
            "imported": false,
            "current_name": "receive_i2c_data_and_verify_08001c18"
        },
        "FUN_08006460": {
            "renaming": {
                "FUN_08006460": "update_data_08006460",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "data_ptr"
            },
            "code": "uint32_t update_data_08006460(uint32_t **data, uint32_t size)\n{\n  uint32_t *data_ptr = *data;\n  if (((data_ptr[8] & 0x1111) == 0) && ((data_ptr[8] & 0x444) == 0)) {\n    data_ptr[17] &= 0xffff7fff;\n  }\n  data_ptr = *data;\n  if (((data_ptr[8] & 0x1111) == 0) && ((data_ptr[8] & 0x444) == 0)) {\n    *data_ptr &= 0xfffffffe;\n  }\n  return 0;\n}",
            "called": [
                "FUN_08006420"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006460",
            "calling": [
                "FUN_080071e4"
            ],
            "imported": false,
            "current_name": "update_data_08006460"
        },
        "FUN_08004046": {
            "renaming": {
                "FUN_08004046": "do_nothing_and_return_08004046"
            },
            "code": "void do_nothing_and_return_08004046(void)\n{\n  do_nothing_08004044();\n  return;\n}",
            "called": [
                "FUN_08004044"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004046",
            "calling": [
                "FUN_08007246"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08004046"
        },
        "FUN_08008880": {
            "renaming": {
                "FUN_08008880": "get_data_from_ptr_08008880",
                "param_1": "data_index",
                "bVar1": "is_valid_index",
                "cVar2": "data_value",
                "uVar3": "result",
                "uVar4": "shift_amount"
            },
            "code": "uint get_data_from_ptr_08008880(uint data_index)\n{\n  bool is_valid_index;\n  char data_value;\n  uint result;\n  \n  if (data_index < 0xe) {\n    if (data_index + 0x2e < 0x3c) {\n      is_valid_index = true;\n    }\n    else {\n      is_valid_index = false;\n    }\n  }\n  else {\n    is_valid_index = data_index < 0x3c;\n  }\n  if (is_valid_index) {\n    if (data_index < 0xe) {\n      data_index = data_index + 0x2e;\n    }\n    data_value = PTR_DAT_080088d8[data_index];\n  }\n  else {\n    data_value = -1;\n  }\n  if (data_value == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08006d80();\n    uint shift_amount = *(uint *)PTR_DAT_080088dc;\n    if (shift_amount != 0xc) {\n      if (shift_amount < 0xc) {\n        return result >> (0xc - shift_amount & 0xff);\n      }\n      return result << (shift_amount - 0xc & 0xff);\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08006d80"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008880",
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "imported": false,
            "current_name": "get_data_from_ptr_08008880"
        },
        "FUN_08004044": {
            "renaming": {
                "FUN_08004044": "do_nothing_08004044"
            },
            "code": "\nvoid do_nothing_08004044(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004044",
            "calling": [
                "FUN_08004046"
            ],
            "imported": false,
            "current_name": "do_nothing_08004044"
        },
        "FUN_08002ed2": {
            "renaming": {
                "FUN_08002ed2": "process_data_08002ed2",
                "param_1": "data_ptr",
                "uVar1": "result",
                "PTR_": "",
                "DAT_": "",
                "**(code **)(**(int **)(param_1 + 0xc0) + 0xc)": "data_ptr_2",
                "(uint32_t *)(*data_ptr_2 + 0xc)": "function_ptr",
                "FUN_08003474": "write_data",
                "& 0xff": "masked_result"
            },
            "code": "void process_data_08002ed2(int data_ptr){\n    uint32_t result;\n    uint32_t **data_ptr_2 = (uint32_t **)(*(int *)(data_ptr + 0xc0));\n    uint32_t *function_ptr = (uint32_t *)(*data_ptr_2 + 0xc);\n    result = (**(uint32_t (**)(void))(function_ptr))();\n    if (result != 0xffffffff){\n        uint8_t masked_result = result & 0xff;\n        write_data(data_ptr + 0x44, masked_result);\n    }\n    return;\n}",
            "called": [
                "FUN_08003474"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ed2",
            "calling": [
                "FUN_080022f8"
            ],
            "imported": false,
            "current_name": "process_data_08002ed2"
        },
        "FUN_080073ae": {
            "renaming": {
                "FUN_080073ae": "compare_and_return_nonzero_080073ae",
                "param_1": "num1",
                "param_2": "num2"
            },
            "code": "int compare_and_return_nonzero_080073ae(int num1, int num2) {\n    if (num1 != num2) {\n        if (num1 == 0) {\n            return num2;\n        }\n        if (num2 == 0) {\n            return num1;\n        }\n        num1 = 0;\n    }\n    return num1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073ae",
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "imported": false,
            "current_name": "compare_and_return_nonzero_080073ae"
        },
        "FUN_08000488": {
            "renaming": {
                "FUN_08000488": "set_bit_08000488",
                "param_1": "bit_index",
                "param_2": "set_bit",
                "uVar1": "new_data",
                "PTR_DAT_080004c8": "data_ptr",
                "PTR_DAT_080004cc": "flag_ptr",
                "PTR_DAT_080004d0": "output_ptr"
            },
            "code": "void set_bit_08000488(uint bit_index, int set_bit_08000488)\n{\n    uint* PTR_DAT_080004c8 = (uint*)PTR_DAT_080004c8;\n    if ((int)bit_index < 0xe)\n    {\n        if (set_bit_08000488 == 0)\n        {\n            *PTR_DAT_080004c8 = *PTR_DAT_080004c8 & ~(1 << (bit_index & 0xff));\n        }\n        else\n        {\n            *PTR_DAT_080004c8 = 1 << (bit_index & 0xff) | *PTR_DAT_080004c8;\n            if (*PTR_DAT_080004cc == '\\0')\n            {\n                uint new_data = FUN_08008880();\n                FUN_08002ef2(PTR_DAT_080004d0, bit_index, new_data);\n            }\n        }\n    }\n}",
            "called": [
                "FUN_08002ef2",
                "FUN_08008880"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000488",
            "calling": [
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "set_bit_08000488"
        },
        "FUN_08003f0c": {
            "renaming": {
                "FUN_08003f0c": "update_register_08003f0c",
                "param_1": "input_value",
                "*(uint *)(DAT_08003f2c + 0xc)": "register_ptr",
                "DAT_08003f2c": "register_base_address",
                "register_value": "register_value",
                "mask": "mask",
                "shifted_input": "shifted_input",
                "new_register_value": "new_register_value"
            },
            "code": "void update_register_08003f0c(uint input_value)\n{\n    uint* *(uint *)(DAT_08003f2c + 0xc) = (uint*)(DAT_08003f2c + 0xc);\n    uint register_value = **(uint *)(DAT_08003f2c + 0xc);\n    uint mask = 0xf8ff;\n    uint shifted_input = (input_value & 7) << 8;\n    uint new_register_value = shifted_input | (register_value & mask) | 0x5fa0000;\n    **(uint *)(DAT_08003f2c + 0xc) = new_register_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f0c",
            "calling": [
                "FUN_08003724",
                "FUN_08008f0e"
            ],
            "imported": false,
            "current_name": "update_register_08003f0c"
        },
        "FUN_08008f1c": {
            "renaming": {
                "FUN_08008f1c": "do_nothing_and_call_function_08008f1c",
                "FUN_08001b48": "call_function",
                "FUN_080022f8": "perform_task",
                "FUN_08008bf4": "perform_another_task",
                "DAT_08008f38": "data"
            },
            "code": "void do_nothing_and_call_function_08008f1c(void)\n{\n  do_nothing();\n  call_function();\n  do {\n    do {\n      perform_task();\n    } while (DAT_08008f38 == 0);\n    perform_another_task();\n  } while (true);\n}",
            "called": [
                "FUN_080022f8",
                "FUN_08001b48",
                "FUN_08008f0c",
                "FUN_08008bf4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008f1c",
            "calling": [
                "FUN_08003658"
            ],
            "imported": false,
            "current_name": "do_nothing_and_call_function_08008f1c"
        },
        "FUN_080058ac": {
            "renaming": {
                "FUN_080058ac": "process_data_080058ac",
                "param_1": "data_array",
                "param_2": "data_length",
                "puVar1": "data_ptr",
                "iVar2": "elapsed_time",
                "iVar3": "initial_time",
                "uVar4": "data_value"
            },
            "code": "uint32_t process_data_080058ac(uint32_t *data_array, uint32_t data_length)\n{\n  uint32_t *data_ptr;\n  int32_t elapsed_time, initial_time;\n  uint32_t data_value;\n  \n  data_ptr = data_array;\n  if (((*data_array & 7) < data_length) && (*data_array = *data_array & 0xfffffff8 | data_length, data_length != (*data_ptr & 7)))) {\n    return 1;\n  }\n  if ((*data_ptr & 2) != 0) {\n    data_array[1] = data_array[1] & 0xffffff0f | data_ptr[2];\n  }\n  if ((*data_ptr & 1) != 0) {\n    data_value = data_ptr[1];\n    if (data_value == 1) {\n      if ((*data_array & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((data_value != 2) && ((*data_array & 2) == 0)) {\n      return 1;\n    }\n    data_array[1] = data_value | data_array[1] & 0xfffffffc;\n    initial_time = get_current_time();\n    if (data_ptr[1] == 1) {\n      while ((data_array[1] & 0xc) != 4) {\n        elapsed_time = get_current_time();\n        if (5000 < (uint32_t)(elapsed_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (data_ptr[1] == 2) {\n      while ((data_array[1] & 0xc) != 8) {\n        elapsed_time = get_current_time();\n        if (5000 < (uint32_t)(elapsed_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((data_array[1] & 0xc) != 0) {\n        elapsed_time = get_current_time();\n        if (5000 < (uint32_t)(elapsed_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  data_ptr = data_array;\n  if ((data_length < (*data_array & 7)) && (*data_array = *data_array & 0xfffffff8 | data_length, data_length != (*data_ptr & 7)))) {\n    return 1;\n  }\n  if ((*data_ptr & 4) != 0) {\n    data_array[1] = data_array[1] & 0xfffff8ff | data_ptr[3];\n  }\n  if ((*data_ptr & 8) != 0) {\n    data_array[1] = data_array[1] & 0xffffc7ff | data_ptr[4] << 3;\n  }\n  data_value = process_data_080058ac_2();\n  *(uint32_t *)PTR_DAT_08005a18 = data_value >> PTR_DAT_08005a14[(data_array[1] << 0x18) >> 0x1c];\n  process_data_080058ac_3(0xf);\n  return 0;\n}",
            "called": [
                "FUN_080058d2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058ac",
            "calling": [
                "FUN_080035b8"
            ],
            "imported": false,
            "current_name": "process_data_080058ac"
        },
        "FUN_08006bb8": {
            "renaming": {
                "FUN_08006bb8": "set_flag_08006bb8",
                "param_1": "flag",
                "uVar1": "return_value",
                "DAT_08006c48": "data_ptr",
                "DAT_08006c4c": "return_value_0",
                "DAT_08006c50": "return_value_1",
                "DAT_08006c54": "return_value_2",
                "DAT_08006c58": "return_value_3",
                "DAT_08006c5c": "return_value_4"
            },
            "code": "uint32_t set_flag_08006bb8(uint32_t flag) {\n    uint32_t* DAT_08006c48 = (uint32_t*)DAT_08006c48;\n    switch(flag) {\n        case 0:\n            DAT_08006c48[6] |= 4;\n            return DAT_08006c4c;\n        case 1:\n            DAT_08006c48[6] |= 8;\n            return DAT_08006c50;\n        case 2:\n            DAT_08006c48[6] |= 0x10;\n            return DAT_08006c54;\n        case 3:\n            DAT_08006c48[6] |= 0x20;\n            return DAT_08006c58;\n        case 4:\n            DAT_08006c48[6] |= 0x40;\n            return DAT_08006c5c;\n        default:\n            return 0;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006bb8",
            "calling": [
                "FUN_08006e68",
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_08007258",
                "FUN_080077b0"
            ],
            "imported": false,
            "current_name": "set_flag_08006bb8"
        },
        "FUN_08007438": {
            "renaming": {
                "FUN_08007438": "update_global_flags_08007438",
                "param_1": "flag_ptr",
                "*param_1": "flag_value",
                "DAT_080074d0": "GLOBAL_FLAG_1",
                "DAT_080074dc": "GLOBAL_PTR_1",
                "*PTR_DAT_080074dc": "*(int **)GLOBAL_PTR_1",
                "0x40000000": "GLOBAL_FLAG_2",
                "_DAT_4002101c": "_GLOBAL_FLAG_2",
                "PTR_DAT_080074dc + 4": "GLOBAL_PTR_2",
                "DAT_080074d4": "GLOBAL_FLAG_3",
                "*(uint *)(DAT_080074d4 + 0x20c1c)": "*(uint *)(GLOBAL_FLAG_3 + 0x20c1c)",
                "PTR_DAT_080074dc + 8": "GLOBAL_PTR_3",
                "DAT_080074d8": "GLOBAL_FLAG_4",
                "*(uint *)(DAT_080074d8 + 0x2081c)": "*(uint *)(GLOBAL_FLAG_4 + 0x2081c)",
                "PTR_DAT_080074dc + 0xc": "GLOBAL_PTR_4"
            },
            "code": "void update_global_flags_08007438(int* flag_ptr) {\n    int flag_value = *flag_ptr;\n    if (flag_value == DAT_080074d0) {\n        *(uint *)(DAT_080074d0 + 0xe418) |= 0x800;\n        *PTR_DAT_080074dc = flag_ptr;\n    }\n    if (flag_value == GLOBAL_FLAG_2) {\n        _DAT_4002101c |= 1;\n        *(int **)(DAT_080074dc + 4) = flag_ptr;\n    }\n    if (flag_value == DAT_080074d4) {\n        *(uint *)(DAT_080074d4 + 0x20c1c) |= 2;\n        *(int **)(DAT_080074dc + 8) = flag_ptr;\n    }\n    if (flag_value == DAT_080074d8) {\n        *(uint *)(DAT_080074d8 + 0x2081c) |= 4;\n        *(int **)(DAT_080074dc + 0xc) = flag_ptr;\n    }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007438",
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "imported": false,
            "current_name": "update_global_flags_08007438"
        },
        "FUN_08004aec": {
            "renaming": {
                "FUN_08004aec": "reset_parameters_08004aec",
                "param_1": "parameters",
                "param_1[0xb]": "param_b",
                "(*(char *)((int)param_1 + 0x3d)": "*param_3d",
                "DAT_08004b7c": "PTR_DAT_08004b7c"
            },
            "code": "uint32_t reset_parameters_08004aec(uint32_t **parameters)\n{\n    uint32_t *param_b = parameters[0xb];\n    char *param_3d = (char *)parameters + 0x3d;\n\n    if ((param_b == (uint32_t *)0x4 || param_b == (uint32_t *)0x8) && (*param_3d == '(')) {\n        param_b = DAT_08004b7c;\n        (*parameters)[1] &= 0xfffff8ff;\n        (*parameters)[5] = 0xfffffbff;\n        **parameters &= 0xfffffbff;\n        parameters[0xc] = (uint32_t *)0x0;\n        *param_3d = 0x20;\n        *(param_3d + 1) = 0;\n        FUN_08007ff0();\n    }\n    else if (*param_3d == '!') {\n        param_b = DAT_08004b7c;\n        parameters[0xc] = (uint32_t *)0x21;\n        *param_3d = 0x20;\n        *(param_3d + 1) = 0;\n        (*parameters)[1] &= 0xfffff8ff;\n        (*parameters)[5] = 0xfffffbff;\n        **parameters &= 0xfffffbff;\n        do_nothing_08004a22();\n    }\n    else {\n        (*parameters)[5] = 0xfffffbff;\n    }\n    return 0;\n}",
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004aec",
            "calling": [
                "FUN_080052f0"
            ],
            "imported": false,
            "current_name": "reset_parameters_08004aec"
        },
        "FUN_0800887c": {
            "renaming": {
                "FUN_0800887c": "return_one_0800887c",
                "undefined4": "int",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int return_one_0800887c(void)\n{\n    int result = 1;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800887c",
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "imported": false,
            "current_name": "return_one_0800887c"
        },
        "FUN_08004728": {
            "renaming": {
                "FUN_08004728": "process_input_08004728",
                "param_1": "input_array",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "uVar1": "result",
                "puVar2": "current_input",
                "local_c": "input_index"
            },
            "code": "uint32_t process_input_08004728(uint32_t **input_array, uint32_t *param_2, uint32_t *param_3, uint16_t param_4)\n{\n    uint32_t result;\n    uint32_t *current_input;\n    int input_index;\n\n    if ((*input_array)[0x3d] == ' ')\n    {\n        input_index = (uint32_t)((uint64_t)DAT_080047ec * (uint64_t)((*input_array)[0x3e8] >> 3) >> 0x28) * 0x19;\n        do\n        {\n            if (input_index == 0)\n            {\n                input_array[0xc] = (uint32_t *)0x0;\n                (*input_array)[0x3d] = 0x20;\n                input_array[0xf] = 0;\n                return 3;\n            }\n            current_input = *input_array;\n            input_index--;\n        } while ((current_input[6] & 2) != 0);\n        if ((*input_array)[0xf] == 0x1)\n        {\n            result = 2;\n        }\n        else\n        {\n            input_array[0xf] = 1;\n            if ((*current_input & 1) == 0)\n            {\n                *current_input |= 1;\n            }\n            **input_array &= 0xfffff7ff;\n            (*input_array)[0x3d] = 0x21;\n            (*input_array)[0x3e] = 0x10;\n            result = 0;\n            input_array[0x10] = (uint32_t *)0x0;\n            input_array[9] = param_3;\n            (*input_array)[0x2a >> 2] = param_4;\n            input_array[0xb] = DAT_080047f0;\n            (*input_array)[0x28 >> 2] = (*input_array)[0x2a >> 2];\n            input_array[0x11] = param_2;\n            **input_array |= 0x100;\n            input_array[0xf] = 0;\n            (*input_array)[1] |= 0x700;\n        }\n    }\n    else\n    {\n        result = 2;\n    }\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004728",
            "calling": [
                "FUN_08007e74"
            ],
            "imported": false,
            "current_name": "process_input_08004728"
        },
        "FUN_08007ede": {
            "renaming": {
                "FUN_08007ede": "copy_to_buffer_08007ede",
                "param_1": "dst_addr",
                "param_2": "src_addr",
                "param_3": "num_bytes",
                "uVar1": "i"
            },
            "code": "int copy_to_buffer_08007ede(int dst_addr, int src_addr, uint32_t num_bytes)\n{\n  // Check if num_bytes is greater than 32\n  if (num_bytes > 32) {\n    return 2;\n  }\n  // Copy num_bytes bytes from src_addr to dst_addr\n  for (uint32_t i = 0; i < num_bytes; i++) {\n    *(uint8_t*)(dst_addr + i + 0x68) = *(uint8_t*)(src_addr + i);\n    *(char*)(dst_addr + 0x88) += 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ede",
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "imported": false,
            "current_name": "copy_to_buffer_08007ede"
        },
        "FUN_0800863c": {
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "data_ptr",
                "param_2": "new_data",
                "param_3": "param_3",
                "param_4": "param_4",
                "iVar1": "result",
                "uVar2": "data_index",
                "char_index": "char_index"
            },
            "code": "void update_data_0800863c(int data_ptr, int new_data, int param_3, int param_4) {\n  int result = FUN_080085b8();\n  if (data_ptr != 0 && result == 0) {\n    uint data_index = (uint)*(byte *)(data_ptr + 0x44);\n    *(int *)(PTR_DAT_0800868c + data_index * 4) = data_ptr;\n    *(int *)(PTR_DAT_08008688 + data_index * 4) = new_data;\n    int char_index = (int)*(char *)(data_ptr + 0x5a);\n    FUN_08003f30(char_index, 0, 1, data_index, param_4);\n    FUN_08003f94(char_index);\n    FUN_080068d6(*(int *)(PTR_DAT_08008690 + data_index * 4), data_ptr + 0x45, 1);\n  }\n}\n",
            "called": [
                "FUN_08003f94",
                "FUN_08003f30",
                "FUN_080068d6",
                "FUN_080085b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800863c",
            "calling": [
                "FUN_08008c44"
            ],
            "imported": false,
            "current_name": "update_data_0800863c"
        },
        "thunk_FUN_0800887c": {
            "renaming": {
                "thunk_FUN_0800887c": "return_one_thunk_0800887c"
            },
            "code": "int return_one_thunk_0800887c(void)\n{\n  int result = 1;\n  return result;\n}",
            "called": [
                "FUN_0800887c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a01c",
            "calling": [
                "FUN_08009fe8"
            ],
            "imported": false,
            "current_name": "return_one_thunk_0800887c"
        },
        "FUN_080074e0": {
            "renaming": {
                "FUN_080074e0": "update_flags_080074e0",
                "param_1": "flag",
                "*param_1": "*flag",
                "DAT_08007534": "FLAG_A",
                "DAT_08007538": "FLAG_C",
                "DAT_0800753c": "FLAG_D",
                "DAT_08007540": "FLAG_PTR"
            },
            "code": "void update_flags_080074e0(int *flag)\n{\n    int flag_value = *flag;\n    if (flag_value == DAT_08007534)\n    {\n        uint32_t *flag_a_ptr = (uint32_t *)(DAT_08007540 + 0x18);\n        *flag_a_ptr &= ~DAT_08007534_BITMASK;\n    }\n    else if (flag_value == FLAG_B)\n    {\n        uint32_t *flag_b_ptr = (uint32_t *)(DAT_08007540 + 0x1c);\n        *flag_b_ptr &= ~FLAG_B_BITMASK;\n    }\n    else if (flag_value == DAT_08007538)\n    {\n        uint32_t *flag_c_ptr = (uint32_t *)(DAT_08007540 + 0x1c);\n        *flag_c_ptr &= ~DAT_08007538_BITMASK;\n    }\n    else if (flag_value == DAT_0800753c)\n    {\n        uint32_t *flag_d_ptr = (uint32_t *)(DAT_08007540 + 0x1c);\n        *flag_d_ptr &= ~DAT_0800753c_BITMASK;\n    }\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074e0",
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "imported": false,
            "current_name": "update_flags_080074e0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "execute_code_if_not_null_080073c0",
                "PTR_DAT_080073d0": "code_pointer",
                "PTR_DAT_080073d4": "parameter",
                "code": "function_pointer"
            },
            "code": "void execute_code_if_not_null_080073c0(void)\n{\n    code** PTR_DAT_080073d0 = *(code**)(PTR_DAT_080073d0);\n    if (PTR_DAT_080073d0 != NULL)\n    {\n        code* function_pointer = *PTR_DAT_080073d0;\n        int PTR_DAT_080073d4 = *(int*)(PTR_DAT_080073d4);\n        (*function_pointer)(PTR_DAT_080073d4);\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_08005cb4"
            ],
            "imported": false,
            "current_name": "execute_code_if_not_null_080073c0"
        },
        "FUN_080084b0": {
            "renaming": {
                "FUN_080084b0": "process_data_080084b0",
                "cVar1": "input_char",
                "puVar2": "data_ptr",
                "uVar3": "data_byte",
                "iVar4": "result",
                "uVar5": "data_offset"
            },
            "code": "void process_data_080084b0(void)\n{\n  char input_char;\n  undefined *data_ptr;\n  undefined data_byte;\n  int result;\n  undefined4 data_offset;\n\n  input_char = input_data[1];\n  result = find_input_index((int)input_char, input_data);\n  if (result != 0) {\n    data_offset = find_input_index((int)input_char, input_data);\n    data_byte = get_data_byte(data_offset, input_data);\n    data_ptr = output_data;\n    output_data[0x59] = data_byte;\n    data_ptr[0x58] = input_char;\n    *(undefined4 *)(data_ptr + 0x48) = 0x2580;\n    *(undefined4 *)(data_ptr + 0x54) = 0;\n    *(undefined4 *)(data_ptr + 0x4c) = 0;\n    *(undefined4 *)(data_ptr + 0x50) = 0;\n    process_output_data(data_ptr);\n  }\n  return;\n}",
            "called": [
                "FUN_08007320",
                "FUN_08008078",
                "FUN_0800734a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080084b0",
            "calling": [
                "FUN_08008500"
            ],
            "imported": false,
            "current_name": "process_data_080084b0"
        },
        "FUN_08004050": {
            "renaming": {
                "FUN_08004050": "get_value_from_param_08004050",
                "param_1": "param",
                "puVar2": "param_value",
                "uVar1": "value"
            },
            "code": "uint get_value_from_param_08004050(uint **param)\n{\n    uint value;\n    if (*(char *)((int)param + 0x21) != '\\x02') {\n        param[0xe] = (uint *)0x4;\n        return 1;\n    }\n    **param &= 0xfffffff1;\n    **param &= 0xfffffffe;\n    uint *param_value = *param;\n    if (param_value == PTR_DAT_080040e0) {\n        value = 1;\n    }\n    else if (param_value == PTR_DAT_080040e0 + 5) {\n        value = 0x10;\n    }\n    else if (param_value == PTR_DAT_080040e0 + 10) {\n        value = 0x100;\n    }\n    else if (param_value == PTR_DAT_080040e0 + 0xf) {\n        value = 0x1000;\n    }\n    else if (param_value == PTR_DAT_080040e0 + 0x14) {\n        value = 0x10000;\n    }\n    else if (param_value == PTR_DAT_080040e0 + 0x19) {\n        value = 0x100000;\n    }\n    else {\n        value = 0x1000000;\n    }\n    *(uint *)(PTR_DAT_080040e4 + 4) = value;\n    *(char *)((int)param + 0x21) = 1;\n    *(uint *)(param + 8) = 0;\n    if (param[0xd] != (uint *)0x0) {\n        (*(code *)param[0xd])();\n        return 0;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004050",
            "calling": [
                "FUN_08004f3c",
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "get_value_from_param_08004050"
        },
        "FUN_08008e14": {
            "renaming": {
                "FUN_08008e14": "execute_function_08008e14",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "FUN_08008df8": "call_function"
            },
            "code": "void execute_function_08008e14(int input_param_1, int input_param_2) {\n    if ((input_param_1 == 1) && (input_param_2 == 0xffff)) {\n        call_function(PTR_DAT_08008e3c, 0, 0, 0, 0);\n        return;\n    }\n    return;\n}",
            "called": [
                "FUN_08008df8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e14",
            "calling": [],
            "imported": false,
            "current_name": "execute_function_08008e14"
        },
        "FUN_08005a28": {
            "renaming": {
                "FUN_08005a28": "calculate_shifted_value_08005a28",
                "uVar1": "function_result",
                "DAT_08005a40": "data_pointer",
                "PTR_DAT_08005a44": "shift_values",
                "index": "index",
                "shifted_value": "shifted_value"
            },
            "code": "uint calculate_shifted_value_08005a28(void)\n{\n  uint shifted_value;\n  uint function_result = get_function_result();\n  uint index = (uint)(*(int *)(DAT_08005a40 + 4) << 0x15) >> 0x1d;\n  shifted_value = function_result >> PTR_DAT_08005a44[index];\n  return shifted_value;\n}",
            "called": [
                "FUN_08005a1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a28",
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "imported": false,
            "current_name": "calculate_shifted_value_08005a28"
        },
        "FUN_080095a8": {
            "renaming": {
                "FUN_080095a8": "encode_data_080095a8",
                "param_1": "data",
                "param_2": "length",
                "param_3": "encoded_length",
                "param_4": "padding",
                "param_5": "encoder",
                "uVar2": "temp_length",
                "uVar3": "padding_length",
                "bVar4": "has_padding",
                "iVar1": "i"
            },
            "code": "undefined4 encode_data_080095a8(undefined4 data, uint *length, uint *encoded_length, undefined4 padding, code *encoder)\\n{\\n    int i;\\n    uint temp_length;\\n    uint padding_length;\\n    bool has_padding;\\n\\n    temp_length = length[4];\\n    if ((int)length[4] < (int)length[2]) {\\n        temp_length = length[2];\\n    }\\n    *encoded_length = temp_length;\\n    has_padding = *(char *)((int)length + 0x43) != \"\\0\";\\n    if (has_padding) {\\n        *encoded_length = temp_length + 1;\\n    }\\n    if ((int)(*length << 0x1a) < 0) {\\n        *encoded_length += 2;\\n    }\\n    padding_length = *length & 6;\\n    if (padding_length == 0) {\\n        for (; (int)padding_length < (int)(length[3] - *encoded_length); padding_length++) {\\n            i = (*encoder)(data, padding, (int)length + 0x19, 1);\\n            if (i == -1) {\\n                return 0xffffffff;\\n            }\\n        }\\n    }\\n    padding_length = (uint)*(byte *)((int)length + 0x43);\\n    if (padding_length != 0) {\\n        padding_length = 1;\\n    }\\n    temp_length = padding_length;\\n    if ((int)(*length << 0x1a) < 0) {\\n        *(undefined *)((int)length + padding_length + 0x43) = 0x30;\\n        temp_length = padding_length + 2;\\n        *(undefined *)((int)length + padding_length + 0x44) = *(undefined *)((int)length + 0x45);\\n    }\\n    i = (*encoder)(data, padding, (int)length + 0x43, temp_length);\\n    if (i != -1) {\\n        temp_length = length[3];\\n        has_padding = (*length & 6) != 4;\\n        if (has_padding) {\\n            temp_length = 0;\\n        }\\n        padding_length = 0;\\n        if (!has_padding) {\\n            temp_length = temp_length - *encoded_length;\\n        }\\n        if (!has_padding) {\\n            temp_length = temp_length & ~((int)temp_length >> 0x1f);\\n        }\\n        if ((int)length[4] < (int)length[2]) {\\n            temp_length = temp_length + (length[2] - length[4]);\\n        }\\n        while (true) {\\n            if (temp_length == padding_length) {\\n                return 0;\\n            }\\n            i = (*encoder)(data, padding, (int)length + 0x1a, 1);\\n            if (i == -1) {\\n                break;\\n            }\\n            padding_length++;\\n        }\\n    }\\n    return 0xffffffff;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095a8",
            "calling": [
                "FUN_08009698"
            ],
            "imported": false,
            "current_name": "encode_data_080095a8"
        },
        "FUN_08003002": {
            "renaming": {
                "FUN_08003002": "check_and_send_data_08003002",
                "param_1": "data",
                "*(char *)(param_1 + 0x1f8)": "*ptr_data",
                "FUN_08008990": "send_data",
                "FUN_08002fca": "send_data",
                "do_nothing_08008ac4": "do_nothing"
            },
            "code": "void check_and_send_data_08003002(int data)\n{\n    char* ptr_data = (char*)(data + 0x1f8);\n    if (*ptr_data != '\\0') {\n        return;\n    }\n    send_data(0xd, 1);\n    send_data(data, 0xd, 2, 0x28, 0xd2);\n    do_nothing_08008ac4(0xfa);\n    send_data(data, 0xd, 5, 0x28, 0xd2);\n    do_nothing_08008ac4(0x7d);\n    return;\n}",
            "called": [
                "FUN_08008ac4",
                "FUN_08008990",
                "FUN_08002fca"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003002",
            "calling": [
                "FUN_08003048"
            ],
            "imported": false,
            "current_name": "check_and_send_data_08003002"
        },
        "FUN_08008ac4": {
            "renaming": {
                "FUN_08008ac4": "do_nothing_08008ac4"
            },
            "code": "\nvoid do_nothing_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ac4",
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "imported": false,
            "current_name": "do_nothing_08008ac4"
        },
        "FUN_08003bd8": {
            "renaming": {
                "FUN_08003bd8": "check_data_integrity_08003bd8",
                "param_1": "data",
                "iVar1": "checksum",
                "uVar2": "uVar",
                "uVar3": "uVar3",
                "DAT_08003ce0": "PTR_DAT_08003ce0",
                "DAT_08003ce4": "PTR_DAT_08003ce4"
            },
            "code": "int check_data_integrity_08003bd8(int *data)\n{\n    int checksum = 0;\n    uint flags = data[10];\n    if (data == NULL)\n    {\n        return 1;\n    }\n    if (data[10] == 0)\n    {\n        data[11] = 0;\n        *(undefined *)(data + 9) = 0;\n        clear_data();\n    }\n    checksum = calculate_checksum(data);\n    uint integrity_check = flags & 0x10;\n    if (integrity_check == 0 && checksum == 0)\n    {\n        data[10] = flags & 0xffffeefd | 2;\n        uint uVar = data[1] | data[7] | data[3] << 1;\n        uint uVar2 = 0;\n        if (data[2] == 0x100 || data[2] == 1)\n        {\n            uVar2 = (data[4] - 1) * 0x100000;\n        }\n        uint uVar3 = 0x100;\n        if (data[2] == 1)\n        {\n            uVar3 = 0x100;\n        }\n        if (data[5] == 1)\n        {\n            if (data[3] == 0)\n            {\n                uVar3 |= (data[6] - 1) * 0x2000 | 0x800;\n            }\n            else\n            {\n                data[10] |= 0x20;\n                data[11] |= 1;\n            }\n        }\n        *(uint *)(*data + 4) = uVar3 | *(uint *)(*data + 4) & 0xffff16ff;\n        *(uint *)(*data + 8) = DAT_08003ce0 & *(uint *)(*data + 8) | uVar;\n        *(uint *)(*data + 0x2c) = uVar2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n        if (uVar != (DAT_08003ce4 & *(uint *)(*data + 8)))\n        {\n            data[10] = flags & 0xffffffed | 0x10;\n            data[11] |= 1;\n            return 1;\n        }\n        data[11] = 0;\n        data[10] = flags & 0xfffffffc | 1;\n        return 0;\n    }\n    data[10] |= 0x10;\n    return 1;\n}",
            "called": [
                "FUN_08003b8c",
                "FUN_08006ca8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003bd8",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "check_data_integrity_08003bd8"
        },
        "FUN_08009d50": {
            "renaming": {
                "FUN_08009d50": "initialize_data_structure_08009d50",
                "param_1": "data_ptr",
                "uVar1": "data",
                "iVar2": "current_data_ptr",
                "bVar3": "is_current_data_ptr",
                "PTR_PTR_DAT_08009da8": "current_data_ptr_pointer",
                "PTR_LAB_08009cd0_1_08009dac": "data_label",
                "FUN_08009db0": "get_data",
                "PTR_08009d98": "data_ptr_pointer",
                "DAT_08009da4": "data_label_2"
            },
            "code": "void initialize_data_structure_08009d50(int data_ptr)\n{\n    if (*(int *)(data_ptr + 0x18) == 0) {\n        *(int *)(data_ptr + 0x48) = 0;\n        *(int *)(data_ptr + 0x4c) = 0;\n        *(int *)(data_ptr + 0x50) = 0;\n        int current_data_ptr = *(int *)PTR_PTR_DAT_08009da8;\n        *(void **)(data_ptr + 0x28) = PTR_LAB_08009cd0_1_08009dac;\n        bool is_current_data_ptr = data_ptr == current_data_ptr;\n        if (is_current_data_ptr) {\n            current_data_ptr = 1;\n        }\n        if (is_current_data_ptr) {\n            *(int *)(data_ptr + 0x18) = current_data_ptr;\n        }\n        int first_data = FUN_08009db0();\n        *(int *)(data_ptr + 4) = first_data;\n        int second_data = FUN_08009db0(data_ptr);\n        *(int *)(data_ptr + 8) = second_data;\n        int third_data = FUN_08009db0(data_ptr);\n        *(int *)(data_ptr + 0xc) = third_data;\n        FUN_08009cdc(*(int *)(data_ptr + 4), 4, 0);\n        FUN_08009cdc(*(int *)(data_ptr + 8), 9, 1);\n        FUN_08009cdc(*(int *)(data_ptr + 0xc), 0x12, 2);\n        *(int *)(data_ptr + 0x18) = 1;\n    }\n    return;\n}",
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009d50",
            "calling": [
                "FUN_080098d8",
                "FUN_08009c7c",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009a80",
                "FUN_08009db0"
            ],
            "imported": false,
            "current_name": "initialize_data_structure_08009d50"
        },
        "FUN_08003366": {
            "renaming": {
                "FUN_08003366": "set_values_if_condition_met_08003366",
                "param_1": "object_address",
                "param_2": "value_to_compare",
                "param_3": "value_to_set_1",
                "param_4": "value_to_set_2",
                "*(undefined4 *)(param_1 + 0x68)": "*(int *)(object_address + 104)",
                "*(undefined4 *)(param_1 + 0x40)": "*(int *)(object_address + 64)"
            },
            "code": "void set_values_if_condition_met_08003366(int object_address, int value_to_compare, int value_to_set_1, int value_to_set_2) {\n  if (value_to_compare == 113) {\n    *(int *)(object_address + 104) = value_to_set_1;\n    *(int *)(object_address + 64) = value_to_set_2;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003366",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "set_values_if_condition_met_08003366"
        },
        "FUN_080091b0": {
            "renaming": {
                "FUN_080091b0": "copy_data_to_buffer_080091b0",
                "param_1": "buffer_offset",
                "param_2": "data",
                "param_3": "data_size",
                "puVar1": "buffer_end_ptr",
                "puVar2": "buffer_ptr"
            },
            "code": "void copy_data_to_buffer_080091b0(int buffer_offset, undefined *data, int data_size)\n{\n  undefined *buffer_ptr;\n  undefined *data_ptr;\n  buffer_ptr = (undefined *)(buffer_offset - 1);\n  data_ptr = data + data_size;\n  for (; data != data_ptr; data++) {\n    buffer_ptr++;\n    *buffer_ptr = *data;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091b0",
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_080091b0"
        },
        "FUN_08009108": {
            "renaming": {
                "FUN_08009108": "calculate_result_08009108",
                "param_1": "unused_parameter",
                "param_2": "input_value"
            },
            "code": "long long calculate_result_08009108(uint input_value) {\n    if (DAT_08009120 != 0) {\n        return CONCAT44(param_1, 2);\n    }\n    return (unsigned long long)input_value << 0x20;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009108",
            "calling": [
                "FUN_080090c2"
            ],
            "imported": false,
            "current_name": "calculate_result_08009108"
        },
        "FUN_0800a18c": {
            "renaming": {
                "FUN_0800a18c": "update_ptr_data_flags_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_0800a228": "ptr_data_1",
                "PTR_DAT_0800a22c": "ptr_data_2",
                "PTR_DAT_0800a230": "ptr_data_3",
                "PTR_DAT_0800a234": "ptr_data_4",
                "PTR_DAT_0800a238": "ptr_data_5",
                "PTR_DAT_0800a23c": "ptr_data_6",
                "PTR_DAT_0800a240": "ptr_data_7",
                "PTR_DAT_0800a244": "ptr_data_8",
                "PTR_DAT_0800a248": "ptr_data_9",
                "PTR_DAT_0800a24c": "ptr_data_10",
                "PTR_DAT_0800a250": "ptr_data_11",
                "PTR_DAT_0800a254": "ptr_data_12",
                "update_ptr_data_flag": "update_ptr_data_flag"
            },
            "code": "void update_ptr_data_flags_0800a18c()\n{\n  code *jump_table = update_ptr_data_flags_0800a18c;\n  update_ptr_data_flag(PTR_DAT_0800a228);\n  update_ptr_data_flag(PTR_DAT_0800a22c);\n  update_ptr_data_flag(PTR_DAT_0800a230);\n  update_ptr_data_flag(PTR_DAT_0800a234);\n  update_ptr_data_flag(PTR_DAT_0800a238);\n  update_ptr_data_flag(PTR_DAT_0800a23c);\n  update_ptr_data_flag(PTR_DAT_0800a240);\n  update_ptr_data_flag(PTR_DAT_0800a244);\n  update_ptr_data_flag(PTR_DAT_0800a248);\n  update_ptr_data_flag(PTR_DAT_0800a24c);\n  update_ptr_data_flag(PTR_DAT_0800a250);\n  update_ptr_data_flag(PTR_DAT_0800a254);\n  (*jump_table)();\n}\n\nvoid update_ptr_data_flag(int *ptr_data)\n{\n  if (*ptr_data < 0)\n  {\n    *ptr_data |= 1u;\n  }\n}\n",
            "called": [
                "FUN_08009b5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a18c",
            "calling": [
                "FUN_08009084"
            ],
            "imported": false,
            "current_name": "update_ptr_data_flags_0800a18c"
        },
        "FUN_08009908": {
            "renaming": {
                "FUN_08009908": "calculate_value_08009908",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "variable1",
                "uVar2": "result",
                "uVar3": "variable2"
            },
            "code": "uint calculate_value_08009908(uint value1, uint value2)\n{\n  undefined4 variable1 = *(undefined4 *)PTR_PTR_DAT_08009914;\n  if (value1 != 0) {\n    if (value2 == 0) {\n      FUN_080091d8();\n      uVar2 = value2;\n    }\n    else {\n      uint variable2 = FUN_0800a154();\n      uint result = value1;\n      if ((variable2 < value2) && (result = FUN_08009270(variable1, value2), result != 0)) {\n        FUN_080091b0(result, value1, value2);\n        FUN_080091d8(variable1, value1);\n      }\n      return result;\n    }\n  }\n  uint result = FUN_08009270(variable1, value2, value2, PTR_PTR_DAT_08009914);\n  return result;\n}",
            "called": [
                "FUN_080091d8",
                "FUN_080091b0",
                "FUN_08009270",
                "FUN_0800a154"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009908",
            "calling": [
                "FUN_08002acc",
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "imported": false,
            "current_name": "calculate_value_08009908"
        },
        "FUN_08008a24": {
            "renaming": {
                "FUN_08008a24": "process_input_08008a24",
                "param_1": "input_index",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "input_buffer",
                "uVar4": "character_index",
                "puVar3": "character_pointer",
                "iVar1": "character_value",
                "uVar2": "output_value",
                "PTR_DAT_08008a64": "input_characters",
                "PTR_DAT_08008a68": "output_bitmask",
                "FUN_08006b28": "process_character",
                "FUN_08006b7c": "get_output_value",
                "FUN_080072d8": "set_output_bit"
            },
            "code": "void process_input_08008a24(uint input_index, undefined4 param_2, undefined4 param_3, undefined *input_buffer)\n{\n  int character_value;\n  undefined4 uVar2;\n  undefined *character_pointer;\n  uint character_index;\n\n  if (input_index < 0x3c) {\n    character_index = (uint)(char)PTR_DAT_08008a64[input_index];\n    character_pointer = PTR_DAT_08008a64;\n  }\n  else {\n    character_index = 0xffffffff;\n    character_pointer = input_buffer;\n  }\n  if ((character_index != 0xffffffff) &&\n     (character_value = process_character(character_index, character_pointer, param_3, input_buffer), character_value != 0)) {\n    uVar2 = get_output_value((character_index << 0x18) >> 0x1c);\n    set_output_bit(uVar2,1 << (character_index & 0xf) & 0xffff,param_2);\n  }\n  return;\n}",
            "called": [
                "FUN_08006b28",
                "FUN_08006b7c",
                "FUN_080072d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a24",
            "calling": [
                "FUN_080088e0",
                "FUN_08002fca",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "process_input_08008a24"
        },
        "FUN_08008abc": {
            "renaming": {
                "FUN_08008abc": "perform_action_08008abc",
                "FUN_0800723c": "execute_task"
            },
            "code": "void perform_action_08008abc(void)\n{\n  execute_task();\n  return;\n}",
            "called": [
                "FUN_0800723c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008abc",
            "calling": [
                "FUN_080022f8"
            ],
            "imported": false,
            "current_name": "perform_action_08008abc"
        },
        "FUN_08002b68": {
            "renaming": {
                "FUN_08002b68": "reverse_bytes_and_send_08002b68",
                "param_1": "buffer",
                "param_2": "buffer_size",
                "param_3": "send_value",
                "param_4": "send_size",
                "param_5": "byte_value",
                "iVar1": "success",
                "uVar2": "byte_value_as_int",
                "uVar3": "send_size_masked",
                "PTR_DAT_08002bf4": "ptr_data_1",
                "*PTR_DAT_08002bf4": "data_1",
                "PTR_DAT_08002bf8": "ptr_data_2",
                "*PTR_DAT_08002bf8": "data_2",
                "PTR_DAT_08002bfc": "ptr_data_3",
                "*PTR_DAT_08002bfc": "data_3",
                "FUN_08002acc": "function_1",
                "FUN_08002a30": "send_bytes",
                "FUN_08002a58": "send_end",
                "FUN_08007f0e": "send_and_receive"
            },
            "code": "uint32_t reverse_bytes_and_send_08002b68(uint32_t *buffer, uint32_t buffer_size, uint32_t send_value, uint32_t send_size, uint8_t byte_value) {\n    uint32_t byte_value_as_int = (uint32_t)byte_value;\n    if (buffer[4] == 0) {\n        return 0;\n    }\n    uint32_t send_size_masked = send_size & 0x7F;\n    send_value = send_value << 1;\n    if (*PTR_DAT_08002bf4 != 0) {\n        if (byte_value_as_int != 0) {\n            send_bytes(buffer, buffer_size);\n            if (3 < byte_value_as_int) {\n                byte_value_as_int = 3;\n            }\n            while (byte_value_as_int > 0) {\n                uint32_t shift_amount = (byte_value_as_int - 1) & 0x1F;\n                uint32_t shifted_value = (send_size >> (shift_amount << 3)) & 0xFF;\n                (**(code **)*buffer)(buffer, shifted_value);\n                byte_value_as_int--;\n            }\n            send_end(buffer);\n        }\n        uint32_t success = send_and_receive(buffer + 5, send_size_masked, *(uint32_t *)PTR_DAT_08002bf4, send_value, send_size);\n        if (success != 0) {\n            send_value = 0;\n        }\n        *PTR_DAT_08002bf8 = 0;\n        *PTR_DAT_08002bfc = (char)send_value;\n        return send_value;\n    }\n    buffer[1] = 1;\n    return 0;\n}",
            "called": [
                "FUN_08007f0e",
                "FUN_08002acc",
                "FUN_08002a58",
                "FUN_08002a30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002b68",
            "calling": [
                "FUN_08002c00"
            ],
            "imported": false,
            "current_name": "reverse_bytes_and_send_08002b68"
        },
        "FUN_080005e0": {
            "renaming": {
                "FUN_080005e0": "set_data_to_zero_and_ff_080005e0",
                "PTR_DAT_080005f0": "data_pointer_1",
                "PTR_DAT_080005f4": "data_pointer_2"
            },
            "code": "void set_data_to_zero_and_ff_080005e0(void)\n{\n  *PTR_DAT_080005f0 = 0;\n  *PTR_DAT_080005f4 = 0xff;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080005e0",
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "set_data_to_zero_and_ff_080005e0"
        },
        "FUN_08008020": {
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "parameter",
                "iVar1": "function_return_value",
                "FUN_08007f78": "get_function_return_value",
                "FUN_080049e0": "call_function"
            },
            "code": "void check_and_call_function_08008020(undefined4 parameter){\n  int function_return_value = get_function_return_value();\n  if(*(char *)(function_return_value + 0x5d) == '\\0'){\n    call_function(parameter);\n  }\n  return;\n}",
            "called": [
                "FUN_080049e0",
                "FUN_08007f78"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008020",
            "calling": [
                "FUN_08004f3c"
            ],
            "imported": false,
            "current_name": "check_and_call_function_08008020"
        },
        "FUN_0800674c": {
            "renaming": {
                "FUN_0800674c": "do_nothing_0800674c"
            },
            "code": "\nvoid do_nothing_0800674c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800674c",
            "calling": [
                "FUN_0800674e"
            ],
            "imported": false,
            "current_name": "do_nothing_0800674c"
        },
        "FUN_08005dac": {
            "renaming": {
                "FUN_08005dac": "update_params_08005dac",
                "param_1": "param_address",
                "param_2": "params",
                "uVar1": "current_value",
                "iVar2": "first_param",
                "iVar3": "third_param"
            },
            "code": "void update_params_08005dac(int param_address, int *params) {\n  uint current_value = *(uint *)(param_address + 0x04);\n  int first_param = *params;\n  int third_param = params[2];\n  *(uint *)(param_address + 0x20) = *(uint *)(param_address + 0x20) & 0xffffefff;\n  if (param_address == DAT_08005df0) {\n    current_value = current_value & 0xffffbfff | params[5] << 6;\n  }\n  *(uint *)(param_address + 0x04) = current_value;\n  *(uint *)(param_address + 0x1c) = *(uint *)(param_address + 0x1c) & 0xffff8cff | first_param << 8;\n  *(int *)(param_address + 0x40) = params[1];\n  *(uint *)(param_address + 0x20) = *(uint *)(param_address + 0x20) & 0xffffdfff | third_param << 0xc;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005dac",
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "imported": false,
            "current_name": "update_params_08005dac"
        },
        "FUN_0800674e": {
            "renaming": {
                "FUN_0800674e": "zero_out_if_null_0800674e",
                "param_1": "ptr_param_1"
            },
            "code": "int zero_out_if_null_0800674e(int *ptr_param_1) {\n  if (ptr_param_1 != NULL) {\n    if (*(char *)((int)ptr_param_1 + 0x39) == '\\0') {\n      *(undefined *)(ptr_param_1 + 0xe) = 0;\n      do_nothing_0800674c();\n    }\n    *(undefined *)((int)ptr_param_1 + 0x39) = 0x24;\n    *(uint *)(*ptr_param_1 + 0xc) &= 0xffffdfff;\n    FUN_08006538(ptr_param_1);\n    *(uint *)(*ptr_param_1 + 0x10) &= 0xffffb7ff;\n    *(uint *)(*ptr_param_1 + 0x14) &= 0xffffffd5;\n    *(uint *)(*ptr_param_1 + 0xc) |= 0x2000;\n    ptr_param_1[0xf] = 0;\n    *(undefined *)((int)ptr_param_1 + 0x39) = 0x20;\n    *(undefined *)((int)ptr_param_1 + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}",
            "called": [
                "FUN_08006538",
                "FUN_0800674c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800674e",
            "calling": [
                "FUN_08008078"
            ],
            "imported": false,
            "current_name": "zero_out_if_null_0800674e"
        },
        "FUN_0800771c": {
            "renaming": {
                "FUN_0800771c": "execute_callback_if_flag_set_0800771c",
                "param_1": "flag",
                "iVar1": "callback_ptr",
                "FUN_08007718": "get_callback_pointer",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void execute_callback_if_flag_set_0800771c(int flag)\n{\n  int callback_ptr;\n  \n  callback_ptr = get_callback_pointer();\n  if ((*(code **)(callback_ptr + 0x4c) != (code *)0x0) && (*(char *)(flag + 0x1c) == '\\x01')) {\n    (**(code **)(callback_ptr + 0x4c))(callback_ptr,0);\n  }\n  return;\n}",
            "called": [
                "FUN_08007718"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800771c",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "execute_callback_if_flag_set_0800771c"
        },
        "FUN_080066e8": {
            "renaming": {
                "FUN_080066e8": "check_parameters_080066e8",
                "param_1": "param_array",
                "param_2": "param_count",
                "param_3": "expected_value",
                "param_4": "comparison_value",
                "param_5": "max_value",
                "iVar1": "result"
            },
            "code": "int check_parameters_080066e8(uint **param_array, uint param_count, bool expected_value, int comparison_value, uint max_value) {\n  int result;\n  while (true) {\n    bool condition = (param_count & ~**param_array) == 0;\n    if (condition != expected_value) {\n      return 0;\n    }\n    if (max_value == 0xffffffff || (max_value != 0 && (FUN_08003760() - comparison_value) <= max_value)) {\n      break;\n    }\n    (*param_array)[3] &= 0xfffffe5f;\n    (*param_array)[5] &= 0xfffffffe;\n    *((uint8_t*)param_array + 0x39) = 0x20;\n    *((uint8_t*)param_array + 0x3a) = 0x20;\n    *(param_array + 0xe) = 0;\n    result = 3;\n  }\n  return result;\n}",
            "called": [
                "FUN_08003760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066e8",
            "calling": [
                "FUN_080067ac"
            ],
            "imported": false,
            "current_name": "check_parameters_080066e8"
        },
        "FUN_08009358": {
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "data_length",
                "iVar1": "index",
                "puVar2": "end_of_data",
                "iVar3": "index"
            },
            "code": "int process_data_08009358(undefined4 arg1, undefined4 arg2, undefined *data, int data_length) {\n  int index = 0;\n  undefined *end_of_data = data + data_length;\n  while (index != 0) {\n    if (data == end_of_data) {\n      return 0;\n    }\n    index = process_byte(arg1, *data, arg2, data_length, index);\n    data++;\n  }\n  return index;\n}",
            "called": [
                "FUN_0800932c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009358",
            "calling": [
                "FUN_0800937c"
            ],
            "imported": false,
            "current_name": "process_data_08009358"
        },
        "FUN_0800270c": {
            "renaming": {
                "FUN_0800270c": "difference_between_pointers_0800270c",
                "PTR_DAT_08002718": "first_pointer",
                "PTR_DAT_0800271c": "second_pointer",
                "*PTR_DAT_08002718": "*first_pointer",
                "*PTR_DAT_0800271c": "*second_pointer"
            },
            "code": "int difference_between_pointers_0800270c(void)\n{\n  uint8_t* PTR_DAT_08002718 = PTR_DAT_08002718;\n  uint8_t* PTR_DAT_0800271c = PTR_DAT_0800271c;\n  uint first_value = (uint)(byte)*PTR_DAT_08002718;\n  uint second_value = (uint)(byte)*PTR_DAT_0800271c;\n  uint difference = first_value - second_value;\n  return difference;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800270c",
            "calling": [
                "FUN_08001c18"
            ],
            "imported": false,
            "current_name": "difference_between_pointers_0800270c"
        },
        "FUN_08003370": {
            "renaming": {
                "FUN_08003370": "set_values_08003370",
                "param_1": "object_address",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "*(undefined4 *)(param_1 + 0x6c)": "*(int *)(object_address + 0x6c)",
                "*(undefined4 *)(param_1 + 0x44)": "*(int *)(object_address + 0x44)"
            },
            "code": "void set_values_08003370(int object_address, int value1, int value2, int value3)\n{\n  *(int *)(object_address + 0x6c) = value2;\n  *(int *)(object_address + 0x44) = value3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003370",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "set_values_08003370"
        },
        "FUN_08007fa0": {
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "process_id",
                "FUN_08007f78": "get_process_id",
                "*(int *)(param_1 + 0xc)": "*(int *)(input_param_1 + 0xc)",
                "*(undefined *)(iVar1 + 0x88)": "*(undefined *)(process_id + 0x88)",
                "*(undefined *)(iVar1 + 0x5c)": "*(undefined *)(process_id + 0x5c)",
                "*(code **)(iVar1 + 100)": "*(code **)(process_id + 100)",
                "process_params_helper": "process_params_helper"
            },
            "code": "void process_params_08007fa0(int param_1, int param_2, int param_3, undefined4 param_4) {\n  int process_id = get_process_id();\n  if (param_3 == *(int *)(param_1 + 0xc)) {\n    if (param_2 == 0) {\n      *(undefined *)(process_id + 0x88) = 0;\n      *(undefined *)(process_id + 0x5c) = 0;\n      if (*(code **)(process_id + 100) != (code *)0x0) {\n        (**(code **)(process_id + 100))();\n      }\n      process_params_08007fa0_helper(param_1, process_id + 0x68, *(undefined *)(process_id + 0x88), 8);\n      return;\n    }\n    *(undefined *)(process_id + 0x5c) = 1;\n    process_params_08007fa0_helper(param_1, process_id + 0x68, 0x20, 8, param_4);\n  }\n  return;\n}",
            "called": [
                "FUN_080048c8",
                "FUN_08007f78",
                "FUN_08004954"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007fa0",
            "calling": [
                "FUN_08004ac2"
            ],
            "imported": false,
            "current_name": "process_params_08007fa0"
        },
        "FUN_08003376": {
            "renaming": {
                "FUN_08003376": "update_data_at_index_if_valid_08003376",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "is_valid_index"
            },
            "code": "void update_data_at_index_if_valid_08003376(uint8_t *data, uint8_t value, uint index) {\n  bool is_valid_index = (index >= *(uint *)(data + 8));\n  if (is_valid_index) {\n    if (*(code **)(data + 100) != (code *)0x0) {\n      *data = 1;\n      (**(code **)(data + 100))(*(uint32_t *)(data + 0x3c));\n      is_valid_index = (index >= *(uint *)(data + 8));\n    }\n  }\n  if (!is_valid_index) {\n    *(uint8_t *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003376",
            "calling": [
                "FUN_080033cc",
                "FUN_08003474"
            ],
            "imported": false,
            "current_name": "update_data_at_index_if_valid_08003376"
        },
        "FUN_08008bf4": {
            "renaming": {
                "FUN_08008bf4": "check_and_call_function_if_not_null_08008bf4",
                "DAT_08008c18": "some_flag",
                "PTR_DAT_08008c1c": "function_pointer"
            },
            "code": "void check_and_call_function_if_not_null_08008bf4(void)\n{\n  if (DAT_08008c18 != 0) {\n    call_function(PTR_DAT_08008c1c);\n  }\n  return;\n}",
            "called": [
                "FUN_08008afa"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf4",
            "calling": [
                "FUN_08008f1c"
            ],
            "imported": false,
            "current_name": "check_and_call_function_if_not_null_08008bf4"
        },
        "FUN_08005430": {
            "renaming": {
                "FUN_08005430": "get_value_at_offset_0x40_08005430",
                "param_1": "base_address"
            },
            "code": "int get_value_at_offset_0x40_08005430(int base_address){\n\treturn *(int *)(base_address + 0x40);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005430",
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "imported": false,
            "current_name": "get_value_at_offset_0x40_08005430"
        },
        "FUN_08002720": {
            "renaming": {
                "FUN_08002720": "get_byte_from_ptr_08002720",
                "bVar1": "current_byte_index",
                "bVar2": "byte_ptr",
                "*PTR_DAT_08002740": "byte_ptr_index",
                "(uint)(byte)*PTR_DAT_08002744": "max_byte_index",
                "*(byte *)(*(int *)PTR_DAT_08002748 + (uint)bVar1)": "*(uint *)(*(int *)PTR_DAT_08002748 + current_byte_index)"
            },
            "code": "uint get_byte_from_ptr_08002720(void)\n{\n  uint current_byte_index = *PTR_DAT_08002740;\n  uint (uint)(byte)*PTR_DAT_08002744 = (uint)(byte)*PTR_DAT_08002744;\n  if (current_byte_index < (uint)(byte)*PTR_DAT_08002744) {\n    uint byte_ptr = *(byte *)(*(int *)PTR_DAT_08002748 + (uint)bVar1);\n    *PTR_DAT_08002740 = current_byte_index + 1;\n    return byte_ptr;\n  }\n  return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002720",
            "calling": [
                "FUN_08001c08"
            ],
            "imported": false,
            "current_name": "get_byte_from_ptr_08002720"
        },
        "FUN_080031ce": {
            "renaming": {
                "FUN_080031ce": "execute_function_on_data_080031ce",
                "param_1": "ptr_function_ptr",
                "param_2": "data_count",
                "param_3": "function_arg",
                "param_4": "function_arg_2",
                "param_5": "data_offset",
                "puVar1": "function_ptr",
                "uVar2": "i",
                "FUN_0800307a": "set_data"
            },
            "code": "void execute_function_on_data_080031ce(void **ptr_function_ptr, uint data_count, int data_offset, uint function_arg)\n{\n    void **function_ptr = (void **)*ptr_function_ptr;\n    if (function_ptr != NULL)\n    {\n        void (*function)(void **, uint, uint, void *) = (void (*)(void **, uint, uint, void *)) *function_ptr;\n        function(function_ptr, 0xf0, function_arg, (void *)*function_ptr, data_count);\n        void (*function2)(void **) = (void (*)(void **)) **(void ***)ptr_function_ptr;\n        function2((void **)*ptr_function_ptr);\n        function2((void **)*ptr_function_ptr, data_offset);\n        function2((void **)*ptr_function_ptr, function_arg);\n        for (uint i = 0; i < data_count; i++)\n        {\n            set_data(ptr_function_ptr, 1, data_offset + i, 0);\n        }\n        function2((void **)*ptr_function_ptr, 0xf7);\n    }\n    return;\n}",
            "called": [
                "FUN_0800307a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080031ce",
            "calling": [
                "FUN_08002df6"
            ],
            "imported": false,
            "current_name": "execute_function_on_data_080031ce"
        },
        "FUN_08009918": {
            "renaming": {
                "FUN_08009918": "read_integer_08009918",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "ptr_data",
                "iVar2": "result"
            },
            "code": "void read_integer_08009918(int *output, undefined4 input) {\n    undefined *ptr_data = PTR_DAT_08009934;\n    *(undefined4 *)PTR_DAT_08009934 = 0;\n    int result = convert_to_integer(input);\n    if ((result == -1) && (*(int *)ptr_data != 0)) {\n        *output = *(int *)ptr_data;\n    }\n    return;\n}",
            "called": [
                "FUN_08008804"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009918",
            "calling": [
                "FUN_08009270"
            ],
            "imported": false,
            "current_name": "read_integer_08009918"
        },
        "FUN_08005434": {
            "renaming": {
                "FUN_08005434": "calculate_iterations_08005434",
                "param_1": "input_param",
                "local_4": "iterations",
                "DAT_0800545c": "CONSTANT_FACTOR",
                "PTR_DAT_08005458": "CONSTANT_POINTER"
            },
            "code": "void calculate_iterations_08005434(int input_param)\n{\n  int iterations = input_param * (uint)((ulonglong)DAT_0800545c * (ulonglong)*(uint *)PTR_DAT_08005458 >> 0x29);\n  do {\n    iterations--;\n  } while (iterations != 0);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005434",
            "calling": [
                "FUN_08005460"
            ],
            "imported": false,
            "current_name": "calculate_iterations_08005434"
        },
        "FUN_08005e2e": {
            "renaming": {
                "FUN_08005e2e": "update_flags_08005e2e",
                "param_1": "array_ptr",
                "puVar1": "data_ptr"
            },
            "code": "void update_flags_08005e2e(uint **array_ptr)\n{\n  uint *data_ptr;\n  *(undefined *)((int)array_ptr + 0x3d) = 2;\n  data_ptr = *array_ptr;\n  if ((data_ptr[8] & 0x1111) == 0) {\n    if ((data_ptr[8] & 0x444) == 0) {\n      *data_ptr = *data_ptr & 0xfffffffe;\n    }\n  }\n  call_subroutine(array_ptr);\n  *(undefined *)((int)array_ptr + 0x3d) = 0;\n  *(undefined *)(array_ptr + 0xf) = 0;\n  return;\n}",
            "called": [
                "FUN_08007110"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e2e",
            "calling": [
                "FUN_080071e4"
            ],
            "imported": false,
            "current_name": "update_flags_08005e2e"
        },
        "FUN_08007736": {
            "renaming": {
                "FUN_08007736": "execute_callback_if_exists_08007736",
                "iVar1": "callback_ptr",
                "FUN_08007718": "get_callback_ptr",
                "PTR_": "PTR_ (unchanged)",
                "DAT_": "DAT_ (unchanged)",
                "code": "callback_function_pointer"
            },
            "code": "void execute_callback_if_exists_08007736(void)\n{\n  int callback_ptr = get_callback_ptr();\n  if (*(code **)(callback_ptr + 0x48) != (code *)0x0) {\n    (**(code **)(callback_ptr + 0x48))();\n  }\n  return;\n}",
            "called": [
                "FUN_08007718"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007736",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "execute_callback_if_exists_08007736"
        },
        "FUN_08002968": {
            "renaming": {
                "FUN_08002968": "initialize_data_08002968",
                "param_1": "data_ptr",
                "param_2": "data_size",
                "iVar1": "size_shifted",
                "iVar2": "data_ptr_offset"
            },
            "code": "void initialize_data_08002968(int data_ptr, uint data_size)\\n{\\n    int var1, var2;\\n\\n    *PTR_DAT_080029ec = 0;\\n    *PTR_DAT_080029f0 = 0;\\n    if (*(int *)PTR_DAT_080029f4 != 0) {\\n        execute_function(*(int *)PTR_DAT_080029f4,0,*PTR_DAT_080029f8);\\n    }\\n    *PTR_DAT_080029fc = 0;\\n    *PTR_DAT_08002a00 = 0;\\n    if (*(int *)PTR_DAT_08002a04 != 0) {\\n        execute_function(*(int *)PTR_DAT_08002a04,0,*PTR_DAT_08002a08);\\n    }\\n    *PTR_DAT_08002a0c = 0;\\n    var1 = (data_size & 0x7f) << 1;\\n    *(char *)(data_ptr + 0x10) = (char)var1;\\n    if (data_size == 0x33) {\\n        *(undefined *)(data_ptr + 0x11) = 1;\\n    }\\n    else {\\n        *(undefined *)(data_ptr + 0x11) = 0;\\n    }\\n    var2 = data_ptr + 0x14;\\n    FUNC_080077b0(var2,DAT_08002a10,0x4000,var1,*(undefined *)(data_ptr + 0x11));\\n    if (*(char *)(data_ptr + 0x11) == \"\\0\") {\\n        FUN_08007f8e(var2,PTR_LAB_08002774_1_08002a14);\\n        FUN_08007f7c(var2,PTR_LAB_08002b00_1_08002a18);\\n    }\\n    return;\\n}",
            "called": [
                "FUN_08007f7c",
                "FUN_08007f8e",
                "FUN_080077b0",
                "FUN_080091c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002968",
            "calling": [
                "FUN_08002a1c"
            ],
            "imported": false,
            "current_name": "initialize_data_08002968"
        },
        "FUN_08004ccc": {
            "renaming": {
                "FUN_08004ccc": "process_data_08004ccc",
                "param_1": "data",
                "puVar1": "ptr1"
            },
            "code": "uint32_t process_data_08004ccc(uint32_t **data)\n{\n  uint32_t *ptr1 = data[11];\n  if (*((char *)data + 61) == '!') {\n    if (*(int16_t *)((char *)data + 42) == 0) {\n      if (((ptr1 == (uint32_t *)0x4) || (ptr1 == (uint32_t *)0x8)) || (ptr1 == (uint32_t *)0xffff0000)) {\n        (*data)[1] &= 0xfffff8ff;\n        **data |= 0x200;\n        data[12] = (uint32_t *)0x0;\n        *((char *)data + 61) = 0x20;\n        if (*((char *)data + 62) == '@') {\n          *((char *)data + 62) = 0;\n          do_nothing_08004b80();\n        }\n        else {\n          *((char *)data + 62) = 0;\n          do_nothing_08004a1e();\n        }\n      }\n      else {\n        (*data)[1] &= 0xfffff8ff;\n        data[12] = (uint32_t *)0x11;\n        *((char *)data + 62) = 0;\n        *((char *)data + 61) = 0x20;\n        do_nothing_08004a1e();\n      }\n    }\n    else {\n      ptr1 = data[9];\n      data[9] = (uint32_t *)((int)ptr1 + 1);\n      (*data)[4] = (uint32_t)(*(uint8_t *)ptr1);\n      *(int16_t *)((char *)data + 42) -= 1;\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_08004b80",
                "FUN_08004a1e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004ccc",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "process_data_08004ccc"
        },
        "FUN_080042d4": {
            "renaming": {
                "FUN_080042d4": "is_param2_included_in_param1_080042d4",
                "param_1": "ptr_param1",
                "param_2": "param2",
                "*(uint *)(param_1 + 8)": "param1_value"
            },
            "code": "int is_param2_included_in_param1_080042d4(uint32_t* ptr_param1, uint32_t param2)\n{\n    uint32_t* ptr_param1_offset = ptr_param1 + 2;\n    uint32_t param1_value = *ptr_param1_offset;\n    if ((param2 & param1_value) == 0)\n    {\n        return 0;\n    }\n    return 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080042d4",
            "calling": [
                "FUN_080072f0"
            ],
            "imported": false,
            "current_name": "is_param2_included_in_param1_080042d4"
        },
        "FUN_0800542a": {
            "renaming": {
                "FUN_0800542a": "get_value_from_offset_0800542a",
                "param_1": "offset"
            },
            "code": "undefined get_value_from_offset_0800542a(int offset)\n{\n  return *(undefined *)(offset + 0x3d);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800542a",
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "imported": false,
            "current_name": "get_value_from_offset_0800542a"
        },
        "FUN_0800457c": {
            "renaming": {
                "FUN_0800457c": "increment_value_at_address_0800457c",
                "param_1": "ptr_param_1",
                "pbVar1": "ptr_byte"
            },
            "code": "int increment_value_at_address_0800457c(int *ptr_param_1)\n{\n  if (*(short *)((int)ptr_param_1 + 0x2a) != 0) {\n    byte *ptr_byte = (byte *)ptr_param_1[9];\n    ptr_param_1[9] = (int)(ptr_byte + 1);\n    *(uint *)(*ptr_param_1 + 0x10) = (uint)*ptr_byte;\n    *(short *)((int)ptr_param_1 + 0x2a) = *(short *)((int)ptr_param_1 + 0x2a) - 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800457c",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "increment_value_at_address_0800457c"
        },
        "FUN_080091c6": {
            "renaming": {
                "FUN_080091c6": "fill_array_with_value_080091c6",
                "param_1": "array",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end",
                "*param_1": "*array"
            },
            "code": "void fill_array_with_value_080091c6(void *array, int value, int size) {\n  void *end = array + size;\n  for (; array != end; array++) {\n    *array = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091c6",
            "calling": [
                "FUN_08009cdc",
                "FUN_08009d24",
                "FUN_08007118",
                "FUN_08002a58",
                "FUN_08002968",
                "FUN_08006d80",
                "FUN_08009db0"
            ],
            "imported": false,
            "current_name": "fill_array_with_value_080091c6"
        },
        "FUN_0800a07a": {
            "renaming": {
                "check_value_and_set_flag": "check_value_and_set_flag",
                "param_1": "value",
                "param_2": "flag_ptr",
                "iVar1": "result",
                "uVar2": "flag",
                "bVar3": "is_result_negative",
                "FUN_0800a07a": "check_value_and_set_flag_0800a07a"
            },
            "code": "void check_value_and_set_flag_0800a07a(int value, int *flag_ptr) {\n  int result = get_result(value, *(short *)(flag_ptr + 0xe));\n  bool is_result_negative = result == -1;\n  ushort flag = *(ushort *)(flag_ptr + 0xc);\n\n  if (is_result_negative) {\n    flag &= 0xefff;\n  }\n  else {\n    *(int *)(flag_ptr + 0x54) = result;\n    flag |= 0x1000;\n  }\n  *(ushort *)(flag_ptr + 0xc) = flag;\n}\n",
            "called": [
                "FUN_0800a130"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a07a",
            "calling": [],
            "imported": false,
            "current_name": "check_value_and_set_flag_0800a07a"
        },
        "FUN_08003a20": {
            "renaming": {
                "FUN_08003a20": "set_flag_if_not_set_08003a20",
                "param_1": "flag_array",
                "param_2": "flag_bit",
                "iVar1": "current_value",
                "iVar3": "flag_array_ptr",
                "local_14": "i",
                "DAT_08003a9c": "flag_constant",
                "PTR_DAT_08003a98": "flag_pointer",
                "uVar2": "return_value"
            },
            "code": "int set_flag_if_not_set_08003a20(int *flag_array, int flag_bit)\n{\n  int flag_array_ptr = *flag_array;\n  if ((*(uint *)(flag_array_ptr + 8) & 1) == 0) {\n    *(uint *)(flag_array_ptr + 8) = *(uint *)(flag_array_ptr + 8) | 1;\n    for (uint i = 0; i < ((ulonglong)DAT_08003a9c * (ulonglong)*(uint *)PTR_DAT_08003a98) >> 0x32; i++);\n    int initial_value = function_08003760(flag_array, flag_bit, (int)((ulonglong)DAT_08003a9c * (ulonglong)*(uint *)PTR_DAT_08003a98));\n    do {\n      if ((*(uint *)(*flag_array + 8) & 1) != 0) {\n        return 0;\n      }\n      int current_value = function_08003760(flag_array, flag_bit, (int)((ulonglong)DAT_08003a9c * (ulonglong)*(uint *)PTR_DAT_08003a98));\n    } while ((uint)(current_value - initial_value) < 3);\n    flag_array[10] |= 0x10;\n    flag_array[0xb] |= 1;\n    *(undefined *)(flag_array + 9) = 0;\n    return 1;\n  }\n  else {\n    return 0;\n  }\n}",
            "called": [
                "FUN_08003760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a20",
            "calling": [
                "FUN_08003aa0",
                "FUN_08003e20"
            ],
            "imported": false,
            "current_name": "set_flag_if_not_set_08003a20"
        },
        "FUN_080064b0": {
            "renaming": {
                "FUN_080064b0": "update_flags_and_set_space_character_080064b0",
                "param_1": "memory_address",
                "*param_1": "*memory_address",
                "*(uint *)(*param_1 + 0xc)": "*address_1",
                "*(uint *)(*param_1 + 0x14)": "*address_2"
            },
            "code": "void update_flags_and_set_space_character_080064b0(int *memory_address) {\n  uint *address_1 = (uint *)(*memory_address + 0xc);\n  uint *address_2 = (uint *)(*memory_address + 0x14);\n  *address_1 &= 0xfffffedf;\n  *address_2 &= 0xfffffffe;\n  *(undefined *)((int)memory_address + 0x3a) = 0x20;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064b0",
            "calling": [
                "FUN_080069ec"
            ],
            "imported": false,
            "current_name": "update_flags_and_set_space_character_080064b0"
        },
        "FUN_08009cdc": {
            "renaming": {
                "FUN_08009cdc": "initialize_data_08009cdc",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "unused_variable",
                "DAT_08009d14": "DAT_08009d14",
                "PTR_FUN_0800a042_1_08009d18": "PTR_FUN_0800a042_1_08009d18",
                "PTR_FUN_0800a07a_1_08009d1c": "PTR_FUN_0800a07a_1_08009d1c",
                "PTR_LAB_0800a09e_1_08009d20": "PTR_LAB_0800a09e_1_08009d20"
            },
            "code": "void initialize_data_08009cdc(undefined4 *data, undefined2 value1, undefined2 value2) {\n    *data = 0;\n    data[1] = 0;\n    data[2] = 0;\n    *(undefined2 *)(data + 3) = value1;\n    data[25] = 0;\n    *(undefined2 *)((int)data + 0xe) = value2;\n    data[4] = 0;\n    data[5] = 0;\n    data[6] = 0;\n    initialize_array(data + 23, 0, 8);\n    data[8] = data;\n    data[9] = DAT_08009d14;\n    data[10] = PTR_FUN_0800a042_1_08009d18;\n    data[11] = PTR_check_value_and_set_flag_1_08009d1c;\n    data[12] = PTR_LAB_0800a09e_1_08009d20;\n}",
            "called": [
                "FUN_080091c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009cdc",
            "calling": [
                "FUN_08009d50"
            ],
            "imported": false,
            "current_name": "initialize_data_08009cdc"
        },
        "FUN_08002a58": {
            "renaming": {
                "FUN_08002a58": "check_string_08002a58",
                "param_1": "str_address",
                "iVar1": "check_result",
                "uVar2": "result",
                "PTR_DAT_08002ab0": "INPUT_PTR_1",
                "PTR_DAT_08002aac": "INPUT_PTR_2",
                "PTR_DAT_08002aa8": "INPUT_PTR_3",
                "PTR_DAT_08002ab4": "INPUT_PTR_4",
                "PTR_DAT_08002ab8": "INPUT_PTR_5",
                "PTR_DAT_08002abc": "INPUT_PTR_6"
            },
            "code": "int check_string_08002a58(int str_address) {\n  int result;\n  if (*(char *)(str_address + 0x11) == '\\0') {\n    result = 4;\n  }\n  else {\n    int check_result = check_input(str_address + 0x14, *PTR_DAT_08002ab0, *(int *)PTR_DAT_08002aac, *PTR_DAT_08002aa8);\n    if (check_result == 0) {\n      result = 0;\n    }\n    else if (check_result == 1) {\n      result = 1;\n    }\n    else {\n      result = 4;\n    }\n    if (*(int *)PTR_DAT_08002aac != 0) {\n      handle_input(*(int *)PTR_DAT_08002aac, 0, *PTR_DAT_08002ab4);\n    }\n    *PTR_DAT_08002ab8 = 0;\n    *PTR_DAT_08002aa8 = 0;\n    *PTR_DAT_08002abc = 0;\n  }\n  return result;\n}",
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a58",
            "calling": [
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002b68"
            ],
            "imported": false,
            "current_name": "check_string_08002a58"
        },
        "FUN_080026b0": {
            "renaming": {
                "FUN_080026b0": "limit_param_value_080026b0",
                "param_1": "param1",
                "param_2": "param2",
                "max_limit": "max_limit",
                "min_limit": "min_limit",
                "max_value": "max_value",
                "min_value": "min_value"
            },
            "code": "void limit_param_value_080026b0(int param1, int param2) {\n    int max_limit = 0xb4;\n    int min_limit = 0;\n    int max_value = 0x88 - *(char *)(param1 + 1);\n    int min_value = 600 - *(char *)(param1 + 2);\n\n    if (param2 < 0x220) {\n        if (param2 < min_limit) {\n            param2 = min_limit;\n        }\n        else if (param2 > max_limit) {\n            param2 = max_limit;\n        }\n        param2 = FUN_08008ef4(param2, 0, max_limit, max_value * 4, min_value * 4);\n    }\n    FUN_0800267c(param1, param2);\n}\n",
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080026b0",
            "calling": [
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "limit_param_value_080026b0"
        },
        "FUN_08006092": {
            "renaming": {
                "FUN_08006092": "check_and_update_data_08006092",
                "param_1": "data_ptr",
                "*(char *)((int)param_1 + 0x3d)": "*(char *)((int)data_ptr + 0x3d)",
                "*(undefined *)(param_1 + 0xf)": "*(undefined *)(data_ptr + 0xf)",
                "FUNC_08006e68": "call_helper_function",
                "FUN_08005fe8": "update_data"
            },
            "code": "int check_and_update_data_08006092(undefined4 *data_ptr) {\n    if (data_ptr != NULL) {\n        if (*(char *)((int)data_ptr + 0x3d) == '\\0') {\n            *(undefined *)(data_ptr + 0xf) = 0;\n            FUNC_08006e68();\n        }\n        *(undefined *)((int)data_ptr + 0x3d) = 2;\n        update_data(*data_ptr, data_ptr + 1);\n        *(undefined *)((int)data_ptr + 0x3d) = 1;\n        return 0;\n    }\n    return 1;\n}",
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006092",
            "calling": [
                "FUN_08007118"
            ],
            "imported": false,
            "current_name": "check_and_update_data_08006092"
        },
        "FUN_08008d8c": {
            "renaming": {
                "FUN_08008d8c": "check_param_08008d8c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "PTR_DAT_08008dac": "PTR_DAT_08008dac",
                "DAT_08008da8": "DAT_08008da8"
            },
            "code": "void check_param_08008d8c(int param1, int param2, undefined4 param3, undefined4 param4)\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (param2 == 0xffff) {\n    call_fun(PTR_DAT_08008dac, DAT_08008da8, param3, 0xffff, param4);\n  }\n  return;\n}",
            "called": [
                "FUN_08008d30"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008d8c",
            "calling": [],
            "imported": false,
            "current_name": "check_param_08008d8c"
        },
        "FUN_080004d4": {
            "renaming": {
                "FUN_080004d4": "process_data_080004d4",
                "param_1": "data",
                "param_2": "flag",
                "iVar1": "i",
                "puVar2": "ptr",
                "FUN_08002580": "perform_operation"
            },
            "code": "void process_data_080004d4(int data, int flag){\n    if(data == 1){\n        if(flag == 0xffff){\n            unsigned char *ptr = PTR_DAT_080004fc;\n            for(int i = 11; i >= 0; i--){\n                perform_operation(ptr);\n                ptr += 3;\n            }\n        }\n    }\n}",
            "called": [
                "FUN_08002580"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004d4",
            "calling": [],
            "imported": false,
            "current_name": "process_data_080004d4"
        },
        "FUN_080005f8": {
            "renaming": {
                "FUN_080005f8": "FUNC_080005f8"
            },
            "code": "\nvoid FUNC_080005f8(uint param_1,int param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  char cVar3;\n  bool bVar4;\n  uint uVar5;\n  \n  iVar2 = FUN_08002fa0(PTR_DAT_08000874,param_1);\n  if (iVar2 != 0x7f) {\n    iVar2 = FUN_08002fa0(PTR_DAT_08000874,param_1);\n    if (iVar2 == 6) {\n      cVar3 = *PTR_DAT_0800087c;\n      if (cVar3 == '\\0') {\n        cVar3 = '\\0';\n      }\n      else if (param_2 == 6) {\n        cVar3 = '\\0';\n      }\n    }\n    else {\n      cVar3 = '\\0';\n    }\n    if (cVar3 != '\\0') {\n      FUN_080005e0();\n    }\n    if (param_1 < 0x3c) {\n      if (PTR_DAT_08000878[param_1] == -1) {\n        bVar4 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac();\n        if (iVar2 == 0) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000878[param_1]);\n          if (iVar2 == 1) {\n            bVar4 = false;\n          }\n          else if (param_2 == 4) {\n            bVar4 = false;\n          }\n          else {\n            bVar4 = true;\n          }\n        }\n      }\n    }\n    else {\n      bVar4 = false;\n    }\n    if (bVar4) {\n      if ((byte)PTR_DAT_08000880[param_1] < 0xc) {\n        iVar2 = FUN_080026f8(PTR_DAT_08000884 + (uint)(byte)PTR_DAT_08000880[param_1] * 3);\n      }\n      else {\n        iVar2 = 0;\n      }\n      if (iVar2 != 0) {\n        FUN_08000588(param_1);\n      }\n    }\n    uVar5 = param_1 - 0x2e & 0xff;\n    if (uVar5 < 0xe) {\n      if (param_1 < 0x3c) {\n        iVar2 = (int)(char)PTR_DAT_08000878[param_1];\n      }\n      else {\n        iVar2 = -1;\n      }\n      iVar2 = FUN_080036ac(iVar2);\n      if (iVar2 == 0) {\n        bVar4 = false;\n      }\n      else {\n        if (param_1 < 0x3c) {\n          iVar2 = (int)(char)PTR_DAT_08000878[param_1];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 1) {\n          bVar4 = false;\n        }\n        else {\n          bVar4 = true;\n        }\n      }\n    }\n    else {\n      bVar4 = false;\n    }\n    if (bVar4) {\n      FUN_08000488(uVar5,param_2 == 2);\n    }\n    if (param_1 < 0x3c) {\n      if (PTR_DAT_08000878[param_1] == -1) {\n        bVar4 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac();\n        if (iVar2 == 0) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000878[param_1]);\n          if (iVar2 == 1) {\n            bVar4 = false;\n          }\n          else {\n            bVar4 = true;\n          }\n        }\n      }\n    }\n    else {\n      bVar4 = false;\n    }\n    if (bVar4) {\n      if ((param_2 == 0) || (param_2 == 0xb)) {\n        PTR_DAT_08000888[param_1 >> 3] = PTR_DAT_08000888[param_1 >> 3] | (byte)(1 << (param_1 & 7))\n        ;\n      }\n      else {\n        PTR_DAT_08000888[param_1 >> 3] =\n             PTR_DAT_08000888[param_1 >> 3] & ~(byte)(1 << (param_1 & 7));\n      }\n    }\n    FUN_08002fc2(PTR_DAT_08000874,param_1,0);\n    switch(param_2) {\n    case 0:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000878[param_1] == -1) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            bVar4 = false;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000878[param_1]);\n            if (iVar2 == 1) {\n              bVar4 = false;\n            }\n            else {\n              bVar4 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar4 = false;\n      }\n      if (bVar4) {\n        FUN_08008990(param_1,0);\n        FUN_08002fa8(PTR_DAT_08000874,param_1,0);\n        return;\n      }\n      break;\n    case 1:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000a48[param_1] == -1) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            bVar4 = false;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000a48[param_1]);\n            if (iVar2 == 1) {\n              bVar4 = false;\n            }\n            else {\n              bVar4 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar4 = false;\n      }\n      if (bVar4) {\n        iVar2 = FUN_08002fa0(PTR_DAT_08000a44,param_1);\n        if (iVar2 == 3) {\n          FUN_08008a24(param_1,0);\n        }\n        FUN_08008990(param_1,1);\n        FUN_08002fa8(PTR_DAT_08000a44,param_1,1);\n        return;\n      }\n      break;\n    case 2:\n      if (uVar5 < 0xe) {\n        if (param_1 < 0x3c) {\n          iVar2 = (int)(char)PTR_DAT_08000878[param_1];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 0) {\n          bVar4 = false;\n        }\n        else {\n          if (param_1 < 0x3c) {\n            iVar2 = (int)(char)PTR_DAT_08000878[param_1];\n          }\n          else {\n            iVar2 = -1;\n          }\n          iVar2 = FUN_080036ac(iVar2);\n          if (iVar2 == 1) {\n            bVar4 = false;\n          }\n          else {\n            bVar4 = true;\n          }\n        }\n      }\n      else {\n        bVar4 = false;\n      }\n      if (bVar4) {\n        if (param_1 < 0x3c) {\n          if (PTR_DAT_08000878[param_1] == -1) {\n            bVar4 = false;\n          }\n          else {\n            iVar2 = FUN_080036ac();\n            if (iVar2 == 0) {\n              bVar4 = false;\n            }\n            else {\n              iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000878[param_1]);\n              if (iVar2 == 1) {\n                bVar4 = false;\n              }\n            }\n          }\n        }\n        else {\n          bVar4 = false;\n        }\n        if (bVar4) {\n          FUN_08008990(param_1,0);\n        }\n        FUN_08002fa8(PTR_DAT_08000874,param_1,2);\n        return;\n      }\n      break;\n    case 3:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000a48[param_1] == -1) {\n          iVar2 = 0;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            iVar2 = 0;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000a48[param_1]);\n            if (iVar2 == 1) {\n              iVar2 = 0;\n            }\n            else {\n              iVar2 = FUN_0800738a((int)(char)PTR_DAT_08000a48[param_1],PTR_DAT_08000a4c);\n            }\n          }\n        }\n      }\n      else {\n        iVar2 = 0;\n      }\n      if (iVar2 != 0) {\n        FUN_08008990(param_1,1);\n        FUN_080088e0(param_1,0);\n        FUN_08002fa8(PTR_DAT_08000a44,param_1,3);\n        return;\n      }\n      break;\n    case 4:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000a48[param_1] == -1) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            bVar4 = false;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000a48[param_1]);\n            if (iVar2 == 1) {\n              bVar4 = false;\n            }\n            else {\n              bVar4 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar4 = false;\n      }\n      if (bVar4) {\n        FUN_08002fa8(PTR_DAT_08000a44,param_1,4);\n        if (((byte)PTR_DAT_08000a50[param_1] != 0xff) &&\n           (iVar2 = FUN_080026f8(PTR_DAT_08000a54 + (uint)(byte)PTR_DAT_08000a50[param_1] * 3),\n           iVar2 != 0)) {\n          bVar4 = false;\n        }\n        if (bVar4) {\n          FUN_08000500(param_1,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(PTR_DAT_08000a44,PTR_s_Unknown_pin_mode_08000a60);\n      break;\n    case 6:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000a48[param_1] == -1) {\n          iVar2 = 0;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            iVar2 = 0;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000a48[param_1]);\n            if (iVar2 == 1) {\n              iVar2 = 0;\n            }\n            else {\n              iVar2 = FUN_0800738a((int)(char)PTR_DAT_08000a48[param_1],PTR_DAT_08000a58);\n              if (iVar2 == 0) {\n                iVar2 = FUN_0800738a((int)(char)PTR_DAT_08000a48[param_1],PTR_DAT_08000a5c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        iVar2 = 0;\n      }\n      if (iVar2 != 0) {\n        FUN_08002fa8(PTR_DAT_08000a44,param_1,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (param_1 < 0x3c) {\n        if (PTR_DAT_08000878[param_1] == -1) {\n          bVar4 = false;\n        }\n        else {\n          iVar2 = FUN_080036ac();\n          if (iVar2 == 0) {\n            bVar4 = false;\n          }\n          else {\n            iVar2 = FUN_080036ac((int)(char)PTR_DAT_08000878[param_1]);\n            if (iVar2 == 1) {\n              bVar4 = false;\n            }\n            else {\n              bVar4 = true;\n            }\n          }\n        }\n      }\n      else {\n        bVar4 = false;\n      }\n      if (bVar4) {\n        FUN_08008990(param_1,2);\n        puVar1 = PTR_DAT_08000a44;\n        FUN_08002fa8(PTR_DAT_08000a44,param_1,0xb);\n        FUN_08002fc2(puVar1,param_1,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08000500",
                "FUN_08002fa0",
                "FUN_08002fa8",
                "FUN_08002f14",
                "FUN_08000488",
                "FUN_08008a24",
                "FUN_08002fc2",
                "FUN_080036ac",
                "FUN_080088e0",
                "FUN_0800738a",
                "FUN_080026f8",
                "FUN_08008990",
                "FUN_08000588",
                "FUN_080005e0"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005f8",
            "calling": [
                "FUN_08000aec",
                "FUN_08001cd0",
                "FUN_08000a64"
            ],
            "imported": false,
            "current_name": "FUNC_080005f8"
        },
        "FUN_08009124": {
            "renaming": {
                "FUN_08009124": "call_func_with_params_and_stack_vars_08009124",
                "param_1": "arg_1",
                "param_2": "arg_2",
                "param_3": "stack_var_1",
                "param_4": "stack_var_2",
                "uStack_8": "stack_var_3",
                "uStack_4": "stack_var_4"
            },
            "code": "void call_func_with_params_and_stack_vars_08009124(undefined4 param_1, undefined4 param_2, undefined4 stack_var_1, undefined4 stack_var_2)\n{\n    undefined4 stack_var_3 = stack_var_1;\n    undefined4 stack_var_4 = stack_var_2;\n    FUNC_0800937c(*(undefined4 *)PTR_PTR_DAT_08009144, param_1, param_2, &stack_var_3, param_1, &stack_var_3);\n    return;\n}",
            "called": [
                "FUN_0800937c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009124",
            "calling": [
                "FUN_080090cc"
            ],
            "imported": false,
            "current_name": "call_func_with_params_and_stack_vars_08009124"
        },
        "FUN_08002fa0": {
            "renaming": {
                "FUN_08002fa0": "get_value_at_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "code": "undefined get_value_at_offset_08002fa0(int offset, int base_address)\n{\n    return *(undefined *)(base_address + offset + 0xcc);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fa0",
            "calling": [
                "FUN_080022f8",
                "FUN_08001cd0",
                "FUN_080005f8",
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "get_value_at_offset_08002fa0"
        },
        "FUN_080064ae": {
            "renaming": {
                "FUN_080064ae": "do_nothing_080064ae"
            },
            "code": "\nvoid do_nothing_080064ae(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ae",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "do_nothing_080064ae"
        },
        "FUN_0800a424": {
            "renaming": {
                "FUN_0800a424": "do_nothing_0800a424"
            },
            "code": "\nvoid do_nothing_0800a424(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a424",
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800a424"
        },
        "FUN_08003a1c": {
            "renaming": {
                "FUN_08003a1c": "get_value_from_offset_08003a1c",
                "param_1": "offset"
            },
            "code": "int get_value_from_offset_08003a1c(int offset)\n{\n    return *(int *)(offset + 0x28);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a1c",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "get_value_from_offset_08003a1c"
        },
        "FUN_080064ac": {
            "renaming": {
                "FUN_080064ac": "do_nothing_080064ac"
            },
            "code": "\nvoid do_nothing_080064ac(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ac",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "do_nothing_080064ac"
        },
        "FUN_08005cb4": {
            "renaming": {
                "FUN_08005cb4": "process_flags_08005cb4",
                "param_1": "flags_ptr",
                "**param_1": "flags",
                "(*param_1)[1]": "second_flag",
                "FUN_080073c0": "execute_flagged_function",
                "DAT_08005ce8": "data_ptr",
                "*(undefined4 *)(DAT_08005ce8 + 0x14)": "*data_ptr",
                "(int)param_1 + 0x11": "bool_ptr",
                "*(undefined *)((int)param_1 + 0x11)": "*bool_ptr"
            },
            "code": "void process_flags_08005cb4(uint **flags_ptr)\n{\n    uint flags = **flags_ptr;\n    uint second_flag = (*flags_ptr)[1];\n    if ((flags & 2) && (second_flag & 2)) {\n        execute_flagged_function();\n        (*flags_ptr)[1] = 0xfffffffd;\n    }\n    uint *(undefined4 *)(DAT_08005ce8 + 0x14) = (uint *)(DAT_08005ce8 + 0x14);\n    *(undefined4 *)(DAT_08005ce8 + 0x14) = 0x20000;\n    char *bool_ptr = (char *)flags_ptr + 0x11;\n    *bool_ptr = 1;\n    return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005cb4",
            "calling": [],
            "imported": false,
            "current_name": "process_flags_08005cb4"
        },
        "FUN_08007744": {
            "renaming": {
                "FUN_08007744": "get_value_from_ptr_08007744",
                "param_1": "ptr_address",
                "*(*(int *)(param_1 + 4) + 0x24)": "*(ptr + 9)"
            },
            "code": "int get_value_from_ptr_08007744(int ptr_address) {\n    int* ptr = *(int*)(ptr_address + 4);\n    int value = *(ptr + 9);\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007744",
            "calling": [],
            "imported": false,
            "current_name": "get_value_from_ptr_08007744"
        },
        "FUN_08006538": {
            "renaming": {
                "FUN_08006538": "calculate_values_08006538",
                "param_1": "values",
                "uVar1": "multiplier",
                "uVar2": "constant1",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3",
                "iVar6": "value4",
                "iVar7": "value5",
                "iVar8": "value6",
                "iVar9": "value7",
                "iVar10": "value8",
                "iVar11": "value9",
                "iVar12": "base_address"
            },
            "code": "void calculate_values_08006538(int *values)\n{\n  ulonglong multiplier;\n  uint constant1;\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  int base_address;\n  \n  *(uint *)(values[0] + 0x10) = *(uint *)(values[0] + 0x10) & 0xffffcfff | values[3];\n  *(uint *)(values[0] + 0xc) = values[2] | values[4] | values[5] | *(uint *)(values[0] + 0xc) & 0xffffe9f3;\n  *(uint *)(values[0] + 0x14) = *(uint *)(values[0] + 0x14) & 0xfffffcff | values[6];\n  base_address = values[0];\n  if (base_address != PTR_DAT_080066e0) {\n    value1 = FUN_08005a28();\n    constant1 = DAT_080066e4;\n    value5 = values[1];\n    multiplier = (ulonglong)DAT_080066e4;\n    value2 = FUN_08005a28();\n    value6 = values[1];\n    value3 = FUN_08005a28();\n    value7 = values[1];\n    value4 = FUN_08005a28();\n    value8 = values[1];\n    value9 = FUN_08005a28();\n    *(uint *)(base_address + 8) = ((uint)((int)((ulonglong)constant1 * (ulonglong)(((uint)(value4 * 0x19) / (uint)(value8 << 2) + (uint)((ulonglong)constant1 * ((ulonglong)(uint)(value9 * 0x19) / (ulonglong)(uint)(values[1] << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x20) << 0x17) >> 0x1c) + ((uint)((ulonglong)constant1 * (ulonglong)(((uint)(value2 * 0x19) / (uint)(value6 << 2) + (uint)((ulonglong)constant1 * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value7 << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf0) + (uint)(multiplier * ((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value5 << 2)) >> 0x25) * 0x10;\n    return;\n  }\n  value1 = FUN_08005a48();\n  constant1 = DAT_080066e4;\n  value5 = values[1];\n  multiplier = (ulonglong)DAT_080066e4;\n  value2 = FUN_08005a48();\n  value6 = values[1];\n  value3 = FUN_08005a48();\n  value7 = values[1];\n  value4 = FUN_08005a48();\n  value8 = values[1];\n  value9 = FUN_08005a48();\n  *(uint *)(base_address + 8) = ((uint)((int)((ulonglong)constant1 * (ulonglong)(((uint)(value4 * 0x19) / (uint)(value8 << 2) + (uint)((ulonglong)constant1 * ((ulonglong)(uint)(value9 * 0x19) / (ulonglong)(uint)(values[1] << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x20) << 0x17) >> 0x1c) + ((uint)((ulonglong)constant1 * (ulonglong)(((uint)(value2 * 0x19) / (uint)(value6 << 2) + (uint)((ulonglong)constant1 * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value7 << 2)) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf0) + (uint)(multiplier * ((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value5 << 2)) >> 0x25) * 0x10;\n  return;\n}\n",
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006538",
            "calling": [
                "FUN_0800674e"
            ],
            "imported": false,
            "current_name": "calculate_values_08006538"
        },
        "FUN_080042e2": {
            "renaming": {
                "FUN_080042e2": "set_value_at_offset_080042e2",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "shift_factor",
                "*(int *)(param_1 + 0x10)": "address_to_set"
            },
            "code": "void set_value_at_offset_080042e2(int base_address, int value, int shift_factor)\n{\n    int* address_to_set = (int*)(base_address + 0x10);\n    if (shift_factor == 0) {\n        *address_to_set = value << 0x10;\n    }\n    else {\n        *address_to_set = value;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080042e2",
            "calling": [
                "FUN_080072d8"
            ],
            "imported": false,
            "current_name": "set_value_at_offset_080042e2"
        },
        "FUN_08002fa8": {
            "renaming": {
                "FUN_08002fa8": "update_memory_08002fa8",
                "param_1": "base_address",
                "param_2": "offset",
                "param_3": "new_value",
                "*(char *)(param_1 + param_2 + 0xcc)": "*memory_location",
                "*(undefined *)(param_1 + param_2 + 0xcc)": "*memory_location"
            },
            "code": "void update_memory_08002fa8(int base_address, int offset, undefined new_value)\n{\n    char* memory_location = (char*)(base_address + offset + 0xcc);\n    if (*memory_location != '\\x7f')\n    {\n        *memory_location = new_value;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fa8",
            "calling": [
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "update_memory_08002fa8"
        },
        "FUN_0800325a": {
            "renaming": {
                "FUN_0800325a": "execute_function_with_params_0800325a",
                "param_1": "function_ptr",
                "param_2": "second_param",
                "param_3": "num_params",
                "param_4": "starting_param_index",
                "puVar1": "ptr_to_function_ptr",
                "uVar2": "i"
            },
            "code": "void execute_function_with_params_0800325a(undefined4 *function_ptr, undefined4 second_param, uint num_params, int starting_param_index) {\n  undefined4 *ptr_to_function_ptr = (undefined4 *)*function_ptr;\n  if (ptr_to_function_ptr != (undefined4 *)0x0) {\n    (**(code **)*ptr_to_function_ptr)(ptr_to_function_ptr,0xf0);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,second_param);\n    for (uint i = 0; i < num_params; i++) {\n      execute_function_with_params_0800325a(function_ptr, 1, starting_param_index + i, 0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}",
            "called": [
                "FUN_0800307a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800325a",
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "imported": false,
            "current_name": "execute_function_with_params_0800325a"
        },
        "FUN_080091d8": {
            "renaming": {
                "FUN_080091d8": "insert_node_080091d8",
                "param_1": "error_code",
                "param_2": "key",
                "param_3": "unused_param",
                "param_4": "unused_param_2",
                "puVar1": "ptr_to_root",
                "extraout_r1": "unused_ptr",
                "ppiVar2": "previous_node",
                "ppiVar3": "next_node",
                "piVar4": "node_data",
                "ppiVar5": "current_node",
                "ppiVar6": "temp_node",
                "ppiVar7": "new_node"
            },
            "code": "void insert_node_080091d8(int **root, int key){\n  if (key == 0) {\n    return;\n  }\n  int **current_node = root;\n  if (**root < 0) {\n    current_node = (int **)((int)current_node + **root);\n  }\n  do_nothing_08009f48();\n  int **previous_node = NULL;\n  while (current_node != NULL) {\n    int **next_node = (int **)current_node[1];\n    if (next_node == NULL || next_node > current_node) {\n      if (current_node < (int **)((int)next_node + **next_node)) {\n        *param_1 = 0xc;\n        return;\n      }\n      int **new_node = (int **)((int)current_node + **current_node);\n      if (next_node == new_node) {\n        int *node_data = *next_node;\n        int **new_next_node = (int **)next_node[1];\n        new_node = (int **)((int)new_node + node_data);\n        *current_node = (int *)new_node;\n        if (new_next_node == (int **)((int)current_node + (int)new_node)) {\n          int *node_data_2 = *new_next_node;\n          int **new_next_node_2 = (int **)new_next_node[1];\n          new_node = (int **)((int)new_node + node_data_2);\n          *current_node = (int *)new_node;\n          current_node[1] = (int *)new_next_node_2;\n        }\n      }\n      else {\n        *current_node = (int *)next_node;\n        new_node[1] = (int *)next_node;\n      }\n      break;\n    }\n    previous_node = current_node;\n    current_node = next_node;\n  }\n  do_nothing_08009f4a(param_1,previous_node,current_node,key);\n}",
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091d8",
            "calling": [
                "FUN_08009b5c",
                "FUN_080091a0",
                "FUN_08009a80",
                "FUN_08009908"
            ],
            "imported": false,
            "current_name": "insert_node_080091d8"
        },
        "FUN_0800688e": {
            "renaming": {
                "FUN_0800688e": "check_input_validity_0800688e",
                "param_1": "input_array",
                "param_2": "array_size",
                "param_3": "value",
                "*(char *)((int)param_1 + 0x39)": "input_array[9]",
                "*(char *)(param_1 + 0xe)": "input_array[14]",
                "param_1[8]": "input_array[8]",
                "*(short *)(param_1 + 9)": "input_array[9]",
                "*(short *)((int)param_1 + 0x26)": "input_array[11]",
                "param_1[0xf]": "input_array[15]",
                "*(undefined *)((int)param_1 + 0x39)": "input_array[9]",
                "*(undefined *)(param_1 + 0xe)": "input_array[14]",
                "*(uint *)(*param_1 + 0xc)": "*(uint *)(*input_array + 0xc)"
            },
            "code": "int check_input_validity_0800688e(int *input_array, int array_size, int value)\n{\n  if (input_array[9] != ' ')\n  {\n    return 2;\n  }\n  if (array_size == 0)\n  {\n    return 1;\n  }\n  if (value == 0)\n  {\n    return 1;\n  }\n  if (input_array[14] != '\\x01')\n  {\n    input_array[8] = array_size;\n    input_array[9] = (short)value;\n    input_array[11] = (short)value;\n    input_array[15] = 0;\n    input_array[9] = '!';\n    input_array[14] = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800688e",
            "calling": [
                "FUN_08008730",
                "FUN_08008694"
            ],
            "imported": false,
            "current_name": "check_input_validity_0800688e"
        },
        "FUN_080088e0": {
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "data_index",
                "param_2": "data_value",
                "iVar1": "has_error",
                "uVar2": "shift_value",
                "iVar3": "char_value"
            },
            "code": "void process_data_080088e0(uint data_index, uint data_value)\n{\n    int char_value;\n    uint shift_value;\n    int has_error;\n    \n    if (data_index < 0x3c) {\n        char_value = (int)(char)PTR_DAT_0800897c[data_index];\n    }\n    else {\n        char_value = -1;\n    }\n    \n    if (char_value != -1) {\n        has_error = FUN_0800738a(char_value, PTR_DAT_08008980);\n        \n        if (has_error == 0) {\n            FUN_08008990(data_index, 1);\n            shift_value = *(uint *)PTR_DAT_08008988;\n            \n            if (shift_value != 8) {\n                if (shift_value < 9) {\n                    data_value = data_value << (8 - shift_value & 0xff);\n                }\n                else {\n                    data_value = data_value >> (shift_value - 8 & 0xff);\n                }\n            }\n            \n            if (data_value < 0x80) {\n                FUN_08008a24(data_index, 0);\n            }\n            else {\n                FUN_08008a24(data_index, 1);\n            }\n        }\n        else {\n            has_error = FUN_08006b28(char_value, PTR_DAT_08008984);\n            \n            if (has_error == 0) {\n                FUN_08006b3e(char_value, PTR_DAT_08008984);\n            }\n            \n            shift_value = *(uint *)PTR_DAT_08008988;\n            \n            if (shift_value != 8) {\n                if (shift_value < 9) {\n                    data_value = data_value << (8 - shift_value & 0xff);\n                }\n                else {\n                    data_value = data_value >> (shift_value - 8 & 0xff);\n                }\n            }\n            \n            process_data(char_value, DAT_0800898c, 0xff, data_value, has_error == 0);\n        }\n    }\n    \n    return;\n}",
            "called": [
                "FUN_08006b28",
                "FUN_08006b3e",
                "FUN_0800738a",
                "FUN_08007118",
                "FUN_08008990",
                "FUN_08008a24"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080088e0",
            "calling": [
                "FUN_080005f8",
                "FUN_0800021a"
            ],
            "imported": false,
            "current_name": "process_data_080088e0"
        },
        "FUN_08008b66": {
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "data_ptr",
                "iVar1": "result",
                "uVar2": "index",
                "local_9": "data"
            },
            "code": "void update_data_08008b66(int data_ptr)\n{\n    int result = 0;\n    ushort index = 0;\n    undefined data = 0;\n\n    result = get_data(data_ptr, &data);\n    if ((result == 0) && (index = *(ushort *)(data_ptr + 0x60) + 1U & 0x3f, index != *(ushort *)(data_ptr + 0x62)))\n    {\n        *(undefined *)(*(int *)(data_ptr + 0x5c) + (uint)*(ushort *)(data_ptr + 0x60)) = data;\n        *(ushort *)(data_ptr + 0x60) = index;\n    }\n    return;\n}",
            "called": [
                "FUN_08008600"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b66",
            "calling": [],
            "imported": false,
            "current_name": "update_data_08008b66"
        },
        "FUN_0800870c": {
            "renaming": {
                "FUN_0800870c": "execute_function_if_index_less_than_five_0800870c",
                "uVar1": "function_index",
                "FUN_080086e8": "get_function_index",
                "PTR_DAT_08008728": "function_pointer_array",
                "PTR_DAT_0800872c": "function_parameter_array"
            },
            "code": "void execute_function_if_index_less_than_five_0800870c(void)\n{\n  uint function_index;\n  function_index = get_function_index();\n  if (function_index < 5) {\n    (**(code **)(PTR_DAT_08008728 + function_index * 4))(*(undefined4 *)(PTR_DAT_0800872c + function_index * 4));\n  }\n  return;\n}",
            "called": [
                "FUN_080086e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800870c",
            "calling": [
                "FUN_0800694c"
            ],
            "imported": false,
            "current_name": "execute_function_if_index_less_than_five_0800870c"
        },
        "FUN_08008840": {
            "renaming": {
                "FUN_08008840": "return_error_code_08008840",
                "undefined4": "int32_t"
            },
            "code": "int32_t return_error_code_08008840(void)\n{\n  return -1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008840",
            "calling": [],
            "imported": false,
            "current_name": "return_error_code_08008840"
        },
        "FUN_08008600": {
            "renaming": {
                "FUN_08008600": "get_value_from_param_08008600",
                "param_1": "param_value",
                "param_2": "output_buffer",
                "param_3": "buffer_size",
                "param_4": "default_value",
                "iVar1": "value"
            },
            "code": "int get_value_from_param_08008600(int param_value, char* output_buffer, int buffer_size, int default_value) {\n  if (param_value == 0) {\n    return -1;\n  }\n  int value = get_value_from_function();\n  if (value == 0) {\n    *output_buffer = *(char*)(param_value + 0x45);\n    set_value_in_buffer(*(int*)(PTR_DAT_08008638 + (uint)*(char*)(param_value + 0x44) * 4),\n                      param_value + 0x45, 1, PTR_DAT_08008638, default_value);\n    return 0;\n  }\n  return -1;\n}",
            "called": [
                "FUN_080068d6",
                "FUN_080085b8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008600",
            "calling": [
                "FUN_08008b66"
            ],
            "imported": false,
            "current_name": "get_value_from_param_08008600"
        },
        "FUN_08003154": {
            "renaming": {
                "FUN_08003154": "assign_param_to_pointer_08003154",
                "param_1": "pointer",
                "param_2": "parameter"
            },
            "code": "void assign_param_to_pointer_08003154(int* pointer, int parameter) {\n  *pointer = parameter;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003154",
            "calling": [
                "FUN_08002e26"
            ],
            "imported": false,
            "current_name": "assign_param_to_pointer_08003154"
        },
        "FUN_08006420": {
            "renaming": {
                "FUN_08006420": "update_bitmask_08006420",
                "param_1": "ptr_data",
                "param_2": "bit_position",
                "param_3": "new_value",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void update_bitmask_08006420(uint8_t *PTR_data, uint8_t bit_position, uint8_t new_value) {\n    uint32_t *PTR_bitmask = (uint32_t *)(PTR_data + 0x20);\n    uint8_t bit_shift = bit_position & 0xff;\n    uint32_t clear_mask = ~(4 << bit_shift);\n    uint32_t set_mask = new_value << bit_shift;\n    *PTR_bitmask = (*PTR_bitmask & clear_mask) | set_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006420",
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "imported": false,
            "current_name": "update_bitmask_08006420"
        },
        "FUN_08007750": {
            "renaming": {
                "FUN_08007750": "set_parameter_at_index_08007750",
                "param_1": "base_address",
                "param_2": "index",
                "param_3": "value",
                "PTR_": "",
                "DAT_": "",
                "*(undefined4 *)": "*",
                "*(int *)": "*",
                "int": "",
                "undefined4": "",
                "address": "address",
                "offset": "offset",
                "ptr": "ptr"
            },
            "code": "void set_parameter_at_index_08007750(int base_address, int index, int value) {\n    int* ptr = *(int *)(base_address + 4);\n    int offset = 0x34 + index * 4;\n    int* address = ptr + offset;\n    *address = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007750",
            "calling": [],
            "imported": false,
            "current_name": "set_parameter_at_index_08007750"
        },
        "FUN_08009938": {
            "renaming": {
                "FUN_08009938": "find_character_in_string_08009938",
                "param_1": "str",
                "param_2": "ch",
                "pcVar1": "current_char"
            },
            "code": "char* find_character_in_string_08009938(char* str, char ch) {\n  char* current_char;\n  do {\n    current_char = str;\n    if (*current_char == '\\0') {\n      if (ch != '\\0') {\n        current_char = NULL;\n      }\n      return current_char;\n    }\n    str = current_char + 1;\n  } while (ch != *current_char);\n  return current_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009938",
            "calling": [
                "FUN_0800997e"
            ],
            "imported": false,
            "current_name": "find_character_in_string_08009938"
        },
        "FUN_08007f0e": {
            "renaming": {
                "FUN_08007f0e": "check_input_08007f0e",
                "param_1": "input",
                "param_2": "param_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "iVar1": "start_time",
                "iVar2": "result",
                "uVar3": "time_diff",
                "iVar4": "status",
                "iVar5": "input_ptr",
                "uVar6": "param_4",
                "iVar7": "char_ptr",
                "iVar8": "current_time"
            },
            "code": "int check_input_08007f0e(int input, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  int start_time = FUN_08003760();\n  uint time_diff = 0;\n  int status = 2;\n  do {\n    int input_ptr = input + 4;\n    int result = FUN_080047f4(input_ptr, param_2, param_3, param_4, param_4);\n    if (result == 0) {\n      status = 0;\n      int char_ptr = input_ptr;\n      while ((result = FUN_0800542a(char_ptr), result != 0x20 && (status == 0))) {\n        int current_time = FUN_08003760();\n        time_diff = current_time - start_time;\n        if (time_diff < 0x65) {\n          result = FUN_08005430(char_ptr);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(input_ptr);\n  } while ((result == 4) && (time_diff < 100));\n  return status;\n}",
            "called": [
                "FUN_080047f4",
                "FUN_08003760",
                "FUN_08005430",
                "FUN_0800542a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f0e",
            "calling": [
                "FUN_08002b68"
            ],
            "imported": false,
            "current_name": "check_input_08007f0e"
        },
        "FUN_08004004": {
            "renaming": {
                "FUN_08004004": "set_bit_at_position_08004004",
                "param_1": "position"
            },
            "code": "void set_bit_at_position_08004004(uint position) {\n  if (position >= 0) {\n    *(int *)(DAT_08004020 + ((position >> 5) + 0x60) * 4) = 1 << (position & 0x1f);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004004",
            "calling": [],
            "imported": false,
            "current_name": "set_bit_at_position_08004004"
        },
        "FUN_08003158": {
            "renaming": {
                "FUN_08003158": "send_data_to_device_08003158",
                "param_1": "data_ptr",
                "param_2": "data_length",
                "param_3": "data_type",
                "puVar1": "device_ptr",
                "local_a": "local_data_type"
            },
            "code": "void send_data_to_device_08003158(uint8_t *data_ptr, uint32_t data_length, uint16_t data_type)\n{\n  uint8_t *device_ptr;\n  uint16_t local_data_type;\n  \n  device_ptr = (uint8_t *)*data_ptr;\n  if (device_ptr != (uint8_t *)0x0) {\n    local_data_type = data_type;\n    if (((int)data_length < 0x10) && (data_type < 0x4000)) {\n      (**(code **)*device_ptr)(device_ptr,data_length | 0xe0);\n      send_data_to_device_08003158(data_ptr,2,&local_data_type);\n    }\n    else {\n      send_data_to_device_08003158(data_ptr,data_length,2,&local_data_type);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08003106",
                "FUN_0800307a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003158",
            "calling": [
                "FUN_08002ef2"
            ],
            "imported": false,
            "current_name": "send_data_to_device_08003158"
        },
        "FUN_080090c2": {
            "renaming": {
                "FUN_080090c2": "swap_parameters_080090c2",
                "param_1": "destination",
                "param_2": "source"
            },
            "code": "void swap_parameters_080090c2(void* destination, void* source){\n    FUN_08009108(source, destination);\n    return;\n}",
            "called": [
                "FUN_08009108"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080090c2",
            "calling": [
                "FUN_08008f78"
            ],
            "imported": false,
            "current_name": "swap_parameters_080090c2"
        },
        "FUN_08000ef8": {
            "renaming": {
                "FUN_08000ef8": "FUNC_08000ef8"
            },
            "code": "\nvoid FUNC_08000ef8(void)\n\n{\n  byte bVar1;\n  int iVar2;\n  bool bVar3;\n  byte bVar4;\n  \n  if (*PTR_DAT_08001188 != '\\0') {\n    bVar1 = *PTR_DAT_0800118c;\n    if (*PTR_DAT_08001190 == -1) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)*PTR_DAT_08001190);\n        if (iVar2 == 1) {\n          bVar4 = 0;\n        }\n        else if ((bVar1 & 1) == 0) {\n          bVar4 = 0;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0);\n          if (iVar2 == 0) {\n            bVar4 = 0;\n          }\n          else {\n            bVar4 = 1;\n          }\n        }\n      }\n    }\n    if (PTR_DAT_08001190[1] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[1]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 2) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(1);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    if (PTR_DAT_08001190[2] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[2]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 4) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(2);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    if (PTR_DAT_08001190[3] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[3]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 8) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(3);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    if (PTR_DAT_08001190[4] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[4]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x10) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(4);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    if (PTR_DAT_08001190[5] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[5]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x20) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(5);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    if (PTR_DAT_08001190[6] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[6]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x40) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(6);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    if (PTR_DAT_08001190[7] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001190[7]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x80) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(7);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(0,bVar4);\n  }\n  if (PTR_DAT_08001188[1] != '\\0') {\n    bVar1 = PTR_DAT_0800118c[1];\n    if (PTR_DAT_08001190[8] == -1) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[8]);\n        if (iVar2 == 1) {\n          bVar4 = 0;\n        }\n        else if ((bVar1 & 1) == 0) {\n          bVar4 = 0;\n        }\n        else {\n          iVar2 = FUN_08008a6c(8);\n          if (iVar2 == 0) {\n            bVar4 = 0;\n          }\n          else {\n            bVar4 = 1;\n          }\n        }\n      }\n    }\n    if (PTR_DAT_08001424[9] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[9]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 2) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(9);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    if (PTR_DAT_08001424[10] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[10]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 4) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(10);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    if (PTR_DAT_08001424[0xb] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0xb]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 8) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0xb);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    if (PTR_DAT_08001424[0xc] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0xc]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x10) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0xc);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    if (PTR_DAT_08001424[0xd] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0xd]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x20) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0xd);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    if (PTR_DAT_08001424[0xe] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0xe]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x40) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0xe);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    if (PTR_DAT_08001424[0xf] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0xf]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x80) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0xf);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(1,bVar4,0);\n  }\n  if (PTR_DAT_08001428[2] != '\\0') {\n    bVar1 = PTR_DAT_0800142c[2];\n    if (PTR_DAT_08001424[0x10] == -1) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001424[0x10]);\n        if (iVar2 == 1) {\n          bVar4 = 0;\n        }\n        else if ((bVar1 & 1) == 0) {\n          bVar4 = 0;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x10);\n          if (iVar2 == 0) {\n            bVar4 = 0;\n          }\n          else {\n            bVar4 = 1;\n          }\n        }\n      }\n    }\n    if (PTR_DAT_080016c4[0x11] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x11]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 2) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x11);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    if (PTR_DAT_080016c4[0x12] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x12]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 4) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x12);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    if (PTR_DAT_080016c4[0x13] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x13]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 8) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x13);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    if (PTR_DAT_080016c4[0x14] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x14]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x10) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x14);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    if (PTR_DAT_080016c4[0x15] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x15]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x20) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x15);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    if (PTR_DAT_080016c4[0x16] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x16]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x40) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x16);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    if (PTR_DAT_080016c4[0x17] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x17]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x80) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x17);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(2,bVar4,0);\n  }\n  if (PTR_DAT_080016c8[3] != '\\0') {\n    bVar1 = PTR_DAT_080016cc[3];\n    if (PTR_DAT_080016c4[0x18] == -1) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_080016c4[0x18]);\n        if (iVar2 == 1) {\n          bVar4 = 0;\n        }\n        else if ((bVar1 & 1) == 0) {\n          bVar4 = 0;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x18);\n          if (iVar2 == 0) {\n            bVar4 = 0;\n          }\n          else {\n            bVar4 = 1;\n          }\n        }\n      }\n    }\n    if (PTR_DAT_080016c4[0x19] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x19]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 2) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x19);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    if (PTR_DAT_08001960[0x1a] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1a]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 4) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1a);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    if (PTR_DAT_08001960[0x1b] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1b]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 8) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1b);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    if (PTR_DAT_08001960[0x1c] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1c]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x10) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1c);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    if (PTR_DAT_08001960[0x1d] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1d]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x20) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1d);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    if (PTR_DAT_08001960[0x1e] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1e]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x40) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1e);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    if (PTR_DAT_08001960[0x1f] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x1f]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x80) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x1f);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(3,bVar4,0);\n  }\n  if (PTR_DAT_08001964[4] != '\\0') {\n    bVar1 = PTR_DAT_08001968[4];\n    if (PTR_DAT_08001960[0x20] == -1) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x20]);\n        if (iVar2 == 1) {\n          bVar4 = 0;\n        }\n        else if ((bVar1 & 1) == 0) {\n          bVar4 = 0;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x20);\n          if (iVar2 == 0) {\n            bVar4 = 0;\n          }\n          else {\n            bVar4 = 1;\n          }\n        }\n      }\n    }\n    if (PTR_DAT_08001960[0x21] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001960[0x21]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 2) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x21);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    if (PTR_DAT_08001b44[0x22] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x22]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 4) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x22);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    if (PTR_DAT_08001b44[0x23] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x23]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 8) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x23);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    if (PTR_DAT_08001b44[0x24] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x24]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x10) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x24);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    if (PTR_DAT_08001b44[0x25] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x25]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x20) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x25);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    if (PTR_DAT_08001b44[0x26] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x26]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x40) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x26);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    if (PTR_DAT_08001b44[0x27] == -1) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac();\n      if (iVar2 == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_080036ac((int)(char)PTR_DAT_08001b44[0x27]);\n        if (iVar2 == 1) {\n          bVar3 = false;\n        }\n        else if ((bVar1 & 0x80) == 0) {\n          bVar3 = false;\n        }\n        else {\n          iVar2 = FUN_08008a6c(0x27);\n          if (iVar2 == 0) {\n            bVar3 = false;\n          }\n          else {\n            bVar3 = true;\n          }\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(4,bVar4,0);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_080036ac",
                "FUN_08000be8",
                "FUN_08008a6c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08000ef8",
            "calling": [
                "FUN_080022f8"
            ],
            "imported": false,
            "current_name": "FUNC_08000ef8"
        },
        "FUN_08008846": {
            "renaming": {
                "FUN_08008846": "set_flag_08008846",
                "param_1": "buffer_start",
                "param_2": "flag",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "int set_flag_08008846(int buffer_start, int flag) {\n  *(int *)(buffer_start + 4) = flag;\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008846",
            "calling": [
                "FUN_0800a0ec"
            ],
            "imported": false,
            "current_name": "set_flag_08008846"
        },
        "FUN_0800a430": {
            "renaming": {
                "FUN_0800a430": "do_nothing_0800a430"
            },
            "code": "\nvoid do_nothing_0800a430(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a430",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800a430"
        },
        "FUN_0800459c": {
            "renaming": {
                "FUN_0800459c": "increment_and_store_value_0800459c",
                "param_1": "data_array",
                "*puVar1": "*ptr_to_uchar",
                "puVar1": "ptr_to_uchar",
                "param_1[9]": "*ptr_to_array_element",
                "*(short *)((int)param_1 + 0x2a)": "*ptr_to_short",
                "(int)(puVar1 + 1)": "((int)ptr_to_uchar + 1)",
                "(char)*(undefined4 *)(*param_1 + 0x10)": "(char)*(int *)(*data_array + 0x10)"
            },
            "code": "int increment_and_store_value_0800459c(int *data_array)\n{\n  int *ptr_to_array_element = &data_array[9];\n  short *ptr_to_short = (short *)((int)data_array + 0x2a);\n  if (*ptr_to_short != 0) {\n    unsigned char *ptr_to_uchar = (unsigned char *)(*ptr_to_array_element);\n    *ptr_to_array_element = ((int)ptr_to_uchar + 1);\n    *ptr_to_uchar = (char)*(int *)(*data_array + 0x10);\n    *ptr_to_short = (*ptr_to_short) - 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800459c",
            "calling": [
                "FUN_08005188"
            ],
            "imported": false,
            "current_name": "increment_and_store_value_0800459c"
        },
        "FUN_0800774a": {
            "renaming": {
                "FUN_0800774a": "set_param_at_offset_0800774a",
                "param_1": "struct_ptr",
                "param_2": "value",
                "PTR_": "",
                "DAT_": "",
                "* (undefined4 *)": "*",
                "*(int *)": "",
                "+ 0x24": "+ offset",
                "ptr": "ptr_to_offset"
            },
            "code": "void set_param_at_offset_0800774a(int struct_ptr, int offset, int value)\n{\n  int* ptr_to_offset = *(int *)(struct_ptr + 4) + offset;\n  *ptr_to_offset = value;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800774a",
            "calling": [],
            "imported": false,
            "current_name": "set_param_at_offset_0800774a"
        },
        "FUN_080042f0": {
            "renaming": {
                "FUN_080042f0": "update_data_080042f0",
                "param_1": "new_data",
                "*(uint *)(DAT_08004308 + 0x14)": "data_ptr",
                "FUN_08009094": "execute_function"
            },
            "code": "void update_data_080042f0(uint new_data){\n  uint* *(uint *)(DAT_08004308 + 0x14) = (uint*)(DAT_08004308 + 0x14);\n  if ((**(uint *)(DAT_08004308 + 0x14) & new_data) != 0) {\n    **(uint *)(DAT_08004308 + 0x14) = new_data;\n    execute_function();\n  }\n  return;\n}",
            "called": [
                "FUN_08009094"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080042f0",
            "calling": [],
            "imported": false,
            "current_name": "update_data_080042f0"
        },
        "FUN_080027f0": {
            "renaming": {
                "FUN_080027f0": "decode_string_080027f0",
                "param_1": "start_pos",
                "param_2": "param_2",
                "param_3": "encoded_length",
                "cVar1": "current_char",
                "puVar2": "string_ptr",
                "iVar3": "decode_status",
                "uVar4": "decoded_char",
                "uVar5": "decoded_length"
            },
            "code": "uint decode_string_080027f0(int start_pos, undefined4 param_2, uint encoded_length)\n{\n  char current_char;\n  undefined *string_ptr;\n  int decode_status;\n  undefined decoded_char;\n  uint decoded_length;\n  \n  string_ptr = PTR_DAT_08002884;\n  if (*PTR_DAT_08002878 == '\\0') {\n    decode_status = FUN_08007ede(start_pos + 0x14, param_2, encoded_length & 0xffff);\n    if (decode_status != 0) {\n      return 0;\n    }\n    return encoded_length;\n  }\n  decoded_length = (byte)*PTR_DAT_0800287c + encoded_length;\n  if ((byte)*PTR_DAT_08002880 < decoded_length) {\n    if (decoded_length < 0x20) {\n      decoded_length = 0x20;\n    }\n    decode_status = FUN_08009908(*(undefined4 *)PTR_DAT_08002884, decoded_length);\n    *(int *)string_ptr = decode_status;\n    if (decode_status == 0) {\n      decoded_char = 0;\n    }\n    else {\n      decoded_char = (undefined)decoded_length;\n    }\n    *PTR_DAT_08002880 = decoded_char;\n  }\n  string_ptr = PTR_DAT_08002888;\n  if (*(int *)PTR_DAT_08002884 != 0) {\n    FUN_080091b0((uint)(byte)*PTR_DAT_08002888 + *(int *)PTR_DAT_08002884, param_2, encoded_length);\n    current_char = *string_ptr + (char)encoded_length;\n    *string_ptr = current_char;\n    *PTR_DAT_0800287c = current_char;\n    return encoded_length;\n  }\n  *(undefined4 *)(start_pos + 4) = 1;\n  return 0;\n}",
            "called": [
                "FUN_08007ede",
                "FUN_080091b0",
                "FUN_08009908"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080027f0",
            "calling": [],
            "imported": false,
            "current_name": "decode_string_080027f0"
        },
        "FUN_0800314e": {
            "renaming": {
                "FUN_0800314e": "set_param_to_zero_0800314e",
                "param_1": "parameter",
                "*param_1": "*parameter"
            },
            "code": "void set_param_to_zero_0800314e(int* parameter){\n  *parameter = 0;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800314e",
            "calling": [
                "FUN_08002ce0"
            ],
            "imported": false,
            "current_name": "set_param_to_zero_0800314e"
        },
        "FUN_080076e0": {
            "renaming": {
                "FUN_080076e0": "process_data_080076e0",
                "param_1": "data_array",
                "param_1[0x13]": "data_array[19]",
                "FUN_08007544": "get_data_char",
                "FUN_08003fb0": "print_data_char",
                "FUN_08005df4": "process_data_array",
                "FUN_080062f4": "reset_data_array",
                "iVar2": "result",
                "cVar1": "data_char"
            },
            "code": "void process_data_080076e0(undefined4 *data_array){\n  char data_char = get_data_char(*data_array);\n  print_data_char((int)data_char);\n  int result = process_data_080076e0_array(data_array + 1);\n  if (result == 0) {\n    reset_data_array(data_array + 1,0);\n  }\n  return;\n}",
            "called": [
                "FUN_08007544",
                "FUN_080062f4",
                "FUN_08003fb0",
                "FUN_08005df4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076e0",
            "calling": [
                "FUN_08002578"
            ],
            "imported": false,
            "current_name": "process_data_080076e0"
        },
        "FUN_08002f14": {
            "renaming": {
                "FUN_08002f14": "process_data_08002f14",
                "param_1": "data_index",
                "FUN_080032a2": "call_data_processing_function"
            },
            "code": "void process_data_08002f14(int data_index) {\n  call_data_processing_function(data_index + 0x40);\n  return;\n}",
            "called": [
                "FUN_080032a2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f14",
            "calling": [
                "FUN_08000500",
                "FUN_08001c18",
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "imported": false,
            "current_name": "process_data_08002f14"
        },
        "FUN_080036a2": {
            "renaming": {
                "FUN_080036a2": "call_function_before_return_080036a2",
                "FUN_080072fa": "call_another_function"
            },
            "code": "void call_function_before_return_080036a2(void)\n{\n  call_another_function();\n  return;\n}",
            "called": [
                "FUN_080072fa"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036a2",
            "calling": [
                "FUN_08008f0e"
            ],
            "imported": false,
            "current_name": "call_function_before_return_080036a2"
        },
        "FUN_080038e4": {
            "renaming": {
                "FUN_080038e4": "set_value_080038e4",
                "param_1": "value",
                "param_2": "params",
                "uVar1": "result",
                "uVar2": "param_2",
                "iVar3": "iVar3",
                "local_c": "local_c"
            },
            "code": "int set_value_080038e4(int *value, uint *params) {\n  int result;\n  uint param_2;\n  int local_c;\n  \n  if (*(char *)(value + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(value + 9) = 1;\n    param_2 = params[1];\n    if (param_2 < 7) {\n      param_2 = param_2 * 5 - 5;\n      *(uint *)(*value + 0x34) =\n           *params << (param_2 & 0xff) | *(uint *)(*value + 0x34) & ~(0x1f << (param_2 & 0xff));\n    }\n    else if (param_2 < 0xd) {\n      param_2 = param_2 * 5 - 0x23;\n      *(uint *)(*value + 0x30) =\n           *params << (param_2 & 0xff) | *(uint *)(*value + 0x30) & ~(0x1f << (param_2 & 0xff));\n    }\n    else {\n      param_2 = param_2 * 5 - 0x41;\n      *(uint *)(*value + 0x2c) =\n           *params << (param_2 & 0xff) | *(uint *)(*value + 0x2c) & ~(0x1f << (param_2 & 0xff));\n    }\n    param_2 = *params;\n    if (param_2 < 10) {\n      *(uint *)(*value + 0x10) =\n           params[2] << (param_2 * 3 & 0xff) |\n           *(uint *)(*value + 0x10) & ~(7 << (param_2 * 3 & 0xff));\n    }\n    else {\n      param_2 = param_2 * 3 - 0x1e;\n      *(uint *)(*value + 0xc) =\n           params[2] << (param_2 & 0xff) | *(uint *)(*value + 0xc) & ~(7 << (param_2 & 0xff));\n    }\n    if (*params - 0x10 < 2) {\n      int iVar3 = *value;\n      if (iVar3 == DAT_08003a10) {\n        if ((*(uint *)(iVar3 + 8) & 0x800000) == 0) {\n          *(uint *)(iVar3 + 8) = *(uint *)(iVar3 + 8) | 0x800000;\n          if (*params == 0x10) {\n            for (local_c = (uint)((ulonglong)DAT_08003a18 * (ulonglong)*(uint *)PTR_DAT_08003a14 >>\n                                 0x32) * 10; local_c != 0; local_c = local_c + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        value[10] = value[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(value + 9) = 0;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080038e4",
            "calling": [
                "FUN_08006d80"
            ],
            "imported": false,
            "current_name": "set_value_080038e4"
        },
        "FUN_08005e68": {
            "renaming": {
                "FUN_08005e68": "do_nothing_08005e68"
            },
            "code": "\nvoid do_nothing_08005e68(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005e68",
            "calling": [
                "FUN_08005e6e"
            ],
            "imported": false,
            "current_name": "do_nothing_08005e68"
        },
        "FUN_08005d48": {
            "renaming": {
                "FUN_08005d48": "update_values_08005d48",
                "param_1": "data_index",
                "param_2": "data_array",
                "uVar1": "new_value_1",
                "uVar2": "new_value_2",
                "uVar3": "new_value_3",
                "DAT_08005da8": "special_data_index",
                "*(uint *)(param_1 + 0x20)": "current_value_1",
                "*(uint *)(param_1 + 4)": "current_value_2",
                "*param_2": "new_value_3",
                "param_2[1]": "new_value_4",
                "param_2[2]": "data_array_value_1",
                "param_2[3]": "data_array_value_2",
                "param_2[5]": "data_array_value_3",
                "param_2[6]": "data_array_value_4"
            },
            "code": "void update_values_08005d48(int data_index, uint *data_array)\n{\n  uint new_value_1;\n  uint new_value_2;\n  uint new_value_3;\n  \n  uint current_value_1 = *(uint *)(data_index + 0x20);\n  uint current_value_2 = *(uint *)(data_index + 4);\n  uint current_value_3 = *(uint *)(data_index + 0x1c);\n  \n  current_value_1 = current_value_1 & 0xfffffeff;\n  new_value_2 = data_array[0x0];\n  new_value_1 = (current_value_1 & 0xfffffdff) | (data_array[0x2] << 0x8);\n  \n  if (data_index == DAT_08005da8) {\n    new_value_1 = (new_value_1 & 0xfffff7ff) | (data_array[0x3] << 0x8);\n    new_value_2 = (current_value_2 & 0xffffcfff) | (data_array[0x5] << 0x4) | (data_array[0x6] << 0x4);\n  }\n  \n  *(uint *)(data_index + 4) = new_value_2;\n  *(uint *)(data_index + 0x1c) = (current_value_3 & 0xffffff8c) | new_value_3;\n  *(uint *)(data_index + 0x3c) = data_array[0x1];\n  *(uint *)(data_index + 0x20) = new_value_1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005d48",
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "imported": false,
            "current_name": "update_values_08005d48"
        }
    },
    "used_tokens": 291912,
    "layers": [
        [
            "FUN_08009c7c",
            "FUN_08009b5c",
            "FUN_080035b8",
            "FUN_08001c18",
            "FUN_08006460",
            "FUN_08008880",
            "FUN_08002ed2",
            "FUN_080073ae",
            "FUN_08000488",
            "FUN_08003f0c",
            "FUN_08008f1c",
            "FUN_080058ac",
            "FUN_08006bb8",
            "FUN_08007438",
            "FUN_08004aec",
            "FUN_0800887c",
            "FUN_08004728",
            "FUN_08007ede",
            "FUN_0800863c",
            "thunk_FUN_0800887c",
            "FUN_080074e0",
            "FUN_080073c0",
            "FUN_080084b0",
            "FUN_08004050",
            "FUN_08008e14",
            "FUN_08005a28",
            "FUN_080095a8",
            "FUN_08003002",
            "FUN_08003bd8",
            "FUN_08009d50",
            "FUN_08003366",
            "FUN_080091b0",
            "FUN_08009108",
            "FUN_0800a18c",
            "FUN_08009908",
            "FUN_08008a24",
            "FUN_08008abc",
            "FUN_08002b68",
            "FUN_080005e0",
            "FUN_08008020",
            "FUN_08005dac",
            "FUN_0800674e",
            "FUN_0800771c",
            "FUN_080066e8",
            "FUN_08009358",
            "FUN_0800270c",
            "FUN_08003370",
            "FUN_08007fa0",
            "FUN_08003376",
            "FUN_08008bf4",
            "FUN_08005430",
            "FUN_08002720",
            "FUN_080031ce",
            "FUN_08009918",
            "FUN_08005434",
            "FUN_08005e2e",
            "FUN_08007736",
            "FUN_08002968",
            "FUN_08004ccc",
            "FUN_080042d4",
            "FUN_0800542a",
            "FUN_0800457c",
            "FUN_080091c6",
            "FUN_0800a07a",
            "FUN_08003a20",
            "FUN_080064b0",
            "FUN_08009cdc",
            "FUN_08002a58",
            "FUN_080026b0",
            "FUN_08006092",
            "FUN_08008d8c",
            "FUN_080004d4",
            "FUN_08009124",
            "FUN_08002fa0",
            "FUN_08003a1c",
            "FUN_08005cb4",
            "FUN_08007744",
            "FUN_08006538",
            "FUN_080042e2",
            "FUN_08002fa8",
            "FUN_0800325a",
            "FUN_080091d8",
            "FUN_0800688e",
            "FUN_080088e0",
            "FUN_08008b66",
            "FUN_0800870c",
            "FUN_08008840",
            "FUN_08008600",
            "FUN_08003154",
            "FUN_08006420",
            "FUN_08007750",
            "FUN_08009938",
            "FUN_08007f0e",
            "FUN_08004004",
            "FUN_08003158",
            "FUN_080090c2",
            "FUN_08008846",
            "FUN_0800459c",
            "FUN_0800774a",
            "FUN_080042f0",
            "FUN_080027f0",
            "FUN_0800314e",
            "FUN_080076e0",
            "FUN_08002f14",
            "FUN_080036a2",
            "FUN_080038e4",
            "FUN_08005d48"
        ],
        [
            "FUN_08009eac",
            "FUN_08007118",
            "FUN_08003048",
            "FUN_0800a07a"
        ]
    ],
    "locked_functions": []
}