{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *current_char_ptr;\n  \n  current_char_ptr = input_string;\n  do {\n    next_char_ptr = current_char_ptr + 1;\n    current_char = *current_char_ptr;\n    current_char_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)input_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "input_string",
                "pcVar3": "current_char_ptr",
                "pcVar2": "next_char_ptr",
                "cVar1": "current_char"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "execute_system_call_08000188",
            "code": "\nvoid execute_system_call_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "execute_system_call_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "initialize_0800018c",
            "code": "\nundefined4 initialize_0800018c(undefined4 value,undefined4 unused,undefined4 unused,undefined4 flag)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,value,0,0,flag);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "initialize_0800018c",
                "param_1": "value",
                "param_2": "unused",
                "param_3": "unused",
                "param_4": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint inputValue,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  bool isNegative;\n  int returnValue;\n  \n  if (0x3b < (int)inputValue) {\n    return;\n  }\n  returnValue = FUN_08002fa0(&DAT_200003d4,inputValue,arg2,arg3,arg3);\n  if (returnValue == 3) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        returnValue = 0;\n      }\n      else {\n        returnValue = FUN_080036ac();\n        if (returnValue == 0) {\n          returnValue = 0;\n        }\n        else {\n          returnValue = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (returnValue == 1) {\n            returnValue = 0;\n          }\n          else {\n            returnValue = FUN_0800738a((int)(char)(&DAT_0800a908)[inputValue],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    if (returnValue != 0) {\n      FUN_080088e0(inputValue,arg1);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,arg1);\n  }\n  else if (returnValue == 4) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        isNegative = false;\n      }\n      else {\n        returnValue = FUN_080036ac();\n        if (returnValue == 0) {\n          isNegative = false;\n        }\n        else {\n          returnValue = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (returnValue == 1) {\n            isNegative = false;\n          }\n          else {\n            isNegative = true;\n          }\n        }\n      }\n    }\n    else {\n      isNegative = false;\n    }\n    if (isNegative) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputValue] * 3,arg1);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,arg1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "inputValue",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "bVar1": "isNegative",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint inputValue,undefined4 outputValue,undefined4 unused1,undefined4 unused2)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,inputValue,unused1,unused2,unused2);\n  if (result == 3) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[inputValue],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(inputValue,outputValue);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,outputValue);\n  }\n  else if (result == 4) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputValue] * 3,outputValue);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,outputValue);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "inputValue",
                "param_2": "outputValue",
                "param_3": "unused1",
                "param_4": "unused2",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_08000488",
            "code": "\nvoid updateData_08000488(uint index,int value)\n\n{\n  undefined4 returnValue;\n  \n  if ((int)index < 0xe) {\n    if (value == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      returnValue = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,index,returnValue);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_08000488",
                "param_1": "index",
                "param_2": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "perform_operation_080004d4",
            "code": "\nvoid performOperation_080004d4(int argument,int value)\n\n{\n  int counter;\n  undefined *dataPointer;\n  \n  if (argument != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    dataPointer = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      FUN_08002580(dataPointer);\n      dataPointer = dataPointer + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "perform_operation_080004d4",
                "param_1": "argument",
                "param_2": "value",
                "iVar1": "counter",
                "puVar2": "dataPointer"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int value1,int value2,undefined4 value3)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",value2,value3,value3);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < value1) && (0 < value2)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,value1,value2);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_08000588",
            "code": "\nvoid updateData_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "process_pin_080005f8",
            "code": "\nvoid processPin_080005f8(uint pinNumber,int pinMode)\n\n{\n  int result;\n  char validPin;\n  bool isConditionMet;\n  uint modifiedPinNumber;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        validPin = '\\0';\n      }\n      else {\n        validPin = DAT_20000170;\n        if (pinMode == 6) {\n          validPin = '\\0';\n        }\n      }\n    }\n    else {\n      validPin = '\\0';\n    }\n    if (validPin != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else if (pinMode == 4) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    modifiedPinNumber = pinNumber - 0x2e & 0xff;\n    if (modifiedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isConditionMet = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isConditionMet = false;\n        }\n        else {\n          isConditionMet = true;\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_08000488(modifiedPinNumber,pinMode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      if ((pinMode == 0) || (pinMode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(pinMode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (modifiedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isConditionMet = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (result == 1) {\n                isConditionMet = false;\n              }\n            }\n          }\n        }\n        else {\n          isConditionMet = false;\n        }\n        if (isConditionMet) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           result != 0)) {\n          isConditionMet = false;\n        }\n        if (isConditionMet) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isConditionMet = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isConditionMet = false;\n            }\n            else {\n              isConditionMet = true;\n            }\n          }\n        }\n      }\n      else {\n        isConditionMet = false;\n      }\n      if (isConditionMet) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "process_pin_080005f8",
                "param_1": "pinNumber",
                "param_2": "pinMode",
                "iVar1": "result",
                "cVar2": "validPin",
                "bVar3": "isConditionMet",
                "uVar4": "modifiedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "check_and_process_data_08000a64",
            "code": "\nvoid check_and_process_data_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "check_and_process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool flag;\n  int result;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        flag = false;\n      }\n      else {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          flag = false;\n        }\n        else {\n          flag = true;\n        }\n      }\n    }\n    else {\n      flag = false;\n    }\n    if (flag) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (result = FUN_080036ac(), result != 0)) &&\n         (result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), result != 1)) {\n        flag = true;\n      }\n      if (flag) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "bVar1": "flag",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "apply_logic_and_set_char_08000be8",
            "code": "\nvoid applyLogicAndSetChar_08000be8(int index,uint mask,int condition,undefined4 param_4)\n\n{\n  undefined1 *baseAddress;\n  undefined1 *maskedChar;\n  \n  baseAddress = &DAT_20000174;\n  maskedChar = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((condition != 0) ||\n     (baseAddress = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], maskedChar != baseAddress)) {\n    FUN_08002efe(&DAT_200003d4,index,maskedChar,baseAddress,param_4);\n    (&DAT_20000180)[index] = (char)maskedChar;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "apply_logic_and_set_char_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "condition",
                "puVar1": "baseAddress",
                "puVar2": "maskedChar"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_features_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureFeatures_08000ef8(void)\n\n{\n  byte dataByte;\n  int returnValue;\n  bool isTrue;\n  byte result;\n  \n  dataByte = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      result = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(3);\n      if (returnValue == 1) {\n        result = 0;\n      }\n      else if ((dataByte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0);\n        if (returnValue == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(2);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 2) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(1);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(10);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 4) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(2);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x13);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 8) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(3);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x15);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x10) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(4);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x14);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x20) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(5);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1a);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x40) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(6);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(8);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x80) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(7);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x80;\n    }\n    FUN_08000be8(0,result);\n  }\n  dataByte = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      result = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(9);\n      if (returnValue == 1) {\n        result = 0;\n      }\n      else if ((dataByte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(8);\n        if (returnValue == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x27);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 2) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(9);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x16);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 4) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(10);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(7);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 8) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xb);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(6);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x10) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xc);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(5);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x20) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xd);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x19);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x40) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xe);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x18);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x80) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xf);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x80;\n    }\n    FUN_08000be8(1,result,0);\n  }\n  dataByte = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      result = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2a);\n      if (returnValue == 1) {\n        result = 0;\n      }\n      else if ((dataByte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x10);\n        if (returnValue == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2c);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 2) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x11);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xd);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 8) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x13);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xe);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x10) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x14);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xf);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x20) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x15);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x17);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x40) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x16);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2d);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x80) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x17);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x80;\n    }\n    FUN_08000be8(2,result,0);\n  }\n  dataByte = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      result = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2e);\n      if (returnValue == 1) {\n        result = 0;\n      }\n      else if ((dataByte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x18);\n        if (returnValue == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2f);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 2) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x19);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x30);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 4) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1a);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x31);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 8) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1b);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x22);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x10) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1c);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x23);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x20) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1d);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2b);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x40) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1e);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x32);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x80) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1f);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x80;\n    }\n    FUN_08000be8(3,result,0);\n  }\n  dataByte = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      result = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x29);\n      if (returnValue == 1) {\n        result = 0;\n      }\n      else if ((dataByte & 1) == 0) {\n        result = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x20);\n        if (returnValue == 0) {\n          result = 0;\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x28);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 2) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x21);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x26);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 4) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x22);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x25);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 8) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x23);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xc);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x10) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x24);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xb);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x20) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x25);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1c);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x40) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x26);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      isTrue = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1b);\n      if (returnValue == 1) {\n        isTrue = false;\n      }\n      else if ((dataByte & 0x80) == 0) {\n        isTrue = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x27);\n        if (returnValue == 0) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    if (isTrue) {\n      result = result | 0x80;\n    }\n    FUN_08000be8(4,result,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_features_08000ef8",
                "bVar1": "dataByte",
                "iVar2": "returnValue",
                "bVar3": "isTrue",
                "bVar4": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_firmware_08001b48",
            "code": "\nvoid initializeFirmware_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,label1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,label2);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,label3);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_firmware_08001b48",
                "&LAB_080002ec_1": "label1",
                "&LAB_08000c18_1": "label2",
                "&LAB_080001a8_1": "label3"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_0800288c(&DAT_20000314,parameter1,parameter3,parameter4,parameter4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "receive_data_from_i2_c_08001c18",
            "code": "\nvoid receiveDataFromI2C_08001c18(undefined4 deviceAddress,uint bufferSize,int expectedSize,undefined4 deviceData)\n\n{\n  undefined receivedByte;\n  int receivedCount;\n  int currentCount;\n  bool isReceived;\n  \n  if (bufferSize == 0xffffffff) {\n    bufferSize = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(bufferSize & 0xff);\n    FUN_08002a58(&DAT_20000314,deviceData);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedSize);\n  receivedCount = FUN_0800270c(&DAT_20000314);\n  if (expectedSize < receivedCount) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedCount = FUN_0800270c(&DAT_20000314);\n    if (receivedCount < expectedSize) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)bufferSize;\n  receivedCount = 0;\n  while( true ) {\n    if (receivedCount < expectedSize) {\n      currentCount = FUN_0800270c(&DAT_20000314);\n      if (currentCount == 0) {\n        isReceived = false;\n      }\n      else {\n        isReceived = true;\n      }\n    }\n    else {\n      isReceived = false;\n    }\n    if (!isReceived) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[receivedCount] = receivedByte;\n    receivedCount = receivedCount + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedSize + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "receive_data_from_i2_c_08001c18",
                "param_1": "deviceAddress",
                "param_2": "bufferSize",
                "param_3": "expectedSize",
                "param_4": "deviceData",
                "uVar1": "receivedByte",
                "iVar2": "receivedCount",
                "iVar3": "currentCount",
                "bVar4": "isReceived"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 opcode,int size,byte *data,undefined4 param)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 returnValue;\n  byte byte4;\n  char char1;\n  int value1;\n  int value2;\n  uint index;\n  uint modifiedIndex;\n  int value3;\n  bool flag;\n  \n  switch(opcode) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      modifiedIndex = index - 0x2e & 0xff;\n      if (modifiedIndex < 0xe) {\n        if (index < 0x3c) {\n          value1 = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          value1 = -1;\n        }\n        value1 = FUN_080036ac(value1);\n        if (value1 == 0) {\n          modifiedIndex = 0x7f;\n        }\n        else {\n          if (index < 0x3c) {\n            value1 = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            value1 = -1;\n          }\n          value1 = FUN_080036ac(value1);\n          if (value1 == 1) {\n            modifiedIndex = 0x7f;\n          }\n        }\n      }\n      else {\n        modifiedIndex = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,modifiedIndex);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      if (index < 0x3c) {\n        if ((&DAT_0800a908)[index] == -1) {\n          flag = false;\n        }\n        else {\n          value1 = FUN_080036ac();\n          if (value1 == 0) {\n            flag = false;\n          }\n          else {\n            value1 = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n            if (value1 == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((index - 0x2e & 0xff) < 0xe) {\n        if (index < 0x3c) {\n          value1 = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          value1 = -1;\n        }\n        value1 = FUN_080036ac(value1);\n        if (value1 == 0) {\n          flag = false;\n        }\n        else {\n          if (index < 0x3c) {\n            value1 = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            value1 = -1;\n          }\n          value1 = FUN_080036ac(value1);\n          if (value1 == 1) {\n            flag = false;\n          }\n          else {\n            flag = true;\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (index < 0x3c) {\n        if ((&DAT_0800a908)[index] == -1) {\n          value1 = 0;\n        }\n        else {\n          value1 = FUN_080036ac();\n          if (value1 == 0) {\n            value1 = 0;\n          }\n          else {\n            value1 = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n            if (value1 == 1) {\n              value1 = 0;\n            }\n            else {\n              value1 = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        value1 = 0;\n      }\n      if (value1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (index < 0x3c) {\n        if ((&DAT_0800a908)[index] == -1) {\n          flag = false;\n        }\n        else {\n          value1 = FUN_080036ac();\n          if (value1 == 0) {\n            flag = false;\n          }\n          else {\n            value1 = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n            if (value1 == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (index < 0x3c) {\n        if ((&DAT_0800a908)[index] == -1) {\n          value1 = 0;\n        }\n        else {\n          value1 = FUN_080036ac();\n          if (value1 == 0) {\n            value1 = 0;\n          }\n          else {\n            value1 = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n            if (value1 == 1) {\n              value1 = 0;\n            }\n            else {\n              value1 = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n              if (value1 == 0) {\n                value1 = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        value1 = 0;\n      }\n      if (value1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (size != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        returnValue = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,returnValue);\n        index = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,index & 0x7f);\n        index = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((index & 0xff80) != 0) {\n          value1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(value1 << 0x12) >> 0x19);\n        }\n        index = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((index & 0xc000) != 0) {\n          value1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(value1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < size) {\n      index = (uint)data[1];\n      if (2 < size) {\n        index = index | (uint)data[2] << 7;\n      }\n      if (3 < size) {\n        index = index | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,index);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < size) {\n      index = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (index < 0x3c) {\n        if ((&DAT_0800a908)[index] == -1) {\n          flag = false;\n        }\n        else {\n          value1 = FUN_080036ac();\n          if (value1 == 0) {\n            flag = false;\n          }\n          else {\n            value1 = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n            if (value1 == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        if ((byte)(&DAT_200001f0)[index] < 0xc) {\n          value1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n        }\n        else {\n          value1 = 0;\n        }\n        if (value1 != 0) {\n          FUN_08000588(index);\n        }\n        FUN_08000500(index,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(index,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param);\n      return;\n    }\n    byte2 = *data;\n    flag = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (index = 2; (int)index < size; index = index + 2 & 0xff) {\n          FUN_08001bf8(data[index + 1] * -0x80 + data[index]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (size == 6) {\n          value1 = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          value1 = -1;\n        }\n        FUN_08001c18(byte2,value1,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (size == 6) {\n            value1 = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            value1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          value2 = (int)DAT_20000004;\n          value3 = value2 * 0xc;\n          (&DAT_20000188)[value3] = byte2;\n          (&DAT_2000018c)[value2 * 3] = value1;\n          (&DAT_20000190)[value3] = char1;\n          (&DAT_20000191)[value3] = flag;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,flag,param);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (index = 0; value1 = DAT_20000004 + 1, (int)index < value1; index = index + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[index * 0xc]) goto LAB_08001e66;\n      }\n      index = 0;\nLAB_08001e66:\n      for (; (int)index < value1; index = index + 1 & 0xff) {\n        if (index < 8) {\n          value2 = (index + 1) * 0xc;\n          value3 = index * 0xc;\n          (&DAT_20000188)[value3] = (&DAT_20000188)[value2];\n          (&DAT_2000018c)[index * 3] = (&DAT_2000018c)[(index + 1) * 3];\n          (&DAT_20000190)[value3] = (&DAT_20000190)[value2];\n          (&DAT_20000191)[value3] = (&DAT_20000191)[value2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    value1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < size) && (value1 != 0)) {\n      DAT_2000012c = value1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < size) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "opcode",
                "param_2": "size",
                "param_3": "data",
                "param_4": "param",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "returnValue",
                "bVar5": "byte4",
                "cVar6": "char1",
                "iVar7": "value1",
                "iVar8": "value2",
                "uVar9": "index",
                "uVar10": "modifiedIndex",
                "iVar11": "value3",
                "bVar12": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "initialize_and_process_data_080022f8",
            "code": "\nvoid initializeAndProcessData_080022f8(void)\n\n{\n  bool isValid;\n  int index;\n  undefined4 result;\n  uint outerLoopIndex;\n  uint innerLoopIndex;\n  \n  FUN_08000ef8();\n  while (index = FUN_08002ec4(&DAT_200003d4), index != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (outerLoopIndex = 0; outerLoopIndex < 0x3c; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n      innerLoopIndex = outerLoopIndex - 0x2e & 0xff;\n      if (innerLoopIndex < 0xe) {\n        if (outerLoopIndex < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          isValid = false;\n        }\n        else {\n          if (outerLoopIndex < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            isValid = false;\n          }\n          else {\n            index = FUN_08002fa0(&DAT_200003d4,outerLoopIndex);\n            if (index == 2) {\n              isValid = true;\n            }\n            else {\n              isValid = false;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if ((isValid) && ((DAT_20000114 >> innerLoopIndex & 1U) != 0)) {\n        result = FUN_08008880(innerLoopIndex);\n        FUN_08002ef2(&DAT_200003d4,innerLoopIndex,result);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (outerLoopIndex = 0; (int)outerLoopIndex < DAT_20000004 + 1; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n        index = outerLoopIndex * 0xc;\n        FUN_08001c18((&DAT_20000188)[index],(&DAT_2000018c)[outerLoopIndex * 3],(&DAT_20000190)[index],\n                     (&DAT_20000191)[index]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "initialize_and_process_data_080022f8",
                "iVar2": "index",
                "uVar3": "result",
                "uVar4": "outerLoopIndex",
                "uVar5": "innerLoopIndex",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_if_bit_set_08002400",
            "code": "\nundefined4 check_if_bit_set_08002400(int index)\n\n{\n  uint loop_counter;\n  \n  loop_counter = 0;\n  while( true ) {\n    if (0xb < loop_counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(index * 0xc + loop_counter) * 8] & 0x40) != 0) break;\n    loop_counter = loop_counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_if_bit_set_08002400",
                "param_1": "index",
                "uVar1": "loop_counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08007648(arg1,60000,0x5dc,&serverConnectionError,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "LAB_08002444_1": "serverConnectionError"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_application_08002578",
            "code": "\nvoid initialize_application_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_application_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_data_08002580",
            "code": "\nvoid initializeData_08002580(byte *outputBuffer)\n\n{\n  char nextChar;\n  uint index;\n  \n  index = (uint)DAT_20000250;\n  if (0xb < index) {\n    *outputBuffer = 0xff;\n    return;\n  }\n  nextChar = DAT_20000250 + 1;\n  *outputBuffer = DAT_20000250;\n  DAT_20000250 = nextChar;\n  *(undefined4 *)(&DAT_2000025c + index * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "param_1": "outputBuffer",
                "uVar2": "index",
                "cVar1": "nextChar"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "decode_and_update_data_080025ac",
            "code": "\nbyte decode_and_update_data_080025ac(byte *data_pointer,uint value,int offset1,int offset2)\n\n{\n  uint value_with_offset;\n  uint data_value;\n  uint divided_value;\n  int temp_value;\n  \n  if (*data_pointer < 0xc) {\n    FUN_08008990(value,1,offset1,*data_pointer,offset2);\n    data_value = (uint)*data_pointer;\n    value_with_offset = (byte)(&DAT_20000258)[data_value * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[data_value * 8] = (char)value_with_offset;\n    temp_value = -offset1 + 0x220;\n    if (temp_value < 0) {\n      temp_value = -offset1 + 0x223;\n    }\n    data_pointer[1] = (byte)((uint)(temp_value << 0x16) >> 0x18);\n    temp_value = -offset2 + 0x960;\n    if (temp_value < 0) {\n      temp_value = -offset2 + 0x963;\n    }\n    data_pointer[2] = (byte)((uint)(temp_value << 0x16) >> 0x18);\n    divided_value = *data_pointer / 0xc;\n    temp_value = FUN_08002400(divided_value,value_with_offset,data_value,(uint)*data_pointer * -0x55555555);\n    if (temp_value == 0) {\n      DAT_200002fc = (undefined)divided_value;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data_pointer * 8] = (&DAT_20000258)[(uint)*data_pointer * 8] | 0x40;\n  }\n  return *data_pointer;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "decode_and_update_data_080025ac",
                "param_1": "data_pointer",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "value_with_offset",
                "uVar2": "data_value",
                "uVar3": "divided_value",
                "iVar4": "temp_value"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 width,undefined4 height,undefined4 offsetX,undefined4 offsetY)\n\n{\n  FUN_080025ac(width,height,0x220,0x960,offsetY);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "width",
                "param_2": "height",
                "param_3": "offsetX",
                "param_4": "offsetY"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "update_data_08002644",
            "code": "\nvoid updateData_08002644(byte *data,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  byte currentByte;\n  uint firstByte;\n  int result;\n  \n  firstByte = (uint)*data;\n  currentByte = (&DAT_20000258)[firstByte * 8];\n  (&DAT_20000258)[firstByte * 8] = currentByte & 0xbf;\n  result = FUN_08002400(firstByte / 0xc,arg1,currentByte & 0xbf,firstByte * -0x55555555,arg3);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "update_data_08002644",
                "param_1": "data",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "bVar1": "currentByte",
                "uVar2": "firstByte",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_array_0800267c",
            "code": "\nvoid updateArray_0800267c(byte *array,int value)\n\n{\n  int index;\n  \n  if (*array < 0xc) {\n    index = (0x88 - (char)array[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)array[2]) * 4,\n       value == index || value + (600 - (char)array[2]) * -4 < 0 != SBORROW4(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = index;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_array_0800267c",
                "param_1": "array",
                "param_2": "value",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "process_data_080026b0",
            "code": "\nvoid processData_080026b0(int inputParam,int limit)\n\n{\n  if (limit < 0x220) {\n    if (limit < 0) {\n      limit = 0;\n    }\n    else if (0xb4 < limit) {\n      limit = 0xb4;\n    }\n    limit = FUN_08008ef4(limit,0,0xb4,(0x88 - *(char *)(inputParam + 1)) * 4,\n                           (600 - *(char *)(inputParam + 2)) * 4);\n  }\n  FUN_0800267c(inputParam,limit);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "process_data_080026b0",
                "param_1": "inputParam",
                "param_2": "limit"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "calculate_unsigned_shift_080026f8",
            "code": "\nuint calculateUnsignedShift_080026f8(byte *input)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*input * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "calculate_unsigned_shift_080026f8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_08002720",
            "code": "\nuint get_next_byte_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_08002720",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint processData_080027f0(int inputSize,undefined4 param2,uint data)\n\n{\n  int result;\n  uint newDataSize;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(inputSize + 0x14,param2,data & 0xffff);\n    if (result == 0) {\n      return data;\n    }\n    return 0;\n  }\n  newDataSize = DAT_200003b8 + data;\n  if (DAT_200003c5 < newDataSize) {\n    if (newDataSize < 0x20) {\n      newDataSize = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,newDataSize);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)newDataSize;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(inputSize + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,param2,data);\n  DAT_200003b6 = DAT_200003b6 + (char)data;\n  DAT_200003b8 = DAT_200003b6;\n  return data;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "inputSize",
                "param_2": "param2",
                "param_3": "data",
                "iVar1": "result",
                "uVar2": "newDataSize"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int input,undefined data)\n\n{\n  undefined4 result;\n  int status;\n  uint newSize;\n  undefined localData;\n  \n  localData = data;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(input + 0x14,&localData,1);\n    if (status == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(input + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = localData;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "input",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "status",
                "uVar3": "newSize",
                "local_11": "localData"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_params_0800291c",
            "code": "\nvoid initializeParams_0800291c(undefined4 *paramArray)\n\n{\n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(paramArray + 0x1b) = 0x19;\n  *(undefined *)((int)paramArray + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_params_0800291c",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_param_and_call_function_08002948",
            "code": "\nvoid checkParamAndCallFunction_08002948(int condition,int value)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_param_and_call_function_08002948",
                "param_1": "condition",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_data_08002968",
            "code": "\nvoid initializeData_08002968(int param1,uint param2)\n\n{\n  int shiftedValue;\n  int address;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedValue = (param2 & 0x7f) << 1;\n  *(char *)(param1 + 0x10) = shiftedValue_as_char;\n  if (param2 == 0x33) {\n    *(undefined *)(param1 + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(param1 + 0x11) = 0;\n  }\n  address = param1 + 0x14;\n  FUN_080077b0(address,100000,0x4000,shiftedValue,*(undefined *)(param1 + 0x11));\n  if (*(char *)(param1 + 0x11) == '\\0') {\n    FUN_08007f8e(address,label1);\n    FUN_08007f7c(address,label2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_data_08002968",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "shiftedValue",
                "iVar2": "address",
                "(char)iVar1": "shiftedValue_as_char",
                "&LAB_08002774_1": "label1",
                "&LAB_08002b00_1": "label2"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid executeFunction_08002a1c(undefined4 arg1,undefined arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002968(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_device_08002a26",
            "code": "\nvoid initializeDevice_08002a26(undefined4 deviceID,undefined4 unusedParam,undefined4 address,undefined4 data)\n\n{\n  FUN_08002a1c(deviceID,0x33,address,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_device_08002a26",
                "param_1": "deviceID",
                "param_2": "unusedParam",
                "param_3": "address",
                "param_4": "data"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param1,int param2)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(param2 << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_validity_08002a58",
            "code": "\nundefined4 checkValidity_08002a58(int input)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(input + 0x11) == '\\0') {\n    returnValue = 4;\n  }\n  else {\n    result = FUN_08007e74(input + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      returnValue = 0;\n    }\n    else if (result == 1) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_validity_08002a58",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "execute_function_08002ac0",
            "code": "\nvoid executeFunction_08002ac0(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002a58(param1,1,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "execute_function_08002ac0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_data_size_08002acc",
            "code": "\nvoid updateDataSize_08002acc(uint dataSize,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < dataSize) {\n    if (dataSize < 0x20) {\n      dataSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,dataSize,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)dataSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_data_size_08002acc",
                "param_1": "dataSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "execute_function_08002b68",
            "code": "\nundefined4\nexecute_function_08002b68(undefined4 *array,uint array_length,undefined4 value,uint shift,byte byte_value)\n\n{\n  int result;\n  uint byte_count;\n  uint shifted_value;\n  \n  byte_count = (uint)byte_value;\n  if (*(char *)((int)array + 0x11) == '\\0') {\n    return 0;\n  }\n  shifted_value = shift;\n  FUN_08002acc(value);\n  if (DAT_200003c8 != 0) {\n    if (byte_count != 0) {\n      FUN_08002a30(array,array_length);\n      if (3 < byte_count) {\n        byte_count = 3;\n      }\n      while( true ) {\n        if (byte_count == 0) break;\n        (**(code **)*array)(array,shift >> ((byte_count - 1 & 0x1f) << 3) & 0xff);\n        byte_count = byte_count - 1 & 0xff;\n      }\n      FUN_08002a58(array,0);\n    }\n    result = FUN_08007f0e(array + 5,(array_length & 0x7f) << 1,DAT_200003c8,value,shifted_value);\n    if (result != 0) {\n      value = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)value;\n    return value;\n  }\n  array[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "execute_function_08002b68",
                "param_1": "array",
                "param_2": "array_length",
                "param_3": "value",
                "param_4": "shift",
                "param_5": "byte_value",
                "iVar1": "result",
                "uVar2": "byte_count",
                "uVar3": "shifted_value"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_application_08002c00",
            "code": "\nvoid initializeApplication_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_application_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_function_08002c14",
            "code": "\nvoid initialize_function_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_function_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_function_08002c1e",
            "code": "\nvoid initializeFunction_08002c1e(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002948(1,0xffff,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_function_08002c1e",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(param2,param3,param3,DAT_200005d4,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_data_08002ce0",
            "code": "\nint initializeData_08002ce0(int data)\n\n{\n  int newData;\n  \n  FUN_0800314e(data + 0x40);\n  newData = data + 0x44;\n  FUN_080032bc(newData,data,0x40);\n  *(undefined *)(data + 0xc4) = 0;\n  *(undefined4 *)(data + 200) = 0;\n  *(undefined *)(data + 0x1f8) = 0;\n  FUN_08003306(newData,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(newData,0x90,&LAB_08002c40_1,0);\n  FUN_08003306(newData,0xc0,&LAB_08002c7c_1,0);\n  FUN_08003306(newData,0xd0,&LAB_08002c90_1,0);\n  FUN_08003306(newData,0xf4,&LAB_08002c54_1,0);\n  FUN_08003306(newData,0xf5,&LAB_08002c68_1,0);\n  FUN_08003366(newData,0x71,&LAB_08002ca4_1,0);\n  FUN_08003370(newData,0xf0,&LAB_08002cb8_1,0);\n  FUN_08003346(newData,0x79,&LAB_08002e1a_1,data);\n  FUN_08003350(newData,0xf9,&LAB_08002dea_1,data);\n  FUN_08003350(newData,0xff,&LAB_08002cd0_1,0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_data_08002ce0",
                "param_1": "data",
                "iVar1": "newData"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_param_08002dbc",
            "code": "\nvoid checkParam_08002dbc(int value1,int value2)\n\n{\n  if (value1 != 1) {\n    return;\n  }\n  if (value2 == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_param_08002dbc",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "copy_data_08002ddc",
            "code": "\nvoid copy_data_08002ddc(int src_address,undefined4 dest_address,undefined4 size,undefined4 param_4)\n\n{\n  FUN_0800322c(src_address + 0x40,2,5,param_4,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "copy_data_08002ddc",
                "param_1": "src_address",
                "param_2": "dest_address",
                "param_3": "size"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int dataAddress)\n\n{\n  undefined *dataPtr;\n  \n  if (*(byte *)(dataAddress + 0xc4) == 0) {\n    return;\n  }\n  dataPtr = *(undefined **)(dataAddress + 200);\n  FUN_080031ce(dataAddress + 0x40,*dataPtr,dataPtr[1],*(byte *)(dataAddress + 0xc4) - 2,dataPtr + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "dataAddress",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_param_value_08002e26",
            "code": "\nvoid updateParamValue_08002e26(int baseAddress,undefined4 newValue)\n\n{\n  *(undefined4 *)(baseAddress + 0xc0) = newValue;\n  FUN_08003154(baseAddress + 0x40);\n  FUN_08002ddc(baseAddress);\n  FUN_08002df6(baseAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_param_value_08002e26",
                "param_1": "baseAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "process_file_path_08002e44",
            "code": "\nvoid processFilePath_08002e44(int outputBuffer,int inputBuffer,undefined param3,undefined param4)\n\n{\n  byte byteValue;\n  char charValue;\n  int fileExtensionLength;\n  int slashPosition;\n  undefined *newBuffer;\n  \n  fileExtensionLength = FUN_080099a4(inputBuffer,\".cpp\");\n  slashPosition = FUN_0800997e(inputBuffer,0x2f);\n  if (slashPosition == 0) {\n    slashPosition = FUN_0800997e(inputBuffer,0x5c);\n  }\n  if (slashPosition != 0) {\n    inputBuffer = slashPosition + 1;\n  }\n  if (fileExtensionLength == 0) {\n    charValue = FUN_08000178(inputBuffer);\n    *(char *)(outputBuffer + 0xc4) = charValue + '\\x02';\n  }\n  else {\n    *(char *)(outputBuffer + 0xc4) = ((char)fileExtensionLength - (char)inputBuffer) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(outputBuffer + 200));\n  byteValue = *(byte *)(outputBuffer + 0xc4);\n  newBuffer = (undefined *)FUN_08009190(byteValue + 1);\n  *(undefined **)(outputBuffer + 200) = newBuffer;\n  newBuffer[byteValue] = 0;\n  *newBuffer = param3;\n  newBuffer[1] = param4;\n  FUN_08009954(newBuffer + 2,inputBuffer,*(byte *)(outputBuffer + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "process_file_path_08002e44",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "byteValue",
                "cVar2": "charValue",
                "iVar3": "fileExtensionLength",
                "iVar4": "slashPosition",
                "puVar5": "newBuffer"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_dynamic_function_08002ec4",
            "code": "\nvoid executeDynamicFunction_08002ec4(int functionPointer)\n\n{\n  (**(code **)(**(int **)(functionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_dynamic_function_08002ec4",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "process_return_code_08002ed2",
            "code": "\nvoid processReturnCode_08002ed2(int inputParam)\n\n{\n  uint returnValue;\n  \n  returnValue = (**(code **)(**(int **)(inputParam + 0xc0) + 0xc))();\n  if (returnValue != 0xffffffff) {\n    FUN_08003474(inputParam + 0x44,returnValue & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "process_return_code_08002ed2",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "run_function_08002ef2",
            "code": "\nvoid runFunction_08002ef2(int input1,undefined4 input2,undefined2 input3,undefined4 input4)\n\n{\n  FUN_08003158(input1 + 0x40,input2,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "run_function_08002ef2",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "execute_function_08002efe",
            "code": "\nvoid executeFunction_08002efe(int input,undefined4 arg1,undefined2 arg2,undefined4 arg3)\n\n{\n  FUN_0800319e(input + 0x40,arg1,arg2,arg3,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "execute_function_08002efe",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_memory_08002f0a",
            "code": "\nvoid initializeMemory_08002f0a(int inputValue)\n\n{\n  FUN_0800325a(inputValue + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_memory_08002f0a",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_data_08002f14",
            "code": "\nvoid initialize_data_08002f14(int input_parameter)\n\n{\n  FUN_080032a2(input_parameter + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_data_08002f14",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_code_from_ptr_08002f1e",
            "code": "\nvoid executeCodeFromPtr_08002f1e(int ptr)\n\n{\n  (**(code **)**(undefined4 **)(ptr + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_code_from_ptr_08002f1e",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_value_08002f2c",
            "code": "\nvoid updateDataValue_08002f2c(undefined4 param1,uint dataCode,undefined4 newValue)\n\n{\n  undefined4 tempValue;\n  \n  if (dataCode == 0xd0) {\n    DAT_200005f0 = newValue;\n    return;\n  }\n  if (0xd0 < dataCode) {\n    if (dataCode == 0xf4) {\n      DAT_200005e0 = newValue;\n      return;\n    }\n    tempValue = newValue;\n    if ((dataCode != 0xf5) && (tempValue = DAT_200005e4, dataCode == 0xe0)) {\n      DAT_200005d4 = newValue;\n      return;\n    }\n    DAT_200005e4 = tempValue;\n    return;\n  }\n  if (dataCode == 0x90) {\n    DAT_200005dc = newValue;\n    return;\n  }\n  if (dataCode != 0xc0) {\n    return;\n  }\n  DAT_200005ec = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_value_08002f2c",
                "param_1": "param1",
                "param_2": "dataCode",
                "param_3": "newValue",
                "uVar1": "tempValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "set_dat_value_if_needed_08002f84",
            "code": "\nvoid setDatValueIfNeeded_08002f84(undefined4 undefinedParam,int checkValue,undefined4 newValue)\n\n{\n  if (checkValue == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "set_dat_value_if_needed_08002f84",
                "param_1": "undefinedParam",
                "param_2": "checkValue",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "set_dat_value_08002f94",
            "code": "\nvoid set_dat_value_08002f94(undefined4 input_param,undefined4 unused_param,undefined4 new_dat_value)\n\n{\n  DAT_200005d0 = new_dat_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "set_dat_value_08002f94",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "new_dat_value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_decoded_value_08002fa0",
            "code": "\nundefined get_decoded_value_08002fa0(int offset,int base_address)\n\n{\n  return *(undefined *)(base_address + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_decoded_value_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_value_if_not_equal_08002fa8",
            "code": "\nvoid updateValueIfNotEqual_08002fa8(int baseAddress,int offset,undefined newValue)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_value_if_not_equal_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_ptr_value_08002fba",
            "code": "\nundefined4 getPtrValue_08002fba(int ptrAddress,int index)\n\n{\n  return *(undefined4 *)(ptrAddress + (index + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_ptr_value_08002fba",
                "param_1": "ptrAddress",
                "param_2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_offset_08002fc2",
            "code": "\nvoid storeValueAtOffset_08002fc2(int baseAddress,int offset,undefined4 value)\n\n{\n  *(undefined4 *)(baseAddress + (offset + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_offset_08002fc2",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "iterate_and_perform_action_08002fca",
            "code": "\nvoid iterateAndPerformAction_08002fca(undefined4 unusedParam,undefined4 countParam,int iterationCount,undefined4 paramA,\n                 undefined4 paramB)\n\n{\n  uint iterationVar;\n  \n  for (iterationVar = 0; (int)iterationVar < iterationCount; iterationVar = iterationVar + 1 & 0xff) {\n    FUNC_08008ac4(paramB);\n    FUN_08008a24(countParam,1);\n    FUNC_08008ac4(paramA);\n    FUN_08008a24(countParam,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "iterate_and_perform_action_08002fca",
                "param_1": "unusedParam",
                "param_2": "countParam",
                "param_3": "iterationCount",
                "param_4": "paramA",
                "param_5": "paramB",
                "uVar1": "iterationVar"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_initialize_data_08003002",
            "code": "\nvoid checkAndInitializeData_08003002(int dataPointer)\n\n{\n  if (*(char *)(dataPointer + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(dataPointer,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(dataPointer,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_initialize_data_08003002",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 dataPointer,undefined4 size,undefined4 unknown,undefined4 unknown2)\n\n{\n  FUN_08008c44(&DAT_20000700,size,6,unknown2,unknown2);\n  FUN_08003002(dataPointer);\n  FUN_08002e26(dataPointer,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "dataPointer",
                "param_2": "size",
                "param_3": "unknown",
                "param_4": "unknown2"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_and_execute_0800307a",
            "code": "\nvoid decodeAndExecute_0800307a(undefined4 *functionPointer,uint inputSize,byte *inputData,uint maxOutputSize)\n\n{\n  uint currentByte;\n  uint bitOffset;\n  uint outputSize;\n  uint currentIndex;\n  \n  currentByte = (uint)*inputData;\n  if (maxOutputSize == 0) {\n    maxOutputSize = 0xffffffff;\n  }\n  currentIndex = 0;\n  bitOffset = 0;\n  outputSize = 0;\n  while ((currentIndex < inputSize && (outputSize < maxOutputSize))) {\n    (***(code ***)(undefined4 *)*functionPointer)\n              ((undefined4 *)*functionPointer,((uint)inputData[currentIndex] << (bitOffset & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)inputData[currentIndex] >> (7 - bitOffset & 0xff) & 0xff;\n    bitOffset = bitOffset + 1;\n    while ((outputSize = outputSize + 1, 6 < bitOffset && (outputSize < maxOutputSize))) {\n      (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      bitOffset = bitOffset - 7;\n    }\n    currentIndex = currentIndex + 1;\n  }\n  if ((bitOffset != 0) && (outputSize < maxOutputSize)) {\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,(1 << (bitOffset & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_and_execute_0800307a",
                "param_1": "functionPointer",
                "param_2": "inputSize",
                "param_3": "inputData",
                "param_4": "maxOutputSize",
                "uVar1": "currentByte",
                "uVar2": "bitOffset",
                "uVar3": "outputSize",
                "uVar4": "currentIndex"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_operations_08003106",
            "code": "\nvoid executeOperations_08003106(undefined4 *operations,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *codePointer;\n  \n  codePointer = (undefined4 *)*operations;\n  if (codePointer != (undefined4 *)0x0) {\n    (**(code **)*codePointer)(codePointer,0xf0);\n    (***(code ***)(undefined4 *)*operations)((undefined4 *)*operations,0x6f);\n    (***(code ***)(undefined4 *)*operations)((undefined4 *)*operations,param1);\n    FUN_0800307a(operations,param2,param3,param2);\n    (***(code ***)(undefined4 *)*operations)((undefined4 *)*operations,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_operations_08003106",
                "param_1": "operations",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "puVar1": "codePointer"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_variable_0800314e",
            "code": "\nvoid initializeVariable_0800314e(undefined4 *outputPointer)\n\n{\n  *outputPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_variable_0800314e",
                "param_1": "outputPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "assign_parameter_value_08003154",
            "code": "\nvoid assignParameterValue_08003154(undefined4 *output,undefined4 input)\n\n{\n  *output = input;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "assign_parameter_value_08003154",
                "param_1": "output",
                "param_2": "input"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_code_08003158",
            "code": "\nvoid executeCode_08003158(undefined4 *functionPointer,uint condition,ushort value)\n\n{\n  undefined4 *functionPointerValue;\n  ushort modifiedValue;\n  \n  functionPointerValue = (undefined4 *)*functionPointer;\n  if (functionPointerValue != (undefined4 *)0x0) {\n    modifiedValue = value;\n    if (((int)condition < 0x10) && (value < 0x4000)) {\n      (**(code **)*functionPointerValue)(functionPointerValue,condition | 0xe0);\n      FUN_0800307a(functionPointer,2,&modifiedValue);\n    }\n    else {\n      FUN_08003106(functionPointer,condition,2,&modifiedValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_code_08003158",
                "param_1": "functionPointer",
                "param_2": "condition",
                "param_3": "value",
                "puVar1": "functionPointerValue",
                "local_a": "modifiedValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_0800319e",
            "code": "\nvoid executeFunction_0800319e(undefined4 *functionPointer,uint flags,undefined2 arg)\n\n{\n  undefined4 *ptrFunction;\n  undefined2 localArg;\n  \n  ptrFunction = (undefined4 *)*functionPointer;\n  if (ptrFunction != (undefined4 *)0x0) {\n    localArg = arg;\n    (**(code **)*ptrFunction)(ptrFunction,flags & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&localArg);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_0800319e",
                "param_1": "functionPointer",
                "param_2": "flags",
                "param_3": "arg",
                "puVar1": "ptrFunction",
                "local_a": "localArg"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid execute_function_080031ce(undefined4 *function_ptr,undefined4 param_2,undefined4 param_3,uint array_size,int starting_index\n                 )\n\n{\n  undefined4 *function_pointer;\n  uint index;\n  \n  function_pointer = (undefined4 *)*function_ptr;\n  if (function_pointer != (undefined4 *)0x0) {\n    (**(code **)*function_pointer)(function_pointer,0xf0,param_3,*(code **)*function_pointer,array_size);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0x79);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param_2);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param_3);\n    for (index = 0; index < array_size; index = index + 1) {\n      FUN_0800307a(function_ptr,1,starting_index + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "function_ptr",
                "param_4": "array_size",
                "param_5": "starting_index",
                "puVar1": "function_pointer",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 *functionPtrAddress;\n  \n  functionPtrAddress = (undefined4 *)*functionPointer;\n  if (functionPtrAddress != (undefined4 *)0x0) {\n    (**(code **)*functionPtrAddress)(functionPtrAddress,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,arg2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,arg3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "param_2": "arg2",
                "param_3": "arg3",
                "puVar1": "functionPtrAddress"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid execute_function_0800325a(undefined4 *function_pointer,undefined4 param_2_value,uint loop_iterations,int param_4_value)\n\n{\n  undefined4 *pointer;\n  uint loop_counter;\n  \n  pointer = (undefined4 *)*function_pointer;\n  if (pointer != (undefined4 *)0x0) {\n    (**(code **)*pointer)(pointer,0xf0);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_2_value);\n    for (loop_counter = 0; loop_counter < loop_iterations; loop_counter = loop_counter + 1) {\n      FUN_0800307a(function_pointer,1,param_4_value + loop_counter,0);\n    }\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "function_pointer",
                "param_2": "param_2_value",
                "param_3": "loop_iterations",
                "param_4": "param_4_value",
                "puVar1": "pointer",
                "uVar2": "loop_counter"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "initialize_data_080032a2",
            "code": "\nvoid initializeData_080032a2(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(data2);\n  FUN_0800325a(data1,0x71,result,data2,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "initialize_data_080032a2",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_memory_080032bc",
            "code": "\nvoid initializeMemory_080032bc(int memory_address,int value1,undefined4 value2)\n\n{\n  *(int *)(memory_address + 4) = value1;\n  *(undefined4 *)(memory_address + 8) = value2;\n  *(undefined *)(memory_address + 0xc) = 0;\n  *(undefined *)(memory_address + 0xd) = 0;\n  *(undefined4 *)(memory_address + 0x10) = 0;\n  *(undefined *)(memory_address + 0x14) = 0;\n  *(undefined4 *)(memory_address + 0x18) = 0;\n  *(undefined4 *)(memory_address + 0x1c) = 0;\n  *(undefined4 *)(memory_address + 0x20) = 0;\n  *(undefined4 *)(memory_address + 0x24) = 0;\n  *(undefined4 *)(memory_address + 0x28) = 0;\n  *(undefined4 *)(memory_address + 0x2c) = 0;\n  *(undefined4 *)(memory_address + 0x30) = 0;\n  *(undefined4 *)(memory_address + 0x34) = 0;\n  *(undefined4 *)(memory_address + 0x38) = 0;\n  *(undefined4 *)(memory_address + 0x3c) = 0;\n  *(undefined4 *)(memory_address + 0x40) = 0;\n  *(undefined4 *)(memory_address + 0x44) = 0;\n  *(undefined4 *)(memory_address + 0x48) = 0;\n  *(undefined4 *)(memory_address + 0x4c) = 0;\n  *(undefined4 *)(memory_address + 0x50) = 0;\n  *(undefined4 *)(memory_address + 0x54) = 0;\n  *(undefined4 *)(memory_address + 0x58) = 0;\n  *(undefined4 *)(memory_address + 0x5c) = 0;\n  *(undefined4 *)(memory_address + 0x60) = 0;\n  *(undefined4 *)(memory_address + 100) = 0;\n  *(undefined4 *)(memory_address + 0x68) = 0;\n  *(undefined4 *)(memory_address + 0x6c) = 0;\n  *(undefined4 *)(memory_address + 0x70) = 0;\n  *(undefined4 *)(memory_address + 0x74) = 0;\n  *(undefined4 *)(memory_address + 0x78) = 0;\n  *(bool *)memory_address = value1 == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_memory_080032bc",
                "param_1": "memory_address",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_parameters_08003306",
            "code": "\nvoid updateParameters_08003306(int ptr_obj,uint value,undefined4 new_param_1,undefined4 new_param_2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(ptr_obj + 0x58) = new_param_1;\n    *(undefined4 *)(ptr_obj + 0x28) = new_param_2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(ptr_obj + 0x5c) = new_param_1;\n      *(undefined4 *)(ptr_obj + 0x2c) = new_param_2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(ptr_obj + 0x60) = new_param_1;\n      *(undefined4 *)(ptr_obj + 0x30) = new_param_2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(ptr_obj + 0x4c) = new_param_1;\n      *(undefined4 *)(ptr_obj + 0x1c) = new_param_2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(ptr_obj + 0x50) = new_param_1;\n    *(undefined4 *)(ptr_obj + 0x20) = new_param_2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(ptr_obj + 0x54) = new_param_1;\n    *(undefined4 *)(ptr_obj + 0x24) = new_param_2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_parameters_08003306",
                "param_1": "ptr_obj",
                "param_2": "value",
                "param_3": "new_param_1",
                "param_4": "new_param_2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_params_08003346",
            "code": "\nvoid updateParams_08003346(int objAddress,int condition,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (condition == 0x79) {\n    *(undefined4 *)(objAddress + 0x70) = newValue1;\n    *(undefined4 *)(objAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_params_08003346",
                "param_1": "objAddress",
                "param_2": "condition",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_data_08003350",
            "code": "\nvoid updateData_08003350(int dataStruct,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(dataStruct + 0x74) = newValue1;\n    *(undefined4 *)(dataStruct + 0x38) = newValue2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(dataStruct + 0x78) = newValue1;\n  *(undefined4 *)(dataStruct + 0x48) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_data_08003350",
                "param_1": "dataStruct",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_data_08003366",
            "code": "\nvoid updateData_08003366(int dataAddress,int param,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (param == 0x71) {\n    *(undefined4 *)(dataAddress + 0x68) = newValue1;\n    *(undefined4 *)(dataAddress + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_data_08003366",
                "param_1": "dataAddress",
                "param_2": "param",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int objAddress,undefined4 param2,undefined4 param3Value,undefined4 param4Value)\n\n{\n  *(undefined4 *)(objAddress + 0x6c) = param3Value;\n  *(undefined4 *)(objAddress + 0x44) = param4Value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "objAddress",
                "param_2": "param2",
                "param_3": "param3Value",
                "param_4": "param4Value"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_memory_08003376",
            "code": "\nvoid updateMemory_08003376(undefined *dataStruct,undefined newValue,uint index)\n\n{\n  bool shouldUpdate;\n  \n  if (index < *(uint *)(dataStruct + 8)) {\n    shouldUpdate = false;\n  }\n  else {\n    shouldUpdate = true;\n    if (*(code **)(dataStruct + 100) != (code *)0x0) {\n      *dataStruct = 1;\n      (**(code **)(dataStruct + 100))(*(undefined4 *)(dataStruct + 0x3c));\n      if (index < *(uint *)(dataStruct + 8)) {\n        shouldUpdate = false;\n      }\n      else {\n        shouldUpdate = true;\n      }\n    }\n  }\n  if (!shouldUpdate) {\n    *(undefined *)(*(int *)(dataStruct + 4) + index) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_memory_08003376",
                "param_1": "dataStruct",
                "param_2": "newValue",
                "param_3": "index",
                "bVar1": "shouldUpdate"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 ptr,uint length,int data)\n\n{\n  byte byteValue;\n  int index;\n  uint counter;\n  \n  index = 0;\n  for (counter = 0; counter < length; counter = counter + 2) {\n    byteValue = *(byte *)(data + counter);\n    *(byte *)(data + index) = byteValue;\n    *(byte *)(data + index) = *(char *)(data + counter + 1) << 7 | byteValue;\n    index = index + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "ptr",
                "param_2": "length",
                "param_3": "data",
                "bVar1": "byteValue",
                "iVar2": "index",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int returnValue;\n  char *inputCharPtr;\n  \n  inputCharPtr = *(char **)(inputData + 4);\n  firstChar = *inputCharPtr;\n  if (firstChar == 'q') {\n    if (*(int *)(inputData + 0x68) != 0) {\n      returnValue = FUN_080033a8(inputData,*(int *)(inputData + 0x18) + -1,inputCharPtr + 1,inputCharPtr,param4);\n      FUN_08003376(inputData,0,returnValue + 1);\n      (**(code **)(inputData + 0x68))(*(undefined4 *)(inputData + 0x40),*(int *)(inputData + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputData + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputData + 0x18) < 3) {\n        (**(code **)(inputData + 0x70))(*(undefined4 *)(inputData + 0x34),0,0);\n        return;\n      }\n      returnValue = FUN_080033a8(inputData,*(uint *)(inputData + 0x18) - 3,inputCharPtr + 3,inputCharPtr,param4);\n      FUN_08003376(inputData,0,returnValue + 3);\n      returnValue = *(int *)(inputData + 4);\n      (**(code **)(inputData + 0x70))\n                (*(undefined4 *)(inputData + 0x34),*(undefined *)(returnValue + 1),*(undefined *)(returnValue + 2)\n                 ,returnValue + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputData + 0x6c) != (code *)0x0) {\n    (**(code **)(inputData + 0x6c))\n              (*(undefined4 *)(inputData + 0x44),firstChar,*(int *)(inputData + 0x18) + -1,inputCharPtr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "returnValue",
                "pcVar3": "inputCharPtr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_0800344a",
            "code": "\nvoid initializeData_0800344a(int data_ptr)\n\n{\n  uint index;\n  \n  *(undefined4 *)(data_ptr + 0x10) = 0;\n  *(undefined *)(data_ptr + 0xc) = 0;\n  *(undefined *)(data_ptr + 0xd) = 0;\n  for (index = 0; index < *(uint *)(data_ptr + 8); index = index + 1) {\n    *(undefined *)(*(int *)(data_ptr + 4) + index) = 0;\n  }\n  *(undefined *)(data_ptr + 0x14) = 0;\n  *(undefined4 *)(data_ptr + 0x18) = 0;\n  if (*(code **)(data_ptr + 0x78) != (code *)0x0) {\n    (**(code **)(data_ptr + 0x78))(*(undefined4 *)(data_ptr + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "data_ptr",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_data_08003474",
            "code": "\nvoid processData_08003474(int data,uint value)\n\n{\n  byte tempByte;\n  \n  if (*(char *)(data + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(data,value,*(undefined4 *)(data + 0x18));\n      *(int *)(data + 0x18) = *(int *)(data + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(data + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(data + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(data + 0x14) = 1;\n      *(undefined4 *)(data + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data + 0x10) = 2;\n        *(char *)(data + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(data + 0x10) = 1;\n      *(char *)(data + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(data);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(data + 0x74) != (code *)0x0) {\n      (**(code **)(data + 0x74))(*(undefined4 *)(data + 0x38));\n    }\n  }\n  else {\n    *(int *)(data + 0x10) = *(int *)(data + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(data + 0x10) == 0) && (tempByte = *(byte *)(data + 0xc), tempByte != 0)) {\n      if (tempByte == 0xd0) {\n        if (*(code **)(data + 0x58) != (code *)0x0) {\n          (**(code **)(data + 0x58))\n                    (*(undefined4 *)(data + 0x28),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (tempByte < 0xd1) {\n        if (tempByte == 0x90) {\n          if (*(code **)(data + 0x50) != (code *)0x0) {\n            (**(code **)(data + 0x50))\n                      (*(undefined4 *)(data + 0x20),*(undefined *)(data + 0xd),\n                       (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n          }\n        }\n        else if ((tempByte == 0xc0) && (*(code **)(data + 0x54) != (code *)0x0)) {\n          (**(code **)(data + 0x54))\n                    (*(undefined4 *)(data + 0x24),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (tempByte == 0xf4) {\n        if (*(code **)(data + 0x5c) != (code *)0x0) {\n          (**(code **)(data + 0x5c))\n                    (*(undefined4 *)(data + 0x2c),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (tempByte == 0xf5) {\n        if (*(code **)(data + 0x60) != (code *)0x0) {\n          (**(code **)(data + 0x60))\n                    (*(undefined4 *)(data + 0x30),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if ((tempByte == 0xe0) && (*(code **)(data + 0x4c) != (code *)0x0)) {\n        (**(code **)(data + 0x4c))\n                  (*(undefined4 *)(data + 0x1c),*(undefined *)(data + 0xd),\n                   (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n      }\n      *(undefined *)(data + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "data",
                "param_2": "value",
                "bVar1": "tempByte"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_hardware_080035b8",
            "code": "\nvoid initializeHardware_080035b8(void)\n\n{\n  int result;\n  uint time;\n  undefined4 hardwareConfig [2];\n  undefined4 configValue;\n  undefined4 register1;\n  undefined4 register2;\n  undefined4 register3;\n  undefined4 register4;\n  undefined4 register5;\n  undefined4 configArray [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  configArray[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08005460(configArray);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  register1 = 0xf;\n  register2 = 2;\n  register3 = 0;\n  register4 = 0x400;\n  register5 = 0;\n  result = FUN_080058ac(&register1);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  hardwareConfig[0] = 2;\n  configValue = 0x8000;\n  result = FUN_08005aa4(hardwareConfig);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  time = FUN_08005a1c();\n  FUN_08003fd8(time / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_hardware_080035b8",
                "local_54": "hardwareConfig",
                "local_4c": "configValue",
                "local_44": "register1",
                "local_40": "register2",
                "local_3c": "register3",
                "local_38": "register4",
                "local_34": "register5",
                "local_30": "configArray",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5",
                "iVar1": "result",
                "uVar2": "time"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_system_080036a2",
            "code": "\nvoid initialize_system_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_system_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_character_index_080036ac",
            "code": "\nuint find_character_index_080036ac(int input_character)\n\n{\n  uint index;\n  \n  if ((uint)(input_character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "input_character",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "initialize_process_080036d8",
            "code": "\nundefined4 initializeProcess_080036d8(uint processId)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < processId) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,processId,0);\n  DAT_20000010 = processId;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "initialize_process_080036d8",
                "param_1": "processId",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "initialize_hardware_08003724",
            "code": "\n\n\nundefined4 initializeHardware_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "initialize_hardware_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "update_sum_08003748",
            "code": "\nvoid updateSum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "update_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_08003760",
            "code": "\nundefined4 get_data_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "check_and_update_status_0800376c",
            "code": "\nundefined4 checkAndUpdateStatus_0800376c(uint **doublePointer,uint value)\n\n{\n  int initialValue;\n  uint factor;\n  int loopValue;\n  undefined4 result;\n  uint *pointer;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08003760();\n  calculationResult = DAT_20000018;\n  pointer = *doublePointer;\n  if ((pointer[2] & 0x100) == 0) {\n    if (((pointer[1] & 0x100) == 0) && ((pointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**doublePointer & 2) != 0) goto LAB_0800387e;\n      } while ((value == 0xffffffff) ||\n              ((value != 0 && (loopValue = FUN_08003760(), (uint)(loopValue - initialValue) <= value))));\n      doublePointer[10] = (uint *)((uint)doublePointer[10] | 4);\n      *(undefined *)(doublePointer + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08005bb8(2);\n      pointer = *doublePointer;\n      if (((pointer[4] & 0x24924924) == 0) && ((pointer[3] & 0x924924) == 0)) {\n        if ((pointer[4] & 0x12492492) == 0) {\n          if ((pointer[3] & 0x492492) == 0) {\n            loopValue = 0x14;\n          }\n          else {\n            loopValue = 0x29;\n          }\n        }\n        else {\n          loopValue = 0x29;\n        }\n      }\n      else if (((pointer[4] & 0x12492492) == 0) && ((pointer[3] & 0x492492) == 0)) {\n        loopValue = 0x54;\n      }\n      else if ((pointer[4] & 0x249249) == 0) {\n        if ((pointer[3] & 0x249249) == 0) {\n          loopValue = 0x54;\n        }\n        else {\n          loopValue = 0xfc;\n        }\n      }\n      else {\n        loopValue = 0xfc;\n      }\n      calculationResult = (calculationResult / factor) * loopValue;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((value != 0xffffffff) &&\n           ((value == 0 || (loopValue = FUN_08003760(), value < (uint)(loopValue - initialValue))))) {\n          doublePointer[10] = (uint *)((uint)doublePointer[10] | 4);\n          *(undefined *)(doublePointer + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **doublePointer = 0xffffffed;\n      doublePointer[10] = (uint *)((uint)doublePointer[10] | 0x200);\n      if (((*doublePointer)[2] & 0xe0000) == 0xe0000) {\n        if (doublePointer[3] == (uint *)0x0) {\n          doublePointer[10] = (uint *)((uint)doublePointer[10] & 0xfffffeff);\n          if (((uint)doublePointer[10] & 0x1000) == 0) {\n            doublePointer[10] = (uint *)((uint)doublePointer[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    doublePointer[10] = (uint *)((uint)doublePointer[10] | 0x20);\n    *(undefined *)(doublePointer + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "check_and_update_status_0800376c",
                "param_1": "doublePointer",
                "param_2": "value",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "loopValue",
                "uVar4": "result",
                "puVar5": "pointer",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *inputPtr)\n\n{\n  return *(undefined4 *)(*inputPtr + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "inputPtr"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_settings_080038e4",
            "code": "\nundefined4 updateSettings_080038e4(int *settingsPtr,uint *dataPtr)\n\n{\n  undefined4 returnValue;\n  uint value;\n  int counter;\n  \n  if (*(char *)(settingsPtr + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(settingsPtr + 9) = 1;\n    value = dataPtr[1];\n    if (value < 7) {\n      value = value * 5 - 5;\n      *(uint *)(*settingsPtr + 0x34) =\n           *dataPtr << (value & 0xff) | *(uint *)(*settingsPtr + 0x34) & ~(0x1f << (value & 0xff));\n    }\n    else if (value < 0xd) {\n      value = value * 5 - 0x23;\n      *(uint *)(*settingsPtr + 0x30) =\n           *dataPtr << (value & 0xff) | *(uint *)(*settingsPtr + 0x30) & ~(0x1f << (value & 0xff));\n    }\n    else {\n      value = value * 5 - 0x41;\n      *(uint *)(*settingsPtr + 0x2c) =\n           *dataPtr << (value & 0xff) | *(uint *)(*settingsPtr + 0x2c) & ~(0x1f << (value & 0xff));\n    }\n    value = *dataPtr;\n    if (value < 10) {\n      *(uint *)(*settingsPtr + 0x10) =\n           dataPtr[2] << (value * 3 & 0xff) |\n           *(uint *)(*settingsPtr + 0x10) & ~(7 << (value * 3 & 0xff));\n    }\n    else {\n      value = value * 3 - 0x1e;\n      *(uint *)(*settingsPtr + 0xc) =\n           dataPtr[2] << (value & 0xff) | *(uint *)(*settingsPtr + 0xc) & ~(7 << (value & 0xff));\n    }\n    if (*dataPtr - 0x10 < 2) {\n      if (*settingsPtr == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*dataPtr == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        settingsPtr[10] = settingsPtr[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(settingsPtr + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_settings_080038e4",
                "param_1": "settingsPtr",
                "param_2": "dataPtr",
                "uVar1": "returnValue",
                "uVar2": "value",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_offset_value_08003a1c",
            "code": "\nundefined4 getOffsetValue_08003a1c(int inputOffset)\n\n{\n  return *(undefined4 *)(inputOffset + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_offset_value_08003a1c",
                "param_1": "inputOffset"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "initialize_device_08003a20",
            "code": "\nundefined4 initializeDevice_08003a20(int *devicePointer,undefined4 param2)\n\n{\n  int iterationVar1;\n  undefined4 returnValue;\n  int dataVar;\n  uint loopCounter;\n  \n  dataVar = *devicePointer;\n  if ((*(uint *)(dataVar + 8) & 1) == 0) {\n    *(uint *)(dataVar + 8) = *(uint *)(dataVar + 8) | 1;\n    for (loopCounter = DAT_20000018 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    dataVar = FUN_08003760(devicePointer,param2,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*devicePointer + 8) & 1) != 0) {\n        return 0;\n      }\n      iterationVar1 = FUN_08003760();\n    } while ((uint)(iterationVar1 - dataVar) < 3);\n    devicePointer[10] = devicePointer[10] | 0x10;\n    devicePointer[0xb] = devicePointer[0xb] | 1;\n    *(undefined *)(devicePointer + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "initialize_device_08003a20",
                "param_1": "devicePointer",
                "param_2": "param2",
                "iVar1": "iterationVar1",
                "iVar3": "dataVar",
                "uVar2": "returnValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "initialize_flags_08003aa0",
            "code": "\n\n\nint initializeFlags_08003aa0(int *parameters)\n\n{\n  int result;\n  undefined4 *pointer;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      pointer = (undefined4 *)*parameters;\n      if ((pointer == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((pointer[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *pointer = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "initialize_flags_08003aa0",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "update_data_08003b8c",
            "code": "\nundefined4 updateData_08003b8c(int *data)\n\n{\n  int iteration;\n  int value;\n  \n  value = *data;\n  if ((*(uint *)(value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value + 8) = *(uint *)(value + 8) & 0xfffffffe;\n  value = FUN_08003760();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    iteration = FUN_08003760();\n  } while ((uint)(iteration - value) < 3);\n  flags1 = flags1 | 0x10;\n  flags2 = flags2 | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "update_data_08003b8c",
                "param_1": "data",
                "iVar1": "iteration",
                "iVar2": "value",
                "param_1[10]": "flags1",
                "param_1[0xb]": "flags2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "process_data_08003bd8",
            "code": "\nundefined4 processData_08003bd8(int *data)\n\n{\n  int returnValue;\n  uint bitwiseResult1;\n  uint bitwiseResult2;\n  \n  if (data == (int *)0x0) {\n    return 1;\n  }\n  if (data[10] == 0) {\n    data[0xb] = 0;\n    *(undefined *)(data + 9) = 0;\n    FUN_08006ca8();\n  }\n  returnValue = FUN_08003b8c(data);\n  if (((data[10] & 0x10U) == 0) && (returnValue == 0)) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    bitwiseResult1 = data[1] | data[7] | data[3] << 1;\n    if (data[2] == 0x100) {\n      bitwiseResult2 = 0x100;\n    }\n    else {\n      bitwiseResult2 = 0;\n      if (data[2] == 1) {\n        bitwiseResult2 = 0x100;\n      }\n    }\n    if (data[5] == 1) {\n      if (data[3] == 0) {\n        bitwiseResult2 = bitwiseResult2 | (data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        data[0xb] = data[0xb] | 1;\n      }\n    }\n    *(uint *)(*data + 4) = bitwiseResult2 | *(uint *)(*data + 4) & 0xffff16ff;\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xffe1f7fd | bitwiseResult1;\n    if ((data[2] == 0x100) || (data[2] == 1)) {\n      bitwiseResult2 = (data[4] + -1) * 0x100000;\n    }\n    else {\n      bitwiseResult2 = 0;\n    }\n    *(uint *)(*data + 0x2c) = bitwiseResult2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n    if (bitwiseResult1 != (*(uint *)(*data + 8) & 0xff1f0efe)) {\n      data[10] = data[10] & 0xffffffedU | 0x10;\n      data[0xb] = data[0xb] | 1;\n      return 1;\n    }\n    data[0xb] = 0;\n    data[10] = data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  data[10] = data[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "process_data_08003bd8",
                "param_1": "data",
                "iVar1": "returnValue",
                "uVar2": "bitwiseResult1",
                "uVar3": "bitwiseResult2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "clear_permissions_08003ce8",
            "code": "\nint clearPermissions_08003ce8(int *permissionData)\n\n{\n  int result;\n  \n  if (permissionData == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    permissionData[10] = permissionData[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*permissionData = 0xffffffe0;\n      *(uint *)(*permissionData + 4) = *(uint *)(*permissionData + 4) & 0xff3f0000;\n      *(uint *)(*permissionData + 8) = *(uint *)(*permissionData + 8) & 0xff0106f0;\n      *(uint *)(*permissionData + 0xc) = *(uint *)(*permissionData + 0xc) & 0xff000000;\n      *(uint *)(*permissionData + 0x10) = *(uint *)(*permissionData + 0x10) & 0xc0000000;\n      *(uint *)(*permissionData + 0x14) = *(uint *)(*permissionData + 0x14) & 0xfffff000;\n      *(uint *)(*permissionData + 0x18) = *(uint *)(*permissionData + 0x18) & 0xfffff000;\n      *(uint *)(*permissionData + 0x1c) = *(uint *)(*permissionData + 0x1c) & 0xfffff000;\n      *(uint *)(*permissionData + 0x20) = *(uint *)(*permissionData + 0x20) & 0xfffff000;\n      *(uint *)(*permissionData + 0x24) = *(uint *)(*permissionData + 0x24) & 0xfffff000;\n      *(uint *)(*permissionData + 0x28) = *(uint *)(*permissionData + 0x28) & 0xfffff000;\n      *(uint *)(*permissionData + 0x2c) = *(uint *)(*permissionData + 0x2c) & 0xff000000;\n      *(uint *)(*permissionData + 0x2c) = *(uint *)(*permissionData + 0x2c) & 0xff000000;\n      *(uint *)(*permissionData + 0x30) = *(uint *)(*permissionData + 0x30) & 0xc0000000;\n      *(uint *)(*permissionData + 0x34) = *(uint *)(*permissionData + 0x34) & 0xc0000000;\n      *(uint *)(*permissionData + 0x38) = *(uint *)(*permissionData + 0x38) & 0xffc00000;\n      *(uint *)(*permissionData + 0x38) = *(uint *)(*permissionData + 0x38) & 0xffc00000;\n      FUN_08006d24(permissionData);\n      permissionData[0xb] = 0;\n      permissionData[10] = 0;\n    }\n    *(undefined *)(permissionData + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "clear_permissions_08003ce8",
                "param_1": "permissionData",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "update_flag_and_return_result_08003de4",
            "code": "\nint updateFlagAndReturnResult_08003de4(int data)\n\n{\n  int result;\n  \n  if (*(char *)(data + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(data + 0x28) = *(uint *)(data + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(data + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "update_flag_and_return_result_08003de4",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "check_and_process_data_08003e20",
            "code": "\nint checkAndProcessData_08003e20(int *data)\n\n{\n  uint constant1;\n  int result;\n  uint constant2;\n  int tempVar1;\n  int tempVar2;\n  int loopCounter;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    constant1 = DAT_20000018;\n    constant2 = FUN_08005bb8(2);\n    for (loopCounter = constant1 / constant2 << 1; loopCounter != 0; loopCounter = loopCounter + -1) {\n    }\n    FUN_08003a20(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    tempVar1 = FUN_08003760();\n    while (tempVar2 = *data, (*(uint *)(tempVar2 + 8) & 8) != 0) {\n      tempVar2 = FUN_08003760();\n      if (10 < (uint)(tempVar2 - tempVar1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) | 4;\n    tempVar1 = FUN_08003760();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      tempVar2 = FUN_08003760();\n      if (10 < (uint)(tempVar2 - tempVar1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "check_and_process_data_08003e20",
                "param_1": "data",
                "uVar1": "constant1",
                "iVar2": "result",
                "uVar3": "constant2",
                "iVar4": "tempVar1",
                "iVar5": "tempVar2",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "set_bits_08003f0c",
            "code": "\n\n\nvoid setBits_08003f0c(uint input)\n\n{\n  _DAT_e000ed0c = (input & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "set_bits_08003f0c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "convert_and_store_data_08003f30",
            "code": "\n\n\nvoid convertAndStoreData_08003f30(uint source,uint mask,uint data)\n\n{\n  uint shiftAmount;\n  uint remainingBits;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftAmount;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (mask & (1 << (remainingBits & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & data;\n  if ((int)source < 0) {\n    *(char *)((source & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(source + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "convert_and_store_data_08003f30",
                "param_1": "source",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "shiftAmount",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_08003f94",
            "code": "\nvoid setBit_08003f94(uint input)\n\n{\n  if (-1 < (int)input) {\n    *(int *)((input >> 5) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_08003fb0",
            "code": "\nvoid setBitInMemory_08003fb0(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n    DataSynchronizationBarrier(0xf);\n    InstructionSynchronizationBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "set_limits_08003fd8",
            "code": "\n\n\nundefined4 setLimits_08003fd8(int input)\n\n{\n  if (input - 1U < 0x1000000) {\n    _DAT_e000e014 = input - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "set_limits_08003fd8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_08004004",
            "code": "\nvoid setBit_08004004(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_08004004",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_e000e010_08004024",
            "code": "\n\n\nvoid update_e000e010_08004024(int input_value)\n\n{\n  if (input_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_e000e010_08004024",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_system_08004046",
            "code": "\nvoid initialize_system_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_system_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "configure_data_08004050",
            "code": "\n\n\nundefined4 configureData_08004050(uint **data)\n\n{\n  uint *currentValue;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  currentValue = *data;\n  if (currentValue == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentValue == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentValue == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentValue == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentValue == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentValue == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(code *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "configure_data_08004050",
                "param_1": "data",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_flags_and_registers_080040e8",
            "code": "\n\n\nvoid updateFlagsAndRegisters_080040e8(uint *outputArray,uint *inputArray)\n\n{\n  uint *outputArrayPtr;\n  uint bitMask;\n  uint inputArrayMasked;\n  uint index;\n  uint inputValue;\n  uint updatedValue;\n  int offset;\n  int registerIndex;\n  \n  updatedValue = 0;\n  index = 0;\n  do {\n    if (0xf < index) {\n      return;\n    }\n    bitMask = 1 << (index & 0xff);\n    inputArrayMasked = *inputArray & bitMask;\n    if (bitMask == inputArrayMasked) {\n      inputValue = inputArray[1];\n      if (inputValue == 0x12) {\n        updatedValue = inputArray[3] + 0xc;\n      }\n      else if (inputValue < 0x13) {\n        if (inputValue == 2) {\n          updatedValue = inputArray[3] + 8;\n        }\n        else if (inputValue < 3) {\n          if (inputValue == 0) goto LAB_0800423a;\n          if (inputValue == 1) {\n            updatedValue = inputArray[3];\n          }\n        }\n        else if (inputValue == 3) {\n          updatedValue = 0;\n        }\n        else if (inputValue == 0x11) {\n          updatedValue = inputArray[3] + 4;\n        }\n      }\n      else if (inputValue == 0x10210000) {\nLAB_0800423a:\n        if (inputArray[2] == 0) {\n          updatedValue = 4;\n        }\n        else if (inputArray[2] == 1) {\n          outputArray[4] = bitMask;\n          updatedValue = 8;\n        }\n        else {\n          outputArray[5] = bitMask;\n          updatedValue = 8;\n        }\n      }\n      else if (inputValue < 0x10210001) {\n        if ((inputValue == 0x10110000) || (inputValue == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((inputValue == 0x10310000) || ((inputValue == 0x10320000 || (inputValue == 0x10220000))))\n      goto LAB_0800423a;\n      bitMask = index;\n      outputArrayPtr = outputArray;\n      if (0xff < inputArrayMasked) {\n        bitMask = index - 8;\n        outputArrayPtr = outputArray + 1;\n      }\n      *outputArrayPtr = *outputArrayPtr & ~(0xf << (bitMask << 2 & 0xff)) | updatedValue << (bitMask << 2 & 0xff);\n      if ((inputArray[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        offset = (index & 3) << 2;\n        if (outputArray == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (outputArray == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (outputArray == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (outputArray == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << offset) | registerIndex << offset;\n        if ((inputArray[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~inputArrayMasked;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | inputArrayMasked;\n        }\n        if ((inputArray[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~inputArrayMasked;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | inputArrayMasked;\n        }\n        if ((inputArray[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~inputArrayMasked;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | inputArrayMasked;\n        }\n        if ((inputArray[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~inputArrayMasked;\n        }\n        else {\n          _DAT_4001040c = inputArrayMasked | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_flags_and_registers_080040e8",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "puVar1": "outputArrayPtr",
                "uVar2": "bitMask",
                "uVar3": "inputArrayMasked",
                "uVar4": "index",
                "uVar5": "inputValue",
                "uVar6": "updatedValue",
                "iVar7": "offset",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_and_return_true_if_set_080042d4",
            "code": "\nundefined4 check_bit_and_return_true_if_set_080042d4(int input_value,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(input_value + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_and_return_true_if_set_080042d4",
                "param_1": "input_value",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objectAddress,int newValue,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objectAddress",
                "param_2": "newValue",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_and_call_function_080042f0",
            "code": "\n\n\nvoid update_and_call_function_080042f0(uint input_value)\n\n{\n  if ((_DAT_40010414 & input_value) != 0) {\n    _DAT_40010414 = input_value;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_and_call_function_080042f0",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "set_register_value_0800430c",
            "code": "\nundefined4 setRegisterValue_0800430c(int *register)\n\n{\n  if (*(char *)((int)register + 0x3e) == '@') {\n    if (condition == 0) {\n      *(uint *)(*register + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*register + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (register[4] == 0x4000) {\n    if (*(char *)((int)register + 0x3d) == '!') {\n      *(uint *)(*register + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*register + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition == 0) {\n    *(uint *)(*register + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition == 1) {\n    *(uint *)(*register + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "set_register_value_0800430c",
                "param_1": "register",
                "param_1[0x14]": "condition",
                "param_1[0x11]": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "extract_byte_from_array_08004396",
            "code": "\nundefined4 extract_byte_from_array_08004396(int *array_pointer)\n\n{\n  *(uint *)(*array_pointer + 0x10) = array_element & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "extract_byte_from_array_08004396",
                "param_1": "array_pointer",
                "param_1[0x11]": "array_element"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "update_flags_080043a2",
            "code": "\nundefined4 updateFlags_080043a2(uint **params)\n\n{\n  uint *ptr;\n  \n  ptr = params[0xb];\n  if ((*(char *)((int)params + 0x3d) == '\\\"') &&\n     ((ptr_value != (uint *)0x0 || (*(char *)((int)params + 0x3e) != '@')))) {\n    if ((ptr_value == (uint *)0x0) && (ptr_value_2 == (uint *)0xc000)) {\n      **params = **params | 0x100;\n      ptr_value = (uint *)((int)ptr_value + 1);\n    }\n    else {\n      if (*(short *)((int)params + 0x2a) == 0) {\n        **params = **params | 0x200;\n      }\n      else if (*(short *)((int)params + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **params = **params & 0xfffffbff;\n          ptr = *params;\n          if ((ptr[1] & 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr & 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (params[0xc] == (uint *)0x12)) {\n          **params = **params & 0xfffffbff;\n          **params = **params | 0x200;\n        }\n        else if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)params + 0x2a) == 2) {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params | 0x800;\n          **params = **params & 0xfffffbff;\n        }\n        ptr = *params;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **params = **params | 0x400;\n        ptr = *params;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      ptr_value = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "params",
                "puVar1": "ptr",
                "param_1[0x14]": "ptr_value",
                "param_1[4]": "ptr_value_2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_memory_0800457c",
            "code": "\nundefined4 updateMemory_0800457c(int *memoryBlock)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)memoryBlock + 0x2a) != 0) {\n    bytePointer = (byte *)memoryBlock[9];\n    memoryBlock[9] = (int)(bytePointer + 1);\n    *(uint *)(*memoryBlock + 0x10) = (uint)*bytePointer;\n    *(short *)((int)memoryBlock + 0x2a) = *(short *)((int)memoryBlock + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_memory_0800457c",
                "param_1": "memoryBlock",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_data_0800459c",
            "code": "\nundefined4 updateData_0800459c(int *data_ptr)\n\n{\n  undefined *current_byte_ptr;\n  \n  if (*(short *)((int)data_ptr + 0x2a) != 0) {\n    current_byte_ptr = (undefined *)data_ptr[9];\n    data_ptr[9] = (int)(current_byte_ptr + 1);\n    *current_byte_ptr = (char)*(undefined4 *)(*data_ptr + 0x10);\n    *(short *)((int)data_ptr + 0x2a) = *(short *)((int)data_ptr + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_data_0800459c",
                "param_1": "data_ptr",
                "puVar1": "current_byte_ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_parameters_080045c0",
            "code": "\nundefined4 calculateParameters_080045c0(uint **parameters)\n\n{\n  bool isConditionMet;\n  uint result;\n  uint *pointer;\n  uint calculatedValue;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  result = FUN_08005a28();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (result < 2000000) {\n      isConditionMet = true;\n    }\n    else {\n      isConditionMet = false;\n    }\n  }\n  else {\n    isConditionMet = result < 4000000;\n  }\n  if (isConditionMet) {\n    return 1;\n  }\n  calculatedValue = result / 1000000;\n  (*parameters)[1] = calculatedValue;\n  if ((uint *)0x186a0 < parameters[1]) {\n    calculatedValue = (calculatedValue * 300) / 1000;\n  }\n  (*parameters)[8] = calculatedValue + 1;\n  pointer = parameters[1];\n  if (pointer < (uint *)0x186a1) {\n    result = (result - 1) / (uint)((int)pointer << 1) + 1 & 0xfff;\n    if (result < 4) {\n      result = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      calculatedValue = (result - 1) / (uint)((int)pointer * 3);\n    }\n    else {\n      calculatedValue = (result - 1) / (uint)((int)pointer * 0x19);\n    }\n    if ((calculatedValue + 1 & 0xfff) == 0) {\n      result = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      result = (result - 1) / (uint)((int)pointer * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      result = (result - 1) / (uint)((int)pointer * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = result;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_parameters_080045c0",
                "param_1": "parameters",
                "bVar1": "isConditionMet",
                "uVar2": "result",
                "puVar3": "pointer",
                "uVar4": "calculatedValue"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "verify_input_and_initialize_08004728",
            "code": "\nundefined4 verify_input_and_initialize_08004728(uint **input,uint *output1,uint *output2,undefined2 flag)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)input + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        input[0xc] = (uint *)0x0;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        *(undefined *)(input + 0xf) = 0;\n        return 3;\n      }\n      ptr = *input;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(input + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input = **input & 0xfffff7ff;\n      *(undefined *)((int)input + 0x3d) = 0x21;\n      *(undefined *)((int)input + 0x3e) = 0x10;\n      result = 0;\n      input[0x10] = (uint *)0x0;\n      input[9] = output2;\n      *(undefined2 *)((int)input + 0x2a) = flag;\n      input[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(input + 10) = *(undefined2 *)((int)input + 0x2a);\n      input[0x11] = output1;\n      **input = **input | 0x100;\n      *(undefined *)(input + 0xf) = 0;\n      (*input)[1] = (*input)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004728": "verify_input_and_initialize_08004728",
                "param_1": "input",
                "param_2": "output1",
                "param_3": "output2",
                "param_4": "flag",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "calculate_delay_080047f4",
            "code": "\nundefined4 calculateDelay_080047f4(uint **inputArray,uint *paramPointer1,uint *paramPointer2,undefined2 paramValue1)\n\n{\n  undefined4 returnValue;\n  uint *arrayPointer;\n  int loopCounter;\n  \n  if (*(char *)((int)inputArray + 0x3d) == ' ') {\n    loopCounter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (loopCounter == 0) {\n        inputArray[0xc] = (uint *)0x0;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        *(undefined *)(inputArray + 0xf) = 0;\n        return 3;\n      }\n      arrayPointer = *inputArray;\n      loopCounter = loopCounter + -1;\n    } while ((arrayPointer[6] & 2) != 0);\n    if (*(char *)(inputArray + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xf) = 1;\n      if ((*arrayPointer & 1) == 0) {\n        *arrayPointer = *arrayPointer | 1;\n      }\n      **inputArray = **inputArray & 0xfffff7ff;\n      *(undefined *)((int)inputArray + 0x3d) = 0x22;\n      *(undefined *)((int)inputArray + 0x3e) = 0x10;\n      returnValue = 0;\n      inputArray[0x10] = (uint *)0x0;\n      inputArray[9] = paramPointer2;\n      *(undefined2 *)((int)inputArray + 0x2a) = paramValue1;\n      inputArray[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(inputArray + 10) = *(undefined2 *)((int)inputArray + 0x2a);\n      inputArray[0x11] = paramPointer1;\n      **inputArray = **inputArray | 0x400;\n      **inputArray = **inputArray | 0x100;\n      *(undefined *)(inputArray + 0xf) = 0;\n      (*inputArray)[1] = (*inputArray)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "calculate_delay_080047f4",
                "param_1": "inputArray",
                "param_2": "paramPointer1",
                "param_3": "paramPointer2",
                "param_4": "paramValue1",
                "uVar1": "returnValue",
                "puVar2": "arrayPointer",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validate_input_080048c8(uint **input_data,uint *param_ptr,int param_val,uint *param_ptr2)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) equals '(') {\n    if (param_ptr equals (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_val equals 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) equals '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr = *input_data;\n      if ((*ptr AND 1) equals 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_data = **input_data AND 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x29;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = param_ptr;\n      *(short *)((int)input_data + 0x2a) = param_val_short;\n      input_data[0xb] = param_ptr2;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_data",
                "param_2": "param_ptr",
                "param_3": "param_val",
                "param_4": "param_ptr2",
                "uVar1": "result",
                "puVar2": "ptr",
                "(short)param_3": "param_val_short",
                "&": "AND",
                "==": "equals"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "update_parameter_value_08004954",
            "code": "\nundefined4 updateParameterValue_08004954(uint **parameterList,uint *newValue,int size,uint *data)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)parameterList + 0x3d) == '(') {\n    if (newValue == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(parameterList + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(parameterList + 0xf) = 1;\n      ptr = *parameterList;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **parameterList = **parameterList & 0xfffff7ff;\n      *(undefined *)((int)parameterList + 0x3d) = 0x2a;\n      *(undefined *)((int)parameterList + 0x3e) = 0x20;\n      result = 0;\n      parameterList[0x10] = (uint *)0x0;\n      parameterList[9] = newValue;\n      *(short *)((int)parameterList + 0x2a) = (short)size;\n      parameterList[0xb] = data;\n      *(undefined2 *)(parameterList + 10) = *(undefined2 *)((int)parameterList + 0x2a);\n      *(undefined *)(parameterList + 0xf) = 0;\n      (*parameterList)[1] = (*parameterList)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "update_parameter_value_08004954",
                "param_1": "parameterList",
                "param_2": "newValue",
                "param_3": "size",
                "param_4": "data",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_data_080049e0",
            "code": "\nundefined4 initializeData_080049e0(uint **data)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  ptr = *data;\n  if ((*ptr & 1) == 0) {\n    *ptr = *ptr | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_data_080049e0",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "extract_byte_from_string_08004a24",
            "code": "\nundefined4 extractByteFromString_08004a24(int *input_array)\n\n{\n  char character;\n  byte *byte_ptr;\n  \n  character = *(char *)((int)input_array + 0x3d);\n  if (*(short *)((int)input_array + 0x2a) != 0) {\n    byte_ptr = (byte *)input_array[9];\n    input_array[9] = (int)(byte_ptr + 1);\n    *(uint *)(*input_array + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)input_array + 0x2a) = *(short *)((int)input_array + 0x2a) + -1;\n    if ((*(short *)((int)input_array + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*input_array + 4) = *(uint *)(*input_array + 4) & 0xfffffbff;\n      input_array[0xc] = 0x21;\n      *(undefined *)((int)input_array + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "extract_byte_from_string_08004a24",
                "param_1": "input_array",
                "cVar1": "character",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_parameter_08004a76",
            "code": "\nundefined4 processParameter_08004a76(int *param)\n\n{\n  char charValue;\n  undefined *ptr;\n  \n  charValue = *(char *)((int)param + 0x3d);\n  if (*(short *)((int)param + 0x2a) != 0) {\n    ptr = (undefined *)ptrArray[9];\n    ptrArray[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*param + 0x10);\n    *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    if ((*(short *)((int)param + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*param + 4) = *(uint *)(*param + 4) & 0xfffffbff;\n      paramArray[0xc] = 0x22;\n      *(undefined *)((int)param + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_parameter_08004a76",
                "param_1": "param",
                "cVar1": "charValue",
                "puVar2": "ptr",
                "param_1[9]": "ptrArray[9]",
                "param_1[0xc]": "paramArray[0xc]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *inputArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint value;\n  \n  value = *(uint *)(*inputArray + 0x18);\n  if ((value & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(inputArray + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(inputArray + 6);\n  }\n  FUN_08007fa0(inputArray,(*(uint *)(*inputArray + 0x18) & 4) == 0,selectedValue,value,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "inputArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "check_and_modify_params_08004aec",
            "code": "\nundefined4 checkAndModifyParams_08004aec(uint **parameters)\n\n{\n  if (((parameters[11] == (uint *)0x4) || (parameters[11] == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    parameters[11] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[12] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    parameters[11] = (uint *)0xffff0000;\n    parameters[12] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "check_and_modify_params_08004aec",
                "param_1": "parameters",
                "param_1[0xb]": "parameters[11]",
                "param_1[0xc]": "parameters[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "process_input_08004b82",
            "code": "\nundefined4 processInput_08004b82(uint **inputParams)\n\n{\n  char charValue;\n  uint *ptrVar;\n  \n  charValue = *(char *)((int)inputParams + 0x3d);\n  ptrVar = inputParams[0xb];\n  if ((*(short *)(inputParams + 10) == 0) && (charValue == '!')) {\n    if ((ptrVar == (uint *)0x4) || ((ptrVar == (uint *)0x8 || (ptrVar == (uint *)0xffff0000)))) {\n      (*inputParams)[1] = (*inputParams)[1] & 0xfffff8ff;\n      **inputParams = **inputParams | 0x200;\n      inputParams[0xc] = (uint *)0x0;\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n      if (*(char *)((int)inputParams + 0x3e) == '@') {\n        *(undefined *)((int)inputParams + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)inputParams + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*inputParams)[1] = (*inputParams)[1] & 0xfffff8ff;\n      inputParams[0xc] = (uint *)0x11;\n      *(undefined *)((int)inputParams + 0x3e) = 0;\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)inputParams + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)inputParams + 0x2a) == 0) {\n      (*inputParams)[1] = (*inputParams)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)inputParams + 0x3e) == '@') {\n      if (inputParams[0x14] == (uint *)0x0) {\n        if (inputParams[0x13] == (uint *)0x1) {\n          (*inputParams)[4] = (uint)inputParams[0x12] & 0xff;\n          inputParams[0x14] = (uint *)((int)inputParams[0x14] + 2);\n        }\n        else {\n          (*inputParams)[4] = (uint)((int)inputParams[0x12] << 0x10) >> 0x18;\n          inputParams[0x14] = (uint *)((int)inputParams[0x14] + 1);\n        }\n      }\n      else if (inputParams[0x14] == (uint *)0x1) {\n        (*inputParams)[4] = (uint)inputParams[0x12] & 0xff;\n        inputParams[0x14] = (uint *)((int)inputParams[0x14] + 1);\n      }\n      else if (inputParams[0x14] == (uint *)0x2) {\n        if (*(char *)((int)inputParams + 0x3d) == '\\\"') {\n          **inputParams = **inputParams | 0x100;\n        }\n        else if (*(char *)((int)inputParams + 0x3d) == '!') {\n          ptrVar = inputParams[9];\n          inputParams[9] = (uint *)((int)ptrVar + 1);\n          (*inputParams)[4] = (uint)*(byte *)ptrVar;\n          *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrVar = inputParams[9];\n      inputParams[9] = (uint *)((int)ptrVar + 1);\n      (*inputParams)[4] = (uint)*(byte *)ptrVar;\n      *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "process_input_08004b82",
                "param_1": "inputParams",
                "cVar1": "charValue",
                "puVar2": "ptrVar"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_param_08004ccc",
            "code": "\nundefined4 processParam_08004ccc(uint **parameters)\n\n{\n  uint *tempPointer;\n  \n  tempPointer = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((tempPointer == (uint *)0x4) || (tempPointer == (uint *)0x8)) || (tempPointer == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        param1IndexC = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        param1IndexC = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      tempPointer = parameters[9];\n      parameters[9] = (uint *)((int)tempPointer + 1);\n      (*parameters)[4] = (uint)*(byte *)tempPointer;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_param_08004ccc",
                "param_1": "parameters",
                "puVar1": "tempPointer",
                "param_1[0xc]": "param1IndexC"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_input_08004d6c",
            "code": "\nundefined4 process_input_08004d6c(uint **input_data)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)input_data + 0x2a) < 4) {\n      if (*(ushort *)((int)input_data + 0x2a) - 2 < 2) {\n        if (condition_ptr == (uint *)0x2) {\n          **input_data = **input_data | 0x400;\n        }\n        else {\n          **input_data = **input_data & 0xfffffbff;\n          **input_data = **input_data | 0x800;\n        }\n        (*input_data)[1] = (*input_data)[1] & 0xfffffbff;\n      }\n      else {\n        if (condition_ptr == (uint *)0x2) {\n          **input_data = **input_data | 0x400;\n        }\n        else {\n          **input_data = **input_data & 0xfffffbff;\n        }\n        (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n        temp_ptr = ptr_value;\n        ptr_value = (uint *)((int)temp_ptr + 1);\n        *(char *)temp_ptr = (char)(*input_data)[4];\n        *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n        *(undefined *)((int)input_data + 0x3d) = 0x20;\n        null_ptr = (uint *)0x0;\n        if (*(char *)((int)input_data + 0x3e) == '@') {\n          *(undefined *)((int)input_data + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)input_data + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      temp_ptr = ptr_value;\n      ptr_value = (uint *)((int)temp_ptr + 1);\n      *(char *)temp_ptr = (char)(*input_data)[4];\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_input_08004d6c",
                "param_1": "input_data",
                "puVar1": "temp_ptr",
                "param_1[0xb]": "condition_ptr",
                "param_1[9]": "ptr_value",
                "param_1[0xc]": "null_ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 processData_08004e3c(uint **data)\n\n{\n  uint *currentValue;\n  \n  currentValue = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    currentValue = index;\n    index = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (currentValue == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    currentValue = index;\n    index = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    currentValue = index;\n    index = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    currentValue = index;\n    index = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "currentValue",
                "param_1[9]": "index"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_parameters_08004f3c",
            "code": "\nvoid processParameters_08004f3c(uint **parameters)\n\n{\n  int result;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  ptr2 = *parameters;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_08004f3a(parameters);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      FUN_08008020(parameters);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(parameters[0xe]);\n      if (result != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          ptr2 = parameters[9];\n          parameters[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(parameters[0xd]);\n      if (result != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08007ff0(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_parameters_08004f3c",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "sanitize_and_process_data_08005084",
            "code": "\nundefined4 sanitizeAndProcessData_08005084(uint **data)\n\n{\n  char firstChar;\n  uint *pointer1;\n  uint *pointer2;\n  \n  firstChar = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  pointer1 = *data;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = data[9];\n      data[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      pointer1 = data[9];\n      data[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((firstChar == '(') || (firstChar == '*')) || (firstChar == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (firstChar == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "sanitize_and_process_data_08005084",
                "param_1": "data",
                "cVar1": "firstChar",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data)\n\n{\n  int value;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  value = *data;\n  flag3 = *(uint *)(value + 0x18);\n  flag1 = *(uint *)(value + 0x14);\n  flag2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data",
                "iVar1": "value",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "process_flags_080052f0",
            "code": "\nvoid processFlags_080052f0(uint **flagArray)\n\n{\n  char charVar1;\n  uint *ptrToFlagArray;\n  uint flagValue1;\n  uint flagValue2;\n  \n  ptrToFlagArray = *flagArray;\n  flagValue1 = ptrToFlagArray[5];\n  flagValue2 = ptrToFlagArray[1];\n  if (((flagValue1 & 0x10100) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagArray[0x10] = (uint *)((uint)flagArray[0x10] | 1);\n    ptrToFlagArray[5] = 0xfffffeff;\n    **flagArray = **flagArray | 0x8000;\n  }\n  if (((flagValue1 & 0x10200) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagArray[0x10] = (uint *)((uint)flagArray[0x10] | 2);\n    (*flagArray)[5] = 0xfffffdff;\n  }\n  if (((flagValue1 & 0x10400) != 0) && ((flagValue2 & 0x100) != 0)) {\n    charVar1 = *(char *)((int)flagArray + 0x3d);\n    if (((*(char *)((int)flagArray + 0x3e) == ' ') && (*(short *)((int)flagArray + 0x2a) == 0)) &&\n       (((charVar1 == '!' || (charVar1 == ')')) || ((charVar1 == '(' && (flagArray[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(flagArray);\n    }\n    else {\n      flagArray[0x10] = (uint *)((uint)flagArray[0x10] | 4);\n      if (*(char *)((int)flagArray + 0x3e) == '\\x10') {\n        **flagArray = **flagArray | 0x200;\n      }\n      (*flagArray)[5] = 0xfffffbff;\n    }\n  }\n  if (((flagValue1 & 0x10800) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagArray[0x10] = (uint *)((uint)flagArray[0x10] | 8);\n    (*flagArray)[5] = 0xfffff7ff;\n  }\n  if (flagArray[0x10] != (uint *)0x0) {\n    FUN_08004f3c(flagArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "process_flags_080052f0",
                "param_1": "flagArray",
                "cVar1": "charVar1",
                "puVar2": "ptrToFlagArray",
                "uVar3": "flagValue1",
                "uVar4": "flagValue2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_pointer_value_0800542a",
            "code": "\nundefined getPointerValue_0800542a(int inputPointer)\n\n{\n  return *(undefined *)(inputPointer + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_pointer_value_0800542a",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_pointer_value_08005430",
            "code": "\nundefined4 getPointerValue_08005430(int inputPointer)\n\n{\n  return *(undefined4 *)(inputPointer + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_pointer_value_08005430",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int inputParameter)\n\n{\n  bool isResultNonZero;\n  int calculationResult;\n  \n  calculationResult = inputParameter * (DAT_20000018 / 8000);\n  do {\n    isResultNonZero = calculationResult != 0;\n    calculationResult = calculationResult + -1;\n  } while (isResultNonZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "inputParameter",
                "local_4": "calculationResult",
                "bVar1": "isResultNonZero"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_and_manipulate_flags_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkAndManipulateFlags_08005460(uint *flags)\n\n{\n  int startTimestamp;\n  int currentTimestamp;\n  undefined4 result;\n  uint value;\n  bool flagSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startTimestamp = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTimestamp = FUN_08003760();\n          if (100 < (uint)(currentTimestamp - startTimestamp)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTimestamp = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTimestamp = FUN_08003760();\n          if (100 < (uint)(currentTimestamp - startTimestamp)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTimestamp = FUN_08003760();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTimestamp = FUN_08003760();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTimestamp = FUN_08003760();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTimestamp = FUN_08003760();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    flagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (flagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTimestamp = FUN_08003760();\n        if (100 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTimestamp = FUN_08003760();\n        if (5000 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTimestamp = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTimestamp = FUN_08003760();\n        if (5000 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    if (flagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTimestamp = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        startTimestamp = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTimestamp = FUN_08003760();\n        } while ((uint)(currentTimestamp - startTimestamp) < 3);\n        return 3;\n      }\n      currentTimestamp = FUN_08003760();\n    } while ((uint)(currentTimestamp - startTimestamp) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTimestamp = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTimestamp = FUN_08003760();\n    } while ((uint)(currentTimestamp - startTimestamp) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_and_manipulate_flags_08005460",
                "param_1": "flags",
                "iVar1": "startTimestamp",
                "iVar2": "currentTimestamp",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "flagSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_delay_08005840",
            "code": "\n\n\nuint calculateDelay_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 delayParameter;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  delayParameter = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&delayParameter - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_delay_08005840",
                "local_1c": "delayParameter",
                "uStack_18": "constant1",
                "uStack_14": "constant2",
                "uStack_10": "constant3",
                "uStack_c": "constant4"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "set_configuration_080058ac",
            "code": "\n\n\nundefined4 setConfiguration_080058ac(uint *configArray,uint configLength)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempVar;\n  \n  if ((_DAT_40022000 & 7) < configLength) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configLength;\n    if (configLength != (configLength & 7)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | configArray[2];\n  }\n  if ((*configArray & 1) != 0) {\n    tempVar = configArray[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08003760();\n    if (configArray[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (configArray[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08003760();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (configLength < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configLength;\n    if (configLength != (configLength & 7)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | configArray[3];\n  }\n  if ((*configArray & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | configArray[4] << 3;\n  }\n  tempVar = FUN_08005840();\n  DAT_20000018 = tempVar >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "set_configuration_080058ac",
                "param_1": "configArray",
                "param_2": "configLength",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "process_flags_080058d2",
            "code": "\n\n\nundefined4 process_flags_080058d2(uint *flags,uint value)\n\n{\n  int start_time;\n  int current_time;\n  uint result;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    result = flags[1];\n    if (result == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((result != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = result | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08003760();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  result = FUN_08005840();\n  DAT_20000018 = result >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "process_flags_080058d2",
                "param_1": "flags",
                "param_2": "value",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "result"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_data_value_08005a1c",
            "code": "\nundefined4 get_data_value_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_data_value_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_08005a28",
            "code": "\n\n\nuint shiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shift_and_return_08005a48",
            "code": "\n\n\nuint shiftAndReturn_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shift_and_return_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_data_08005a68",
            "code": "\n\n\nvoid initializeData_08005a68(undefined4 *outputArray,uint *status)\n\n{\n  *outputArray = 0xf;\n  outputArray[1] = _DAT_40021004 & 3;\n  outputArray[2] = _DAT_40021004 & 0xf0;\n  outputArray[3] = _DAT_40021004 & 0x700;\n  outputArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *status = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_data_08005a68",
                "param_1": "outputArray",
                "param_2": "status"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_configuration_08005aa4",
            "code": "\n\n\nundefined4 updateConfiguration_08005aa4(uint *config)\n\n{\n  uint configFlag;\n  uint tmpConfigFlag;\n  int startTicks;\n  int currentTicks;\n  bool shouldUpdateFlag;\n  \n  if ((*config & 1) != 0) {\n    shouldUpdateFlag = (_DAT_4002101c & 0x10000000) == 0;\n    if (shouldUpdateFlag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTicks = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTicks = FUN_08003760();\n        if (100 < (uint)(currentTicks - startTicks)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      tmpConfigFlag = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      configFlag = _DAT_40021020 & 1;\n      _DAT_40021020 = tmpConfigFlag;\n      if (configFlag != 0) {\n        startTicks = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentTicks = FUN_08003760();\n          if (5000 < (uint)(currentTicks - startTicks)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (shouldUpdateFlag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_configuration_08005aa4",
                "param_1": "config",
                "uVar1": "configFlag",
                "uVar2": "tmpConfigFlag",
                "iVar3": "startTicks",
                "iVar4": "currentTicks",
                "bVar5": "shouldUpdateFlag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_value_08005bb8",
            "code": "\n\n\nuint calculateParameterValue_08005bb8(int input_value)\n\n{\n  uint result;\n  undefined2 constant_value;\n  undefined4 constant_value2;\n  undefined4 constant_value3;\n  undefined4 constant_value4;\n  undefined4 constant_value5;\n  \n  constant_value5 = 0x10100f0e;\n  constant_value4 = 0xd0c0b0a;\n  constant_value3 = 0x9080706;\n  constant_value2 = 0x5040302;\n  constant_value = 0x201;\n  if (input_value == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input_value == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant_value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constant_value2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input_value == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_value_08005bb8",
                "param_1": "input_value",
                "uVar1": "result",
                "local_24": "constant_value",
                "uStack_20": "constant_value2",
                "uStack_1c": "constant_value3",
                "uStack_18": "constant_value4",
                "uStack_14": "constant_value5"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "check_and_set_flags_08005cb4",
            "code": "\n\n\nvoid checkAndSetFlags_08005cb4(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "check_and_set_flags_08005cb4",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_register_08005cec",
            "code": "\nvoid updateRegister_08005cec(int registerAddress,uint *registerValues)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(registerAddress + 4);\n  updatedValue3 = *registerValues;\n  updatedValue1 = *(uint *)(registerAddress + 0x20) & 0xfffffffd | registerValues[2];\n  if (registerAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | registerValues[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | registerValues[5] | registerValues[6];\n  }\n  *(uint *)(registerAddress + 4) = updatedValue2;\n  *(uint *)(registerAddress + 0x18) = *(uint *)(registerAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(registerAddress + 0x34) = registerValues[1];\n  *(uint *)(registerAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_register_08005cec",
                "param_1": "registerAddress",
                "param_2": "registerValues",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_config_08005d48",
            "code": "\nvoid updateConfig_08005d48(int configAddress,uint *configData)\n\n{\n  uint updatedConfig1;\n  uint updatedConfig2;\n  uint updatedConfig3;\n  \n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xfffffeff;\n  updatedConfig2 = *(uint *)(configAddress + 4);\n  updatedConfig3 = *configData;\n  updatedConfig1 = *(uint *)(configAddress + 0x20) & 0xfffffdff | configData[2] << 8;\n  if (configAddress == 0x40012c00) {\n    updatedConfig1 = (updatedConfig1 & 0xfffff7ff | configData[3] << 8) & 0xfffffbff;\n    updatedConfig2 = updatedConfig2 & 0xffffcfff | configData[5] << 4 | configData[6] << 4;\n  }\n  *(uint *)(configAddress + 4) = updatedConfig2;\n  *(uint *)(configAddress + 0x1c) = *(uint *)(configAddress + 0x1c) & 0xffffff8c | updatedConfig3;\n  *(uint *)(configAddress + 0x3c) = configData[1];\n  *(uint *)(configAddress + 0x20) = updatedConfig1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_config_08005d48",
                "param_1": "configAddress",
                "param_2": "configData",
                "uVar1": "updatedConfig1",
                "uVar2": "updatedConfig2",
                "uVar3": "updatedConfig3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_parameters_08005dac",
            "code": "\nvoid updateParameters_08005dac(int address,int *parameters)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  \n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & 0xffffefff;\n  value1 = *(uint *)(address + 4);\n  value2 = *parameters;\n  value3 = parameters[2];\n  if (address == 0x40012c00) {\n    value1 = value1 & 0xffffbfff | parameters[5] << 6;\n  }\n  *(uint *)(address + 4) = value1;\n  *(uint *)(address + 0x1c) = *(uint *)(address + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(address + 0x40) = parameters[1];\n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_parameters_08005dac",
                "param_1": "address",
                "param_2": "parameters",
                "uVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_flag_and_call_function_08005df4",
            "code": "\nvoid updateFlagAndCallFunction_08005df4(uint **paramPtr)\n\n{\n  uint *dataPtr;\n  \n  *(undefined *)((int)paramPtr + 0x3d) = 2;\n  dataPtr = *paramPtr;\n  if ((dataPtr[8] & 0x1111) == 0) {\n    if ((dataPtr[8] & 0x444) == 0) {\n      *dataPtr = *dataPtr & 0xfffffffe;\n    }\n  }\n  FUN_08007710(paramPtr);\n  *(undefined *)((int)paramPtr + 0x3d) = 0;\n  *(undefined *)(paramPtr + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_flag_and_call_function_08005df4",
                "param_1": "paramPtr",
                "puVar1": "dataPtr",
                "puVar1[8]": "dataPtr[8]"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_flags_and_reset_08005e2e",
            "code": "\nvoid updateFlagsAndReset_08005e2e(uint **paramArray)\n\n{\n  uint *arrayPointer;\n  \n  *(undefined *)((int)paramArray + 0x3d) = 2;\n  arrayPointer = *paramArray;\n  if ((arrayPointer[8] & 0x1111) == 0) {\n    if ((arrayPointer[8] & 0x444) == 0) {\n      *arrayPointer = *arrayPointer & 0xfffffffe;\n    }\n  }\n  FUN_08007110(paramArray);\n  *(undefined *)((int)paramArray + 0x3d) = 0;\n  *(undefined *)(paramArray + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_flags_and_reset_08005e2e",
                "param_1": "paramArray",
                "puVar1": "arrayPointer"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "execute_operations_08005e6e",
            "code": "\nvoid execute_operations_08005e6e(int *function_data)\n\n{\n  int data_value;\n  \n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 2) != 0) && ((*(uint *)(data_value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xfffffffd;\n    *(undefined *)(function_data + 7) = 1;\n    if ((*(uint *)(*function_data + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(function_data);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(function_data + 7) = 0;\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 4) != 0) && ((*(uint *)(data_value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xfffffffb;\n    *(undefined *)(function_data + 7) = 2;\n    if ((*(uint *)(*function_data + 0x18) & 0x300) == 0) {\n      FUN_0800771c(function_data);\n      FUNC_08005e6a(function_data);\n    }\n    else {\n      FUNC_08005e68(function_data);\n    }\n    *(undefined *)(function_data + 7) = 0;\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 8) != 0) && ((*(uint *)(data_value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xfffffff7;\n    *(undefined *)(function_data + 7) = 4;\n    if ((*(uint *)(*function_data + 0x1c) & 3) == 0) {\n      FUN_0800771c(function_data);\n      FUNC_08005e6a(function_data);\n    }\n    else {\n      FUNC_08005e68(function_data);\n    }\n    *(undefined *)(function_data + 7) = 0;\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 0x10) != 0) && ((*(uint *)(data_value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xffffffef;\n    *(undefined *)(function_data + 7) = 8;\n    if ((*(uint *)(*function_data + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(function_data);\n      FUNC_08005e6a(function_data);\n    }\n    else {\n      FUNC_08005e68(function_data);\n    }\n    *(undefined *)(function_data + 7) = 0;\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 1) != 0) && ((*(uint *)(data_value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xfffffffe;\n    FUN_08007736(function_data);\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 0x80) != 0) && ((*(uint *)(data_value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(function_data);\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 0x40) != 0) && ((*(uint *)(data_value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(function_data);\n  }\n  data_value = *function_data;\n  if (((*(uint *)(data_value + 0x10) & 0x20) != 0) && ((*(uint *)(data_value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(data_value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(function_data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "execute_operations_08005e6e",
                "param_1": "function_data",
                "iVar1": "data_value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "set_register_values_08005fe8",
            "code": "\nvoid setRegisterValues_08005fe8(uint *registers,uint *values)\n\n{\n  uint registerValue;\n  \n  registerValue = *registers;\n  if ((((registers == (uint *)0x40012c00) || (registers == (uint *)0x40000000)) ||\n      (registers == (uint *)0x40000400)) || (registers == (uint *)0x40000800)) {\n    registerValue = registerValue & 0xffffff8f | values[1];\n  }\n  if (((registers == (uint *)0x40012c00) || (registers == (uint *)0x40000000)) ||\n     ((registers == (uint *)0x40000400 || (registers == (uint *)0x40000800)))) {\n    registerValue = registerValue & 0xfffffcff | values[3];\n  }\n  *registers = registerValue & 0xffffff7f | values[5];\n  registers[0xb] = values[2];\n  registers[10] = *values;\n  if (registers == (uint *)0x40012c00) {\n    specialRegisterValue = values[4];\n  }\n  registers[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "set_register_values_08005fe8",
                "param_1": "registers",
                "param_2": "values",
                "uVar1": "registerValue",
                "uRam40012c30": "specialRegisterValue"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "check_and_update_status_08006060",
            "code": "\nundefined4 checkAndUpdateStatus_08006060(undefined4 *paramArray)\n\n{\n  if (paramArray != (undefined4 *)0x0) {\n    if (*(char *)((int)paramArray + 0x3d) == '\\0') {\n      *(undefined *)(paramArray + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)paramArray + 0x3d) = 2;\n    FUN_08005fe8(*paramArray,paramArray + 1);\n    *(undefined *)((int)paramArray + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "check_and_update_status_08006060",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "process_data_08006092",
            "code": "\nundefined4 process_data_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "process_data_08006092",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_params_080060c4",
            "code": "\nvoid updateParams_080060c4(int funcPtr,int *paramListPtr)\n\n{\n  uint updatedFlags;\n  uint updatedValue;\n  int paramValue;\n  \n  *(uint *)(funcPtr + 0x20) = *(uint *)(funcPtr + 0x20) & 0xffffffef;\n  updatedValue = *(uint *)(funcPtr + 4);\n  paramValue = *paramListPtr;\n  updatedFlags = *(uint *)(funcPtr + 0x20) & 0xffffffdf | paramListPtr[2] << 4;\n  if (funcPtr == 0x40012c00) {\n    updatedFlags = (updatedFlags & 0xffffff7f | paramListPtr[3] << 4) & 0xffffffbf;\n    updatedValue = updatedValue & 0xfffff3ff | paramListPtr[5] << 2 | paramListPtr[6] << 2;\n  }\n  *(uint *)(funcPtr + 4) = updatedValue;\n  *(uint *)(funcPtr + 0x18) = *(uint *)(funcPtr + 0x18) & 0xffff8cff | paramValue << 8;\n  *(int *)(funcPtr + 0x38) = paramListPtr[1];\n  *(uint *)(funcPtr + 0x20) = updatedFlags;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_params_080060c4",
                "param_1": "funcPtr",
                "param_2": "paramListPtr",
                "uVar1": "updatedFlags",
                "uVar2": "updatedValue",
                "iVar3": "paramValue"
            },
            "calling": [
                "FUN_08006128",
                "FUN_08006186"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "perform_action_08006128",
            "code": "\nundefined4 performAction_08006128(undefined4 *actionParams,undefined4 status,undefined4 actionType)\n\n{\n  if (*(char *)(actionParams + 0xf) != '\\x01') {\n    *(undefined *)(actionParams + 0xf) = 1;\n    *(undefined *)((int)actionParams + 0x3d) = 2;\n    switch(actionType) {\n    case 0:\n      FUN_08005cec(*actionParams);\n      break;\n    case 4:\n      FUN_080060c4(*actionParams);\n      break;\n    case 8:\n      FUN_08005d48(*actionParams);\n      break;\n    case 0xc:\n      FUN_08005dac(*actionParams);\n    }\n    *(undefined *)((int)actionParams + 0x3d) = 1;\n    *(undefined *)(actionParams + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "perform_action_08006128",
                "param_1": "actionParams",
                "param_2": "status",
                "param_3": "actionType"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "set_flag_08006186",
            "code": "\nundefined4 setFlag_08006186(int *flagSet,int data,undefined4 flagType)\n\n{\n  if (*(char *)(flagSet + 0xf) != '\\x01') {\n    *(undefined *)(flagSet + 0xf) = 1;\n    *(undefined *)((int)flagSet + 0x3d) = 2;\n    switch(flagType) {\n    case 0:\n      FUN_08005cec(*flagSet);\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) | 8;\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) & 0xfffffffb;\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) | *(uint *)(data + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*flagSet);\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) | 0x800;\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) & 0xfffffbff;\n      *(uint *)(*flagSet + 0x18) = *(uint *)(*flagSet + 0x18) | *(int *)(data + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*flagSet);\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) | 8;\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) & 0xfffffffb;\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) | *(uint *)(data + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*flagSet);\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) | 0x800;\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) & 0xfffffbff;\n      *(uint *)(*flagSet + 0x1c) = *(uint *)(*flagSet + 0x1c) | *(int *)(data + 0x10) << 8;\n    }\n    *(undefined *)((int)flagSet + 0x3d) = 1;\n    *(undefined *)(flagSet + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "set_flag_08006186",
                "param_1": "flagSet",
                "param_2": "data",
                "param_3": "flagType"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_08006262",
            "code": "\nvoid updateBit_08006262(int objectAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_08006262",
                "param_1": "objectAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "set_permissions_08006280",
            "code": "\nundefined4 setPermissions_08006280(uint **pointer,undefined4 value)\n\n{\n  switch(value) {\n  case 0:\n    (*pointer)[3] = (*pointer)[3] | 2;\n    break;\n  case 4:\n    (*pointer)[3] = (*pointer)[3] | 4;\n    break;\n  case 8:\n    (*pointer)[3] = (*pointer)[3] | 8;\n    break;\n  case 0xc:\n    (*pointer)[3] = (*pointer)[3] | 0x10;\n  }\n  FUN_08006262(*pointer,value,1);\n  if (*pointer == (uint *)0x40012c00) {\n    specialValue = specialValue | 0x8000;\n  }\n  **pointer = **pointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "set_permissions_08006280",
                "param_1": "pointer",
                "param_2": "value",
                "uRam40012c44": "specialValue"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "modify_bit_mask_080062f4",
            "code": "\nundefined4 modifyBitMask_080062f4(uint **data,undefined4 bitPosition)\n\n{\n  uint *tempPtr;\n  \n  switch(bitPosition) {\n  case 0:\n    (*data)[3] = (*data)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] & 0xffffffef;\n  }\n  FUN_08006262(*data,bitPosition,0);\n  if (((*data == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "modify_bit_mask_080062f4",
                "param_1": "data",
                "param_2": "bitPosition",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flag_and_value_08006390",
            "code": "\nundefined4 setFlagAndValue_08006390(uint **inputPtr,undefined4 value)\n\n{\n  FUN_08006262(*inputPtr,value,1);\n  if (*inputPtr == (uint *)0x40012c00) {\n    flag = flag | 0x8000;\n  }\n  **inputPtr = **inputPtr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flag_and_value_08006390",
                "param_1": "inputPtr",
                "param_2": "value",
                "uRam40012c44": "flag"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_flags_and_set_bit_080063c0",
            "code": "\nundefined4 updateFlagsAndSetBit_080063c0(uint **pointerArray,undefined4 value)\n\n{\n  uint *dataPointer;\n  \n  FUN_08006262(*pointerArray,value,0);\n  if (((*pointerArray == (uint *)0x40012c00) && ((memoryLocation2 & 0x1111) == 0)) &&\n     ((memoryLocation2 & 0x444) == 0)) {\n    memoryLocation3 = memoryLocation3 & 0xffff7fff;\n  }\n  dataPointer = *pointerArray;\n  if (((dataPointer[8] & 0x1111) == 0) && ((dataPointer[8] & 0x444) == 0)) {\n    *dataPointer = *dataPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)pointerArray + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_flags_and_set_bit_080063c0",
                "param_1": "pointerArray",
                "param_2": "value",
                "puVar1": "dataPointer",
                "uRam40012c20": "memoryLocation2",
                "uRam40012c44": "memoryLocation3"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_value_08006420",
            "code": "\nvoid updateValue_08006420(int baseAddress,uint bitPosition,int value)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | value << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_value_08006420",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_and_values_0800643c",
            "code": "\nundefined4 setFlagsAndValues_0800643c(uint **dataPointer,undefined4 value)\n\n{\n  FUN_08006420(*dataPointer,value,4);\n  (*dataPointer)[0x11] = (*dataPointer)[0x11] | 0x8000;\n  **dataPointer = **dataPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_and_values_0800643c",
                "param_1": "dataPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_flags_08006460",
            "code": "\nundefined4 updateFlags_08006460(uint **input,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_08006420(*input,value,0);\n  ptr = *input;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    ptr[17] = ptr[17] & 0xffff7fff;\n  }\n  ptr = *input;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_flags_08006460",
                "param_1": "input",
                "param_2": "value",
                "puVar1": "ptr",
                "puVar1[8]": "ptr[8]",
                "puVar1[0x11]": "ptr[17]"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "set_parameters_080064b0",
            "code": "\nvoid setParameters_080064b0(int *parameters)\n\n{\n  *(uint *)(*parameters + 0xc) = *(uint *)(*parameters + 0xc) & 0xfffffedf;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffffe;\n  *(undefined *)((int)parameters + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "set_parameters_080064b0",
                "param_1": "parameters"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_binary_data_080064cc",
            "code": "\nundefined4 processBinaryData_080064cc(int *data)\n\n{\n  short count;\n  byte *bytePointer;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePointer = (byte *)data[8];\n    data[8] = (int)(bytePointer + 1);\n    *(uint *)(*data + 4) = (uint)*bytePointer;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_binary_data_080064cc",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "update_data_08006538",
            "code": "\nvoid updateData_08006538(int *data)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xffffcfff | data[3];\n  *(uint *)(*data + 0xc) =\n       data[2] | data[4] | data[5] | *(uint *)(*data + 0xc) & 0xffffe9f3;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffcff | data[6];\n  result10 = *data;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = data[1];\n    result2 = FUN_08005a28();\n    result7 = data[1];\n    result3 = FUN_08005a28();\n    result8 = data[1];\n    result4 = FUN_08005a28();\n    result9 = data[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(data[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = data[1];\n  result1 = FUN_08005a48();\n  result6 = data[1];\n  result2 = FUN_08005a48();\n  result7 = data[1];\n  result3 = FUN_08005a48();\n  result8 = data[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(data[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "update_data_08006538",
                "param_1": "data",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_condition_and_update_080066e8",
            "code": "\nundefined4 check_condition_and_update_080066e8(uint **pointer_to_array,uint mask,uint expected_result,int comparison_value,uint max_difference)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**pointer_to_array) == 0) != expected_result) {\n      return 0;\n    }\n  } while ((max_difference == 0xffffffff) ||\n          ((max_difference != 0 && (result = FUN_08003760(), (uint)(result - comparison_value) <= max_difference))));\n  (*pointer_to_array)[3] = (*pointer_to_array)[3] & 0xfffffe5f;\n  (*pointer_to_array)[5] = (*pointer_to_array)[5] & 0xfffffffe;\n  *(undefined *)((int)pointer_to_array + 0x39) = 0x20;\n  *(undefined *)((int)pointer_to_array + 0x3a) = 0x20;\n  *(undefined *)(pointer_to_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_condition_and_update_080066e8",
                "param_1": "pointer_to_array",
                "param_2": "mask",
                "param_3": "expected_result",
                "param_4": "comparison_value",
                "param_5": "max_difference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "validate_and_modify_data_0800674e",
            "code": "\nundefined4 validate_and_modify_data_0800674e(int *data_array)\n\n{\n  if (data_array != (int *)0x0) {\n    if (*(char *)((int)data_array + 0x39) == '\\0') {\n      *(undefined *)(data_array + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)data_array + 0x39) = 0x24;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) & 0xffffdfff;\n    FUN_08006538(data_array);\n    *(uint *)(*data_array + 0x10) = *(uint *)(*data_array + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_array + 0x14) = *(uint *)(*data_array + 0x14) & 0xffffffd5;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x2000;\n    flag = 0;\n    *(undefined *)((int)data_array + 0x39) = 0x20;\n    *(undefined *)((int)data_array + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "validate_and_modify_data_0800674e",
                "param_1": "data_array",
                "param_1[0xf]": "flag"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *inputArray,ushort *inputData,int arrayLength,undefined4 param)\n\n{\n  int returnValue;\n  undefined4 result;\n  \n  if (*(char *)((int)inputArray + 0x39) == ' ') {\n    if (inputData == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (arrayLength == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputArray + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xe) = 1;\n      inputArray[0xf] = 0;\n      *(undefined *)((int)inputArray + 0x39) = 0x21;\n      result = FUN_08003760();\n      *(short *)(inputArray + 9) = (short)arrayLength;\n      *(short *)((int)inputArray + 0x26) = (short)arrayLength;\n      while (*(short *)((int)inputArray + 0x26) != 0) {\n        *(short *)((int)inputArray + 0x26) = *(short *)((int)inputArray + 0x26) + -1;\n        if (inputArray[2] == 0x1000) {\n          returnValue = FUN_080066e8(inputArray,0x80,0,result,param);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = *inputData & 0x1ff;\n          if (inputArray[4] == 0) {\n            inputData = inputData + 1;\n          }\n          else {\n            inputData = (ushort *)((int)inputData + 1);\n          }\n        }\n        else {\n          returnValue = FUN_080066e8(inputArray,0x80,0,result,param);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = (uint)*(byte *)inputData;\n          inputData = (ushort *)((int)inputData + 1);\n        }\n      }\n      returnValue = FUN_080066e8(inputArray,0x40,0,result,param);\n      if (returnValue == 0) {\n        *(undefined *)((int)inputArray + 0x39) = 0x20;\n        *(undefined *)(inputArray + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "inputArray",
                "param_2": "inputData",
                "param_3": "arrayLength",
                "param_4": "param",
                "iVar1": "returnValue",
                "uVar2": "result",
                "param_1[0xf]": "inputArray[0xf]"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "validate_input_0800688e",
            "code": "\nundefined4 validate_input_0800688e(int *data,int length,int value)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  if (value == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data_length = length;\n    *(short *)(data + 9) = (short)value;\n    *(short *)((int)data + 0x26) = (short)value;\n    counter = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "validate_input_0800688e",
                "param_1": "data",
                "param_2": "length",
                "param_3": "value",
                "param_1[8]": "data_length",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_and_modify_data_080068d6",
            "code": "\nundefined4 validate_and_modify_data_080068d6(int *data_ptr,int value1,int value2)\n\n{\n  if (*(char *)((int)data_ptr + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_ptr + 0xe) != '\\x01') {\n    data_ptr[10] = value1;\n    *(short *)(data_ptr + 0xb) = (short)value2;\n    *(short *)((int)data_ptr + 0x2e) = (short)value2;\n    data_ptr[0xf] = 0;\n    *(undefined *)((int)data_ptr + 0x3a) = 0x22;\n    *(undefined *)(data_ptr + 0xe) = 0;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x100;\n    *(uint *)(*data_ptr + 0x14) = *(uint *)(*data_ptr + 0x14) | 1;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_and_modify_data_080068d6",
                "param_1": "data_ptr",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "set_flag_and_call_function_08006932",
            "code": "\nundefined4 setFlagAndCallFunction_08006932(int *inputPointer)\n\n{\n  *(uint *)(*inputPointer + 0xc) = *(uint *)(*inputPointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputPointer + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "set_flag_and_call_function_08006932",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "parse_string_0800694c",
            "code": "\nundefined4 parseString_0800694c(int *array)\n\n{\n  byte *byteArray;\n  short count;\n  undefined *ptr;\n  \n  if (*(char *)((int)array + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (array[2] == 0x1000) {\n    if (array[4] == 0) {\n      *(ushort *)array[10] = (ushort)((uint)(*(int *)(*array + 4) << 0x17) >> 0x17);\n      array[10] = array[10] + 2;\n    }\n    else {\n      *(ushort *)array[10] = (ushort)*(undefined4 *)(*array + 4) & 0xff;\n      array[10] = array[10] + 1;\n    }\n  }\n  else if (array[4] == 0) {\n    ptr = (undefined *)array[10];\n    array[10] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*array + 4);\n  }\n  else {\n    byteArray = (byte *)array[10];\n    array[10] = (int)(byteArray + 1);\n    *byteArray = (byte)*(undefined4 *)(*array + 4) & 0x7f;\n  }\n  count = *(short *)((int)array + 0x2e) + -1;\n  *(short *)((int)array + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*array + 0xc) = *(uint *)(*array + 0xc) & 0xffffffdf;\n  *(uint *)(*array + 0xc) = *(uint *)(*array + 0xc) & 0xfffffeff;\n  *(uint *)(*array + 0x14) = *(uint *)(*array + 0x14) & 0xfffffffe;\n  *(undefined *)((int)array + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "parse_string_0800694c",
                "param_1": "array",
                "pbVar1": "byteArray",
                "sVar2": "count",
                "puVar3": "ptr",
                "param_1[10]": "array[10]",
                "param_1[2]": "array[2]",
                "param_1[4]": "array[4]"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_flags_080069ec",
            "code": "\nvoid processFlags_080069ec(uint **flags)\n\n{\n  int returnValue;\n  uint secondFlag;\n  uint *pFlags;\n  uint someFlag;\n  uint firstFlag;\n  \n  pFlags = *flags;\n  firstFlag = *pFlags;\n  secondFlag = pFlags[3];\n  if ((((firstFlag & 0xf) == 0) && ((firstFlag & 0x20) != 0)) && ((secondFlag & 0x20) != 0)) {\n    FUN_0800694c(flags);\n    return;\n  }\n  if (((firstFlag & 0xf) == 0) || ((someFlag = pFlags[5] & 1, someFlag == 0 && ((secondFlag & 0x120) == 0)))) {\n    if (((firstFlag & 0x80) != 0) && ((secondFlag & 0x80) != 0)) {\n      FUN_080064cc(flags);\n      return;\n    }\n    if (((firstFlag & 0x40) != 0) && ((secondFlag & 0x40) != 0)) {\n      FUN_08006932(flags);\n    }\n  }\n  else {\n    if (((firstFlag & 1) != 0) && ((secondFlag & 0x100) != 0)) {\n      returnValue = (uint *)((uint)returnValue | 1);\n    }\n    if (((firstFlag & 4) != 0) && (someFlag != 0)) {\n      returnValue = (uint *)((uint)returnValue | 2);\n    }\n    if (((firstFlag & 2) != 0) && (someFlag != 0)) {\n      returnValue = (uint *)((uint)returnValue | 4);\n    }\n    if (((firstFlag & 8) != 0) && (someFlag != 0)) {\n      returnValue = (uint *)((uint)returnValue | 8);\n    }\n    if (returnValue != (uint *)0x0) {\n      if (((firstFlag & 0x20) != 0) && ((secondFlag & 0x20) != 0)) {\n        FUN_0800694c(flags);\n      }\n      if ((((uint)returnValue & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_0800877c(flags);\n        returnValue = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(flags);\n      pFlags = *flags;\n      if ((pFlags[5] & 0x40) == 0) {\n        FUNC_0800877c(flags);\n        return;\n      }\n      pFlags[5] = pFlags[5] & 0xffffffbf;\n      if (subArray == (uint *)0x0) {\n        FUNC_0800877c(flags);\n        return;\n      }\n      subArray[0xd] = (uint)&label1;\n      returnValue = FUN_08004050(subArray);\n      if (returnValue != 0) {\n        (*(code *)subArray[0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_flags_080069ec",
                "param_1": "flags",
                "iVar1": "returnValue",
                "uVar2": "secondFlag",
                "puVar3": "pFlags",
                "uVar4": "someFlag",
                "uVar5": "firstFlag",
                "param_1[0xf]": "returnValue",
                "param_1[0xd]": "subArray",
                "LAB_08006b0c_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "check_bit_at_index_08006b28",
            "code": "\nuint checkBitAtIndex_08006b28(uint value,int array)\n\n{\n  return *(uint *)(array + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "check_bit_at_index_08006b28",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_in_pointer_array_08006b3e",
            "code": "\nvoid setBitInPointerArray_08006b3e(uint bitPosition,int arrayPointer)\n\n{\n  uint index;\n  \n  index = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayPointer + index * 4) = *(uint *)(arrayPointer + index * 4) | 1 << (bitPosition & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_in_pointer_array_08006b3e",
                "param_1": "bitPosition",
                "param_2": "arrayPointer",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_in_array_08006b5c",
            "code": "\nvoid updateBitInArray_08006b5c(uint bitIndex,int array)\n\n{\n  uint arrayIndex;\n  \n  arrayIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(array + arrayIndex * 4) = *(uint *)(array + arrayIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_in_array_08006b5c",
                "param_1": "bitIndex",
                "param_2": "array",
                "uVar1": "arrayIndex"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_address_from_param_08006b7c",
            "code": "\nundefined4 getAddressFromParam_08006b7c(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_address_from_param_08006b7c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_flag_and_return_address_08006bb8",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08006bb8(undefined4 flag)\n\n{\n  undefined4 returnAddress;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnAddress = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnAddress = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnAddress = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnAddress = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnAddress = 0x40011800;\n    break;\n  default:\n    returnAddress = 0;\n  }\n  return returnAddress;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_address_08006bb8",
                "param_1": "flag",
                "uVar1": "returnAddress"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "extract_bits_from_value_08006c60",
            "code": "\nuint extract_bits_from_value_08006c60(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_param_1,&DAT_0800a5b8,input_param_3,input_param_4,input_param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "extract_bits_from_value_08006c60",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "decode_result_08006c7c",
            "code": "\nundefined4 decode_result_08006c7c(undefined4 input_param,undefined4 unused_param,undefined4 array_param,undefined4 size_param)\n\n{\n  int result;\n  uint shifted_bits;\n  \n  result = FUN_08007376(input_param,&DAT_0800a6cc,array_param,size_param,size_param);\n  shifted_bits = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_bits == 3) {\n    return 8;\n  }\n  if (shifted_bits != 4) {\n    if (shifted_bits != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "decode_result_08006c7c",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "array_param",
                "param_4": "size_param",
                "iVar1": "result",
                "uVar2": "shifted_bits"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_configuration_08006ca8",
            "code": "\n\n\nvoid updateConfiguration_08006ca8(int *configPtr,undefined4 value)\n\n{\n  undefined4 result;\n  uint updatedValue;\n  int configValue;\n  uint bitMask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  configValue = *configPtr;\n  if (configValue == 0x40012400) {\n    updatedValue = _DAT_40021018 | 0x200;\n    configValue = 0x200;\n    _DAT_40021018 = updatedValue;\n  }\n  else {\n    updatedValue = 0x40012800;\n    if (configValue == 0x40012800) {\n      updatedValue = _DAT_40021018 | 0x400;\n      configValue = 0x400;\n      _DAT_40021018 = updatedValue;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,value,updatedValue,configValue);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_080040e8(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_configuration_08006ca8",
                "param_1": "configPtr",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "updatedValue",
                "iVar3": "configValue",
                "local_18": "bitMask",
                "local_14": "constant1",
                "local_10": "constant2"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_flags_08006d24",
            "code": "\n\n\nvoid updateFlags_08006d24(int *input)\n\n{\n  if (*input != 0x40012400) {\n    if (*input == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_flags_08006d24",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_data_08006d80",
            "code": "\nundefined2 validate_data_08006d80(undefined4 data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 is_valid;\n  uint result;\n  undefined4 flag1;\n  undefined4 flag2;\n  int size;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&size,0,0x30);\n  result = 0;\n  flag1 = 0;\n  flag2 = 0;\n  is_valid = 0;\n  size = FUN_08007320(data,&DAT_0800a5b8);\n  if (size == 0) {\n    is_valid = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000014 = (undefined)data;\n    iVar1 = FUN_08003bd8(&size);\n    if (iVar1 == 0) {\n      result = FUN_08006c60(data);\n      if (result < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_080038e4(&size,&result);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08003e20(&size);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08003aa0(&size);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800376c(&size,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08003a1c(&size);\n                if ((uVar2 & 0x200) != 0) {\n                  is_valid = FUN_080038dc(&size);\n                }\n                iVar1 = FUN_08003de4(&size);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_08003ce8(&size);\n                  if (iVar1 != 0) {\n                    is_valid = 0;\n                  }\n                }\n                else {\n                  is_valid = 0;\n                }\n              }\n              else {\n                is_valid = 0;\n              }\n            }\n            else {\n              is_valid = 0;\n            }\n          }\n          else {\n            is_valid = 0;\n          }\n        }\n        else {\n          is_valid = 0;\n        }\n      }\n      else {\n        is_valid = 0;\n      }\n    }\n    else {\n      is_valid = 0;\n    }\n  }\n  return is_valid;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_data_08006d80",
                "param_1": "data",
                "local_46": "is_valid",
                "local_44": "result",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "size",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_settings_08006e68",
            "code": "\n\n\nvoid initializeSettings_08006e68(undefined4 param)\n\n{\n  int settingValue;\n  undefined4 convertedSetting;\n  uint bitMask;\n  undefined4 setting1;\n  undefined4 setting2;\n  undefined4 setting3;\n  \n  settingValue = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(param);\n  convertedSetting = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  setting1 = 2;\n  setting2 = 0;\n  setting3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(settingValue << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(convertedSetting,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_settings_08006e68",
                "param_1": "param",
                "iVar1": "settingValue",
                "uVar2": "convertedSetting",
                "local_20": "bitMask",
                "local_1c": "setting1",
                "local_18": "setting2",
                "local_14": "setting3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_system_08007110",
            "code": "\nvoid initialize_system_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_system_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "process_binary_data_08007118",
            "code": "\nvoid processBinaryData_08007118(undefined4 inputData,uint divisor,int param3,undefined4 param4,char flag)\n\n{\n  uint result;\n  int codeResult;\n  int functionResult;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  undefined4 variable4;\n  undefined4 variable5;\n  undefined4 variable6;\n  undefined4 variable7;\n  int buffer;\n  int divisionResult;\n  undefined4 variable8;\n  int param3minus1;\n  undefined4 variable9;\n  undefined4 variable10;\n  undefined variable11;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  variable1 = 0;\n  variable2 = 0;\n  variable3 = 0;\n  variable4 = 0;\n  variable5 = 0;\n  variable6 = 0;\n  variable7 = 0;\n  buffer = FUN_08007320(inputData,&DAT_0800a6cc);\n  if (buffer != 0) {\n    result = FUN_080075dc();\n    divisionResult = result / divisor - 1;\n    param3minus1 = param3 + -1;\n    variable9 = 0;\n    variable8 = 0;\n    variable10 = 0;\n    variable11 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)inputData;\n      codeResult = FUN_08006092(&buffer);\n      if (codeResult != 0) {\n        return;\n      }\n    }\n    codeResult = FUN_08006c7c(inputData);\n    if ((((codeResult == 0) || (codeResult == 4)) || (codeResult == 8)) || ((codeResult == 0xc || (codeResult == 0x18)))) {\n      variable1 = 0x60;\n      variable3 = 0;\n      variable5 = 0;\n      variable4 = 0;\n      variable7 = 0;\n      variable6 = 0;\n      variable2 = param4;\n      functionResult = FUN_08006186(&buffer,&variable1,codeResult);\n      if (functionResult == 0) {\n        result = FUN_08007376(inputData,&DAT_0800a6cc);\n        if ((result & 0x100000) == 0) {\n          FUN_08006390(&buffer,codeResult);\n        }\n        else {\n          FUN_0800643c(&buffer,codeResult);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "process_binary_data_08007118",
                "param_1": "inputData",
                "param_2": "divisor",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "flag",
                "uVar1": "result",
                "iVar2": "codeResult",
                "iVar3": "functionResult",
                "local_74": "variable1",
                "local_70": "variable2",
                "local_6c": "variable3",
                "local_68": "variable4",
                "local_64": "variable5",
                "local_60": "variable6",
                "local_5c": "variable7",
                "local_58": "buffer",
                "local_54": "divisionResult",
                "local_50": "variable8",
                "local_4c": "param3minus1",
                "local_48": "variable9",
                "local_44": "variable10",
                "local_1b": "variable11"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320",
                "FUN_08006186"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 input)\n\n{\n  int status;\n  uint flag;\n  int result [17];\n  \n  result[0] = FUN_08007320(input,&DAT_0800a6cc);\n  if ((result[0] != 0) &&\n     ((((status = FUN_08006c7c(input), status == 0 || (status == 4)) || (status == 8)) ||\n      ((status == 0xc || (status == 0x18)))))) {\n    flag = FUN_08007376(input,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(result,status);\n    }\n    else {\n      FUN_08006460(result,status);\n    }\n    FUN_08005e2e(result);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "input",
                "iVar1": "status",
                "uVar2": "flag",
                "local_50": "result"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_0800723c",
            "code": "\nvoid initialize_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "execute_initialization_08007246",
            "code": "\nvoid executeInitialization_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "execute_initialization_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_device_08007258",
            "code": "\n\n\nvoid initialize_device_08007258(uint device_id,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 shifted_device_id;\n  uint bitmask;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  \n  shifted_device_id = FUN_08006bb8((device_id << 0x18) >> 0x1c);\n  bitmask = 1 << (device_id & 0xf) & 0xffff;\n  local_var3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((device_id - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((device_id == 0xf) || (device_id == 0x13)) || (device_id == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  local_var1 = param_2;\n  local_var2 = param_3;\n  FUN_080040e8(shifted_device_id,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_device_08007258",
                "param_1": "device_id",
                "uVar1": "shifted_device_id",
                "local_20": "bitmask",
                "local_1c": "local_var1",
                "local_18": "local_var2",
                "local_14": "local_var3"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "execute_operation_080072d8",
            "code": "\nvoid executeOperation_080072d8(undefined4 operationParam,undefined2 operationFlag,int conditionParam,undefined4 dataBuffer)\n\n{\n  if (conditionParam == 0) {\n    FUN_080042e2(operationParam,operationFlag,0,dataBuffer,dataBuffer);\n    return;\n  }\n  FUN_080042e2(operationParam,operationFlag,1,dataBuffer,dataBuffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "execute_operation_080072d8",
                "param_1": "operationParam",
                "param_2": "operationFlag",
                "param_3": "conditionParam",
                "param_4": "dataBuffer"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "initialize_function_080072f0",
            "code": "\nvoid initializeFunction_080072f0(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080042d4(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "initialize_function_080072f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_system_080072fa",
            "code": "\nvoid initialize_system_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_system_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_after_match_08007306",
            "code": "\nundefined4 find_value_after_match_08007306(int key,char *data)\n\n{\n  while( true ) {\n    if (*data == -1) {\n      return 0;\n    }\n    if (*data == key) break;\n    data = data + 0xc;\n  }\n  return *(undefined4 *)(data + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_after_match_08007306",
                "param_1": "key",
                "param_2": "data"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_parameter_08007320",
            "code": "\nundefined4 checkParameter_08007320(int inputValue)\n\n{\n  undefined4 result;\n  \n  if (inputValue != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_parameter_08007320",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_value_in_array_08007332",
            "code": "\nint find_value_in_array_08007332(int value_to_find,char *array_ptr)\n\n{\n  while( true ) {\n    if (*(int *)(array_ptr + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array_ptr + 4) == value_to_find) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return (int)*array_ptr;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_value_in_array_08007332",
                "param_1": "value_to_find",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_parameter_0800734a",
            "code": "\nundefined4 checkParameter_0800734a(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_parameter_0800734a",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "lookup_value_0800735a",
            "code": "\nundefined4 lookup_value_0800735a(int value_to_find,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0xffffffff;\n    }\n    if (*data_array == value_to_find) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "lookup_value_0800735a",
                "param_1": "value_to_find",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "validate_input_08007376",
            "code": "\nundefined4 validate_input_08007376(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007376": "validate_input_08007376",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "compare_values_0800738a",
            "code": "\nundefined4 compareValues_0800738a(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "compare_values_0800738a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_smallest_080073ae",
            "code": "\nint compare_and_return_smallest_080073ae(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_smallest_080073ae",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "run_infinite_loop_080073e8",
            "code": "\nvoid run_infinite_loop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "run_infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_hardware_080073ec",
            "code": "\n\n\nvoid initializeHardware_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_hardware_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_flags_based_on_param_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlagsBasedOnParam_08007438(int *flagPtr)\n\n{\n  if (*flagPtr == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = flagPtr;\n  }\n  if (*flagPtr == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = flagPtr;\n  }\n  if (*flagPtr == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = flagPtr;\n  }\n  if (*flagPtr == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = flagPtr;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_flags_based_on_param_08007438",
                "param_1": "flagPtr"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "clear_bits_based_on_param_080074e0",
            "code": "\n\n\nvoid clearBitsBasedOnParam_080074e0(int *param)\n\n{\n  if (*param == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*param == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*param == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*param == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "clear_bits_based_on_param_080074e0",
                "param_1": "param"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "resolve_timer_irq_08007544",
            "code": "\nuint resolveTimerIRQ_08007544(uint irqNumber)\n\n{\n  if (irqNumber == 0xffffffff) {\n    return 0;\n  }\n  if (irqNumber == 0x40000400) {\n    return 0x1d;\n  }\n  if (irqNumber < 0x40000401) {\n    if (irqNumber == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (irqNumber == 0x40000800) {\n      return 0x1e;\n    }\n    if (irqNumber == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "resolve_timer_irq_08007544",
                "param_1": "irqNumber",
                "undefined4": "uint"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "identify_timer_instance_08007594",
            "code": "\nundefined4 identifyTimerInstance_08007594(uint instanceValue)\n\n{\n  if (instanceValue == 0xffffffff) {\n    return 0;\n  }\n  if (instanceValue == 0x40000400) {\n    return 1;\n  }\n  if (instanceValue < 0x40000401) {\n    if (instanceValue == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (instanceValue == 0x40000800) {\n      return 1;\n    }\n    if (instanceValue == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "identify_timer_instance_08007594",
                "param_1": "instanceValue"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "update_clock_source_080075dc",
            "code": "\nint updateClockSource_080075dc(undefined4 inputParam)\n\n{\n  uint clockSource;\n  int returnValue;\n  uint selectedClock;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  uint tempVar5;\n  uint tempVar6;\n  \n  tempVar2 = 0;\n  tempVar3 = 0;\n  tempVar4 = 0;\n  tempVar5 = 0;\n  tempVar6 = 0;\n  tempVar1 = 0;\n  FUN_08005a68(&tempVar2,&tempVar1);\n  returnValue = FUN_08007594(inputParam);\n  clockSource = tempVar6;\n  selectedClock = tempVar5;\n  if (returnValue == 1) {\n    returnValue = FUN_08005a28();\n  }\n  else if (returnValue == 2) {\n    returnValue = FUN_08005a48();\n    selectedClock = clockSource;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    returnValue = 0;\n    selectedClock = 0;\n  }\n  if (selectedClock != 0x500) {\n    if (selectedClock < 0x501) {\n      if (selectedClock != 0x400) {\n        return returnValue;\n      }\n    }\n    else if ((selectedClock != 0x600) && (selectedClock != 0x700)) {\n      return returnValue;\n    }\n  }\n  return returnValue << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "update_clock_source_080075dc",
                "param_1": "inputParam",
                "uVar1": "clockSource",
                "iVar2": "returnValue",
                "uVar3": "selectedClock",
                "local_20": "tempVar1",
                "local_1c": "tempVar2",
                "local_18": "tempVar3",
                "local_14": "tempVar4",
                "local_10": "tempVar5",
                "local_c": "tempVar6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_data_08007648",
            "code": "\nvoid initializeData_08007648(undefined4 *dataArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char charVar;\n  uint result;\n  int executionResult;\n  undefined4 *pointerVar;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  pointerVar = dataArray + 1;\n  *dataArray = 0x40000000;\n  dataArray[1] = 0x40000000;\n  dataArray[4] = param2;\n  result = FUN_080075dc();\n  dataArray[2] = result / 1000000 - 1;\n  dataArray[5] = 0;\n  dataArray[3] = 0;\n  dataArray[6] = 0;\n  dataArray[0x13] = param4;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = param3;\n  charVar = FUN_08007544(*dataArray);\n  FUN_08003f30((int)charVar,0xe,0);\n  charVar = FUN_08007544(*dataArray);\n  FUN_08003f94((int)charVar);\n  executionResult = FUN_08006060(pointerVar);\n  if ((executionResult == 0) && (executionResult = FUN_08006128(pointerVar,&localVar1,0), executionResult == 0)) {\n    FUN_08006280(pointerVar,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_data_08007648",
                "param_1": "dataArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "charVar",
                "uVar2": "result",
                "iVar3": "executionResult",
                "puVar4": "pointerVar",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08006128",
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initialize_data_080076e0(undefined4 *data_pointer)\n\n{\n  char result;\n  int status;\n  \n  data_pointer[0x13] = 0;\n  result = FUN_08007544(*data_pointer);\n  FUN_08003fb0((int)result);\n  status = FUN_08005df4(data_pointer + 1);\n  if (status == 0) {\n    FUN_080062f4(data_pointer + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "data_pointer",
                "cVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_application_08007708",
            "code": "\nvoid initialize_application_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_application_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_app_08007710",
            "code": "\nvoid initialize_app_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_app_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_4_08007718",
            "code": "\nint subtract_4_08007718(int input_value)\n\n{\n  result input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_4_08007718",
                "param_1": "input_value",
                "return": "result"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_callback_function_0800771c",
            "code": "\nvoid executeCallbackFunction_0800771c(int callbackData)\n\n{\n  int callbackStruct;\n  \n  callbackStruct = FUN_08007718();\n  if ((*(code **)(callbackStruct + 0x4c) != (code *)0x0) && (*(char *)(callbackData + 0x1c) == '\\x01')) {\n    (**(code **)(callbackStruct + 0x4c))(callbackStruct,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_callback_function_0800771c",
                "param_1": "callbackData",
                "iVar1": "callbackStruct"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_function_08007736",
            "code": "\nvoid executeFunction_08007736(void)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007718();\n  if (*(functionPointerArray **)(functionPointer + 0x48) != (functionPointerArray *)0x0) {\n    (**(functionPointerArray **)(functionPointer + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_function_08007736",
                "iVar1": "functionPointer",
                "code": "functionPointerArray"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_value_from_offset_08007744",
            "code": "\nundefined4 get_value_from_offset_08007744(int input_value)\n\n{\n  return *(undefined4 *)(*(int *)(input_value + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_value_from_offset_08007744",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "update_memory_value_0800774a",
            "code": "\nvoid updateMemoryValue_0800774a(int pointerToStruct,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(pointerToStruct + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "update_memory_value_0800774a",
                "param_1": "pointerToStruct",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "update_parameter_value_08007750",
            "code": "\nvoid updateParameterValue_08007750(int inputData,int index,undefined4 newParamValue)\n\n{\n  *(undefined4 *)(*(int *)(inputData + 4) + 0x34 + index * 4) = newParamValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "update_parameter_value_08007750",
                "param_1": "inputData",
                "param_2": "index",
                "param_3": "newParamValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *params,int param2,int param3,int param4,undefined param5)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 pinConfig1;\n  uint pinConfig2;\n  uint pinConfig3;\n  int *dataPtr;\n  uint bitMask1;\n  uint bitMask2;\n  uint bitMask3;\n  undefined4 constant3;\n  \n  if (params != (int *)0x0) {\n    dataPtr = params + 1;\n    peripheral1 = FUN_08007320((int)*(char *)(params + 0x16),&DAT_0800a69c);\n    peripheral2 = FUN_08007320((int)*(char *)((int)params + 0x59),&DAT_0800a66c);\n    if ((peripheral1 == 0) || (peripheral2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheral1 = FUN_080073ae(peripheral1,peripheral2);\n      *params = peripheral1;\n      if (peripheral1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)params + 0x5a) = 0x1f;\n          *(undefined *)((int)params + 0x5b) = 0x20;\n          DAT_20000668 = dataPtr;\n        }\n        if (*params == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)params + 0x5a) = 0x21;\n          *(undefined *)((int)params + 0x5b) = 0x22;\n          DAT_2000066c = dataPtr;\n        }\n        pinConfig1 = FUN_08006bb8((uint)((int)*(char *)((int)params + 0x59) << 0x18) >> 0x1c);\n        bitMask1 = 1 << ((int)*(char *)((int)params + 0x59) & 0xfU) & 0xffff;\n        pinConfig2 = FUN_08007376((int)*(char *)((int)params + 0x59),&DAT_0800a66c);\n        pinConfig3 = FUN_08007376((int)*(char *)((int)params + 0x59),&DAT_0800a66c);\n        bitMask2 = (pinConfig2 >> 3 & 1) << 4 | pinConfig3 & 7;\n        constant3 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)((int)params + 0x59),&DAT_0800a66c);\n        bitMask3 = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)((int)params + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pinConfig3 = 1;\n        pinConfig2 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 2:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 3:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 4:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 5:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 6:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 7:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 8:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 9:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 10:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xb:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xc:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xd:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xe:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xf:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x10:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x11:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x12:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x13:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x14:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x15:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x16:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x17:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x1b:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x1c:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x21:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x22:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x23:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x24:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pinConfig3;\n        }\n        FUN_080040e8(pinConfig1,&bitMask1,pinConfig2,pinConfig3);\n        pinConfig1 = FUN_08006bb8((uint)((int)*(char *)(params + 0x16) << 0x18) >> 0x1c);\n        bitMask1 = 1 << ((int)*(char *)(params + 0x16) & 0xfU) & 0xffff;\n        pinConfig2 = FUN_08007376((int)*(char *)(params + 0x16),&DAT_0800a69c);\n        pinConfig3 = FUN_08007376((int)*(char *)(params + 0x16),&DAT_0800a69c);\n        bitMask2 = (pinConfig2 >> 3 & 1) << 4 | pinConfig3 & 7;\n        constant3 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)(params + 0x16),&DAT_0800a69c);\n        bitMask3 = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)(params + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pinConfig3 = 1;\n        pinConfig2 = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 2:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 3:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 4:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 5:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 6:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 7:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 8:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 9:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 10:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xb:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xc:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xd:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xe:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0xf:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x10:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x11:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x12:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x13:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x14:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x15:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x16:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x17:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x1b:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x1c:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x21:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x22:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x23:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pinConfig3;\n          break;\n        case 0x24:\n          pinConfig2 = 0x40010000;\n          pinConfig3 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pinConfig3;\n        }\n        FUN_080040e8(pinConfig1,&bitMask1,pinConfig2,pinConfig3);\n        params[1] = *params;\n        params[2] = param2;\n        params[3] = 0;\n        params[4] = param4;\n        params[7] = 0xff;\n        params[5] = param3;\n        params[6] = 0;\n        params[8] = 0;\n        params[9] = 0;\n        *(undefined *)((int)params + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)params + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)params + 0x5a));\n        FUN_08003f30((int)*(char *)((int)params + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)params + 0x5b));\n        FUN_080045c0(dataPtr);\n        *(undefined *)((int)params + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "params",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "pinConfig1",
                "uVar4": "pinConfig2",
                "uVar5": "pinConfig3",
                "piVar6": "dataPtr",
                "local_38": "bitMask1",
                "local_34": "bitMask2",
                "local_30": "bitMask3",
                "local_2c": "constant3"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "calculate_result_08007e74",
            "code": "\nint calculateResult_08007e74(int inputValue,undefined4 paramA,undefined4 paramB,undefined4 paramC)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 paramD;\n  \n  paramD = paramC;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = inputValue + 4;\n    result = FUN_08004728(tempVar,paramA,paramB,paramC,paramD);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "calculate_result_08007e74",
                "param_1": "inputValue",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "paramD"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_to_array_08007ede",
            "code": "\nundefined4 copyDataToArray_08007ede(int destinationArray,int sourceArray,uint arraySize)\n\n{\n  uint i;\n  \n  if (0x20 < arraySize) {\n    return 2;\n  }\n  for (i = 0; i < arraySize; i = i + 1 & 0xff) {\n    *(undefined *)(destinationArray + i + 0x68) = *(undefined *)(sourceArray + i);\n    *(char *)(destinationArray + 0x88) = *(char *)(destinationArray + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_to_array_08007ede",
                "param_1": "destinationArray",
                "param_2": "sourceArray",
                "param_3": "arraySize",
                "uVar1": "i"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "check_conditions_08007f0e",
            "code": "\nint checkConditions_08007f0e(int input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int resultValue;\n  uint difference;\n  int status;\n  int tempVar1;\n  undefined4 tempVar2;\n  \n  tempVar2 = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar1 = input + 4;\n    resultValue = FUN_080047f4(tempVar1,param2,param3,param4,tempVar2);\n    if (resultValue == 0) {\n      status = 0;\n      while ((resultValue = FUN_0800542a(tempVar1), resultValue != 0x20 && (status == 0))) {\n        resultValue = FUN_08003760();\n        difference = resultValue - initialValue;\n        if (difference < 0x65) {\n          resultValue = FUN_08005430(tempVar1);\n          if (resultValue != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    resultValue = FUN_08005430(tempVar1);\n  } while ((resultValue == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "check_conditions_08007f0e",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "resultValue",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar1",
                "uVar6": "tempVar2"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract4_08007f78",
            "code": "\nint subtract4_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract4_08007f78",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_param_08007f7c",
            "code": "\nvoid updateParam_08007f7c(int ptr,int data)\n\n{\n  if (ptr != 0) {\n    if (data != 0) {\n      *(int *)(ptr + 0x60) = data;\n      FUN_080049e0(ptr + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_param_08007f7c",
                "param_1": "ptr",
                "param_2": "data"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_data_08007f8e",
            "code": "\nvoid updateData_08007f8e(int dataPtr,int newValue)\n\n{\n  if (dataPtr != 0) {\n    if (newValue != 0) {\n      *(int *)(dataPtr + 100) = newValue;\n      FUN_080049e0(dataPtr + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_data_08007f8e",
                "param_1": "dataPtr",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_params_08007fa0",
            "code": "\nvoid processParams_08007fa0(int inputPtr,int flag,int offset,undefined4 undefined_arg)\n\n{\n  int outputPtr;\n  \n  outputPtr = FUN_08007f78();\n  if (offset == *(int *)(inputPtr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(outputPtr + 0x88) = 0;\n      *(undefined *)(outputPtr + 0x5c) = 0;\n      if (*(code **)(outputPtr + 100) != (code *)0x0) {\n        (**(code **)(outputPtr + 100))();\n      }\n      FUN_080048c8(inputPtr,outputPtr + 0x68,*(undefined *)(outputPtr + 0x88),8);\n      return;\n    }\n    *(undefined *)(outputPtr + 0x5c) = 1;\n    FUN_08004954(inputPtr,outputPtr + 0x68,0x20,8,undefined_arg);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "param_1": "inputPtr",
                "param_2": "flag",
                "param_3": "offset",
                "param_4": "undefined_arg",
                "iVar1": "outputPtr"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_08007ff0",
            "code": "\nvoid execute_function_08007ff0(undefined4 param)\n\n{\n  int function_address;\n  \n  function_address = FUN_08007f78();\n  if (((*(code **)(function_address + 0x60) != (code *)0x0) && (*(char *)(function_address + 0x5c) == '\\x01')) &&\n     (*(char *)(function_address + 0x2c) != ' ')) {\n    (**(code **)(function_address + 0x60))(function_address + 0x68);\n  }\n  FUN_080049e0(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_08007ff0",
                "param_1": "param",
                "iVar1": "function_address"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputParameter)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (*(char *)(returnValue + 0x5d) == '\\0') {\n    FUN_080049e0(inputParameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputParameter",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_pins_08008078",
            "code": "\n\n\nvoid initializeUARTPins_08008078(int *uartPins)\n\n{\n  int pinPeripheral1;\n  int pinPeripheral2;\n  undefined4 uartBits;\n  uint uartConfig;\n  uint pinMask;\n  uint pinConfig;\n  uint pinShift;\n  undefined4 uartMode;\n  \n  if (uartPins != (int *)0x0) {\n    pinPeripheral1 = FUN_08007320((int)*(char *)(uartPins + 0x16),&DAT_0800a864);\n    pinPeripheral2 = FUN_08007320((int)*(char *)((int)uartPins + 0x59),&DAT_0800a81c);\n    if ((pinPeripheral2 == 0) || (pinPeripheral1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",pinPeripheral2);\n    }\n    else {\n      pinPeripheral1 = FUN_080073ae(pinPeripheral1);\n      *uartPins = pinPeripheral1;\n      if (pinPeripheral1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (pinPeripheral1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartPins + 0x11) = 0;\n          *(undefined *)((int)uartPins + 0x5a) = 0x25;\n        }\n        else if (pinPeripheral1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartPins + 0x11) = 1;\n          *(undefined *)((int)uartPins + 0x5a) = 0x26;\n        }\n        else if (pinPeripheral1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartPins + 0x11) = 2;\n          *(undefined *)((int)uartPins + 0x5a) = 0x27;\n        }\n        uartBits = FUN_08006bb8((uint)((int)*(char *)((int)uartPins + 0x59) << 0x18) >> 0x1c);\n        uartConfig = FUN_08007376((int)*(char *)((int)uartPins + 0x59),&DAT_0800a81c);\n        pinMask = 1 << (*(byte *)((int)uartPins + 0x59) & 0xf) & 0xffff;\n        pinConfig = (uartConfig >> 3 & 1) << 4 | uartConfig & 7;\n        pinShift = (uartConfig << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartConfig << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartMode = 3;\n        FUN_080040e8(uartBits,&pinMask);\n        uartBits = FUN_08006bb8((uint)((int)*(char *)(uartPins + 0x16) << 0x18) >> 0x1c);\n        uartConfig = FUN_08007376((int)*(char *)(uartPins + 0x16),&DAT_0800a864);\n        pinMask = 1 << (*(byte *)(uartPins + 0x16) & 0xf) & 0xffff;\n        pinConfig = (uartConfig >> 3 & 1) << 4 | uartConfig & 7;\n        pinShift = (uartConfig << 0x1a) >> 0x1e;\n        FUN_080040e8(uartBits,&pinMask);\n        (&DAT_200006c0)[*(byte *)(uartPins + 0x11)] = uartPins + 1;\n        uartPins[1] = *uartPins;\n        uartPins[2] = uartPins[0x12];\n        uartPins[3] = uartPins[0x13];\n        uartPins[4] = uartPins[0x14];\n        uartPins[5] = uartPins[0x15];\n        uartPins[6] = 0xc;\n        uartPins[7] = 0;\n        uartPins[8] = 0;\n        FUN_0800674e(uartPins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_pins_08008078",
                "param_1": "uartPins",
                "iVar1": "pinPeripheral1",
                "iVar2": "pinPeripheral2",
                "uVar3": "uartBits",
                "uVar4": "uartConfig",
                "local_20": "pinMask",
                "local_1c": "pinConfig",
                "local_18": "pinShift",
                "local_14": "uartMode"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    secondResult = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(secondResult,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "find_and_execute_function_08008500",
            "code": "\nuint find_and_execute_function_08008500(undefined4 arg1,uint arg2)\n\n{\n  int result1;\n  int result2;\n  uint index;\n  \n  result1 = FUN_08003760();\n  result2 = FUN_08007320(2,&DAT_0800a864);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (result2 = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != result2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    result2 = FUN_080067ac((&DAT_200006c0)[index],arg1,arg2 & 0xffff,1000);\n    if (result2 == 0) {\n      return arg2;\n    }\n    result2 = FUN_08003760();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "find_and_execute_function_08008500",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_flag_set_080085b8",
            "code": "\nbool isFlagSet_080085b8(int index)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(index + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "index",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "check_flag_validity_080085dc",
            "code": "\nbool checkFlagValidity_080085dc(int flag)\n\n{\n  uint flagCheckResult;\n  \n  flagCheckResult = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flag + 0x44)]);\n  return (flagCheckResult & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "check_flag_validity_080085dc",
                "param_1": "flag",
                "uVar1": "flagCheckResult"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_and_process_data_08008600",
            "code": "\nundefined4 extract_and_process_data_08008600(int input_parameter,undefined *output_parameter,undefined4 size_parameter,undefined4 additional_parameter)\n\n{\n  int result;\n  \n  if (input_parameter == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_parameter = *(undefined *)(input_parameter + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input_parameter + 0x44)],input_parameter + 0x45,1,&DAT_200006c0,additional_parameter);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_and_process_data_08008600",
                "param_1": "input_parameter",
                "param_2": "output_parameter",
                "param_3": "size_parameter",
                "param_4": "additional_parameter",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int dataPointer,undefined4 newValue,undefined4 unusedParam,undefined4 dataSize)\n\n{\n  int returnValue;\n  uint index;\n  \n  if (dataPointer != 0) {\n    returnValue = FUN_080085b8();\n    if (returnValue == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = newValue;\n      *(int *)(&DAT_20000684 + index * 4) = dataPointer;\n      FUN_08003f30((int)*(char *)(dataPointer + 0x5a),0,1,index,dataSize);\n      FUN_08003f94((int)*(char *)(dataPointer + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unusedParam",
                "param_4": "dataSize",
                "iVar1": "returnValue",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int dataPtr,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (dataPtr != 0) {\n    index = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)index * 4) = dataPtr;\n    FUN_08003f30((int)*(char *)(dataPtr + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(dataPtr + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_value_index_080086e8",
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_function_0800870c",
            "code": "\nvoid execute_function_0800870c(void)\n\n{\n  uint result;\n  \n  result = FUN_080086e8();\n  if (result < 5) {\n    (**(code **)(&DAT_20000670 + result * 4))(*(undefined4 *)(&DAT_20000684 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_function_0800870c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_action_08008730",
            "code": "\nvoid executeAction_08008730(void)\n\n{\n  uint randomIndex;\n  int result;\n  int dataPtr;\n  \n  randomIndex = FUN_080086e8();\n  dataPtr = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (result = (**(code **)(&DAT_20000698 + randomIndex * 4))(dataPtr), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_action_08008730",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "dataPtr"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int memorySize)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + memorySize <= endOfStack) {\n    DAT_200006d4 = DAT_200006d4 + memorySize;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "memorySize",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "endOfStack"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_default_value_08008840",
            "code": "\nuint32 get_default_value_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_default_value_08008840",
                "undefined4": "uint32"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "set_memory_to2000_08008846",
            "code": "\nundefined4 setMemoryTo2000_08008846(undefined4 param1,int param2)\n\n{\n  *(undefined4 *)(param2 + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "set_memory_to2000_08008846",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "check_status_08008850",
            "code": "\nStatusType check_status_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "check_status_08008850",
                "undefined4": "StatusType"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_08008854",
            "code": "\nundefined4 initialize_08008854(void)\n\n{\n  return_val 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_08008854",
                "return": "return_val"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_application_08008858",
            "code": "\nvoid initializeApplication_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_application_08008858",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_data_0800885c",
            "code": "\nvoid initializeData_0800885c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08008500(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_data_0800885c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_function_08008868",
            "code": "\nvoid infiniteLoopFunction_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_function_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "initialize_application_0800887c",
            "code": "\nvoid initializeApplication_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "initialize_application_0800887c",
                "undefined4": "void"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "get_modified_value_08008880",
            "code": "\nuint getModifiedValue_08008880(uint inputValue)\n\n{\n  bool isLessThanThreshold;\n  char selectedChar;\n  uint resultValue;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isLessThanThreshold = true;\n    }\n    else {\n      isLessThanThreshold = false;\n    }\n  }\n  else {\n    isLessThanThreshold = inputValue < 0x3c;\n  }\n  if (isLessThanThreshold) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    selectedChar = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    selectedChar = -1;\n  }\n  if (selectedChar == -1) {\n    resultValue = 0;\n  }\n  else {\n    resultValue = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return resultValue >> (0xc - DAT_20000088 & 0xff);\n      }\n      return resultValue << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return resultValue;\n}\n\n",
            "renaming": {
                "FUN_08008880": "get_modified_value_08008880",
                "param_1": "inputValue",
                "bVar1": "isLessThanThreshold",
                "cVar2": "selectedChar",
                "uVar3": "resultValue"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint inputIndex,uint inputValue)\n\n{\n  int result;\n  int dataIndex;\n  \n  if (inputIndex < 0x3c) {\n    dataIndex = (int)(char)(&DAT_0800a908)[inputIndex];\n  }\n  else {\n    dataIndex = -1;\n  }\n  if (dataIndex != -1) {\n    result = FUN_0800738a(dataIndex,&DAT_0800a6cc);\n    if (result == 0) {\n      FUN_08008990(inputIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (inputValue < 0x80) {\n        FUN_08008a24(inputIndex,0);\n      }\n      else {\n        FUN_08008a24(inputIndex,1);\n      }\n    }\n    else {\n      result = FUN_08006b28(dataIndex,&DAT_200006d8);\n      if (result == 0) {\n        FUN_08006b3e(dataIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(dataIndex,0x3e418,0xff,inputValue,result == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "inputIndex",
                "param_2": "inputValue",
                "iVar1": "result",
                "iVar2": "dataIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint inputValue,undefined4 flag,undefined4 arg1,undefined1 *buffer)\n\n{\n  int result;\n  undefined1 *ptr;\n  int index;\n  \n  if (inputValue < 0x3c) {\n    index = (int)(char)(&DAT_0800a908)[inputValue];\n    ptr = &DAT_0800a908;\n  }\n  else {\n    index = -1;\n    ptr = buffer;\n  }\n  if (index != -1) {\n    result = FUN_08006b28(index,&DAT_200006d8,arg1,ptr,buffer);\n    if (result != 0) {\n      result = FUN_0800738a(index,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(index);\n      }\n      FUN_08006b5c(index,&DAT_200006d8);\n    }\n    switch(flag) {\n    case 0:\n      FUN_08007258(index,0);\n      break;\n    case 1:\n      FUN_08007258(index,1,0);\n      break;\n    case 2:\n      FUN_08007258(index,0,1);\n      break;\n    case 3:\n      FUN_08007258(index,0,2);\n    }\n    FUN_08006b3e(index,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "inputValue",
                "param_2": "flag",
                "param_3": "arg1",
                "param_4": "buffer",
                "iVar1": "result",
                "iVar3": "index",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid processData_08008a24(uint inputIndex,undefined4 param2,undefined4 param3,undefined1 *param4)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined1 *dataPointer;\n  uint value;\n  \n  if (inputIndex < 0x3c) {\n    value = (uint)(char)(&DAT_0800a908)[inputIndex];\n    dataPointer = &DAT_0800a908;\n  }\n  else {\n    value = 0xffffffff;\n    dataPointer = param4;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08006b28(value,&DAT_200006ec,param3,dataPointer,param4), result != 0)) {\n    shiftedValue = FUN_08006b7c((value << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "dataPointer",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_character_validity_08008a6c",
            "code": "\nchar checkCharacterValidity_08008a6c(uint inputCharacter)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedValue;\n  uint lookupIndex;\n  \n  if (inputCharacter < 0x3c) {\n    lookupIndex = (uint)(char)(&DAT_0800a908)[inputCharacter];\n  }\n  else {\n    lookupIndex = 0xffffffff;\n  }\n  if (lookupIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_08006b28(lookupIndex,&DAT_200006ec);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((lookupIndex << 0x18) >> 0x1c);\n      isValid = FUN_080072f0(shiftedValue,1 << (lookupIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_character_validity_08008a6c",
                "param_1": "inputCharacter",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "lookupIndex"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_system_08008abc",
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_offset_08008afa",
            "code": "\nushort calculate_offset_08008afa(int memory_address)\n\n{\n  return (*(short *)(memory_address + 0x134) + 0x40) - *(short *)(memory_address + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_offset_08008afa",
                "param_1": "memory_address"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int dataPtr)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_08008600(dataPtr,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(dataPtr + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(dataPtr + 0x62))) {\n    *(undefined *)(*(int *)(dataPtr + 0x5c) + (uint)*(ushort *)(dataPtr + 0x60)) = newValue;\n    *(ushort *)(dataPtr + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "dataPtr",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_parameters_08008c20",
            "code": "\nvoid initializeParameters_08008c20(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_parameters_08008c20",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "configure_serial_communication_08008c44",
            "code": "\nvoid configureSerialCommunication_08008c44(int serialPort,undefined4 baudRate,byte serialConfigByte)\n\n{\n  uint configFlag;\n  byte bits;\n  int parityFlag;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = serialConfigByte;\n  bits = serialConfigByte & 7;\n  if (bits == 4) {\n    parityFlag = 7;\n  }\n  else if (bits == 6) {\n    parityFlag = 8;\n  }\n  else if (bits == 2) {\n    parityFlag = 6;\n  }\n  else {\n    parityFlag = 0;\n  }\n  if ((serialConfigByte & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    parityFlag = parityFlag + 1;\n  }\n  else if ((serialConfigByte & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    parityFlag = parityFlag + 1;\n  }\n  if ((serialConfigByte & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (parityFlag == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (parityFlag == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    parityFlag = 0;\n  }\n  if (parityFlag != 0) {\n    FUN_08008078(serialPort + 0xd4);\n    FUN_0800863c(serialPort + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (configFlag < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[configFlag];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,configFlag,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "configure_serial_communication_08008c44",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "serialConfigByte",
                "extraout_r1": "configFlag",
                "bVar1": "bits",
                "iVar2": "parityFlag",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "extract_byte_from_table_08008d00",
            "code": "\nvoid extract_byte_from_table_08008d00(int address,uint index)\n\n{\n  undefined byte_value;\n  code *function_jump_table;\n  \n  if (index < 0x3c) {\n    byte_value = (&DAT_0800a908)[index];\n  }\n  else {\n    byte_value = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = byte_value;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*function_jump_table)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "extract_byte_from_table_08008d00",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byte_value",
                "UNRECOVERED_JUMPTABLE": "function_jump_table"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int address,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(address + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  dataPointer[1] = 0;\n  dataPointer[2] = 1000;\n  *dataPointer = &PTR_LAB_08008ba4_1_0800aab8;\n  if (dataPointer == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,param3,&DAT_20000700,param4);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(param2,&DAT_0800a81c);\n    *(undefined *)((int)dataPointer + 0x12d) = result;\n    result = FUN_0800734a(param2,&DAT_0800a864);\n    *(undefined *)(dataPointer + 0x4b) = result;\n  }\n  FUN_08008c20(dataPointer);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_param_and_execute_08008d8c",
            "code": "\nvoid check_param_and_execute_08008d8c(int check_value,int comparison_value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (check_value != 1) {\n    return;\n  }\n  if (comparison_value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_param_and_execute_08008d8c",
                "param_1": "check_value",
                "param_2": "comparison_value"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value2,undefined value3,undefined value4,\n                 undefined value5)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value2;\n  *(undefined *)((int)dataPointer + 5) = value3;\n  *(undefined *)((int)dataPointer + 6) = value4;\n  *(undefined *)((int)dataPointer + 7) = value5;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "param_5": "value5"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "process_data_08008e14",
            "code": "\nvoid processData_08008e14(int status,int value)\n\n{\n  if ((status == 1) && (value == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "process_data_08008e14",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_linear_growth_08008ef4",
            "code": "\nint calculate_linear_growth_08008ef4(int start_value,int start_time,int end_time,int start_growth,int end_growth)\n\n{\n  return (unsigned_integer)((end_growth - start_growth) * (start_value - start_time)) / (unsigned_integer)(end_time - start_time) + start_growth;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_linear_growth_08008ef4",
                "param_1": "start_value",
                "param_2": "start_time",
                "param_3": "end_time",
                "param_4": "start_growth",
                "param_5": "end_growth",
                "uint": "unsigned_integer"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_system_08008f0e",
            "code": "\nvoid initialize_system_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_system_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "run_loop_08008f1c",
            "code": "\nvoid run_loop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "run_loop_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_bits_set_08008f3c",
            "code": "\nchar count_bits_set_08008f3c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_bits_set_08008f3c",
                "param_1": "number",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_data_08008f78",
            "code": "\nvoid initializeData_08008f78(int inputFlag,int paramValue,undefined4 param3,undefined4 param4)\n\n{\n  if (inputFlag != 1) {\n    return;\n  }\n  if (paramValue == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_data_08008f78",
                "param_1": "inputFlag",
                "param_2": "paramValue",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "process_function_08009084",
            "code": "\nvoid processFunction_08009084(int inputParam)\n\n{\n  int indexVar;\n  \n  if (*(int *)(inputParam + 8) != 0) {\n    (**(code **)(inputParam + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  indexVar = FUN_08008f3c();\n  if ((&DAT_20000858)[indexVar * 5] != 0) {\n    processFunction_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "process_function_08009084",
                "param_1": "inputParam",
                "iVar1": "indexVar"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_function_08009094",
            "code": "\nvoid checkAndExecuteFunction_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "execute_function_080090c2",
            "code": "\nvoid executeFunction_080090c2(undefined4 ptr_input,undefined4 ptr_output)\n\n{\n  FUN_08009108(ptr_output,ptr_input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "execute_function_080090c2",
                "param_1": "ptr_input",
                "param_2": "ptr_output"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failure_080090cc",
            "code": "\nvoid assertionFailure_080090cc(undefined4 file,undefined4 line,char *assertion,undefined4 function)\n\n{\n  undefined4 assertString;\n  char *delimiter;\n  undefined8 returnValue;\n  undefined4 additionalInfo;\n  \n  assertString = *(undefined4 *)(DAT_20000090 + 0xc);\n  additionalInfo = function;\n  if (assertion == (char *)0x0) goto LAB_080090f0;\n  delimiter = \", function: \";\n  do {\n    FUN_08009124(assertString,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,delimiter,assertion,additionalInfo);\n    returnValue = FUN_08009b5c();\n    line = (undefined4)((ulonglong)returnValue >> 0x20);\n    assertString = (undefined4)returnValue;\nLAB_080090f0:\n    assertion = \"\";\n    delimiter = assertion;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failure_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertion",
                "param_4": "function",
                "uVar1": "assertString",
                "pcVar2": "delimiter",
                "uVar3": "returnValue",
                "uVar4": "additionalInfo"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_unsigned_long_long_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftUnsignedLongLong_08009108(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_unsigned_long_long_08009108",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "initialize_data_08009124",
            "code": "\nvoid initializeData_08009124(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  undefined4 initializedData1;\n  undefined4 initializedData2;\n  \n  initializedData1 = data3;\n  initializedData2 = data4;\n  FUN_0800937c(DAT_20000090,data1,data2,&initializedData1,data1,&initializedData1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "initialize_data_08009124",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "uStack_8": "initializedData1",
                "uStack_4": "initializedData2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_function_set_08009148",
            "code": "\nvoid executeFunctionSet_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_function_set_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 inputData)\n\n{\n  FUN_08009270(DAT_20000090,inputData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copy_data_080091b0(int start_index,undefined *source_array,int array_length)\n\n{\n  undefined *destination_array_end;\n  undefined *destination_array;\n  \n  destination_array = (undefined *)(start_index + -1);\n  destination_array_end = source_array + array_length;\n  for (; source_array != destination_array_end; source_array = source_array + 1) {\n    destination_array = destination_array + 1;\n    *destination_array = *source_array;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "start_index",
                "param_2": "source_array",
                "param_3": "array_length",
                "puVar1": "destination_array_end",
                "puVar2": "destination_array"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_array_with_080091c6",
            "code": "\nvoid fillArrayWith_080091c6(undefined *array,undefined value,int length)\n\n{\n  undefined *endPointer;\n  \n  endPointer = array + length;\n  for (; array != endPointer; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_array_with_080091c6",
                "param_1": "array",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "process_data_080091d8",
            "code": "\nvoid processData_080091d8(undefined4 *result,int length,undefined4 arg1,undefined4 arg2)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (length == 0) {\n    return;\n  }\n  temp6 = (int **)(length + -4);\n  if (*(int *)(length + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(length + -4));\n  }\n  FUNC_08009f48();\n  temp3 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_2000098c = temp6;\n  }\n  else {\n    temp3 = DAT_2000098c;\n    if (temp6 < DAT_2000098c) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_2000098c == temp3) {\n        temp4 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *result = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08009f4a(result,temp2,temp3,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "process_data_080091d8",
                "param_1": "result",
                "param_2": "length",
                "param_3": "arg1",
                "param_4": "arg2",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_ptr;\n  int difference;\n  uint *previous_ptr;\n  uint ptr_difference;\n  uint *last_ptr;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_ptr = DAT_2000098c;\n    last_ptr = DAT_2000098c;\n    while (previous_ptr = current_ptr, previous_ptr != (uint *)0x0) {\n      ptr_difference = *previous_ptr - allocated_size;\n      if (-1 < (int)ptr_difference) {\n        if (ptr_difference < 0xc) {\n          if (last_ptr == previous_ptr) {\n            current_ptr = (uint *)last_ptr[1];\n            DAT_2000098c = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)previous_ptr[1];\n          }\n          if (last_ptr != previous_ptr) {\n            last_ptr[1] = (uint)current_ptr;\n            last_ptr = previous_ptr;\n          }\n        }\n        else {\n          *previous_ptr = ptr_difference;\n          *(uint *)((int)previous_ptr + ptr_difference) = allocated_size;\n          last_ptr = (uint *)((int)previous_ptr + ptr_difference);\n        }\n        goto LAB_080092d4;\n      }\n      last_ptr = previous_ptr;\n      current_ptr = (uint *)previous_ptr[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(output_ptr);\n    }\n    current_ptr = (uint *)FUN_08009918(output_ptr,allocated_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((last_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == last_ptr ||\n        (difference = FUN_08009918(output_ptr,(int)last_ptr - (int)current_ptr), difference != -1)))) {\n      *last_ptr = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(output_ptr);\n      allocated_size = (int)last_ptr + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(last_ptr + 1);\n      if (difference != 0) {\n        *(int *)((int)last_ptr + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_08009f4a(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "difference",
                "puVar3": "previous_ptr",
                "uVar4": "ptr_difference",
                "puVar5": "last_ptr",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint processInput_0800932c(int inputData,byte byteValue,byte **dataBuffer)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint returnValue;\n  \n  tempVar2 = dataBuffer[2] + -1;\n  dataBuffer[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)dataBuffer[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)byteValue, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *dataBuffer;\n    *dataBuffer = tempVar2 + 1;\n    *tempVar2 = byteValue;\n    return (uint)byteValue;\n  }\n  if ((inputData != 0) && (*(int *)(inputData + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (dataBuffer == (byte **)&DAT_0800aba4) {\n    dataBuffer = *(byte ***)(inputData + 4);\n  }\n  else if (dataBuffer == (byte **)&DAT_0800abc4) {\n    dataBuffer = *(byte ***)(inputData + 8);\n  }\n  else if (dataBuffer == (byte **)&DAT_0800ab84) {\n    dataBuffer = *(byte ***)(inputData + 0xc);\n  }\n  dataBuffer[2] = dataBuffer[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(dataBuffer + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = dataBuffer[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_08009a80(inputData,dataBuffer,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    returnValue = (uint)byteValue;\n    tempVar1 = (int)*dataBuffer - (int)dataBuffer[4];\n    if ((tempVar1 < (int)dataBuffer[5]) || (tempVar1 = FUN_08009c7c(inputData,dataBuffer), tempVar1 == 0)) {\n      dataBuffer[2] = dataBuffer[2] + -1;\n      tempVar2 = *dataBuffer;\n      *dataBuffer = tempVar2 + 1;\n      *tempVar2 = byteValue;\n      if ((byte *)(tempVar1 + 1) != dataBuffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(dataBuffer + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar1 = FUN_08009c7c(inputData,dataBuffer);\n      if (tempVar1 == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "inputData",
                "param_2": "byteValue",
                "param_3": "dataBuffer",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "iterate_and_process_08009358",
            "code": "\nint iterate_and_process_08009358(undefined4 data1,undefined4 data2,undefined *ptr_data,int data_length)\n\n{\n  int result;\n  undefined *ptr_end;\n  int remaining_length;\n  \n  ptr_end = ptr_data + data_length;\n  remaining_length = data_length;\n  do {\n    if (ptr_data == ptr_end) {\n      return 0;\n    }\n    result = FUN_0800932c(data1,*ptr_data,data2,data_length,remaining_length);\n    data_length = result + 1;\n    ptr_data = ptr_data + 1;\n  } while (data_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "iterate_and_process_08009358",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "ptr_data",
                "param_4": "data_length",
                "puVar2": "ptr_end",
                "iVar3": "remaining_length",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_format_string_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseFormatString_0800937c(int formatString,undefined4 *argList,byte *buffer,int *totalBytesWritten)\n\n{\n  int result;\n  int *ptr;\n  bool foundNumber;\n  byte *currentChar;\n  byte *startChar;\n  int size;\n  int tmp;\n  int *numParams;\n  uint flags;\n  int fieldWidth;\n  undefined4 precision;\n  int paramIndex;\n  int bytesWritten;\n  byte conversionSpecifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined paddingFlag;\n  undefined4 alignmentFlag;\n  \n  numParams = totalBytesWritten;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (argList == &DAT_0800aba4) {\n    argList = *(undefined4 **)(formatString + 4);\n  }\n  else if (argList == (undefined4 *)&DAT_0800abc4) {\n    argList = *(undefined4 **)(formatString + 8);\n  }\n  else if (argList == (undefined4 *)&DAT_0800ab84) {\n    argList = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(argList + 3) << 0x1c)) || (argList[4] == 0)) &&\n     (tmp = FUN_08009a80(formatString,argList), tmp != 0)) {\n    return -1;\n  }\n  bytesWritten = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  currentChar = buffer;\nLAB_080093be:\n  startChar = currentChar;\n  if (*startChar != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  currentChar = startChar + 1;\n  if (*startChar != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  tmp = (int)startChar - (int)buffer;\n  if (tmp != 0) {\n    result = FUN_08009358(formatString,argList,buffer,tmp);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(argList + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return bytesWritten;\n    }\n    bytesWritten = bytesWritten + tmp;\n  }\n  if (*startChar == 0) goto LAB_08009568;\n  flags = 0;\n  paramIndex = 0;\n  fieldWidth = -1;\n  precision = 0;\n  paddingFlag = 0;\n  alignmentFlag = 0;\n  currentChar = startChar + 1;\n  while( true ) {\n    tmp = FUN_08009f2c(\"#-0+ \",*currentChar);\n    buffer = currentChar + 1;\n    if (tmp == 0) break;\n    flags = 1 << (tmp + 0xf7ff54b0U & 0xff) | flags;\n    currentChar = buffer;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    paddingFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    paddingFlag = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptr = numParams + 1;\n    tmp = *numParams;\n    numParams = ptr;\n    if (tmp < 0) {\n      paramIndex = -tmp;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    foundNumber = false;\n    tmp = paramIndex;\n    buffer = currentChar;\n    while( true ) {\n      if (9 < *buffer - 0x30) break;\n      tmp = tmp * 10 + (*buffer - 0x30);\n      foundNumber = true;\n      buffer = buffer + 1;\n    }\n    if (!foundNumber) goto LAB_080094a6;\n  }\n  paramIndex = tmp;\nLAB_080094a6:\n  if (*buffer == 0x2e) {\n    if (buffer[1] == 0x2a) {\n      buffer = buffer + 2;\n      ptr = numParams + 1;\n      fieldWidth = *numParams;\n      numParams = ptr;\n      if (fieldWidth < 0) {\n        fieldWidth = -1;\n      }\n    }\n    else {\n      foundNumber = false;\n      tmp = 0;\n      fieldWidth = 0;\n      while( true ) {\n        buffer = buffer + 1;\n        if (9 < *buffer - 0x30) break;\n        tmp = tmp * 10 + (*buffer - 0x30);\n        foundNumber = true;\n      }\n      if (foundNumber) {\n        fieldWidth = tmp;\n      }\n    }\n  }\n  tmp = FUN_08009f2c(&DAT_0800ab56,*buffer,3);\n  if (tmp != 0) {\n    buffer = buffer + 1;\n    flags = flags | 0x40 << (tmp + 0xf7ff54aaU & 0xff);\n  }\n  conversionSpecifier = *buffer;\n  buffer = buffer + 1;\n  tmp = FUN_08009f2c(\"efgEFG\",conversionSpecifier,6);\n  if (tmp == 0) {\n    size = FUN_08009698(formatString,&flags,argList,0x8009359,&numParams);\n    if (size == -1) goto LAB_08009568;\n  }\n  else {\n    numParams = (int *)(((int)numParams + 7U & 0xfffffff8) + 8);\n  }\n  bytesWritten = bytesWritten + size;\n  currentChar = buffer;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_format_string_0800937c",
                "param_1": "formatString",
                "param_2": "argList",
                "param_3": "buffer",
                "param_4": "totalBytesWritten",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "foundNumber",
                "pbVar4": "currentChar",
                "pbVar5": "startChar",
                "unaff_r9": "size",
                "iVar6": "tmp",
                "local_8c": "numParams",
                "local_88": "flags",
                "local_84": "fieldWidth",
                "local_80": "precision",
                "local_7c": "paramIndex",
                "local_74": "bytesWritten",
                "local_70": "conversionSpecifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "paddingFlag",
                "local_30": "alignmentFlag"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "calculate_buffer_length_080095a8",
            "code": "\nundefined4\ncalculateBufferLength_080095a8(undefined4 input,uint *buffer,uint *bufferLength,undefined4 param,code *callback)\n\n{\n  int i;\n  int j;\n  uint maxBufferLength;\n  uint additionalLength;\n  bool isConditionTrue;\n  \n  maxBufferLength = buffer[4];\n  if ((int)buffer[4] < (int)buffer[2]) {\n    maxBufferLength = buffer[2];\n  }\n  *bufferLength = maxBufferLength;\n  if (*(char *)((int)buffer + 0x43) != '\\0') {\n    *bufferLength = maxBufferLength + 1;\n  }\n  if ((int)(*buffer << 0x1a) < 0) {\n    *bufferLength = *bufferLength + 2;\n  }\n  if ((*buffer & 6) == 0) {\n    for (i = 0; i < (int)(buffer[3] - *bufferLength); i = i + 1) {\n      j = (*callback)(input,param,(int)buffer + 0x19,1);\n      if (j == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxBufferLength = (uint)*(byte *)((int)buffer + 0x43);\n  if (maxBufferLength != 0) {\n    maxBufferLength = 1;\n  }\n  additionalLength = maxBufferLength;\n  if ((int)(*buffer << 0x1a) < 0) {\n    *(undefined *)((int)buffer + maxBufferLength + 0x43) = 0x30;\n    additionalLength = maxBufferLength + 2;\n    *(undefined *)((int)buffer + maxBufferLength + 0x44) = *(undefined *)((int)buffer + 0x45);\n  }\n  i = (*callback)(input,param,(int)buffer + 0x43,additionalLength);\n  if (i != -1) {\n    maxBufferLength = buffer[3];\n    isConditionTrue = (*buffer & 6) != 4;\n    if (isConditionTrue) {\n      maxBufferLength = 0;\n    }\n    additionalLength = 0;\n    if (!isConditionTrue) {\n      maxBufferLength = maxBufferLength - *bufferLength;\n    }\n    if (!isConditionTrue) {\n      maxBufferLength = maxBufferLength & ~((int)maxBufferLength >> 0x1f);\n    }\n    if ((int)buffer[4] < (int)buffer[2]) {\n      maxBufferLength = maxBufferLength + (buffer[2] - buffer[4]);\n    }\n    while( true ) {\n      if (maxBufferLength == additionalLength) {\n        return 0;\n      }\n      i = (*callback)(input,param,(int)buffer + 0x1a,1);\n      if (i == -1) break;\n      additionalLength = additionalLength + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "calculate_buffer_length_080095a8",
                "param_1": "input",
                "param_2": "buffer",
                "param_3": "bufferLength",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "i",
                "iVar2": "j",
                "uVar3": "maxBufferLength",
                "uVar4": "additionalLength",
                "bVar5": "isConditionTrue"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "decode_and_process_data_08009698",
            "code": "\nuint decode_and_process_data_08009698(undefined4 arg1,uint *data,undefined4 arg3,code *callback_func,uint **count)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int loop_var;\n  char *hex_chars;\n  uint value1;\n  uint **ptr_ptr;\n  char **char_ptr_ptr;\n  uint value2;\n  uint value3;\n  char *char_ptr1;\n  char *char_ptr2;\n  uint temp_array [2];\n  \n  byte_value = *(byte *)(data + 6);\n  char_ptr2 = (char *)((int)data + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_080097e2:\n          value1 = *data;\n          ptr = *count;\n          *count = ptr + 1;\n          if (((value1 & 0x80) == 0) && ((int)(value1 << 0x19) < 0)) {\n            value2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            value2 = *ptr;\n          }\n          if ((int)(value1 << 0x1f) < 0) {\n            *data = value1 | 0x20;\n          }\n          if (value2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          value1 = 0x10;\nLAB_08009778:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          value2 = *data;\n          ptr = *count;\n          if ((value2 & 0x80) == 0) {\n            *count = ptr + 1;\n            if ((value2 & 0x40) == 0) goto LAB_080096e8;\n            value2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *count = ptr + 1;\nLAB_080096e8:\n            value2 = *ptr;\n          }\n          if ((int)value2 < 0) {\n            value2 = -value2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          value1 = 10;\n        }\n        value3 = data[1];\n        data[2] = value3;\n        char_ptr1 = char_ptr2;\n        if ((int)value3 < 0) {\n          if (value2 != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)data + 0x42) = *hex_chars;\n          char_ptr1 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value2 == 0) {\n            if (value3 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              value3 = value2 / value1;\n              char_ptr1 = char_ptr1 + -1;\n              *char_ptr1 = hex_chars[value2 - value1 * value3];\n              value2 = value3;\n            } while (value3 != 0);\n          }\n        }\n        if (((value1 == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          char_ptr1[-1] = '0';\n          char_ptr1 = char_ptr1 + -1;\n        }\n        data[4] = (int)char_ptr2 - (int)char_ptr1;\n        char_ptr2 = char_ptr1;\n        goto LAB_080097be;\n      }\n      ptr = *count;\n      *count = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08009728:\n      char_ptr2 = (char *)((int)data + 0x42);\n      value2 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            value2 = *data;\n            ptr = *count;\n            if ((value2 & 0x80) == 0) {\n              *count = ptr + 1;\n              if ((value2 & 0x40) == 0) goto LAB_0800975c;\n              value2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *count = ptr + 1;\nLAB_0800975c:\n              value2 = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              value1 = 8;\n            }\n            else {\n              value1 = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *data = *data | 0x20;\nLAB_0800970e:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)data + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      char_ptr_ptr = (char **)*count;\n      *count = (uint *)(char_ptr_ptr + 1);\n      char_ptr2 = *char_ptr_ptr;\n      index = FUN_08009f2c(char_ptr2,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)char_ptr2;\n      }\n      value2 = data[1];\n    }\n    data[4] = value2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  value2 = *data;\n  ptr_ptr = (uint **)*count;\n  value1 = data[5];\n  if ((value2 & 0x80) == 0) {\n    *count = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\n    if ((value2 & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr = (short)value1;\n  }\n  else {\n    *count = (uint *)(ptr_ptr + 1);\n    ptr = *ptr_ptr;\nLAB_0800983e:\n    *ptr = value1;\n  }\nLAB_08009852:\n  data[4] = 0;\nLAB_080097be:\n  index = FUN_080095a8(arg1,data,temp_array,arg3,callback_func);\n  if ((index == -1) || (index = (*callback_func)(arg1,arg3,char_ptr2,data[4]), index == -1)) {\nLAB_080097d2:\n    value2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - temp_array[0]); index = index + 1) {\n        loop_var = (*callback_func)(arg1,arg3,(int)data + 0x19,1);\n        if (loop_var == -1) goto LAB_080097d2;\n      }\n    }\n    value2 = data[3];\n    if ((int)data[3] < (int)temp_array[0]) {\n      value2 = temp_array[0];\n    }\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_08009698": "decode_and_process_data_08009698",
                "param_1": "arg1",
                "param_2": "data",
                "param_3": "arg3",
                "param_4": "callback_func",
                "param_5": "count",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "loop_var",
                "pcVar5": "hex_chars",
                "uVar6": "value1",
                "ppuVar7": "ptr_ptr",
                "ppcVar8": "char_ptr_ptr",
                "uVar9": "value2",
                "uVar10": "value3",
                "pcVar11": "char_ptr1",
                "pcVar12": "char_ptr2",
                "local_24": "temp_array"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_data_080098d8",
            "code": "\nvoid initializeData_080098d8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPtr;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  dataPtr = DAT_20000090;\n  value1 = input1;\n  value2 = input2;\n  value3 = input3;\n  value4 = input4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPtr,*(undefined4 *)(dataPtr + 8),input1,&value2,value1,&value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_data_080098d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPtr",
                "uVar2": "value1",
                "uStack_c": "value2",
                "uStack_8": "value3",
                "uStack_4": "value4"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "process_data_08009908",
            "code": "\nint processData_08009908(int inputValue,uint size)\n\n{\n  undefined4 dataPointer;\n  int result;\n  uint calculationResult;\n  \n  dataPointer = DAT_20000090;\n  if (inputValue != 0) {\n    if (size == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      calculationResult = FUN_0800a154();\n      result = inputValue;\n      if ((calculationResult < size) && (result = FUN_08009270(dataPointer,size), result != 0)) {\n        FUN_080091b0(result,inputValue,size);\n        FUN_080091d8(dataPointer,inputValue);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,size,size,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "process_data_08009908",
                "param_1": "inputValue",
                "param_2": "size",
                "uVar1": "dataPointer",
                "iVar2": "result",
                "uVar3": "calculationResult"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "update_param_08009918",
            "code": "\nvoid updateParam_08009918(int *result,undefined4 inputVal)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008804(inputVal);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "update_param_08009918",
                "param_1": "result",
                "param_2": "inputVal",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_08009938",
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_with_length_08009954",
            "code": "\nvoid copyStringWithLength_08009954(char *destination,char *source,int length)\n\n{\n  char currentCharacter;\n  int remainingLength;\n  char *currentDestination;\n  \n  do {\n    currentDestination = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentCharacter = *source;\n    destination = currentDestination + 1;\n    *currentDestination = currentCharacter;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentCharacter != '\\0');\n  for (; destination != currentDestination + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_with_length_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentCharacter",
                "iVar2": "remainingLength",
                "pcVar3": "currentDestination"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_index_0800997e",
            "code": "\nint find_last_index_0800997e(int array,int array_length,undefined4 arg3,undefined4 arg4)\n\n{\n  int current_index;\n  int last_index;\n  \n  if (array_length != 0) {\n    last_index = 0;\n    while (current_index = FUN_08009938(array,array_length,arg3,array,arg4), current_index != 0) {\n      array = current_index + 1;\n      last_index = current_index;\n    }\n    return last_index;\n  }\n  last_index = FUN_08009938();\n  return last_index;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_index_0800997e",
                "param_1": "array",
                "param_2": "array_length",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "current_index",
                "iVar2": "last_index"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_first_substr_080099a4",
            "code": "\nchar * find_first_substr_080099a4(char *str1,char *str2)\n\n{\n  char *pStart;\n  char *p1;\n  char *p2;\n  \n  if (*str1 == '\\0') {\n    if (*str2 != '\\0') {\n      str1 = (char *)0x0;\n    }\n    return str1;\n  }\n  do {\n    pStart = str1;\n    if (*pStart == '\\0') {\n      return (char *)0x0;\n    }\n    p2 = str2 + -1;\n    p1 = pStart + -1;\n    do {\n      p2 = p2 + 1;\n      if (*p2 == '\\0') {\n        return pStart;\n      }\n      p1 = p1 + 1;\n      str1 = pStart + 1;\n    } while (*p1 == *p2);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_first_substr_080099a4",
                "param_1": "str1",
                "param_2": "str2",
                "pcVar1": "pStart",
                "pcVar2": "p1",
                "pcVar3": "p2"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint processData_08009a80(undefined4 *output1,undefined4 *input1)\n\n{\n  int dataPtr;\n  uint result;\n  ushort value;\n  \n  dataPtr = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (input1 == &DAT_0800aba4) {\n    input1 = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (input1 == (undefined4 *)&DAT_0800abc4) {\n    input1 = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (input1 == (undefined4 *)&DAT_0800ab84) {\n    input1 = *(undefined4 **)(dataPtr + 0xc);\n  }\n  value = *(ushort *)(input1 + 3);\n  result = (uint)value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output1 = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input1[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input1[0xd] != input1 + 0x11) {\n          FUN_080091d8(output1);\n        }\n        input1[0xd] = 0;\n      }\n      *(ushort *)(input1 + 3) = *(ushort *)(input1 + 3) & 0xffdb;\n      input1[1] = 0;\n      *input1 = input1[4];\n    }\n    *(ushort *)(input1 + 3) = *(ushort *)(input1 + 3) | 8;\n  }\n  if ((input1[4] == 0) && ((*(ushort *)(input1 + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(output1,input1);\n  }\n  value = *(ushort *)(input1 + 3);\n  result = value & 1;\n  if ((value & 1) == 0) {\n    if (-1 < (int)((uint)value << 0x1e)) {\n      result = input1[5];\n    }\n    input1[2] = result;\n  }\n  else {\n    input1[2] = 0;\n    input1[6] = -input1[5];\n  }\n  if (input1[4] == 0) {\n    value = *(ushort *)(input1 + 3);\n    result = (int)(short)value & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input1 + 3) = value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "output1",
                "param_2": "input1",
                "iVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "value"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_data_08009b5c",
            "code": "\nvoid processData_08009b5c(void)\n\n{\n  uint *dataPointer;\n  int offset;\n  int *arrayPointer;\n  int *tempPointer;\n  uint ushortValue;\n  ushort flags;\n  int tempValue;\n  code *functionPointer;\n  int loopCounter;\n  uint tempData;\n  code *unrecoveredJumpTable;\n  bool flag;\n  undefined8 returnValue;\n  \n  FUN_08009fe8(6);\n  unrecoveredJumpTable = (code *)0x8009b6b;\n  returnValue = FUN_08008868(1);\n  arrayPointer = (int *)((ulonglong)returnValue >> 0x20);\n  dataPointer = (uint *)returnValue;\n  flags = *(ushort *)(arrayPointer + 3);\n  ushortValue = (uint)flags;\n  if ((int)(ushortValue << 0x1c) < 0) {\n    offset = arrayPointer[4];\n    if (offset != 0) {\n      tempValue = ushortValue << 0x1e;\n      flag = tempValue != 0;\n      if (flag) {\n        tempValue = 0;\n      }\n      loopCounter = *arrayPointer;\n      if (!flag) {\n        tempValue = arrayPointer[5];\n      }\n      *arrayPointer = offset;\n      arrayPointer[2] = tempValue;\n      for (loopCounter = loopCounter - offset; 0 < loopCounter; loopCounter = loopCounter - tempValue) {\n        tempValue = (*(code *)arrayPointer[10])(dataPointer,arrayPointer[8],offset,loopCounter);\n        if (tempValue < 1) {\n          flags = *(ushort *)(arrayPointer + 3);\n          goto LAB_08009c62;\n        }\n        offset = offset + tempValue;\n      }\n    }\n  }\n  else if (((0 < arrayPointer[1]) || (0 < arrayPointer[0x10])) &&\n          (functionPointer = (code *)arrayPointer[0xb], functionPointer != (code *)0x0)) {\n    tempData = *dataPointer;\n    *dataPointer = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*functionPointer)(dataPointer,arrayPointer[8],ushortValue & 0x1000,1);\n      if ((offset == -1) && (ushortValue = *dataPointer, ushortValue != 0)) {\n        if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n          *(ushort *)(arrayPointer + 3) = *(ushort *)(arrayPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*unrecoveredJumpTable)();\n          return;\n        }\n        *dataPointer = tempData;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      offset = arrayPointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(arrayPointer + 3) << 0x1d) < 0) &&\n       (offset = offset - arrayPointer[1], arrayPointer[0xd] != 0)) {\n      offset = offset - arrayPointer[0x10];\n    }\n    offset = (*(code *)arrayPointer[0xb])(dataPointer,arrayPointer[8],offset,0);\n    flags = *(ushort *)(arrayPointer + 3);\n    if ((offset == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(arrayPointer + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecoveredJumpTable)(0xffffffff);\n      return;\n    }\n    arrayPointer[1] = 0;\n    *arrayPointer = arrayPointer[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*dataPointer == 0)))) {\n      arrayPointer[0x15] = offset;\n    }\n    tempPointer = (int *)arrayPointer[0xd];\n    *dataPointer = tempData;\n    if (tempPointer != (int *)0x0) {\n      if (tempPointer != arrayPointer + 0x11) {\n        FUN_080091d8(dataPointer);\n      }\n      arrayPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecoveredJumpTable)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecoveredJumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "puVar1": "dataPointer",
                "iVar2": "offset",
                "piVar3": "arrayPointer",
                "piVar4": "tempPointer",
                "uVar5": "ushortValue",
                "uVar6": "flags",
                "iVar7": "tempValue",
                "pcVar8": "functionPointer",
                "iVar9": "loopCounter",
                "uVar10": "tempData",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredJumpTable",
                "bVar11": "flag",
                "uVar12": "returnValue"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_data_08009c7c",
            "code": "\nundefined4 processData_08009c7c(uint *dataArray,int *settingsArray)\n\n{\n  undefined4 returnValue;\n  int count;\n  int *tempPointer;\n  uint tempValue;\n  ushort flag;\n  int offset;\n  undefined4 unaff_value1;\n  undefined4 unaff_value2;\n  code *functionPointer;\n  int tempValue2;\n  uint tempValue3;\n  code *jumptable;\n  bool bVar10;\n  \n  if (settingsArray[4] != 0) {\n    if ((dataArray != (uint *)0x0) && (dataArray[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (settingsArray == &DAT_0800aba4) {\n      settingsArray = (int *)dataArray[1];\n    }\n    else if (settingsArray == (int *)&DAT_0800abc4) {\n      settingsArray = (int *)dataArray[2];\n    }\n    else if (settingsArray == (int *)&DAT_0800ab84) {\n      settingsArray = (int *)dataArray[3];\n    }\n    if (*(short *)(settingsArray + 3) != 0) {\n      flag = *(ushort *)(settingsArray + 3);\n      tempValue = (uint)flag;\n      if ((int)(tempValue << 0x1c) < 0) {\n        count = settingsArray[4];\n        if (count != 0) {\n          offset = tempValue << 0x1e;\n          bVar10 = offset != 0;\n          if (bVar10) {\n            offset = 0;\n          }\n          tempValue2 = *settingsArray;\n          if (!bVar10) {\n            offset = settingsArray[5];\n          }\n          *settingsArray = count;\n          settingsArray[2] = offset;\n          for (tempValue2 = tempValue2 - count; 0 < tempValue2; tempValue2 = tempValue2 - offset) {\n            offset = (*(code *)settingsArray[10])(dataArray,settingsArray[8],count,tempValue2,unaff_value1,unaff_value2);\n            if (offset < 1) {\n              flag = *(ushort *)(settingsArray + 3);\n              goto LAB_08009c62;\n            }\n            count = count + offset;\n          }\n        }\n      }\n      else if (((0 < settingsArray[1]) || (0 < settingsArray[0x10])) &&\n              (functionPointer = (code *)settingsArray[0xb], functionPointer != (code *)0x0)) {\n        tempValue3 = *dataArray;\n        *dataArray = 0;\n        if ((flag & 0x1000) == 0) {\n          count = (*functionPointer)(dataArray,settingsArray[8],tempValue & 0x1000,1);\n          if ((count == -1) && (tempValue = *dataArray, tempValue != 0)) {\n            if ((tempValue != 0x1d) && (tempValue != 0x16)) {\n              *(ushort *)(settingsArray + 3) = *(ushort *)(settingsArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumptable)();\n              return returnValue;\n            }\n            *dataArray = tempValue3;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          count = settingsArray[0x15];\n        }\n        if (((int)((uint)*(ushort *)(settingsArray + 3) << 0x1d) < 0) &&\n           (count = count - settingsArray[1], settingsArray[0xd] != 0)) {\n          count = count - settingsArray[0x10];\n        }\n        count = (*(code *)settingsArray[0xb])(dataArray,settingsArray[8],count,0);\n        flag = *(ushort *)(settingsArray + 3);\n        if ((count == -1) &&\n           ((0x1d < *dataArray || (-1 < (int)((0x20400001U >> (*dataArray & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(settingsArray + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumptable)(0xffffffff);\n          return returnValue;\n        }\n        settingsArray[1] = 0;\n        *settingsArray = settingsArray[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*dataArray == 0)))) {\n          settingsArray[0x15] = count;\n        }\n        tempPointer = (int *)settingsArray[0xd];\n        *dataArray = tempValue3;\n        if (tempPointer != (int *)0x0) {\n          if (tempPointer != settingsArray + 0x11) {\n            FUN_080091d8(dataArray);\n          }\n          settingsArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumptable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumptable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "dataArray",
                "param_2": "settingsArray",
                "uVar1": "returnValue",
                "iVar2": "count",
                "piVar3": "tempPointer",
                "uVar4": "tempValue",
                "uVar5": "flag",
                "iVar6": "offset",
                "unaff_r4": "unaff_value1",
                "unaff_r5": "unaff_value2",
                "pcVar7": "functionPointer",
                "iVar8": "tempValue2",
                "uVar9": "tempValue3",
                "UNRECOVERED_JUMPTABLE_00": "jumptable"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_params_08009cdc",
            "code": "\nvoid initializeParams_08009cdc(undefined4 *params,undefined2 value1,undefined2 value2)\n\n{\n  *params = 0;\n  params[1] = 0;\n  params[2] = 0;\n  *(undefined2 *)(params + 3) = value1;\n  params[0x19] = 0;\n  *(undefined2 *)((int)params + 0xe) = value2;\n  params[4] = 0;\n  params[5] = 0;\n  params[6] = 0;\n  FUN_080091c6(params + 0x17,0,8);\n  params[8] = params;\n  params[9] = 0x800a021;\n  params[10] = 0x800a043;\n  params[0xb] = 0x800a07b;\n  params[0xc] = &constantValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_params_08009cdc",
                "param_1": "params",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_0800a09e_1": "constantValue"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 inputData,int numElements)\n\n{\n  undefined4 *dataStructurePtr;\n  int calculationResult;\n  \n  calculationResult = (numElements + -1) * 0x68;\n  dataStructurePtr = (undefined4 *)FUN_08009270(inputData,calculationResult + 0x74);\n  if (dataStructurePtr != (undefined4 *)0x0) {\n    *dataStructurePtr = 0;\n    dataStructurePtr[1] = numElements;\n    dataStructurePtr[2] = dataStructurePtr + 3;\n    FUN_080091c6(dataStructurePtr + 3,0,calculationResult + 0x68);\n  }\n  return dataStructurePtr;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "inputData",
                "param_2": "numElements",
                "puVar1": "dataStructurePtr",
                "iVar2": "calculationResult"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *dataPointer)\n\n{\n  undefined4 returnValue;\n  undefined4 *tempPointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    tempPointer = &DAT_20000094;\n    dataPointer[10] = &LAB_08009cd0_1;\n    if (dataPointer == &DAT_20000094) {\n      tempPointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_20000094) {\n      dataPointer[6] = tempPointer;\n    }\n    returnValue = FUN_08009db0();\n    dataPointer[1] = returnValue;\n    returnValue = FUN_08009db0(dataPointer);\n    dataPointer[2] = returnValue;\n    returnValue = FUN_08009db0(dataPointer);\n    dataPointer[3] = returnValue;\n    FUN_08009cdc(dataPointer[1],4,0);\n    FUN_08009cdc(dataPointer[2],9,1);\n    FUN_08009cdc(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "dataPointer",
                "uVar1": "returnValue",
                "puVar2": "tempPointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "deserialize_data_08009db0",
            "code": "\nint * deserializeData_08009db0(undefined4 *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentPtr;\n  int *innerPtr;\n  int **dataPtr;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataPtr = (int **)&DAT_200000dc;\n  do {\n    innerPtr = dataPtr[2];\n    currentPtr = dataPtr[1];\n    while (currentPtr = (int *)((int)currentPtr + -1), -1 < (int)currentPtr) {\n      if (*(short *)(innerPtr + 3) == 0) {\n        *(undefined2 *)((int)innerPtr + 0xe) = 0xffff;\n        innerPtr[0x19] = 0;\n        *(undefined2 *)(innerPtr + 3) = 1;\n        *innerPtr = 0;\n        innerPtr[2] = 0;\n        innerPtr[1] = 0;\n        innerPtr[4] = 0;\n        innerPtr[5] = 0;\n        innerPtr[6] = 0;\n        FUN_080091c6(innerPtr + 0x17,0,8,1,param4);\n        innerPtr[0xd] = 0;\n        innerPtr[0xe] = 0;\n        innerPtr[0x12] = 0;\n        innerPtr[0x13] = 0;\n        return innerPtr;\n      }\n      innerPtr = innerPtr + 0x1a;\n    }\n    if (*dataPtr == (int *)0x0) {\n      currentPtr = (int *)FUN_08009d24(result,4);\n      *dataPtr = currentPtr;\n      if (currentPtr == (int *)0x0) {\n        *result = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataPtr = (int **)*dataPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "deserialize_data_08009db0",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentPtr",
                "piVar2": "innerPtr",
                "ppiVar3": "dataPtr"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_memory_permissions_08009e64",
            "code": "\nundefined4 checkMemoryPermissions_08009e64(undefined4 input_param,int address_param,undefined4 *output_param,uint *status_param)\n\n{\n  int result;\n  undefined4 permission_value;\n  undefined stack_array [4];\n  uint local_value;\n  \n  if ((*(short *)(address_param + 0xe) < 0) ||\n     (result = FUN_0800a0ec(input_param,(int)*(short *)(address_param + 0xe),stack_array), result < 0)) {\n    *status_param = 0;\n    if ((int)((uint)*(ushort *)(address_param + 0xc) << 0x18) < 0) {\n      permission_value = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *status_param = (uint)((local_value & 0xf000) == 0x2000);\n  }\n  permission_value = 0x400;\nLAB_08009ea4:\n  *output_param = permission_value;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_memory_permissions_08009e64",
                "param_1": "input_param",
                "param_2": "address_param",
                "param_3": "output_param",
                "param_4": "status_param",
                "iVar1": "result",
                "uVar2": "permission_value",
                "auStack_4c": "stack_array",
                "local_48": "local_value"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_function_08009eac",
            "code": "\nvoid processFunction_08009eac(int inputParam,int *outputParam)\n\n{\n  ushort result;\n  int returnValue;\n  int localVariable1;\n  int *localVariable2;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputParam + 3) << 0x1e)) {\n    localVariable1 = inputParam;\n    localVariable2 = outputParam;\n    result = FUN_08009e64(inputParam,outputParam,&localVariable1,&localVariable2);\n    returnValue = FUN_08009270(inputParam,localVariable1);\n    if (returnValue != 0) {\n      *(undefined **)(inputParam + 0x28) = &LAB_08009cd0_1;\n      *outputParam = returnValue;\n      *(ushort *)(outputParam + 3) = *(ushort *)(outputParam + 3) | 0x80;\n      outputParam[4] = returnValue;\n      outputParam[5] = localVariable1;\n      if ((localVariable2 != (int *)0x0) &&\n         (returnValue = FUN_0800a110(inputParam,(int)*(short *)((int)outputParam + 0xe)), returnValue != 0)) {\n        *(ushort *)(outputParam + 3) = *(ushort *)(outputParam + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputParam + 3) = result | *(ushort *)(outputParam + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputParam + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputParam + 3) = *(ushort *)(outputParam + 3) & 0xfffc | 2;\n  }\n  *outputParam = (int)outputParam + 0x47;\n  outputParam[4] = (int)outputParam + 0x47;\n  outputParam[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_function_08009eac",
                "param_1": "inputParam",
                "param_2": "outputParam",
                "uVar1": "result",
                "iVar2": "returnValue",
                "local_18": "localVariable1",
                "local_14": "localVariable2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_in_string_08009f2c",
            "code": "\nchar * find_character_in_string_08009f2c(char *string,char target_character,int string_length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target_character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_in_string_08009f2c",
                "param_1": "string",
                "param_2": "target_character",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_code_08009fe8",
            "code": "\nint executeCode_08009fe8(uint codeIndex)\n\n{\n  int *entryPoint;\n  undefined4 thunkReturn;\n  int currentCode;\n  code *codeFunction;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  undefined4 *entryPointPtr;\n  \n  entryPoint = DAT_20000090;\n  entryPointPtr = &DAT_20000090;\n  if (0x1f < codeIndex) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  currentCode = DAT_20000090[0x11];\n  if ((currentCode != 0) && (codeFunction = *(code **)(currentCode + codeIndex * 4), codeFunction != (code *)0x0)) {\n    if (codeFunction != (code *)0x1) {\n      if (codeFunction == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(currentCode + codeIndex * 4) = 0;\n      (*codeFunction)(codeIndex);\n    }\n    return 0;\n  }\n  thunkReturn = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  currentCode = FUN_0800886c(thunkReturn,codeIndex,codeIndex,0,entryPointPtr,unusedVar1,unusedVar2,unusedVar3);\n  if ((currentCode == -1) && (DAT_20000a38 != 0)) {\n    *entryPoint = DAT_20000a38;\n  }\n  return currentCode;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_code_08009fe8",
                "param_1": "codeIndex",
                "piVar1": "entryPoint",
                "uVar2": "thunkReturn",
                "iVar3": "currentCode",
                "pcVar4": "codeFunction",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3",
                "puVar5": "entryPointPtr"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "initialize_application_thunk_0800887c",
            "code": "\nundefined4 initializeApplication_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "initialize_application_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_value_0800a020",
            "code": "\nvoid updateValue_0800a020(undefined4 value,int data)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(value,(int)*(short *)(data + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(data + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(data + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(data + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(data + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "param_1": "value",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *resultArray,int dataPointer,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 unaff_param1;\n  undefined4 unaff_param2;\n  undefined4 in_linkRegister;\n  \n  if ((int)((uint)*(ushort *)(dataPointer + 0xc) << 0x17) < 0) {\n    FUN_0800a130(resultArray,(int)*(short *)(dataPointer + 0xe),0,2);\n  }\n  *(ushort *)(dataPointer + 0xc) = *(ushort *)(dataPointer + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  returnValue = FUN_0800885c((int)*(short *)(dataPointer + 0xe),paramA,paramB,paramB,paramB,unaff_param1,\n                       unaff_param2,in_linkRegister);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *resultArray = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "resultArray",
                "param_2": "dataPointer",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "returnValue",
                "unaff_r4": "unaff_param1",
                "unaff_r5": "unaff_param2",
                "in_lr": "in_linkRegister"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_status_0800a07a",
            "code": "\nvoid updateStatus_0800a07a(undefined4 arg1,int arg2)\n\n{\n  int result;\n  ushort newStatus;\n  bool isError;\n  \n  result = FUN_0800a130(arg1,(int)*(short *)(arg2 + 0xe));\n  isError = result == -1;\n  if (isError) {\n    newStatus = *(ushort *)(arg2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(arg2 + 0x54) = result;\n    newStatus = *(ushort *)(arg2 + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(arg2 + 0xc) = newStatus;\n  }\n  if (!isError) {\n    *(ushort *)(arg2 + 0xc) = newStatus;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result",
                "uVar2": "newStatus",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_param_if_valid_0800a0ec",
            "code": "\nvoid update_param_if_valid_0800a0ec(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008846(input_1,input_2,input_2,0,input_3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_param_if_valid_0800a0ec",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "update_param_according_result_0800a110",
            "code": "\nvoid updateParamAccordingResult_0800a110(int *outputParam,undefined4 inputParam)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(inputParam);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputParam = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "update_param_according_result_0800a110",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_value_if_error_0800a130",
            "code": "\nvoid updateValueIfError_0800a130(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008854(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_value_if_error_0800a130",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_new_value_0800a154",
            "code": "\nint calculateNewValue_0800a154(undefined4 input,int address)\n\n{\n  int result;\n  \n  result = *(int *)(address + -4) + -4;\n  if (*(int *)(address + -4) < 0) {\n    result = result + *(int *)(address + result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_new_value_0800a154",
                "param_1": "input",
                "param_2": "address",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "update_param_0800a168",
            "code": "\nvoid updateParam_0800a168(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008858(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "update_param_0800a168",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_variables_0800a18c",
            "code": "\nvoid initializeVariables_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_variables_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 219666,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}