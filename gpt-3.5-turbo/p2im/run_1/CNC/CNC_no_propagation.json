{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "combine_parameters_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 combineParameters_080001ac(undefined4 input1,undefined4 input2)\n\n{\n  return CONCAT44(input2,input1);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "combine_parameters_080001ac",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_system_08000210",
            "code": "\nvoid initialize_system_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_system_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_status_08000220",
            "code": "\nvoid updateStatus_08000220(char newStatus)\n\n{\n  if (newStatus != DAT_20000468) {\n    FUN_08002fd4();\n    if (newStatus == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newStatus;\n    }\n    else if (newStatus == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newStatus;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newStatus;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_status_08000220",
                "param_1": "newStatus"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_delayed_time_08000268",
            "code": "\n\n\nint calculateDelayedTime_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_delayed_time_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_initial_procedure_080002a0",
            "code": "\nvoid executeInitialProcedure_080002a0(undefined4 input)\n\n{\n  FUN_08005a98(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_initial_procedure_080002a0",
                "param_1": "input"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "check_condition_080002b6",
            "code": "\nvoid checkCondition_080002b6(uint input)\n\n{\n  uint upperValue;\n  uint computedValue;\n  bool conditionCheck;\n  longlong result;\n  undefined8 tempValue;\n  \n  result = FUN_08000268();\n  computedValue = (uint)(result + (ulonglong)input >> 0x20);\n  do {\n    tempValue = FUN_08000268();\n    upperValue = (uint)((ulonglong)tempValue >> 0x20);\n    conditionCheck = computedValue <= upperValue;\n    if (upperValue == computedValue) {\n      conditionCheck = (uint)(result + (ulonglong)input) <= (uint)tempValue;\n    }\n  } while (!conditionCheck);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "check_condition_080002b6",
                "param_1": "input",
                "uVar1": "upperValue",
                "uVar2": "computedValue",
                "bVar3": "conditionCheck",
                "lVar4": "result",
                "uVar5": "tempValue"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_value_from_data_08000310",
            "code": "\nundefined getValueFromData_08000310(uint inputIndex)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[inputIndex & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_value_from_data_08000310",
                "param_1": "inputIndex"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int inputSize,char *inputData,int inputLength)\n\n{\n  int remainingLength;\n  char *currentData;\n  int currentIndex;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingLength = inputLength;\n  currentData = inputData;\n  currentIndex = inputSize;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentData = inputData;\n    currentIndex = inputSize;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    checksum = (checksum != '\\0') + *currentData;\n    FUN_08000340(currentIndex,*currentData);\n    currentData = currentData + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "inputSize",
                "param_2": "inputData",
                "param_3": "inputLength",
                "local_1c": "remainingLength",
                "local_18": "currentData",
                "local_14": "currentIndex",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "is_valid_checksum_080003ec",
            "code": "\nbool isValidChecksum_080003ec(char *inputBuffer,int startIndex,int length)\n\n{\n  char cVar1;\n  uint uVar2;\n  int remainingLength;\n  int currentIndex;\n  char *outputBuffer;\n  byte checksum;\n  \n  checksum = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  outputBuffer = inputBuffer;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    outputBuffer = inputBuffer;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    cVar1 = FUN_08000310(currentIndex);\n    checksum = cVar1 + (checksum != 0);\n    *outputBuffer = cVar1;\n    currentIndex = currentIndex + 1;\n    outputBuffer = outputBuffer + 1;\n  }\n  uVar2 = FUN_08000310(currentIndex);\n  return checksum == uVar2;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "is_valid_checksum_080003ec",
                "param_1": "inputBuffer",
                "param_2": "startIndex",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "outputBuffer",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_data_08000478",
            "code": "\nvoid initializeData_08000478(undefined data_1,undefined data_2,undefined data_3)\n\n{\n  DAT_20000e89 = data_1;\n  DAT_20000e8a = data_2;\n  DAT_20000e8b = data_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_data_08000478",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int iVar1;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  iVar1 = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (iVar1 == 0) {\n    FUNC_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initialize_data_080004fc(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 result_1;\n  \n  result_1 = FUN_08008e44(input_1);\n  DAT_20000e7c = FUN_08009054(result_1,DAT_20000ebc);\n  result_1 = FUN_08008e44(input_2);\n  DAT_20000e80 = FUN_08009054(result_1,DAT_20000ec0);\n  result_1 = FUN_08008e44(input_3);\n  DAT_20000e84 = FUN_08009054(result_1,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "result_1"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 inputData)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(inputData);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    inputData = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return inputData;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "FUNC_080005b4",
            "code": "\nchar FUNC_080005b4(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char cVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined local_45;\n  uint local_44;\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  uint local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    cVar3 = '\\f';\n  }\n  else {\n    local_51 = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = 0xbf800000;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    DAT_20000e70 = '\\0';\n    local_2f = 0;\n    while (iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51), iVar1 != 0) {\n      uVar6 = FUN_08008590(local_58);\n      uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)local_24 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        local_2f = 0;\n      }\n    }\n    cVar3 = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51 = 0;\nswitchD_08000d18_caseD_47:\n      iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51);\n      if (iVar1 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar1 = FUN_0800923c(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(local_58);\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar4 = (uint)local_52;\n          uVar2 = FUN_0800056c(local_58);\n          auStack_70[uVar4 - 0x49] = uVar2;\n          break;\n        case 0x4c:\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      cVar3 = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar1 = FUN_08004d7c(DAT_20000e8c,&local_7c);\n          if (iVar1 == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = local_7c;\n          DAT_20000e94 = uStack_78;\n          DAT_20000e98 = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar1 = FUN_08009228(local_34,0);\n          if (iVar1 == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          uVar6 = FUN_08008590(local_34);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)DAT_20000e8c;\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar1 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar1 == 0) {\n                return '\\n';\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar4 = (uint)local_3a;\n                    uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3a + 2) * 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar4] = uVar2;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              if (local_24 == DAT_20000e8c) {\n                DAT_20000e90 = local_94[0];\n                DAT_20000e94 = local_94[1];\n                DAT_20000e98 = local_94[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3b + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 10) * 4));\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n          }\n          if (local_2e == '\\x05') {\n            iVar1 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            iVar1 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,DAT_20000ed0,0);\n          DAT_20000e7c = local_94[3];\n          DAT_20000e80 = local_84;\n          DAT_20000e84 = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3c + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (local_3c + 8) * 4));\n                uVar4 = (uint)local_3c;\n                uVar2 = FUN_08008cd8(uVar2,auStack_70[local_3c + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (uVar4 + 10) * 4) = uVar2;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((iVar1 = FUN_08009228(local_2c,0), iVar1 != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((local_2d != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (local_3d = 0; local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4);\n            }\n            else if (local_2d == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3d + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 10) * 4));\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],uVar2,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            local_27 = local_27 & ~(byte)(1 << DAT_20000e8b);\n            if ((local_27 == 0) ||\n               (((iVar1 = FUN_08009214(local_38,0), iVar1 != 0 &&\n                 (iVar1 = FUN_08009214(auStack_70[DAT_20000e89],0), iVar1 != 0)) &&\n                (iVar1 = FUN_08009214(auStack_70[DAT_20000e8a],0), iVar1 != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              iVar1 = FUN_08009214(local_38,0);\n              if (iVar1 == 0) {\n                local_4c = FUN_08008cd8(auStack_70[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                local_50 = FUN_08008cd8(auStack_70[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(auStack_70,0,0xc);\n                uVar2 = FUN_08008eec(local_38,0x40800000);\n                uVar2 = FUN_08008eec(uVar2,local_38);\n                uVar5 = FUN_08008eec(local_4c,local_4c);\n                uVar2 = FUN_08008cd8(uVar2,uVar5);\n                uVar5 = FUN_08008eec(local_50,local_50);\n                local_44 = FUN_08008cd8(uVar2,uVar5);\n                iVar1 = FUN_08009228(local_44,0);\n                if (iVar1 != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                uVar6 = FUN_08008590(local_44);\n                uVar6 = FUN_080098d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                uVar7 = FUN_08008590(local_4c);\n                uVar8 = FUN_08008590(local_50);\n                uVar7 = FUN_0800981c((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),(int)uVar8,\n                                     (int)((ulonglong)uVar8 >> 0x20));\n                uVar6 = FUN_08008894((int)uVar6,(uint)((ulonglong)uVar6 >> 0x20) ^ 0x80000000,\n                                     (int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n                local_44 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  local_44 = local_44 ^ 0x80000000;\n                }\n                iVar1 = FUN_08009228(local_38,0);\n                if (iVar1 != 0) {\n                  local_44 = local_44 ^ 0x80000000;\n                  local_38 = local_38 ^ 0x80000000;\n                }\n                uVar2 = FUN_08008eec(local_50,local_44);\n                uVar2 = FUN_08008cd8(local_4c,uVar2);\n                uVar4 = (uint)DAT_20000e89;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n                uVar2 = FUN_08008eec(local_4c,local_44);\n                uVar2 = FUN_08008cdc(uVar2,local_50);\n                uVar4 = (uint)DAT_20000e8a;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n              }\n              else {\n                uVar6 = FUN_08008590(auStack_70[DAT_20000e89]);\n                uVar7 = FUN_08008590(auStack_70[DAT_20000e8a]);\n                uVar6 = FUN_0800981c((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                                     (int)((ulonglong)uVar7 >> 0x20));\n                local_38 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n              }\n              local_45 = DAT_20000e71 == '\\x02';\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,auStack_70 + 3,auStack_70,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,uVar2,DAT_20000e72,local_38,local_45);\n            }\n            break;\n          case '\\x04':\n            if (local_27 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = auStack_70[3];\n          DAT_20000e80 = auStack_70[4];\n          DAT_20000e84 = auStack_70[5];\n        }\n        cVar3 = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            cVar3 = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            cVar3 = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return cVar3;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "validate_input_0800184c",
            "code": "\nundefined4 validate_input_0800184c(byte *output,undefined4 input_flag,int input_array,byte *input_ptr)\n\n{\n  int is_valid;\n  undefined4 result;\n  \n  if (*(char *)(input_array + (uint)*input_ptr) == '\\0') {\n    result = 0;\n  }\n  else {\n    *output = *(byte *)(input_array + (uint)*input_ptr);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      result = 0;\n    }\n    else {\n      *input_ptr = *input_ptr + 1;\n      is_valid = FUN_08002638(input_array,input_ptr,input_flag);\n      if (is_valid == 0) {\n        DAT_20000e70 = 1;\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "validate_input_0800184c",
                "param_1": "output",
                "param_2": "input_flag",
                "param_3": "input_array",
                "param_4": "input_ptr",
                "uVar2": "result",
                "iVar1": "is_valid"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_memory_value_080018cc",
            "code": "\n\n\nvoid updateMemoryValue_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_memory_value_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "set_param1_and_update_080018fc",
            "code": "\n\n\nvoid setParam1AndUpdate_080018fc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "set_param1_and_update_080018fc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "extract_binary_flag_0800192c",
            "code": "\nvoid extractBinaryFlag_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "extract_binary_flag_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_update_data_0800195c",
            "code": "\nvoid checkAndUpdateData_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_update_data_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char condition1,char condition2,undefined4 data)\n\n{\n  undefined4 result;\n  uint maxValue;\n  undefined8 temp1;\n  undefined8 temp2;\n  byte tempFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint tempValue;\n  int constant2;\n  undefined4 tempVar;\n  uint tempValue1;\n  uint tempValue2;\n  ushort tempValue3;\n  uint constant3;\n  uint counter;\n  int diff;\n  int tempValue4;\n  int tempValue5;\n  int tempValue6;\n  ushort constant4;\n  uint minValue;\n  char tempFlag2;\n  \n  tempFlag2 = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    tempFlag2 = tempFlag2 + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    tempFlag2 = tempFlag2 + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    tempFlag2 = tempFlag2 + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  tempValue1 = value1;\n  if (value1 < maxValue) {\n    tempValue1 = maxValue;\n  }\n  temp1 = FUN_0800854c(tempValue1);\n  temp2 = FUN_0800854c(tempFlag2);\n  temp2 = FUN_080098d0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  temp1 = FUN_08008894((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  tempVar = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(DAT_20000edc,tempVar);\n  result = FUN_08009054(result,0x453b8000);\n  temp1 = FUN_08008590(result);\n  temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  constant2 = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp1 = FUN_0800854c(tempFlag2);\n  temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp2 = FUN_08008590(data);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  result = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(tempVar,result);\n  result = FUN_08009054(0x4c64e1c0,result);\n  temp1 = FUN_08008590(result);\n  tempValue = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  minValue = 75000;\n  if (tempValue < 75000) {\n    minValue = tempValue;\n  }\n  constant1 = DAT_20000ed4;\n  constant4 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (condition1 == '\\0') {\n    constant4 = constant4 ^ 0xaa0;\n  }\n  FUN_080018fc(constant4);\n  FUN_080018cc(constant1);\n  tempValue4 = -(tempValue1 >> 1);\n  diff = minValue - DAT_20000ec9;\n  counter = 0;\n  constant3 = 10000;\n  tempFlag = flags;\n  tempValue5 = tempValue4;\n  tempValue6 = tempValue4;\n  while( true ) {\n    tempValue3 = constant1;\n    tempValue2 = FUN_080078f4();\n    if (condition2 == '\\0') {\n      tempValue2 = tempValue2 ^ 0x1e;\n    }\n    if (((tempFlag & 1) != 0) && (tempValue6 = tempValue6 + value1, 0 < tempValue6)) {\n      if ((tempValue2 & 0x10) == 0) {\n        tempFlag = tempFlag & 0xfe;\n      }\n      else {\n        tempValue3 = tempValue3 ^ 0x10;\n      }\n      tempValue6 = tempValue6 - tempValue1;\n    }\n    if (((tempFlag & 2) != 0) && (tempValue5 = tempValue5 + value2, 0 < tempValue5)) {\n      if ((tempValue2 & 8) == 0) {\n        tempFlag = tempFlag & 0xfd;\n      }\n      else {\n        tempValue3 = tempValue3 ^ 0x440;\n      }\n      tempValue5 = tempValue5 - tempValue1;\n    }\n    if (((tempFlag & 4) != 0) && (tempValue4 = tempValue4 + value3, 0 < tempValue4)) {\n      if ((tempValue2 & 4) == 0) {\n        tempFlag = tempFlag & 0xfb;\n      }\n      else {\n        tempValue3 = tempValue3 ^ 0x100;\n      }\n      tempValue4 = tempValue4 - tempValue1;\n    }\n    if ((tempFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(tempValue3);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(diff);\n    if ((tempValue < minValue) && (constant3 = minValue + constant3, 20000 < constant3)) {\n      constant3 = constant3 - 20000;\n      counter = constant2 + counter;\n      minValue = 60000000 / counter;\n      if (minValue < tempValue) {\n        minValue = tempValue;\n      }\n      diff = minValue - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "condition1",
                "param_3": "condition2",
                "param_4": "data",
                "uVar1": "result",
                "uVar2": "maxValue",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "local_61": "tempFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant1",
                "local_4c": "tempValue",
                "local_48": "constant2",
                "local_44": "tempVar",
                "local_40": "tempValue1",
                "local_3c": "tempValue2",
                "local_36": "tempValue3",
                "local_34": "constant3",
                "local_30": "counter",
                "local_2c": "diff",
                "local_28": "tempValue4",
                "local_24": "tempValue5",
                "local_20": "tempValue6",
                "local_1a": "constant4",
                "local_18": "minValue",
                "local_11": "tempFlag2"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_and_process_data_08001d4c",
            "code": "\nvoid initialize_and_process_data_08001d4c(void)\n\n{\n  char updated_counter;\n  char counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  counter = '\\x02';\n  while( true ) {\n    updated_counter = counter + -1;\n    if (counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    counter = updated_counter;\n    if ('\\0' < updated_counter) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_and_process_data_08001d4c",
                "local_9": "counter",
                "cVar1": "updated_counter"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_system_08001ddc",
            "code": "\nvoid initializeSystem_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_system_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_process_data_08001e98",
            "code": "\nvoid checkAndProcessData_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int result;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      result = FUN_08002fac();\n    } while (result != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_process_data_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculate_checksum_08001f00(int data_start,undefined4 *data_array,int data_end,byte index_1,byte index_2,byte index_3\n                 ,undefined4 param_7,char flag_1,undefined4 param_9,char flag_2)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  int temp_var;\n  uint temp_value;\n  undefined8 temp_result_1;\n  undefined8 temp_result_2;\n  uint checksum_array [4];\n  undefined4 temp_var_1;\n  undefined4 temp_var_2;\n  undefined4 temp_var_3;\n  undefined4 temp_var_4;\n  undefined4 checksum_1;\n  undefined4 checksum_2;\n  ushort loop_limit;\n  undefined4 final_checksum;\n  undefined4 checksum_3;\n  undefined4 checksum_4;\n  uint value_1;\n  undefined4 value_2;\n  undefined4 checksum_5;\n  char loop_counter;\n  ushort loop_index;\n  undefined4 loop_temp_var;\n  uint loop_checksum_1;\n  uint loop_checksum_2;\n  \n  checksum_5 = FUN_08008cdc(*(undefined4 *)((uint)index_1 * 4 + data_start),\n                          *(undefined4 *)((uint)index_1 * 4 + data_end));\n  value_2 = FUN_08008cdc(*(undefined4 *)((uint)index_2 * 4 + data_start),\n                          *(undefined4 *)((uint)index_2 * 4 + data_end));\n  value_1 = FUN_08008cd8(data_array[index_3],*(undefined4 *)((uint)index_3 * 4 + data_start));\n  loop_checksum_2 = *(uint *)((uint)index_1 * 4 + data_end) ^ 0x80000000;\n  loop_checksum_1 = *(uint *)((uint)index_2 * 4 + data_end) ^ 0x80000000;\n  checksum_4 = FUN_08008cd8(data_array[index_1],checksum_5);\n  checksum_3 = FUN_08008cd8(data_array[index_2],value_2);\n  result_1 = FUN_08008eec(loop_checksum_2,checksum_3);\n  result_2 = FUN_08008eec(loop_checksum_1,checksum_4);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  temp_result_1 = FUN_08008590(result_1);\n  result_1 = FUN_08008eec(loop_checksum_2,checksum_4);\n  result_2 = FUN_08008eec(loop_checksum_1,checksum_3);\n  result_1 = FUN_08008cdc(result_1,result_2);\n  temp_result_2 = FUN_08008590(result_1);\n  temp_result_1 = thunk_FUN_08009990((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                             (int)((ulonglong)temp_result_2 >> 0x20));\n  loop_temp_var = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n  if (flag_2 == '\\0') {\n    temp_var = FUN_0800923c(loop_temp_var,0);\n    if (temp_var != 0) {\n      temp_result_1 = FUN_08008590(loop_temp_var);\n      temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x54442d18,0x401921fb);\n      loop_temp_var = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    }\n  }\n  else {\n    temp_var = FUN_08009250(loop_temp_var,0);\n    if (temp_var != 0) {\n      temp_result_1 = FUN_08008590(loop_temp_var);\n      temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x54442d18,0x401921fb);\n      loop_temp_var = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    }\n  }\n  result_1 = FUN_08008eec(loop_temp_var,param_9);\n  temp_result_1 = FUN_08008590(result_1);\n  temp_result_2 = FUN_08008590(value_1 & 0x7fffffff);\n  temp_result_1 = FUN_0800981c((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                       (int)((ulonglong)temp_result_2 >> 0x20));\n  final_checksum = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n  temp_var = FUN_08009214(final_checksum,0);\n  if (temp_var == 0) {\n    result_1 = FUN_08009054(final_checksum,DAT_20000ed8);\n    temp_result_1 = FUN_08008590(result_1);\n    temp_result_1 = FUN_080094c0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    loop_limit = FUN_08008bf0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    if (flag_1 != '\\0') {\n      result_1 = FUN_08008e44(loop_limit);\n      param_7 = FUN_08008eec(param_7,result_1);\n    }\n    result_1 = FUN_08008e44(loop_limit);\n    checksum_2 = FUN_08009054(loop_temp_var,result_1);\n    result_1 = FUN_08008e44(loop_limit);\n    checksum_1 = FUN_08009054(value_1,result_1);\n    temp_result_1 = FUN_08008590(checksum_2);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0,0x3fe00000);\n    temp_result_2 = FUN_08008590(checksum_2);\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                         (int)((ulonglong)temp_result_2 >> 0x20));\n    temp_result_1 = FUN_080082d0(0,0x3ff00000,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    temp_var_4 = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    temp_var_3 = checksum_2;\n    loop_counter = '\\0';\n    checksum_array[index_3] = *(uint *)(data_start + (uint)index_3 * 4);\n    for (loop_index = 1; loop_index < loop_limit; loop_index = loop_index + 1) {\n      if ((int)loop_counter < (int)(uint)DAT_20000efa) {\n        result_1 = FUN_08008eec(loop_checksum_2,temp_var_3);\n        result_2 = FUN_08008eec(loop_checksum_1,temp_var_4);\n        checksum_array[3] = FUN_08008cdc(result_1,result_2);\n        result_1 = FUN_08008eec(loop_checksum_2,temp_var_4);\n        result_2 = FUN_08008eec(loop_checksum_1,temp_var_3);\n        loop_checksum_2 = FUN_08008cd8(result_1,result_2);\n        loop_checksum_1 = checksum_array[3];\n        loop_counter = loop_counter + '\\x01';\n      }\n      else {\n        result_1 = FUN_08008e44(loop_index);\n        result_1 = FUN_08008eec(result_1,checksum_2);\n        temp_result_1 = FUN_08008590(result_1);\n        temp_result_1 = FUN_08009410((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n        temp_var_2 = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n        result_1 = FUN_08008e44(loop_index);\n        result_1 = FUN_08008eec(result_1,checksum_2);\n        temp_result_1 = FUN_08008590(result_1);\n        temp_result_1 = FUN_080096e8((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n        temp_var_1 = FUN_08008c30((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n        result_1 = FUN_08008eec(*(uint *)((uint)index_1 * 4 + data_end) ^ 0x80000000,temp_var_2);\n        result_2 = FUN_08008eec(*(undefined4 *)((uint)index_2 * 4 + data_end),temp_var_1);\n        loop_checksum_2 = FUN_08008cdc(result_1,result_2);\n        result_1 = FUN_08008eec(*(uint *)((uint)index_1 * 4 + data_end) ^ 0x80000000,temp_var_1);\n        result_2 = FUN_08008eec(*(undefined4 *)((uint)index_2 * 4 + data_end),temp_var_2);\n        loop_checksum_1 = FUN_08008cd8(result_1,result_2);\n        loop_counter = '\\0';\n      }\n      temp_value = FUN_08008cdc(checksum_5,loop_checksum_2);\n      checksum_array[index_1] = temp_value;\n      temp_value = FUN_08008cdc(value_2,loop_checksum_1);\n      checksum_array[index_2] = temp_value;\n      temp_value = FUN_08008cdc(checksum_array[index_3],checksum_1);\n      checksum_array[index_3] = temp_value;\n      FUN_08001e98(checksum_array[0],checksum_array[1],checksum_array[2],param_7,flag_1);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*data_array,data_array[1],data_array[2],param_7,flag_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "data_start",
                "param_2": "data_array",
                "param_3": "data_end",
                "param_4": "index_1",
                "param_5": "index_2",
                "param_6": "index_3",
                "param_8": "flag_1",
                "param_10": "flag_2",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "iVar3": "temp_var",
                "uVar4": "temp_value",
                "uVar5": "temp_result_1",
                "uVar6": "temp_result_2",
                "local_6c": "checksum_array",
                "local_5c": "temp_var_1",
                "local_58": "temp_var_2",
                "local_54": "temp_var_3",
                "local_50": "temp_var_4",
                "local_4c": "checksum_1",
                "local_48": "checksum_2",
                "local_42": "loop_limit",
                "local_40": "final_checksum",
                "local_3c": "checksum_3",
                "local_38": "checksum_4",
                "local_34": "value_1",
                "local_30": "value_2",
                "local_2c": "checksum_5",
                "local_27": "loop_counter",
                "local_26": "loop_index",
                "local_24": "loop_temp_var",
                "local_20": "loop_checksum_1",
                "local_1c": "loop_checksum_2"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 input)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort count;\n  \n  result2 = FUN_08008eec(input,0x41a00000);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  count = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUN_08002fd4();\n  result2 = FUN_08008eec(input,0x447a0000);\n  result3 = FUN_08008e44((uint)count * 0x32);\n  result2 = FUN_08008cd8(result2,result3);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUNC_08002814(result1);\n  while ((count != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    count = count - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "count"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_data_080024c4",
            "code": "\nvoid initializeData_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char isFlagSet3;\n  char isFlagSet2;\n  char isFlagSet1;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isFlagSet1 = -1;\n    }\n    else {\n      isFlagSet1 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isFlagSet2 = -1;\n    }\n    else {\n      isFlagSet2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isFlagSet3 = -1;\n    }\n    else {\n      isFlagSet3 = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)isFlagSet1);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)isFlagSet2);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)isFlagSet3);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_data_080024c4",
                "local_11": "isFlagSet1",
                "local_12": "isFlagSet2",
                "local_13": "isFlagSet3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "enable_special_feature_080025e8",
            "code": "\nvoid enableSpecialFeature_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "enable_special_feature_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int baseAddress,byte *inputString,uint *outputValue)\n\n{\n  byte digit;\n  bool isNegative;\n  bool hasExtraBits;\n  int result;\n  char *currentChar;\n  char *nextCharPtr;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint temp;\n  byte digitCount;\n  char extraBitsCount;\n  int accumulatedValue;\n  char signChar;\n  char *currentPtr;\n  \n  nextCharPtr = (char *)(baseAddress + (uint)*inputString);\n  currentChar = nextCharPtr + 1;\n  signChar = *nextCharPtr;\n  isNegative = false;\n  if (signChar == '-') {\n    isNegative = true;\n    signChar = *currentChar;\n    currentPtr = nextCharPtr + 2;\n  }\n  else {\n    currentPtr = currentChar;\n    if (signChar == '+') {\n      currentPtr = nextCharPtr + 2;\n      signChar = *currentChar;\n    }\n  }\n  accumulatedValue = 0;\n  extraBitsCount = '\\0';\n  digitCount = 0;\n  hasExtraBits = false;\n  do {\n    digit = signChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (hasExtraBits) {\n          extraBitsCount = extraBitsCount + -1;\n        }\n        accumulatedValue = (uint)digit + accumulatedValue * 10;\n      }\n      else if (!hasExtraBits) {\n        extraBitsCount = extraBitsCount + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (hasExtraBits)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          temp = FUN_08008e3c(accumulatedValue);\n          result = FUN_08009214(temp,0);\n          if (result == 0) {\n            for (; extraBitsCount < -1; extraBitsCount = extraBitsCount + '\\x02') {\n              tempValue = FUN_08008590(temp);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              temp = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (extraBitsCount < '\\0') {\n              tempValue = FUN_08008590(temp);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              temp = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < extraBitsCount; extraBitsCount = extraBitsCount + -1) {\n                temp = FUN_08008eec(temp,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *outputValue = temp ^ 0x80000000;\n          }\n          else {\n            *outputValue = temp;\n          }\n          *inputString = ((char)currentPtr - (char)baseAddress) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      hasExtraBits = true;\n    }\n    signChar = *currentPtr;\n    currentPtr = currentPtr + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "baseAddress",
                "param_2": "inputString",
                "param_3": "outputValue",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "hasExtraBits",
                "iVar4": "result",
                "pcVar5": "currentChar",
                "pcVar6": "nextCharPtr",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "temp",
                "local_16": "digitCount",
                "local_15": "extraBitsCount",
                "local_14": "accumulatedValue",
                "local_d": "signChar",
                "local_c": "currentPtr"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_and_process_data_0800283a",
            "code": "\nvoid initialize_and_process_data_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_and_process_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_check_limit_08002870",
            "code": "\nchar increment_and_check_limit_08002870(char input_value)\n\n{\n  char result;\n  \n  result = input_value + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_check_limit_08002870",
                "param_1": "input_value",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "decrement_and_set_default_value_08002896",
            "code": "\nchar decrement_and_set_default_value_08002896(char input_value)\n\n{\n  char result;\n  \n  result = input_value;\n  if (input_value == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "decrement_and_set_default_value_08002896",
                "param_1": "input_value",
                "local_9": "result"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculate_result_080028bc(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUN_08008eec(input_2,input_2);\n  result_2 = FUN_08008eec(input_1,input_1);\n  result_1 = FUN_08008cd8(result_1,result_2);\n  result_2 = FUN_08008cdc(input_3,input_3);\n  result_1 = FUN_08009054(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 intermediate_result_1;\n  undefined4 intermediate_result_2;\n  \n  intermediate_result_1 = FUN_08008cdc(input_3,input_3);\n  intermediate_result_1 = FUN_08008eec(intermediate_result_1,input_4);\n  intermediate_result_2 = FUN_08008eec(input_1,input_1);\n  intermediate_result_1 = FUN_08008cd8(intermediate_result_1,intermediate_result_2);\n  intermediate_result_2 = FUN_08008eec(input_2,input_2);\n  intermediate_result_1 = FUN_08008cdc(intermediate_result_1,intermediate_result_2);\n  intermediate_result_2 = FUN_08008eec(input_3,0x40800000);\n  intermediate_result_1 = FUN_08009054(intermediate_result_1,intermediate_result_2);\n  return intermediate_result_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "intermediate_result_1",
                "uVar2": "intermediate_result_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined8 result;\n  \n  temp1 = FUN_08008eec(input2,input2);\n  temp2 = FUN_08008cdc(input1,input1);\n  temp2 = FUN_08008eec(temp2,input3);\n  temp1 = FUN_08008cd8(temp1,temp2);\n  result = FUN_08008590(temp1);\n  result = FUN_080098d0((int)result,(int)((ulonglong)result >> 0x20));\n  temp1 = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_data_080029d8",
            "code": "\nvoid updateData_080029d8(undefined4 dataPtr,int sourcePtr,int destinationPtr)\n\n{\n  int returnValue;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((sourcePtr != 0) && (destinationPtr != 0)) &&\n     (returnValue = FUN_08009214(*(undefined4 *)(sourcePtr + 0x18),*(undefined4 *)(sourcePtr + 0x1c)),\n     returnValue == 0)) {\n    if ((*(char *)(sourcePtr + 0x25) == '\\0') &&\n       (returnValue = FUN_08009264(*(undefined4 *)(sourcePtr + 0x1c),*(undefined4 *)(destinationPtr + 0x18)),\n       returnValue != 0)) {\n      updatedValue2 = *(undefined4 *)(sourcePtr + 0x1c);\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(destinationPtr + 0x18),\n                           *(undefined4 *)(sourcePtr + 0x20));\n      returnValue = FUN_08009228(updatedValue2,updatedValue1);\n      if (returnValue == 0) {\n        updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(destinationPtr + 0x18),\n                             *(undefined4 *)(sourcePtr + 0x20));\n      }\n      else {\n        updatedValue1 = *(undefined4 *)(sourcePtr + 0x1c);\n      }\n      *(undefined4 *)(sourcePtr + 0x18) = updatedValue1;\n    }\n    else {\n      *(undefined4 *)(sourcePtr + 0x18) = *(undefined4 *)(sourcePtr + 0x1c);\n    }\n    *(undefined *)(sourcePtr + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_data_080029d8",
                "param_1": "dataPtr",
                "param_2": "sourcePtr",
                "param_3": "destinationPtr",
                "iVar1": "returnValue",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid processData_08002a94(void)\n\n{\n  undefined *temp;\n  undefined *source;\n  undefined *destination;\n  byte inputByte;\n  \n  inputByte = DAT_20000cf0;\n  source = (undefined *)0x0;\n  destination = (undefined *)0x0;\n  while (temp = destination, inputByte != DAT_20000cf1) {\n    inputByte = FUN_08002896(inputByte);\n    destination = source;\n    FUN_080029d8(&DAT_20000870 + (uint)inputByte * 0x40,source,temp);\n    source = &DAT_20000870 + (uint)inputByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_9": "inputByte",
                "local_18": "source",
                "local_14": "destination",
                "puVar1": "temp"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_parameter_08002afc",
            "code": "\nvoid updateParameter_08002afc(int param1,int param2)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((param1 != 0) && (*(char *)(param1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(param1 + 0x18),*(undefined4 *)(param2 + 0x18)),\n     result != 0)) {\n    updatedValue2 = *(undefined4 *)(param2 + 0x18);\n    updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                         *(undefined4 *)(param1 + 0x20));\n    result = FUN_08009228(updatedValue2,updatedValue1);\n    if (result == 0) {\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                           *(undefined4 *)(param1 + 0x20));\n    }\n    else {\n      updatedValue1 = *(undefined4 *)(param2 + 0x18);\n    }\n    result = FUN_08009214(updatedValue1,*(undefined4 *)(param2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(param2 + 0x18) = updatedValue1;\n      *(undefined *)(param2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_parameter_08002afc",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint unsignedValue;\n  undefined *previousData;\n  undefined *currentData;\n  undefined *tempData1;\n  undefined *tempData2;\n  byte byteValue;\n  \n  tempData1 = (undefined *)0x0;\n  tempData2 = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  currentData = (undefined *)0x0;\n  while (previousData = tempData1, byteValue != DAT_20000cf0) {\n    tempData1 = tempData2;\n    unsignedValue = (uint)byteValue;\n    FUN_08002afc(previousData,tempData2,&DAT_20000870 + unsignedValue * 0x40);\n    byteValue = FUN_08002870(byteValue);\n    currentData = previousData;\n    tempData2 = &DAT_20000870 + unsignedValue * 0x40;\n  }\n  FUN_08002afc(tempData1,tempData2,0,tempData1,currentData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar2": "previousData",
                "puVar3": "currentData",
                "local_14": "tempData1",
                "local_10": "tempData2",
                "local_9": "byteValue",
                "uVar1": "unsignedValue"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_bounds_08002c18",
            "code": "\nvoid calculateBounds_08002c18(int baseAddress,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint tempVar;\n  undefined8 result7;\n  int lowerBound;\n  uint upperBound;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,param2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,param3);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(baseAddress + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  upperBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  lowerBound = (*(int *)(baseAddress + 0x10) - upperBound) - lowerBound;\n  if (lowerBound < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(baseAddress + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    tempVar = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    tempVar = tempVar & ~((int)tempVar >> 0x1f);\n    upperBound = *(uint *)(baseAddress + 0x10);\n    if ((int)tempVar <= (int)*(uint *)(baseAddress + 0x10)) {\n      upperBound = tempVar;\n    }\n    lowerBound = 0;\n  }\n  *(uint *)(baseAddress + 0x34) = upperBound;\n  *(uint *)(baseAddress + 0x38) = lowerBound + upperBound;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_bounds_08002c18",
                "param_1": "baseAddress",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "tempVar",
                "uVar7": "result7",
                "local_20": "lowerBound",
                "local_1c": "upperBound"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPtr;\n  byte byteValue;\n  \n  dataPtr = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  while (byteValue != DAT_20000cf0) {\n    index = (uint)byteValue * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    byteValue = FUN_08002870(byteValue);\n    dataPtr = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPtr",
                "local_11": "byteValue",
                "iVar3": "index",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_08002edc",
            "code": "\nvoid initialize_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_dat_cf1_if_cf0_has_changed_08002f40",
            "code": "\nvoid update_dat_cf1_if_cf0_has_changed_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_dat_cf1_if_cf0_has_changed_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_active_data_pointer_08002f74",
            "code": "\nundefined * getActiveDataPointer_08002f74(void)\n\n{\n  undefined *activeDataPointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    activeDataPointer = (undefined *)0x0;\n  }\n  else {\n    activeDataPointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return activeDataPointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_active_data_pointer_08002f74",
                "puVar1": "activeDataPointer"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "compare_data_08002fac",
            "code": "\nbool compareData_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "compare_data_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "check_and_process_data_08002fd4",
            "code": "\nvoid checkAndProcessData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "check_and_process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_metrics_08003004",
            "code": "\nvoid calculateMetrics_08003004(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 param4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int metric1;\n  int metric2;\n  int metric3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint minMetric;\n  int offset;\n  ushort *metricsArray;\n  int absDiff;\n  uint maxMetric;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 result8;\n  undefined4 result9;\n  undefined4 result10;\n  \n  offset = (uint)DAT_20000cf0 * 0x40;\n  metricsArray = (ushort *)(&DAT_20000870 + offset);\n  result1 = FUN_08008eec(DAT_20000ebc,value1);\n  result6 = FUN_08008590(result1);\n  metric1 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,value2);\n  result6 = FUN_08008590(result1);\n  metric2 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,value3);\n  result6 = FUN_08008590(result1);\n  metric3 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  *metricsArray = 0;\n  if (metric1 < DAT_20000cf4) {\n    *metricsArray = *metricsArray | 0x20;\n  }\n  if (metric2 < DAT_20000cf8) {\n    *metricsArray = *metricsArray | 0x880;\n  }\n  if (metric3 < DAT_20000cfc) {\n    *metricsArray = *metricsArray | 0x200;\n  }\n  absDiff = metric1 - DAT_20000cf4;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000874 + offset) = absDiff;\n  absDiff = metric2 - DAT_20000cf8;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000878 + offset) = absDiff;\n  absDiff = metric3 - DAT_20000cfc;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_2000087c + offset) = absDiff;\n  minMetric = *(uint *)(&DAT_2000087c + offset);\n  if (*(uint *)(&DAT_2000087c + offset) < *(uint *)(&DAT_20000878 + offset)) {\n    minMetric = *(uint *)(&DAT_20000878 + offset);\n  }\n  maxMetric = *(uint *)(&DAT_20000874 + offset);\n  if (*(uint *)(&DAT_20000874 + offset) < minMetric) {\n    maxMetric = minMetric;\n  }\n  *(uint *)(&DAT_20000880 + offset) = maxMetric;\n  if (*(int *)(&DAT_20000880 + offset) != 0) {\n    result1 = FUN_08008e44(metric1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUN_08008e44(metric2 - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUN_08008e44(metric3 - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    result4 = FUN_08008eec(result1,result1);\n    result5 = FUN_08008eec(result2,result2);\n    result4 = FUN_08008cdc(result4,result5);\n    result5 = FUN_08008eec(result3,result3);\n    result4 = FUN_08008cdc(result4,result5);\n    result6 = FUN_08008590(result4);\n    result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result4 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + offset) = result4;\n    result4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + offset));\n    if (flag == '\\0') {\n      result10 = FUN_08008eec(param4,result4);\n    }\n    else {\n      result10 = FUN_08009054(0x3f800000,param4);\n    }\n    result5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + offset),result10);\n    *(undefined4 *)(&DAT_20000884 + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,result10);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008bf0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,result4);\n    result5 = FUN_08008eec(result5,DAT_20000edc);\n    result5 = FUN_08009054(result5,0x453b8000);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008ba0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + offset) = result5;\n    minMetric = FUN_08008eec(result1,result4);\n    result1 = FUN_08008eec(result2,result4);\n    result2 = FUN_08008eec(result3,result4);\n    result9 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absDiff = FUN_08009264(DAT_20000d0c,0), absDiff != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,minMetric);\n      result4 = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,result4);\n      result4 = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,result4);\n      result6 = FUN_08008590(result3);\n      absDiff = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0x3fee6666);\n      if (absDiff != 0) {\n        absDiff = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + offset));\n        result9 = DAT_20000d0c;\n        if (absDiff == 0) {\n          result9 = *(undefined4 *)(&DAT_20000884 + offset);\n        }\n        result6 = FUN_08008590(result3);\n        absDiff = FUN_08008b60((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0xbfee6666);\n        if (absDiff != 0) {\n          result6 = FUN_08008590(result3);\n          result6 = FUN_080082d0(0,0x3ff00000,(int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3fe00000);\n          result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result3 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008590(result9);\n          result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result4 = FUN_08008eec(result4,result3);\n          result7 = FUN_08008590(result4);\n          result8 = FUN_08008590(result3);\n          result8 = FUN_080082d0(0,0x3ff00000,(int)result8,(int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_08008894((int)result7,(int)((ulonglong)result7 >> 0x20),(int)result8,\n                                (int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_080098d0((int)result7,(int)((ulonglong)result7 >> 0x20));\n          absDiff = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                (int)((ulonglong)result7 >> 0x20));\n          if (absDiff == 0) {\n            result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result4 = FUN_08008eec(result4,result3);\n            result6 = FUN_08008590(result4);\n            result7 = FUN_08008590(result3);\n            result7 = FUN_080082d0(0,0x3ff00000,(int)result7,(int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                  (int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n            result9 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + offset) = result9;\n    result4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + offset));\n    absDiff = FUN_08009228(result9,result4);\n    result3 = result4;\n    if (absDiff != 0) {\n      result3 = result9;\n    }\n    *(undefined4 *)(&DAT_20000888 + offset) = result3;\n    absDiff = FUN_08009250(result4,*(undefined4 *)(&DAT_20000884 + offset));\n    if (absDiff == 0) {\n      (&DAT_20000895)[offset] = 0;\n    }\n    else {\n      (&DAT_20000895)[offset] = 1;\n    }\n    (&DAT_20000894)[offset] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + offset);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = minMetric;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = metric1;\n    DAT_20000cf8 = metric2;\n    DAT_20000cfc = metric3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_metrics_08003004",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "param4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "metric1",
                "iVar3": "metric2",
                "iVar4": "metric3",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "result4",
                "uVar8": "result5",
                "uVar9": "minMetric",
                "iVar10": "offset",
                "puVar11": "metricsArray",
                "iVar12": "absDiff",
                "uVar13": "maxMetric",
                "uVar14": "result6",
                "uVar15": "result7",
                "uVar16": "result8",
                "local_20": "result9",
                "local_1c": "result10"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  DAT_20000cf4 = data1;\n  DAT_20000cf8 = data2;\n  DAT_20000cfc = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 inputData)\n\n{\n  undefined4 result;\n  int offset;\n  undefined4 currentData;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  currentData = *(undefined4 *)(&DAT_20000890 + offset);\n  result = FUN_08008e44(inputData);\n  result = FUN_08008eec(currentData,result);\n  currentData = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n  result = FUN_08009054(result,currentData);\n  *(undefined4 *)(&DAT_20000890 + offset) = result;\n  *(undefined4 *)(&DAT_20000880 + offset) = inputData;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "inputData",
                "uVar1": "result",
                "iVar2": "offset",
                "uVar3": "currentData"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_string_080036c6",
            "code": "\nvoid print_string_080036c6(char *string)\n\n{\n  char *current_character;\n  \n  current_character = string;\n  while (*current_character != '\\0') {\n    FUN_08008250(*current_character);\n    current_character = current_character + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "string",
                "local_c": "current_character"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_bits_080036f0",
            "code": "\nvoid print_binary_bits_080036f0(uint input_number,int num_bits)\n\n{\n  undefined4 bit_value;\n  int bit_index;\n  uint bit_mask;\n  \n  bit_mask = 1 << (num_bits - 1U & 0xff);\n  for (bit_index = 0; bit_index < num_bits; bit_index = bit_index + 1) {\n    if ((bit_mask & input_number) == 0) {\n      bit_value = 0x30;\n    }\n    else {\n      bit_value = 0x31;\n    }\n    FUN_08008250(bit_value);\n    bit_mask = bit_mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_bits_080036f0",
                "param_1": "input_number",
                "param_2": "num_bits",
                "local_10": "bit_index",
                "local_c": "bit_mask",
                "uVar1": "bit_value"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_memory_08003740",
            "code": "\nvoid initializeMemory_08003740(undefined memory)\n\n{\n  FUN_080036f0(memory,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_memory_08003740",
                "param_1": "memory"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_buffer_0800375c",
            "code": "\nvoid initialize_buffer_0800375c(undefined2 buffer)\n\n{\n  FUN_080036f0(buffer,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_buffer_0800375c",
                "param_1": "buffer"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid printNumber_08003778(uint number)\n\n{\n  uint temp;\n  uint remaining;\n  char digitArray [12];\n  byte digitCount;\n  \n  digitCount = 0;\n  remaining = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remaining != 0; remaining = remaining / 10) {\n      temp = (uint)digitCount;\n      digitCount = digitCount + 1;\n      digitArray[temp + 1] = (char)(remaining % 10) + '0';\n    }\n    for (; digitCount != 0; digitCount = digitCount - 1) {\n      FUN_08008250(digitArray[digitCount]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "temp",
                "local_1c": "remaining",
                "acStack_15": "digitArray",
                "local_9": "digitCount"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int value)\n\n{\n  int absValue;\n  \n  absValue = value;\n  if (value < 0) {\n    FUN_08008250(0x2d);\n    absValue = -value;\n  }\n  FUN_08003778(absValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_unsigned_int_to_decimal_08003826",
            "code": "\nvoid convertUnsignedIntToDecimal_08003826(uint inputNumber)\n\n{\n  int conversionResult;\n  undefined4 convertedValue;\n  byte tempByte;\n  uint tempUInt;\n  uint number;\n  char decimalString [13];\n  uint temp;\n  byte index;\n  byte tempByte2;\n  \n  conversionResult = FUN_08009228(inputNumber,0);\n  number = inputNumber;\n  if (conversionResult != 0) {\n    FUN_08008250(0x2d);\n    number = inputNumber ^ 0x80000000;\n  }\n  for (tempByte2 = DAT_20000ef9; 1 < tempByte2; tempByte2 = tempByte2 - 2) {\n    number = FUN_08008eec(number,0x42c80000);\n  }\n  if (tempByte2 != 0) {\n    number = FUN_08008eec(number,0x41200000);\n  }\n  convertedValue = FUN_08008cdc(number,0x3f000000);\n  index = 0;\n  temp = FUN_08009278(convertedValue);\n  decimalString[DAT_20000ef9 + 1] = '.';\n  for (; temp != 0; temp = temp / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    tempUInt = (uint)index;\n    index = index + 1;\n    decimalString[tempUInt + 1] = (char)(temp % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    tempUInt = (uint)index;\n    index = index + 1;\n    decimalString[tempUInt + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    tempByte = index + 1;\n    index = index + 2;\n    decimalString[tempByte + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(decimalString[index]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_unsigned_int_to_decimal_08003826",
                "param_1": "inputNumber",
                "iVar1": "conversionResult",
                "uVar2": "convertedValue",
                "bVar3": "tempByte",
                "uVar4": "tempUInt",
                "local_24": "number",
                "acStack_1d": "decimalString",
                "local_10": "temp",
                "local_a": "index",
                "local_9": "tempByte2"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_application_080039a0",
            "code": "\nvoid initializeApplication_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_application_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_data_080039bc",
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int returnValue;\n  undefined4 functionResult;\n  byte index;\n  \n  for (index = 0; index < 2; index = index + 1) {\n    returnValue = FUN_08004d2c(index,&DAT_20000d10);\n    if (returnValue == 0) {\n      FUNC_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      functionResult = FUNC_080005b4(&DAT_20000d10);\n      FUNC_08004030(functionResult);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "iVar1": "returnValue",
                "uVar2": "functionResult",
                "local_9": "index"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "process_flags_08003a18",
            "code": "\nvoid processFlags_08003a18(uint flags)\n\n{\n  if ((flags & 0x80) == 0) {\n    if ((flags & 0x40) == 0) {\n      if ((flags & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "process_flags_08003a18",
                "param_1": "flags"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "update_configuration_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid updateConfiguration_08003a74(void)\n\n{\n  byte tempByte;\n  \n  tempByte = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((tempByte & 0x10) == 0) {\n      if ((tempByte & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((tempByte & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((tempByte & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((tempByte & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "update_configuration_08003a74",
                "bVar1": "tempByte"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "parse_command_08003b98",
            "code": "\nuint parse_command_08003b98(char *command)\n\n{\n  byte first_char;\n  int result;\n  undefined4 converted_value;\n  uint return_value;\n  undefined8 processed_value;\n  undefined4 second_value;\n  undefined4 third_value;\n  byte index;\n  byte flag;\n  \n  if (*command != '$') {\n    return_value = FUNC_080005b4(command);\n    return return_value;\n  }\n  index = 1;\n  flag = '\\0';\n  first_char = command[1];\n  if (first_char == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < first_char) || (first_char < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(first_char) {\n  case 0x23:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        result = FUN_08004d2c(flag,command);\n        if (result == 0) {\n          FUNC_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,command);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(command,&index,&third_value);\n    if (result == 0) {\n      return 1;\n    }\n    first_char = index + 1;\n    if (command[index] != '=') {\n      return 3;\n    }\n    index = first_char;\n    if (flag == '\\0') {\n      result = FUN_08002638(command,&index,&second_value);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[index] == '\\0') {\n        converted_value = FUN_08009278(third_value);\n        return_value = FUN_08004e30(converted_value,second_value);\n        return return_value;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)index - (uint)first_char] = command[index];\n      return_value = (uint)index;\n      index = index + 1;\n    } while (command[return_value] != '\\0');\n    flag = first_char;\n    flag = FUNC_080005b4(command);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    processed_value = FUN_08008590(third_value);\n    processed_value = FUN_08009798((int)processed_value,(int)((ulonglong)processed_value >> 0x20));\n    flag = FUN_08008bf0((int)processed_value,(int)((ulonglong)processed_value >> 0x20));\n    FUN_08004bc0(flag,command);\n    break;\n  case 0x58:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "parse_command_08003b98",
                "param_1": "command",
                "bVar1": "first_char",
                "iVar2": "result",
                "uVar3": "converted_value",
                "uVar4": "return_value",
                "uVar5": "processed_value",
                "local_14": "second_value",
                "local_10": "third_value",
                "local_a": "index",
                "local_9": "flag"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid processInput_08003f34(void)\n\n{\n  byte inputByte;\n  undefined4 result;\n  uint arrayIndex;\n  \n  while( true ) {\n    while( true ) {\n      inputByte = FUN_08008286();\n      if (inputByte == 0xff) {\n        return;\n      }\n      if ((inputByte == 10) || (inputByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < inputByte) && (inputByte != 0x2f)) {\n          if (inputByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUNC_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((inputByte < 0x61) || (0x7a < inputByte)) {\n            arrayIndex = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[arrayIndex] = inputByte;\n          }\n          else {\n            arrayIndex = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[arrayIndex] = inputByte - 0x20;\n          }\n        }\n      }\n      else if (inputByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUNC_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result = FUN_08003b98(&DAT_20000d10);\n      FUNC_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "inputByte",
                "uVar2": "result",
                "uVar3": "arrayIndex"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "FUNC_08004030",
            "code": "\nvoid FUNC_08004030(char param_1)\n\n{\n  if (param_1 == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(param_1) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "FUNC_08004030"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_message_080041a0",
            "code": "\nvoid displayMessage_080041a0(undefined messageType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(messageType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "messageType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "display_grbl_version_08004228",
            "code": "\nvoid display_grbl_version_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "display_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_commands_0800423c",
            "code": "\nvoid printGrblCommands_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"commandcommand (view Grbl settings)\\r\\ncommand# (view # parameters)\\r\\ncommandG (view parser state)\\r\\ncommandN (view startup blocks)\\r\\ncommandx=settingValue (save Grbl setting)\\r\\ncommandNx=blockLine (save startup block)\\r\\ncommandC (check gcode mode)\\r\\ncommandX (kill alarm lock)\\r\\ncommandH (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_commands_0800423c",
                "$": "command",
                "value": "settingValue",
                "line": "blockLine"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_settings_08004250",
            "code": "\nvoid printSettings_08004250(void)\n\n{\n  undefined4 uVar1;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  uVar1 = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(uVar1);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_settings_08004250"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "print_g92_data_080044e8",
            "code": "\nvoid printG92Data_080044e8(void)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined8 uVar3;\n  undefined4 dataArray [3];\n  byte index;\n  byte iteration;\n  \n  iteration = 0;\n  while( true ) {\n    if (7 < iteration) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          uVar3 = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          uVar3 = FUN_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),0x57e16865,0x3fa42851);\n          uVar2 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n          FUN_08003826(uVar2);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    iVar1 = FUN_08004d7c(iteration,dataArray);\n    if (iVar1 == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(iteration) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(dataArray[index]);\n      }\n      else {\n        uVar3 = FUN_08008590(dataArray[index]);\n        uVar3 = FUN_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),0x57e16865,0x3fa42851);\n        uVar2 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n        FUN_08003826(uVar2);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    iteration = iteration + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "print_g92_data_080044e8",
                "local_9": "iteration",
                "auStack_18": "dataArray",
                "local_a": "index"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "process_binary_data_080046d0",
            "code": "\nvoid processBinaryData_080046d0(void)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    result2 = FUN_08008590(DAT_20000e78);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),0x57e16865,0x3fa42851);\n    result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n    FUN_08003826(result1);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "process_binary_data_080046d0",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_data_08004900",
            "code": "\nvoid initializeData_08004900(undefined dataPointer,undefined4 value)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(dataPointer);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(value);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_data_08004900",
                "param_1": "dataPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined4 statusArray [6];\n  byte local_11;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (local_11 = 0; local_11 < 3; local_11 = local_11 + 1) {\n    uVar1 = FUN_08008e44(statusArray[local_11 + 3]);\n    uVar2 = (uint)local_11;\n    uVar1 = FUN_08009054(uVar1,(&DAT_20000ebc)[local_11]);\n    statusArray[uVar2] = uVar1;\n    if ((DAT_20000ee4 & 1) != 0) {\n      uVar4 = FUN_08008590(statusArray[local_11]);\n      uVar4 = FUN_08008640((int)uVar4,(int)((ulonglong)uVar4 >> 0x20),0x57e16865,0x3fa42851);\n      uVar2 = (uint)local_11;\n      uVar1 = FUN_08008c30((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n      statusArray[uVar2] = uVar1;\n    }\n    FUN_08003826(statusArray[local_11]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (local_11 = 0; local_11 < 3; local_11 = local_11 + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      uVar3 = statusArray[local_11];\n      uVar1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_11 + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (local_11 + 10) * 4));\n      uVar2 = (uint)local_11;\n      uVar1 = FUN_08008cd8(uVar3,uVar1);\n      statusArray[uVar2] = uVar1;\n    }\n    else {\n      uVar4 = FUN_08008590(statusArray[local_11]);\n      uVar1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_11 + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (local_11 + 10) * 4));\n      uVar5 = FUN_08008590(uVar1);\n      uVar5 = FUN_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0x57e16865,0x3fa42851);\n      uVar4 = FUN_080082d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20),(int)uVar5,\n                           (int)((ulonglong)uVar5 >> 0x20));\n      uVar2 = (uint)local_11;\n      uVar1 = FUN_08008c30((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n      statusArray[uVar2] = uVar1;\n    }\n    FUN_08003826(statusArray[local_11]);\n    if (local_11 < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "auStack_2c": "statusArray"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_data_08004bc0",
            "code": "\nvoid initializeData_08004bc0(byte inputByte,undefined4 dataPointer)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,dataPointer,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_data_08004bc0",
                "param_1": "inputByte",
                "param_2": "dataPointer"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_offset_and_call_function_08004bf4",
            "code": "\nvoid calculateOffsetAndCallFunction_08004bf4(byte inputByte,undefined4 paramValue)\n\n{\n  FUN_08000374((UnsignedShort)inputByte * 0xd + 0x200,paramValue,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_call_function_08004bf4",
                "param_1": "inputByte",
                "param_2": "paramValue",
                "ushort": "UnsignedShort"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_data_08004c2a",
            "code": "\nvoid initializeData_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_data_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_variables_08004c48",
            "code": "\nvoid initializeVariables_08004c48(char inputChar)\n\n{\n  if (inputChar != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_variables_08004c48",
                "param_1": "inputChar"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_modify_data_08004d2c",
            "code": "\nbool check_and_modify_data_08004d2c(byte byte_value,undefined *data_array)\n\n{\n  int result;\n  \n  result = FUN_080003ec(data_array,(ushort)byte_value * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *data_array = 0;\n    FUN_08004bc0(byte_value,data_array);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_modify_data_08004d2c",
                "param_1": "byte_value",
                "param_2": "data_array",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "process_data_08004d7c",
            "code": "\nbool processData_08004d7c(byte inputByte,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_080003ec(param,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(param,0,0xc);\n    FUN_08004bf4(inputByte,param);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "process_data_08004d7c",
                "param_1": "inputByte",
                "param_2": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_and_initialize_data_08004dd2",
            "code": "\nundefined4 check_and_initialize_data_08004dd2(void)\n\n{\n  byte result;\n  int status;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    status = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (status == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    status = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (status == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_and_initialize_data_08004dd2",
                "bVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_configuration_08004e30",
            "code": "\nundefined4 updateConfiguration_08004e30(int configId,uint configValue)\n\n{\n  undefined4 result;\n  int returnValue;\n  undefined8 processedValue;\n  \n  switch(configId) {\n  case 0:\n  case 1:\n  case 2:\n    returnValue = FUN_0800923c(configValue,0);\n    if (returnValue != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[configId] = configValue;\n    break;\n  case 3:\n    returnValue = FUN_08009228(configValue,0x40400000);\n    if (returnValue != 0) {\n      return 9;\n    }\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009654((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = configValue;\n    break;\n  case 5:\n    DAT_20000ed0 = configValue;\n    break;\n  case 6:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009798((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 7:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009654((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(configValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = configValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = configValue;\n    break;\n  case 0xb:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009654((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 0xc:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009654((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 0xd:\n    returnValue = FUN_08009214(configValue,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    returnValue = FUN_08009214(configValue,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    returnValue = FUN_08009214(configValue,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    returnValue = FUN_08009214(configValue,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    returnValue = FUN_08009214(configValue,0);\n    if (returnValue == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009798((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = configValue;\n    break;\n  case 0x14:\n    DAT_20000eec = configValue;\n    break;\n  case 0x15:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009654((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = configValue;\n    break;\n  case 0x17:\n    processedValue = FUN_08008590(configValue);\n    processedValue = FUN_08009798((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_configuration_08004e30",
                "param_1": "configId",
                "param_2": "configValue",
                "uVar1": "result",
                "iVar2": "returnValue",
                "uVar3": "processedValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int status;\n  undefined stackData [15];\n  byte iterationCount;\n  \n  status = FUN_08004dd2();\n  if (status == 0) {\n    FUNC_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (iterationCount = 0; iterationCount < 8; iterationCount = iterationCount + 1) {\n    status = FUN_08004d7c(iterationCount,stackData);\n    if (status == 0) {\n      FUNC_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "iVar1": "status",
                "auStack_18": "stackData",
                "local_9": "iterationCount"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_components_08005250",
            "code": "\nvoid initialize_components_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_components_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "update_value_0800525c",
            "code": "\nvoid updateValue_0800525c(byte newValue)\n\n{\n  if ((int)(char)newValue != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (newValue == 0) {\n      FUN_08005250();\n      DAT_20000e12 = newValue;\n    }\n    else {\n      if ((char)newValue < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = newValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "update_value_0800525c",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_register_080052ac",
            "code": "\n\n\nvoid updateRegister_080052ac(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_register_080052ac",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_register_value_080052dc",
            "code": "\n\n\nvoid updateRegisterValue_080052dc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_register_value_080052dc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_division_08005324",
            "code": "\nvoid calculateDivision_08005324(uint inputNumber)\n\n{\n  uint adjustedNumber;\n  \n  adjustedNumber = inputNumber;\n  if (inputNumber < 800) {\n    adjustedNumber = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedNumber;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_division_08005324",
                "param_1": "inputNumber",
                "local_14": "adjustedNumber"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "update_counter_08005360",
            "code": "\nbool updateCounter_08005360(void)\n\n{\n  bool exceedLimit;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  exceedLimit = 420000 < DAT_20000e2c;\n  if (exceedLimit) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return exceedLimit;\n}\n\n",
            "renaming": {
                "FUN_08005360": "update_counter_08005360",
                "bVar1": "exceedLimit"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "calculate_and_update_values_080053a0",
            "code": "\nvoid calculateAndUpdateValues_080053a0(void)\n\n{\n  int returnValue;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "calculate_and_update_values_080053a0",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initialize_data_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initialize_data_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_data_08005790",
            "code": "\nvoid initializeData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "execute_task_080057e4",
            "code": "\nvoid executeTask_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "execute_task_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_application_0800583c",
            "code": "\nvoid initializeApplication_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_application_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_execute_0800585c",
            "code": "\nvoid update_status_and_execute_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_execute_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_and_update_flags_08005900",
            "code": "\nundefined4 checkAndUpdateFlags_08005900(byte input_byte)\n\n{\n  if (input_byte == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (input_byte < 0x7f) {\n    if (input_byte == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (input_byte < 0x40) {\n      if (input_byte == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (input_byte == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_and_update_flags_08005900",
                "param_1": "input_byte"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "call_system_interrupt_0800597c",
            "code": "\nvoid callSystemInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "call_system_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_data_08005984",
            "code": "\nundefined4 initializeData_08005984(undefined4 inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputValue,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_080059b4",
            "code": "\n\n\nundefined4 initialize_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initialize_data_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_08005a84",
            "code": "\nundefined4 get_data_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_until_sum_08005a98",
            "code": "\nvoid waitUntilSum_08005a98(int targetSum)\n\n{\n  int randomSum;\n  uint currentSum;\n  \n  randomSum = FUN_08005a84();\n  do {\n    currentSum = FUN_08005a84();\n  } while (currentSum < (uint)(targetSum + randomSum));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_until_sum_08005a98",
                "param_1": "targetSum",
                "iVar1": "randomSum",
                "uVar2": "currentSum"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "update_memory_08005bdc",
            "code": "\nvoid updateMemory_08005bdc(byte byteValue,uint uintValue)\n\n{\n  if ((char)byteValue < '\\0') {\n    *(char *)((byteValue & 0xf) + 0xe000ed14) = (char)((uintValue & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteValue + -0x1fff1c00) = (char)((uintValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "update_memory_08005bdc",
                "param_1": "byteValue",
                "param_2": "uintValue"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_param_08005c30",
            "code": "\n\n\nbool checkAndSetParam_08005c30(int inputParam)\n\n{\n  bool isInputValid;\n  \n  isInputValid = inputParam - 1U < 0x1000000;\n  if (isInputValid) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInputValid;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_param_08005c30",
                "param_1": "inputParam",
                "bVar1": "isInputValid"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_system_status_08005cec",
            "code": "\n\n\nundefined4 checkSystemStatus_08005cec(uint *flags)\n\n{\n  int counter;\n  uint randomValue;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        counter = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          randomValue = FUN_08005a84();\n          if (counter + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        counter = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          randomValue = FUN_08005a84();\n          if (counter + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    counter = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      randomValue = FUN_08005a84();\n      if (counter + 100U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    counter = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      randomValue = FUN_08005a84();\n      if (counter + 5000U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      counter = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      counter = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      counter = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (counter + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_system_status_08005cec",
                "param_1": "flags",
                "iVar1": "counter",
                "uVar2": "randomValue"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "execute_operation_0800618c",
            "code": "\n\n\nundefined4 executeOperation_0800618c(uint *data,uint size)\n\n{\n  int result;\n  uint delay;\n  uint timeout;\n  undefined8 timestamp;\n  \n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((data[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (data[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          delay = FUN_08005a84();\n          if (timeout <= delay) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40023808 = data[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40023808 = data[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40023808 = data[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timestamp = FUN_08006628();\n  FUN_08005c30((uint)timestamp / 1000,(int)((ulonglong)timestamp >> 0x20),(uint)timestamp * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "execute_operation_0800618c",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "result",
                "uVar2": "delay",
                "uVar3": "timeout",
                "uVar4": "timestamp"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "update_flags_and_values_0800640c",
            "code": "\n\n\nvoid updateFlagsAndValues_0800640c(int param1,uint flagsToOR,uint flagsToAssign)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  if (param1 == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    value1 = 0x100;\n    value2 = 2;\n    value4 = 3;\n    value3 = 0;\n    value5 = 0;\n    FUN_08006e88(0x40020000,&value1);\n    _DAT_40023808 = flagsToAssign | flagsToOR | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    value1 = 0x200;\n    value2 = 2;\n    value4 = 3;\n    value3 = 0;\n    value5 = 0;\n    FUN_08006e88(0x40020800,&value1);\n    _DAT_40023808 = flagsToOR | flagsToAssign << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "update_flags_and_values_0800640c",
                "param_1": "param1",
                "param_2": "flagsToOR",
                "param_3": "flagsToAssign",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint uVar1;\n  uint clockFrequency;\n  \n  uVar1 = _DAT_40023808 & 0xc;\n  if (uVar1 == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      clockFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      clockFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return clockFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (uVar1 < 9) {\n    if (uVar1 == 0) {\n      return 16000000;\n    }\n    if (uVar1 == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "local_c": "clockFrequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "update_data_08006628",
            "code": "\n\n\nuint updateData_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "update_data_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_shifted_value_08006680",
            "code": "\n\n\nuint getShiftedValue_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "extracted_data_shift_080066cc",
            "code": "\n\n\nuint extractedDataShift_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "extracted_data_shift_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_configuration_bits_08006950",
            "code": "\n\n\nvoid setConfigurationBits_08006950(uint configuration)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (configuration & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_configuration_bits_08006950",
                "param_1": "configuration"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_shifted_value_08006998",
            "code": "\n\n\nuint get_shifted_value_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_shifted_value_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_array_080069e4",
            "code": "\nvoid setBitInArray_080069e4(byte bitPosition)\n\n{\n  *(int *)((((unsignedInt)(int)(character)bitPosition >> 5) plus 0x20) * 4 plus minus0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "bitPosition",
                "uint": "unsignedInt",
                "char": "character",
                "+": "plus",
                "-": "minus"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool checkBit_08006a18(byte input)\n\n{\n  return (*(uint *)((((uint)(int)(char)input >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (input & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "input"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_memory_08006a58",
            "code": "\nvoid setBitInMemory_08006a58(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_in_memory_08006a8c",
            "code": "\nvoid setBitInMemory_08006a8c(byte inputByte)\n\n{\n  *(integer *)((((unsignedInteger)(integer)(character)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "param_1": "inputByte",
                "uint": "unsignedInteger",
                "int": "integer",
                "char": "character"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "is_bit_set_08006ac0",
            "code": "\nbool isBitSet_08006ac0(byte input_byte)\n\n{\n  return (*(uint *)((((uint)(int)(char)input_byte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (input_byte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "is_bit_set_08006ac0",
                "param_1": "input_byte"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "set_memory_value_08006b00",
            "code": "\nvoid setMemoryValue_08006b00(byte address,uint value)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "set_memory_value_08006b00",
                "param_1": "address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extract_byte_from_binary_08006b54",
            "code": "\nbyte extractByteFromBinary_08006b54(byte input_byte)\n\n{\n  byte output_byte;\n  \n  if ((char)input_byte < '\\0') {\n    output_byte = *(byte *)((input_byte & 0xf) + 0xe000ed14);\n  }\n  else {\n    output_byte = *(byte *)((char)input_byte + -0x1fff1c00);\n  }\n  return output_byte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extract_byte_from_binary_08006b54",
                "param_1": "input_byte",
                "bVar1": "output_byte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "apply_bitwise_operations_08006ba0",
            "code": "\nuint applyBitwiseOperations_08006ba0(uint inputBits,uint inputMask,uint outputMask)\n\n{\n  uint shiftRightAmount;\n  \n  inputBits = inputBits & 7;\n  shiftRightAmount = 7 - inputBits;\n  if (3 < shiftRightAmount) {\n    shiftRightAmount = 4;\n  }\n  if (inputBits + 4 < 7) {\n    inputBits = 0;\n  }\n  else {\n    inputBits = inputBits - 3;\n  }\n  return outputMask & (1 << (inputBits & 0xff)) - 1U |\n         ((1 << (shiftRightAmount & 0xff)) - 1U & inputMask) << (inputBits & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "apply_bitwise_operations_08006ba0",
                "param_1": "inputBits",
                "param_2": "inputMask",
                "param_3": "outputMask",
                "uVar1": "shiftRightAmount"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extract_bits_08006c04(uint input_value,uint bit_offset,uint *subset1,uint *subset2)\n\n{\n  uint num_bits;\n  \n  bit_offset = bit_offset & 7;\n  num_bits = 7 - bit_offset;\n  if (3 < num_bits) {\n    num_bits = 4;\n  }\n  if (bit_offset + 4 < 7) {\n    bit_offset = 0;\n  }\n  else {\n    bit_offset = bit_offset - 3;\n  }\n  *subset1 = (1 << (num_bits & 0xff)) - 1U & input_value >> (bit_offset & 0xff);\n  *subset2 = (1 << (bit_offset & 0xff)) - 1U & input_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input_value",
                "param_2": "bit_offset",
                "param_3": "subset1",
                "param_4": "subset2",
                "uVar1": "num_bits"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "infinite_loop_08006c70",
            "code": "\nvoid infiniteLoop_08006c70(void)\n\n{\n  barrier(0xf);\n  barrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "infinite_loop_08006c70",
                "DataSynchronizationBarrier": "barrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_set_data_08006c9c",
            "code": "\n\n\nbool checkAndSetData_08006c9c(int inputValue)\n\n{\n  bool isInRange;\n  \n  isInRange = inputValue - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_set_data_08006c9c",
                "param_1": "inputValue",
                "bVar1": "isInRange"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_08006ce0",
            "code": "\nvoid initialize_08006ce0(undefined4 input)\n\n{\n  FUN_08006950(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_08006ce0",
                "param_1": "input"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char input,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param1,param2);\n  FUN_08006b00((int)input,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "input",
                "param_2": "param1",
                "param_3": "param2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "execute_function_08006d2e",
            "code": "\nvoid execute_function_08006d2e(char input)\n\n{\n  FUN_080069b4((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "execute_function_08006d2e",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_function_08006d4a",
            "code": "\nvoid executeFunction_08006d4a(char inputParameter)\n\n{\n  FUN_080069e4((int)inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_function_08006d4a",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_program_08006d66",
            "code": "\nvoid initialize_program_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_program_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "execute_function_08006d72",
            "code": "\nundefined4 executeFunction_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "execute_function_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "initialize_application_08006d8a",
            "code": "\nundefined4 initializeApplication_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "initialize_application_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "process_input_08006d98",
            "code": "\nvoid processInput_08006d98(char inputChar,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 processedInput;\n  \n  processedInput = FUN_08006b54((int)inputChar);\n  FUN_08006c04(processedInput,param2,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "process_input_08006d98",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "processedInput"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "initialize_08006dc4",
            "code": "\nvoid initialize_08006dc4(char character)\n\n{\n  FUN_08006a58((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "initialize_08006dc4",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "decode_character_08006de0",
            "code": "\nundefined4 decodeCharacter_08006de0(char character)\n\n{\n  undefined4 decodedValue;\n  \n  decodedValue = FUN_08006a18((int)character);\n  return decodedValue;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "decode_character_08006de0",
                "param_1": "character",
                "uVar1": "decodedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "execute_function_08006dfe",
            "code": "\nvoid executeFunction_08006dfe(char inputParam)\n\n{\n  FUN_08006a8c((int)inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "execute_function_08006dfe",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "decode_character_08006e1a",
            "code": "\nundefined4 decodeCharacter_08006e1a(char inputChar)\n\n{\n  undefined4 decodedChar;\n  \n  decodedChar = FUN_08006ac0((int)inputChar);\n  return decodedChar;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "decode_character_08006e1a",
                "param_1": "inputChar",
                "uVar1": "decodedChar"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_parameter_values_08006e88",
            "code": "\n\n\nvoid updateParameterValues_08006e88(uint *outputParams,uint *inputParams)\n\n{\n  uint mask;\n  uint bit;\n  int index;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    mask = 1 << (counter & 0xff);\n    bit = *inputParams & mask;\n    if (bit == mask) {\n      if ((inputParams[1] == 2) || (inputParams[1] == 0x12)) {\n        mask = inputParams[4];\n        outputParams[(counter >> 3) + 8] = outputParams[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        outputParams[(counter >> 3) + 8] = outputParams[(counter >> 3) + 8] | mask << ((counter & 7) << 2);\n      }\n      *outputParams = *outputParams & ~(3 << ((counter & 0x7f) << 1));\n      *outputParams = *outputParams | (inputParams[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((inputParams[1] == 1) || (inputParams[1] == 2)) || (inputParams[1] == 0x11)) || (inputParams[1] == 0x12)\n         ) {\n        outputParams[2] = outputParams[2] & ~(3 << ((counter & 0x7f) << 1));\n        outputParams[2] = outputParams[2] | inputParams[3] << ((counter & 0x7f) << 1);\n        outputParams[1] = outputParams[1] & ~(1 << (counter & 0xff));\n        outputParams[1] = outputParams[1] | (inputParams[1] >> 4 & 1) << (counter & 0xff);\n      }\n      outputParams[3] = outputParams[3] & ~(3 << ((counter & 0x7f) << 1));\n      outputParams[3] = outputParams[3] | inputParams[2] << ((counter & 0x7f) << 1);\n      if ((inputParams[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (outputParams == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (outputParams == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (outputParams == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (outputParams == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (outputParams == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (outputParams == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (outputParams == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (outputParams == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (outputParams == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (outputParams == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             index << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bit & _DAT_40013c00;\n        _DAT_40013c04 = ~bit & _DAT_40013c04;\n        if ((inputParams[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bit | _DAT_40013c00;\n        }\n        if ((inputParams[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bit | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bit & _DAT_40013c08;\n        _DAT_40013c0c = ~bit & _DAT_40013c0c;\n        if ((inputParams[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bit | _DAT_40013c08;\n        }\n        if ((inputParams[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bit | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_parameter_values_08006e88",
                "param_1": "outputParams",
                "param_2": "inputParams",
                "uVar1": "mask",
                "uVar2": "bit",
                "iVar3": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_data_0800733e",
            "code": "\nvoid updateParamData_0800733e(int ptrToData,undefined2 newValue,char isValueNull)\n\n{\n  if (isValueNull == '\\0') {\n    *(undefined2 *)(ptrToData + 0x1a) = newValue;\n  }\n  else {\n    *(undefined2 *)(ptrToData + 0x18) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_data_0800733e",
                "param_1": "ptrToData",
                "param_2": "newValue",
                "param_3": "isValueNull"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_data_and_call_function_0800738e",
            "code": "\n\n\nvoid updateDataAndCallFunction_0800738e(ushort data)\n\n{\n  if ((data & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)data;\n    FUNC_080073c0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_data_and_call_function_0800738e",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_in_memory_080073d4",
            "code": "\nvoid setBitInMemory_080073d4(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x4002001a) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_in_memory_080073d4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_at_index_08007402",
            "code": "\nvoid setBitAtIndex_08007402(uint index)\n\n{\n  *(short *)(((int)index >> 4) * 0x400 + 0x40020018) = (short)(1 << (index & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_at_index_08007402",
                "param_1": "index"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 option1;\n  undefined4 option2;\n  undefined4 option3;\n  undefined4 option4;\n  undefined4 option5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  value2 = 0x400000;\n  value3 = 8;\n  value4 = 0x150;\n  value5 = 2;\n  value6 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  option1 = 0xf;\n  option2 = 2;\n  option3 = 0;\n  option4 = 0x1400;\n  option5 = 0x1000;\n  iVar1 = FUN_0800618c(&option1,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "value2",
                "local_2c": "value3",
                "local_28": "value4",
                "local_24": "value5",
                "local_20": "value6",
                "local_1c": "option1",
                "local_18": "option2",
                "local_14": "option3",
                "local_10": "option4",
                "local_c": "option5"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "process_parameter_080074c8",
            "code": "\nvoid processParameter_080074c8(uint input)\n\n{\n  if ((input & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((input & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((input & 0x80) != 0)) {\n    FUN_08003a18(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "process_parameter_080074c8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "handle_param_08007520",
            "code": "\nvoid handleParam_08007520(uint param)\n\n{\n  if ((param & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "handle_param_08007520",
                "param_1": "param"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_program_08007540",
            "code": "\nundefined4 initialize_program_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_program_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_peripheral_registers_0800756c",
            "code": "\n\n\nvoid initializePeripheralRegisters_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_peripheral_registers_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_080076c8",
            "code": "\nvoid updateBit_080076c8(uint input)\n\n{\n  *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) ^ 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_080076c8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_update_settings_08007756",
            "code": "\nvoid checkAndUpdateSettings_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_update_settings_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_components_0800778c",
            "code": "\n\n\nvoid initializeComponents_0800778c(void)\n\n{\n  int index;\n  int mask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  uint *pointer;\n  uint count;\n  \n  for (count = 0; count < 0x11; count = count + 1) {\n    index = count * 0x18;\n    pointer = (uint *)(&DAT_0800bcbc + index);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*pointer >> 4 & 0xff);\n    mask = 1 << (*pointer & 0xf);\n    value1 = *(undefined4 *)(&DAT_0800bcc0 + index);\n    value2 = *(undefined4 *)(&DAT_0800bcc4 + index);\n    value3 = *(undefined4 *)(&DAT_0800bcc8 + index);\n    value4 = *(undefined4 *)(&DAT_0800bccc + index);\n    FUN_08006e88(((*pointer >> 4) + 0x100080) * 0x400,&mask);\n    if (-1 < (int)pointer[5]) {\n      FUN_0800733e(((*pointer >> 4) + 0x100080) * 0x400,1 << (*pointer & 0xf) & 0xffff,\n                   pointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_components_0800778c",
                "iVar1": "index",
                "local_24": "mask",
                "local_20": "value1",
                "local_1c": "value2",
                "local_18": "value3",
                "local_14": "value4",
                "local_10": "pointer",
                "local_c": "count"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_08007854",
            "code": "\nunsigned_integer check_bit_08007854(unsigned_integer input_value)\n\n{\n  return *(unsigned_integer *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_08007854",
                "param_1": "input_value",
                "uint": "unsigned_integer"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "calculate_combined_value_08007884",
            "code": "\nuint calculate_combined_value_08007884(void)\n\n{\n  int value_0x36;\n  int value_0x37;\n  int value_0x38;\n  int value_0x39;\n  int value_0x0F;\n  uint value_0x00;\n  \n  value_0x36 = FUN_08007854(0x36);\n  value_0x37 = FUN_08007854(0x37);\n  value_0x38 = FUN_08007854(0x38);\n  value_0x39 = FUN_08007854(0x39);\n  value_0x0F = FUN_08007854(0xf);\n  value_0x00 = FUN_08007854(0);\n  return value_0x00 | value_0x36 << 4 | value_0x37 << 3 | value_0x38 << 2 | value_0x39 << 1 | value_0x0F << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "calculate_combined_value_08007884",
                "iVar1": "value_0x36",
                "iVar2": "value_0x37",
                "iVar3": "value_0x38",
                "iVar4": "value_0x39",
                "iVar5": "value_0x0F",
                "uVar6": "value_0x00"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "combine_values_080078f4",
            "code": "\nuint combineValues_080078f4(void)\n\n{\n  int i;\n  uint result;\n  \n  result = 0;\n  for (i = 0; i < 4; i = i + 1) {\n    result = *(uint *)(&DAT_20000e54 + i * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "combine_values_080078f4",
                "local_10": "i",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int counter;\n  uint previousValue;\n  undefined4 newValue;\n  uint currentValue;\n  uint changedBits;\n  \n  counter = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + counter * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    currentValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (currentValue != DAT_20000e64) {\n      changedBits = ~currentValue & DAT_20000e64;\n      if ((~DAT_20000e64 & currentValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & currentValue);\n      }\n      previousValue = currentValue;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "counter",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "currentValue",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte byteValue)\n\n{\n  *(int *)(((uint)(int)(char)byteValue >> 5) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_flag_08007a10",
            "code": "\n\n\nvoid updateFlag_08007a10(undefined *inputPointer)\n\n{\n  if (inputPointer == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (inputPointer == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (inputPointer == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_flag_08007a10",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "handle_memory_region_change_08007a70",
            "code": "\nvoid handle_memory_region_change_08007a70(undefined *memory_region,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined region_code;\n  \n  if (memory_region == (undefined *)0x40000000) {\n    region_code = 0x1c;\n  }\n  else if (memory_region == (undefined *)0x40000400) {\n    region_code = 0x1d;\n  }\n  else {\n    if (memory_region != &DAT_40000800) {\n      return;\n    }\n    region_code = 0x1e;\n  }\n  FUN_08006cf6(region_code,param_2,param_3);\n  FUN_080079e0(region_code);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "handle_memory_region_change_08007a70",
                "param_1": "memory_region",
                "local_c": "region_code"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "configure_settings_08007b70",
            "code": "\n\n\nvoid configureSettings_08007b70(void)\n\n{\n  uint settingsFlags;\n  \n  settingsFlags = 1;\n  if (_DAT_40000034 != 0) {\n    settingsFlags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    settingsFlags = settingsFlags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | settingsFlags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "configure_settings_08007b70",
                "local_c": "settingsFlags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_bits_08007bc2",
            "code": "\n\n\nvoid clearBits_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_bits_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_min_value_08007bf0",
            "code": "\n\n\nvoid updateMinValue_08007bf0(uint newValue)\n\n{\n  _DAT_4000002c = newValue;\n  if (newValue <= _DAT_40000024) {\n    _DAT_40000024 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_min_value_08007bf0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_parameter_08007c40",
            "code": "\n\n\nvoid initializeParameter_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_parameter_08007c40",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_variable_08007c5e",
            "code": "\n\n\nvoid setGlobalVariable_08007c5e(undefined4 newValue)\n\n{\n  _DAT_40000038 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "check_and_call_functions_08007c7c",
            "code": "\n\n\nvoid check_and_call_functions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "check_and_call_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_hardware_settings_08007d08",
            "code": "\n\n\nvoid initializeHardwareSettings_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_hardware_settings_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_and_bits_08007da8",
            "code": "\n\n\nvoid setFlagsAndBits_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_and_bits_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_program_08007e08",
            "code": "\nvoid initializeProgram_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_program_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "send_byte_and_wait_until_ready_08007e1c",
            "code": "\n\n\nvoid sendByteAndWaitUntilReady_08007e1c(byte byteToSend)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byteToSend;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "send_byte_and_wait_until_ready_08007e1c",
                "param_1": "byteToSend"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_bit_set_08007e58",
            "code": "\n\n\nbool checkBitSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_bit_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_last_byte_08007e84",
            "code": "\n\n\nuint get_last_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_last_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_memory_flags_08007ea4",
            "code": "\n\n\nvoid updateMemoryFlags_08007ea4(undefined *memoryAddress)\n\n{\n  if (memoryAddress == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memoryAddress == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memoryAddress == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memoryAddress == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memoryAddress == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memoryAddress == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_memory_flags_08007ea4",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_and_update_value_08007f54",
            "code": "\nvoid calculateAndUpdateValue_08007f54(int inputAddress,int inputValue)\n\n{\n  ulonglong dividend;\n  int result1;\n  int result2;\n  undefined8 randomValue;\n  \n  if ((*(uint *)(inputAddress + 0xc) & 0x8000) == 0) {\n    if ((inputAddress != 0x40011000) && (inputAddress != 0x40011400)) {\n      randomValue = FUN_08006680();\n      dividend = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 2);\n      result1 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(dividend * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(inputAddress + 8) =\n           (int)(dividend / 100) << 4 |\n           (((uint)(result1 * 0x19) / (uint)(inputValue << 2) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(inputValue << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    dividend = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 2);\n    result1 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(dividend * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(inputAddress + 8) =\n         (int)(dividend / 100) << 4 |\n         (((uint)(result1 * 0x19) / (uint)(inputValue << 2) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(inputValue << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((inputAddress != 0x40011000) && (inputAddress != 0x40011400)) {\n      randomValue = FUN_08006680();\n      dividend = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 1);\n      result1 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(dividend * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(inputAddress + 8) =\n           (int)(dividend / 100) << 4 |\n           (((uint)(result1 * 0x19) / (uint)(inputValue << 1) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(inputValue << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    dividend = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputValue << 1);\n    result1 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(dividend * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(inputAddress + 8) =\n         (int)(dividend / 100) << 4 |\n         (((uint)(result1 * 0x19) / (uint)(inputValue << 1) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(inputValue << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_and_update_value_08007f54",
                "param_1": "inputAddress",
                "param_2": "inputValue",
                "uVar1": "dividend",
                "iVar2": "result1",
                "iVar3": "result2",
                "uVar4": "randomValue"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_application_08008250",
            "code": "\nvoid initializeApplication_08008250(undefined appData)\n\n{\n  FUN_08007e1c(appData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_application_08008250",
                "param_1": "appData"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "initialize_0800826a",
            "code": "\nundefined4 initialize_0800826a(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "initialize_0800826a",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_and_get_value_08008286",
            "code": "\nundefined check_and_get_value_08008286(void)\n\n{\n  undefined value;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    value = FUN_08007e84();\n    result = FUN_08005900(value);\n    if (result == 0) {\n      return value;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_and_get_value_08008286",
                "iVar2": "result",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_sum_080082d0",
            "code": "\nulonglong calculateSum_080082d0(uint num1,uint num2,uint num3,uint num4)\n\n{\n  int shift1;\n  byte carry;\n  uint sum1;\n  uint sum2;\n  uint sum3;\n  uint temp1;\n  uint temp2;\n  int shift2;\n  uint result1;\n  uint result2;\n  uint result3;\n  uint temp3;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp1 = num4 ^ 0x80000000;\n  result1 = num2 << 1;\n  num4 = num4 << 1;\n  condition1 = ((num2 ^ temp1) & 0x7fffffff) == 0;\n  condition2 = condition1 && num1 == num3;\n  if (!condition1 || num1 != num3) {\n    condition2 = (result1 | num1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (num4 | num3) == 0;\n  }\n  shift2 = (int)result1 >> 0x15;\n  if (!condition2) {\n    condition2 = shift2 == -1;\n  }\n  shift1 = (int)num4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift2 == -1 || shift1 == -1) {\n      result1 = temp1;\n      result3 = num3;\n      if (shift2 == -1) {\n        result1 = num2;\n        result3 = num1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        num3 = result3;\n        temp1 = result1;\n      }\n      condition2 = (result3 | result1 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (num3 | temp1 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = result1 == temp1;\n      }\n      if (!condition2) {\n        result1 = result1 | 0x80000;\n      }\n      return CONCAT44(result1,result3);\n    }\n    if (((num2 ^ temp1) & 0x7fffffff) != 0 || num1 != num3) {\n      if ((result1 | num1) == 0) {\n        num1 = num3;\n        num2 = temp1;\n      }\n      return CONCAT44(num2,num1);\n    }\n    if (num2 != temp1) {\n      return 0;\n    }\n    if (result1 >> 0x15 == 0) {\n      condition2 = (num1 & 0x80000000) != 0;\n      temp1 = num2 * 2 + (uint)condition2;\n      if (CARRY4(num2,num2) || CARRY4(num2 * 2,(uint)condition2)) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return CONCAT44(temp1,num1 << 1);\n    }\n    if (result1 < 0xffc00000) {\n      return CONCAT44(num2 + 0x100000,num1);\n    }\n    num2 = num2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(num2 | 0x7ff00000) << 0x20;\n  }\n  result1 = result1 >> 0x15;\n  num4 = num4 >> 0x15;\n  result3 = num4 - result1;\n  condition2 = result3 != 0;\n  if (num4 < result1) {\n    result3 = -result3;\n  }\n  result2 = num1;\n  temp2 = num2;\n  if (condition2 && result1 <= num4) {\n    result1 = result1 + result3;\n    result2 = num3;\n    temp2 = temp1;\n    num3 = num1;\n    temp1 = num2;\n  }\n  if (0x36 < result3) {\n    return CONCAT44(temp2,result2);\n  }\n  sum2 = temp2 & 0xfffff | 0x100000;\n  if ((temp2 & 0x80000000) != 0) {\n    condition2 = result2 != 0;\n    result2 = -result2;\n    sum2 = -sum2 - (uint)condition2;\n  }\n  temp2 = temp1 & 0xfffff | 0x100000;\n  if ((temp1 & 0x80000000) != 0) {\n    condition2 = num3 != 0;\n    num3 = -num3;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  if (result1 == result3) {\n    temp2 = temp2 ^ 0x100000;\n    if (result1 == 0) {\n      sum2 = sum2 ^ 0x100000;\n      result1 = 1;\n    }\n    else {\n      result3 = result3 - 1;\n    }\n  }\n  temp1 = -result3 + 0x20;\n  if ((int)result3 < 0x21) {\n    temp3 = num3 << (temp1 & 0xff);\n    num3 = num3 >> (result3 & 0xff);\n    sum1 = result2 + num3;\n    sum3 = temp2 << (temp1 & 0xff);\n    temp1 = sum1 + sum3;\n    sum2 = sum2 + CARRY4(result2,num3) + ((int)temp2 >> (result3 & 0xff)) +\n            (uint)CARRY4(sum1,sum3);\n  }\n  else {\n    temp3 = temp2 << (-result3 + 0x40 & 0xff);\n    if (num3 != 0) {\n      temp3 = temp3 | 2;\n    }\n    temp2 = (int)temp2 >> (result3 - 0x20 & 0xff);\n    temp1 = result2 + temp2;\n    sum2 = sum2 + ((int)temp2 >> 0x1f) + (uint)CARRY4(result2,temp2);\n  }\n  num2 = sum2 & 0x80000000;\n  result3 = sum2;\n  if ((int)sum2 < 0) {\n    condition2 = temp3 == 0;\n    temp3 = -temp3;\n    result3 = -temp1;\n    temp1 = -(uint)!condition2 - temp1;\n    result3 = -(uint)(condition2 <= result3) - sum2;\n  }\n  if (0xfffff < result3) {\n    result2 = result1 - 1;\n    if (0x1fffff < result3) {\n      result2 = result3 & 1;\n      result3 = result3 >> 1;\n      carry = (byte)temp1;\n      temp1 = (uint)(result2 != 0) << 0x1f | temp1 >> 1;\n      temp3 = (uint)(carry & 1) << 0x1f | temp3 >> 1;\n      result2 = result1;\n      if (0xffbfffff < result1 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition2 = 0x7fffffff < temp3;\n    if (temp3 == 0x80000000) {\n      condition2 = (temp1 & 1) != 0;\n    }\n    return CONCAT44(result3 + result2 * 0x100000 + (uint)CARRY4(temp1,(uint)condition2) | num2,\n                    temp1 + condition2);\n  }\n  condition1 = (temp3 & 0x80000000) != 0;\n  temp3 = temp3 << 1;\n  result2 = temp1 * 2;\n  condition2 = CARRY4(temp1,temp1);\n  temp1 = temp1 * 2 + (uint)condition1;\n  result3 = result3 * 2 + (uint)(condition2 || CARRY4(result2,(uint)condition1));\n  result2 = result1 - 2;\n  if (result1 - 1 != 0 && 0xfffff < result3) goto LAB_080083e0;\n  temp2 = temp1;\n  result1 = result3;\n  if (result3 == 0) {\n    temp2 = 0;\n    result1 = temp1;\n  }\n  shift2 = LZCOUNT(result1);\n  if (result3 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  result3 = shift2 - 0xb;\n  condition3 = SBORROW4(result3,0x20);\n  temp1 = shift2 - 0x2b;\n  condition2 = (int)temp1 < 0;\n  condition1 = temp1 == 0;\n  if ((int)result3 < 0x20) {\n    condition3 = SCARRY4(temp1,0xc);\n    shift2 = shift2 + -0x1f;\n    condition2 = shift2 < 0;\n    condition1 = shift2 == 0;\n    temp1 = result3;\n    if (!condition1 && condition2 == condition3) {\n      temp2 = result1 << (result3 & 0xff);\n      result1 = result1 >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp3 = 0x20 - temp1;\n  }\n  result1 = result1 << (temp1 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    result1 = result1 | temp2 >> (temp3 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp2 = temp2 << (temp1 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result3 <= (int)result2) {\n    return CONCAT44(result1 + (result2 - result3) * 0x100000 | num2,temp2);\n  }\n  temp1 = ~(result2 - result3);\n  if ((int)temp1 < 0x1f) {\n    shift2 = temp1 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(temp1 - 0x1f,0xc)) {\n      return CONCAT44(sum2,temp2 >> (0x20 - (0xcU - shift2) & 0xff) | result1 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp1 = temp1 + 1;\n    return CONCAT44(num2 | result1 >> (temp1 & 0xff),\n                    temp2 >> (temp1 & 0xff) | result1 << (0x20 - temp1 & 0xff));\n  }\n  return CONCAT44(sum2,result1 >> (temp1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_sum_080082d0",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "sum1",
                "uVar4": "sum2",
                "uVar5": "sum3",
                "uVar6": "temp1",
                "uVar7": "temp2",
                "iVar8": "shift2",
                "uVar9": "result1",
                "uVar10": "result2",
                "uVar11": "result3",
                "uVar12": "temp3",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_sum_080082d4",
            "code": "\nulonglong calculate_sum_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int carry;\n  byte bit;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift;\n  uint a_shifted;\n  uint b_shifted;\n  uint c_shifted;\n  uint d_shifted;\n  uint result1;\n  uint result2;\n  bool equal;\n  bool condition;\n  bool carry_condition;\n  \n  a_shifted = param_2 << 1;\n  c_shifted = param_4 << 1;\n  equal = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  condition = equal && param_1 == param_3;\n  if (!equal || param_1 != param_3) {\n    condition = (a_shifted | param_1) == 0;\n  }\n  if (!condition) {\n    condition = (c_shifted | param_3) == 0;\n  }\n  shift = (int)a_shifted >> 0x15;\n  if (!condition) {\n    condition = shift == -1;\n  }\n  carry = (int)c_shifted >> 0x15;\n  if (!condition) {\n    condition = carry == -1;\n  }\n  if (condition) {\n    if (shift == -1 || carry == -1) {\n      c_shifted = param_4;\n      a_shifted = param_3;\n      if (shift == -1) {\n        c_shifted = param_2;\n        a_shifted = param_1;\n      }\n      if (shift != -1 || carry != -1) {\n        param_3 = a_shifted;\n        param_4 = c_shifted;\n      }\n      condition = (a_shifted | c_shifted << 0xc) == 0;\n      if (condition) {\n        condition = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (condition) {\n        condition = c_shifted == param_4;\n      }\n      if (!condition) {\n        c_shifted = c_shifted | 0x80000;\n      }\n      return CONCAT44(c_shifted,a_shifted);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((a_shifted | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (a_shifted >> 0x15 == 0) {\n      condition = (param_1 & 0x80000000) != 0;\n      c_shifted = param_2 * 2 + (uint)condition;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)condition)) {\n        c_shifted = c_shifted | 0x80000000;\n      }\n      return CONCAT44(c_shifted,param_1 << 1);\n    }\n    if (a_shifted < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  a_shifted = a_shifted >> 0x15;\n  c_shifted = c_shifted >> 0x15;\n  d_shifted = c_shifted - a_shifted;\n  condition = d_shifted != 0;\n  if (c_shifted < a_shifted) {\n    d_shifted = -d_shifted;\n  }\n  b_shifted = param_1;\n  temp3 = param_2;\n  if (condition && a_shifted <= c_shifted) {\n    a_shifted = a_shifted + d_shifted;\n    b_shifted = param_3;\n    temp3 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < d_shifted) {\n    return CONCAT44(temp3,b_shifted);\n  }\n  c_shifted = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    condition = b_shifted != 0;\n    b_shifted = -b_shifted;\n    c_shifted = -c_shifted - (uint)condition;\n  }\n  temp3 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    condition = param_3 != 0;\n    param_3 = -param_3;\n    temp3 = -temp3 - (uint)condition;\n  }\n  if (a_shifted == d_shifted) {\n    temp3 = temp3 ^ 0x100000;\n    if (a_shifted == 0) {\n      c_shifted = c_shifted ^ 0x100000;\n      a_shifted = 1;\n    }\n    else {\n      d_shifted = d_shifted - 1;\n    }\n  }\n  result2 = -d_shifted + 0x20;\n  if ((int)d_shifted < 0x21) {\n    result1 = param_3 << (result2 & 0xff);\n    param_3 = param_3 >> (d_shifted & 0xff);\n    temp1 = b_shifted + param_3;\n    temp2 = temp3 << (result2 & 0xff);\n    result2 = temp1 + temp2;\n    c_shifted = c_shifted + CARRY4(b_shifted,param_3) + ((int)temp3 >> (d_shifted & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    result1 = temp3 << (-d_shifted + 0x40 & 0xff);\n    if (param_3 != 0) {\n      result1 = result1 | 2;\n    }\n    temp3 = (int)temp3 >> (d_shifted - 0x20 & 0xff);\n    result2 = b_shifted + temp3;\n    c_shifted = c_shifted + ((int)temp3 >> 0x1f) + (uint)CARRY4(b_shifted,temp3);\n  }\n  param_2 = c_shifted & 0x80000000;\n  d_shifted = c_shifted;\n  if ((int)c_shifted < 0) {\n    condition = result1 == 0;\n    result1 = -result1;\n    d_shifted = -result2;\n    result2 = -(uint)!condition - result2;\n    d_shifted = -(uint)(condition <= d_shifted) - c_shifted;\n  }\n  if (0xfffff < d_shifted) {\n    b_shifted = a_shifted - 1;\n    if (0x1fffff < d_shifted) {\n      c_shifted = d_shifted & 1;\n      d_shifted = d_shifted >> 1;\n      bit = (byte)result2;\n      result2 = (uint)(c_shifted != 0) << 0x1f | result2 >> 1;\n      result1 = (uint)(bit & 1) << 0x1f | result1 >> 1;\n      b_shifted = a_shifted;\n      if (0xffbfffff < a_shifted * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition = 0x7fffffff < result1;\n    if (result1 == 0x80000000) {\n      condition = (result2 & 1) != 0;\n    }\n    return CONCAT44(d_shifted + b_shifted * 0x100000 + (uint)CARRY4(result2,(uint)condition) | param_2,\n                    result2 + condition);\n  }\n  equal = (result1 & 0x80000000) != 0;\n  result1 = result1 << 1;\n  b_shifted = result2 * 2;\n  condition = CARRY4(result2,result2);\n  result2 = result2 * 2 + (uint)equal;\n  d_shifted = d_shifted * 2 + (uint)(condition || CARRY4(b_shifted,(uint)equal));\n  b_shifted = a_shifted - 2;\n  if (a_shifted - 1 != 0 && 0xfffff < d_shifted) goto LAB_080083e0;\n  temp3 = result2;\n  a_shifted = d_shifted;\n  if (d_shifted == 0) {\n    temp3 = 0;\n    a_shifted = result2;\n  }\n  shift = LZCOUNT(a_shifted);\n  if (d_shifted == 0) {\n    shift = shift + 0x20;\n  }\n  result2 = shift - 0xb;\n  carry_condition = SBORROW4(result2,0x20);\n  d_shifted = shift - 0x2b;\n  condition = (int)d_shifted < 0;\n  equal = d_shifted == 0;\n  if ((int)result2 < 0x20) {\n    carry_condition = SCARRY4(d_shifted,0xc);\n    shift = shift + -0x1f;\n    condition = shift < 0;\n    equal = shift == 0;\n    d_shifted = result2;\n    if (!equal && condition == carry_condition) {\n      temp3 = a_shifted << (result2 & 0xff);\n      a_shifted = a_shifted >> (0xcU - shift & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (equal || condition != carry_condition) {\n    result1 = 0x20 - d_shifted;\n  }\n  a_shifted = a_shifted << (d_shifted & 0xff);\n  if (equal || condition != carry_condition) {\n    a_shifted = a_shifted | temp3 >> (result1 & 0xff);\n  }\n  if (equal || condition != carry_condition) {\n    temp3 = temp3 << (d_shifted & 0xff);\n  }\nLAB_08008458:\n  if ((int)result2 <= (int)b_shifted) {\n    return CONCAT44(a_shifted + (b_shifted - result2) * 0x100000 | param_2,temp3);\n  }\n  d_shifted = ~(b_shifted - result2);\n  if ((int)d_shifted < 0x1f) {\n    shift = d_shifted - 0x13;\n    if (shift != 0 && shift < 0 == SCARRY4(d_shifted - 0x1f,0xc)) {\n      return CONCAT44(c_shifted,temp3 >> (0x20 - (0xcU - shift) & 0xff) | a_shifted << (0xcU - shift & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    d_shifted = d_shifted + 1;\n    return CONCAT44(param_2 | a_shifted >> (d_shifted & 0xff),\n                    temp3 >> (d_shifted & 0xff) | a_shifted << (0x20 - d_shifted & 0xff));\n  }\n  return CONCAT44(c_shifted,a_shifted >> (d_shifted - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_sum_080082d4",
                "iVar1": "carry",
                "bVar2": "bit",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "shift",
                "uVar7": "a_shifted",
                "uVar8": "b_shifted",
                "uVar9": "c_shifted",
                "uVar10": "d_shifted",
                "uVar11": "result1",
                "uVar12": "result2",
                "bVar13": "equal",
                "bVar14": "condition",
                "bVar15": "carry_condition"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "shift_and_rotate_0800854c",
            "code": "\nulonglong shiftAndRotate_0800854c(uint input)\n\n{\n  uint result;\n  uint count;\n  int leadingZeros;\n  uint shiftAmount;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  leadingZeros = LZCOUNT(input);\n  shiftAmount = leadingZeros + 0x15;\n  isCarry = SBORROW4(shiftAmount,0x20);\n  count = leadingZeros - 0xb;\n  isNegative = (int)count < 0;\n  isZero = count == 0;\n  if (shiftAmount < 0x20) {\n    isCarry = SCARRY4(count,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    count = shiftAmount;\n    if (!isZero && isCarry == false) {\n      result = input << shiftAmount;\n      input = input >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != isCarry) {\n    remainingBits = 0x20 - count;\n  }\n  input = input << (count & 0xff);\n  if (isZero || isNegative != isCarry) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != isCarry) {\n    result = 0 << (count & 0xff);\n  }\nLAB_08008458:\n  if (shiftAmount < 0x433) {\n    return CONCAT44(input + (0x432 - shiftAmount) * 0x100000,result);\n  }\n  count = ~(0x432 - shiftAmount);\n  if (0x1e < (int)count) {\n    return (ulonglong)(input >> (count - 0x1f & 0xff));\n  }\n  leadingZeros = count - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(count - 0x1f,0xc)) {\n    count = count + 1;\n    return CONCAT44(input >> (count & 0xff),\n                    result >> (count & 0xff) | input << (0x20 - count & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - leadingZeros) & 0xff) | input << (0xcU - leadingZeros & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "shift_and_rotate_0800854c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "count",
                "iVar3": "leadingZeros",
                "uVar4": "shiftAmount",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isCarry"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "bitwise_shift_operation_0800856c",
            "code": "\nulonglong bitwise_shift_operation_0800856c(uint input_value)\n\n{\n  uint shift_count;\n  uint abs_input_value;\n  uint shift_amount;\n  int leading_zeros;\n  uint new_shift_count;\n  uint sign_bit;\n  uint remaining_bits;\n  bool check_condition_1;\n  bool check_condition_2;\n  bool check_condition_3;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_input_value = input_value;\n  if ((int)sign_bit < 0) {\n    abs_input_value = -input_value;\n  }\n  shift_count = 0;\n  leading_zeros = LZCOUNT(abs_input_value);\n  new_shift_count = leading_zeros + 0x15;\n  check_condition_3 = SBORROW4(new_shift_count,0x20);\n  shift_amount = leading_zeros - 0xb;\n  check_condition_1 = (int)shift_amount < 0;\n  check_condition_2 = shift_amount == 0;\n  if (new_shift_count < 0x20) {\n    check_condition_3 = SCARRY4(shift_amount,0xc);\n    check_condition_1 = false;\n    check_condition_2 = leading_zeros + 1 == 0;\n    shift_amount = new_shift_count;\n    if (!check_condition_2 && check_condition_3 == false) {\n      shift_count = abs_input_value << new_shift_count;\n      abs_input_value = abs_input_value >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (check_condition_2 || check_condition_1 != check_condition_3) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input_value = abs_input_value << (shift_amount & 0xff);\n  if (check_condition_2 || check_condition_1 != check_condition_3) {\n    abs_input_value = abs_input_value | 0U >> (remaining_bits & 0xff);\n  }\n  if (check_condition_2 || check_condition_1 != check_condition_3) {\n    shift_count = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if (new_shift_count < 0x433) {\n    return CONCAT44(abs_input_value + (0x432 - new_shift_count) * 0x100000 | sign_bit,shift_count);\n  }\n  shift_amount = ~(0x432 - new_shift_count);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(input_value,abs_input_value >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(sign_bit | abs_input_value >> (shift_amount & 0xff),\n                    shift_count >> (shift_amount & 0xff) | abs_input_value << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(input_value,shift_count >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input_value << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "bitwise_shift_operation_0800856c",
                "param_1": "input_value",
                "uVar1": "shift_count",
                "uVar2": "abs_input_value",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "new_shift_count",
                "uVar6": "sign_bit",
                "in_r12": "remaining_bits",
                "bVar7": "check_condition_1",
                "bVar8": "check_condition_2",
                "bVar9": "check_condition_3"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_bits_08008590",
            "code": "\nulonglong reverseBits_08008590(uint inputValue,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint shiftedValue;\n  uint tempValue1;\n  uint finalValue;\n  uint shiftedValue2;\n  uint shiftedValue3;\n  int bitCount;\n  uint shiftedValue4;\n  uint tempValue2;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  shiftedValue3 = inputValue << 1;\n  condition2 = shiftedValue3 == 0;\n  shiftedValue = (uint)((inputValue & 0x80000000) != 0) << 0x1f;\n  shiftedValue2 = (uint)((int)shiftedValue3 >> 3) >> 1;\n  finalValue = shiftedValue | shiftedValue2;\n  inputValue = inputValue << 0x1d;\n  if (!condition2) {\n    param4 = shiftedValue3 & 0xff000000;\n    condition2 = param4 == 0;\n  }\n  if (!condition2) {\n    condition2 = param4 == 0xff000000;\n  }\n  if (!condition2) {\n    return CONCAT44(finalValue,inputValue) ^ 0x3800000000000000;\n  }\n  if ((shiftedValue3 & 0xffffff) == 0) {\n    return CONCAT44(finalValue,inputValue);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(finalValue,inputValue) | 0x8000000000000;\n  }\n  tempValue1 = inputValue;\n  shiftedValue3 = shiftedValue2;\n  if (shiftedValue2 == 0) {\n    tempValue1 = 0;\n    shiftedValue3 = inputValue;\n  }\n  bitCount = LZCOUNT(shiftedValue3);\n  if (shiftedValue2 == 0) {\n    bitCount = bitCount + 0x20;\n  }\n  shiftedValue4 = bitCount - 0xb;\n  condition3 = SBORROW4(shiftedValue4,0x20);\n  shiftedValue2 = bitCount - 0x2b;\n  condition2 = (int)shiftedValue2 < 0;\n  condition1 = shiftedValue2 == 0;\n  if ((int)shiftedValue4 < 0x20) {\n    condition3 = SCARRY4(shiftedValue2,0xc);\n    bitCount = bitCount + -0x1f;\n    condition2 = bitCount < 0;\n    condition1 = bitCount == 0;\n    shiftedValue2 = shiftedValue4;\n    if (!condition1 && condition2 == condition3) {\n      tempValue1 = shiftedValue3 << (shiftedValue4 & 0xff);\n      shiftedValue3 = shiftedValue3 >> (0xcU - bitCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    tempValue2 = 0x20 - shiftedValue2;\n  }\n  shiftedValue3 = shiftedValue3 << (shiftedValue2 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    shiftedValue3 = shiftedValue3 | tempValue1 >> (tempValue2 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    tempValue1 = tempValue1 << (shiftedValue2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)shiftedValue4 < 0x381) {\n    return CONCAT44(shiftedValue3 + (0x380 - shiftedValue4) * 0x100000 | shiftedValue,tempValue1);\n  }\n  shiftedValue2 = ~(0x380 - shiftedValue4);\n  if (0x1e < (int)shiftedValue2) {\n    return CONCAT44(finalValue,shiftedValue3 >> (shiftedValue2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  bitCount = shiftedValue2 - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(shiftedValue2 - 0x1f,0xc)) {\n    shiftedValue2 = shiftedValue2 + 1;\n    return CONCAT44(shiftedValue | shiftedValue3 >> (shiftedValue2 & 0xff),\n                    tempValue1 >> (shiftedValue2 & 0xff) | shiftedValue3 << (0x20 - shiftedValue2 & 0xff));\n  }\n  return CONCAT44(finalValue,tempValue1 >> (0x20 - (0xcU - bitCount) & 0xff) | shiftedValue3 << (0xcU - bitCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_bits_08008590",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "shiftedValue",
                "uVar2": "tempValue1",
                "uVar3": "finalValue",
                "uVar4": "shiftedValue2",
                "uVar5": "shiftedValue3",
                "iVar6": "bitCount",
                "uVar7": "shiftedValue4",
                "in_r12": "tempValue2",
                "bVar8": "condition1",
                "bVar9": "condition2",
                "bVar10": "condition3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong resultLow;\n  longlong tempResult;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool isZero;\n  bool isNegative;\n  bool isNegativeOverflow;\n  ulonglong inputConcatenation;\n  \n  inputConcatenation = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  isZero = temp2 == 0;\n  if (!isZero) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    isZero = temp5 == 0;\n  }\n  if (!isZero) {\n    isZero = temp2 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = temp5 == 0x7ff;\n  }\n  if (isZero) {\n    inputConcatenation = FUN_0800881c();\n  }\n  temp1 = (uint)(inputConcatenation >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  isZero = ((uint)inputConcatenation | temp1 << 0xc) == 0;\n  if (!isZero) {\n    isZero = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (isZero) {\n    input3 = (uint)inputConcatenation | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    isNegativeOverflow = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    isZero = temp4 == 0;\n    temp1 = temp4;\n    if (!isZero && (int)temp2 <= temp3) {\n      isNegativeOverflow = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      isZero = temp6 == temp4;\n    }\n    if (!isZero && (int)temp1 < 0 == isNegativeOverflow) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!isZero && (int)temp1 < 0 == isNegativeOverflow) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    isNegativeOverflow = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    isZero = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    resultLow = (inputConcatenation & 0xffffffff) * (ulonglong)input3;\n    inputConcatenation = (inputConcatenation & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (resultLow >> 0x20);\n    temp7 = (uint)inputConcatenation;\n    tempResult = (ulonglong)temp1 * (ulonglong)input4 + (inputConcatenation >> 0x20);\n    temp6 = (uint)tempResult;\n    temp1 = (uint)((ulonglong)tempResult >> 0x20);\n    if ((int)resultLow != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      isZero = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      tempResult = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)isZero)),\n                       temp6 * 2 + (uint)isZero);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)tempResult >> 0x20) << 0xb | (uint)tempResult >> 0x15;\n    input3 = (uint)tempResult << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    isNegative = 0xfc < temp4;\n    isNegativeOverflow = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    isZero = temp1 == 0;\n    temp2 = temp1;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < temp1;\n      isNegativeOverflow = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      isZero = temp1 == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        isZero = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)isZero),input3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)temp2 < 0 == isNegativeOverflow) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(temp4,0x36);\n  isZero = (int)(temp4 + 0x36) < 0;\n  isNegativeOverflow = temp4 == 0xffffffca;\n  if (isNegativeOverflow || isZero != isNegative) {\n    input3 = 0;\n  }\n  if (isNegativeOverflow || isZero != isNegative) {\n    input4 = input4 & 0x80000000;\n  }\n  if (isNegativeOverflow || isZero != isNegative) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "resultLow",
                "lVar2": "tempResult",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "isNegativeOverflow",
                "uVar12": "inputConcatenation"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800056c",
                "FUN_0800a348",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_xor_0800881c",
            "code": "\nulonglong calculate_bitwise_xor_0800881c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!is_zero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_xor_0800881c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 signAndExponent,uint significand1,uint significand2,uint significand3)\n\n{\n  uint s1;\n  uint s2;\n  uint s3;\n  uint s4;\n  uint s5;\n  uint s6;\n  uint s7;\n  int i;\n  uint temp1;\n  uint unaff_r5;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 result;\n  \n  result = CONCAT44(significand1,signAndExponent);\n  temp5 = 0x7ff;\n  s7 = significand1 >> 0x14 & 0x7ff;\n  flag1 = s7 == 0;\n  if (!flag1) {\n    unaff_r5 = significand3 >> 0x14 & 0x7ff;\n    flag1 = unaff_r5 == 0;\n  }\n  if (!flag1) {\n    flag1 = s7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = unaff_r5 == 0x7ff;\n  }\n  if (flag1) {\n    result = FUN_08008a02();\n  }\n  temp1 = (uint)((ulonglong)result >> 0x20);\n  temp3 = (uint)result;\n  i = s7 - unaff_r5;\n  if ((significand2 | significand3 << 0xc) == 0) {\n    s7 = (temp1 ^ significand3) & 0x80000000 | temp1 & 0xfffff;\n    flag3 = SCARRY4(i,temp5 >> 1);\n    temp1 = i + (temp5 >> 1);\n    flag1 = (int)temp1 < 0;\n    flag2 = temp1 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp5,temp1);\n      flag1 = (int)(temp5 - temp1) < 0;\n      flag2 = temp5 == temp1;\n    }\n    if (!flag2 && flag1 == flag3) {\n      s7 = s7 | temp1 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(s7,temp3);\n    }\n    s7 = s7 | 0x100000;\n    temp5 = 0;\n    flag2 = SBORROW4(temp1,1);\n    temp1 = temp1 - 1;\n    flag1 = temp1 == 0;\n    s3 = temp1;\n  }\n  else {\n    s3 = (significand3 << 0xc) >> 4 | 0x10000000 | significand2 >> 0x18;\n    temp5 = significand2 << 8;\n    temp2 = (temp1 << 0xc) >> 4 | 0x10000000 | temp3 >> 0x18;\n    temp3 = temp3 * 0x100;\n    s7 = (temp1 ^ significand3) & 0x80000000;\n    flag1 = s3 <= temp2;\n    if (temp2 == s3) {\n      flag1 = temp5 <= temp3;\n    }\n    i = i + (uint)flag1;\n    temp1 = i + 0x3fd;\n    if (flag1 == false) {\n      s3 = s3 >> 1;\n      temp5 = (uint)((significand2 >> 0x18 & 1) != 0) << 0x1f | temp5 >> 1;\n    }\n    temp4 = temp3 - temp5;\n    temp2 = (temp2 - s3) - (uint)(temp3 < temp5);\n    s4 = s3 >> 1;\n    s1 = (uint)((s3 & 1) != 0) << 0x1f | temp5 >> 1;\n    temp3 = 0x100000;\n    s3 = 0x80000;\n    while( true ) {\n      flag1 = s1 <= temp4;\n      if (s4 < temp2 || temp2 - s4 < (uint)flag1) {\n        temp4 = temp4 - s1;\n        temp3 = temp3 | s3;\n        temp2 = (temp2 - s4) - (uint)!flag1;\n      }\n      s5 = s4 >> 1;\n      s1 = (uint)((s4 & 1) != 0) << 0x1f | s1 >> 1;\n      flag2 = s1 <= temp4;\n      flag1 = temp2 - s5 < (uint)flag2;\n      temp5 = temp2;\n      if (s5 < temp2 || flag1) {\n        temp4 = temp4 - s1;\n        temp5 = (temp2 - s5) - (uint)!flag2;\n      }\n      if (s5 < temp2 || flag1) {\n        temp3 = temp3 | s3 >> 1;\n      }\n      temp2 = s4 >> 2;\n      s2 = (uint)((s5 & 1) != 0) << 0x1f | s1 >> 1;\n      flag2 = s2 <= temp4;\n      flag1 = temp5 - temp2 < (uint)flag2;\n      s5 = temp5;\n      if (temp2 < temp5 || flag1) {\n        temp4 = temp4 - s2;\n        s5 = (temp5 - temp2) - (uint)!flag2;\n      }\n      if (temp2 < temp5 || flag1) {\n        temp3 = temp3 | s3 >> 2;\n      }\n      s6 = s4 >> 3;\n      s1 = (uint)((temp2 & 1) != 0) << 0x1f | s2 >> 1;\n      flag2 = s1 <= temp4;\n      flag1 = s5 - s6 < (uint)flag2;\n      temp2 = s5;\n      if (s6 < s5 || flag1) {\n        temp4 = temp4 - s1;\n        temp2 = (s5 - s6) - (uint)!flag2;\n      }\n      if (s6 < s5 || flag1) {\n        temp3 = temp3 | s3 >> 3;\n      }\n      temp5 = temp2 | temp4;\n      if (temp5 == 0) break;\n      temp2 = temp2 << 4 | temp4 >> 0x1c;\n      temp4 = temp4 << 4;\n      s4 = s4 & 0xfffffff8 | s1 >> 0x1d;\n      s1 = (s2 >> 1) << 3;\n      s3 = s3 >> 4;\n      if (s3 == 0) {\n        s6 = s4;\n        if ((s7 & 0x100000) != 0) goto LAB_080089b2;\n        s7 = s7 | temp3;\n        temp3 = 0;\n        s3 = 0x80000000;\n      }\n    }\n    if ((s7 & 0x100000) == 0) {\n      s7 = s7 | temp3;\n      temp3 = 0;\n    }\nLAB_080089b2:\n    flag3 = 0xfc < temp1;\n    flag2 = SBORROW4(temp1,0xfd);\n    s4 = i + 0x300;\n    flag1 = s4 == 0;\n    s3 = s4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < s4;\n      flag2 = SBORROW4(s4,0x700);\n      s3 = i - 0x400;\n      flag1 = s4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = s6 <= temp2;\n      if (temp2 == s6) {\n        flag1 = s1 <= temp4;\n      }\n      if (temp2 == s6 && temp4 == s1) {\n        flag1 = (temp3 & 1) != 0;\n      }\n      return CONCAT44(s7 + temp1 * 0x100000 + (uint)CARRY4(temp3,(uint)flag1),temp3 + flag1);\n    }\n  }\n  if (!flag1 && (int)s3 < 0 == flag2) {\n    return (ulonglong)(s7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp1,0x36);\n  flag1 = (int)(temp1 + 0x36) < 0;\n  flag2 = temp1 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp3 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    s7 = s7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(s7,temp3);\n  }\n  s3 = -temp1;\n  temp2 = s3 - 0x20;\n  if (0x1f < (int)s3) {\n    s3 = temp3 >> (temp2 & 0xff) | s7 << (0x20 - temp2 & 0xff);\n    temp1 = (s7 >> (temp2 & 0xff) & ~((s7 & 0x80000000) >> (temp2 & 0xff))) -\n            ((int)s3 >> 0x1f);\n    if ((temp5 | temp3 << (0x20 - temp2 & 0xff) | s3 << 1) == 0) {\n      temp1 = temp1 & ~(s3 >> 0x1f);\n    }\n    return CONCAT44(s7,temp1) & 0x80000000ffffffff;\n  }\n  i = s3 - 0x14;\n  if (i != 0 && i < 0 == SCARRY4(temp2,0xc)) {\n    temp1 = 0xc - i;\n    s3 = temp3 << (temp1 & 0xff);\n    temp3 = temp3 >> (0x20 - temp1 & 0xff) | s7 << (temp1 & 0xff);\n    temp1 = temp3 + -((int)s3 >> 0x1f);\n    if ((temp5 | s3 << 1) == 0) {\n      temp1 = temp1 & ~(s3 >> 0x1f);\n    }\n    return CONCAT44((s7 & 0x80000000) + (uint)CARRY4(temp3,-((int)s3 >> 0x1f)),temp1);\n  }\n  temp2 = temp3 << (temp1 + 0x20 & 0xff);\n  temp3 = temp3 >> (s3 & 0xff) | s7 << (temp1 + 0x20 & 0xff);\n  temp1 = temp3 + -((int)temp2 >> 0x1f);\n  if ((temp5 | temp2 << 1) == 0) {\n    temp1 = temp1 & ~(temp2 >> 0x1f);\n  }\n  return CONCAT44((s7 & 0x80000000) +\n                  ((s7 & 0x7fffffff) >> (s3 & 0xff)) +\n                  (uint)CARRY4(temp3,-((int)temp2 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "signAndExponent",
                "param_2": "significand1",
                "param_3": "significand2",
                "param_4": "significand3",
                "uVar1": "s1",
                "uVar2": "s2",
                "uVar3": "s3",
                "uVar4": "s4",
                "uVar5": "s5",
                "uVar6": "s6",
                "uVar7": "s7",
                "iVar8": "i",
                "uVar9": "temp1",
                "uVar10": "temp2",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "uVar13": "temp5",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "uVar17": "result"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "calculate_floating_point_08008a02",
            "code": "\nulonglong calculateFloatingPoint_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint mask;\n  bool isZero;\n  \n  bit3 = mask & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != mask || bit3 != mask) {\n    if (bit2 == mask) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != mask)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == mask) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "calculate_floating_point_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "mask",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_parameters_08008a74",
            "code": "\nuint check_parameters_08008a74(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint xor_result;\n  bool are_inputs_zero;\n  bool is_x_or_y;\n  \n  if (((int)(input_2 << 1) >> 0x15 == -1 || (int)(input_4 << 1) >> 0x15 == -1) &&\n     ((((int)(input_2 << 1) >> 0x15 == -1 && ((input_1 | input_2 << 0xc) != 0)) ||\n      (((int)(input_4 << 1) >> 0x15 == -1 && ((input_3 | input_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  are_inputs_zero = (input_1 | input_2 << 1) == 0;\n  if (are_inputs_zero) {\n    are_inputs_zero = (input_3 | input_4 << 1) == 0;\n  }\n  if (!are_inputs_zero) {\n    are_inputs_zero = input_2 == input_4;\n  }\n  if (are_inputs_zero) {\n    are_inputs_zero = input_1 == input_3;\n  }\n  if (!are_inputs_zero) {\n    xor_result = input_2 ^ input_4;\n    are_inputs_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      are_inputs_zero = input_2 == input_4;\n    }\n    is_x_or_y = -1 < (int)xor_result && input_4 <= input_2;\n    if (are_inputs_zero) {\n      is_x_or_y = input_3 <= input_1;\n    }\n    input_4 = (int)input_4 >> 0x1f;\n    if (!is_x_or_y) {\n      input_4 = ~input_4;\n    }\n    return input_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_parameters_08008a74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "xor_result",
                "bVar2": "are_inputs_zero",
                "bVar3": "is_x_or_y"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_process_08008af0",
            "code": "\nvoid execute_process_08008af0(undefined4 input_param_1,undefined4 input_param_2,undefined4 output_param_1,undefined4 output_param_2)\n\n{\n  FUN_08008b00(output_param_1,output_param_2,input_param_1,input_param_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_process_08008af0",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "output_param_1",
                "param_4": "output_param_2"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_process_08008b00",
            "code": "\nundefined4 initializeProcess_08008b00(undefined4 inputParam)\n\n{\n  FUN_08008a74();\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_process_08008b00",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_initialized_08008b10",
            "code": "\nbool check_if_initialized_08008b10(void)\n\n{\n  char is_initialized;\n  \n  FUN_08008b00();\n  return is_initialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_initialized_08008b10",
                "in_ZR": "is_initialized"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "check_if_cy_is_null_08008b24",
            "code": "\nbool check_if_cy_is_null_08008b24(void)\n\n{\n  char input_cy;\n  \n  FUN_08008b00();\n  return input_cy == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "check_if_cy_is_null_08008b24",
                "in_CY": "input_cy"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_cy_and_zr_08008b4c",
            "code": "\nbool check_CY_and_ZR_08008b4c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_cy_and_zr_08008b4c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_if_null_terminated_08008b60",
            "code": "\nbool check_if_null_terminated_08008b60(void)\n\n{\n  char input_character;\n  \n  FUN_08008af0();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_if_null_terminated_08008b60",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_params_08008b74",
            "code": "\nundefined4 check_params_08008b74(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if ((((param_2 << 1) >> 0x15 != -1) || ((param_1 | param_2 << 0xc) == 0)) &&\n     (((param_4 << 1) >> 0x15 != -1 || ((param_3 | param_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_params_08008b74"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "unsigned_divide_with_conditions_08008ba0",
            "code": "\nuint unsignedDivideWithConditions_08008ba0(uint dividend,uint divisor)\n\n{\n  uint quotient;\n  int tempValue;\n  uint tempVariable;\n  \n  tempValue = divisor * 2 + 0x200000;\n  if (divisor * 2 < 0xffe00000) {\n    if (-1 < tempValue) {\n      return 0;\n    }\n    quotient = tempValue >> 0x15;\n    tempVariable = -quotient - 0x3e1;\n    if (quotient < 0xfffffc20 && tempVariable != 0) {\n      quotient = (divisor << 0xb | 0x80000000 | dividend >> 0x15) >> (tempVariable & 0xff);\n      if ((divisor & 0x80000000) != 0) {\n        quotient = -quotient;\n      }\n      return quotient;\n    }\n  }\n  else if ((dividend | divisor << 0xc) != 0) {\n    return 0;\n  }\n  divisor = divisor & 0x80000000;\n  if (divisor == 0) {\n    divisor = 0x7fffffff;\n  }\n  return divisor;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "unsigned_divide_with_conditions_08008ba0",
                "param_1": "dividend",
                "param_2": "divisor",
                "uVar1": "quotient",
                "iVar2": "tempValue",
                "uVar3": "tempVariable"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "verify_and_shift_08008bf0",
            "code": "\nuint verify_and_shift_08008bf0(uint input_value,uint shift_value)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((shift_value & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = shift_value * 2 + 0x200000;\n  if (shift_value * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (shift_value << 0xb | 0x80000000 | input_value >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value | shift_value << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "verify_and_shift_08008bf0",
                "param_1": "input_value",
                "param_2": "shift_value",
                "iVar1": "shifted_value",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_08008c30",
            "code": "\nuint calculateFloat_08008c30(uint inputFloat,uint shift)\n\n{\n  uint result;\n  uint shiftTimesTwo;\n  uint adjustedShiftTimesTwo;\n  uint adjustedShift;\n  bool isResultZero;\n  bool isShiftTimesTwoLessThanThreshold;\n  \n  shiftTimesTwo = shift * 2;\n  isShiftTimesTwoLessThanThreshold = shiftTimesTwo < 0x70000000;\n  adjustedShiftTimesTwo = shiftTimesTwo + 0x90000000;\n  result = adjustedShiftTimesTwo;\n  if (!isShiftTimesTwoLessThanThreshold) {\n    adjustedShift = shiftTimesTwo + 0x8fe00000;\n    result = adjustedShift;\n  }\n  isResultZero = result == 0;\n  if (!isShiftTimesTwoLessThanThreshold && adjustedShiftTimesTwo >= 0x200000) {\n    isResultZero = adjustedShift == 0x1fc00000;\n  }\n  if (((isShiftTimesTwoLessThanThreshold || adjustedShiftTimesTwo < 0x200000) || 0x1fc00000 < adjustedShift) || isResultZero) {\n    if ((shift & 0x40000000) != 0) {\n      if (((int)shiftTimesTwo >> 0x15 == -1) && ((inputFloat | shift << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return shift & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shiftTimesTwo + 0x92e00000) < 0 != SCARRY4(adjustedShiftTimesTwo,0x2e00000)) {\n      return shift & 0x80000000;\n    }\n    shiftTimesTwo = 0x18 - (shiftTimesTwo + 0x92e00000 >> 0x15);\n    result = inputFloat >> (shiftTimesTwo & 0xff);\n    if (inputFloat << (0x20 - shiftTimesTwo & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjustedShiftTimesTwo = shift & 0x1fffff | 0x100000;\n    inputFloat = result | adjustedShiftTimesTwo << (0x20 - shiftTimesTwo & 0xff);\n    adjustedShiftTimesTwo = (adjustedShiftTimesTwo >> (shiftTimesTwo & 0xff)) << 1;\n  }\n  result = (shift & 0x80000000 | inputFloat >> 0x1d) + adjustedShiftTimesTwo * 4 + (uint)(0x7fffffff < inputFloat * 8);\n  if (inputFloat * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "inputFloat",
                "param_2": "shift",
                "uVar1": "result",
                "uVar2": "shiftTimesTwo",
                "uVar3": "adjustedShiftTimesTwo",
                "in_r12": "adjustedShift",
                "bVar4": "isResultZero",
                "bVar5": "isShiftTimesTwoLessThanThreshold"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_shifted_value_08008cd8",
            "code": "\nuint calculate_shifted_value_08008cd8(uint input_value,uint shift_amount,undefined4 placeholder,uint comparison_value)\n\n{\n  int shifted_value_1;\n  int shifted_value_2;\n  uint modified_input_1;\n  uint modified_input_2;\n  uint shifted_result_1;\n  uint shifted_result_2;\n  uint difference;\n  bool is_true;\n  \n  modified_input_1 = shift_amount ^ 0x80000000;\n  shifted_result_1 = input_value << 1;\n  is_true = shifted_result_1 == 0;\n  if (!is_true) {\n    comparison_value = shift_amount << 1;\n    is_true = comparison_value == 0;\n  }\n  if (!is_true) {\n    is_true = shifted_result_1 == comparison_value;\n  }\n  shifted_value_1 = (int)shifted_result_1 >> 0x18;\n  if (!is_true) {\n    is_true = shifted_value_1 == -1;\n  }\n  if (!is_true) {\n    is_true = (int)comparison_value >> 0x18 == -1;\n  }\n  if (is_true) {\n    shifted_value_2 = (int)(shift_amount << 1) >> 0x18;\n    if (shifted_value_1 == -1 || shifted_value_2 == -1) {\n      shifted_result_1 = modified_input_1;\n      if (shifted_value_1 == -1) {\n        shifted_result_1 = input_value;\n      }\n      if (shifted_value_1 != -1 || shifted_value_2 != -1) {\n        modified_input_1 = shifted_result_1;\n      }\n      is_true = (shifted_result_1 & 0x7fffff) == 0;\n      if (is_true) {\n        is_true = (modified_input_1 & 0x7fffff) == 0;\n      }\n      if (is_true) {\n        is_true = shifted_result_1 == modified_input_1;\n      }\n      if (!is_true) {\n        shifted_result_1 = shifted_result_1 | 0x400000;\n      }\n      return shifted_result_1;\n    }\n    if (((input_value ^ modified_input_1) & 0x7fffffff) != 0) {\n      if (shifted_result_1 == 0) {\n        input_value = modified_input_1;\n      }\n      return input_value;\n    }\n    if (input_value != modified_input_1) {\n      return 0;\n    }\n    if ((shifted_result_1 & 0xff000000) == 0) {\n      modified_input_1 = input_value << 1;\n      if ((input_value & 0x80000000) != 0) {\n        modified_input_1 = modified_input_1 | 0x80000000;\n      }\n      return modified_input_1;\n    }\n    if (shifted_result_1 < 0xfe000000) {\n      return input_value + 0x800000;\n    }\n    input_value = input_value & 0x80000000;\nLAB_08008e12:\n    return input_value | 0x7f800000;\n  }\n  shifted_result_1 = shifted_result_1 >> 0x18;\n  comparison_value = comparison_value >> 0x18;\n  difference = comparison_value - shifted_result_1;\n  is_true = difference != 0;\n  shifted_result_2 = shifted_result_1;\n  if (is_true && shifted_result_1 <= comparison_value) {\n    shifted_result_2 = shifted_result_1 + difference;\n  }\n  if (is_true && shifted_result_1 <= comparison_value) {\n    modified_input_1 = modified_input_1 ^ input_value;\n  }\n  if (is_true && shifted_result_1 <= comparison_value) {\n    input_value = input_value ^ modified_input_1;\n  }\n  if (is_true && shifted_result_1 <= comparison_value) {\n    modified_input_1 = modified_input_1 ^ input_value;\n  }\n  if (comparison_value < shifted_result_1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_value;\n  }\n  shifted_result_1 = input_value & 0xffffff | 0x800000;\n  if ((input_value & 0x80000000) != 0) {\n    shifted_result_1 = -shifted_result_1;\n  }\n  modified_input_2 = modified_input_1 & 0xffffff | 0x800000;\n  if ((modified_input_1 & 0x80000000) != 0) {\n    modified_input_2 = -modified_input_2;\n  }\n  if (shifted_result_2 == difference) {\n    modified_input_2 = modified_input_2 ^ 0x800000;\n    if (shifted_result_2 == 0) {\n      shifted_result_1 = shifted_result_1 ^ 0x800000;\n      shifted_result_2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shifted_result_1 = shifted_result_1 + ((int)modified_input_2 >> (difference & 0xff));\n  modified_input_2 = modified_input_2 << (0x20 - difference & 0xff);\n  input_value = shifted_result_1 & 0x80000000;\n  if ((int)shifted_result_1 < 0) {\n    is_true = modified_input_2 != 0;\n    modified_input_2 = -modified_input_2;\n    shifted_result_1 = -shifted_result_1 - (uint)is_true;\n  }\n  if (shifted_result_1 < 0x800000) {\n    modified_input_1 = modified_input_2 & 0x80000000;\n    modified_input_2 = modified_input_2 << 1;\n    shifted_result_1 = shifted_result_1 * 2 + (uint)(modified_input_1 != 0);\n    modified_input_1 = shifted_result_2 - 2;\n    if (shifted_result_2 - 1 == 0 || shifted_result_1 < 0x800000) {\n      difference = LZCOUNT(shifted_result_1) - 8;\n      shifted_result_1 = shifted_result_1 << (difference & 0xff);\n      if ((int)modified_input_1 < (int)difference) {\n        shifted_result_1 = shifted_result_1 >> (-(modified_input_1 - difference) & 0xff);\n      }\n      else {\n        shifted_result_1 = shifted_result_1 + (modified_input_1 - difference) * 0x800000;\n      }\n      return shifted_result_1 | input_value;\n    }\n  }\n  else {\n    modified_input_1 = shifted_result_2 - 1;\n    if (0xffffff < shifted_result_1) {\n      modified_input_1 = shifted_result_1 & 1;\n      shifted_result_1 = shifted_result_1 >> 1;\n      modified_input_2 = (uint)(modified_input_1 != 0) << 0x1f | modified_input_2 >> 1;\n      modified_input_1 = shifted_result_2;\n      if (0xfd < shifted_result_2) goto LAB_08008e12;\n    }\n  }\n  shifted_result_1 = shifted_result_1 + modified_input_1 * 0x800000 + (uint)(0x7fffffff < modified_input_2);\n  if (modified_input_2 == 0x80000000) {\n    shifted_result_1 = shifted_result_1 & 0xfffffffe;\n  }\n  return shifted_result_1 | input_value;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_shifted_value_08008cd8",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "param_3": "placeholder",
                "param_4": "comparison_value",
                "iVar1": "shifted_value_1",
                "iVar2": "shifted_value_2",
                "uVar3": "modified_input_1",
                "uVar4": "modified_input_2",
                "uVar5": "shifted_result_1",
                "uVar6": "shifted_result_2",
                "uVar7": "difference",
                "bVar8": "is_true"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint input1,uint input2,undefined4 temp1,uint temp2)\n\n{\n  int shiftedInput1;\n  int shiftedInput2;\n  uint absInput2;\n  uint absInput1;\n  uint loopCounter;\n  uint difference;\n  bool isZero;\n  \n  absInput1 = input1 << 1;\n  isZero = absInput1 == 0;\n  if (!isZero) {\n    temp2 = input2 << 1;\n    isZero = temp2 == 0;\n  }\n  if (!isZero) {\n    isZero = absInput1 == temp2;\n  }\n  shiftedInput1 = (int)absInput1 >> 0x18;\n  if (!isZero) {\n    isZero = shiftedInput1 == -1;\n  }\n  if (!isZero) {\n    isZero = (int)temp2 >> 0x18 == -1;\n  }\n  if (isZero) {\n    shiftedInput2 = (int)(input2 << 1) >> 0x18;\n    if (shiftedInput1 == -1 || shiftedInput2 == -1) {\n      absInput1 = input2;\n      if (shiftedInput1 == -1) {\n        absInput1 = input1;\n      }\n      if (shiftedInput1 != -1 || shiftedInput2 != -1) {\n        input2 = absInput1;\n      }\n      isZero = (absInput1 & 0x7fffff) == 0;\n      if (isZero) {\n        isZero = (input2 & 0x7fffff) == 0;\n      }\n      if (isZero) {\n        isZero = absInput1 == input2;\n      }\n      if (!isZero) {\n        absInput1 = absInput1 | 0x400000;\n      }\n      return absInput1;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (absInput1 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((absInput1 & 0xff000000) == 0) {\n      absInput1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        absInput1 = absInput1 | 0x80000000;\n      }\n      return absInput1;\n    }\n    if (absInput1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  absInput1 = absInput1 >> 0x18;\n  temp2 = temp2 >> 0x18;\n  difference = temp2 - absInput1;\n  isZero = difference != 0;\n  loopCounter = absInput1;\n  if (isZero && absInput1 <= temp2) {\n    loopCounter = absInput1 + difference;\n  }\n  if (isZero && absInput1 <= temp2) {\n    input2 = input2 ^ input1;\n  }\n  if (isZero && absInput1 <= temp2) {\n    input1 = input1 ^ input2;\n  }\n  if (isZero && absInput1 <= temp2) {\n    input2 = input2 ^ input1;\n  }\n  if (temp2 < absInput1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  absInput1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    absInput1 = -absInput1;\n  }\n  absInput2 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    absInput2 = -absInput2;\n  }\n  if (loopCounter == difference) {\n    absInput2 = absInput2 ^ 0x800000;\n    if (loopCounter == 0) {\n      absInput1 = absInput1 ^ 0x800000;\n      loopCounter = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  absInput1 = absInput1 + ((int)absInput2 >> (difference & 0xff));\n  absInput2 = absInput2 << (0x20 - difference & 0xff);\n  input1 = absInput1 & 0x80000000;\n  if ((int)absInput1 < 0) {\n    isZero = absInput2 != 0;\n    absInput2 = -absInput2;\n    absInput1 = -absInput1 - (uint)isZero;\n  }\n  if (absInput1 < 0x800000) {\n    difference = absInput2 & 0x80000000;\n    absInput2 = absInput2 << 1;\n    absInput1 = absInput1 * 2 + (uint)(difference != 0);\n    difference = loopCounter - 2;\n    if (loopCounter - 1 == 0 || absInput1 < 0x800000) {\n      loopCounter = LZCOUNT(absInput1) - 8;\n      absInput1 = absInput1 << (loopCounter & 0xff);\n      if ((int)difference < (int)loopCounter) {\n        absInput1 = absInput1 >> (-(difference - loopCounter) & 0xff);\n      }\n      else {\n        absInput1 = absInput1 + (difference - loopCounter) * 0x800000;\n      }\n      return absInput1 | input1;\n    }\n  }\n  else {\n    difference = loopCounter - 1;\n    if (0xffffff < absInput1) {\n      difference = absInput1 & 1;\n      absInput1 = absInput1 >> 1;\n      absInput2 = (uint)(difference != 0) << 0x1f | absInput2 >> 1;\n      difference = loopCounter;\n      if (0xfd < loopCounter) goto LAB_08008e12;\n    }\n  }\n  absInput1 = absInput1 + difference * 0x800000 + (uint)(0x7fffffff < absInput2);\n  if (absInput2 == 0x80000000) {\n    absInput1 = absInput1 & 0xfffffffe;\n  }\n  return absInput1 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "temp1",
                "param_4": "temp2",
                "iVar1": "shiftedInput1",
                "iVar2": "shiftedInput2",
                "uVar3": "absInput2",
                "uVar4": "absInput1",
                "uVar5": "loopCounter",
                "uVar6": "difference",
                "bVar7": "isZero"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_modified_value_08008e3c",
            "code": "\nuint calculateModifiedValue_08008e3c(uint inputValue)\n\n{\n  uint updatedValue;\n  uint shiftAmount;\n  int intermediateValue;\n  uint comparisonValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  updatedValue = LZCOUNT(inputValue);\n  shiftAmount = updatedValue - 8;\n  intermediateValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < updatedValue) {\n    comparisonValue = 0 << (shiftAmount & 0xff);\n    updatedValue = intermediateValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < comparisonValue);\n    if (comparisonValue == 0x80000000) {\n      updatedValue = updatedValue & 0xfffffffe;\n    }\n    return updatedValue;\n  }\n  shiftAmount = inputValue << updatedValue + 0x18;\n  updatedValue = intermediateValue + ((inputValue >> (0x20 - (updatedValue + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    updatedValue = updatedValue & ~(shiftAmount >> 0x1f);\n  }\n  return updatedValue;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_modified_value_08008e3c",
                "param_1": "inputValue",
                "uVar1": "updatedValue",
                "uVar2": "shiftAmount",
                "iVar3": "intermediateValue",
                "uVar4": "comparisonValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "calculate_unsigned_integral_08008e44",
            "code": "\nuint calculateUnsignedIntegral_08008e44(uint inputValue)\n\n{\n  uint leadingZeroCount;\n  uint shiftAmount;\n  uint signBit;\n  int totalSum;\n  \n  signBit = inputValue & 0x80000000;\n  if ((int)signBit < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroCount = LZCOUNT(inputValue);\n  shiftAmount = leadingZeroCount - 8;\n  totalSum = ((signBit | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeroCount) {\n    leadingZeroCount = 0 << (shiftAmount & 0xff);\n    signBit = totalSum + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeroCount);\n    if (leadingZeroCount == 0x80000000) {\n      signBit = signBit & 0xfffffffe;\n    }\n    return signBit;\n  }\n  shiftAmount = inputValue << leadingZeroCount + 0x18;\n  signBit = totalSum + ((inputValue >> (0x20 - (leadingZeroCount + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    signBit = signBit & ~(shiftAmount >> 0x1f);\n  }\n  return signBit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "calculate_unsigned_integral_08008e44",
                "param_1": "inputValue",
                "uVar1": "leadingZeroCount",
                "uVar2": "shiftAmount",
                "uVar3": "signBit",
                "iVar4": "totalSum"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "floating_point_addition_08008eec",
            "code": "\nuint floatingPointAddition_08008eec(uint operand1,uint operand2,undefined4 param3,uint param4)\n\n{\n  longlong result;\n  uint exponent;\n  uint exponentBits;\n  int sumOfExponents;\n  int normalizedExponent;\n  uint mantissa;\n  int exponentDifference;\n  uint resultBits;\n  bool isSpecialCase;\n  bool isCarryOverflow;\n  \n  exponentBits = operand1 >> 0x17 & 0xff;\n  isSpecialCase = exponentBits == 0;\n  if (!isSpecialCase) {\n    param4 = operand2 >> 0x17 & 0xff;\n    isSpecialCase = param4 == 0;\n  }\n  if (!isSpecialCase) {\n    isSpecialCase = exponentBits == 0xff;\n  }\n  if (!isSpecialCase) {\n    isSpecialCase = param4 == 0xff;\n  }\n  if (isSpecialCase) {\n    param4 = operand2 >> 0x17 & 0xff;\n    if (exponentBits == 0xff || param4 == 0xff) {\n      isSpecialCase = operand1 == 0 || operand1 == 0x80000000;\n      exponent = operand2;\n      if (operand1 != 0 && operand1 != 0x80000000) {\n        isSpecialCase = operand2 == 0;\n        exponent = operand1;\n      }\n      if (!isSpecialCase) {\n        isSpecialCase = operand2 == 0x80000000;\n      }\n      resultBits = exponent;\n      if (((isSpecialCase) || ((exponentBits == 0xff && ((exponent & 0x7fffff) != 0)))) ||\n         ((param4 == 0xff && (resultBits = operand2, (operand2 & 0x7fffff) != 0)))) {\n        return resultBits | 0x7fc00000;\n      }\n      exponent = exponent ^ operand2;\n      goto LAB_0800903c;\n    }\n    isSpecialCase = (operand1 & 0x7fffffff) == 0;\n    if (!isSpecialCase) {\n      isSpecialCase = (operand2 & 0x7fffffff) == 0;\n    }\n    if (isSpecialCase) {\n      return (operand1 ^ operand2) & 0x80000000;\n    }\n    isSpecialCase = exponentBits == 0;\n    exponent = operand1 & 0x80000000;\n    while( true ) {\n      if (isSpecialCase) {\n        operand1 = operand1 << 1;\n        isSpecialCase = (operand1 & 0x800000) == 0;\n      }\n      if (!isSpecialCase) break;\n      exponentBits = exponentBits - 1;\n    }\n    operand1 = operand1 | exponent;\n    isSpecialCase = param4 == 0;\n    exponent = operand2 & 0x80000000;\n    while( true ) {\n      if (isSpecialCase) {\n        operand2 = operand2 << 1;\n        isSpecialCase = (operand2 & 0x800000) == 0;\n      }\n      if (!isSpecialCase) break;\n      param4 = param4 - 1;\n    }\n    operand2 = operand2 | exponent;\n  }\n  sumOfExponents = exponentBits + param4;\n  resultBits = operand1 ^ operand2;\n  exponentBits = operand1 << 9;\n  isSpecialCase = exponentBits == 0;\n  if (!isSpecialCase) {\n    operand2 = operand2 << 9;\n    isSpecialCase = operand2 == 0;\n  }\n  if (isSpecialCase) {\n    if (exponentBits == 0) {\n      operand2 = operand2 << 9;\n    }\n    exponent = resultBits & 0x80000000 | operand1 & 0x7fffff | operand2 >> 9;\n    isCarryOverflow = isSubtractionOverflow(sumOfExponents,0x7f);\n    normalizedExponent = sumOfExponents + -0x7f;\n    isSpecialCase = normalizedExponent == 0;\n    exponentDifference = normalizedExponent;\n    if (!isSpecialCase && 0x7e < sumOfExponents) {\n      isCarryOverflow = isSubtractionOverflow(0xff,normalizedExponent);\n      exponentDifference = 0xff - normalizedExponent;\n      isSpecialCase = normalizedExponent == 0xff;\n    }\n    if (!isSpecialCase && exponentDifference < 0 == isCarryOverflow) {\n      exponent = exponent | normalizedExponent * 0x800000;\n    }\n    if (!isSpecialCase && exponentDifference < 0 == isCarryOverflow) {\n      return exponent;\n    }\n    exponent = exponent | 0x800000;\n    mantissa = 0;\n    isCarryOverflow = isSubtractionOverflow(normalizedExponent,1);\n    resultBits = sumOfExponents - 0x80;\n    isSpecialCase = resultBits == 0;\n    exponentBits = resultBits;\n  }\n  else {\n    result = (ulonglong)(exponentBits >> 5 | 0x8000000) * (ulonglong)(operand2 >> 5 | 0x8000000);\n    mantissa = (uint)result;\n    exponent = (uint)((ulonglong)result >> 0x20);\n    isSpecialCase = exponent < 0x800000;\n    if (isSpecialCase) {\n      exponent = exponent << 1;\n    }\n    if (isSpecialCase) {\n      exponent = exponent | mantissa >> 0x1f;\n      mantissa = mantissa << 1;\n    }\n    exponent = resultBits & 0x80000000 | exponent;\n    resultBits = (sumOfExponents + -0x7f) - (uint)isSpecialCase;\n    isCarryOverflow = isSubtractionOverflow(resultBits,0xfd);\n    isSpecialCase = resultBits == 0xfd;\n    exponentBits = resultBits - 0xfd;\n    if (resultBits < 0xfe) {\n      exponent = exponent + resultBits * 0x800000 + (uint)(0x7fffffff < mantissa);\n      if (mantissa == 0x80000000) {\n        exponent = exponent & 0xfffffffe;\n      }\n      return exponent;\n    }\n  }\n  if (isSpecialCase || (int)exponentBits < 0 != isCarryOverflow) {\n    isSpecialCase = (int)(resultBits + 0x19) < 0;\n    if (resultBits == 0xffffffe7 || isSpecialCase != SCARRY4(resultBits,0x19)) {\n      exponent = exponent & 0x80000000;\n    }\n    if (resultBits != 0xffffffe7 && isSpecialCase == SCARRY4(resultBits,0x19)) {\n      exponentBits = (exponent << 1) >> (-resultBits & 0xff);\n      resultBits = exponent << (resultBits + 0x20 & 0xff);\n      exponentBits = ((uint)((exponent & 0x80000000) != 0) << 0x1f | exponentBits >> 1) + (uint)((byte)exponentBits & 1);\n      if ((mantissa | resultBits << 1) == 0) {\n        exponentBits = exponentBits & ~(resultBits >> 0x1f);\n      }\n      return exponentBits;\n    }\n    return exponent;\n  }\nLAB_0800903c:\n  return exponent & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "floating_point_addition_08008eec",
                "param_1": "operand1",
                "param_2": "operand2",
                "param_3": "param3",
                "param_4": "param4",
                "lVar1": "result",
                "uVar2": "exponent",
                "uVar3": "exponentBits",
                "iVar4": "sumOfExponents",
                "iVar5": "normalizedExponent",
                "uVar6": "mantissa",
                "iVar7": "exponentDifference",
                "uVar8": "resultBits",
                "bVar9": "isSpecialCase",
                "bVar10": "isCarryOverflow",
                "SBORROW4": "isSubtractionOverflow"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "floating_point_addition_08009054",
            "code": "\nuint floatingPointAddition_08009054(uint float1,uint float2,undefined4 mask,uint float3)\n\n{\n  uint temp1;\n  uint exp1;\n  int expDiff;\n  uint expSum;\n  int temp2;\n  uint result;\n  bool isZero;\n  bool carry;\n  bool overflow;\n  \n  exp1 = float1 >> 0x17 & 0xff;\n  isZero = exp1 == 0;\n  if (!isZero) {\n    float3 = float2 >> 0x17 & 0xff;\n    isZero = float3 == 0;\n  }\n  if (!isZero) {\n    isZero = exp1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = float3 == 0xff;\n  }\n  if (isZero) {\n    float3 = float2 >> 0x17 & 0xff;\n    result = float1;\n    if (exp1 == 0xff) {\n      if (((float1 & 0x7fffff) != 0) || (result = float2, float3 == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (float3 == 0xff) {\n        result = float2;\n        if ((float2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (float1 ^ float2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero = (float1 & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (float2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = exp1 == 0;\n        result = float1 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            float1 = float1 << 1;\n            isZero = (float1 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          exp1 = exp1 - 1;\n        }\n        float1 = float1 | result;\n        isZero = float3 == 0;\n        result = float2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            float2 = float2 << 1;\n            isZero = (float2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          float3 = float3 - 1;\n        }\n        float2 = float2 | result;\n        goto LAB_0800906c;\n      }\n      if ((float1 & 0x7fffffff) == 0) {\n        if ((float2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    float1 = float1 ^ float2;\n  }\n  else {\nLAB_0800906c:\n    expDiff = exp1 - float3;\n    if (float2 << 9 == 0) {\n      float1 = (float1 ^ float2) & 0x80000000 | float1 & 0x7fffff;\n      overflow = SCARRY4(expDiff,0x7f);\n      temp2 = expDiff + 0x7f;\n      isZero = temp2 < 0;\n      carry = temp2 == 0;\n      if (!carry && isZero == overflow) {\n        overflow = SBORROW4(0xff,temp2);\n        isZero = 0xff - temp2 < 0;\n        carry = temp2 == 0xff;\n      }\n      if (!carry && isZero == overflow) {\n        float1 = float1 | temp2 * 0x800000;\n      }\n      if (!carry && isZero == overflow) {\n        return float1;\n      }\n      float1 = float1 | 0x800000;\n      exp1 = 0;\n      carry = SBORROW4(temp2,1);\n      expSum = expDiff + 0x7e;\n      isZero = expSum == 0;\n      result = expSum;\n    }\n    else {\n      temp1 = (float2 << 9) >> 4 | 0x10000000;\n      exp1 = (float1 << 9) >> 4 | 0x10000000;\n      float1 = (float1 ^ float2) & 0x80000000;\n      isZero = temp1 <= exp1;\n      if (!isZero) {\n        exp1 = exp1 << 1;\n      }\n      expSum = expDiff + 0x7d + (uint)isZero;\n      result = 0x800000;\n      do {\n        if (temp1 <= exp1) {\n          exp1 = exp1 - temp1;\n          float1 = float1 | result;\n        }\n        isZero = temp1 >> 1 <= exp1;\n        if (isZero) {\n          exp1 = exp1 - (temp1 >> 1);\n        }\n        if (isZero) {\n          float1 = float1 | result >> 1;\n        }\n        isZero = temp1 >> 2 <= exp1;\n        if (isZero) {\n          exp1 = exp1 - (temp1 >> 2);\n        }\n        if (isZero) {\n          float1 = float1 | result >> 2;\n        }\n        isZero = temp1 >> 3 <= exp1;\n        if (isZero) {\n          exp1 = exp1 - (temp1 >> 3);\n        }\n        if (isZero) {\n          float1 = float1 | result >> 3;\n        }\n        exp1 = exp1 * 0x10;\n        isZero = exp1 == 0;\n        if (!isZero) {\n          result = result >> 4;\n          isZero = result == 0;\n        }\n      } while (!isZero);\n      carry = SBORROW4(expSum,0xfd);\n      isZero = expSum == 0xfd;\n      result = expSum - 0xfd;\n      if (expSum < 0xfe) {\n        float1 = float1 + expSum * 0x800000 + (uint)(temp1 <= exp1);\n        if (exp1 - temp1 == 0) {\n          float1 = float1 & 0xfffffffe;\n        }\n        return float1;\n      }\n    }\n    if (isZero || (int)result < 0 != carry) {\n      isZero = (int)(expSum + 0x19) < 0;\n      if (expSum == 0xffffffe7 || isZero != SCARRY4(expSum,0x19)) {\n        float1 = float1 & 0x80000000;\n      }\n      if (expSum == 0xffffffe7 || isZero != SCARRY4(expSum,0x19)) {\n        return float1;\n      }\n      result = (float1 << 1) >> (-expSum & 0xff);\n      expSum = float1 << (expSum + 0x20 & 0xff);\n      result = ((uint)((float1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((exp1 | expSum << 1) == 0) {\n        result = result & ~(expSum >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return float1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "floating_point_addition_08009054",
                "param_1": "float1",
                "param_2": "float2",
                "param_3": "mask",
                "param_4": "float3",
                "uVar1": "temp1",
                "uVar2": "exp1",
                "iVar3": "expDiff",
                "uVar4": "expSum",
                "iVar5": "temp2",
                "uVar6": "result",
                "bVar7": "isZero",
                "bVar8": "carry",
                "bVar9": "overflow"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculateResult_0800919c(uint result,uint result)\n\n{\n  bool isNegative;\n  uint input1TimesTwo;\n  uint input2TimesTwo;\n  uint combinedValue;\n  bool isZero;\n  \n  input1TimesTwo = result * 2;\n  input2TimesTwo = result * 2;\n  if (((int)input1TimesTwo >> 0x18 == -1 || (int)input2TimesTwo >> 0x18 == -1) &&\n     ((((int)input1TimesTwo >> 0x18 == -1 && ((result & 0x7fffff) != 0)) ||\n      (((int)input2TimesTwo >> 0x18 == -1 && ((result & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combinedValue = input1TimesTwo | result & 0x7fffffff;\n  isZero = combinedValue == 0;\n  if (!isZero) {\n    combinedValue = result ^ result;\n    isZero = combinedValue == 0;\n  }\n  isNegative = -1 < (int)combinedValue;\n  if (isNegative) {\n    result = input1TimesTwo + result * -2;\n    isZero = result == 0;\n  }\n  if ((isNegative && input2TimesTwo <= input1TimesTwo) && !isZero) {\n    result = (int)result >> 0x1f;\n  }\n  if (!isNegative || input2TimesTwo > input1TimesTwo) {\n    result = ~((int)result >> 0x1f);\n  }\n  if (!isZero) {\n    result = result | 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "result",
                "param_2": "result",
                "uVar2": "input1TimesTwo",
                "uVar3": "input2TimesTwo",
                "uVar4": "combinedValue",
                "bVar1": "isNegative",
                "bVar5": "isZero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_parameters_080091fc",
            "code": "\nvoid copyParameters_080091fc(undefined4 destination,undefined4 source)\n\n{\n  FUN_08009204(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_parameters_080091fc",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_numbers_08009204",
            "code": "\nundefined8 concatenate_numbers_08009204(undefined4 number1,undefined4 number2)\n\n{\n  FUN_0800919c();\n  return CONCAT44(number2,number1);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_numbers_08009204",
                "param_1": "number1",
                "param_2": "number2"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_input_08009214",
            "code": "\nbool check_input_08009214(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_input_08009214",
                "in_ZR": "input_character"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_if_empty_08009228",
            "code": "\nbool check_if_empty_08009228(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_if_empty_08009228",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_and_zr_0800923c",
            "code": "\nbool check_CY_and_ZR_0800923c(void)\n\n{\n  undefined is_zero;\n  undefined is_carry;\n  \n  FUN_08009204();\n  return !(bool)is_carry || (bool)is_zero;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_and_zr_0800923c",
                "in_ZR": "is_zero",
                "in_CY": "is_carry"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_for_zero_carry_08009250",
            "code": "\nbool check_for_zero_carry_08009250(void)\n\n{\n  undefined zero_result;\n  undefined carry;\n  \n  FUN_080091fc();\n  return !(bool)carry || (bool)zero_result;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_for_zero_carry_08009250",
                "in_ZR": "zero_result",
                "in_CY": "carry"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_if_string_is_empty_08009264",
            "code": "\nbool check_if_string_is_empty_08009264(void)\n\n{\n  char input_character;\n  \n  FUN_080091fc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_if_string_is_empty_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "decode_number_08009278",
            "code": "\nuint decode_number_08009278(uint number)\n\n{\n  uint shifted_number;\n  uint shift_amount;\n  \n  if (number << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_number = (number << 1) >> 0x18;\n  shift_amount = 0x9e - shifted_number;\n  if (shifted_number < 0x9f && shift_amount != 0) {\n    shifted_number = (number << 8 | 0x80000000) >> (shift_amount & 0xff);\n    if ((number & 0x80000000) != 0) {\n      shifted_number = -shifted_number;\n    }\n    return shifted_number;\n  }\n  if ((shift_amount == 0xffffff9f) && ((number & 0x7fffff) != 0)) {\n    return 0;\n  }\n  number = number & 0x80000000;\n  if (number == 0) {\n    number = 0x7fffffff;\n  }\n  return number;\n}\n\n",
            "renaming": {
                "FUN_08009278": "decode_number_08009278",
                "param_1": "number",
                "uVar1": "shifted_number",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "extract_float_from_bits_08009318",
            "code": "\nlonglong extractFloatFromBits_08009318(uint bits_high,uint bits_low,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint exponent_diff;\n  uint mask;\n  bool carry;\n  undefined8 converted_bits;\n  longlong extracted_float;\n  \n  mask = (bits_low << 1) >> 0x15;\n  exponent_diff = mask - 0x3ff;\n  if ((int)exponent_diff < 0x14) {\n    if ((int)exponent_diff < 0) {\n      converted_bits = FUN_080082d4(bits_high,bits_low,0x8800759c,0x7e37e43c,param_4);\n      result = FUN_08008b60((int)converted_bits,(int)((ulonglong)converted_bits >> 0x20),0,0);\n      extracted_float = CONCAT44(bits_low,bits_high);\n      if (result != 0) {\n        if ((int)bits_low < 0) {\n          extracted_float = -0x8000000000000000;\n        }\n        else if ((bits_high | bits_low) == 0) {\n          extracted_float = 0;\n        }\n        else {\n          extracted_float = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponent_diff & 0xff);\n      extracted_float = CONCAT44(bits_low,bits_high);\n      if ((bits_low & mask | bits_high) != 0) {\n        converted_bits = FUN_080082d4(bits_high,bits_low,0x8800759c,0x7e37e43c,param_4);\n        result = FUN_08008b60((int)converted_bits,(int)((ulonglong)converted_bits >> 0x20),0,0);\n        extracted_float = CONCAT44(bits_low,bits_high);\n        if (result != 0) {\n          if (0 < (int)bits_low) {\n            bits_low = bits_low + (0x100000 >> (exponent_diff & 0xff));\n          }\n          extracted_float = (ulonglong)(bits_low & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponent_diff < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    extracted_float = CONCAT44(bits_low,bits_high);\n    if ((mask & bits_high) != 0) {\n      converted_bits = FUN_080082d4(bits_high,bits_low,0x8800759c,0x7e37e43c,param_4);\n      result = FUN_08008b60((int)converted_bits,(int)((ulonglong)converted_bits >> 0x20),0,0);\n      extracted_float = CONCAT44(bits_low,bits_high);\n      if (result != 0) {\n        if (0 < (int)bits_low) {\n          if (exponent_diff == 0x14) {\n            bits_low = bits_low + 1;\n          }\n          else {\n            exponent_diff = 1 << (0x34 - exponent_diff & 0xff);\n            carry = CARRY4(exponent_diff,bits_high);\n            bits_high = exponent_diff + bits_high;\n            if (carry != false) {\n              bits_low = bits_low + 1;\n            }\n          }\n        }\n        extracted_float = CONCAT44(bits_low,bits_high & ~mask);\n      }\n    }\n  }\n  else {\n    extracted_float = CONCAT44(bits_low,bits_high);\n    if (exponent_diff == 0x400) {\n      extracted_float = FUN_080082d4();\n    }\n  }\n  return extracted_float;\n}\n\n",
            "renaming": {
                "FUN_08009318": "extract_float_from_bits_08009318",
                "param_1": "bits_high",
                "param_2": "bits_low",
                "iVar1": "result",
                "uVar2": "exponent_diff",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "converted_bits",
                "lVar6": "extracted_float"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_number_08009410",
            "code": "\nundefined4 processNumber_08009410(undefined4 input1,uint input2)\n\n{\n  undefined4 returnValue;\n  uint result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      result = FUN_08009d78(input1,input2,&temp1);\n      result = result & 3;\n      if (result == 1) {\n        returnValue = FUN_0800adf0(temp1,temp2,temp3,temp4,1);\n      }\n      else if (result == 2) {\n        returnValue = FUN_0800a348(temp1,temp2,temp3,temp4);\n      }\n      else if (result == 0) {\n        returnValue = FUN_0800a348(temp1,temp2,temp3,temp4);\n      }\n      else {\n        returnValue = FUN_0800adf0(temp1,temp2,temp3,temp4,1);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800a348(input1,input2,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_number_08009410",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "returnValue",
                "uVar2": "result",
                "local_28": "temp1",
                "uStack_24": "temp2",
                "local_20": "temp3",
                "uStack_1c": "temp4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_double_080094c0",
            "code": "\nlonglong calculateDouble_080094c0(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftedDifference;\n  uint mask;\n  bool carry;\n  undefined8 value;\n  longlong result;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftedDifference = mask - 0x3ff;\n  if ((int)shiftedDifference < 0x14) {\n    if ((int)shiftedDifference < 0) {\n      value = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)value,(int)((ulonglong)value >> 0x20),0,0);\n      result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          result = (ulonglong)input2 << 0x20;\n        }\n        else {\n          result = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedDifference & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        value = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result = FUN_08008b60((int)value,(int)((ulonglong)value >> 0x20),0,0);\n        result = CONCAT44(input2,input1);\n        if (result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shiftedDifference & 0xff));\n          }\n          result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedDifference < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    result = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      value = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)value,(int)((ulonglong)value >> 0x20),0,0);\n      result = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if (shiftedDifference == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftedDifference = 1 << (0x34 - shiftedDifference & 0xff);\n            carry = CARRY4(shiftedDifference,input1);\n            input1 = shiftedDifference + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        result = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (shiftedDifference == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_double_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedDifference",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "value",
                "lVar6": "result"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint mask;\n  uint shiftCount;\n  uint result;\n  int sign;\n  uint exponent;\n  \n  shiftCount = (input2 << 1) >> 0x15;\n  exponent = shiftCount - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      if (exponent != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (exponent & 0xff)) >> (0x14 - exponent & 0xff);\n  }\n  else {\n    if (0x1e < exponent) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)exponent < 0x34) {\n      mask = 0x80000000 >> (shiftCount - 0x413 & 0xff);\n      if (CARRY4(mask,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftCount - 0x413 & 0xff);\n      if (exponent != 0x14) {\n        result = result | mask + input1 >> (0x34 - exponent & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftCount - 0x413 & 0xff) | input1 << (shiftCount - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "mask",
                "uVar2": "shiftCount",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "exponent"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_float_08009654",
            "code": "\nlonglong convertToFloat_08009654(uint inputValue1,uint inputValue2)\n\n{\n  uint exponentShift;\n  uint bitMask;\n  longlong result;\n  \n  result = CONCAT44(inputValue2,inputValue1);\n  bitMask = (inputValue2 << 1) >> 0x15;\n  exponentShift = bitMask - 0x3ff;\n  if ((int)exponentShift < 0x14) {\n    if ((int)exponentShift < 0) {\n      inputValue2 = inputValue2 & 0x80000000;\n      if (exponentShift == 0xffffffff) {\n        inputValue2 = inputValue2 | 0x3ff00000;\n      }\n      result = (ulonglong)inputValue2 << 0x20;\n    }\n    else {\n      bitMask = 0xfffff >> (exponentShift & 0xff);\n      result = CONCAT44(inputValue2,inputValue1);\n      if ((inputValue2 & bitMask | inputValue1) != 0) {\n        result = (ulonglong)(inputValue2 + (0x80000 >> (exponentShift & 0xff)) & ~bitMask) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponentShift < 0x34) {\n    bitMask = 0xffffffff >> (bitMask - 0x413 & 0xff);\n    if ((inputValue1 & bitMask) != 0) {\n      exponentShift = 1 << (0x33 - exponentShift & 0xff);\n      if (CARRY4(inputValue1,exponentShift) != false) {\n        inputValue2 = inputValue2 + 1;\n      }\n      result = CONCAT44(inputValue2,inputValue1 + exponentShift & ~bitMask);\n    }\n  }\n  else {\n    result = CONCAT44(inputValue2,inputValue1);\n    if (exponentShift == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_float_08009654",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "exponentShift",
                "uVar2": "bitMask",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_number_080096e8",
            "code": "\nundefined4 processNumber_080096e8(undefined4 input,uint number)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  \n  if (0x3fe921fb < (number & 0x7fffffff)) {\n    if ((number & 0x7fffffff) < 0x7ff00000) {\n      flag = FUN_08009d78(input,number,&localVar1);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n      else if (flag == 2) {\n        result = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else if (flag == 0) {\n        result = FUN_0800adf0(localVar1,localVar2,localVar3,localVar4,1);\n      }\n      else {\n        result = FUN_0800a348(localVar1,localVar2,localVar3,localVar4);\n      }\n    }\n    else {\n      result = FUN_080082d0(input,number,input,number);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(input,number,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_number_080096e8",
                "param_1": "input",
                "param_2": "number",
                "uVar1": "result",
                "uVar2": "flag",
                "local_28": "localVar1",
                "uStack_24": "localVar2",
                "local_20": "localVar3",
                "uStack_1c": "localVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "extract_bits_08009798",
            "code": "\nlonglong extract_bits_08009798(uint input1,uint input2,undefined4 unused_1,undefined4 unused_2)\n\n{\n  uint shift_amount;\n  uint shifted_input2;\n  longlong result;\n  \n  shifted_input2 = (input2 << 1) >> 0x15;\n  shift_amount = shifted_input2 - 0x3ff;\n  if ((int)shift_amount < 0x14) {\n    if ((int)shift_amount < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shift_amount & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shift_amount < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shifted_input2 - 0x413 & 0xff)));\n    }\n    if (shift_amount != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,unused_2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "extract_bits_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unused_1",
                "param_4": "unused_2",
                "uVar1": "shift_amount",
                "uVar2": "shifted_input2",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_float_value_thunk_08009990",
            "code": "\nuint calculate_float_value_thunk_08009990(uint input_value_1,uint input_value_2,uint input_value_3,uint input_value_4)\n\n{\n  int difference;\n  undefined4 result_high;\n  uint shifted_value;\n  uint value_4_masked;\n  uint value_2_masked;\n  undefined8 result_value;\n  \n  value_4_masked = input_value_4 & 0x7fffffff;\n  if (((value_4_masked | (-input_value_3 | input_value_3) >> 0x1f) < 0x7ff00001) &&\n     (value_2_masked = input_value_2 & 0x7fffffff, (value_2_masked | (-input_value_1 | input_value_1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_value_4 + 0xc0100000 | input_value_3) == 0) {\n      value_4_masked = FUN_0800af78();\n      return value_4_masked;\n    }\n    shifted_value = (int)input_value_4 >> 0x1e & 2U | input_value_2 >> 0x1f;\n    if ((value_2_masked | input_value_1) == 0) {\n      if (shifted_value == 2) {\n        input_value_1 = 0x54442d18;\n      }\n      else if (shifted_value == 3) {\n        input_value_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((value_4_masked | input_value_3) != 0) {\n        if (value_4_masked == 0x7ff00000) {\n          shifted_value = shifted_value - 1;\n          if (value_2_masked == 0x7ff00000) {\n            if (shifted_value < 3) {\n              return *(uint *)(&DAT_0800be68 + shifted_value * 8);\n            }\n            return 0x54442d18;\n          }\n          if (shifted_value < 3) {\n            return *(uint *)(&DAT_0800be80 + shifted_value * 8);\n          }\n          return 0;\n        }\n        if (value_2_masked != 0x7ff00000) {\n          difference = (int)(value_2_masked - value_4_masked) >> 0x14;\n          if ((int)(value_2_masked - value_4_masked) < 0x3d00000) {\n            if (((int)input_value_4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              result_value = 0;\n            }\n            else {\n              FUN_08008894(input_value_1,input_value_2,input_value_3,input_value_4,input_value_4);\n              FUNC_0800b2cc();\n              result_value = FUN_0800af78();\n            }\n          }\n          else {\n            result_value = 0x3ff921fb54442d18;\n          }\n          result_high = (undefined4)((ulonglong)result_value >> 0x20);\n          value_4_masked = (uint)result_value;\n          if (shifted_value == 1) {\n            return value_4_masked;\n          }\n          if (shifted_value == 2) {\n            result_value = FUN_080082d0(value_4_masked,result_high,0x33145c07,0x3ca1a626);\n            value_4_masked = FUN_080082d0(0x54442d18,0x400921fb,(int)result_value,(int)((ulonglong)result_value >> 0x20));\n            return value_4_masked;\n          }\n          if (shifted_value == 0) {\n            return value_4_masked;\n          }\n          result_value = FUN_080082d0(value_4_masked,result_high,0x33145c07,0x3ca1a626);\n          value_4_masked = FUN_080082d0((int)result_value,(int)((ulonglong)result_value >> 0x20),0x54442d18,0x400921fb);\n          return value_4_masked;\n        }\n      }\n      if ((int)input_value_2 < 0) {\n        input_value_1 = 0x54442d18;\n      }\n      else {\n        input_value_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_value_1 = FUN_080082d4(input_value_3,input_value_4,input_value_1,input_value_2);\n  }\n  return input_value_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_float_value_thunk_08009990",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4",
                "iVar1": "difference",
                "uVar2": "result_high",
                "uVar3": "shifted_value",
                "uVar4": "value_4_masked",
                "uVar5": "value_2_masked",
                "uVar6": "result_value"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "process_data_0800981c",
            "code": "\nundefined8 processData_0800981c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined8 returnValue;\n  undefined4 option;\n  char *functionName;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined4 upperValue;\n  undefined4 lowerValue;\n  int errorCode;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_0800b2d4();\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(input1,input2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(input3,input4);\n  if (result == 0) {\n    return returnValue;\n  }\n  option = 3;\n  functionName = \"hypot\";\n  param1 = input1;\n  param2 = input2;\n  param3 = input3;\n  param4 = input4;\n  if (DAT_20000014 == '\\0') {\n    upperValue = 0xe0000000;\n    lowerValue = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&option);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    upperValue = 0;\n    lowerValue = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(lowerValue,upperValue);\n  if (errorCode != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(lowerValue,upperValue);\n    *ptr2 = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "process_data_0800981c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "puVar2": "ptr",
                "piVar3": "ptr2",
                "uVar4": "returnValue",
                "local_50": "option",
                "pcStack_4c": "functionName",
                "local_48": "param1",
                "uStack_44": "param2",
                "local_40": "param3",
                "uStack_3c": "param4",
                "local_38": "upperValue",
                "uStack_34": "lowerValue",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "analyze_data_080098d0",
            "code": "\nundefined4 analyze_data_080098d0(undefined4 input_param,undefined4 output_param)\n\n{\n  char data_flag;\n  undefined4 result;\n  int check_result;\n  undefined4 *ptr;\n  int *int_ptr;\n  undefined4 flag_1;\n  undefined *data_ptr;\n  undefined4 input_param_copy;\n  undefined4 output_param_copy;\n  undefined4 input_param_copy_2;\n  undefined4 output_param_copy_2;\n  undefined8 result_copy;\n  int temp;\n  \n  result = FUN_0800a1bc();\n  data_flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (temp = FUN_08008b74(input_param,output_param,input_param,output_param), temp != 0)) ||\n     (check_result = FUN_08008b24(input_param,output_param,0,0), check_result == 0)) {\n    return result;\n  }\n  flag_1 = 1;\n  data_ptr = &DAT_0800be5c;\n  input_param_copy = input_param;\n  output_param_copy = output_param;\n  input_param_copy_2 = input_param;\n  output_param_copy_2 = output_param;\n  if (data_flag == '\\0') {\n    result_copy = 0;\nLAB_0800996c:\n    check_result = FUN_0800b2e0(&flag_1);\n    if (check_result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    result_copy = FUN_08008894(0,0,0,0);\n    if (data_flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x21;\njoined_r0x0800997a:\n  if (temp != 0) {\n    int_ptr = (int *)FUN_0800b3dc();\n    *int_ptr = temp;\n  }\n  return (undefined4)result_copy;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "analyze_data_080098d0",
                "param_1": "input_param",
                "param_2": "output_param",
                "cVar1": "data_flag",
                "uVar2": "result",
                "iVar3": "check_result",
                "puVar4": "ptr",
                "piVar5": "int_ptr",
                "local_50": "flag_1",
                "local_4c": "data_ptr",
                "local_48": "input_param_copy",
                "uStack_44": "output_param_copy",
                "local_40": "input_param_copy_2",
                "uStack_3c": "output_param_copy_2",
                "local_38": "result_copy",
                "local_30": "temp"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int result1;\n  undefined4 result2;\n  uint result3;\n  uint result4;\n  uint result5;\n  undefined8 result6;\n  \n  result4 = input4 & 0x7fffffff;\n  if (((result4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (result5 = input2 & 0x7fffffff, (result5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      result4 = FUN_0800af78();\n      return result4;\n    }\n    result3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((result5 | input1) == 0) {\n      if (result3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (result3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((result4 | input3) != 0) {\n        if (result4 == 0x7ff00000) {\n          result3 = result3 - 1;\n          if (result5 == 0x7ff00000) {\n            if (result3 < 3) {\n              return *(uint *)(&DAT_0800be68 + result3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (result3 < 3) {\n            return *(uint *)(&DAT_0800be80 + result3 * 8);\n          }\n          return 0;\n        }\n        if (result5 != 0x7ff00000) {\n          result1 = (int)(result5 - result4) >> 0x14;\n          if ((int)(result5 - result4) < 0x3d00000) {\n            if (((int)input4 < 0) && (result1 + 0x3c < 0 != SCARRY4(result1,0x3c))) {\n              result6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              result6 = FUN_0800af78();\n            }\n          }\n          else {\n            result6 = 0x3ff921fb54442d18;\n          }\n          result2 = (undefined4)((ulonglong)result6 >> 0x20);\n          result4 = (uint)result6;\n          if (result3 == 1) {\n            return result4;\n          }\n          if (result3 == 2) {\n            result6 = FUN_080082d0(result4,result2,0x33145c07,0x3ca1a626);\n            result4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result6,(int)((ulonglong)result6 >> 0x20));\n            return result4;\n          }\n          if (result3 == 0) {\n            return result4;\n          }\n          result6 = FUN_080082d0(result4,result2,0x33145c07,0x3ca1a626);\n          result4 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),0x54442d18,0x400921fb);\n          return result4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculate_result_08009b24(uint num1,uint num2,uint num3,uint num4)\n\n{\n  undefined4 result1;\n  int result2;\n  uint result3;\n  int result4;\n  undefined4 result5;\n  int result6;\n  uint result7;\n  undefined4 result8;\n  undefined4 result9;\n  undefined8 result10;\n  undefined8 result11;\n  undefined8 result12;\n  undefined8 result13;\n  int result14;\n  \n  num2 = num2 & 0x7fffffff;\n  num4 = num4 & 0x7fffffff;\n  result3 = num1;\n  result7 = num2;\n  if (num2 < num4) {\n    result3 = num3;\n    num3 = num1;\n    result7 = num4;\n    num4 = num2;\n  }\n  if (0x3c00000 < (int)(result7 - num4)) {\n    result3 = FUN_080082d4(result3,result7,num3,num4);\n    return result3;\n  }\n  if (result7 < 0x5f300001) {\n    result14 = 0;\n  }\n  else {\n    if (0x7fefffff < result7) {\n      if ((result7 & 0xfffff | result3) != 0) {\n        result3 = FUN_080082d4(result3,result7,num3,num4);\n      }\n      if ((num4 ^ 0x7ff00000 | num3) != 0) {\n        return result3;\n      }\n      return num3;\n    }\n    result7 = result7 + 0xda800000;\n    num4 = num4 + 0xda800000;\n    result14 = 600;\n  }\n  result11 = CONCAT44(result7,result3);\n  result10 = CONCAT44(num4,num3);\n  if ((int)num4 < 0x20b00000) {\n    if ((int)num4 < 0x100000) {\n      if ((num4 | num3) == 0) {\n        return result3;\n      }\n      result10 = FUN_08008640(num3,num4,0,0x7fd00000);\n      result11 = FUN_08008640(result3,result7,0,0x7fd00000);\n      result14 = result14 + -0x3fe;\n    }\n    else {\n      result7 = result7 + 0x25800000;\n      result11 = CONCAT44(result7,result3);\n      num4 = num4 + 0x25800000;\n      result10 = CONCAT44(num4,num3);\n      result14 = result14 + -600;\n    }\n  }\n  result9 = (undefined4)((ulonglong)result11 >> 0x20);\n  result8 = (undefined4)result11;\n  result6 = (int)((ulonglong)result10 >> 0x20);\n  result5 = (undefined4)result10;\n  result10 = FUN_080082d0(result8,result9,result5,result6);\n  result4 = (int)((ulonglong)result10 >> 0x20);\n  result1 = (undefined4)result10;\n  result2 = FUN_08008b24(result5,result6,result1,result4);\n  if (result2 == 0) {\n    result10 = FUN_08008640(0,num4,0);\n    result11 = FUN_08008640(result1,result4 + -0x80000000,result1,result4);\n    result12 = FUN_080082d4(result8,result9,result8,result9);\n    result12 = FUN_080082d0((int)result12,(int)((ulonglong)result12 >> 0x20),0,result7 + 0x100000);\n    result12 = FUN_08008640((int)result12,(int)((ulonglong)result12 >> 0x20),result5,result6);\n    result13 = FUN_080082d0(result5,result6,0,num4);\n    result13 = FUN_08008640((int)result13,(int)((ulonglong)result13 >> 0x20),0,result7 + 0x100000);\n    result12 = FUN_080082d4((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result13,\n                          (int)((ulonglong)result13 >> 0x20));\n    result11 = FUN_080082d0((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result12,\n                          (int)((ulonglong)result12 >> 0x20));\n    FUN_080082d0((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                 (int)((ulonglong)result11 >> 0x20));\n    result10 = FUN_0800a1bc();\n  }\n  else {\n    result10 = FUN_08008640(0,result7,0,result7);\n    result11 = FUN_08008640(result5,result6 + -0x80000000,result5,result6);\n    result12 = FUN_080082d4(result8,result9,0,result7);\n    result13 = FUN_080082d0(result8,result9,0,result7);\n    result12 = FUN_08008640((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result13,\n                          (int)((ulonglong)result13 >> 0x20));\n    result11 = FUN_080082d0((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result12,\n                          (int)((ulonglong)result12 >> 0x20));\n    FUN_080082d0((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                 (int)((ulonglong)result11 >> 0x20));\n    result10 = FUN_0800a1bc();\n  }\n  result3 = (uint)result10;\n  if (result14 != 0) {\n    result3 = FUN_08008640(result3,(int)((ulonglong)result10 >> 0x20),0,result14 * 0x100000 + 0x3ff00000);\n  }\n  return result3;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "iVar4": "result4",
                "uVar5": "result5",
                "iVar6": "result6",
                "uVar7": "result7",
                "uVar8": "result8",
                "uVar9": "result9",
                "uVar10": "result10",
                "uVar11": "result11",
                "uVar12": "result12",
                "uVar13": "result13",
                "local_3c": "result14"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_result_08009d78",
            "code": "\nint calculateResult_08009d78(undefined4 inputParam1,uint inputParam2,undefined8 *outputParam)\n\n{\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  uint tempVar8;\n  int result;\n  undefined8 tempVar10;\n  undefined8 tempVar11;\n  undefined8 tempVar12;\n  undefined4 localVar1;\n  undefined4 uStackVar;\n  undefined8 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  \n  tempVar8 = inputParam2 & 0x7fffffff;\n  if (tempVar8 < 0x3fe921fc) {\n    *(undefined4 *)outputParam = inputParam1;\n    *(uint *)((int)outputParam + 4) = inputParam2;\n    *(undefined4 *)(outputParam + 1) = 0;\n    *(undefined4 *)((int)outputParam + 0xc) = 0;\n    return 0;\n  }\n  if (tempVar8 < 0x4002d97c) {\n    if ((int)inputParam2 < 1) {\n      tempVar10 = FUN_080082d4(inputParam1,inputParam2,0x54400000,0x3ff921fb);\n      tempVar3 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n      tempVar1 = (undefined4)tempVar10;\n      if (tempVar8 != 0x3ff921fb) {\n        tempVar10 = FUN_080082d4(tempVar1,tempVar3,0x1a626331,0x3dd0b461);\n        *outputParam = tempVar10;\n        tempVar10 = FUN_080082d0(tempVar1,tempVar3);\n        tempVar10 = FUN_080082d4((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0x1a626331,0x3dd0b461);\n        outputParam[1] = tempVar10;\n        return -1;\n      }\n      tempVar10 = FUN_080082d4(tempVar1,tempVar3,0x1a600000,0x3dd0b461);\n      tempVar1 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n      tempVar11 = FUN_080082d4((int)tempVar10,tempVar1,0x2e037073,0x3ba3198a);\n      *outputParam = tempVar11;\n      tempVar10 = FUN_080082d0((int)tempVar10,tempVar1);\n      tempVar10 = FUN_080082d4((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0x2e037073,0x3ba3198a);\n      outputParam[1] = tempVar10;\n      return -1;\n    }\n    tempVar10 = FUN_080082d0();\n    tempVar3 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n    tempVar1 = (undefined4)tempVar10;\n    if (tempVar8 != 0x3ff921fb) {\n      tempVar10 = FUN_080082d0(tempVar1,tempVar3,0x1a626331,0x3dd0b461);\n      *outputParam = tempVar10;\n      tempVar10 = FUN_080082d0(tempVar1,tempVar3);\n      tempVar10 = FUN_080082d0((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0x1a626331,0x3dd0b461);\n      outputParam[1] = tempVar10;\n      return 1;\n    }\n    tempVar10 = FUN_080082d0(tempVar1,tempVar3,0x1a600000,0x3dd0b461);\n    tempVar1 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n    tempVar11 = FUN_080082d0((int)tempVar10,tempVar1,0x2e037073,0x3ba3198a);\n    *outputParam = tempVar11;\n    tempVar10 = FUN_080082d0((int)tempVar10,tempVar1);\n    tempVar10 = FUN_080082d0((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0x2e037073,0x3ba3198a);\n    outputParam[1] = tempVar10;\n    return 1;\n  }\n  if (0x413921fb < tempVar8) {\n    if (0x7fefffff < tempVar8) {\n      tempVar10 = FUN_080082d0(inputParam1,inputParam2,inputParam1,inputParam2);\n      outputParam[1] = tempVar10;\n      *outputParam = tempVar10;\n      return 0;\n    }\n    result = ((int)tempVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar2 = FUN_0800856c();\n    tempVar10 = FUN_080082d0(inputParam1,tempVar8 + result * -0x100000,(int)localVar2,\n                          (int)((ulonglong)localVar2 >> 0x20));\n    tempVar10 = FUN_08008640((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    tempVar10 = FUN_080082d0((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20));\n    localVar4 = FUN_08008640((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar4,(int)((ulonglong)localVar4 >> 0x20),0,0);\n    result = FUN_0800a5a0(&localVar2,outputParam,result);\n    if (-1 < (int)inputParam2) {\n      return result;\n    }\n    *(int *)((int)outputParam + 4) = *(int *)((int)outputParam + 4) + -0x80000000;\n    *(int *)((int)outputParam + 0xc) = *(int *)((int)outputParam + 0xc) + -0x80000000;\n    return -result;\n  }\n  tempVar10 = FUNC_0800b2cc();\n  tempVar3 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n  tempVar11 = FUN_08008640((int)tempVar10,tempVar3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)tempVar11,(int)((ulonglong)tempVar11 >> 0x20),0,0x3fe00000);\n  result = FUN_08008ba0();\n  tempVar11 = FUN_0800856c();\n  tempVar4 = (undefined4)((ulonglong)tempVar11 >> 0x20);\n  tempVar1 = (undefined4)tempVar11;\n  tempVar11 = FUN_08008640(tempVar1,tempVar4,0x54400000,0x3ff921fb);\n  tempVar10 = FUN_080082d0((int)tempVar10,tempVar3,(int)tempVar11,(int)((ulonglong)tempVar11 >> 0x20));\n  tempVar5 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n  tempVar3 = (undefined4)tempVar10;\n  tempVar11 = FUN_08008640(tempVar1,tempVar4,0x1a626331,0x3dd0b461);\n  if ((0x1f < result) || (*(uint *)(&DAT_0800be98 + (result + -1) * 4) == tempVar8)) {\n    tempVar12 = FUN_080082d0(tempVar3,tempVar5,(int)tempVar11,(int)((ulonglong)tempVar11 >> 0x20));\n    if ((int)((tempVar8 >> 0x14) - ((uint)((int)((ulonglong)tempVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    tempVar11 = FUN_08008640(tempVar1,tempVar4,0x1a600000,0x3dd0b461);\n    tempVar6 = (undefined4)((ulonglong)tempVar11 >> 0x20);\n    tempVar10 = FUN_080082d0(tempVar3,tempVar5,(int)tempVar11,tempVar6);\n    tempVar7 = (undefined4)((ulonglong)tempVar10 >> 0x20);\n    tempVar2 = (undefined4)tempVar10;\n    tempVar12 = FUN_080082d0(tempVar3,tempVar5,tempVar2,tempVar7);\n    tempVar11 = FUN_080082d0((int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20),(int)tempVar11,tempVar6);\n    tempVar12 = FUN_08008640(tempVar1,tempVar4,0x2e037073,0x3ba3198a);\n    tempVar11 = FUN_080082d0((int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20),(int)tempVar11,\n                          (int)((ulonglong)tempVar11 >> 0x20));\n    tempVar12 = FUN_080082d0(tempVar2,tempVar7,(int)tempVar11,(int)((ulonglong)tempVar11 >> 0x20));\n    if ((int)(((int)tempVar8 >> 0x14) - ((uint)((int)((ulonglong)tempVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    tempVar11 = FUN_08008640(tempVar1,tempVar4,0x2e000000,0x3ba3198a);\n    tempVar3 = (undefined4)((ulonglong)tempVar11 >> 0x20);\n    tempVar10 = FUN_080082d0(tempVar2,tempVar7,(int)tempVar11,tempVar3);\n    tempVar12 = FUN_080082d0(tempVar2,tempVar7);\n    tempVar11 = FUN_080082d0((int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20),(int)tempVar11,tempVar3);\n    tempVar12 = FUN_08008640(tempVar1,tempVar4,0x252049c1,0x397b839a);\n    tempVar11 = FUN_080082d0((int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20),(int)tempVar11,\n                          (int)((ulonglong)tempVar11 >> 0x20));\n  }\n  tempVar12 = FUN_080082d0((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),(int)tempVar11,\n                        (int)((ulonglong)tempVar11 >> 0x20));\nLAB_0800a0ce:\n  uStackVar = (undefined4)((ulonglong)tempVar10 >> 0x20);\n  localVar1 = (undefined4)tempVar10;\n  *outputParam = tempVar12;\n  tempVar10 = FUN_080082d0(localVar1,uStackVar);\n  tempVar10 = FUN_080082d0((int)tempVar10,(int)((ulonglong)tempVar10 >> 0x20),(int)tempVar11,\n                        (int)((ulonglong)tempVar11 >> 0x20));\n  outputParam[1] = tempVar10;\n  if ((int)inputParam2 < 0) {\n    *(int *)outputParam = (int)tempVar12;\n    *(int *)((int)outputParam + 4) = (int)((ulonglong)tempVar12 >> 0x20) + -0x80000000;\n    *(int *)(outputParam + 1) = (int)tempVar10;\n    *(int *)((int)outputParam + 0xc) = (int)((ulonglong)tempVar10 >> 0x20) + -0x80000000;\n    result = -result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_result_08009d78",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "outputParam",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6",
                "uVar7": "tempVar7",
                "uVar8": "tempVar8",
                "iVar9": "result",
                "uVar10": "tempVar10",
                "uVar11": "tempVar11",
                "uVar12": "tempVar12",
                "local_50": "localVar1",
                "uStack_4c": "uStackVar",
                "local_40": "localVar2",
                "local_38": "localVar3",
                "local_30": "localVar4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_result_0800a1bc",
            "code": "\nuint calculateResult_0800a1bc(uint input1,uint input2)\n\n{\n  uint shiftedBits;\n  int count;\n  uint mask;\n  undefined4 tempVar;\n  uint shiftedValue;\n  uint bit;\n  uint dividend;\n  uint remainder;\n  uint divisor;\n  int bitCount;\n  uint quotient;\n  uint shiftAmount;\n  undefined8 result;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    result = FUN_08008640(input1,input2,input1,input2);\n    dividend = FUN_080082d4((int)result,(int)((ulonglong)result >> 0x20),input1,input2);\n    return dividend;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      result = FUN_080082d0(input1,input2,input1);\n      tempVar = (undefined4)((ulonglong)result >> 0x20);\n      dividend = FUN_08008894((int)result,tempVar,(int)result,tempVar);\n      return dividend;\n    }\n    do {\n      divisor = input1;\n      dividend = divisor >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = divisor << 0x15;\n    } while (dividend == 0);\n    shiftedBits = input2;\n    if (-1 < (int)divisor) goto LAB_0800a290;\n    shiftAmount = 0x20;\n    shiftedValue = 0xffffffff;\n    divisor = input1;\n  }\n  else {\n    shiftedBits = (int)input2 >> 0x14;\n    dividend = input2;\n    divisor = input1;\n    if (shiftedBits != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    divisor = 0;\n    shiftAmount = dividend;\n    do {\n      shiftedValue = divisor;\n      dividend = shiftAmount << 1;\n      bitCount = shiftAmount << 0xc;\n      divisor = shiftedValue + 1;\n      shiftAmount = dividend;\n    } while (-1 < bitCount);\n    shiftAmount = 0x20 - divisor;\n    input2 = shiftedBits;\n    divisor = input1 << (divisor & 0xff);\n  }\n  dividend = input1 >> (shiftAmount & 0xff) | dividend;\n  shiftedBits = input2 - shiftedValue;\nLAB_0800a1da:\n  dividend = dividend & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftedBits << 0x1f)) {\n    dividend = dividend * 2 - ((int)divisor >> 0x1f);\n    divisor = divisor << 1;\n  }\n  shiftAmount = 0;\n  dividend = dividend * 2 - ((int)divisor >> 0x1f);\n  divisor = divisor << 1;\n  shiftedBits = 0;\n  bitCount = 0x16;\n  shiftedValue = 0x200000;\n  do {\n    count = shiftedBits + shiftedValue;\n    if (count <= (int)dividend) {\n      dividend = dividend - count;\n      shiftedBits = count + shiftedValue;\n      shiftAmount = shiftAmount + shiftedValue;\n    }\n    bitCount = bitCount + -1;\n    dividend = dividend * 2 - ((int)divisor >> 0x1f);\n    shiftedValue = shiftedValue >> 1;\n    divisor = divisor << 1;\n  } while (bitCount != 0);\n  count = 0x20;\n  bit = 0x80000000;\n  bitCount = 0;\n  shiftedValue = 0;\n  do {\n    mask = bit + bitCount;\n    quotient = shiftedBits;\n    if ((int)shiftedBits < (int)dividend) {\n      if ((int)mask < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(mask + bit)) {\n          quotient = shiftedBits + 1;\n        }\n      }\n      remainder = dividend - shiftedBits;\n      shiftedBits = quotient;\n      if (divisor < mask) {\n        remainder = remainder - 1;\n      }\nLAB_0800a262:\n      bitCount = mask + bit;\n      divisor = divisor - mask;\n      shiftedValue = shiftedValue + bit;\n      dividend = remainder;\n    }\n    else if ((dividend == shiftedBits) && (mask <= divisor)) {\n      if ((int)mask < 0) goto LAB_0800a26a;\n      remainder = 0;\n      shiftedBits = dividend;\n      goto LAB_0800a262;\n    }\n    count = count + -1;\n    bit = bit >> 1;\n    dividend = dividend * 2 - ((int)divisor >> 0x1f);\n    divisor = divisor << 1;\n    if (count == 0) {\n      if ((dividend | divisor) == 0) {\n        shiftedValue = shiftedValue >> 1;\n      }\n      else if (shiftedValue == 0xffffffff) {\n        shiftAmount = shiftAmount + 1;\n        shiftedValue = 0;\n      }\n      else {\n        shiftedValue = shiftedValue + 1 >> 1;\n      }\n      if ((shiftAmount & 1) != 0) {\n        shiftedValue = shiftedValue | 0x80000000;\n      }\n      return shiftedValue;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftedBits",
                "iVar2": "count",
                "uVar3": "mask",
                "uVar4": "tempVar",
                "uVar5": "shiftedValue",
                "uVar6": "bit",
                "uVar7": "dividend",
                "uVar8": "remainder",
                "uVar9": "divisor",
                "uVar11": "quotient",
                "uVar12": "shiftAmount",
                "uVar13": "result",
                "iVar10": "bitCount"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculateResult_0800a348(undefined4 input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  uint absInput2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  \n  absInput2 = input2 & 0x7fffffff;\n  if (absInput2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    temp3 = FUN_08008640(input1,input2,input1,input2);\n    temp2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp4 = FUN_08008640(temp1,temp2,0xbe8838d4,0xbda8fae9);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x5555554c,0x3fa55555);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n  }\n  else {\n    temp3 = FUN_08008640(input1,input2,input1,input2);\n    temp2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp4 = FUN_08008640(temp1,temp2,0xbe8838d4,0xbda8fae9);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x16c15177,0x3f56c16c);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x5555554c,0x3fa55555);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),temp1,temp2);\n    if (0x3fd33332 < absInput2) {\n      if (absInput2 < 0x3fe90001) {\n        result = absInput2 - 0x200000;\n        temp3 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        temp3 = 0x3fe7000000000000;\n      }\n      result4 = (undefined4)((ulonglong)temp3 >> 0x20);\n      result3 = (undefined4)temp3;\n      temp3 = FUN_08008640(temp1,temp2,0,0x3fe00000);\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,result);\n      temp4 = FUN_08008640(temp1,temp2,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      temp5 = FUN_08008640(input1,input2,input3,input4);\n      temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                           (int)((ulonglong)temp5 >> 0x20));\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                           (int)((ulonglong)temp4 >> 0x20));\n      temp1 = FUN_080082d0(result3,result4,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      return temp1;\n    }\n  }\n  result2 = (undefined4)((ulonglong)temp4 >> 0x20);\n  result1 = (undefined4)temp4;\n  temp1 = (undefined4)((ulonglong)temp3 >> 0x20);\n  temp4 = FUN_08008640((int)temp3,temp1,0,0x3fe00000);\n  temp3 = FUN_08008640((int)temp3,temp1,result1,result2);\n  temp5 = FUN_08008640(input1,input2,input3,input4);\n  temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp5,\n                       (int)((ulonglong)temp5 >> 0x20));\n  temp3 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp3,\n                       (int)((ulonglong)temp3 >> 0x20));\n  temp1 = FUN_080082d0(0,0x3ff00000,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "absInput2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "local_30": "result1",
                "uStack_2c": "result2",
                "local_28": "result3",
                "uStack_24": "result4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input,undefined8 *output,int length,int offset,int type,int data)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint temp;\n  int iterator;\n  uint *pointer2;\n  undefined4 value1;\n  uint **pointer3;\n  undefined4 value2;\n  int temp1;\n  undefined4 *pointer4;\n  undefined4 temp2;\n  uint value3;\n  uint *tempPointer;\n  int temp3;\n  int size;\n  undefined8 *pointer16;\n  int temp4;\n  undefined4 *pointer18;\n  undefined8 *pointer19;\n  undefined4 result0;\n  int temp6;\n  undefined8 *pointer5;\n  undefined4 *pointer6;\n  bool flag;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 *stackArray1;\n  int stackArray2;\n  int stackOffset;\n  int stackSize;\n  uint *stackArray3 [2];\n  uint stackArray4 [20];\n  undefined8 tempStack1;\n  undefined8 tempStack2;\n  int tempStack3 [38];\n  undefined8 tempStack4;\n  \n  size = *(int *)(&DAT_0800c060 + type * 4);\n  temp1 = offset + -1;\n  stackArray3[1] = (uint *)output;\n  if (length + 0x14 < 0 == SCARRY4(length,0x14)) {\n    stackSize = (length + -3) / 0x18;\n    stackOffset = (stackSize + 1) * -0x18;\n  }\n  else {\n    stackOffset = -0x18;\n    stackSize = 0;\n  }\n  stackOffset = length + stackOffset;\n  temp4 = stackSize - temp1;\n  if (-1 < size + temp1) {\n    temp6 = size + temp1 + 1 + temp4;\n    pointer16 = &tempStack1;\n    do {\n      while (temp4 < 0) {\n        temp4 = temp4 + 1;\n        *(undefined4 *)pointer16 = 0;\n        *(undefined4 *)((int)pointer16 + 4) = 0;\n        pointer16 = pointer16 + 1;\n        if (temp4 == temp6) goto LAB_0800a626;\n      }\n      temp8 = FUN_0800856c(*(undefined4 *)(data + temp4 * 4));\n      temp4 = temp4 + 1;\n      *pointer16 = temp8;\n      pointer16 = pointer16 + 1;\n    } while (temp4 != temp6);\n  }\nLAB_0800a626:\n  pointer4 = (undefined4 *)(input + -8);\n  if (-1 < size) {\n    pointer5 = &tempStack1 + offset;\n    temp4 = temp1;\n    pointer16 = &tempStack4;\n    do {\n      if (temp1 < 0) {\n        temp8 = 0;\n      }\n      else {\n        temp8 = 0;\n        pointer6 = pointer4;\n        pointer19 = pointer5;\n        do {\n          pointer18 = pointer6 + 2;\n          temp7 = FUN_08008640(*pointer18,pointer6[3],*(undefined4 *)(pointer19 + -1),\n                                *(undefined4 *)((int)pointer19 + -4));\n          temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                                (int)((ulonglong)temp7 >> 0x20));\n          pointer6 = pointer18;\n          pointer19 = pointer19 + -1;\n        } while (pointer18 != pointer4 + offset * 2);\n      }\n      temp4 = temp4 + 1;\n      *pointer16 = temp8;\n      pointer5 = pointer5 + 1;\n      pointer16 = pointer16 + 1;\n    } while (temp4 != size + offset);\n  }\n  stackArray3[0] = stackArray4 + size + -1;\n  temp4 = size;\n  do {\n    temp8 = CONCAT44(*(undefined4 *)((int)&tempStack4 + temp4 * 8 + 4),\n                      *(undefined4 *)(&tempStack4 + temp4));\n    if (0 < temp4) {\n      pointer16 = &tempStack4 + temp4;\n      pointer2 = stackArray4;\n      do {\n        value1 = (undefined4)((ulonglong)temp8 >> 0x20);\n        FUN_08008640((int)temp8,value1,0,0x3e700000);\n        FUN_08008ba0();\n        temp7 = FUN_0800856c();\n        value2 = (undefined4)((ulonglong)temp7 >> 0x20);\n        temp9 = FUN_08008640((int)temp7,value2,0,0x41700000);\n        FUN_080082d0((int)temp8,value1,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n        result = FUN_08008ba0();\n        pointer5 = pointer16 + -1;\n        value1 = *(undefined4 *)pointer5;\n        temp2 = *(undefined4 *)((int)pointer16 + -4);\n        *pointer2 = result;\n        temp8 = FUN_080082d4((int)temp7,value2,value1,temp2);\n        pointer16 = pointer5;\n        pointer2 = pointer2 + 1;\n      } while (pointer5 != &tempStack4);\n    }\n    temp8 = FUN_0800b2e8((int)temp8,(int)((ulonglong)temp8 >> 0x20),stackOffset);\n    value2 = (undefined4)((ulonglong)temp8 >> 0x20);\n    FUN_08008640((int)temp8,value2,0,0x3fc00000);\n    temp7 = FUN_080094c0();\n    temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),0,0x40200000);\n    temp8 = FUN_080082d0((int)temp8,value2,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n    result = FUN_08008ba0();\n    temp7 = FUN_0800856c();\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                          (int)((ulonglong)temp7 >> 0x20));\n    value1 = (undefined4)((ulonglong)temp8 >> 0x20);\n    value2 = (undefined4)temp8;\n    if (stackOffset < 1) {\n      if (stackOffset == 0) {\n        temp6 = (int)stackArray4[temp4 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      temp6 = FUN_08008b4c(value2,value1,0,0x3fe00000);\n      if (temp6 != 0) {\n        result = result + 1;\n        if (temp4 < 1) {\n          temp8 = FUN_080082d0(0,0x3ff00000,value2,value1);\n          temp6 = 2;\n          goto LAB_0800a7a4;\n        }\n        temp6 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iterator = (int)stackArray4[temp4 + -1] >> (0x18U - stackOffset & 0xff);\n      value3 = stackArray4[temp4 + -1] - (iterator << (0x18U - stackOffset & 0xff));\n      temp6 = (int)value3 >> (0x17U - stackOffset & 0xff);\n      stackArray4[temp4 + -1] = value3;\n      result = result + iterator;\njoined_r0x0800a8b8:\n      if (0 < temp6) {\n        result = result + 1;\n        if (temp4 < 1) {\n          flag = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (stackArray4[0] == 0) {\n            flag = false;\n            if (temp4 != 1) {\n              pointer2 = stackArray4;\n              iterator = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  temp3 = iterator + 1;\n                  value3 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                iterator = iterator + 1;\n              } while (iterator != temp4);\n              flag = false;\n            }\n          }\n          else {\n            temp3 = 1;\n            iterator = 0;\n            value3 = stackArray4[0];\nLAB_0800a8e2:\n            stackArray4[iterator] = 0x1000000 - value3;\n            if (temp3 < temp4) {\n              value3 = stackArray4[temp3];\n              pointer2 = stackArray4 + temp3;\n              while( true ) {\n                tempPointer = pointer2 + 1;\n                *pointer2 = 0xffffff - value3;\n                if (tempPointer == stackArray4 + temp4) break;\n                value3 = *tempPointer;\n                pointer2 = tempPointer;\n              }\n            }\n            flag = true;\n          }\n        }\n        if (0 < stackOffset) {\n          if (stackOffset == 1) {\n            stackArray4[temp4 + -1] = stackArray4[temp4 + -1] & 0x7fffff;\n          }\n          else if (stackOffset == 2) {\n            stackArray4[temp4 + -1] = stackArray4[temp4 + -1] & 0x3fffff;\n          }\n        }\n        if (temp6 == 2) {\n          temp8 = FUN_080082d0(0,0x3ff00000,value2,value1);\n          if (flag) {\n            temp7 = FUN_0800b2e8(0,0x3ff00000,stackOffset);\n            temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                                  (int)((ulonglong)temp7 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    value2 = (undefined4)((ulonglong)temp8 >> 0x20);\n    iterator = FUN_08008b10((int)temp8,value2,0,0);\n    if (iterator == 0) {\n      temp8 = FUN_0800b2e8((int)temp8,value2,-stackOffset);\n      value1 = (undefined4)((ulonglong)temp8 >> 0x20);\n      value2 = (undefined4)temp8;\n      temp1 = FUN_08008b4c(value2,value1,0,0x41700000);\n      if (temp1 == 0) {\n        value3 = FUN_08008ba0(value2,value1);\n        stackArray4[temp4] = value3;\n        iterator = temp4;\n      }\n      else {\n        FUN_08008640(value2,value1,0,0x3e700000);\n        value3 = FUN_08008ba0();\n        temp8 = FUN_0800856c();\n        temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n        FUN_080082d0(value2,value1,(int)temp8,(int)((ulonglong)temp8 >> 0x20));\n        temp = FUN_08008ba0();\n        stackOffset = stackOffset + 0x18;\n        stackArray4[temp4] = temp;\n        stackArray4[temp4 + 1] = value3;\n        iterator = temp4 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iterator = temp4 + -1;\n    if (size <= iterator) {\n      value3 = 0;\n      pointer2 = stackArray4 + temp4 + 0x3fffffff;\n      do {\n        tempPointer = pointer2 + -1;\n        value3 = value3 | *pointer2;\n        pointer2 = tempPointer;\n      } while (tempPointer != stackArray3[0]);\n      if (value3 != 0) break;\n    }\n    if (stackArray4[size + -1] == 0) {\n      stackArray2 = 1;\n      pointer3 = stackArray3 + size;\n      do {\n        pointer2 = *pointer3;\n        stackArray2 = stackArray2 + 1;\n        pointer3 = pointer3 + -1;\n      } while (pointer2 == (uint *)0x0);\n      stackArray2 = temp4 + stackArray2;\n    }\n    else {\n      stackArray2 = temp4 + 1;\n    }\n    temp6 = temp4 + 1;\n    pointer6 = (undefined4 *)(data + (temp6 + stackSize + 0x3fffffff) * 4);\n    pointer16 = &tempStack1 + temp4 + offset;\n    stackArray1 = &tempStack4 + temp6;\n    do {\n      pointer6 = pointer6 + 1;\n      temp8 = FUN_0800856c(*pointer6);\n      *pointer16 = temp8;\n      pointer5 = pointer16 + 1;\n      if (temp1 < 0) {\n        temp7 = 0;\n      }\n      else {\n        temp7 = 0;\n        pointer18 = pointer4;\n        while( true ) {\n          pointer16 = pointer16 + -1;\n          pointer1 = pointer18 + 2;\n          temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),*pointer1,pointer18[3]);\n          temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                                (int)((ulonglong)temp8 >> 0x20));\n          if (pointer1 == pointer4 + offset * 2) break;\n          temp8 = *pointer16;\n          pointer18 = pointer1;\n        }\n      }\n      *stackArray1 = temp7;\n      temp6 = temp6 + 1;\n      temp4 = stackArray2;\n      pointer16 = pointer5;\n      stackArray1 = stackArray1 + 1;\n    } while (temp6 <= stackArray2);\n  } while( true );\n  stackOffset = stackOffset + -0x18;\n  if (stackArray4[iterator] == 0) {\n    pointer2 = stackArray4 + temp4 + 0x3ffffffe;\n    do {\n      value3 = *pointer2;\n      iterator = iterator + -1;\n      stackOffset = stackOffset + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (value3 == 0);\n  }\nLAB_0800a9f6:\n  temp8 = FUN_0800b2e8(0,0x3ff00000,stackOffset);\n  if (iterator < 0) {\n    if (2 < type) {\n      if (type == 3) {\n        temp8 = 0;\nLAB_0800abe4:\n        if (temp6 == 0) {\n          *stackArray3[1] = (undefined4)tempStack2;\n          *(int *)((int)stackArray3[1] + 4) = tempStack2._4_4_;\n          *(undefined8 *)((int)stackArray3[1] + 0x10) = temp8;\n          *(int *)((int)stackArray3[1] + 8) = tempStack3[0];\n          *(int *)((int)stackArray3[1] + 0xc) = tempStack3[1];\n          return result & 7;\n        }\n        *(int *)((int)stackArray3[1] + 0x10) = (int)temp8;\n        *(int *)((int)stackArray3[1] + 8) = tempStack3[0];\n        *(int *)((int)stackArray3[1] + 0x14) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n        *(int *)((int)stackArray3[1] + 4) = tempStack2._4_4_ + -0x80000000;\n        *(int *)((int)stackArray3[1] + 0xc) = tempStack3[1] + -0x80000000;\n        *stackArray3[1] = (undefined4)tempStack2;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (type < 1) {\n      if (type != 0) goto LAB_0800ab0e;\n      temp8 = 0;\nLAB_0800aafc:\n      temp1 = (int)((ulonglong)temp8 >> 0x20);\n      if (temp6 != 0) {\n        temp1 = temp1 + -0x80000000;\n      }\n      *stackArray3[1] = (int)temp8;\n      *(int *)((int)stackArray3[1] + 4) = temp1;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    temp8 = 0;\n  }\n  else {\n    pointer5 = &tempStack4 + iterator;\n    pointer2 = stackArray4 + iterator + 1;\n    pointer16 = &tempStack4 + iterator + 1;\n    do {\n      value2 = (undefined4)((ulonglong)temp8 >> 0x20);\n      pointer2 = pointer2 + -1;\n      temp7 = FUN_0800856c(*pointer2);\n      temp7 = FUN_08008640((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,value2);\n      pointer16 = pointer16 + -1;\n      *pointer16 = temp7;\n      temp8 = FUN_08008640((int)temp8,value2,0,0x3e700000);\n    } while (pointer2 != stackArray4);\n    temp1 = 0;\n    do {\n      if (size < 0) {\n        temp8 = 0;\n      }\n      else {\n        value2 = 0x40000000;\n        value1 = 0x3ff921fb;\n        temp8 = 0;\n        temp4 = 0;\n        pointer16 = pointer5;\n        pointer4 = &DAT_0800c028;\n        while( true ) {\n          temp7 = FUN_08008640(*(undefined4 *)pointer16,*(undefined4 *)((int)pointer16 + 4),value2,value1\n                               );\n          temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp7,\n                                (int)((ulonglong)temp7 >> 0x20));\n          temp4 = temp4 + 1;\n          if ((size < temp4) || (temp1 < temp4)) break;\n          value2 = *pointer4;\n          value1 = pointer4[1];\n          pointer16 = pointer16 + 1;\n          pointer4 = pointer4 + 2;\n        }\n      }\n      flag = temp1 != iterator;\n      *(int *)(&tempStack2 + temp1) = (int)temp8;\n      *(int *)((int)&tempStack2 + (temp1 * 2 + 1) * 4) = (int)((ulonglong)temp8 >> 0x20);\n      pointer5 = pointer5 + -1;\n      temp1 = temp1 + 1;\n    } while (flag);\n    if (2 < type) {\n      if (type == 3) {\n        if (iterator != 0) {\n          pointer16 = &tempStack2 + iterator;\n          temp8 = CONCAT44(*(undefined4 *)((int)&tempStack2 + (iterator * 2 + 1) * 4),\n                            *(undefined4 *)pointer16);\n          do {\n            value1 = (undefined4)((ulonglong)temp8 >> 0x20);\n            value2 = (undefined4)temp8;\n            temp2 = *(undefined4 *)(pointer16 + -1);\n            result0 = *(undefined4 *)((int)pointer16 + -4);\n            temp8 = FUN_080082d4(value2,value1,temp2,result0);\n            temp7 = FUN_080082d0(temp2,result0,(int)temp8,(int)((ulonglong)temp8 >> 0x20));\n            temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),value2,value1);\n            *pointer16 = temp7;\n            pointer16 = pointer16 + -1;\n            *pointer16 = temp8;\n          } while (&tempStack2 != pointer16);\n          if (1 < iterator) {\n            pointer16 = &tempStack2 + iterator;\n            temp8 = CONCAT44(*(undefined4 *)((int)&tempStack2 + (iterator * 2 + 1) * 4),\n                              *(undefined4 *)pointer16);\n            do {\n              value1 = (undefined4)((ulonglong)temp8 >> 0x20);\n              value2 = (undefined4)temp8;\n              temp2 = *(undefined4 *)(pointer16 + -1);\n              result0 = *(undefined4 *)((int)pointer16 + -4);\n              temp8 = FUN_080082d4(value2,value1,temp2,result0);\n              temp7 = FUN_080082d0(temp2,result0,(int)temp8,(int)((ulonglong)temp8 >> 0x20));\n              temp7 = FUN_080082d4((int)temp7,(int)((ulonglong)temp7 >> 0x20),value2,value1);\n              *pointer16 = temp7;\n              pointer16 = pointer16 + -1;\n              *pointer16 = temp8;\n            } while (&tempStack2 + 1 != pointer16);\n            temp8 = 0;\n            pointer16 = &tempStack2 + iterator + 1;\n            do {\n              pointer5 = pointer16 + -1;\n              temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),\n                                    *(undefined4 *)pointer5,*(undefined4 *)((int)pointer16 + -4));\n              pointer16 = pointer5;\n            } while (&tempStack2 + 2 != pointer5);\n            goto LAB_0800abe4;\n          }\n        }\n        temp8 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (type < 1) {\n      if (type != 0) goto LAB_0800ab0e;\n      temp8 = 0;\n      pointer16 = &tempStack2 + iterator + 1;\n      do {\n        pointer5 = pointer16 + -1;\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),*(undefined4 *)pointer5,\n                              *(undefined4 *)((int)pointer16 + -4));\n        pointer16 = pointer5;\n      } while (&tempStack2 != pointer5);\n      goto LAB_0800aafc;\n    }\n    temp8 = 0;\n    pointer16 = &tempStack2 + iterator + 1;\n    do {\n      pointer5 = pointer16 + -1;\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),*(undefined4 *)pointer5,\n                            *(undefined4 *)((int)pointer16 + -4));\n      pointer16 = pointer5;\n    } while (&tempStack2 != pointer5);\n  }\n  temp1 = (int)((ulonglong)temp8 >> 0x20);\n  value2 = (undefined4)temp8;\n  if (temp6 == 0) {\n    *(undefined8 *)stackArray3[1] = temp8;\n    temp8 = FUN_080082d0((undefined4)tempStack2,tempStack2._4_4_,value2,temp1);\n    if (iterator < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    temp1 = 1;\n    pointer16 = &tempStack2;\n    do {\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),\n                            *(undefined4 *)(pointer16 + 1),*(undefined4 *)((int)pointer16 + 0xc));\n      temp1 = temp1 + 1;\n      pointer16 = pointer16 + 1;\n    } while (temp1 <= iterator);\n    if (temp6 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *stackArray3[1] = value2;\n    *(int *)((int)stackArray3[1] + 4) = temp1 + -0x80000000;\n    temp8 = FUN_080082d0((undefined4)tempStack2,tempStack2._4_4_,value2,temp1);\n    if (0 < iterator) goto LAB_0800ad04;\n  }\n  temp8 = CONCAT44((int)((ulonglong)temp8 >> 0x20) + -0x80000000,(int)temp8);\nLAB_0800ad26:\n  *(undefined8 *)((int)stackArray3[1] + 8) = temp8;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input",
                "param_2": "output",
                "param_3": "length",
                "param_4": "offset",
                "param_5": "type",
                "param_6": "data",
                "puVar1": "pointer1",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "iterator",
                "puVar5": "pointer2",
                "uVar6": "value1",
                "ppuVar7": "pointer3",
                "uVar8": "value2",
                "iVar9": "temp1",
                "puVar10": "pointer4",
                "uVar11": "temp2",
                "uVar12": "value3",
                "puVar13": "tempPointer",
                "iVar14": "temp3",
                "iVar15": "size",
                "iVar17": "temp4",
                "iVar21": "temp6",
                "puVar22": "pointer5",
                "puVar23": "pointer6",
                "bVar24": "flag",
                "uVar25": "temp7",
                "uVar26": "temp8",
                "uVar27": "temp9",
                "local_284": "stackArray1",
                "local_280": "stackArray2",
                "local_270": "stackOffset",
                "local_26c": "stackSize",
                "local_260": "stackArray3",
                "local_258": "stackArray4",
                "uStack_208": "tempStack1",
                "local_168": "tempStack2",
                "local_160": "tempStack3",
                "uStack_c8": "tempStack4"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculateResult_0800adf0(undefined4 input1,uint input2,undefined4 input3,undefined4 input4,int reverseFlag)\n\n{\n  int result;\n  undefined4 output1;\n  undefined4 output2;\n  undefined4 output3;\n  undefined4 output4;\n  undefined4 temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  \n  if (((input2 & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input1;\n  }\n  temp2 = FUN_08008640(input1,input2,input1);\n  output3 = (undefined4)((ulonglong)temp2 >> 0x20);\n  output2 = (undefined4)temp2;\n  temp2 = FUN_08008640(input1,input2,output2,output3);\n  output4 = (undefined4)((ulonglong)temp2 >> 0x20);\n  output1 = (undefined4)temp2;\n  temp2 = FUN_08008640(output2,output3,0x5acfd57c,0x3de5d93a);\n  temp2 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),output2,output3);\n  temp2 = FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),output2,output3);\n  temp2 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),output2,output3);\n  temp2 = FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x1110f8a6,0x3f811111);\n  temp1 = (undefined4)((ulonglong)temp2 >> 0x20);\n  if (reverseFlag != 0) {\n    temp3 = FUN_08008640(input3,input4,0,0x3fe00000);\n    temp2 = FUN_08008640(output1,output4,(int)temp2,temp1);\n    temp2 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n    temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),output2,output3);\n    temp2 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),input3,input4);\n    temp3 = FUN_08008640(output1,output4,0x55555549,0x3fc55555);\n    temp2 = FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                         (int)((ulonglong)temp3 >> 0x20));\n    output2 = FUN_080082d0(input1,input2,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    return output2;\n  }\n  temp2 = FUN_08008640(output2,output3,(int)temp2,temp1);\n  temp2 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x55555549,0x3fc55555);\n  temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),output1,output4);\n  output2 = FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),input1,input2);\n  return output2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "reverseFlag",
                "iVar1": "result",
                "uVar2": "output1",
                "uVar3": "output2",
                "uVar4": "output3",
                "uVar5": "output4",
                "uVar6": "temp1",
                "uVar7": "temp2",
                "uVar8": "temp3"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int output;\n  undefined4 temp1;\n  uint temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined4 localVariable;\n  \n  temp3 = CONCAT44(input2,input1);\n  temp2 = input2 & 0x7fffffff;\n  if (temp2 < 0x44100000) {\n    if (temp2 < 0x3fdc0000) {\n      if (temp2 < 0x3e200000) {\n        temp4 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        output = FUN_08008b60((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        if (output != 0) {\n          return input1;\n        }\n      }\n      output = -1;\n    }\n    else {\n      temp3 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)temp3 >> 0x20);\n      result1 = (undefined4)temp3;\n      if (temp2 < 0x3ff30000) {\n        if (temp2 < 0x3fe60000) {\n          temp3 = FUN_080082d4(result1,result4,result1,result4);\n          temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x40000000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          output = 0;\n        }\n        else {\n          temp3 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          output = 1;\n        }\n      }\n      else if (temp2 < 0x40038000) {\n        temp3 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        temp4 = FUN_08008640(result1,result4,0,0x3ff80000);\n        temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                             (int)((ulonglong)temp4 >> 0x20));\n        output = 2;\n      }\n      else {\n        temp3 = FUN_08008894(0,0xbff00000,result1,result4);\n        output = 3;\n      }\n    }\n    localVariable = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp3 = FUN_08008640(temp1,localVariable,temp1);\n    result2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result1 = (undefined4)temp3;\n    temp3 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result4 = (undefined4)temp3;\n    temp3 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x24760deb,0x3fa97b4b);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xa0d03d51,0x3fb10d66);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xc54c206e,0x3fb745cd);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x920083ff,0x3fc24924);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x5555550d,0x3fd55555);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp4 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x52defd9a,0x3fadde2d);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xfe231671,0x3fbc71c6);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x9998ebc4,0x3fc99999);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)temp4 >> 0x20);\n    if (output == -1) {\n      temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n      temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVariable);\n      output = FUN_080082d0(temp1,localVariable,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      return output;\n    }\n    temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVariable);\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + output * 8),\n                         *(undefined4 *)(&UNK_0800c094 + output * 8));\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVariable);\n    output = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + output * 8),\n                         *(undefined4 *)(&UNK_0800c074 + output * 8),(int)temp3,\n                         (int)((ulonglong)temp3 >> 0x20));\n    if ((int)input2 < 0) {\n      return output;\n    }\n  }\n  else {\n    if ((0x7ff00000 < temp2) || ((temp2 == 0x7ff00000 && (input1 != 0)))) {\n      output = FUN_080082d4(input1,input2,input1);\n      return output;\n    }\n    output = 0x54442d18;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "output",
                "uVar6": "temp1",
                "uVar7": "temp2",
                "uVar8": "temp3",
                "uVar9": "temp4",
                "local_2c": "localVariable"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "sign_extend_0800b2d4",
            "code": "\nuint signExtend_0800b2d4(undefined4 flags,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "sign_extend_0800b2d4",
                "param_1": "flags",
                "param_2": "value"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_application_0800b2e0",
            "code": "\nundefined4 initializeApplication_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_application_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "perform_calculation_0800b2e8",
            "code": "\nuint performCalculation_0800b2e8(uint inputValue1,uint inputValue2,int offset,undefined4 constantValue)\n\n{\n  uint shiftedValue1;\n  int sum;\n  uint shiftedValue2;\n  undefined8 combinedValue;\n  \n  combinedValue = CONCAT44(inputValue2,inputValue1);\n  shiftedValue1 = (inputValue2 << 1) >> 0x15;\n  if (shiftedValue1 == 0) {\n    if ((inputValue1 | inputValue2 & 0x7fffffff) == 0) {\n      return inputValue1;\n    }\n    combinedValue = FUN_08008640(inputValue1,inputValue2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shiftedValue1 = ((uint)((int)((ulonglong)combinedValue >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedValue1 == 0x7ff) {\n    shiftedValue1 = FUN_080082d4(inputValue1,inputValue2,inputValue1,inputValue2,constantValue);\n    return shiftedValue1;\n  }\n  shiftedValue2 = (uint)((ulonglong)combinedValue >> 0x20);\n  sum = shiftedValue1 + offset;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)combinedValue;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) {\n      shiftedValue1 = FUN_08008640((uint)combinedValue,shiftedValue2 & 0x800fffff | (sum + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedValue1;\n    }\n    if (offset < 0xc351) {\n      combinedValue = CONCAT44(shiftedValue2 & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedValue1 = FUN_08008640((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedValue1;\n    }\n  }\n  shiftedValue1 = FUN_08008640(0x8800759c,shiftedValue2 & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedValue1;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "perform_calculation_0800b2e8",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "offset",
                "param_4": "constantValue",
                "uVar1": "shiftedValue1",
                "iVar2": "sum",
                "uVar3": "shiftedValue2",
                "uVar4": "combinedValue"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_global_variable_0800b3dc",
            "code": "\nundefined4 get_global_variable_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_global_variable_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_functions_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunctions_0800b3e8(void)\n\n{\n  int iterationCount;\n  code **functionPointerArray;\n  \n  FUNC_0800b5b0();\n  iterationCount = 0;\n  functionPointerArray = (code **)&DAT_0800c0b4;\n  do {\n    iterationCount = iterationCount + 1;\n    (**functionPointerArray)();\n    functionPointerArray = functionPointerArray + 1;\n  } while (iterationCount != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "iterationCount",
                "ppcVar2": "functionPointerArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_with_alignment_check_0800b430",
            "code": "\nvoid memset_with_alignment_check_0800b430(undefined4 *dst,undefined value,uint size)\n\n{\n  undefined4 *ptr;\n  undefined4 *ptr2;\n  uint count;\n  undefined4 value_4bytes;\n  bool is_count_zero;\n  \n  if (((uint)dst & 3) != 0) {\n    count = size - 1;\n    ptr = dst;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      dst = (undefined4 *)((int)ptr + 1);\n      *(undefined *)ptr = value;\n      size = count;\n      if (((uint)dst & 3) == 0) break;\n      is_count_zero = count == 0;\n      count = count - 1;\n      ptr = dst;\n      if (is_count_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    value_4bytes = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      ptr = dst + 4;\n      do {\n        ptr[-4] = value_4bytes;\n        ptr[-3] = value_4bytes;\n        ptr[-2] = value_4bytes;\n        ptr[-1] = value_4bytes;\n        ptr = ptr + 4;\n      } while (ptr != (undefined4 *)((int)dst + (size - 0x10 & 0xfffffff0) + 0x20));\n      count = size & 0xc;\n      dst = dst + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (count == 0) goto joined_r0x0800b4a8;\n    }\n    ptr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)dst);\n    do {\n      ptr2 = dst + 1;\n      *dst = value_4bytes;\n      dst = ptr2;\n    } while (ptr != ptr2);\n    size = size & 3;\n    dst = ptr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    ptr = dst;\n    do {\n      ptr2 = (undefined4 *)((int)ptr + 1);\n      *(undefined *)ptr = value;\n      ptr = ptr2;\n    } while ((undefined4 *)(size + (int)dst) != ptr2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_with_alignment_check_0800b430",
                "param_1": "dst",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "ptr",
                "puVar2": "ptr2",
                "uVar3": "count",
                "uVar4": "value_4bytes",
                "bVar5": "is_count_zero"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "process_input_0800b524",
            "code": "\nundefined4 processInput_0800b524(int inputType,undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  undefined *ptrData;\n  undefined4 result;\n  uint bitwiseFlag;\n  uint counter;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  ptrData = DAT_20000168;\n  counter = *(uint *)(DAT_20000168 + 4);\n  if ((int)counter < 0x20) {\n    if (inputType != 0) {\n      *(undefined4 *)(DAT_20000168 + counter * 4 + 0x88) = data2;\n      bitwiseFlag = 1 << (counter & 0xff);\n      *(uint *)(ptrData + 0x188) = *(uint *)(ptrData + 0x188) | bitwiseFlag;\n      *(undefined4 *)(ptrData + counter * 4 + 0x108) = data3;\n      if (inputType == 2) {\n        *(uint *)(ptrData + 0x18c) = bitwiseFlag | *(uint *)(ptrData + 0x18c);\n      }\n    }\n    result = DAT_20000448;\n    *(uint *)(ptrData + 4) = counter + 1;\n    *(undefined4 *)(ptrData + (counter + 2) * 4) = data1;\n    FUNC_0800b520(result);\n    result = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    result = 0xffffffff;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "process_input_0800b524",
                "param_1": "inputType",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "data3",
                "puVar1": "ptrData",
                "uVar2": "result",
                "uVar3": "bitwiseFlag",
                "uVar4": "counter"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 179649,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}