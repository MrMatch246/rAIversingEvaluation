{
    "functions": {
        "FUN_0800192c": {
            "renaming": {
                "FUN_0800192c": "check_flag_0800192c",
                "PTR_DAT_08001954": "data_array",
                "PTR_DAT_08001958": "result_pointer"
            },
            "code": "void check_flag_0800192c(void)\n{\n  bool is_flag_set = (PTR_DAT_08001954[0x28] & 8) != 0;\n  if (is_flag_set) {\n    *(undefined4 *)PTR_DAT_08001958 = 1;\n  }\n  else {\n    *(undefined4 *)PTR_DAT_08001958 = 0;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800192c",
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_flag_0800192c"
        },
        "FUN_08006950": {
            "renaming": {
                "FUN_08006950": "set_param_value_08006950",
                "param_1": "param_value",
                "DAT_08006994": "data_address_start"
            },
            "code": "void set_param_value_08006950(uint param_value) {\n    uint* data_address = (uint*)(DAT_08006994 + 0xc);\n    uint original_value = *data_address;\n    uint modified_value = original_value & 0xf8ff | (param_value & 7) << 8 | 0x5fa0000;\n    *data_address = modified_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006950",
            "calling": [
                "FUN_08006ce0"
            ],
            "imported": false,
            "current_name": "set_param_value_08006950"
        },
        "FUN_08008ba0": {
            "renaming": {
                "FUN_08008ba0": "convert_to_int32_08008ba0",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "output",
                "iVar2": "calculation_result",
                "uVar3": "shift_amount"
            },
            "code": "uint convert_to_int32_08008ba0(uint input_1, uint input_2)\n{\n  uint output;\n  int calculation_result;\n  uint shift_amount;\n  \n  calculation_result = input_2 * 2 + 0x200000;\n  if (input_2 * 2 < 0xffe00000) {\n    if (calculation_result >= 0) {\n      return 0;\n    }\n    shift_amount = -calculation_result >> 0x15;\n    if (shift_amount < 0xfffffc20 && shift_amount != 0) {\n      output = (input_2 << 0xb | 0x80000000 | input_1 >> 0x15) >> (shift_amount & 0xff);\n      if ((input_2 & 0x80000000) != 0) {\n        output = -output;\n      }\n      return output;\n    }\n  }\n  else if ((input_1 | input_2 << 0xc) != 0) {\n    return 0;\n  }\n  input_2 = input_2 & 0x80000000;\n  if (input_2 == 0) {\n    input_2 = 0x7fffffff;\n  }\n  return input_2;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008ba0",
            "calling": [
                "FUN_0800adf0",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_080095b8",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_to_int32_08008ba0"
        },
        "FUN_08005a5c": {
            "renaming": {
                "FUN_08005a5c": "do_nothing_08005a5c"
            },
            "code": "\nvoid do_nothing_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a5c",
            "calling": [
                "FUN_080059f8"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a5c"
        },
        "FUN_08005984": {
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "input_param",
                "uVar1": "result",
                "PTR_DAT_080059b0": "data_pointer"
            },
            "code": "int initialize_data_08005984(int input_param)\n{\n    int* PTR_DAT_080059b0 = *(int**)PTR_DAT_080059b0;\n    if (PTR_DAT_080059b0 == NULL)\n    {\n        int result = FUN_0800597c(1, input_param, 0);\n        return result;\n    }\n    else\n    {\n        return 0;\n    }\n}",
            "called": [
                "FUN_0800597c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005984",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_08005984"
        },
        "FUN_08007a10": {
            "renaming": {
                "FUN_08007a10": "set_flags_08007a10",
                "param_1": "flag_value",
                "DAT_08007a64": "FLAG_PTR",
                "DAT_08007a68": "FLAG_2",
                "DAT_08007a6c": "FLAG_3"
            },
            "code": "void set_flags_08007a10(int flag_value) {\n  if (flag_value == FLAG_1) {\n    *(uint *)(DAT_08007a64 + 0x40) |= FLAG_1_BIT;\n  }\n  else if (flag_value == DAT_08007a68) {\n    *(uint *)(DAT_08007a64 + 0x40) |= DAT_08007a68_BIT;\n  }\n  else if (flag_value == DAT_08007a6c) {\n    *(uint *)(DAT_08007a64 + 0x40) |= DAT_08007a6c_BIT;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a10",
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "set_flags_08007a10"
        },
        "FUN_0800856c": {
            "renaming": {
                "FUN_0800856c": "improved_function_name_0800856c",
                "param_1": "input_param",
                "uVar1": "output_upper",
                "uVar2": "input_value",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeroes",
                "uVar5": "shift_amount_2",
                "uVar6": "sign_bit",
                "in_r12": "unused_variable",
                "bVar7": "leading_zeroes_underflow",
                "bVar8": "leading_zeroes_zero",
                "bVar9": "shift_amount_overflow"
            },
            "code": "ulonglong improved_function_name_0800856c(uint x) {\n  uint y;\n  int n = 32;\n  y = x >> 16; if (y != 0) { n = n - 16; x = y; }\n  y = x >> 8; if (y != 0) { n = n - 8; x = y; }\n  y = x >> 4; if (y != 0) { n = n - 4; x = y; }\n  y = x >> 2; if (y != 0) { n = n - 2; x = y; }\n  return n - ((x >> 1) & 1);\n}\n\nulonglong count_leading_set(uint x) {\n  uint y;\n  int n = 0;\n  y = x >> 16; if (y != 0) { n = n + 16; x = y; }\n  y = x >> 8; if (y != 0) { n = n + 8; x = y; }\n  y = x >> 4; if (y != 0) { n = n + 4; x = y; }\n  y = x >> 2; if (y != 0) { n = n + 2; x = y; }\n  return n + ((x >> 1) & 1);\n}\n\nulonglong improved_function_name_0800856c(uint input_param) {\n  uint input_value = input_param;\n  uint sign_bit = input_param & 0x80000000;\n  if (input_value == 0) {\n    return 0;\n  }\n  if ((int)sign_bit < 0) {\n    input_value = -input_param;\n  }\n  uint leading_zeroes = improved_function_name_0800856c(input_value);\n  uint shift_amount = leading_zeroes + 0x15;\n  uint leading_set = count_leading_set(input_value);\n  bool shift_amount_overflow = shift_amount < 0x20;\n  bool shift_amount_underflow = shift_amount >= 0x433;\n  uint output_value = 0;\n  if (shift_amount_overflow) {\n    uint trailing_zeroes = 0x20 - leading_zeroes;\n    output_value = input_value << (leading_zeroes & 0xff);\n    output_value |= 0U >> (trailing_zeroes & 0xff);\n    output_value |= 0 << (leading_zeroes & 0xff);\n  } else if (shift_amount_underflow) {\n    uint trailing_zeroes = ~(0x432 - shift_amount);\n    if (trailing_zeroes > 0x1e) {\n      output_value = input_param & 0x80000000ffffffff;\n      output_value |= input_value >> (trailing_zeroes - 0x1f & 0xff);\n    } else {\n      int difference = trailing_zeroes - 0x13;\n      if (difference == 0 || (difference < 0) != (shift_amount - 0x1f < 0xc)) {\n        trailing_zeroes = trailing_zeroes + 1;\n        output_value = (input_value >> (trailing_zeroes & 0xff)) | (input_value << (0x20 - trailing_zeroes & 0xff));\n        output_value |= sign_bit;\n      } else {\n        output_value = input_param & 0x80000000ffffffff;\n        output_value |= (input_value >> (0x20 - (0xc - difference) & 0xff)) | (input_value << (0xc - difference & 0xff));\n      }\n    }\n  } else {\n    output_value = (input_value << (shift_amount & 0xff)) | (sign_bit << (shift_amount - 0x20 & 0xff));\n  }\n  return ((ulonglong)input_param & 0xffffffff00000000) | output_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800856c",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "improved_function_name_0800856c"
        },
        "FUN_08008b00": {
            "renaming": {
                "FUN_08008b00": "execute_function_08008b00",
                "param_1": "input_param",
                "FUN_08008a74": "call_helper_function"
            },
            "code": "undefined4 execute_function_08008b00(undefined4 input_param)\n{\n  call_helper_function();\n  return input_param;\n}",
            "called": [
                "FUN_08008a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b00",
            "calling": [
                "FUN_08008b10",
                "FUN_08008b24",
                "FUN_08008af0"
            ],
            "imported": false,
            "current_name": "execute_function_08008b00"
        },
        "FUN_0800585c": {
            "renaming": {
                "FUN_0800585c": "update_data_if_second_element_is_two_0800585c",
                "PTR_DAT_08005878": "PTR_DAT_08005878",
                "call_function_to_update_data": "FUN_08005790"
            },
            "code": "void update_data_if_second_element_is_two_0800585c(void)\n{\n  if (PTR_DAT_08005878[1] == '\\x02') {\n    PTR_DAT_08005878[1] = 3;\n    call_function_to_update_data();\n  }\n  return;\n}",
            "called": [
                "FUN_08005790"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800585c",
            "calling": [
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_second_element_is_two_0800585c"
        },
        "FUN_0800597c": {
            "renaming": {
                "FUN_0800597c": "trigger_software_interrupt_0800597c",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void trigger_software_interrupt_0800597c(void)\n{\n  software_interrupt(SOFTWARE_INTERRUPT_NUM);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800597c",
            "calling": [
                "FUN_08005984"
            ],
            "imported": false,
            "current_name": "trigger_software_interrupt_0800597c"
        },
        "FUN_08009798": {
            "renaming": {
                "FUN_08009798": "calculate_double_08009798",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "exponent_difference",
                "uVar2": "shifted_exponent",
                "lVar3": "result",
                "DAT_08009814": "mask_table"
            },
            "code": "long long calculate_double_08009798(uint32_t exponent, uint32_t mantissa, undefined4 param_3, undefined4 param_4)\n{\n  uint32_t shifted_exponent = (mantissa << 1) >> 0x15;\n  uint32_t exponent_difference = shifted_exponent - 0x3ff;\n  if ((int)exponent_difference < 0x14) {\n    if ((int)exponent_difference < 0) {\n      return ((uint64_t)mantissa & 0x80000000) << 0x20;\n    }\n    long long result = (uint64_t)(mantissa & ~(DAT_08009814[(exponent_difference & 0xff)])) << 0x20;\n  }\n  else {\n    if ((int)exponent_difference < 0x34) {\n      return CONCAT44(mantissa, exponent & ~(0xffffffffU >> (shifted_exponent - 0x413 & 0xff)));\n    }\n    if (exponent_difference != 0x400) {\n      return CONCAT44(mantissa, exponent);\n    }\n    long long result = FUNC_080082d4(exponent, mantissa, exponent, mantissa, param_4);\n  }\n  return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009798",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "calculate_double_08009798"
        },
        "FUN_08008cd8": {
            "renaming": {
                "FUN_08008cd8": "FUNC_08008cd8"
            },
            "code": "\nuint FUNC_08008cd8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  uVar2 = param_2 ^ 0x80000000;\n  uVar4 = param_1 << 1;\n  bVar8 = uVar4 == 0;\n  if (!bVar8) {\n    param_4 = param_2 << 1;\n    bVar8 = param_4 == 0;\n  }\n  if (!bVar8) {\n    bVar8 = uVar4 == param_4;\n  }\n  iVar7 = (int)uVar4 >> 0x18;\n  if (!bVar8) {\n    bVar8 = iVar7 == -1;\n  }\n  if (!bVar8) {\n    bVar8 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar8) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar7 == -1 || iVar1 == -1) {\n      uVar4 = uVar2;\n      if (iVar7 == -1) {\n        uVar4 = param_1;\n      }\n      if (iVar7 != -1 || iVar1 != -1) {\n        uVar2 = uVar4;\n      }\n      bVar8 = (uVar4 & 0x7fffff) == 0;\n      if (bVar8) {\n        bVar8 = (uVar2 & 0x7fffff) == 0;\n      }\n      if (bVar8) {\n        bVar8 = uVar4 == uVar2;\n      }\n      if (!bVar8) {\n        uVar4 = uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ uVar2) & 0x7fffffff) != 0) {\n      if (uVar4 == 0) {\n        param_1 = uVar2;\n      }\n      return param_1;\n    }\n    if (param_1 != uVar2) {\n      return 0;\n    }\n    if ((uVar4 & 0xff000000) == 0) {\n      uVar2 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar2 = uVar2 | 0x80000000;\n      }\n      return uVar2;\n    }\n    if (uVar4 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 = uVar4 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar6 = param_4 - uVar4;\n  bVar8 = uVar6 != 0;\n  uVar5 = uVar4;\n  if (bVar8 && uVar4 <= param_4) {\n    uVar5 = uVar4 + uVar6;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    param_1 = param_1 ^ uVar2;\n  }\n  if (bVar8 && uVar4 <= param_4) {\n    uVar2 = uVar2 ^ param_1;\n  }\n  if (param_4 < uVar4) {\n    uVar6 = -uVar6;\n  }\n  if (0x19 < uVar6) {\n    return param_1;\n  }\n  uVar4 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar4 = -uVar4;\n  }\n  uVar3 = uVar2 & 0xffffff | 0x800000;\n  if ((uVar2 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  if (uVar5 == uVar6) {\n    uVar3 = uVar3 ^ 0x800000;\n    if (uVar5 == 0) {\n      uVar4 = uVar4 ^ 0x800000;\n      uVar5 = 1;\n    }\n    else {\n      uVar6 = uVar6 - 1;\n    }\n  }\n  uVar4 = uVar4 + ((int)uVar3 >> (uVar6 & 0xff));\n  uVar3 = uVar3 << (0x20 - uVar6 & 0xff);\n  param_1 = uVar4 & 0x80000000;\n  if ((int)uVar4 < 0) {\n    bVar8 = uVar3 != 0;\n    uVar3 = -uVar3;\n    uVar4 = -uVar4 - (uint)bVar8;\n  }\n  if (uVar4 < 0x800000) {\n    uVar2 = uVar3 & 0x80000000;\n    uVar3 = uVar3 << 1;\n    uVar4 = uVar4 * 2 + (uint)(uVar2 != 0);\n    uVar2 = uVar5 - 2;\n    if (uVar5 - 1 == 0 || uVar4 < 0x800000) {\n      iVar7 = count_leading_zeroes(uVar4);\n      uVar6 = iVar7 - 8;\n      uVar4 = uVar4 << (uVar6 & 0xff);\n      if ((int)uVar2 < (int)uVar6) {\n        uVar4 = uVar4 >> (-(uVar2 - uVar6) & 0xff);\n      }\n      else {\n        uVar4 = uVar4 + (uVar2 - uVar6) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar2 = uVar5 - 1;\n    if (0xffffff < uVar4) {\n      uVar2 = uVar4 & 1;\n      uVar4 = uVar4 >> 1;\n      uVar3 = (uint)(uVar2 != 0) << 0x1f | uVar3 >> 1;\n      uVar2 = uVar5;\n      if (0xfd < uVar5) goto LAB_08008e12;\n    }\n  }\n  uVar4 = uVar4 + uVar2 * 0x800000 + (uint)(0x7fffffff < uVar3);\n  if (uVar3 == 0x80000000) {\n    uVar4 = uVar4 & 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cd8",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08002408",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cd8"
        },
        "FUN_08007930": {
            "renaming": {
                "FUN_08007930": "process_data_08007930",
                "puVar1": "data_ptr",
                "uVar2": "new_data",
                "uVar3": "old_data",
                "uVar4": "data_mask",
                "iVar5": "data_index"
            },
            "code": "void process_data_08007930(void)\n{\n  uint32_t *data_ptr;\n  uint32_t new_data;\n  uint32_t old_data;\n  int data_index;\n  data_ptr = PTR_DAT_080079b8;\n  if (*(int *)PTR_DAT_080079bc != 0) {\n    data_index = *(int *)(PTR_DAT_080079b8 + 0x14);\n    new_data = get_new_data();\n    *(uint32_t *)(data_ptr + data_index * 4) = new_data;\n    if (*(int *)(data_ptr + 0x14) == 3) {\n      data_index = 0;\n    }\n    else {\n      data_index = *(int *)(data_ptr + 0x14) + 1;\n    }\n    *(int *)(data_ptr + 0x14) = data_index;\n    old_data = get_old_data();\n    if (old_data != *(uint32_t *)(data_ptr + 0x10)) {\n      old_data = *(uint32_t *)(data_ptr + 0x10);\n      if ((~old_data & new_data) != 0) {\n        process_deleted_data(~old_data & new_data);\n      }\n      if ((~new_data & old_data) != 0) {\n        process_new_data(~new_data & old_data);\n      }\n      *(uint32_t *)(data_ptr + 0x10) = new_data;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08007884",
                "FUN_08007520",
                "FUN_080074c8",
                "FUN_080078f4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007930",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "process_data_08007930"
        },
        "FUN_080082ba": {
            "renaming": {
                "FUN_080082ba": "do_nothing_080082ba"
            },
            "code": "\nvoid do_nothing_080082ba(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080082ba",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_080082ba"
        },
        "FUN_08000188": {
            "renaming": {
                "FUN_08000188": "check_if_first_run_08000188",
                "param_1": "input_string",
                "*PTR_DAT_080001a0": "is_first_run",
                "DAT_080001a4": "is_not_first_run",
                "PTR_FUN_080001a8": "default_function"
            },
            "code": "char* check_if_first_run_08000188(char* param_1)\\n{\\n  if (**PTR_DAT_080001a0 == \"\\0\") {\\n    if (DAT_080001a4 != 0) {\\n      param_1 = PTR_FUN_080001a8;\\n    }\\n    **PTR_DAT_080001a0 = 1;\\n  }\\n  return param_1;\\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000188",
            "calling": [],
            "imported": false,
            "current_name": "check_if_first_run_08000188"
        },
        "FUN_080082d0": {
            "renaming": {
                "FUN_080082d0": "FUNC_080082d0"
            },
            "code": "\nulonglong FUNC_080082d0(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 = param_4 ^ 0x80000000;\n  uVar9 = param_2 << 1;\n  param_4 = param_4 << 1;\n  bVar13 = ((param_2 ^ uVar6) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar9 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (param_4 | param_3) == 0;\n  }\n  iVar8 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar8 == -1;\n  }\n  iVar1 = (int)param_4 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar8 == -1 || iVar1 == -1) {\n      uVar9 = uVar6;\n      uVar11 = param_3;\n      if (iVar8 == -1) {\n        uVar9 = param_2;\n        uVar11 = param_1;\n      }\n      if (iVar8 != -1 || iVar1 != -1) {\n        param_3 = uVar11;\n        uVar6 = uVar9;\n      }\n      bVar14 = (uVar11 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | uVar6 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == uVar6;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar9 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != uVar6) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar6 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 = uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  param_4 = param_4 >> 0x15;\n  uVar11 = param_4 - uVar9;\n  bVar14 = uVar11 != 0;\n  if (param_4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = param_1;\n  uVar7 = param_2;\n  if (bVar14 && uVar9 <= param_4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = param_3;\n    uVar7 = uVar6;\n    param_3 = param_1;\n    uVar6 = param_2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 = uVar7 & 0xfffff | 0x100000;\n  if ((uVar7 & 0x80000000) != 0) {\n    bVar14 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)bVar14;\n  }\n  uVar7 = uVar6 & 0xfffff | 0x100000;\n  if ((uVar6 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar7 = -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 == uVar11) {\n    uVar7 = uVar7 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  uVar6 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = param_3 << (uVar6 & 0xff);\n    param_3 = param_3 >> (uVar11 & 0xff);\n    uVar3 = uVar10 + param_3;\n    uVar5 = uVar7 << (uVar6 & 0xff);\n    uVar6 = uVar3 + uVar5;\n    uVar4 = uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 = uVar7 << (-uVar11 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    uVar7 = (int)uVar7 >> (uVar11 - 0x20 & 0xff);\n    uVar6 = uVar10 + uVar7;\n    uVar4 = uVar4 + ((int)uVar7 >> 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    bVar14 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -uVar6;\n    uVar6 = -(uint)!bVar14 - uVar6;\n    uVar11 = -(uint)(bVar14 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      bVar2 = (byte)uVar6;\n      uVar6 = (uint)(uVar10 != 0) << 0x1f | uVar6 >> 1;\n      uVar12 = (uint)(bVar2 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      bVar14 = (uVar6 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = uVar6 * 2;\n  bVar14 = CARRY4(uVar6,uVar6);\n  uVar6 = uVar6 * 2 + (uint)bVar13;\n  uVar11 = uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 = uVar9 - 2;\n  if (uVar9 - 1 != 0 && 0xfffff < uVar11) goto LAB_080083e0;\n  uVar7 = uVar6;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    uVar7 = 0;\n    uVar9 = uVar6;\n  }\n  iVar8 = count_leading_zeroes(uVar9);\n  if (uVar11 == 0) {\n    iVar8 = iVar8 + 0x20;\n  }\n  uVar11 = iVar8 - 0xb;\n  bVar15 = SBORROW4(uVar11,0x20);\n  uVar6 = iVar8 - 0x2b;\n  bVar14 = (int)uVar6 < 0;\n  bVar13 = uVar6 == 0;\n  if ((int)uVar11 < 0x20) {\n    bVar15 = SCARRY4(uVar6,0xc);\n    iVar8 = iVar8 + -0x1f;\n    bVar14 = iVar8 < 0;\n    bVar13 = iVar8 == 0;\n    uVar6 = uVar11;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar7 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - iVar8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar12 = 0x20 - uVar6;\n  }\n  uVar9 = uVar9 << (uVar6 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar9 = uVar9 | uVar7 >> (uVar12 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 << (uVar6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 = ~(uVar10 - uVar11);\n  if ((int)uVar6 < 0x1f) {\n    iVar8 = uVar6 - 0x13;\n    if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 >> (0x20 - (0xcU - iVar8) & 0xff) | uVar9 << (0xcU - iVar8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar6 = uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 >> (uVar6 & 0xff),\n                    uVar7 >> (uVar6 & 0xff) | uVar9 << (0x20 - uVar6 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (uVar6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348"
            ],
            "imported": false,
            "current_name": "FUNC_080082d0"
        },
        "FUN_08009318": {
            "renaming": {
                "FUN_08009318": "calculate_result_08009318",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "iVar1": "calculation_result_1",
                "uVar2": "calculation_result_2",
                "uVar3": "calculation_result_3",
                "bVar4": "is_carry",
                "uVar5": "calculation_result_4",
                "lVar6": "result"
            },
            "code": "long long calculate_result_08009318(uint input_value_1, uint input_value_2, undefined4 param_3, undefined4 param_4)\n{\n    int calculation_result_1;\n    uint calculation_result_2;\n    uint calculation_result_3;\n    bool is_carry;\n    undefined8 calculation_result_4;\n    long long result;\n\n    calculation_result_3 = (input_value_2 << 1) >> 0x15;\n    calculation_result_2 = calculation_result_3 - 0x3ff;\n    if ((int)calculation_result_2 < 0x14) {\n        if ((int)calculation_result_2 < 0) {\n            calculation_result_4 = FUNC_080082d4(input_value_1, input_value_2, DAT_08009400, DAT_08009404, param_4);\n            calculation_result_1 = FUN_08008b60((int)calculation_result_4, (int)((ulonglong)calculation_result_4 >> 0x20), 0, 0);\n            result = CONCAT44(input_value_2, input_value_1);\n            if (calculation_result_1 != 0) {\n                if ((int)input_value_2 < 0) {\n                    result = -0x8000000000000000;\n                }\n                else {\n                    input_value_1 = input_value_1 | input_value_2;\n                    result = CONCAT44(input_value_1, input_value_1);\n                    if (input_value_1 != 0) {\n                        result = (ulonglong)DAT_0800940c << 0x20;\n                    }\n                }\n            }\n        }\n        else {\n            calculation_result_3 = DAT_08009408 >> (calculation_result_2 & 0xff);\n            result = CONCAT44(input_value_2, input_value_1);\n            if ((input_value_2 & calculation_result_3 | input_value_1) != 0) {\n                calculation_result_4 = FUNC_080082d4(input_value_1, input_value_2, DAT_08009400, DAT_08009404, param_4);\n                calculation_result_1 = FUN_08008b60((int)calculation_result_4, (int)((ulonglong)calculation_result_4 >> 0x20), 0, 0);\n                result = CONCAT44(input_value_2, input_value_1);\n                if (calculation_result_1 != 0) {\n                    if (0 < (int)input_value_2) {\n                        input_value_2 = input_value_2 + (0x100000 >> (calculation_result_2 & 0xff));\n                    }\n                    result = (ulonglong)(input_value_2 & ~calculation_result_3) << 0x20;\n                }\n            }\n        }\n    }\n    else if ((int)calculation_result_2 < 0x34) {\n        calculation_result_3 = 0xffffffff >> (calculation_result_3 - 0x413 & 0xff);\n        result = CONCAT44(input_value_2, input_value_1);\n        if ((calculation_result_3 & input_value_1) != 0) {\n            calculation_result_4 = FUNC_080082d4(input_value_1, input_value_2, DAT_08009400, DAT_08009404, param_4);\n            calculation_result_1 = FUN_08008b60((int)calculation_result_4, (int)((ulonglong)calculation_result_4 >> 0x20), 0, 0);\n            result = CONCAT44(input_value_2, input_value_1);\n            if (calculation_result_1 != 0) {\n                if (0 < (int)input_value_2) {\n                    if (calculation_result_2 == 0x14) {\n                        input_value_2 = input_value_2 + 1;\n                    }\n                    else {\n                        calculation_result_2 = 1 << (0x34 - calculation_result_2 & 0xff);\n                        is_carry = CARRY4(calculation_result_2, input_value_1);\n                        input_value_1 = calculation_result_2 + input_value_1;\n                        if (is_carry != false) {\n                            input_value_2 = input_value_2 + 1;\n                        }\n                    }\n                }\n                result = CONCAT44(input_value_2, input_value_1 & ~calculation_result_3);\n            }\n        }\n    }\n    else {\n        result = CONCAT44(input_value_2, input_value_1);\n        if (calculation_result_2 == 0x400) {\n            result = FUNC_080082d4();\n        }\n    }\n    return result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009318",
            "calling": [
                "FUN_08001994",
                "FUN_08003004",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08009318"
        },
        "FUN_080018cc": {
            "renaming": {
                "FUN_080018cc": "update_param_080018cc",
                "param_1": "new_param",
                "DAT_080018f8": "PTR_DATA",
                "PTR_DATA": "PTR_DATA",
                "uint": "unsigned int",
                "mask": "MASK",
                "old_value": "OLD_VALUE",
                "ptr": "PTR"
            },
            "code": "void update_param_080018cc(uint new_param) {\n    uint* ptr = (uint*)(DAT_080018f8 + 0x14);\n    uint old_value = *ptr;\n    uint mask = 0xfffffaaf;\n    *ptr = (new_param | (old_value & mask));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018cc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_param_080018cc"
        },
        "FUN_080079e0": {
            "renaming": {
                "FUN_080079e0": "set_bit_at_position_080079e0",
                "param_1": "position",
                "PTR_08007a0c": "ptr",
                "DAT_08007a0c": "ptr_start_address"
            },
            "code": "void set_bit_at_position_080079e0(byte position) {\n    int* PTR_08007a0c = (int*)(DAT_08007a0c + ((uint)(int)(char)position >> 5) * 4);\n    int bit_mask = 1 << (position & 0x1f);\n    *PTR_08007a0c = bit_mask;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079e0",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080079e0"
        },
        "FUN_08006a58": {
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "bit_position",
                "DAT_08006a88": "array_ptr"
            },
            "code": "void set_bit_in_array_08006a58(uint8_t bit_position){\n    uint32_t* DAT_08006a88 = (uint32_t*)(DAT_08006a88 + (((uint32_t)bit_position >> 5) + 0x40) * 4);\n    uint32_t bit_mask = 1 << (bit_position & 0x1f);\n    *DAT_08006a88 = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a58",
            "calling": [
                "FUN_08006dc4"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_08006a58"
        },
        "FUN_08005a84": {
            "renaming": {
                "FUN_08005a84": "get_value_from_pointer_08005a84",
                "undefined4": "int",
                "PTR_DAT_08005a94": "value_pointer",
                "*": "",
                "return": "return",
                ";": "",
                "\n": "",
                "(": "",
                ")": "",
                " ": "",
                "{": "",
                "}": ""
            },
            "code": "int get_value_from_pointer_08005a84() {\n    int* PTR_DAT_08005a94 = (int*) PTR_DAT_08005a94;\n    return *PTR_DAT_08005a94;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a84",
            "calling": [
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08007756",
                "FUN_08005cec",
                "FUN_08000268"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_08005a84"
        },
        "FUN_08008b10": {
            "renaming": {
                "FUN_08008b10": "is_input_not_null_08008b10",
                "in_ZR": "input_char",
                "FUN_08008b00": "get_input_char"
            },
            "code": "bool is_input_not_null_08008b10(void)\\n{\\n  char input_char;\\n  input_char = get_input_char();\\n  return input_char != \"\\0\";\\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b10",
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "is_input_not_null_08008b10"
        },
        "FUN_08004e30": {
            "renaming": {
                "FUN_08004e30": "FUNC_08004e30"
            },
            "code": "\nundefined4 FUNC_08004e30(int param_1,uint param_2)\n\n{\n  undefined uVar1;\n  undefined2 uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  \n  switch(param_1) {\n  case 0:\n  case 1:\n  case 2:\n    iVar4 = FUN_0800923c(param_2,0);\n    if (iVar4 != 0) {\n      return 8;\n    }\n    *(uint *)(PTR_DAT_080051a8 + param_1 * 4) = param_2;\n    break;\n  case 3:\n    iVar4 = FUN_08009228(param_2,DAT_080051ac);\n    if (iVar4 != 0) {\n      return 9;\n    }\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0xd] = uVar1;\n    break;\n  case 4:\n    *(uint *)(PTR_DAT_080051a8 + 0x10) = param_2;\n    break;\n  case 5:\n    *(uint *)(PTR_DAT_080051a8 + 0x14) = param_2;\n    break;\n  case 6:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x18) = uVar2;\n    break;\n  case 7:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3c] = uVar1;\n    break;\n  case 8:\n    uVar3 = FUNC_08008eec(param_2,DAT_080051b0);\n    uVar3 = FUNC_08008eec(uVar3,DAT_080051b0);\n    *(undefined4 *)(PTR_DAT_080051a8 + 0x20) = uVar3;\n    break;\n  case 9:\n    *(uint *)(PTR_DAT_080051a8 + 0x24) = param_2 & 0x7fffffff;\n    break;\n  case 10:\n    *(uint *)(PTR_DAT_080051a8 + 0x1c) = param_2;\n    break;\n  case 0xb:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3e] = uVar1;\n    break;\n  case 0xc:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar1 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_DAT_080051a8[0x3d] = uVar1;\n    break;\n  case 0xd:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 1;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfe;\n    }\n    break;\n  case 0xe:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 2;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfd;\n    }\n    break;\n  case 0xf:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 4;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xfb;\n    }\n    break;\n  case 0x10:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 8;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    iVar4 = FUN_08009214(param_2,0);\n    if (iVar4 == 0) {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] | 0x10;\n    }\n    else {\n      PTR_DAT_080051a8[0x28] = PTR_DAT_080051a8[0x28] & 0xef;\n    }\n    break;\n  case 0x12:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x2a) = uVar2;\n    break;\n  case 0x13:\n    *(uint *)(PTR_DAT_080051a8 + 0x2c) = param_2;\n    break;\n  case 0x14:\n    *(uint *)(PTR_DAT_080051a8 + 0x30) = param_2;\n    break;\n  case 0x15:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009654((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x34) = uVar2;\n    break;\n  case 0x16:\n    *(uint *)(PTR_DAT_080051a8 + 0x38) = param_2;\n    break;\n  case 0x17:\n    uVar5 = FUN_08008590(param_2);\n    uVar5 = FUN_08009798((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    uVar2 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    *(undefined2 *)(PTR_DAT_080051a8 + 0x1a) = uVar2;\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "called": [
                "FUN_08008590",
                "FUN_0800192c",
                "FUN_08009214",
                "FUN_08009798",
                "FUN_08008bf0",
                "FUN_08009228",
                "FUN_08004c2a",
                "FUN_0800923c",
                "FUN_08009654",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08004e30",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_08004e30"
        },
        "FUN_08008c30": {
            "renaming": {
                "FUN_08008c30": "calculate_float_value_08008c30",
                "param_1": "exponent_bits",
                "param_2": "fraction_bits",
                "uVar1": "result",
                "uVar2": "exponent",
                "uVar3": "biased_exponent",
                "in_r12": "biased_exponent_temp",
                "bVar4": "is_result_zero",
                "bVar5": "is_exponent_valid",
                "SCARRY4": "SCARRY4",
                "shift_amount": "shift_amount",
                "significand": "significand",
                "fraction": "fraction"
            },
            "code": "uint calculate_float_value_08008c30(uint exponent_bits, uint fraction_bits) {\n  uint exponent = exponent_bits * 2;\n  bool is_exponent_valid = exponent < 0x70000000;\n  uint biased_exponent = exponent + 0x90000000;\n  uint result = biased_exponent;\n  if (!is_exponent_valid) {\n    biased_exponent = exponent + 0x8fe00000;\n    result = biased_exponent;\n  }\n  bool is_result_zero = result == 0;\n  if (!is_exponent_valid && biased_exponent >= 0x200000) {\n    is_result_zero = biased_exponent == 0x1fc00000;\n  }\n  if (((is_exponent_valid || biased_exponent < 0x200000) || 0x1fc00000 < biased_exponent) || is_result_zero) {\n    if ((fraction_bits & 0x40000000) != 0) {\n      if (((int)exponent >> 0x15 == -1) && ((exponent_bits | fraction_bits << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return fraction_bits & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(exponent + 0x92e00000) < 0 != SCARRY4(biased_exponent,0x2e00000)) {\n      return fraction_bits & 0x80000000;\n    }\n    uint shift_amount = 0x18 - (exponent + 0x92e00000 >> 0x15);\n    uint significand = exponent_bits >> (shift_amount & 0xff);\n    if (exponent_bits << (0x20 - shift_amount & 0xff) != 0) {\n      significand = significand | 1;\n    }\n    uint fraction = fraction_bits & 0x1fffff | 0x100000;\n    exponent_bits = significand | fraction << (0x20 - shift_amount & 0xff);\n    fraction = (fraction >> (shift_amount & 0xff)) << 1;\n  }\n  result = (fraction_bits & 0x80000000 | exponent_bits >> 0x1d) + fraction * 4 + (uint)(0x7fffffff < exponent_bits * 8);\n  if (exponent_bits * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008c30",
            "calling": [
                "FUN_08001994",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_080044e8",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_float_value_08008c30"
        },
        "FUN_080082d4": {
            "renaming": {
                "FUN_080082d4": "FUNC_080082d4"
            },
            "code": "\nulonglong FUNC_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = param_2 << 1;\n  uVar9 = param_4 << 1;\n  bVar13 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && param_1 == param_3;\n  if (!bVar13 || param_1 != param_3) {\n    bVar14 = (uVar7 | param_1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | param_3) == 0;\n  }\n  iVar6 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar6 == -1;\n  }\n  iVar1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = iVar1 == -1;\n  }\n  if (bVar14) {\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar9 = param_4;\n      uVar7 = param_3;\n      if (iVar6 == -1) {\n        uVar9 = param_2;\n        uVar7 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_3 = uVar7;\n        param_4 = uVar9;\n      }\n      bVar14 = (uVar7 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == param_4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((uVar7 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (param_1 & 0x80000000) != 0;\n      uVar9 = param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - uVar7;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < uVar7) {\n    uVar10 = -uVar10;\n  }\n  uVar8 = param_1;\n  uVar5 = param_2;\n  if (bVar14 && uVar7 <= uVar9) {\n    uVar7 = uVar7 + uVar10;\n    uVar8 = param_3;\n    uVar5 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = uVar8 != 0;\n    uVar8 = -uVar8;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  uVar5 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    bVar14 = param_3 != 0;\n    param_3 = -param_3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == uVar10) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = param_3 << (uVar12 & 0xff);\n    param_3 = param_3 >> (uVar10 & 0xff);\n    uVar3 = uVar8 + param_3;\n    uVar4 = uVar5 << (uVar12 & 0xff);\n    uVar12 = uVar3 + uVar4;\n    uVar9 = uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 = uVar5 << (-uVar10 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = uVar8 + uVar5;\n    uVar9 = uVar9 + ((int)uVar5 >> 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    uVar8 = uVar7 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      bVar2 = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(bVar2 & 1) << 0x1f | uVar11 >> 1;\n      uVar8 = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  uVar8 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 = uVar7 - 2;\n  if (uVar7 - 1 != 0 && 0xfffff < uVar10) goto LAB_080083e0;\n  uVar5 = uVar12;\n  uVar7 = uVar10;\n  if (uVar10 == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  iVar6 = count_leading_zeroes(uVar7);\n  if (uVar10 == 0) {\n    iVar6 = iVar6 + 0x20;\n  }\n  uVar12 = iVar6 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = iVar6 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    iVar6 = iVar6 + -0x1f;\n    bVar14 = iVar6 < 0;\n    bVar13 = iVar6 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - iVar6 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  uVar7 = uVar7 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (uVar10 & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar12 <= (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 = ~(uVar8 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    iVar6 = uVar10 - 0x13;\n    if (iVar6 != 0 && iVar6 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 >> (0x20 - (0xcU - iVar6) & 0xff) | uVar7 << (0xcU - iVar6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 >> (uVar10 & 0xff),\n                    uVar5 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080082d4",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_08009798",
                "FUN_0800a348",
                "FUN_08009654"
            ],
            "imported": false,
            "current_name": "FUNC_080082d4"
        },
        "FUN_08007bf0": {
            "renaming": {
                "FUN_08007bf0": "update_data_08007bf0",
                "param_1": "data_value",
                "_DAT_4000002c": "PTR_DAT_4000002c",
                "_DAT_40000024": "PTR_DAT_40000024"
            },
            "code": "void update_data_08007bf0(uint32_t data_value) {\n  _DAT_4000002c = data_value;\n  if (data_value <= _DAT_40000024) {\n    _DAT_40000024 = data_value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bf0",
            "calling": [
                "FUN_08005324"
            ],
            "imported": false,
            "current_name": "update_data_08007bf0"
        },
        "FUN_08008590": {
            "renaming": {
                "FUN_08008590": "convert_uint64_to_fixed_point_08008590",
                "param_1": "value",
                "param_4": "fractional_bits",
                "uVar1": "sign_bit",
                "uVar2": "abs_value",
                "uVar3": "integer_part",
                "uVar5": "fractional_part",
                "iVar6": "leading_zeros",
                "uVar7": "shift_amount",
                "bVar8": "less_than_zero",
                "bVar9": "equal_to_zero",
                "bVar10": "greater_than_zero"
            },
            "code": "ulonglong convert_uint64_to_fixed_point_08008590(uint64_t value, uint32_t fractional_bits) {\n  uint64_t sign_bit = (uint64_t)((value & 0x8000000000000000) != 0) << 63;\n  uint64_t abs_value = (value ^ sign_bit);\n  uint32_t integer_part = (uint32_t)(abs_value >> fractional_bits);\n  uint32_t fractional_part = (uint32_t)((abs_value << (64 - fractional_bits)) >> 32);\n  return (sign_bit | ((uint64_t)integer_part << 32) | fractional_part);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008590",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_0800056c",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "convert_uint64_to_fixed_point_08008590"
        },
        "FUN_08007ad0": {
            "renaming": {
                "FUN_08007ad0": "initialize_data_section_08007ad0",
                "_DAT_40000000": "data_section_ptr",
                "_DAT_40000004": "data_section_ptr+1",
                "_DAT_40000008": "data_section_ptr+2",
                "_DAT_4000000c": "data_section_ptr+3",
                "_DAT_40000010": "data_section_ptr+4",
                "_DAT_40000018": "data_section_ptr+6",
                "_DAT_4000001c": "data_section_ptr+7",
                "_DAT_40000020": "data_section_ptr+8",
                "_DAT_40000024": "data_section_ptr+9",
                "_DAT_40000028": "*(data_section_ptr+10)",
                "_DAT_4000002c": "data_section_ptr+11",
                "_DAT_40000034": "data_section_ptr+13",
                "_DAT_40000038": "data_section_ptr+14",
                "_DAT_4000003c": "data_section_ptr+15",
                "_DAT_40000040": "data_section_ptr+16",
                "_DAT_40000048": "data_section_ptr+18",
                "_DAT_4000004c": "data_section_ptr+19",
                "FUN_08007a10": "set_initial_values",
                "FUN_08007a70": "set_initial_values",
                "PTR_DAT_08007b68": "num_of_elements_ptr",
                "DAT_08007b6c": "num_of_elements"
            },
            "code": "void initialize_data_section_08007ad0(void)\n{\n  uint32_t* _DAT_40000000 = (uint32_t*)0x40000000;\n  *_DAT_40000000 = 0;\n  *(_DAT_40000004) = 0;\n  *(_DAT_40000008) = 0;\n  *(_DAT_4000000c) = 0;\n  *(_DAT_40000010) = 0;\n  *(_DAT_40000018) = 0;\n  *(_DAT_4000001c) = 0;\n  *(_DAT_40000020) = 0;\n  *(_DAT_40000024) = 0;\n  _DAT_40000028 = (uint32_t)((uint64_t)DAT_08007b6c * (uint64_t)*((uint32_t*)PTR_DAT_08007b68) >> 0x38) - 1;\n  *(_DAT_4000002c) = 0;\n  *(_DAT_40000034) = 0;\n  *(_DAT_40000038) = 0;\n  *(_DAT_4000003c) = 0;\n  *(_DAT_40000040) = 0;\n  *(_DAT_40000048) = 0;\n  *(_DAT_4000004c) = 0;\n  set_initial_values(_DAT_40000000,0,0);\n  return;\n}",
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ad0",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_section_08007ad0"
        },
        "FUN_080005b4": {
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "code": "\nuint FUNC_080005b4(undefined4 param_1)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  undefined8 uVar7;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51 [20];\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  undefined4 local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (PTR_DAT_08000808[1] == '\\x06') {\n    uVar5 = 0xc;\n  }\n  else {\n    local_51[0] = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = DAT_0800080c;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    *PTR_DAT_08000810 = 0;\n    local_2f = 0;\n    while (iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51), iVar3 != 0) {\n      uVar7 = FUN_08008590(local_58);\n      uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[1] = 0;\n          break;\n        case 1:\n          PTR_DAT_08000ca0[1] = 1;\n          break;\n        case 2:\n          PTR_DAT_08000ca0[1] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[1] = 3;\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          PTR_DAT_08000ca0[3] = 1;\n          break;\n        case 0x15:\n          PTR_DAT_08000ca0[3] = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            *PTR_DAT_08000ca0 = 3;\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          PTR_DAT_08000ca0[0x1c] = (char)local_24 + -0x36;\n          break;\n        case 0x50:\n          PTR_DAT_08000ca0[1] = 4;\n          break;\n        case 0x5a:\n          PTR_DAT_08000ca0[4] = 1;\n          break;\n        case 0x5b:\n          PTR_DAT_08000ca0[4] = 0;\n          break;\n        case 0x5c:\n          uVar4 = FUNC_08008eec(local_58,DAT_08000ca4);\n          uVar7 = FUN_08008590(uVar4);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            *PTR_DAT_08000ca0 = 3;\n          }\n          break;\n        case 0x5d:\n          PTR_DAT_08000ca0[2] = 1;\n          break;\n        case 0x5e:\n          PTR_DAT_08000ca0[2] = 0;\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          PTR_DAT_08000ca0[5] = 1;\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          PTR_DAT_08000ca0[5] = 2;\n          break;\n        case 3:\n          PTR_DAT_08000ca0[6] = 1;\n          break;\n        case 4:\n          PTR_DAT_08000ca0[6] = 0xff;\n          break;\n        case 5:\n          PTR_DAT_08000ca0[6] = 0;\n          break;\n        default:\n          *PTR_DAT_08000ca0 = 3;\n          break;\n        case 7:\n          PTR_DAT_08000ca0[7] = 2;\n          break;\n        case 8:\n          PTR_DAT_08000ca0[7] = 1;\n          break;\n        case 9:\n          PTR_DAT_08000ca0[7] = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          *PTR_DAT_08000ca0 = 5;\n        }\n        local_2f = 0;\n      }\n    }\n    if (*PTR_DAT_08000ff0 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51[0] = 0;\nswitchD_08000d18_caseD_47:\n      iVar3 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,local_51);\n      if (iVar3 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar3 = FUN_0800923c(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          if (PTR_DAT_08000ff0[2] == '\\0') {\n            uVar4 = process_data(local_58);\n            *(undefined4 *)(PTR_DAT_08000ff0 + 8) = uVar4;\n          }\n          else {\n            local_2c = process_data(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          *PTR_DAT_08000ff0 = 3;\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar5 = (uint)local_52;\n          uVar4 = process_data(local_58);\n          auStack_70[uVar5 - 0x49] = uVar4;\n          break;\n        case 0x4c:\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = process_data(local_58);\n          break;\n        case 0x53:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case 0x54:\n          iVar3 = FUN_08009228(local_58,0);\n          if (iVar3 != 0) {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          uVar7 = FUN_08008590(local_58);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          uVar2 = FUN_08008bf0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          PTR_DAT_08000ff0[0x18] = uVar2;\n          break;\n        case 0x58:\n          auStack_70[3] = process_data(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = process_data(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = process_data(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      if (*PTR_DAT_08000ff0 == '\\0') {\n        if (PTR_DAT_08000ff4[1] != '\\a') {\n          FUN_0800525c((int)(char)PTR_DAT_08000ff0[6]);\n          FUN_08000220(PTR_DAT_08000ff0[7]);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar3 = FUN_08004d7c(PTR_DAT_08000ff0[0x1c],&local_7c);\n          puVar1 = PTR_DAT_08000ff0;\n          if (iVar3 == 0) {\n            return 10;\n          }\n          *(undefined4 *)(PTR_DAT_08000ff0 + 0x20) = local_7c;\n          *(undefined4 *)(puVar1 + 0x24) = uStack_78;\n          *(undefined4 *)(puVar1 + 0x28) = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar3 = FUN_08009228(local_34,0);\n          if (iVar3 == 0) {\n            if (PTR_DAT_08000ff4[1] != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 6;\n          }\n          break;\n        case '\\x02':\n          uVar7 = FUN_08008590(local_34);\n          uVar7 = FUN_08009798((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              *PTR_DAT_08000ff0 = 6;\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)(byte)PTR_DAT_08001304[0x1c];\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar3 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar3 == 0) {\n                return 10;\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar5 = (uint)local_3a;\n                    uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3a + 2) * 4 + 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar5] = uVar4;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              puVar1 = PTR_DAT_08001304;\n              if (local_24 == (byte)PTR_DAT_08001304[0x1c]) {\n                *(undefined4 *)(PTR_DAT_08001304 + 0x20) = local_94[0];\n                *(undefined4 *)(puVar1 + 0x24) = local_94[1];\n                *(undefined4 *)(puVar1 + 0x28) = local_94[2];\n              }\n            }\n          }\n          else {\n            *PTR_DAT_08000ff0 = 3;\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] =\n                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4);\n              }\n              else if (PTR_DAT_08001304[4] == '\\0') {\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3b + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001304 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3b + 10) * 4 + 4));\n                uVar5 = (uint)local_3b;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],\n                         *(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          }\n          if (local_2e == '\\x05') {\n            iVar3 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          else {\n            iVar3 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar3 == 0) {\n              return 10;\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,*(undefined4 *)(PTR_DAT_08001308 + 0x14),0);\n          puVar1 = PTR_DAT_08001304;\n          *(undefined4 *)(PTR_DAT_08001304 + 0xc) = local_94[3];\n          *(undefined4 *)(puVar1 + 0x10) = local_84;\n          *(undefined4 *)(puVar1 + 0x14) = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,PTR_DAT_0800130c);\n          }\n          else {\n            FUN_08004bf4(6,PTR_DAT_0800130c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            *PTR_DAT_08001304 = 6;\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar4 = FUNC_08008cd8(*(undefined4 *)(PTR_DAT_08001304 + (local_3c + 2) * 4 + 4),\n                                     *(undefined4 *)(PTR_DAT_08001304 + (local_3c + 8) * 4));\n                uVar5 = (uint)local_3c;\n                uVar4 = FUNC_08008cd8(uVar4,auStack_70[local_3c + 3]);\n                *(undefined4 *)(PTR_DAT_08001304 + (uVar5 + 10) * 4 + 4) = uVar4;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(PTR_DAT_08001310,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((PTR_DAT_08001574[2] != '\\0') &&\n             ((iVar3 = FUN_08009228(local_2c,0), iVar3 != 0 && (PTR_DAT_08001574[1] != '\\x04')))) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (((local_2d != '\\0') && (PTR_DAT_08001574[1] != '\\0')) &&\n             (PTR_DAT_08001574[1] != '\\x01')) {\n            *PTR_DAT_08001574 = 6;\n          }\n          if (*PTR_DAT_08001574 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001574;\n          }\n          for (local_3d = 0; puVar1 = PTR_DAT_08001840, local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4);\n            }\n            else if (local_2d == '\\0') {\n              if (PTR_DAT_08001574[4] == '\\0') {\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 2) * 4 + 4));\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n              else {\n                uVar6 = auStack_70[local_3d + 3];\n                uVar4 = FUNC_08008cdc(*(undefined4 *)(PTR_DAT_08001574 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(PTR_DAT_08001574 + (local_3d + 10) * 4 + 4));\n                uVar5 = (uint)local_3d;\n                uVar4 = FUNC_08008cdc(uVar6,uVar4);\n                auStack_70[uVar5 + 3] = uVar4;\n              }\n            }\n          }\n          if ((byte)PTR_DAT_08001574[1] < 5) {\n                    /* WARNING: Could not recover jumptable at 0x08001474. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n            uVar5 = (*(code *)(&switchD_08001474::switchdataD_08001478)[(byte)PTR_DAT_08001574[1]])\n                              ();\n            return uVar5;\n          }\n          if (*PTR_DAT_08001840 != '\\0') {\n            return (uint)(byte)*PTR_DAT_08001840;\n          }\n          *(undefined4 *)(PTR_DAT_08001840 + 0xc) = auStack_70[3];\n          *(undefined4 *)(puVar1 + 0x10) = auStack_70[4];\n          *(undefined4 *)(puVar1 + 0x14) = auStack_70[5];\n        }\n        if (PTR_DAT_08001840[5] != '\\0') {\n          FUN_08002fd4();\n          PTR_DAT_08001848[0x10] = 0;\n          if (PTR_DAT_08001840[5] == '\\x02') {\n            FUN_080025e8();\n          }\n          else {\n            PTR_DAT_08001840[5] = 0;\n          }\n        }\n        uVar5 = (uint)(byte)*PTR_DAT_08001840;\n      }\n      else {\n        uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n      }\n    }\n    else {\n      uVar5 = (uint)(byte)*PTR_DAT_08000ff0;\n    }\n  }\n  return uVar5;\n}\n\n",
            "called": [
                "FUN_08002fd4",
                "FUN_08008590",
                "FUN_08008bf0",
                "FUN_08000220",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08001f00",
                "FUN_080025e8",
                "FUN_08001e98",
                "FUN_08000478",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_0800525c",
                "FUN_08004bf4",
                "FUN_080098d0",
                "FUN_08009228",
                "FUN_0800056c",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08008ba0",
                "FUN_0800184c",
                "FUN_0800923c",
                "FUN_08008894",
                "FUN_08002408"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080005b4",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "FUNC_080005b4"
        },
        "FUN_080039a0": {
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0",
                "FUN_08003980": "initialize_first_component",
                "FUN_08004228": "initialize_second_component"
            },
            "code": "void initialize_program_080039a0(void)\n{\n  initialize_first_component();\n  initialize_second_component();\n  *(undefined4 *)PTR_DAT_080039b8 = 1;\n  return;\n}",
            "called": [
                "FUN_08003980",
                "FUN_08004228"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039a0",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_program_080039a0"
        },
        "FUN_08009204": {
            "renaming": {
                "FUN_08009204": "concat_44_in_64_bit_reg_08009204",
                "param_1": "lower_32_bits",
                "param_2": "upper_32_bits"
            },
            "code": "concat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204fconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_080092048concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204cconcat_44_in_64_bit_reg_08009204oconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204cconcat_44_in_64_bit_reg_08009204aconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092046concat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204bconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204gconcat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204(concat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204fconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204lconcat_44_in_64_bit_reg_08009204oconcat_44_in_64_bit_reg_08009204wconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092043concat_44_in_64_bit_reg_080092042concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204bconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204sconcat_44_in_64_bit_reg_08009204,concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204fconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204dconcat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204pconcat_44_in_64_bit_reg_08009204pconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092043concat_44_in_64_bit_reg_080092042concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204bconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204sconcat_44_in_64_bit_reg_08009204)concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204{concat_44_in_64_bit_reg_08009204\nconcat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204cconcat_44_in_64_bit_reg_08009204aconcat_44_in_64_bit_reg_08009204lconcat_44_in_64_bit_reg_08009204lconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204fconcat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204cconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204oconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204aconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092040concat_44_in_64_bit_reg_08009204xconcat_44_in_64_bit_reg_080092040concat_44_in_64_bit_reg_080092048concat_44_in_64_bit_reg_080092040concat_44_in_64_bit_reg_080092040concat_44_in_64_bit_reg_080092049concat_44_in_64_bit_reg_080092041concat_44_in_64_bit_reg_080092049concat_44_in_64_bit_reg_08009204cconcat_44_in_64_bit_reg_08009204(concat_44_in_64_bit_reg_08009204)concat_44_in_64_bit_reg_08009204;concat_44_in_64_bit_reg_08009204\nconcat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204nconcat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204Cconcat_44_in_64_bit_reg_08009204Oconcat_44_in_64_bit_reg_08009204Nconcat_44_in_64_bit_reg_08009204Cconcat_44_in_64_bit_reg_08009204Aconcat_44_in_64_bit_reg_08009204Tconcat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_080092044concat_44_in_64_bit_reg_08009204(concat_44_in_64_bit_reg_08009204uconcat_44_in_64_bit_reg_08009204pconcat_44_in_64_bit_reg_08009204pconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092043concat_44_in_64_bit_reg_080092042concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204bconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204sconcat_44_in_64_bit_reg_08009204,concat_44_in_64_bit_reg_08009204 concat_44_in_64_bit_reg_08009204lconcat_44_in_64_bit_reg_08009204oconcat_44_in_64_bit_reg_08009204wconcat_44_in_64_bit_reg_08009204econcat_44_in_64_bit_reg_08009204rconcat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_080092043concat_44_in_64_bit_reg_080092042concat_44_in_64_bit_reg_08009204_concat_44_in_64_bit_reg_08009204bconcat_44_in_64_bit_reg_08009204iconcat_44_in_64_bit_reg_08009204tconcat_44_in_64_bit_reg_08009204sconcat_44_in_64_bit_reg_08009204)concat_44_in_64_bit_reg_08009204;concat_44_in_64_bit_reg_08009204\nconcat_44_in_64_bit_reg_08009204}concat_44_in_64_bit_reg_08009204",
            "called": [
                "FUN_0800919c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009204",
            "calling": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_0800923c"
            ],
            "imported": false,
            "current_name": "concat_44_in_64_bit_reg_08009204"
        },
        "FUN_080029d8": {
            "renaming": {
                "FUN_080029d8": "process_data_080029d8",
                "param_1": "input",
                "param_2": "data_ptr",
                "param_3": "metadata_ptr",
                "iVar1": "result",
                "uVar2": "temp_var_1",
                "uVar3": "temp_var_2"
            },
            "code": "void process_data_080029d8(undefined4 input, int param_2, int param_3) {\n  int result;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    result = FUN_08009214(*(undefined4 *)(param_2 + 0x18), *(undefined4 *)(param_2 + 0x1c));\n    if (result == 0) {\n      if (*(char *)(param_2 + 0x25) == '\\0') {\n        result = FUN_08009264(*(undefined4 *)(param_2 + 0x1c), *(undefined4 *)(param_3 + 0x18));\n        if (result != 0) {\n          uVar3 = *(undefined4 *)(param_2 + 0x1c);\n          uVar2 = FUN_08002978(*(uint *)(input + 0x20) ^ 0x80000000, *(undefined4 *)(param_3 + 0x18), *(undefined4 *)(param_2 + 0x20));\n          result = FUN_08009228(uVar3, uVar2);\n          if (result != 0) {\n            uVar2 = *(undefined4 *)(param_2 + 0x1c);\n          }\n        }\n        else {\n          uVar2 = *(undefined4 *)(param_2 + 0x1c);\n        }\n        *(undefined4 *)(param_2 + 0x18) = uVar2;\n      }\n      else {\n        *(undefined4 *)(param_2 + 0x18) = *(undefined4 *)(param_2 + 0x1c);\n      }\n      *(undefined *)(param_2 + 0x24) = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080029d8",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "process_data_080029d8"
        },
        "FUN_08007c5e": {
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value",
                "_DAT_40000038": "global_variable"
            },
            "code": "void set_global_variable_08007c5e(int value)\n{\n    _DAT_40000038 = value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c5e",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_global_variable_08007c5e"
        },
        "FUN_08005760": {
            "renaming": {
                "FUN_08005760": "execute_function_with_pointer_offset_08005760",
                "PTR_DAT_08005774": "PTR_DAT_08005774",
                "execute_function_with_value": "execute_function_with_value",
                "undefined2": "undefined2"
            },
            "code": "void execute_function_with_pointer_offset_08005760(void)\n{\n  int offset = 0x18;\n  int* ptr = (int*)(PTR_DAT_08005774 + offset);\n  int value = *ptr;\n  execute_function_with_value(value);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005760",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_with_pointer_offset_08005760"
        },
        "FUN_08008b24": {
            "renaming": {
                "FUN_08008b24": "is_end_of_input_08008b24",
                "in_CY": "input_char",
                "FUN_08008b00": "read_input"
            },
            "code": "bool is_end_of_input_08008b24(void)\n{\n  char input_char;\n  read_input();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b24",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08008b24"
        },
        "FUN_08002814": {
            "renaming": {
                "FUN_08002814": "do_nothing_08002814"
            },
            "code": "\nvoid do_nothing_08002814(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002814",
            "calling": [
                "FUN_08001d4c",
                "FUN_08004148",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "do_nothing_08002814"
        },
        "FUN_0800587c": {
            "renaming": {
                "FUN_0800587c": "update_data_if_condition_met_0800587c",
                "PTR_DAT_0800589c": "data",
                "condition_met": "data[1] == '\\x03'",
                "data[1]": "data[1]",
                "data[16]": "data[16]"
            },
            "code": "void update_data_if_condition_met_0800587c(void)\n{\n    if (condition_met) {\n        PTR_DAT_0800589c[1] = 4;\n        PTR_DAT_0800589c[16] = 0;\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800587c",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_data_if_condition_met_0800587c"
        },
        "FUN_08008a02": {
            "renaming": {
                "FUN_08008a02": "calculate_result_08008a02",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "unaff_r4": "temp_2",
                "uVar2": "temp_3",
                "uVar3": "temp_4",
                "in_r12": "temp_5",
                "bVar4": "check_1"
            },
            "code": "ulonglong calculate_result_08008a02(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  bool check_1;\n  bool check_2;\n  bool check_3;\n  temp_1 = input_4 >> 0x14;\n  temp_2 = input_3;\n  temp_3 = input_4;\n  temp_4 = input_2;\n  temp_5 = input_1;\n  temp_6 = 0x80000000;\n  temp_7 = 0x100000;\n  check_1 = false;\n  check_2 = false;\n  check_3 = false;\n  if (input_4 != input_3 || temp_1 != input_3)\n  {\n    if (input_4 == input_3)\n    {\n      if ((input_1 | input_2 << 0xc) == 0)\n      {\n        temp_5 = input_3;\n        temp_3 = input_4;\n        if (temp_1 != input_3)\n        {\n            return (ulonglong)((input_2 ^ input_4) & temp_6 | 0x7ff00000) << 0x20;\n        }\n      }\n    }\n    else if (temp_1 == input_3)\n    {\n      temp_5 = input_3;\n      temp_3 = input_4;\n      if ((input_3 | input_4 << 0xc) == 0)\n      {\n        return (ulonglong)((input_2 ^ input_4) & temp_6) << 0x20;\n      }\n    }\n    else\n    {\n      check_1 = (input_1 | input_2 << 1) == 0;\n      if (!check_1)\n      {\n        check_2 = (input_3 | input_4 << 1) == 0;\n      }\n      if (!check_1 && !check_2)\n      {\n        if (input_4 == 0)\n        {\n          temp_4 = input_2 & temp_6;\n          do\n          {\n            temp_1 = input_1 & temp_6;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(temp_1 != 0);\n          } while ((input_2 & temp_7) == 0);\n          input_2 = input_2 | temp_4;\n          if (temp_1 != 0)\n          {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do\n        {\n          temp_3 = input_3 << 1;\n          temp_4 = input_4 * 2 + (uint)((input_3 & temp_6) != 0);\n          input_3 = temp_3;\n          input_4 = temp_4;\n        } while ((temp_4 & temp_7) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0)\n      {\n        return (ulonglong)((input_2 ^ input_4) & temp_6 | 0x7ff00000) << 0x20;\n      }\n      if ((input_3 | input_4 << 1) != 0)\n      {\n        return (ulonglong)((input_2 ^ input_4) & temp_6) << 0x20;\n      }\n    }\n  }\n  return CONCAT44(temp_2,temp_5) | 0x7ff8000000000000;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a02",
            "calling": [
                "FUN_08008894"
            ],
            "imported": false,
            "current_name": "calculate_result_08008a02"
        },
        "FUN_0800369c": {
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "str",
                "local_c": "current_char",
                "*local_c": "*current_char",
                "FUN_08008250": "process_character"
            },
            "code": "void process_string_0800369c(char *str)\n{\n  char *current_char = str;\n  while (*current_char != '\\0') {\n    process_character(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800369c",
            "calling": [
                "FUN_080039bc",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_0800369c"
        },
        "FUN_08005a98": {
            "renaming": {
                "FUN_08005a98": "wait_until_sum_greater_than_param_plus_i_08005a98",
                "param_1": "param",
                "iVar1": "initial_sum",
                "uVar2": "current_value",
                "FUN_08005a84": "get_sum"
            },
            "code": "void wait_until_sum_greater_than_param_plus_i_08005a98(int param) {\n    int initial_sum = get_sum();\n    uint current_value;\n    do {\n        current_value = get_sum();\n    } while (current_value < (uint)(param + initial_sum));\n    return;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a98",
            "calling": [
                "FUN_080002a0"
            ],
            "imported": false,
            "current_name": "wait_until_sum_greater_than_param_plus_i_08005a98"
        },
        "FUN_08008cdc": {
            "renaming": {
                "FUN_08008cdc": "FUNC_08008cdc"
            },
            "code": "\nuint FUNC_08008cdc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  uVar3 = param_1 << 1;\n  bVar7 = uVar3 == 0;\n  if (!bVar7) {\n    param_4 = param_2 << 1;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar3 == param_4;\n  }\n  iVar6 = (int)uVar3 >> 0x18;\n  if (!bVar7) {\n    bVar7 = iVar6 == -1;\n  }\n  if (!bVar7) {\n    bVar7 = (int)param_4 >> 0x18 == -1;\n  }\n  if (bVar7) {\n    iVar1 = (int)(param_2 << 1) >> 0x18;\n    if (iVar6 == -1 || iVar1 == -1) {\n      uVar3 = param_2;\n      if (iVar6 == -1) {\n        uVar3 = param_1;\n      }\n      if (iVar6 != -1 || iVar1 != -1) {\n        param_2 = uVar3;\n      }\n      bVar7 = (uVar3 & 0x7fffff) == 0;\n      if (bVar7) {\n        bVar7 = (param_2 & 0x7fffff) == 0;\n      }\n      if (bVar7) {\n        bVar7 = uVar3 == param_2;\n      }\n      if (!bVar7) {\n        uVar3 = uVar3 | 0x400000;\n      }\n      return uVar3;\n    }\n    if (((param_1 ^ param_2) & 0x7fffffff) != 0) {\n      if (uVar3 == 0) {\n        param_1 = param_2;\n      }\n      return param_1;\n    }\n    if (param_1 != param_2) {\n      return 0;\n    }\n    if ((uVar3 & 0xff000000) == 0) {\n      uVar3 = param_1 << 1;\n      if ((param_1 & 0x80000000) != 0) {\n        uVar3 = uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar3 < 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 = param_1 & 0x80000000;\nLAB_08008e12:\n    return param_1 | 0x7f800000;\n  }\n  uVar3 = uVar3 >> 0x18;\n  param_4 = param_4 >> 0x18;\n  uVar5 = param_4 - uVar3;\n  bVar7 = uVar5 != 0;\n  uVar4 = uVar3;\n  if (bVar7 && uVar3 <= param_4) {\n    uVar4 = uVar3 + uVar5;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_1 = param_1 ^ param_2;\n  }\n  if (bVar7 && uVar3 <= param_4) {\n    param_2 = param_2 ^ param_1;\n  }\n  if (param_4 < uVar3) {\n    uVar5 = -uVar5;\n  }\n  if (0x19 < uVar5) {\n    return param_1;\n  }\n  uVar3 = param_1 & 0xffffff | 0x800000;\n  if ((param_1 & 0x80000000) != 0) {\n    uVar3 = -uVar3;\n  }\n  uVar2 = param_2 & 0xffffff | 0x800000;\n  if ((param_2 & 0x80000000) != 0) {\n    uVar2 = -uVar2;\n  }\n  if (uVar4 == uVar5) {\n    uVar2 = uVar2 ^ 0x800000;\n    if (uVar4 == 0) {\n      uVar3 = uVar3 ^ 0x800000;\n      uVar4 = 1;\n    }\n    else {\n      uVar5 = uVar5 - 1;\n    }\n  }\n  uVar3 = uVar3 + ((int)uVar2 >> (uVar5 & 0xff));\n  uVar2 = uVar2 << (0x20 - uVar5 & 0xff);\n  param_1 = uVar3 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    bVar7 = uVar2 != 0;\n    uVar2 = -uVar2;\n    uVar3 = -uVar3 - (uint)bVar7;\n  }\n  if (uVar3 < 0x800000) {\n    uVar5 = uVar2 & 0x80000000;\n    uVar2 = uVar2 << 1;\n    uVar3 = uVar3 * 2 + (uint)(uVar5 != 0);\n    uVar5 = uVar4 - 2;\n    if (uVar4 - 1 == 0 || uVar3 < 0x800000) {\n      iVar6 = count_leading_zeroes(uVar3);\n      uVar4 = iVar6 - 8;\n      uVar3 = uVar3 << (uVar4 & 0xff);\n      if ((int)uVar5 < (int)uVar4) {\n        uVar3 = uVar3 >> (-(uVar5 - uVar4) & 0xff);\n      }\n      else {\n        uVar3 = uVar3 + (uVar5 - uVar4) * 0x800000;\n      }\n      return uVar3 | param_1;\n    }\n  }\n  else {\n    uVar5 = uVar4 - 1;\n    if (0xffffff < uVar3) {\n      uVar5 = uVar3 & 1;\n      uVar3 = uVar3 >> 1;\n      uVar2 = (uint)(uVar5 != 0) << 0x1f | uVar2 >> 1;\n      uVar5 = uVar4;\n      if (0xfd < uVar4) goto LAB_08008e12;\n    }\n  }\n  uVar3 = uVar3 + uVar5 * 0x800000 + (uint)(0x7fffffff < uVar2);\n  if (uVar2 == 0x80000000) {\n    uVar3 = uVar3 & 0xfffffffe;\n  }\n  return uVar3 | param_1;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008cdc",
            "calling": [
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08002978",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08008cdc"
        },
        "FUN_080044e8": {
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "index",
                "uVar2": "temp",
                "uVar3": "value",
                "auStack_18": "array",
                "local_a": "index",
                "local_9": "count"
            },
            "code": "void process_data_080044e8(void)\n{\n  int index;\n  undefined4 temp;\n  undefined8 value;\n  undefined4 array[3];\n  byte count = 0;\n  while( count < 8 ) {\n    if (count > 7) {\n      print_message(PTR_s__G92__080046c8);\n      for (index = 0; index < 3; index++) {\n        if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n          do_something(*(undefined4 *)(PTR_DAT_080046cc + (index + 10) * 4 + 4));\n        }\n        else {\n          value = calculate_value(*(undefined4 *)(PTR_DAT_080046cc + (index + 10) * 4 + 4));\n          value = perform_operation((int)value,(int)((ulonglong)value >> 0x20),DAT_08004690,DAT_08004694);\n          temp = get_result((int)value,(int)((ulonglong)value >> 0x20));\n          do_something(temp);\n        }\n        if (index < 2) {\n          print_message(PTR_DAT_080046c0);\n        }\n        else {\n          print_message(PTR_DAT_080046c4);\n        }\n      }\n      return;\n    }\n    if (FUN_08004d7c(count,array) == 0) break;\n    print_message(PTR_DAT_08004698);\n    switch(count) {\n    case 0:\n      print_message(PTR_DAT_0800469c);\n      break;\n    case 1:\n      print_message(PTR_DAT_080046a0);\n      break;\n    case 2:\n      print_message(PTR_DAT_080046a4);\n      break;\n    case 3:\n      print_message(PTR_DAT_080046a8);\n      break;\n    case 4:\n      print_message(PTR_DAT_080046ac);\n      break;\n    case 5:\n      print_message(PTR_DAT_080046b0);\n      break;\n    case 6:\n      print_message(PTR_DAT_080046b4);\n      break;\n    case 7:\n      print_message(PTR_DAT_080046b8);\n    }\n    for (index = 0; index < 3; index++) {\n      if ((PTR_DAT_080046bc[0x28] & 1) == 0) {\n        do_something(array[index]);\n      }\n      else {\n        value = calculate_value(array[index]);\n        value = perform_operation((int)value,(int)((ulonglong)value >> 0x20),DAT_08004690,DAT_08004694);\n        temp = get_result((int)value,(int)((ulonglong)value >> 0x20));\n        do_something(temp);\n      }\n      if (index < 2) {\n        print_message(PTR_DAT_080046c0);\n      }\n      else {\n        print_message(PTR_DAT_080046c4);\n      }\n    }\n    count++;\n  }\n  do_final_task(10);\n  return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080044e8",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080044e8"
        },
        "FUN_08006c9c": {
            "renaming": {
                "FUN_08006c9c": "is_param_valid_08006c9c",
                "param_1": "param",
                "bVar1": "is_valid"
            },
            "code": "bool is_param_valid_08006c9c(int param) {\n  bool is_valid = param < 0x1000000;\n  if (is_valid) {\n    DAT_08006cdc[1] = param - 1;\n    do_something(0xffffffff, 0xf);\n    DAT_08006cdc[2] = 0;\n    *DAT_08006cdc = 7;\n  }\n  return !is_valid;\n}",
            "called": [
                "FUN_08006b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c9c",
            "calling": [
                "FUN_08006d72"
            ],
            "imported": false,
            "current_name": "is_param_valid_08006c9c"
        },
        "FUN_0800a5a0": {
            "renaming": {
                "FUN_0800a5a0": "FUNC_0800a5a0"
            },
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint FUNC_0800a5a0(int param_1,undefined8 *param_2,int param_3,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint *puVar5;\n  undefined4 uVar6;\n  uint **ppuVar7;\n  undefined4 uVar8;\n  int iVar9;\n  undefined4 *puVar10;\n  undefined4 uVar11;\n  uint uVar12;\n  uint *puVar13;\n  int iVar14;\n  int iVar15;\n  undefined8 *puVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  undefined8 *puVar19;\n  undefined4 uVar20;\n  int iVar21;\n  undefined8 *puVar22;\n  undefined4 *puVar23;\n  bool bVar24;\n  undefined8 uVar25;\n  undefined8 uVar26;\n  undefined8 uVar27;\n  undefined8 uVar28;\n  ulonglong uVar29;\n  undefined8 *local_284;\n  int local_280;\n  int local_270;\n  int local_26c;\n  uint *local_260 [2];\n  uint local_258 [20];\n  undefined8 uStack_208;\n  undefined8 local_168;\n  int local_160 [38];\n  undefined8 uStack_c8;\n  \n  uVar28 = CONCAT44(param_5,param_5);\n  iVar15 = *(int *)(PTR_DAT_0800a894 + param_5 * 4);\n  iVar9 = param_4 + -1;\n  local_260[1] = (uint *)param_2;\n  if (param_3 + 0x14 < 0 == SCARRY4(param_3,0x14)) {\n    local_26c = (int)((longlong)DAT_0800a898 * (longlong)(param_3 + -3) >> 0x22) -\n                (param_3 + -3 >> 0x1f);\n    local_270 = (local_26c + 1) * -0x18;\n  }\n  else {\n    local_270 = -0x18;\n    local_26c = 0;\n  }\n  local_270 = param_3 + local_270;\n  iVar17 = local_26c - iVar9;\n  if (-1 < iVar15 + iVar9) {\n    iVar21 = iVar15 + iVar9 + 1 + iVar17;\n    puVar16 = &uStack_208;\n    do {\n      while (iVar17 < 0) {\n        iVar17 = iVar17 + 1;\n        *(undefined4 *)puVar16 = 0;\n        *(undefined4 *)((int)puVar16 + 4) = 0;\n        puVar16 = puVar16 + 1;\n        if (iVar17 == iVar21) goto LAB_0800a626;\n      }\n      uVar26 = FUN_0800856c(*(undefined4 *)(param_6 + iVar17 * 4));\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar21);\n  }\nLAB_0800a626:\n  puVar10 = (undefined4 *)(param_1 + -8);\n  if (-1 < iVar15) {\n    puVar22 = &uStack_208 + param_4;\n    iVar17 = iVar9;\n    puVar16 = &uStack_c8;\n    do {\n      if (iVar9 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        puVar23 = puVar10;\n        puVar19 = puVar22;\n        do {\n          puVar18 = puVar23 + 2;\n          uVar25 = FUNC_08008640(*puVar18,puVar23[3],*(undefined4 *)(puVar19 + -1),\n                                *(undefined4 *)((int)puVar19 + -4));\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          puVar23 = puVar18;\n          puVar19 = puVar19 + -1;\n        } while (puVar18 != puVar10 + param_4 * 2);\n      }\n      iVar17 = iVar17 + 1;\n      *puVar16 = uVar26;\n      puVar22 = puVar22 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar17 != iVar15 + param_4);\n  }\n  local_260[0] = local_258 + iVar15 + -1;\n  iVar17 = iVar15;\n  do {\n    uVar26 = CONCAT44(*(undefined4 *)((int)&uStack_c8 + iVar17 * 8 + 4),\n                      *(undefined4 *)(&uStack_c8 + iVar17));\n    if (0 < iVar17) {\n      puVar16 = &uStack_c8 + iVar17;\n      puVar5 = local_258;\n      do {\n        uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n        FUNC_08008640((int)uVar26,uVar6,0,DAT_0800a89c);\n        FUN_08008ba0();\n        uVar25 = FUN_0800856c();\n        uVar8 = (undefined4)((ulonglong)uVar25 >> 0x20);\n        uVar27 = FUNC_08008640((int)uVar25,uVar8,0,DAT_0800a8a0);\n        FUNC_080082d0((int)uVar26,uVar6,(int)uVar27,(int)((ulonglong)uVar27 >> 0x20));\n        uVar2 = FUN_08008ba0();\n        puVar22 = puVar16 + -1;\n        uVar6 = *(undefined4 *)puVar22;\n        uVar11 = *(undefined4 *)((int)puVar16 + -4);\n        *puVar5 = uVar2;\n        uVar26 = FUNC_080082d4((int)uVar25,uVar8,uVar6,uVar11);\n        puVar16 = puVar22;\n        puVar5 = puVar5 + 1;\n      } while (puVar22 != &uStack_c8);\n    }\n    uVar26 = FUN_0800b2e8((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),local_270);\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    FUNC_08008640((int)uVar26,uVar8,0,0x3fc00000);\n    uVar25 = FUN_080094c0();\n    uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),0,DAT_0800a8a4);\n    uVar26 = FUNC_080082d0((int)uVar26,uVar8,(int)uVar25,(int)((ulonglong)uVar25 >> 0x20));\n    uVar2 = FUN_08008ba0();\n    uVar25 = FUN_0800856c();\n    uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                          (int)((ulonglong)uVar25 >> 0x20));\n    uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    uVar8 = (undefined4)uVar26;\n    if (local_270 < 1) {\n      if (local_270 == 0) {\n        iVar21 = (int)local_258[iVar17 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      iVar21 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ac3c);\n      if (iVar21 != 0) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          iVar21 = 2;\n          goto LAB_0800a7a4;\n        }\n        iVar21 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      iVar4 = (int)local_258[iVar17 + -1] >> (0x18U - local_270 & 0xff);\n      uVar12 = local_258[iVar17 + -1] - (iVar4 << (0x18U - local_270 & 0xff));\n      iVar21 = (int)uVar12 >> (0x17U - local_270 & 0xff);\n      local_258[iVar17 + -1] = uVar12;\n      uVar2 = uVar2 + iVar4;\njoined_r0x0800a8b8:\n      if (0 < iVar21) {\n        uVar2 = uVar2 + 1;\n        if (iVar17 < 1) {\n          uVar12 = 0;\n        }\n        else {\nLAB_0800a8c8:\n          uVar12 = local_258[0];\n          if (local_258[0] == 0) {\n            if (iVar17 != 1) {\n              puVar5 = local_258;\n              iVar4 = 1;\n              do {\n                puVar5 = puVar5 + 1;\n                uVar12 = *puVar5;\n                if (uVar12 != 0) {\n                  iVar14 = iVar4 + 1;\n                  goto LAB_0800a8e2;\n                }\n                iVar4 = iVar4 + 1;\n              } while (iVar4 != iVar17);\n            }\n          }\n          else {\n            iVar14 = 1;\n            iVar4 = 0;\nLAB_0800a8e2:\n            local_258[iVar4] = 0x1000000 - uVar12;\n            if (iVar14 < iVar17) {\n              uVar12 = local_258[iVar14];\n              puVar5 = local_258 + iVar14;\n              while( true ) {\n                puVar13 = puVar5 + 1;\n                *puVar5 = 0xffffff - uVar12;\n                if (puVar13 == local_258 + iVar17) break;\n                uVar12 = *puVar13;\n                puVar5 = puVar13;\n              }\n            }\n            uVar12 = 1;\n          }\n        }\n        if (0 < local_270) {\n          if (local_270 == 1) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x7fffff;\n          }\n          else if (local_270 == 2) {\n            local_258[iVar17 + -1] = local_258[iVar17 + -1] & 0x3fffff;\n          }\n        }\n        if (iVar21 == 2) {\n          uVar26 = FUNC_080082d0(0,DAT_0800ac38,uVar8,uVar6);\n          if (uVar12 != 0) {\n            uVar25 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n            uVar26 = FUNC_080082d0((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                  (int)((ulonglong)uVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n    iVar4 = FUN_08008b10((int)uVar26,uVar8,0,0);\n    if (iVar4 == 0) {\n      uVar26 = FUN_0800b2e8((int)uVar26,uVar8,-local_270);\n      uVar6 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      uVar8 = (undefined4)uVar26;\n      iVar9 = FUN_08008b4c(uVar8,uVar6,0,DAT_0800ade4);\n      if (iVar9 == 0) {\n        uVar12 = FUN_08008ba0(uVar8,uVar6);\n        local_258[iVar17] = uVar12;\n        iVar4 = iVar17;\n      }\n      else {\n        FUNC_08008640(uVar8,uVar6,0,DAT_0800ade8);\n        uVar12 = FUN_08008ba0();\n        uVar26 = FUN_0800856c();\n        uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),0,DAT_0800ade4);\n        FUNC_080082d0(uVar8,uVar6,(int)uVar26,(int)((ulonglong)uVar26 >> 0x20));\n        uVar3 = FUN_08008ba0();\n        local_270 = local_270 + 0x18;\n        local_258[iVar17] = uVar3;\n        local_258[iVar17 + 1] = uVar12;\n        iVar4 = iVar17 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    iVar4 = iVar17 + -1;\n    if (iVar15 <= iVar4) {\n      uVar12 = 0;\n      puVar5 = local_258 + iVar17 + 0x3fffffff;\n      do {\n        puVar13 = puVar5 + -1;\n        uVar12 = uVar12 | *puVar5;\n        puVar5 = puVar13;\n      } while (puVar13 != local_260[0]);\n      if (uVar12 != 0) break;\n    }\n    if (local_258[iVar15 + -1] == 0) {\n      local_280 = 1;\n      ppuVar7 = local_260 + iVar15;\n      do {\n        puVar5 = *ppuVar7;\n        local_280 = local_280 + 1;\n        ppuVar7 = ppuVar7 + -1;\n      } while (puVar5 == (uint *)0x0);\n      local_280 = iVar17 + local_280;\n    }\n    else {\n      local_280 = iVar17 + 1;\n    }\n    iVar21 = iVar17 + 1;\n    puVar23 = (undefined4 *)(param_6 + (iVar21 + local_26c + 0x3fffffff) * 4);\n    puVar16 = &uStack_208 + iVar17 + param_4;\n    local_284 = &uStack_c8 + iVar21;\n    do {\n      puVar23 = puVar23 + 1;\n      uVar26 = FUN_0800856c(*puVar23);\n      *puVar16 = uVar26;\n      puVar22 = puVar16 + 1;\n      if (iVar9 < 0) {\n        uVar25 = 0;\n      }\n      else {\n        uVar25 = 0;\n        puVar18 = puVar10;\n        while( true ) {\n          puVar16 = puVar16 + -1;\n          puVar1 = puVar18 + 2;\n          uVar26 = FUNC_08008640((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),*puVar1,puVar18[3]);\n          uVar25 = FUNC_080082d4((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,\n                                (int)((ulonglong)uVar26 >> 0x20));\n          if (puVar1 == puVar10 + param_4 * 2) break;\n          uVar26 = *puVar16;\n          puVar18 = puVar1;\n        }\n      }\n      *local_284 = uVar25;\n      iVar21 = iVar21 + 1;\n      iVar17 = local_280;\n      puVar16 = puVar22;\n      local_284 = local_284 + 1;\n    } while (iVar21 <= local_280);\n  } while( true );\n  local_270 = local_270 + -0x18;\n  if (local_258[iVar4] == 0) {\n    puVar5 = local_258 + iVar17 + 0x3ffffffe;\n    do {\n      uVar12 = *puVar5;\n      iVar4 = iVar4 + -1;\n      local_270 = local_270 + -0x18;\n      puVar5 = puVar5 + -1;\n    } while (uVar12 == 0);\n  }\nLAB_0800a9f6:\n  uVar26 = FUN_0800b2e8(0,DAT_0800ac38,local_270);\n  if (iVar4 < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        uVar28 = 0;\nLAB_0800abe4:\n        if (iVar21 == 0) {\n          *local_260[1] = (undefined4)local_168;\n          *(int *)((int)local_260[1] + 4) = local_168._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = uVar28;\n          *(int *)((int)local_260[1] + 8) = local_160[0];\n          *(int *)((int)local_260[1] + 0xc) = local_160[1];\n          return uVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)uVar28;\n        *(int *)((int)local_260[1] + 8) = local_160[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)uVar28 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = local_168._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = local_160[1] + -0x80000000;\n        *local_260[1] = (undefined4)local_168;\n        return uVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\nLAB_0800aafc:\n      iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n      if (iVar21 != 0) {\n        iVar9 = iVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)uVar28;\n      *(int *)((int)local_260[1] + 4) = iVar9;\nLAB_0800ab0e:\n      return uVar2 & 7;\n    }\n    uVar28 = 0;\n  }\n  else {\n    puVar22 = &uStack_c8 + iVar4;\n    puVar5 = local_258 + iVar4 + 1;\n    puVar16 = &uStack_c8 + iVar4 + 1;\n    do {\n      uVar8 = (undefined4)((ulonglong)uVar26 >> 0x20);\n      puVar5 = puVar5 + -1;\n      uVar25 = FUN_0800856c(*puVar5);\n      uVar25 = FUNC_08008640((int)uVar25,(int)((ulonglong)uVar25 >> 0x20),(int)uVar26,uVar8);\n      puVar16 = puVar16 + -1;\n      *puVar16 = uVar25;\n      uVar26 = FUNC_08008640((int)uVar26,uVar8,0,DAT_0800ac40);\n    } while (puVar5 != local_258);\n    iVar9 = 0;\n    uVar8 = DAT_0800ac30;\n    uVar6 = DAT_0800ac34;\n    do {\n      DAT_0800ac30 = uVar8;\n      DAT_0800ac34 = uVar6;\n      if (iVar15 < 0) {\n        uVar26 = 0;\n      }\n      else {\n        uVar26 = 0;\n        iVar17 = 0;\n        puVar16 = puVar22;\n        puVar10 = (undefined4 *)PTR_DAT_0800ac44;\n        while( true ) {\n          uVar25 = FUNC_08008640(*(undefined4 *)puVar16,*(undefined4 *)((int)puVar16 + 4),uVar8,uVar6\n                               );\n          uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),(int)uVar25,\n                                (int)((ulonglong)uVar25 >> 0x20));\n          iVar17 = iVar17 + 1;\n          if ((iVar15 < iVar17) || (iVar9 < iVar17)) break;\n          uVar8 = *puVar10;\n          uVar6 = puVar10[1];\n          puVar16 = puVar16 + 1;\n          puVar10 = puVar10 + 2;\n        }\n      }\n      bVar24 = iVar9 != iVar4;\n      *(int *)(&local_168 + iVar9) = (int)uVar26;\n      *(int *)((int)&local_168 + (iVar9 * 2 + 1) * 4) = (int)((ulonglong)uVar26 >> 0x20);\n      puVar22 = puVar22 + -1;\n      iVar9 = iVar9 + 1;\n      uVar8 = DAT_0800ac30;\n      uVar6 = DAT_0800ac34;\n    } while (bVar24);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (iVar4 != 0) {\n          puVar16 = &local_168 + iVar4;\n          uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                            *(undefined4 *)puVar16);\n          do {\n            uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n            uVar8 = (undefined4)uVar28;\n            uVar11 = *(undefined4 *)(puVar16 + -1);\n            uVar20 = *(undefined4 *)((int)puVar16 + -4);\n            uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n            uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n            uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n            *puVar16 = uVar26;\n            puVar16 = puVar16 + -1;\n            *puVar16 = uVar28;\n          } while (&local_168 != puVar16);\n          if (1 < iVar4) {\n            puVar16 = &local_168 + iVar4;\n            uVar28 = CONCAT44(*(undefined4 *)((int)&local_168 + (iVar4 * 2 + 1) * 4),\n                              *(undefined4 *)puVar16);\n            do {\n              uVar6 = (undefined4)((ulonglong)uVar28 >> 0x20);\n              uVar8 = (undefined4)uVar28;\n              uVar11 = *(undefined4 *)(puVar16 + -1);\n              uVar20 = *(undefined4 *)((int)puVar16 + -4);\n              uVar28 = FUNC_080082d4(uVar8,uVar6,uVar11,uVar20);\n              uVar26 = FUNC_080082d0(uVar11,uVar20,(int)uVar28,(int)((ulonglong)uVar28 >> 0x20));\n              uVar26 = FUNC_080082d4((int)uVar26,(int)((ulonglong)uVar26 >> 0x20),uVar8,uVar6);\n              *puVar16 = uVar26;\n              puVar16 = puVar16 + -1;\n              *puVar16 = uVar28;\n            } while (&local_168 + 1 != puVar16);\n            uVar28 = 0;\n            puVar16 = &local_168 + iVar4 + 1;\n            do {\n              puVar22 = puVar16 + -1;\n              uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),\n                                    *(undefined4 *)puVar22,*(undefined4 *)((int)puVar16 + -4));\n              puVar16 = puVar22;\n            } while (&local_168 + 2 != puVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        uVar28 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      puVar16 = &local_168 + iVar4 + 1;\n      do {\n        puVar22 = puVar16 + -1;\n        uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                              *(undefined4 *)((int)puVar16 + -4));\n        puVar16 = puVar22;\n      } while (&local_168 != puVar22);\n      goto LAB_0800aafc;\n    }\n    uVar28 = 0;\n    puVar16 = &local_168 + iVar4 + 1;\n    do {\n      puVar22 = puVar16 + -1;\n      uVar28 = FUNC_080082d4((int)uVar28,(int)((ulonglong)uVar28 >> 0x20),*(undefined4 *)puVar22,\n                            *(undefined4 *)((int)puVar16 + -4));\n      puVar16 = puVar22;\n    } while (&local_168 != puVar22);\n  }\n  iVar9 = (int)((ulonglong)uVar28 >> 0x20);\n  uVar8 = (undefined4)uVar28;\n  if (iVar21 == 0) {\n    *(undefined8 *)local_260[1] = uVar28;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (iVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    iVar9 = 1;\n    puVar16 = &local_168;\n    do {\n      uVar29 = FUNC_080082d4((int)uVar29,(int)(uVar29 >> 0x20),*(undefined4 *)(puVar16 + 1),\n                            *(undefined4 *)((int)puVar16 + 0xc));\n      iVar9 = iVar9 + 1;\n      puVar16 = puVar16 + 1;\n    } while (iVar9 <= iVar4);\n    if (iVar21 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = uVar8;\n    *(int *)((int)local_260[1] + 4) = iVar9 + -0x80000000;\n    uVar29 = FUNC_080082d0((undefined4)local_168,local_168._4_4_,uVar8,iVar9);\n    if (0 < iVar4) goto LAB_0800ad04;\n  }\n  uVar29 = uVar29 & 0xffffffff | (ulonglong)((int)(uVar29 >> 0x20) + 0x80000000) << 0x20;\nLAB_0800ad26:\n  *(ulonglong *)((int)local_260[1] + 8) = uVar29;\n  return uVar2 & 7;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_080094c0",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800b2e8",
                "FUN_08008b4c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a5a0",
            "calling": [
                "FUN_08009d78"
            ],
            "imported": false,
            "current_name": "FUNC_0800a5a0"
        },
        "FUN_0800195c": {
            "renaming": {
                "FUN_0800195c": "check_data_0800195c",
                "PTR_DAT_08001990": "data",
                "FUN_080025e8": "call_function"
            },
            "code": "void check_data_0800195c()\n{\n  if ((PTR_DAT_08001990[1] != '\\x06') && ((PTR_DAT_08001990[2] & 0x20) == 0)) {\n    call_function();\n    PTR_DAT_08001990[2] |= 0x40;\n  }\n  return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800195c",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "check_data_0800195c"
        },
        "FUN_08009214": {
            "renaming": {
                "FUN_08009214": "check_input_string_is_not_empty_08009214",
                "in_ZR": "input_char",
                "FUN_08009204": "get_input_char"
            },
            "code": "bool check_input_string_is_not_empty_08009214(void)\n{\n  char input_char;\n  input_char = get_input_char();\n  return input_char != '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009214",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_input_string_is_not_empty_08009214"
        },
        "FUN_08004dd2": {
            "renaming": {
                "FUN_08004dd2": "check_input_and_allocate_memory_08004dd2",
                "bVar1": "input",
                "iVar2": "alloc_result",
                "PTR_DAT_08004e2c": "memory_address",
                "FUN_08000310": "get_input",
                "FUN_080003ec": "allocate_memory",
                "FUN_08004c48": "clear_memory"
            },
            "code": "int check_input_and_allocate_memory_08004dd2(void)\n{\n  byte input = get_input(0);\n  if (input == 5) {\n    int alloc_result = allocate_memory(PTR_DAT_08004e2c, 1, 0x40);\n    if (alloc_result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (input > 4) {\n      return 0;\n    }\n    int alloc_result = allocate_memory(PTR_DAT_08004e2c, 1, 0x28);\n    if (alloc_result == 0) {\n      return 0;\n    }\n    clear_memory(0);\n  }\n  return 1;\n}",
            "called": [
                "FUN_08000310",
                "FUN_08004c48",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004dd2",
            "calling": [
                "FUN_080051b4"
            ],
            "imported": false,
            "current_name": "check_input_and_allocate_memory_08004dd2"
        },
        "FUN_08008244": {
            "renaming": {
                "FUN_08008244": "do_nothing_08008244"
            },
            "code": "\nvoid do_nothing_08008244(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008244",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "do_nothing_08008244"
        },
        "FUN_08005778": {
            "renaming": {
                "FUN_08005778": "execute_function_08005778",
                "PTR_DAT_0800578c": "data_pointer",
                "FUN_080052ac": "call_another_function"
            },
            "code": "void execute_function_08005778(void)\n{\n  int *pointer_to_data = *(int **)PTR_DAT_0800578c;\n  call_another_function(*pointer_to_data);\n  return;\n}",
            "called": [
                "FUN_080052ac"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005778",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "execute_function_08005778"
        },
        "FUN_080028bc": {
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "code": "undefined4 calculate_result_080028bc(undefined4 input_1, undefined4 input_2, undefined4 input_3)\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = FUNC_08008eec(input_2,input_2);\n  result_2 = FUNC_08008eec(input_1,input_1);\n  result_1 = FUNC_08008cd8(result_1,result_2);\n  result_2 = FUNC_08008cdc(input_3,input_3);\n  result_1 = FUNC_08009054(result_1,result_2);\n  return result_1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080028bc",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080028bc"
        },
        "FUN_08006628": {
            "renaming": {
                "FUN_08006628": "calculate_shift_amount_08006628",
                "uVar1": "result",
                "uVar2": "leading_zeroes_count",
                "PTR_DAT_0800667c": "result_ptr",
                "PTR_DAT_08006678": "shift_array_ptr",
                "DAT_08006674": "data_array"
            },
            "code": "uint32_t calculate_shift_amount_08006628(void)\n{\n  uint32_t result = get_data();\n  uint32_t leading_zeroes_count = count_leading_zeroes(0xf000000);\n  uint32_t shift_amount = (*(uint32_t *)PTR_DAT_0800667c) >> PTR_DAT_08006678[(*(uint32_t *)(DAT_08006674 + 8) & 0xf0) >> (leading_zeroes_count & 0xff)];\n  *(uint32_t *)PTR_DAT_0800667c = shift_amount;\n  return *(uint32_t *)PTR_DAT_0800667c;\n}",
            "called": [
                "FUN_080064ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006628",
            "calling": [
                "FUN_0800618c",
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_08006628"
        },
        "FUN_0800738e": {
            "renaming": {
                "FUN_0800738e": "update_param_if_set_0800738e",
                "param_1": "new_param",
                "DAT_080073bc": "data_ptr",
                "do_nothing_080073c0": "do_nothing",
                "PTR_": "ptr_",
                "DAT_": "data_"
            },
            "code": "void update_param_if_set_0800738e(ushort new_param) {\n    uint* param_ptr = (uint*)(DAT_080073bc + 0x14);\n    uint mask = *param_ptr;\n    if ((uint)new_param & mask) {\n        *param_ptr = (uint)new_param;\n        do_nothing_080073c0(new_param);\n    }\n    return;\n}",
            "called": [
                "FUN_080073c0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800738e",
            "calling": [],
            "imported": false,
            "current_name": "update_param_if_set_0800738e"
        },
        "FUN_08002828": {
            "renaming": {
                "FUN_08002828": "do_nothing_08002828"
            },
            "code": "\nvoid do_nothing_08002828(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002828",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "do_nothing_08002828"
        },
        "FUN_080053a0": {
            "renaming": {
                "FUN_080053a0": "FUNC_080053a0"
            },
            "code": "\nvoid FUNC_080053a0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  \n  FUN_080052dc(*(undefined2 *)PTR_DAT_080055f0);\n  *(undefined2 *)PTR_DAT_080055f8 = *(undefined2 *)PTR_DAT_080055f4;\n  if (*(int *)PTR_DAT_080055fc == 0) {\n    uVar1 = FUN_08002f74();\n    *(undefined4 *)PTR_DAT_080055fc = uVar1;\n    if (*(int *)PTR_DAT_080055fc == 0) {\n      FUN_080057e4();\n      PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n    }\n    else {\n      if (PTR_DAT_08005600[1] == '\\x03') {\n        *(undefined4 *)(PTR_DAT_08005604 + 0x1c) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x28);\n        FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n        *(undefined4 *)(PTR_DAT_08005604 + 0x18) = DAT_08005608;\n      }\n      *(int *)(PTR_DAT_08005604 + 0x20) =\n           (*(int *)(*(int *)PTR_DAT_080055fc + 0x30) >> 1) +\n           *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n      *(int *)PTR_DAT_08005604 = -(*(int *)(*(int *)PTR_DAT_080055fc + 0x10) >> 1);\n      *(undefined4 *)(PTR_DAT_08005604 + 4) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 8) = *(undefined4 *)PTR_DAT_08005604;\n      *(undefined4 *)(PTR_DAT_08005604 + 0xc) = *(undefined4 *)(*(int *)PTR_DAT_080055fc + 0x10);\n      *(undefined4 *)(PTR_DAT_08005604 + 0x10) = 0;\n    }\n  }\n  if (*(int *)PTR_DAT_080055fc != 0) {\n    *(undefined2 *)PTR_DAT_080055f0 = **(undefined2 **)PTR_DAT_080055fc;\n    *(undefined2 *)PTR_DAT_080055f4 = 0;\n    *(int *)PTR_DAT_08005604 = *(int *)(*(int *)PTR_DAT_080055fc + 4) + *(int *)PTR_DAT_08005604;\n    if (0 < *(int *)PTR_DAT_08005604) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x10;\n      *(int *)PTR_DAT_08005604 = *(int *)PTR_DAT_08005604 - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x20) == 0) {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 4) = *(int *)(PTR_DAT_08005600 + 4) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 4) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 8) + *(int *)(PTR_DAT_08005604 + 4);\n    if (0 < *(int *)(PTR_DAT_08005604 + 4)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x440;\n      *(int *)(PTR_DAT_08005604 + 4) =\n           *(int *)(PTR_DAT_08005604 + 4) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x80) == 0) {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 8) = *(int *)(PTR_DAT_08005600 + 8) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 8) =\n         *(int *)(*(int *)PTR_DAT_080055fc + 0xc) + *(int *)(PTR_DAT_08005604 + 8);\n    if (0 < *(int *)(PTR_DAT_08005604 + 8)) {\n      *(ushort *)PTR_DAT_080055f4 = *(ushort *)PTR_DAT_080055f4 | 0x100;\n      *(int *)(PTR_DAT_08005604 + 8) =\n           *(int *)(PTR_DAT_08005604 + 8) - *(int *)(PTR_DAT_08005604 + 0xc);\n      if ((*(ushort *)PTR_DAT_080055f0 & 0x200) == 0) {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + 1;\n      }\n      else {\n        *(int *)(PTR_DAT_08005600 + 0xc) = *(int *)(PTR_DAT_08005600 + 0xc) + -1;\n      }\n    }\n    *(int *)(PTR_DAT_08005604 + 0x10) = *(int *)(PTR_DAT_08005604 + 0x10) + 1;\n    if (*(uint *)(PTR_DAT_08005604 + 0x10) < *(uint *)(*(int *)PTR_DAT_080055fc + 0x10)) {\n      if (PTR_DAT_08005600[1] == '\\x04') {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(*(int *)PTR_DAT_080055fc + 0x30) < *(uint *)(PTR_DAT_08005604 + 0x1c)) {\n            *(int *)(PTR_DAT_08005604 + 0x1c) =\n                 *(int *)(PTR_DAT_08005604 + 0x1c) - *(int *)(*(int *)PTR_DAT_080055fc + 0x30);\n            FUN_08005324(*(undefined4 *)(PTR_DAT_08005604 + 0x1c));\n          }\n          else {\n            FUN_080057e4();\n            PTR_DAT_08005600[2] = PTR_DAT_08005600[2] | 4;\n          }\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x34)) {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          *(int *)(PTR_DAT_08005748 + 0x1c) =\n               *(int *)(PTR_DAT_08005748 + 0x1c) + *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          if (*(uint *)(*(int *)PTR_DAT_0800574c + 0x3c) <= *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(uint *)(PTR_DAT_08005748 + 0x10) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) != *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n               *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x3c);\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n      else if (*(int *)(PTR_DAT_08005748 + 0x10) == *(int *)(*(int *)PTR_DAT_0800574c + 0x38)) {\n        if (*(int *)(PTR_DAT_08005748 + 0x1c) == *(int *)(*(int *)PTR_DAT_0800574c + 0x3c)) {\n          *(undefined4 *)(PTR_DAT_08005748 + 0x18) = DAT_08005750;\n        }\n        else {\n          *(int *)(PTR_DAT_08005748 + 0x18) = 420000 - *(int *)(PTR_DAT_08005748 + 0x18);\n        }\n      }\n      else {\n        iVar2 = FUN_08005360();\n        if (iVar2 != 0) {\n          if (*(uint *)(PTR_DAT_08005748 + 0x20) < *(uint *)(PTR_DAT_08005748 + 0x1c)) {\n            *(int *)(PTR_DAT_08005748 + 0x1c) =\n                 *(int *)(PTR_DAT_08005748 + 0x1c) - *(int *)(*(int *)PTR_DAT_0800574c + 0x30);\n          }\n          else {\n            *(uint *)(PTR_DAT_08005748 + 0x1c) = *(uint *)(PTR_DAT_08005748 + 0x1c) >> 1;\n          }\n          if (*(uint *)(PTR_DAT_08005748 + 0x1c) < *(uint *)(*(int *)PTR_DAT_0800574c + 0x2c)) {\n            *(undefined4 *)(PTR_DAT_08005748 + 0x1c) =\n                 *(undefined4 *)(*(int *)PTR_DAT_0800574c + 0x2c);\n          }\n          FUN_08005324(*(undefined4 *)(PTR_DAT_08005748 + 0x1c));\n        }\n      }\n    }\n    else {\n      *(undefined2 *)PTR_DAT_08005754 = 0;\n      *(undefined4 *)PTR_DAT_0800574c = 0;\n      FUN_08002f40();\n    }\n  }\n  *(ushort *)PTR_DAT_08005754 = *(ushort *)PTR_DAT_08005754 ^ *(ushort *)(PTR_DAT_08005758 + 0x18);\n  *(ushort *)PTR_DAT_0800575c = *(ushort *)PTR_DAT_0800575c ^ *(ushort *)(PTR_DAT_08005758 + 0x1a);\n  return;\n}\n\n",
            "called": [
                "FUN_080052dc",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_080057e4",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080053a0",
            "calling": [
                "FUN_08007c7c"
            ],
            "imported": false,
            "current_name": "FUNC_080053a0"
        },
        "FUN_080092c4": {
            "renaming": {
                "FUN_080092c4": "copy_data_and_call_functions_080092c4",
                "iVar1": "index",
                "puVar2": "data_pointer",
                "UNRECOVERED_JUMPTABLE": "jump_table",
                "PTR_DAT_0800930c": "data_pointer_start",
                "PTR_DAT_08009304": "data_start",
                "PTR_DAT_08009308": "data_end",
                "DAT_08009300": "source_data_start",
                "FUN_0800756c": "copy_data_to_function_A",
                "FUN_0800b3e8": "call_function_B",
                "FUN_08007540": "call_function_C"
            },
            "code": "void copy_data_and_call_functions_080092c4(void)\n{\n  int index;\n  undefined4 *data_pointer;\n  code *jump_table;\n  for (index = 0; PTR_DAT_08009304 + index < PTR_DAT_08009308; index += 4) {\n    *(undefined4 *)(PTR_DAT_08009304 + index) = *(undefined4 *)(DAT_08009300 + index);\n  }\n  for (data_pointer = (undefined4 *)PTR_DAT_0800930c; data_pointer < PTR_DAT_08009310; data_pointer++) {\n    *data_pointer = 0;\n  }\n  copy_data_to_function_A();\n  call_function_B();\n  jump_table = (code *)0x80092fa;\n  call_function_C();\n  (*jump_table)();\n  return;\n}",
            "called": [
                "FUN_08007540",
                "FUN_0800756c",
                "FUN_0800b3e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080092c4",
            "calling": [],
            "imported": false,
            "current_name": "copy_data_and_call_functions_080092c4"
        },
        "FUN_08008250": {
            "renaming": {
                "FUN_08008250": "call_function_with_param_08008250",
                "param_1": "parameter",
                "FUN_08007e1c": "call_another_function"
            },
            "code": "void call_function_with_param_08008250(void* parameter)\n{\n  call_another_function(parameter);\n  return;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008250",
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080036f0",
                "FUN_080037fc",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "imported": false,
            "current_name": "call_function_with_param_08008250"
        },
        "FUN_0800184c": {
            "renaming": {
                "FUN_0800184c": "is_valid_character_0800184c",
                "param_1": "output",
                "param_2": "param_2",
                "param_3": "lookup_table",
                "param_4": "input",
                "iVar1": "validation_result",
                "uVar2": "result",
                "*PTR_DAT_080018c8": "*error_code"
            },
            "code": "int is_valid_character_0800184c(byte *output, int lookup_table, int index, byte *input) {\n  int result;\n  byte current_char = *(input + index);\n  if (*(char *)(lookup_table + (uint)current_char) == '\\0') {\n    result = 0;\n  }\n  else {\n    *output = *(byte *)(lookup_table + (uint)current_char);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      *PTR_DAT_080018c8 = 2;\n      result = 0;\n    }\n    else {\n      *(input + index) = *(input + index) + 1;\n      int validation_result = FUN_08002638(lookup_table, input, param_2);\n      if (validation_result == 0) {\n        *PTR_DAT_080018c8 = 1;\n        result = 0;\n      }\n      else {\n        result = 1;\n      }\n    }\n  }\n  return result;\n}",
            "called": [
                "FUN_08002638"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800184c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "is_valid_character_0800184c"
        },
        "FUN_08001f00": {
            "renaming": {
                "FUN_08001f00": "FUNC_08001f00"
            },
            "code": "\nvoid FUNC_08001f00(int param_1,undefined4 *param_2,int param_3,byte param_4,byte param_5,byte param_6\n                 ,undefined4 param_7,char param_8,undefined4 param_9,char param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  uint local_6c [4];\n  undefined4 local_5c;\n  undefined4 local_58;\n  undefined4 local_54;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined4 local_48;\n  ushort local_42;\n  undefined4 local_40;\n  undefined4 local_3c;\n  undefined4 local_38;\n  uint local_34;\n  undefined4 local_30;\n  undefined4 local_2c;\n  char local_27;\n  ushort local_26;\n  undefined4 local_24;\n  uint local_20;\n  uint local_1c;\n  \n  local_2c = FUNC_08008cdc(*(undefined4 *)((uint)param_4 * 4 + param_1),\n                          *(undefined4 *)((uint)param_4 * 4 + param_3));\n  local_30 = FUNC_08008cdc(*(undefined4 *)((uint)param_5 * 4 + param_1),\n                          *(undefined4 *)((uint)param_5 * 4 + param_3));\n  local_34 = FUNC_08008cd8(param_2[param_6],*(undefined4 *)((uint)param_6 * 4 + param_1));\n  local_1c = *(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000;\n  local_20 = *(uint *)((uint)param_5 * 4 + param_3) ^ 0x80000000;\n  local_38 = FUNC_08008cd8(param_2[param_4],local_2c);\n  local_3c = FUNC_08008cd8(param_2[param_5],local_30);\n  uVar1 = FUNC_08008eec(local_1c,local_3c);\n  uVar2 = FUNC_08008eec(local_20,local_38);\n  uVar1 = FUNC_08008cd8(uVar1,uVar2);\n  uVar5 = FUN_08008590(uVar1);\n  uVar1 = FUNC_08008eec(local_1c,local_38);\n  uVar2 = FUNC_08008eec(local_20,local_3c);\n  uVar1 = FUNC_08008cdc(uVar1,uVar2);\n  uVar6 = FUN_08008590(uVar1);\n  uVar5 = thunk_FUN_08009990((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                             (int)((ulonglong)uVar6 >> 0x20));\n  local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  if (param_10 == '\\0') {\n    iVar3 = FUN_0800923c(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d4((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  else {\n    iVar3 = FUN_08009250(local_24,0);\n    if (iVar3 != 0) {\n      uVar5 = FUN_08008590(local_24);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_08002240,DAT_08002244);\n      local_24 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    }\n  }\n  uVar1 = FUNC_08008eec(local_24,param_9);\n  uVar5 = FUN_08008590(uVar1);\n  uVar6 = FUN_08008590(local_34 & 0x7fffffff);\n  uVar5 = FUN_0800981c((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                       (int)((ulonglong)uVar6 >> 0x20));\n  local_40 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  iVar3 = FUN_08009214(local_40,0);\n  if (iVar3 == 0) {\n    uVar1 = FUNC_08009054(local_40,*(undefined4 *)(PTR_DAT_08002248 + 0x1c));\n    uVar5 = FUN_08008590(uVar1);\n    uVar5 = FUN_080094c0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_42 = FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    if (param_8 != '\\0') {\n      uVar1 = FUN_08008e44(local_42);\n      param_7 = FUNC_08008eec(param_7,uVar1);\n    }\n    uVar1 = FUN_08008e44(local_42);\n    local_48 = FUNC_08009054(local_24,uVar1);\n    uVar1 = FUN_08008e44(local_42);\n    local_4c = FUNC_08009054(local_34,uVar1);\n    uVar5 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,DAT_0800224c);\n    uVar6 = FUN_08008590(local_48);\n    uVar5 = FUNC_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                         (int)((ulonglong)uVar6 >> 0x20));\n    uVar5 = FUNC_080082d0(0,DAT_08002250,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_50 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    local_54 = local_48;\n    local_27 = '\\0';\n    local_6c[param_6] = *(uint *)(param_1 + (uint)param_6 * 4);\n    for (local_26 = 1; local_26 < local_42; local_26 = local_26 + 1) {\n      if ((int)local_27 < (int)(uint)(byte)PTR_DAT_08002248[0x3e]) {\n        uVar1 = FUNC_08008eec(local_1c,local_54);\n        uVar2 = FUNC_08008eec(local_20,local_50);\n        local_6c[3] = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(local_1c,local_50);\n        uVar2 = FUNC_08008eec(local_20,local_54);\n        local_1c = FUNC_08008cd8(uVar1,uVar2);\n        local_20 = local_6c[3];\n        local_27 = local_27 + '\\x01';\n      }\n      else {\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_08009410((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_58 = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUN_08008e44(local_26);\n        uVar1 = FUNC_08008eec(uVar1,local_48);\n        uVar5 = FUN_08008590(uVar1);\n        uVar5 = FUN_080096e8((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        local_5c = FUN_08008c30((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_58);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_5c);\n        local_1c = FUNC_08008cdc(uVar1,uVar2);\n        uVar1 = FUNC_08008eec(*(uint *)((uint)param_4 * 4 + param_3) ^ 0x80000000,local_5c);\n        uVar2 = FUNC_08008eec(*(undefined4 *)((uint)param_5 * 4 + param_3),local_58);\n        local_20 = FUNC_08008cd8(uVar1,uVar2);\n        local_27 = '\\0';\n      }\n      uVar4 = FUNC_08008cdc(local_2c,local_1c);\n      local_6c[param_4] = uVar4;\n      uVar4 = FUNC_08008cdc(local_30,local_20);\n      local_6c[param_5] = uVar4;\n      uVar4 = FUNC_08008cdc(local_6c[param_6],local_4c);\n      local_6c[param_6] = uVar4;\n      FUN_08001e98(local_6c[0],local_6c[1],local_6c[2],param_7,param_8);\n      if (*PTR_DAT_08002404 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*param_2,param_2[1],param_2[2],param_7,param_8);\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009250",
                "FUN_08009410",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_080096e8",
                "FUN_08008640",
                "FUN_08008bf0",
                "thunk_FUN_08009990",
                "FUN_08008cdc",
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08009214",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_0800923c",
                "FUN_0800981c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001f00",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "FUNC_08001f00"
        },
        "FUN_08006ce0": {
            "renaming": {
                "FUN_08006ce0": "call_08006950_with_param_1_08006ce0",
                "param_1": "param_1"
            },
            "code": "void call_08006950_with_param_1_08006ce0(undefined4 param_1)\n{\n  FUN_08006950(param_1);\n  return;\n}",
            "called": [
                "FUN_08006950"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ce0",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "call_08006950_with_param_1_08006ce0"
        },
        "FUN_08006d4a": {
            "renaming": {
                "FUN_08006d4a": "print_character_08006d4a",
                "param_1": "character",
                "FUN_080069e4": "print_ascii_code"
            },
            "code": "void print_character_08006d4a(char character) {\n  print_ascii_code((int)character);\n  return;\n}",
            "called": [
                "FUN_080069e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d4a",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d4a"
        },
        "FUN_08008894": {
            "renaming": {
                "FUN_08008894": "FUNC_08008894"
            },
            "code": "\nulonglong FUNC_08008894(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  ulonglong uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08008a02();\n  }\n  uVar9 = (uint)(uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return uVar17 & 0xffffffff | (ulonglong)uVar7 << 0x20;\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_080089b2;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_080089b2:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "called": [
                "FUN_08008a02"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008894",
            "calling": [
                "FUN_08001994",
                "FUN_080098d0",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08009990",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "FUNC_08008894"
        },
        "FUN_08000374": {
            "renaming": {
                "FUN_08000374": "process_string_08000374",
                "param_1": "start_index",
                "param_2": "string",
                "param_3": "length",
                "local_1c": "length_remaining",
                "local_18": "current_char",
                "local_14": "current_index",
                "local_9": "checksum"
            },
            "code": "void process_string_08000374(int start_index, char *string, int length) {\n  int current_index = start_index;\n  char *current_char = string;\n  char checksum = '\\0';\n  if (*(int *)PTR_DAT_080003e8 == 0) {\n    initialize();\n    current_char = string;\n    current_index = start_index;\n  }\n  for (; length != 0; length--) {\n    checksum = (checksum != '\\0') + *current_char;\n    write_to_buffer(current_index, *current_char);\n    current_char++;\n    current_index++;\n  }\n  write_to_buffer(current_index, checksum);\n  return;\n}",
            "called": [
                "FUN_080002f0",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000374",
            "calling": [
                "FUN_08004bf4",
                "FUN_08004bc0",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "process_string_08000374"
        },
        "FUN_080037fc": {
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absolute_value",
                "FUN_08008250": "print_character",
                "FUN_08003778": "print_integer"
            },
            "code": "void print_absolute_value_080037fc(int value) {\n  int absolute_value;\n  absolute_value = value;\n  if (value < 0) {\n    print_character('-');\n    absolute_value = -value;\n  }\n  print_integer(absolute_value);\n  return;\n}",
            "called": [
                "FUN_08008250",
                "FUN_08003778"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080037fc",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "print_absolute_value_080037fc"
        },
        "FUN_0800a1bc": {
            "renaming": {
                "FUN_0800a1bc": "calculate_0800a1bc",
                "param_1": "num1",
                "param_2": "num2",
                "uVar1": "result1",
                "uVar2": "var2",
                "iVar3": "var1",
                "uVar4": "var3",
                "uVar5": "var12",
                "uVar6": "var6",
                "uVar7": "var7",
                "uVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "uVar13": "var7",
                "uVar14": "var12"
            },
            "code": "uint calculate_0800a1bc(uint num1, uint num2)\n{\n  uint result1;\n  uint result2;\n  int var1;\n  uint var2;\n  uint var3;\n  uint var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  uint var8;\n  uint var9;\n  uint var10;\n  uint var11;\n  undefined8 var12;\n  if ((DAT_0800a340 & ~num2) == 0)\n  {\n    var12 = FUNC_08008640(num1, num2, num1, num2);\n    result1 = FUNC_080082d4((int)var12, (int)((ulonglong)var12 >> 0x20), num1, num2);\n    return result1;\n  }\n  if ((int)num2 < 1)\n  {\n    if ((num2 & 0x7fffffff | num1) == 0)\n    {\n      return num1;\n    }\n    if (num2 != 0)\n    {\n      var12 = FUNC_080082d0(num1, num2, num1);\n      var3 = (uint)((ulonglong)var12 >> 0x20);\n      result1 = FUNC_08008894((int)var12, var3, (int)var12, var3);\n      return result1;\n    }\n    do\n    {\n      var5 = num1;\n      result1 = var5 >> 0xb;\n      num2 = num2 - 0x15;\n      num1 = var5 << 0x15;\n    } while (result1 == 0);\n    var2 = num2;\n    if (-1 < (int)var5)\n      goto LAB_0800a290;\n    var6 = 0xffffffff;\n    var5 = num1;\n    var11 = 0x20;\n  }\n  else\n  {\n    var2 = (int)num2 >> 0x14;\n    var5 = num1;\n    if (var2 != 0)\n      goto LAB_0800a1da;\n    var11 = 0x20;\n    var6 = 0x200000;\n    var5 = num1;\n    var2 = num2;\n  }\n  while (-1 < (int)var5)\n  {\n    var4 = var6 + var2;\n    if (var4 <= var5)\n    {\n      var5 = var5 - var4;\n      var2 = var4 + var6;\n      var7 = var7 + var6;\n    }\n    var11 = var11 - 1;\n    var6 = var6 >> 1;\n    var5 = var5 << 1;\n    var8 = var8 * 2 - ((int)var5 >> 0x1f);\n  }\n  while (var11 != 0)\n  {\n    var4 = var7 + var11;\n    var9 = var5 - var8;\n    var10 = var5 << 1;\n    if ((int)var5 < (int)var4)\n    {\n      if ((int)(var4 + var7) < 0)\n      {\n        if (-1 < (int)(var4 + var11))\n        {\n          var5 = var5 + 1;\n        }\n      }\n      else\n      {\n        if (var10 < var4)\n        {\n          var9 = var9 - 1;\n        }\n        var5 = var8;\n      }\n    }\n    else\n    {\n      if ((var8 == var5) && (var4 <= var10))\n      {\n        if ((int)var4 < 0)\n          goto LAB_0800a26a;\n        var9 = 0;\n        var5 = var8;\n      }\n      else\n      {\n        var5 = var8;\n        if ((int)var4 < 0)\n          goto LAB_0800a26a;\n      }\n    }\n    var11 = var11 - 1;\n    var7 = var7 >> 1;\n    var8 = var9 * 2 - ((int)var10 >> 0x1f);\n    var10 = var10 << 1;\n    if (var11 == 0)\n    {\n      if ((var9 | var10) == 0)\n      {\n        var11 = var7 >> 1;\n      }\n      else if (var7 == 0xffffffff)\n      {\n        var5 = var5 + 1;\n      }\n      else\n      {\n        var11 = var7 + 1 >> 1;\n      }\n      if ((var7 & 1) != 0)\n      {\n        var11 = var11 | 0x80000000;\n      }\n      return var11;\n    }\n  }\nLAB_0800a1da:\n  var8 = var5 >> (var11 & 0xff) | var2;\n  var2 = var2 - var6;\n  var8 = var8 & 0xfffff | 0x100000;\n  if (-1 < (int)(var2 << 0x1f))\n  {\n    var8 = var8 * 2 - ((int)var5 >> 0x1f);\n    var5 = var5 << 1;\n  }\n  var7 = 0;\n  var8 = var8 * 2 - ((int)var5 >> 0x1f);\n  var5 = var5 << 1;\n  var2 = 0;\n  var11 = 0x16;\n  var6 = 0x200000;\n  do\n  {\n    var4 = var2 + var6;\n    if (var4 <= (int)var8)\n    {\n      var8 = var8 - var4;\n      var2 = var4 + var6;\n      var7 = var7 + var6;\n    }\n    var11 = var11 - 1;\n    var8 = var8 * 2 - ((int)var5 >> 0x1f);\n    var6 = var6 >> 1;\n    var5 = var5 << 1;\n  } while (var11 != 0);\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008640",
                "FUN_08008894"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800a1bc",
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "imported": false,
            "current_name": "calculate_0800a1bc"
        },
        "FUN_0800525c": {
            "renaming": {
                "FUN_0800525c": "check_parameter_0800525c",
                "param_1": "parameter",
                "*PTR_DAT_080052a8": "data_pointer",
                "FUN_08002fd4": "execute_function_1",
                "FUN_08005250": "execute_function_2",
                "do_nothing_0800522c": "do_nothing_1",
                "do_nothing_08005220": "do_nothing_2",
                "do_nothing_08005208": "do_nothing_3"
            },
            "code": "void check_parameter_0800525c(char parameter) {\n    if ((int)parameter != (uint)(byte)*PTR_DAT_080052a8) {\n        execute_function_1();\n        if (parameter == '\\0') {\n            execute_function_2();\n        }\n        else {\n            if (parameter < '\\x01') {\n                do_nothing_1();\n            }\n            else {\n                do_nothing_2();\n            }\n            do_nothing_3();\n        }\n        *PTR_DAT_080052a8 = parameter;\n    }\n    return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_08002fd4",
                "FUN_0800522c",
                "FUN_08005220",
                "FUN_08005208"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800525c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "check_parameter_0800525c"
        },
        "FUN_080073d4": {
            "renaming": {
                "FUN_080073d4": "set_bit_in_short_array_080073d4",
                "param_1": "bit_index",
                "PTR_": "ptr_",
                "DAT_": "dat_"
            },
            "code": "void set_bit_in_short_array_080073d4(uint bit_index)\n{\n    uint array_index = bit_index >> 4;\n    uint array_offset = (array_index * 0x400) + 0x4002001a;\n    short* array_ptr = (short*)array_offset;\n    uint bit_mask = 1 << (bit_index & 0xf);\n    *array_ptr = (short)bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073d4",
            "calling": [
                "FUN_08007520"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_array_080073d4"
        },
        "FUN_08006dfe": {
            "renaming": {
                "FUN_08006dfe": "print_character_08006dfe",
                "param_1": "character",
                "FUN_08006a8c": "print_ascii_code"
            },
            "code": "void print_character_08006dfe(char character){\n  print_ascii_code((int)character);\n  return;\n}",
            "called": [
                "FUN_08006a8c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dfe",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006dfe"
        },
        "FUN_08006d66": {
            "renaming": {
                "FUN_08006d66": "execute_main_function_08006d66",
                "FUN_08006c70": "execute_sub_function"
            },
            "code": "void execute_main_function_08006d66(void)\n{\n  execute_sub_function();\n  return;\n}",
            "called": [
                "FUN_08006c70"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d66",
            "calling": [],
            "imported": false,
            "current_name": "execute_main_function_08006d66"
        },
        "FUN_08006e88": {
            "renaming": {
                "FUN_08006e88": "decode_bits_08006e88",
                "param_1": "bitfield_array",
                "param_2": "decoded_bits",
                "uVar1": "bit_mask",
                "uVar2": "decoded_bit",
                "local_c": "index",
                "iVar3": "index",
                "bitfield_value": "bitfield_value"
            },
            "code": "void decode_bits_08006e88(uint *bitfield_array, uint *decoded_bits)\n{\n    uint bit_mask;\n    uint decoded_bit;\n    int index;\n    uint bitfield_value;\n    for (index = 0; index < 16; index++) {\n        bit_mask = 1 << (index & 0xff);\n        decoded_bit = *decoded_bits & bit_mask;\n        if (decoded_bit == bit_mask) {\n            if ((decoded_bits[1] == 2) || (decoded_bits[1] == 0x12)) {\n                bitfield_value = decoded_bits[4];\n                bitfield_array[(index >> 3) + 8] = bitfield_array[(index >> 3) + 8] & ~(0xf << ((index & 7) << 2));\n                bitfield_array[(index >> 3) + 8] = bitfield_array[(index >> 3) + 8] | bitfield_value << ((index & 7) << 2);\n            }\n            *bitfield_array = *bitfield_array & ~(3 << ((index & 0x7f) << 1));\n            *bitfield_array = *bitfield_array | (decoded_bits[1] & 3) << ((index & 0x7f) << 1);\n            if ((((decoded_bits[1] == 1) || (decoded_bits[1] == 2)) || (decoded_bits[1] == 0x11)) || (decoded_bits[1] == 0x12)) {\n                bitfield_array[2] = bitfield_array[2] & ~(3 << ((index & 0x7f) << 1));\n                bitfield_array[2] = bitfield_array[2] | decoded_bits[3] << ((index & 0x7f) << 1);\n                bitfield_array[1] = bitfield_array[1] & ~(1 << (index & 0xff));\n                bitfield_array[1] = bitfield_array[1] | (decoded_bits[1] >> 4 & 1) << (index & 0xff);\n            }\n            bitfield_array[3] = bitfield_array[3] & ~(3 << ((index & 0x7f) << 1));\n            bitfield_array[3] = bitfield_array[3] | decoded_bits[2] << ((index & 0x7f) << 1);\n            if ((decoded_bits[1] & 0x10000000) != 0) {\n                *DAT_0800719c = *DAT_0800719c | 0x4000;\n                *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4) = ~(0xf << ((index & 3) << 2)) & *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4);\n                if (bitfield_array == DAT_080071a4) {\n                    index = 0;\n                }\n                else if (bitfield_array == DAT_080071a8) {\n                    index = 1;\n                }\n                else if (bitfield_array == DAT_080071ac) {\n                    index = 2;\n                }\n                else if (bitfield_array == DAT_080071b0) {\n                    index = 3;\n                }\n                else if (bitfield_array == DAT_080071b4) {\n                    index = 4;\n                }\n                else if (bitfield_array == DAT_080071b8) {\n                    index = 5;\n                }\n                else if (bitfield_array == DAT_080071bc) {\n                    index = 6;\n                }\n                else if (bitfield_array == DAT_080071c0) {\n                    index = 7;\n                }\n                else if (bitfield_array == DAT_080071c4) {\n                    index = 8;\n                }\n                else {\n                    index = 10;\n                }\n                *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4) = index << ((index & 3) << 2) | *(uint *)(DAT_080071a0 + ((index >> 2) + 2) * 4);\n                *DAT_080071cc = ~decoded_bit & *DAT_080071cc;\n                DAT_080071cc[1] = ~decoded_bit & DAT_080071cc[1];\n                if ((decoded_bits[1] & 0x10000) != 0) {\n                    *DAT_080071cc = decoded_bit | *DAT_080071cc;\n                }\n                if ((decoded_bits[1] & 0x20000) != 0) {\n                    DAT_080071cc[1] = decoded_bit | DAT_080071cc[1];\n                }\n                DAT_080071cc[2] = ~decoded_bit & DAT_080071cc[2];\n                DAT_080071cc[3] = ~decoded_bit & DAT_080071cc[3];\n                if ((decoded_bits[1] & 0x100000) != 0) {\n                    DAT_080071cc[2] = decoded_bit | DAT_080071cc[2];\n                }\n                if ((decoded_bits[1] & 0x200000) != 0) {\n                    DAT_080071cc[3] = decoded_bit | DAT_080071cc[3];\n                }\n            }\n        }\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e88",
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "decode_bits_08006e88"
        },
        "FUN_080001e0": {
            "renaming": {
                "FUN_080001e0": "do_nothing_080001e0"
            },
            "code": "\nvoid do_nothing_080001e0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001e0",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001e0"
        },
        "FUN_080036f0": {
            "renaming": {
                "FUN_080036f0": "print_bits_080036f0",
                "param_1": "num",
                "param_2": "num_bits",
                "uVar1": "bit_value",
                "local_10": "bit_index",
                "local_c": "bit_mask",
                "FUN_08008250": "print_character"
            },
            "code": "void print_bits_080036f0(uint num, int num_bits) {\n    undefined4 bit_value;\n    int bit_index;\n    uint bit_mask;\n\n    bit_mask = 1 << (num_bits - 1U & 0xff);\n    for (bit_index = 0; bit_index < num_bits; bit_index++) {\n        if ((bit_mask & num) == 0) {\n            bit_value = 0x30;\n        }\n        else {\n            bit_value = 0x31;\n        }\n        print_character(bit_value);\n        bit_mask = bit_mask >> 1;\n    }\n    return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036f0",
            "calling": [
                "FUN_0800375c",
                "FUN_08003740"
            ],
            "imported": false,
            "current_name": "print_bits_080036f0"
        },
        "FUN_08002edc": {
            "renaming": {
                "FUN_08002edc": "call_three_functions_08002edc",
                "FUN_08002a94": "call_function_one",
                "FUN_08002ba8": "call_function_two",
                "FUN_08002e08": "call_function_three"
            },
            "code": "void call_three_functions_08002edc(void)\n{\n  call_function_one();\n  call_function_two();\n  call_function_three();\n  return;\n}",
            "called": [
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002a94"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002edc",
            "calling": [
                "FUN_08003004",
                "FUN_08003618"
            ],
            "imported": false,
            "current_name": "call_three_functions_08002edc"
        },
        "FUN_0800375c": {
            "renaming": {
                "FUN_0800375c": "write_to_memory_block_0800375c",
                "param_1": "memory_block",
                "FUN_080036f0": "write_data_to_memory_block",
                "0x10": "block_size"
            },
            "code": "void write_to_memory_block_0800375c(void* memory_block, int block_size)\n{\n  write_data_to_memory_block(memory_block, block_size);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800375c",
            "calling": [
                "FUN_08004250"
            ],
            "imported": false,
            "current_name": "write_to_memory_block_0800375c"
        },
        "FUN_08009990": {
            "renaming": {
                "FUN_08009990": "calculate_08009990",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "iVar1": "diff",
                "uVar2": "high_32_bits",
                "uVar3": "mask",
                "uVar4": "result",
                "uVar5": "sign_bits",
                "uVar6": "combined",
                "FUNC_080082d4": "calculate_2",
                "FUNC_0800af78": "get_value",
                "PTR_DAT_08009b20": "array_1",
                "PTR_DAT_08009b1c": "array_2",
                "DAT_08009b18": "max_value",
                "DAT_08009af0": "value_1",
                "DAT_08009af8": "value_2",
                "DAT_08009b10": "return_value_1",
                "DAT_08009b08": "return_value_2",
                "DAT_08009b00": "return_value_3",
                "DAT_08009b04": "value_3",
                "DAT_08009ae8": "value_4",
                "DAT_08009aec": "value_5",
                "DAT_08009af4": "value_6",
                "FUNC_080082d0": "calculate_1",
                "FUNC_08008894": "do_something",
                "do_nothing_0800b2cc": "do_nothing"
            },
            "code": "uint calculate_08009990(uint x, uint y, uint z, uint w) {\n  int diff;\n  undefined4 high_32_bits;\n  uint mask;\n  uint result;\n  uint sign_bits;\n  undefined8 combined;\n  combined = CONCAT44(DAT_08009b04, DAT_08009b00);\n  mask = w & 0x7fffffff;\n  if ((DAT_08009b18 < (mask | (-z | z) >> 0x1f)) || (sign_bits = y & 0x7fffffff, DAT_08009b18 < (sign_bits | (-x | x) >> 0x1f))) {\n    result = calculate_08009990_2(z, w, x, y);\n  }\n  else {\n    if ((w + 0xc0100000 | z) == 0) {\n      result = get_value();\n      return result;\n    }\n    diff = (int)w >> 0x1e & 2U | y >> 0x1f;\n    if ((sign_bits | x) == 0) {\n      result = DAT_08009af0;\n      if ((diff != 2) && (result = x, diff == 3)) {\n        result = DAT_08009af8;\n      }\n    }\n    else {\n      if ((mask | z) != 0) {\n        if (mask == DAT_08009b18) {\n          diff = diff - 1;\n          if (sign_bits == mask) {\n            if (2 < diff) {\n              return DAT_08009b10;\n            }\n            return *(uint *)(PTR_DAT_08009b20 + diff * 8);\n          }\n          if (diff < 3) {\n            return *(uint *)(PTR_DAT_08009b1c + diff * 8);\n          }\n          return 0;\n        }\n        if (sign_bits != DAT_08009b18) {\n          diff = (int)(sign_bits - mask) >> 0x14;\n          if ((int)(sign_bits - mask) < 0x3d00000) {\n            if (((int)w < 0) && (diff + 0x3c < 0 != SCARRY4(diff, 0x3c))) {\n              combined = 0;\n            }\n            else {\n              do_something(x, y, z, w, w);\n              do_nothing();\n              combined = get_value();\n            }\n          }\n          high_32_bits = (undefined4)((ulonglong)combined >> 0x20);\n          result = (uint)combined;\n          if (diff == 1) {\n            return result;\n          }\n          if (diff == 2) {\n            combined = calculate_08009990_1(result, high_32_bits, DAT_08009ae8, DAT_08009aec);\n            result = calculate_08009990_1(DAT_08009af0, DAT_08009af4, (int)combined, (int)((ulonglong)combined >> 0x20));\n            return result;\n          }\n          if (diff == 0) {\n            return result;\n          }\n          combined = calculate_08009990_1(result, high_32_bits, DAT_08009ae8, DAT_08009aec);\n          result = calculate_08009990_1((int)combined, (int)((ulonglong)combined >> 0x20), DAT_08009af0, DAT_08009af4);\n          return result;\n        }\n      }\n      result = DAT_08009b08;\n      if (-1 < (int)y) {\n        result = DAT_08009b00;\n      }\n    }\n  }\n  return result;\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800af78",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009990",
            "calling": [
                "thunk_FUN_08009990"
            ],
            "imported": false,
            "current_name": "calculate_08009990"
        },
        "FUN_08007e58": {
            "renaming": {
                "FUN_08007e58": "is_bit_set_in_dat_08007e58",
                "*DAT_08007e80": "dat_pointer"
            },
            "code": "bool is_bit_set_in_dat_08007e58(void)\n{\n    bool is_set = (*DAT_08007e80 & 0x20) != 0;\n    return is_set;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e58",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "is_bit_set_in_dat_08007e58"
        },
        "FUN_080059f8": {
            "renaming": {
                "FUN_080059f8": "reset_values_080059f8_080059f8",
                "DAT_08005a4c": "ptr_data"
            },
            "code": "void reset_values_080059f8_080059f8(void)\n{\n    int* DAT_08005a4c = (int*)(DAT_08005a4c);\n    DAT_08005a4c[8] = -1;\n    DAT_08005a4c[8] = 0;\n    DAT_08005a4c[9] = -1;\n    DAT_08005a4c[9] = 0;\n    DAT_08005a4c[4] = -1;\n    DAT_08005a4c[4] = 0;\n    DAT_08005a4c[5] = -1;\n    DAT_08005a4c[5] = 0;\n    DAT_08005a4c[6] = -1;\n    DAT_08005a4c[6] = 0;\n    do_nothing_08005a5c();\n}\n",
            "called": [
                "FUN_08005a5c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059f8",
            "calling": [],
            "imported": false,
            "current_name": "reset_values_080059f8_080059f8"
        },
        "FUN_08003f34": {
            "renaming": {
                "FUN_08003f34": "parse_input_08003f34",
                "bVar1": "current_char",
                "bVar2": "current_char",
                "uVar3": "result",
                "*PTR_DAT_08004028": "is_inside_parenthesis",
                "*PTR_DAT_08004020": "input_buffer_index",
                "PTR_DAT_08004024": "input_buffer"
            },
            "code": "void parse_input_08003f34(void)\n{\n  char current_char;\n  char *PTR_DAT_08004028 = 0;\n  char PTR_DAT_08004024[100];\n  int *PTR_DAT_08004020 = 0;\n  int result;\n  while (1) {\n    current_char = get_input_char();\n    if (current_char == 0xff) {\n      return;\n    }\n    if ((current_char == 10) || (current_char == 0xd)) {\n      continue;\n    }\n    if (PTR_DAT_08004024[0] == '\\0') {\n      if ((current_char > 0x20) && (current_char != 0x2f)) {\n        if (current_char == 0x28) {\n          *PTR_DAT_08004028 = 1;\n        }\n        else if (result == -1) {\n          print_newline();\n          print_error();\n        }\n        else if ((current_char < 0x61) || (current_char > 0x7a)) {\n          PTR_DAT_08004024[*PTR_DAT_08004020] = current_char;\n          *PTR_DAT_08004020++;\n        }\n        else {\n          PTR_DAT_08004024[*PTR_DAT_08004020] = current_char - 0x20;\n          *PTR_DAT_08004020++;\n        }\n      }\n    }\n    else if (current_char == 0x29) {\n      *PTR_DAT_08004028 = 0;\n    }\n    if (current_char == 0xa) {\n      execute_command(PTR_DAT_08004024);\n      if (result != 0) {\n        print_newline();\n        print_error();\n      }\n      *PTR_DAT_08004020 = 0;\n      memset(PTR_DAT_08004024, 0, sizeof(PTR_DAT_08004024));\n    }\n  }\n}\n",
            "called": [
                "FUN_08008286",
                "FUN_08003980",
                "FUN_08004030",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003f34",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "parse_input_08003f34"
        },
        "FUN_080095b8": {
            "renaming": {
                "FUN_080095b8": "calculate_signed_mantissa_080095b8",
                "param_1": "mantissa",
                "param_2": "exponent",
                "uVar1": "carry",
                "uVar2": "shift_amount",
                "uVar3": "mantissa_with_hidden_bit",
                "uVar4": "sign",
                "uVar5": "exponent_bias"
            },
            "code": "int calculate_signed_mantissa_080095b8(uint32_t mantissa, uint32_t exponent) {\n  uint32_t shift_amount = (exponent << 1) >> 0x15;\n  uint32_t exponent_bias = shift_amount - 0x3ff;\n  int sign = (int)exponent < 0 ? -1 : 1;\n  uint32_t mantissa_with_hidden_bit = mantissa & 0xfffff | 0x100000;\n  if ((int)exponent_bias < 0x14) {\n    if ((int)exponent_bias < 0) {\n      if (exponent_bias != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    mantissa_with_hidden_bit = mantissa_with_hidden_bit + (0x80000 >> (exponent_bias & 0xff)) >> (0x14 - exponent_bias & 0xff);\n  }\n  else {\n    if (0x1e < exponent_bias) {\n      sign = generate_exception();\n      return sign;\n    }\n    if ((int)exponent_bias < 0x34) {\n      uint32_t carry = 0x80000000 >> (shift_amount - 0x413 & 0xff);\n      if (CARRY4(carry, mantissa) != false) {\n        mantissa_with_hidden_bit = mantissa_with_hidden_bit + 1;\n      }\n      mantissa_with_hidden_bit = mantissa_with_hidden_bit << (shift_amount - 0x413 & 0xff);\n      if (exponent_bias != 0x14) {\n        mantissa_with_hidden_bit = mantissa_with_hidden_bit | carry + mantissa >> (0x34 - exponent_bias & 0xff);\n      }\n    }\n    else {\n      mantissa_with_hidden_bit = mantissa_with_hidden_bit << (shift_amount - 0x413 & 0xff) | mantissa << (shift_amount - 0x433 & 0xff);\n    }\n  }\n  return mantissa_with_hidden_bit * sign;\n}",
            "called": [
                "FUN_08008ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080095b8",
            "calling": [
                "FUN_08001994",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_signed_mantissa_080095b8"
        },
        "FUN_08006cf6": {
            "renaming": {
                "FUN_08006cf6": "process_input_08006cf6",
                "param_1": "input_char",
                "param_2": "param_2",
                "param_3": "param_3",
                "uVar1": "result",
                "FUN_08006998": "get_result",
                "FUN_08006ba0": "process_result",
                "FUN_08006b00": "send_output"
            },
            "code": "void process_input_08006cf6(char input_char, uint32_t param_2, uint32_t param_3)\n{\n  uint32_t result = get_result();\n  uint32_t processed_result = process_result(result, param_2, param_3);\n  send_output((int)input_char, processed_result);\n  return;\n}",
            "called": [
                "FUN_08006b00",
                "FUN_08006998",
                "FUN_08006ba0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006cf6",
            "calling": [
                "FUN_08007a70"
            ],
            "imported": false,
            "current_name": "process_input_08006cf6"
        },
        "FUN_08002ef0": {
            "renaming": {
                "FUN_08002ef0": "copy_data_to_buffer_08002ef0",
                "uVar1": "result",
                "PTR_DAT_08002f1c": "destination_pointer",
                "PTR_DAT_08002f18": "source_pointer",
                "FUN_08002870": "calculate_checksum",
                "PTR_DAT_08002f20": "buffer_pointer"
            },
            "code": "void copy_data_to_buffer_08002ef0(void)\n{\n  //Copy data from one pointer to another\n  *PTR_DAT_08002f1c = *PTR_DAT_08002f18;\n  //Call a function and store the result in a variable\n  unsigned char result = calculate_checksum(*PTR_DAT_08002f18);\n  //Store the result in a buffer\n  *PTR_DAT_08002f20 = result;\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ef0",
            "calling": [
                "FUN_08002f24"
            ],
            "imported": false,
            "current_name": "copy_data_to_buffer_08002ef0"
        },
        "FUN_08001d4c": {
            "renaming": {
                "FUN_08001d4c": "print_numbers_08001d4c",
                "local_9": "loop_counter",
                "cVar1": "current_number",
                "FUNC_08001994": "print_integer",
                "do_nothing_08002814": "do_nothing",
                "PTR_DAT_08001dd8": "PTR_DAT_08001dd8",
                "initialize_printer": "initialize_printer",
                "finalize_printer": "finalize_printer"
            },
            "code": "void print_numbers_08001d4c(void)\n{\n  char current_number;\n  char loop_counter;\n\n  initialize_printer();\n  print_integer(4, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  print_integer(3, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8 + 0x30));\n  do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n  loop_counter = 2;\n  while( true ) {\n    current_number = loop_counter + -1;\n    if (loop_counter == '\\0') break;\n    print_integer(7, 0, 1, *(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n    do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    loop_counter = current_number;\n    if ('\\0' < current_number) {\n      print_integer(7, 1, 0, *(undefined4 *)(PTR_DAT_08001dd8 + 0x2c));\n      do_nothing_08002814(*(undefined2 *)(PTR_DAT_08001dd8 + 0x34));\n    }\n  }\n  finalize_printer();\n  return;\n}",
            "called": [
                "FUN_08001994",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08002814"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001d4c",
            "calling": [
                "FUN_080024c4"
            ],
            "imported": false,
            "current_name": "print_numbers_08001d4c"
        },
        "FUN_08000268": {
            "renaming": {
                "FUN_08000268": "calculate_result_08000268",
                "iVar1": "result",
                "FUN_08005a84": "get_value",
                "DAT_0800029c": "constant",
                "PTR_DAT_08000298": "factor"
            },
            "code": "int calculate_result_08000268(void)\n{\n  int result = get_value();\n  int PTR_DAT_08000298 = *(uint *)(PTR_DAT_08000298 + 8) >> 3;\n  int DAT_0800029c = 1000;\n  unsigned long long multiplication_result = (unsigned long long)DAT_0800029c * (unsigned long long)PTR_DAT_08000298;\n  int subtraction_result = multiplication_result >> 0x21;\n  int final_result = (result + 1) * DAT_0800029c - subtraction_result;\n  return final_result;\n}",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000268",
            "calling": [
                "FUN_080002b6"
            ],
            "imported": false,
            "current_name": "calculate_result_08000268"
        },
        "FUN_08003778": {
            "renaming": {
                "FUN_08003778": "print_uint_as_string_08003778",
                "param_1": "number",
                "local_1c": "remaining",
                "acStack_15": "digits",
                "local_9": "digit_count",
                "uVar1": "digit"
            },
            "code": "void print_uint_as_string_08003778(uint number) {\n    uint digit;\n    uint remaining = number;\n    char digits[12];\n    byte digit_count = 0;\n    if (number == 0) {\n        print_char('0');\n    }\n    else {\n        while (remaining != 0) {\n            digit = remaining % 10;\n            remaining = remaining / 10;\n            digits[digit_count] = digit + '0';\n            digit_count++;\n        }\n        while (digit_count != 0) {\n            digit_count--;\n            print_char(digits[digit_count]);\n        }\n    }\n}\n",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003778",
            "calling": [
                "FUN_080037fc"
            ],
            "imported": false,
            "current_name": "print_uint_as_string_08003778"
        },
        "FUN_0800b3dc": {
            "renaming": {
                "FUN_0800b3dc": "get_value_from_pointer_to_pointer_0800b3dc",
                "PTR_PTR_DAT_0800b3e4": "PTR_TO_PTR_DAT_0800b3e4"
            },
            "code": "uint32_t get_value_from_pointer_to_pointer_0800b3dc() {\n    uint32_t* ptr_to_ptr = (uint32_t*)PTR_PTR_DAT_0800b3e4;\n    uint32_t value = *ptr_to_ptr;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3dc",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "get_value_from_pointer_to_pointer_0800b3dc"
        },
        "FUN_080046d0": {
            "renaming": {
                "FUN_080046d0": "print_output_080046d0",
                "PTR_DAT_08004890": "args",
                "PTR_DAT_080048a8": "msg1",
                "PTR_DAT_08004890[0x1c]": "char1",
                "PTR_DAT_08004890[0x19]": "bool1",
                "PTR_DAT_08004890[0x1a]": "bool2",
                "PTR_DAT_080048ac": "msg2",
                "PTR_DAT_080048b0": "msg3",
                "PTR_DAT_080048b4": "msg4",
                "PTR_DAT_08004890[3]": "bool3",
                "PTR_DAT_080048bc": "msg5",
                "PTR_DAT_08004890[4]": "bool4",
                "PTR_DAT_080048c4": "msg6",
                "PTR_DAT_080048c0": "msg7",
                "PTR_DAT_08004890[2]": "bool5",
                "PTR_DAT_080048cc": "msg8",
                "PTR_DAT_08004890[5]": "arg_5",
                "PTR_DAT_080048d8": "msg9",
                "PTR_DAT_08004890[6]": "arg_6",
                "PTR_DAT_080048dc": "msg10",
                "PTR_DAT_080048e0": "msg11",
                "PTR_DAT_080048e4": "msg12",
                "PTR_DAT_08004890[7]": "arg_7",
                "PTR_DAT_080048f0": "msg13",
                "PTR_DAT_080048e8": "msg14",
                "PTR_DAT_080048ec": "msg15",
                "PTR_DAT_080048f4": "msg16",
                "PTR_DAT_08004890[0x18]": "char2",
                "PTR_DAT_080048f8": "msg17",
                "PTR_DAT_080048fc": "msg18",
                "FUN_080036c6": "print_string",
                "FUN_080037fc": "print_char",
                "FUN_08003826": "print_address",
                "FUN_08008590": "get_address",
                "FUNC_08008640": "modify_address",
                "FUN_08008c30": "transform_address",
                "switchD_080046de::switchdataD_080046e4": "switch_table"
            },
            "code": "void print_output_080046d0()\n{\n    byte num_of_PTR_DAT_08004890 = PTR_DAT_08004890[1];\n    if (num_of_PTR_DAT_08004890 > 4) {\n        print_string(PTR_DAT_080048a8);\n        print_char(PTR_DAT_08004890[0x1c] + 0x36);\n        if (PTR_DAT_08004890[0x19] == 0) {\n            if (PTR_DAT_08004890[0x1a] == 1) {\n                print_string(PTR_DAT_080048ac);\n            }\n            else {\n                print_string(PTR_DAT_080048b0);\n            }\n        }\n        else {\n            print_string(PTR_DAT_080048b4);\n        }\n        if (PTR_DAT_08004890[3] == 0) {\n            print_string(PTR_DAT_080048bc);\n        }\n        else {\n            print_string(PTR_DAT_080048b8);\n        }\n        if (PTR_DAT_08004890[4] == 0) {\n            print_string(PTR_DAT_080048c4);\n        }\n        else {\n            print_string(PTR_DAT_080048c0);\n        }\n        if (PTR_DAT_08004890[2] == 0) {\n            print_string(PTR_DAT_080048cc);\n        }\n        else {\n            print_string(PTR_DAT_080048c8);\n        }\n        byte PTR_DAT_08004890[5] = PTR_DAT_08004890[5];\n        if (PTR_DAT_08004890[5] == 2) {\n            print_string(PTR_DAT_080048d8);\n        }\n        else if (PTR_DAT_08004890[5] < 3) {\n            if (PTR_DAT_08004890[5] == 0) {\n                print_string(PTR_DAT_080048d0);\n            }\n            else if (PTR_DAT_08004890[5] == 1) {\n                print_string(PTR_DAT_080048d4);\n            }\n        }\n        char PTR_DAT_08004890[6] = PTR_DAT_08004890[6];\n        if (PTR_DAT_08004890[6] == 1) {\n            print_string(PTR_DAT_080048dc);\n        }\n        else if (PTR_DAT_08004890[6] < 2) {\n            if (PTR_DAT_08004890[6] == -1) {\n                print_string(PTR_DAT_080048e0);\n            }\n            else if (PTR_DAT_08004890[6] == 0) {\n                print_string(PTR_DAT_080048e4);\n            }\n        }\n        byte PTR_DAT_08004890[7] = PTR_DAT_08004890[7];\n        if (PTR_DAT_08004890[7] == 2) {\n            print_string(PTR_DAT_080048f0);\n        }\n        else if (PTR_DAT_08004890[7] < 3) {\n            if (PTR_DAT_08004890[7] == 0) {\n                print_string(PTR_DAT_080048e8);\n            }\n            else if (PTR_DAT_08004890[7] == 1) {\n                print_string(PTR_DAT_080048ec);\n            }\n        }\n        print_string(PTR_DAT_080048f4);\n        print_char(PTR_DAT_08004890[0x18]);\n        print_string(PTR_DAT_080048f8);\n        if (PTR_DAT_08004890[3] == 0) {\n            print_address(*(undefined4 *)(PTR_DAT_08004890 + 8));\n        }\n        else {\n            undefined8 arg_8 = get_address(*(undefined4 *)(PTR_DAT_08004890 + 8));\n            arg_8 = modify_address((int)arg_8,(int)((ulonglong)arg_8 >> 0x20),DAT_08004888,DAT_0800488c);\n            undefined4 new_arg = transform_address((int)arg_8,(int)((ulonglong)arg_8 >> 0x20));\n            print_address(new_arg);\n        }\n        print_string(PTR_DAT_080048fc);\n        return;\n    }\n    (*(code *)(&switchD_080046de::switchdataD_080046e4)[num_of_PTR_DAT_08004890])();\n    return;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_080037fc",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080046d0",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_output_080046d0"
        },
        "FUN_08006d72": {
            "renaming": {
                "FUN_08006d72": "calculate_result_08006d72",
                "param_1": "input",
                "uVar1": "result",
                "FUN_08006c9c": "calculate_input"
            },
            "code": "int calculate_result_08006d72(int input) {\n  int result = calculate_input(input);\n  return result;\n}",
            "called": [
                "FUN_08006c9c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d72",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "calculate_result_08006d72"
        },
        "FUN_0800756c": {
            "renaming": {
                "FUN_0800756c": "set_flag_0800756c",
                "DAT_080075bc": "flag_register",
                "DAT_080075c0": "flag_value",
                "DAT_080075c4": "flag_pointer"
            },
            "code": "void set_flag_0800756c(void)\n{\n  DAT_080075bc |= 1;\n  DAT_080075bc[2] = 0;\n  DAT_080075bc &= 0xfef6ffff;\n  DAT_080075bc[1] = DAT_080075c0;\n  DAT_080075bc &= 0xfffbffff;\n  DAT_080075bc[3] = 0;\n  *(undefined4 *)(DAT_080075c4 + 8) = 0x8000000;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800756c",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "set_flag_0800756c"
        },
        "FUN_080001f8": {
            "renaming": {
                "FUN_080001f8": "reset_ptr_dat_0800020c_and_call_fun_08000210_080001f8",
                "PTR_DAT_0800020c": "ptr_dat_0800020c",
                "FUN_08000210": "call_fun_08000210"
            },
            "code": "void reset_ptr_dat_0800020c_and_call_fun_08000210_080001f8(void)\n{\n  *PTR_DAT_0800020c = 0;\n  call_fun_08000210();\n  return;\n}",
            "called": [
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001f8",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "reset_ptr_dat_0800020c_and_call_fun_08000210_080001f8"
        },
        "FUN_08002f74": {
            "renaming": {
                "FUN_08002f74": "find_matching_value_or_offset_08002f74",
                "puVar1": "result",
                "PTR_DAT_08002fa0": "first_value_ptr",
                "PTR_DAT_08002fa4": "second_value_ptr",
                "PTR_DAT_08002fa8": "offset_ptr"
            },
            "code": "undefined* find_matching_value_or_offset_08002f74(void)\n{\n  undefined* result;\n  if (*PTR_DAT_08002fa0 == *PTR_DAT_08002fa4)\n  {\n    result = (undefined*)0x0;\n  }\n  else\n  {\n    result = PTR_DAT_08002fa8 + (uint)(byte)*PTR_DAT_08002fa4 * 0x40;\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f74",
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "imported": false,
            "current_name": "find_matching_value_or_offset_08002f74"
        },
        "FUN_0800b3e8": {
            "renaming": {
                "FUN_0800b3e8": "execute_functions_0800b3e8",
                "iVar1": "i",
                "ppcVar2": "function_ptrs",
                "iVar3": "num_functions",
                "PTR_DAT_0800b420": "end_function_ptrs",
                "PTR_DAT_0800b424": "start_function_ptrs",
                "code": "function",
                "PTR_DAT_0800b42c": "other_end_function_ptrs",
                "PTR_DAT_0800b428": "other_start_function_ptrs"
            },
            "code": "void execute_functions_0800b3e8(void)\n{\n  int num_functions = (int)PTR_DAT_0800b420 - (int)PTR_DAT_0800b424 >> 2;\n  if (num_functions != 0) {\n    int i = 0;\n    code **function_ptrs = (code **)PTR_DAT_0800b424;\n    do {\n      i++;\n      (**function_ptrs)();\n      function_ptrs++;\n    } while (num_functions != i);\n  }\n  function_ptrs = (code **)PTR_DAT_0800b42c;\n  int num_other_functions = (int)PTR_DAT_0800b428 - (int)PTR_DAT_0800b42c;\n  do_nothing_0800b5b0();\n  num_other_functions = num_other_functions >> 2;\n  if (num_other_functions != 0) {\n    int i = 0;\n    do {\n      i++;\n      (**function_ptrs)();\n      function_ptrs++;\n    } while (num_other_functions != i);\n  }\n  return;\n}",
            "called": [
                "FUN_080001ac",
                "FUN_0800b4d0",
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b3e8",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "execute_functions_0800b3e8"
        },
        "FUN_080096e8": {
            "renaming": {
                "FUN_080096e8": "check_param_and_call_func_080096e8",
                "param_1": "func_param_1",
                "param_2": "param_2",
                "uVar1": "result",
                "uVar2": "func_ret_val",
                "local_28": "local_var_1",
                "uStack_24": "stack_var_1",
                "local_20": "local_var_2",
                "uStack_1c": "stack_var_2",
                "DAT_08009790": "global_dat_1",
                "DAT_08009794": "global_dat_2",
                "FUNC_080082d0": "some_func_1",
                "FUNC_08009d78": "some_func_2",
                "FUNC_0800a348": "some_func_3",
                "FUN_0800adf0": "some_func_4"
            },
            "code": "undefined4 check_param_and_call_func_080096e8(undefined4 func_param_1, uint param_2)\n{\n  undefined4 result;\n  uint func_ret_val;\n  undefined4 local_var_1;\n  undefined4 stack_var_1;\n  undefined4 local_var_2;\n  undefined4 stack_var_2;\n  \n  if (DAT_08009790 < (int)(param_2 & 0x7fffffff)) {\n    if (DAT_08009794 < (int)(param_2 & 0x7fffffff)) {\n      result = some_func_1(func_param_1, param_2, func_param_1, param_2);\n    }\n    else {\n      func_ret_val = some_func_2(func_param_1, param_2, &local_var_1);\n      func_ret_val &= 3;\n      if (func_ret_val == 1) {\n        result = some_func_3(local_var_1, stack_var_1, local_var_2, stack_var_2);\n      }\n      else if (func_ret_val == 2 || func_ret_val == 0) {\n        result = some_func_4(local_var_1, stack_var_1, local_var_2, stack_var_2, 1);\n      }\n      else {\n        result = some_func_3(local_var_1, stack_var_1, local_var_2, stack_var_2);\n      }\n    }\n    return result;\n  }\n  result = some_func_4(func_param_1, param_2, 0, 0, 0);\n  return result;\n}",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080096e8",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_param_and_call_func_080096e8"
        },
        "FUN_08006a18": {
            "renaming": {
                "FUN_08006a18": "is_bit_set_08006a18",
                "param_1": "bit_position",
                "PTR_DAT_08006a54": "data_ptr",
                "DAT_08006a54": "data",
                "uint": "uint32_t",
                "char": "uint8_t"
            },
            "code": "bool is_bit_set_08006a18(uint8_t bit_position)\n{\n    uint32_t* PTR_DAT_08006a54 = (uint32_t*)(DAT_08006a54 + (((uint32_t)bit_position >> 5) + 0x40) * 4);\n    uint32_t mask = 1 << (bit_position & 0x1f);\n    return ((*PTR_DAT_08006a54) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a18",
            "calling": [
                "FUN_08006de0"
            ],
            "imported": false,
            "current_name": "is_bit_set_08006a18"
        },
        "FUN_08002c18": {
            "renaming": {
                "FUN_08002c18": "calculate_values_08002c18",
                "param_1": "input",
                "param_2": "num1",
                "param_3": "num2",
                "uVar1": "val1",
                "iVar2": "val2",
                "uVar3": "val3",
                "uVar4": "val4",
                "uVar5": "val5",
                "uVar6": "val6",
                "uVar7": "val7",
                "local_1c": "local_1c",
                "local_20": "local_20"
            },
            "code": "void calculate_values_08002c18(int input, int num1, int num2)\n{\n    int val1, val2, val3, val4, val5, val6, val7;\n    uint32_t local_1c, local_20;\n    val1 = get_value(*(int *)(input + 0x3c));\n    val2 = get_value_with_param(val1, num1);\n    val3 = get_hash(val2);\n    val4 = get_value(*(int *)(input + 0x3c));\n    val5 = get_value_with_param(val4, num2);\n    val6 = get_hash(val5);\n    val7 = get_hash(get_product(*(int *)(input + 0x30)));\n    local_1c = get_sum(val3, val6, -val7);\n    if (local_1c > *(uint32_t *)(input + 0x10)) {\n        local_1c = *(uint32_t *)(input + 0x10);\n    }\n    local_20 = *(uint32_t *)(input + 0x10) - local_1c;\n    if (local_20 < 0) {\n        local_20 = 0;\n        local_1c = *(uint32_t *)(input + 0x10);\n    }\n    *(uint32_t *)(input + 0x34) = local_1c;\n    *(uint32_t *)(input + 0x38) = local_1c + local_20;\n}\n",
            "called": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_0800856c",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002c18",
            "calling": [
                "FUN_08002e08"
            ],
            "imported": false,
            "current_name": "calculate_values_08002c18"
        },
        "FUN_08006ac0": {
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "data",
                "PTR_DAT_08006afc": "ptr"
            },
            "code": "bool check_bit_08006ac0(uint8_t data){\n    uint32_t* PTR_DAT_08006afc = (uint32_t*)(DAT_08006afc + (((uint32_t)data >> 5) + 0x80) * 4);\n    uint32_t mask = 1 << (data & 0x1f);\n    return ((*PTR_DAT_08006afc) & mask) != 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ac0",
            "calling": [
                "FUN_08006e1a"
            ],
            "imported": false,
            "current_name": "check_bit_08006ac0"
        },
        "FUN_080001ec": {
            "renaming": {
                "FUN_080001ec": "do_nothing_080001ec"
            },
            "code": "\nvoid do_nothing_080001ec(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ec",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001ec"
        },
        "FUN_08005a50": {
            "renaming": {
                "FUN_08005a50": "do_nothing_08005a50"
            },
            "code": "\nvoid do_nothing_08005a50(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a50",
            "calling": [
                "FUN_080059b4"
            ],
            "imported": false,
            "current_name": "do_nothing_08005a50"
        },
        "FUN_08002ba8": {
            "renaming": {
                "puVar1": "current_byte_ptr",
                "puVar2": "prev_byte_ptr",
                "puVar3": "data_ptr",
                "local_14": "start_ptr",
                "local_10": "temp_ptr",
                "local_9": "current_byte",
                "PTR_DAT_08002c0c": "data_start_ptr",
                "PTR_DAT_08002c10": "data_ptr",
                "PTR_DAT_08002c14": "data_end_ptr",
                "FUN_08002afc": "copy_data",
                "FUN_08002870": "get_next_byte",
                "FUN_08002ba8": "decode_data_08002ba8"
            },
            "code": "void decode_data_08002ba8(void)\n{\n  undefined *current_byte_ptr;\n  undefined *prev_byte_ptr;\n  undefined *PTR_DAT_08002c10;\n  undefined *temp_ptr;\n  undefined *start_ptr;\n  byte current_byte;\n  \n  current_byte = *PTR_DAT_08002c0c;\n  start_ptr = (undefined *)0x0;\n  temp_ptr = (undefined *)0x0;\n  prev_byte_ptr = (undefined *)0x0;\n  while (current_byte != *PTR_DAT_08002c14) {\n    start_ptr = temp_ptr;\n    current_byte_ptr = PTR_DAT_08002c0c + (uint)current_byte * 0x40;\n    copy_data(current_byte_ptr, temp_ptr, start_ptr);\n    current_byte = get_next_byte(current_byte);\n    prev_byte_ptr = start_ptr;\n    temp_ptr = current_byte_ptr;\n  }\n  copy_data(start_ptr, temp_ptr, (undefined *)0x0, start_ptr, prev_byte_ptr);\n  return;\n}",
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002ba8",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "decode_data_08002ba8"
        },
        "FUN_0800919c": {
            "renaming": {
                "FUN_0800919c": "check_overflow_0800919c",
                "param_1": "value1",
                "param_2": "value2",
                "bVar1": "is_less_than_zero",
                "uVar2": "doubled_value1",
                "uVar3": "doubled_value2",
                "uVar4": "or_value",
                "bVar5": "is_or_value_zero"
            },
            "code": "uint check_overflow_0800919c(uint value1, uint value2)\n{\n    uint doubled_value1 = value1 * 2;\n    uint doubled_value2 = value2 * 2;\n    \n    bool is_overflowed = ((int)doubled_value1 >> 0x18 == -1 || (int)doubled_value2 >> 0x18 == -1) && ((((int)doubled_value1 >> 0x18 == -1 && ((value1 & 0x7fffff) != 0)) || (((int)doubled_value2 >> 0x18 == -1 && ((value2 & 0x7fffff) != 0)))));\n    if (is_overflowed)\n    {\n        return 1;\n    }\n    \n    uint or_value = doubled_value1 | value2 & 0x7fffffff;\n    bool is_or_value_zero = or_value == 0;\n    if (!is_or_value_zero)\n    {\n        uint xor_value = value1 ^ value2;\n        is_or_value_zero = xor_value == 0;\n    }\n    bool is_less_than_zero = -1 < (int)xor_value;\n    \n    if (is_less_than_zero)\n    {\n        value1 = doubled_value1 + value2 * -2;\n        is_or_value_zero = value1 == 0;\n    }\n    \n    if (is_less_than_zero && doubled_value2 <= doubled_value1 && !is_or_value_zero)\n    {\n        value1 = (int)value2 >> 0x1f;\n    }\n    \n    if (!is_less_than_zero || doubled_value2 > doubled_value1)\n    {\n        value1 = ~((int)value2 >> 0x1f);\n    }\n    \n    if (!is_or_value_zero)\n    {\n        value1 = value1 | 1;\n    }\n    \n    return value1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800919c",
            "calling": [
                "FUN_08009204"
            ],
            "imported": false,
            "current_name": "check_overflow_0800919c"
        },
        "FUN_0800b2cc": {
            "renaming": {
                "FUN_0800b2cc": "do_nothing_0800b2cc"
            },
            "code": "\nvoid do_nothing_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2cc",
            "calling": [
                "FUN_08009990",
                "FUN_08009d78",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b2cc"
        },
        "FUN_0800854c": {
            "renaming": {
                "FUN_0800854c": "shift_left_and_or_0800854c",
                "param_1": "input",
                "uVar1": "result2",
                "uVar2": "shift_amount2",
                "iVar3": "leading_zeroes",
                "uVar4": "shift_amount",
                "in_r12": "unused",
                "bVar5": "is_shift_amount_negative2",
                "bVar6": "is_shift_amount_zero2",
                "bVar7": "is_shift_amount_negative"
            },
            "code": "unsigned long long shift_left_and_or_0800854c(unsigned int input)\n{\n  if (input == 0) {\n    return 0;\n  }\n  unsigned int leading_zeroes = count_leading_zeroes(input);\n  unsigned int shift_amount = leading_zeroes + 21;\n  bool is_shift_amount_negative = shift_amount < 32;\n  bool is_shift_amount_zero = shift_amount == 0;\n  if (is_shift_amount_negative) {\n    bool is_shift_amount_negative2 = shift_amount - 12 < 0;\n    bool is_shift_amount_zero2 = shift_amount - 12 == 0;\n    shift_amount = is_shift_amount_zero2 || is_shift_amount_negative2 ? 0 : shift_amount - 12;\n    input <<= (shift_amount & 0xff);\n    input >>= ((12U - leading_zeroes) & 0xff);\n  }\n  else {\n    unsigned int shift_amount2 = 32 - shift_amount;\n    input <<= (shift_amount & 0xff);\n    input |= 0U >> ((32 - shift_amount) & 0xff);\n    unsigned long long result = 0;\n    if (is_shift_amount_zero) {\n      result = 0;\n    }\n    else {\n      result = 0 << (shift_amount & 0xff);\n    }\n    return (input + (1042 - shift_amount) * 0x100000) << 32 | result;\n  }\n  if (shift_amount < 1075) {\n    return (unsigned long long)(input + (1074 - shift_amount) * 0x100000) << 32;\n  }\n  unsigned int shift_amount3 = ~(1074 - shift_amount);\n  if (30 < shift_amount3) {\n    return (unsigned long long)(input >> (shift_amount3 - 31 & 0xff));\n  }\n  int shift_amount4 = shift_amount3 - 19;\n  unsigned long long result2 = 0;\n  if (shift_amount4 == 0 || shift_amount4 < 0 != (shift_amount3 - 31 < 0)) {\n    shift_amount3++;\n    result2 = (unsigned long long)(input >> (shift_amount3 & 0xff)) << 32;\n    result2 |= input << (32 - shift_amount3 & 0xff);\n  }\n  else {\n    result2 = (unsigned long long)(input >> (32 - (12U - shift_amount4) & 0xff)) << 32;\n    result2 |= input << ((12U - shift_amount4) & 0xff);\n  }\n  return result2;\n}\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800854c",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "shift_left_and_or_0800854c"
        },
        "FUN_08008e44": {
            "renaming": {
                "FUN_08008e44": "calculate_value_from_param_08008e44",
                "param_1": "param",
                "iVar1": "num_leading_zeroes",
                "uVar2": "shift_amount",
                "iVar4": "result",
                "uVar3": "sign_bit",
                "uVar5": "carry",
                "shifted_result": "result",
                "shifted_param": "shifted_param",
                "count_leading_zeroes": "count_leading_zeroes",
                "DAT_0800c7a8": "0x80000000",
                "DAT_0800c7b4": "0x4b000000",
                "DAT_0800c7b8": "0x800000",
                "DAT_0800c7bc": "-0x800000",
                "DAT_0800c7c0": "0x7fffffff"
            },
            "code": "uint calculate_value_from_param_08008e44(uint num)\n{\n    uint count = 0;\n    while (num) {\n        num >>= 1;\n        count++;\n    }\n    return 32 - count;\n}\n\nuint calculate_value_from_param_08008e44(uint param)\n{\n    uint sign_bit = param & DAT_0800c7a8;\n    if ((int)sign_bit < 0) {\n        param = -param;\n    }\n    if (param == 0) {\n        return 0;\n    }\n    uint num_leading_zeroes = calculate_value_from_param_08008e44(param);\n    uint shift_amount = num_leading_zeroes - 8;\n    uint result = ((sign_bit | DAT_0800c7b4) - DAT_0800c7b8) + shift_amount * DAT_0800c7bc;\n    if (num_leading_zeroes > 7) {\n        uint shift = shift_amount & 0xff;\n        uint shifted_param = param << shift;\n        uint shifted_zeroes = 0U >> (0x20 - shift & 0xff);\n        uint carry = (uint)(DAT_0800c7c0 < shifted_zeroes);\n        result += shifted_param + shifted_zeroes + carry;\n        if (shifted_zeroes == DAT_0800c7a8) {\n            result = result & 0xfffffffe;\n        }\n        return result;\n    }\n    uint shifted_param = param << (num_leading_zeroes + 0x18 & 0xff);\n    uint shifted_result = (param >> (0x20 - (num_leading_zeroes + 0x18) & 0xff)) - ((int)shifted_param >> 0x1f);\n    if ((shifted_param & DAT_0800c7c0) == 0) {\n        shifted_result = shifted_result & ~(shifted_param >> 0x1f);\n    }\n    return shifted_result + result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e44",
            "calling": [
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_value_from_param_08008e44"
        },
        "FUN_0800733e": {
            "renaming": {
                "FUN_0800733e": "set_param_value_at_offset_0800733e",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "offset"
            },
            "code": "void set_param_value_at_offset_0800733e(int base_address, undefined2 value, char offset) {\n  if (offset == '\\0') {\n    *(undefined2 *)(base_address + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(base_address + 0x18) = value;\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800733e",
            "calling": [
                "FUN_0800778c"
            ],
            "imported": false,
            "current_name": "set_param_value_at_offset_0800733e"
        },
        "FUN_0800583c": {
            "renaming": {
                "FUN_0800583c": "execute_main_function_0800583c",
                "FUN_080052ac": "call_sub_function",
                "FUN_08005790": "call_sub_function_two",
                "FUN_080057e4": "call_sub_function_three"
            },
            "code": "void execute_main_function_0800583c(void)\n{\n  int offset = 0x18;\n  int *ptr = (int *)(PTR_DAT_08005858 + offset);\n  call_sub_function(*ptr);\n  call_sub_function_two();\n  call_sub_function_three();\n  return;\n}",
            "called": [
                "FUN_080052ac",
                "FUN_08005790",
                "FUN_080057e4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800583c",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_main_function_0800583c"
        },
        "FUN_08001e98": {
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "param_5": "data5",
                "iVar1": "result",
                "PTR_DAT_08001efc": "PTR_DAT",
                "FUN_08003a74": "perform_operation",
                "FUN_08002fac": "check_data",
                "FUNC_08003004": "process_data_internal",
                "PTR_DAT_08001efc[1]": "PTR_DAT[1]",
                "PTR_DAT_08001efc[0x10]": "PTR_DAT[0x10]",
                "FUN_0800585c": "perform_additional_operation"
            },
            "code": "void process_data_08001e98(undefined4 data1, undefined4 data2, undefined4 data3, undefined4 data4, undefined data5) {\n  int result;\n  if (PTR_DAT_08001efc_08001efc[1] != '\\a') {\n    do {\n      perform_operation();\n      if (*PTR_DAT_08001efc_08001efc != '\\0') {\n        return;\n      }\n      result = check_data();\n    } while (result != 0);\n    process_data_08001e98_internal(data1, data2, data3, data4, data5);\n    if (PTR_DAT_08001efc_08001efc[1] == '\\0') {\n      PTR_DAT_08001efc_08001efc[1] = 2;\n    }\n    if (PTR_DAT_08001efc_08001efc[0x10] != '\\0') {\n      perform_additional_operation();\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08002fac",
                "FUN_08003004",
                "FUN_0800585c",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001e98",
            "calling": [
                "FUN_080005b4",
                "FUN_080024c4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08001e98"
        },
        "FUN_080069e4": {
            "renaming": {
                "FUN_080069e4": "set_bit_at_position_080069e4",
                "param_1": "bit_position"
            },
            "code": "void set_bit_at_position_080069e4(uint8_t bit_position){\n    int* ptr = (int*)(DAT_08006a14 + (((uint8_t)bit_position >> 5) + 0x20) * 4);\n    uint8_t bit_index = bit_position & 0x1f;\n    *ptr = 1 << bit_index;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069e4",
            "calling": [
                "FUN_08006d4a"
            ],
            "imported": false,
            "current_name": "set_bit_at_position_080069e4"
        },
        "FUN_0800b2d4": {
            "renaming": {
                "FUN_0800b2d4": "set_msb_bit_and_shift_right_0800b2d4",
                "param_1": "value",
                "param_2": "shift_amount"
            },
            "code": "uint set_msb_bit_and_shift_right_0800b2d4(uint value, uint shift_amount) {\n    uint shifted_value = (value | 0x80000000) + 0x100000;\n    uint result = shifted_value >> 0x1f;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2d4",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "set_msb_bit_and_shift_right_0800b2d4"
        },
        "FUN_08008e3c": {
            "renaming": {
                "FUN_08008e3c": "calculate_value_08008e3c",
                "param_1": "input_value",
                "iVar1": "leading_zeroes_count",
                "uVar2": "shift_distance",
                "iVar3": "multiplier",
                "uVar4": "shifted_value",
                "shifted_value": "shifted_right",
                "carry_bit": "carry_bit",
                "result": "result",
                "count_leading_zeroes": "count_leading_zeroes"
            },
            "code": "uint calculate_value_08008e3c(uint input_value)\n{\n  int leading_zeroes_count = count_leading_zeroes(input_value);\n  uint shift_distance = leading_zeroes_count - 8;\n  int multiplier = shift_distance * -0x800000 + 0x4a800000;\n  if (leading_zeroes_count > 7) {\n    uint shifted_value = input_value << (shift_distance & 0xff);\n    uint shifted_zero = 0U >> (0x20 - shift_distance & 0xff);\n    uint carry_bit = (uint)(0x7fffffff < 0 << (shift_distance & 0xff));\n    uint result = multiplier + shifted_value + shifted_zero + carry_bit;\n    if (shifted_value == 0x80000000) {\n      result = result & 0xfffffffe;\n    }\n    return result;\n  }\n  uint shifted_value = input_value << (leading_zeroes_count + 0x18U & 0xff);\n  uint shifted_right = (input_value >> (0x20 - (leading_zeroes_count + 0x18U) & 0xff));\n  int sign_bit = ((int)shifted_value >> 0x1f);\n  uint result = multiplier + (shifted_right - sign_bit);\n  if ((shifted_value & 0x7fffffff) == 0) {\n    result = result & ~(shifted_value >> 0x1f);\n  }\n  return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008e3c",
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_value_08008e3c"
        },
        "FUN_08009654": {
            "renaming": {
                "FUN_08009654": "calculate_double_08009654",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "mask",
                "uVar2": "shifted_param2",
                "lVar3": "result",
                "DAT_080096e4": "some_constant_value"
            },
            "code": "long long calculate_double_08009654(uint32_t param1, uint32_t param2) {\n    long long result = ((uint64_t)param2 << 32) | param1;\n    uint32_t shifted_param2 = (param2 << 1) >> 21;\n    int32_t exponent = shifted_param2 - 1023;\n    if (exponent < 20 && exponent >= 0) {\n        if (exponent == -1) {\n            param2 = (param2 & 0x80000000) | 0x3ff00000;\n            result = (uint64_t)param2 << 32;\n        }\n        else {\n            uint32_t mask = (1 << (20 - exponent)) - 1;\n            uint32_t shifted_mask = mask << (31 - (20 - exponent));\n            uint32_t shifted_param2_masked = param2 & shifted_mask;\n            if (shifted_param2_masked | param1) {\n                uint32_t increment = 1 << (19 - exponent);\n                uint32_t incremented_param2 = param2 + increment;\n                uint32_t masked_incremented_param2 = incremented_param2 & ~shifted_mask;\n                result = ((uint64_t)masked_incremented_param2 << 32);\n            }\n        }\n    }\n    else if (exponent >= 20 && exponent < 52) {\n        uint32_t mask = (1 << (52 - exponent)) - 1;\n        uint32_t shifted_mask = mask >> (exponent - 20);\n        if (param1 & shifted_mask) {\n            uint32_t increment = 1 << (51 - exponent);\n            uint32_t incremented_param2 = param2 + (param1 + increment < param1);\n            uint32_t incremented_param1 = param1 + increment;\n            uint32_t masked_incremented_param1 = incremented_param1 & ~shifted_mask;\n            result = ((uint64_t)incremented_param2 << 32) | masked_incremented_param1;\n        }\n        else {\n            uint32_t masked_param1 = param1 & ~shifted_mask;\n            result = ((uint64_t)param2 << 32) | masked_param1;\n        }\n    }\n    else if (exponent == 1024) {\n        result = some_other_function();\n    }\n    return result;\n}",
            "called": [
                "FUN_080082d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009654",
            "calling": [
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "calculate_double_08009654"
        },
        "FUN_08007bc2": {
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2",
                "_DAT_40000000": "PTR_DATA_40000000",
                "_DAT_4000000c": "PTR_DATA_4000000c"
            },
            "code": "void clear_flags_08007bc2(void)\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007bc2",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "clear_flags_08007bc2"
        },
        "FUN_08009410": {
            "renaming": {
                "FUN_08009410": "process_data_08009410",
                "param_1": "data",
                "param_2": "length",
                "uVar1": "result",
                "uVar2": "operation_type",
                "local_28": "local_data",
                "uStack_24": "stack_data",
                "local_20": "local_zero",
                "uStack_1c": "stack_zero",
                "DAT_080094b4": "MAX_DATA_LENGTH",
                "DAT_080094b8": "MAX_LOCAL_DATA_LENGTH",
                "FUNC_080082d0": "process_data",
                "FUNC_08009d78": "get_operation_type",
                "FUN_0800adf0": "process_data",
                "FUNC_0800a348": "process_data"
            },
            "code": "undefined4 process_data_08009410(undefined4 data, uint length) {\n  undefined4 result;\n  uint operation_type;\n  undefined4 local_data;\n  undefined4 stack_data;\n  undefined4 local_zero;\n  undefined4 stack_zero;\n  \n  if (DAT_080094b4 < (int)(length & 0x7fffffff)) {\n    if (DAT_080094b8 < (int)(length & 0x7fffffff)) {\n      result = process_data_08009410(data, length, data, length);\n    }\n    else {\n      operation_type = get_operation_type(data, length, &local_data);\n      operation_type = operation_type & 3;\n      if (operation_type == 1) {\n        result = process_data_08009410(local_data, stack_data, local_zero, stack_zero, 1);\n      }\n      else if (operation_type == 2 || operation_type == 0) {\n        result = process_data_08009410(local_data, stack_data, local_zero, stack_zero);\n      }\n      else {\n        result = process_data_08009410(local_data, stack_data, local_zero, stack_zero, 1);\n      }\n    }\n    return result;\n  }\n  result = process_data_08009410(data, length, 0, 0);\n  return result;\n}\n",
            "called": [
                "FUN_0800adf0",
                "FUN_080082d0",
                "FUN_08009d78",
                "FUN_0800a348"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009410",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "process_data_08009410"
        },
        "FUN_080035ec": {
            "renaming": {
                "FUN_080035ec": "set_parameters_in_dat_080035ec",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "PTR_DAT_08003614": "dat_ptr"
            },
            "code": "void set_parameters_in_dat_080035ec(void* PTR_DAT_08003614, int param1, int param2, int param3) {\n  *(int*)PTR_DAT_08003614 = param1;\n  *(int*)(PTR_DAT_08003614 + 4) = param2;\n  *(int*)(PTR_DAT_08003614 + 8) = param3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080035ec",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "set_parameters_in_dat_080035ec"
        },
        "FUN_08006c70": {
            "renaming": {
                "FUN_08006c70": "data_sync_barrier_08006c70",
                "DAT_08006c94": "PTR_data_sync_1",
                "DAT_08006c98": "PTR_data_sync_2",
                "PTR_4": "ptr1",
                "PTR_8": "dat1"
            },
            "code": "void data_sync_barrier_08006c70(void)\n{\n    DataSynchronizationBarrier(0xf);\n    uint* PTR_4 = (uint*)(DAT_08006c94 + 0xc);\n    uint PTR_8 = DAT_08006c98 | (*PTR_4 & 0x700);\n    *PTR_4 = PTR_8;\n    DataSynchronizationBarrier(0xf);\n    while(true)\n    {\n        // do nothing\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c70",
            "calling": [
                "FUN_08006d66"
            ],
            "imported": false,
            "current_name": "data_sync_barrier_08006c70"
        },
        "FUN_08006d98": {
            "renaming": {
                "FUN_08006d98": "convert_char_to_int_and_pass_to_another_function_08006d98",
                "param_1": "input_char",
                "uVar1": "converted_int",
                "FUN_08006b54": "convert_char_to_int",
                "FUN_08006c04": "pass_int_to_another_function"
            },
            "code": "void convert_char_to_int_and_pass_to_another_function_08006d98(char input_char, undefined4 param_2, undefined4 param_3, undefined4 param_4)\n{\n  undefined4 converted_int;\n  converted_int = convert_char_to_int(input_char);\n  pass_int_to_another_function(converted_int, param_2, param_3, param_4);\n  return;\n}",
            "called": [
                "FUN_08006c04",
                "FUN_08006b54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d98",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_and_pass_to_another_function_08006d98"
        },
        "FUN_08005a68": {
            "renaming": {
                "FUN_08005a68": "increment_ptr_dat_08005a80_08005a68",
                "PTR_DAT_08005a80": "ptr_dat_08005a80"
            },
            "code": "void increment_ptr_dat_08005a80_08005a68() {\n    int* PTR_DAT_08005a80 = (int*) PTR_DAT_08005a80;\n    *PTR_DAT_08005a80 += 1;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005a68",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "increment_ptr_dat_08005a80_08005a68"
        },
        "FUN_080079c0": {
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0",
                "PTR_DAT_080079d8": "PTR_DATA",
                "PTR_DAT_080079dc": "PTR_FLAG"
            },
            "code": "void initialize_data_080079c0(void)\n{\n    set_data(PTR_DAT_080079d8, 0, 24);\n    *(int *)PTR_DAT_080079dc = 1;\n    return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080079c0",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_data_080079c0"
        },
        "FUN_0800b2e0": {
            "renaming": {
                "FUN_0800b2e0": "return_zero_0800b2e0"
            },
            "code": "int return_zero_0800b2e0(void)\n{\n    int result = 0;\n    return result;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e0",
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "return_zero_0800b2e0"
        },
        "FUN_08002908": {
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3"
            },
            "code": "undefined4 calculate_result_08002908(undefined4 input_1, undefined4 input_2, undefined4 input_3, undefined4 input_4)\n{\n  undefined4 result_1 = FUNC_08008cdc(input_3, input_3);\n  result_1 = FUNC_08008eec(result_1, input_4);\n  undefined4 result_2 = FUNC_08008eec(input_1, input_1);\n  result_1 = FUNC_08008cd8(result_1, result_2);\n  undefined4 result_3 = FUNC_08008eec(input_2, input_2);\n  result_1 = FUNC_08008cdc(result_1, result_3);\n  result_3 = FUNC_08008eec(input_3, 0x40800000);\n  result_1 = FUNC_08009054(result_1, result_3);\n  return result_1;\n}",
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002908",
            "calling": [
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_08002908"
        },
        "FUN_08007c40": {
            "renaming": {
                "FUN_08007c40": "set_param_in_address_08007c40",
                "param_1": "param",
                "_DAT_40000034": "global_var"
            },
            "code": "void set_param_in_address_08007c40(void *param){\n    _DAT_40000034 = param;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c40",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_param_in_address_08007c40"
        },
        "FUN_080094c0": {
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "param_3",
                "param_4": "param_4",
                "iVar1": "result_1",
                "uVar2": "temp_1",
                "uVar3": "temp_2",
                "bVar4": "carry_flag",
                "uVar5": "result_2",
                "lVar6": "final_result"
            },
            "code": "longlong calculate_result_080094c0(uint input_1, uint input_2, undefined4 param_3, undefined4 param_4)\n{\n  int result_1;\n  uint temp_1;\n  uint temp_2;\n  bool carry_flag;\n  undefined8 result_2;\n  longlong final_result;\n  temp_2 = (input_2 << 1) >> 0x15;\n  temp_1 = temp_2 - 0x3ff;\n  if ((int)temp_1 < 0x14) {\n    if ((int)temp_1 < 0) {\n      result_2 = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result_1 = FUN_08008b60((int)result_2, (int)((ulonglong)result_2 >> 0x20), 0, 0);\n      final_result = CONCAT44(input_2, input_1);\n      if (result_1 != 0) {\n        if ((int)input_2 < 0) {\n          if ((input_1 | input_2 & 0x7fffffff) != 0) {\n            input_2 = DAT_080095b4;\n          }\n          final_result = (ulonglong)input_2 << 0x20;\n        }\n        else {\n          final_result = 0;\n        }\n      }\n    }\n    else {\n      temp_2 = DAT_080095b0 >> (temp_1 & 0xff);\n      final_result = CONCAT44(input_2, input_1);\n      if ((input_2 & temp_2 | input_1) != 0) {\n        result_2 = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n        result_1 = FUN_08008b60((int)result_2, (int)((ulonglong)result_2 >> 0x20), 0, 0);\n        final_result = CONCAT44(input_2, input_1);\n        if (result_1 != 0) {\n          if ((int)input_2 < 0) {\n            input_2 = input_2 + (0x100000 >> (temp_1 & 0xff));\n          }\n          final_result = (ulonglong)(input_2 & ~temp_2) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)temp_1 < 0x34) {\n    temp_2 = 0xffffffff >> (temp_2 - 0x413 & 0xff);\n    final_result = CONCAT44(input_2, input_1);\n    if ((temp_2 & input_1) != 0) {\n      result_2 = FUNC_080082d4(input_1, input_2, DAT_080095a8, DAT_080095ac, param_4);\n      result_1 = FUN_08008b60((int)result_2, (int)((ulonglong)result_2 >> 0x20), 0, 0);\n      final_result = CONCAT44(input_2, input_1);\n      if (result_1 != 0) {\n        if ((int)input_2 < 0) {\n          if (temp_1 == 0x14) {\n            input_2 = input_2 + 1;\n          }\n          else {\n            temp_1 = 1 << (0x34 - temp_1 & 0xff);\n            carry_flag = CARRY4(temp_1, input_1);\n            input_1 = temp_1 + input_1;\n            if (carry_flag != false) {\n              input_2 = input_2 + 1;\n            }\n          }\n        }\n        final_result = CONCAT44(input_2, input_1 & ~temp_2);\n      }\n    }\n  }\n  else {\n    final_result = CONCAT44(input_2, input_1);\n    if (temp_1 == 0x400) {\n      final_result = FUNC_080082d4();\n    }\n  }\n  return final_result;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008b60"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080094c0",
            "calling": [
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "calculate_result_080094c0"
        },
        "FUN_08008eec": {
            "renaming": {
                "FUN_08008eec": "FUNC_08008eec"
            },
            "code": "\nuint FUNC_08008eec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 = param_1 >> 0x17 & 0xff;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar9 = param_4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar3 == 0xff;\n  }\n  if (!bVar9) {\n    bVar9 = param_4 == 0xff;\n  }\n  if (bVar9) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    if (uVar3 == 0xff || param_4 == 0xff) {\n      bVar9 = param_1 == 0 || param_1 == 0x80000000;\n      uVar2 = param_2;\n      if (param_1 != 0 && param_1 != 0x80000000) {\n        bVar9 = param_2 == 0;\n        uVar2 = param_1;\n      }\n      if (!bVar9) {\n        bVar9 = param_2 == 0x80000000;\n      }\n      uVar8 = uVar2;\n      if (((bVar9) || ((uVar3 == 0xff && ((uVar2 & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (uVar8 = param_2, (param_2 & 0x7fffff) != 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 = uVar2 ^ param_2;\n      goto LAB_0800903c;\n    }\n    bVar9 = (param_1 & 0x7fffffff) == 0;\n    if (!bVar9) {\n      bVar9 = (param_2 & 0x7fffffff) == 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) & 0x80000000;\n    }\n    bVar9 = uVar3 == 0;\n    uVar2 = param_1 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 = param_1 << 1;\n        bVar9 = (param_1 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      uVar3 = uVar3 - 1;\n    }\n    param_1 = param_1 | uVar2;\n    bVar9 = param_4 == 0;\n    uVar2 = param_2 & 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 = param_2 << 1;\n        bVar9 = (param_2 & 0x800000) == 0;\n      }\n      if (!bVar9) break;\n      param_4 = param_4 - 1;\n    }\n    param_2 = param_2 | uVar2;\n  }\n  iVar4 = uVar3 + param_4;\n  uVar8 = param_1 ^ param_2;\n  uVar3 = param_1 << 9;\n  bVar9 = uVar3 == 0;\n  if (!bVar9) {\n    param_2 = param_2 << 9;\n    bVar9 = param_2 == 0;\n  }\n  if (bVar9) {\n    if (uVar3 == 0) {\n      param_2 = param_2 << 9;\n    }\n    uVar2 = uVar8 & 0x80000000 | param_1 & 0x7fffff | param_2 >> 9;\n    bVar10 = SBORROW4(iVar4,0x7f);\n    iVar5 = iVar4 + -0x7f;\n    bVar9 = iVar5 == 0;\n    iVar7 = iVar5;\n    if (!bVar9 && 0x7e < iVar4) {\n      bVar10 = SBORROW4(0xff,iVar5);\n      iVar7 = 0xff - iVar5;\n      bVar9 = iVar5 == 0xff;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      uVar2 = uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 && iVar7 < 0 == bVar10) {\n      return uVar2;\n    }\n    uVar2 = uVar2 | 0x800000;\n    uVar6 = 0;\n    bVar10 = SBORROW4(iVar5,1);\n    uVar8 = iVar4 - 0x80;\n    bVar9 = uVar8 == 0;\n    uVar3 = uVar8;\n  }\n  else {\n    lVar1 = (ulonglong)(uVar3 >> 5 | 0x8000000) * (ulonglong)(param_2 >> 5 | 0x8000000);\n    uVar6 = (uint)lVar1;\n    uVar2 = (uint)((ulonglong)lVar1 >> 0x20);\n    bVar9 = uVar2 < 0x800000;\n    if (bVar9) {\n      uVar2 = uVar2 << 1;\n    }\n    if (bVar9) {\n      uVar2 = uVar2 | uVar6 >> 0x1f;\n      uVar6 = uVar6 << 1;\n    }\n    uVar2 = uVar8 & 0x80000000 | uVar2;\n    uVar8 = (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 = SBORROW4(uVar8,0xfd);\n    bVar9 = uVar8 == 0xfd;\n    uVar3 = uVar8 - 0xfd;\n    if (uVar8 < 0xfe) {\n      uVar2 = uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff < uVar6);\n      if (uVar6 == 0x80000000) {\n        uVar2 = uVar2 & 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 < 0 != bVar10) {\n    bVar9 = (int)(uVar8 + 0x19) < 0;\n    if (uVar8 == 0xffffffe7 || bVar9 != SCARRY4(uVar8,0x19)) {\n      uVar2 = uVar2 & 0x80000000;\n    }\n    if (uVar8 != 0xffffffe7 && bVar9 == SCARRY4(uVar8,0x19)) {\n      uVar3 = (uVar2 << 1) >> (-uVar8 & 0xff);\n      uVar8 = uVar2 << (uVar8 + 0x20 & 0xff);\n      uVar3 = ((uint)((uVar2 & 0x80000000) != 0) << 0x1f | uVar3 >> 1) + (uint)((byte)uVar3 & 1);\n      if ((uVar6 | uVar8 << 1) == 0) {\n        uVar3 = uVar3 & ~(uVar8 >> 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_0800903c:\n  return uVar2 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008eec",
            "calling": [
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08002638",
                "FUN_08002978",
                "FUN_08004e30",
                "FUN_08001f00",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_08003826",
                "FUN_080005b4",
                "FUN_08002908",
                "FUN_080028bc",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "FUNC_08008eec"
        },
        "FUN_08006b54": {
            "renaming": {
                "FUN_08006b54": "get_higher_nibble_08006b54",
                "param_1": "input_byte",
                "bVar1": "output_byte"
            },
            "code": "byte get_higher_nibble_08006b54(byte input_byte) {\\n  byte output_byte;\\n  if ((char)input_byte < \"\\0\") {\\n    output_byte = *(byte *)((input_byte & 0xf) + DAT_08006b98 + 0x14);\\n  }\\n  else {\\n    output_byte = *(byte *)((char)input_byte + DAT_08006b9c + 0x300);\\n  }\\n  return output_byte >> 4;\\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b54",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "get_higher_nibble_08006b54"
        },
        "FUN_08007e84": {
            "renaming": {
                "FUN_08007e84": "get_dat_value_08007e84",
                "DAT_08007ea0": "DAT_OFFSET"
            },
            "code": "uint get_dat_value_08007e84(void)\n{\n    uint dat_value = *(uint *)(DAT_08007ea0 + 4) & 0xff;\n    return dat_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e84",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "get_dat_value_08007e84"
        },
        "FUN_080057e4": {
            "renaming": {
                "FUN_080057e4": "check_and_do_nothing_if_needed_080057e4",
                "PTR_DAT_0800580c": "flag_array",
                "PTR_DAT_08005810": "bit_array",
                "do_nothing_0800530c": "do_nothing"
            },
            "code": "void check_and_do_nothing_if_needed_080057e4(void)\n{\n  check_for_flag_and_bit();\n  if ((PTR_DAT_0800580c[0x3c] != -1) || ((PTR_DAT_08005810[2] & 0x20) != 0)) {\n    do_nothing();\n  }\n  return;\n}",
            "called": [
                "FUN_08007bc2",
                "FUN_0800530c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080057e4",
            "calling": [
                "FUN_080025e8",
                "FUN_080053a0",
                "FUN_08001d4c",
                "FUN_0800583c"
            ],
            "imported": false,
            "current_name": "check_and_do_nothing_if_needed_080057e4"
        },
        "FUN_08006d8a": {
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result",
                "FUN_08006998": "get_value"
            },
            "code": "int get_result_08006d8a(void)\n{\n  int result = get_value();\n  return result;\n}",
            "called": [
                "FUN_08006998"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d8a",
            "calling": [],
            "imported": false,
            "current_name": "get_result_08006d8a"
        },
        "FUN_0800b2e8": {
            "renaming": {
                "FUN_0800b2e8": "calculate_hash_0800b2e8",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "uVar1": "hash_value",
                "iVar2": "sum",
                "uVar3": "shifted_concatenation",
                "uVar4": "concatenated_values"
            },
            "code": "uint calculate_hash_0800b2e8(uint x, uint y, int z, undefined4 w)\n{\n  uint hash_value;\n  int sum;\n  uint uVar3;\n  ulonglong concatenated_values = CONCAT44(y, x);\n  uint shift_value = (y << 1) >> 0x15;\n  if (shift_value == 0) \n  {\n    if ((x | y & 0x7fffffff) == 0) \n    {\n      return x;\n    }\n    concatenated_values = FUNC_08008640(x, y, 0, DAT_0800b3c8);\n    if (z < DAT_0800b3cc) \n    {\n      goto LAB_0800b34a;\n    }\n    sum = ((int)(concatenated_values >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shift_value == 0x7ff) \n  {\n    hash_value = FUNC_080082d4(x, y, x, y, w);\n    return hash_value;\n  }\n  uVar3 = (uint)(concatenated_values >> 0x20);\n  sum = shift_value + z;\n  if (sum < 0x7ff) \n  {\n    if (0 < sum) \n    {\n      return (uint)concatenated_values;\n    }\n    if (sum + 0x35 < 0 == SCARRY4(sum,0x35)) \n    {\n      hash_value = FUNC_08008640((uint)concatenated_values,uVar3 & 0x800fffff | (sum + 0x36) * 0x100000,0,DAT_0800b3d8);\n      return hash_value;\n    }\n    if (z < 0xc351) \n    {\n      concatenated_values = concatenated_values & 0x8000000000000000 | (ulonglong)DAT_0800b3d0 | 0x1a56e1f00000000;\n      goto LAB_0800b34a;\n    }\n  }\n  hash_value = FUNC_08008640(DAT_0800b3d4,uVar3 & 0x80000000 | 0x7e37e43c,DAT_0800b3c0,DAT_0800b3c4);\n  return hash_value;\n}",
            "called": [
                "FUN_080082d4",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b2e8",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "calculate_hash_0800b2e8"
        },
        "FUN_08005220": {
            "renaming": {
                "FUN_08005220": "do_nothing_08005220"
            },
            "code": "\nvoid do_nothing_08005220(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005220",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005220"
        },
        "FUN_08007520": {
            "renaming": {
                "FUN_08007520": "check_odd_08007520",
                "param_1": "number",
                "FUN_080073d4": "print_error"
            },
            "code": "void check_odd_08007520(uint number)\n{\n    if ((number & 1) != 0) {\n        print_error(0x3e);\n    }\n    return;\n}",
            "called": [
                "FUN_080073d4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007520",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_odd_08007520"
        },
        "FUN_08007884": {
            "renaming": {
                "FUN_08007884": "get_flags_08007884",
                "iVar1": "flag1",
                "iVar2": "flag2",
                "iVar3": "flag3",
                "iVar4": "flag4",
                "iVar5": "flag5",
                "uVar6": "result",
                "FUN_08007854": "get_flag"
            },
            "code": "uint get_flags_08007884(void)\n{\n  int flag1 = get_flag(0x36);\n  int flag2 = get_flag(0x37);\n  int flag3 = get_flag(0x38);\n  int flag4 = get_flag(0x39);\n  int flag5 = get_flag(0xf);\n  uint result = get_flag(0);\n  return result | flag1 << 4 | flag2 << 3 | flag3 << 2 | flag4 << 1 | flag5 << 7;\n}",
            "called": [
                "FUN_08007854"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007884",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "get_flags_08007884"
        },
        "FUN_08004250": {
            "renaming": {
                "FUN_08004250": "initialize_settings_08004250",
                "PTR_DAT_08004470": "step_mm",
                "PTR_DAT_08004474": "settings_ptr",
                "PTR_s___x__step_mm___1__08004478": "step_mm_x_str",
                "PTR_s___y__step_mm___2__0800447c": "step_mm_y_str",
                "PTR_s___z__step_mm___3__08004480": "step_mm_z_str",
                "PTR_s___step_pulse__usec___4__08004484": "step_pulse_usec_str",
                "PTR_s___default_feed__mm_min___5__08004488": "default_feed_mm_min_str",
                "PTR_s___default_seek__mm_min___6__0800448c": "default_seek_mm_min_str",
                "PTR_s___step_port_invert_mask__int__08004490": "step_port_invert_mask_str",
                "PTR_s____7__08004494": "setting_7_str",
                "PTR_s___step_idle_delay__msec___8__08004498": "step_idle_delay_msec_str",
                "PTR_s___acceleration__mm_sec_2___9__080044a0": "acceleration_mm_sec2_str",
                "PTR_s___junction_deviation__mm___10__080044a4": "junction_deviation_mm_str",
                "PTR_s___arc__mm_segment___11__080044a8": "arc_mm_segment_str",
                "PTR_s___n_arc_correction__int___12__080044ac": "n_arc_correction_str",
                "PTR_s___n_decimals__int___13__080044b0": "n_decimals_str",
                "PTR_s___report_inches__bool___14__080044b4": "report_inches_str",
                "PTR_s___auto_start__bool___15__080044b8": "auto_start_str",
                "PTR_s___invert_step_enable__bool___16__080044bc": "invert_step_enable_str",
                "PTR_s___hard_limits__bool___17__080044c0": "hard_limits_str",
                "PTR_s___homing_cycle__bool___18__080044c4": "homing_cycle_str",
                "PTR_s___homing_dir_invert_mask__int__080044c8": "homing_dir_invert_mask_str",
                "PTR_s____19__080044cc": "setting_19_str",
                "PTR_s___homing_feed__mm_min___20__080044d0": "homing_feed_mm_min_str",
                "PTR_s___homing_seek__mm_min___21__080044d4": "homing_seek_mm_min_str",
                "PTR_s___homing_debounce__msec___22__080044d8": "homing_debounce_msec_str",
                "PTR_s___homing_pull_off__mm___23__080044dc": "homing_pull_off_mm_str"
            },
            "code": "void initialize_settings_08004250(void)\n{\n    undefined4 PTR_DAT_08004470;\n    undefined4 default_feed;\n    undefined4 default_seek;\n    undefined2 step_port_invert_mask;\n    undefined2 homing_dir_invert_mask;\n    undefined4 homing_feed;\n    undefined4 homing_seek;\n    undefined2 dir_port_invert_mask;\n    undefined4 homing_debounce;\n    undefined2 homing_pull_off;\n    undefined4 acceleration;\n    undefined4 junction_deviation;\n    undefined4 arc_segment;\n    bool report_inches;\n    bool auto_start;\n    bool invert_step_enable;\n    bool hard_limits;\n    bool homing_cycle;\n    int n_arc_correction;\n    int n_decimals;\n    undefined4 homing_pull_off_mm;\n    undefined4 homing_debounce_msec;\n\n    PTR_DAT_08004470 = *(undefined4 *)PTR_DAT_08004474;\n    default_feed = *(undefined4 *)(PTR_DAT_08004474 + 0x14);\n    default_seek = *(undefined4 *)(PTR_DAT_08004474 + 0x18);\n    step_port_invert_mask = *(undefined2 *)(PTR_DAT_08004474 + 0x18);\n    homing_dir_invert_mask = *(undefined2 *)(PTR_DAT_08004474 + 0x2a);\n    homing_feed = *(undefined4 *)(PTR_DAT_08004474 + 0x30);\n    homing_seek = *(undefined4 *)(PTR_DAT_08004474 + 0x34);\n    dir_port_invert_mask = *(undefined2 *)(PTR_DAT_08004474 + 0x1a);\n    homing_debounce = *(undefined4 *)(PTR_DAT_08004474 + 0x38);\n    homing_pull_off_mm = *(undefined2 *)(PTR_DAT_08004474 + 0x1a);\n    acceleration = *(undefined4 *)(PTR_DAT_08004474 + 0x24);\n    junction_deviation = *(undefined4 *)(PTR_DAT_08004474 + 0x1c);\n    arc_segment = PTR_DAT_08004474[0x3e];\n    n_arc_correction = PTR_DAT_08004474[0x3d];\n    n_decimals = (PTR_DAT_08004474[0x28] & 1) != 0;\n    report_inches = (PTR_DAT_08004474[0x28] & 2) != 0;\n    auto_start = (PTR_DAT_08004474[0x28] & 4) != 0;\n    invert_step_enable = (PTR_DAT_08004474[0x28] & 8) != 0;\n    hard_limits = (PTR_DAT_08004474[0x28] & 0x10) != 0;\n    homing_cycle = *(undefined2 *)(PTR_DAT_08004474 + 0x2a);\n    homing_pull_off = *(undefined2 *)(PTR_DAT_08004474 + 0x1a);\n    homing_debounce_msec = *(undefined4 *)(PTR_DAT_08004474 + 0x38);\n\n    set_step_size(PTR_DAT_08004470);\n    set_default_feed_rate(default_feed);\n    set_default_seek_rate(default_seek);\n    set_step_port_invert_mask(step_port_invert_mask);\n    set_homing_dir_invert_mask(homing_dir_invert_mask);\n    set_homing_feed_rate(homing_feed);\n    set_homing_seek_rate(homing_seek);\n    set_dir_port_invert_mask(dir_port_invert_mask);\n    set_homing_debounce(homing_debounce);\n    set_homing_pull_off(homing_pull_off_mm);\n    set_acceleration(acceleration);\n    set_junction_deviation(junction_deviation);\n    set_arc_segment_length(arc_segment);\n    set_arc_correction(n_arc_correction);\n    set_report_inches(report_inches);\n    set_auto_start(auto_start);\n    set_invert_step_enable(invert_step_enable);\n    set_hard_limits(hard_limits);\n    set_homing_cycle(homing_cycle);\n    set_n_decimals(n_decimals);\n    set_homing_debounce_msec(homing_debounce_msec);\n}",
            "called": [
                "FUN_0800375c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08009054",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004250",
            "calling": [
                "FUN_080051b4",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_settings_08004250"
        },
        "FUN_08006dc4": {
            "renaming": {
                "FUN_08006dc4": "process_character_08006dc4",
                "param_1": "character_to_process",
                "FUN_08006a58": "call_function_08006a58"
            },
            "code": "void process_character_08006dc4(char character_to_process) {\n  call_function_08006a58((int)character_to_process);\n  return;\n}",
            "called": [
                "FUN_08006a58"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006dc4",
            "calling": [],
            "imported": false,
            "current_name": "process_character_08006dc4"
        },
        "FUN_08007402": {
            "renaming": {
                "FUN_08007402": "set_bit_in_short_at_offset_08007402",
                "param_1": "PTR_param_1"
            },
            "code": "void set_bit_in_short_at_offset_08007402(uint8_t bit_offset) {\n    uint16_t* short_ptr = (uint16_t*)(((int)PTR_param_1 >> 4) * 0x400 + 0x40020018);\n    uint8_t bit_mask = 1 << (bit_offset & 0xf);\n    *short_ptr = bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007402",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_bit_in_short_at_offset_08007402"
        },
        "FUN_08002870": {
            "renaming": {
                "FUN_08002870": "increment_char_08002870",
                "param_1": "input_char",
                "local_9": "incremented_char"
            },
            "code": "char increment_char_08002870(char input_char) {\n  char incremented_char = input_char + 1;\n  if (incremented_char == 18) {\n    incremented_char = 0;\n  }\n  return incremented_char;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002870",
            "calling": [
                "FUN_08002ef0",
                "FUN_08002ba8",
                "FUN_08002e08",
                "FUN_08003004",
                "FUN_08002f40"
            ],
            "imported": false,
            "current_name": "increment_char_08002870"
        },
        "FUN_08000210": {
            "renaming": {
                "FUN_08000210": "do_nothing_and_return_08000210"
            },
            "code": "void do_nothing_and_return_08000210(void)\n{\n  do_nothing_080001ec();\n  do_nothing_080001d4();\n  return;\n}",
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000210",
            "calling": [
                "FUN_080025e8",
                "FUN_080001f8",
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_and_return_08000210"
        },
        "FUN_08005900": {
            "renaming": {
                "FUN_08005900": "check_byte_08005900",
                "param_1": "byte_to_check",
                "PTR_DAT_08005978": "ptr_data",
                "FUN_080025e8": "call_some_function"
            },
            "code": "int check_byte_08005900(byte byte_to_check) {\n    if (byte_to_check == 0x7e) {\n        PTR_DAT_08005978[2] |= 2;\n        return 1;\n    }\n    if (byte_to_check < 0x7f) {\n        if (byte_to_check == 0x3f) {\n            PTR_DAT_08005978[2] |= 1;\n            return 1;\n        }\n        if (byte_to_check < 0x40) {\n            if (byte_to_check == 0x18) {\n                call_some_function();\n                return 1;\n            }\n            if (byte_to_check == 0x21) {\n                PTR_DAT_08005978[2] |= 8;\n                return 1;\n            }\n        }\n    }\n    return 0;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005900",
            "calling": [
                "FUN_08008286"
            ],
            "imported": false,
            "current_name": "check_byte_08005900"
        },
        "FUN_08002638": {
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "start_index",
                "param_2": "input_string",
                "param_3": "output_value",
                "pcVar5": "current_position",
                "pcVar6": "current_position",
                "local_d": "current_char",
                "bVar1": "char_value",
                "bVar2": "is_negative",
                "bVar3": "is_exponent",
                "iVar4": "exponent_value",
                "local_14": "parsed_value",
                "local_15": "num_decimal_places",
                "local_16": "num_digits",
                "local_c": "current_position",
                "local_1c": "result",
                "uVar7": "return_value",
                "uVar8": "temp_value"
            },
            "code": "uint32_t parse_integer_08002638(int start_index, uint8_t *input_string, uint32_t *output_value)\n{\n  uint8_t current_char;\n  bool is_negative = false;\n  bool is_exponent = false;\n  int exponent_value = 0;\n  int num_digits = 0;\n  int num_decimal_places = 0;\n  uint32_t parsed_value = 0;\n  uint32_t result = 0;\n  uint8_t *current_position = input_string + start_index;\n  current_char = *current_position;\n  if (current_char == '-') {\n    is_negative = true;\n    current_position++;\n    current_char = *current_position;\n  }\n  else if (current_char == '+') {\n    current_position++;\n    current_char = *current_position;\n  }\n  while (current_char != '\\0') {\n    if (current_char == '.') {\n      is_exponent = true;\n      current_position++;\n      current_char = *current_position;\n    }\n    else if (current_char == 'e' || current_char == 'E') {\n      is_exponent = true;\n      current_position++;\n      current_char = *current_position;\n      if (current_char == '-') {\n        exponent_value = -1;\n        current_position++;\n        current_char = *current_position;\n      }\n      else if (current_char == '+') {\n        current_position++;\n        current_char = *current_position;\n      }\n      while (current_char >= '0' && current_char <= '9') {\n        exponent_value = exponent_value * 10 + (current_char - '0');\n        current_position++;\n        current_char = *current_position;\n      }\n    }\n    else if (current_char >= '0' && current_char <= '9') {\n      if (num_decimal_places > 0) {\n        num_decimal_places++;\n      }\n      else if (num_digits == 0 && current_char == '0') {\n        current_position++;\n        current_char = *current_position;\n      }\n      else {\n        num_digits++;\n        parsed_value = parsed_value * 10 + (current_char - '0');\n        if (num_digits == 9) {\n          if (is_exponent) {\n            exponent_value += num_decimal_places - 9;\n          }\n          else if (num_decimal_places > 0) {\n            exponent_value = num_decimal_places - 9;\n          }\n          break;\n        }\n      }\n      current_position++;\n      current_char = *current_position;\n    }\n    else if (current_char == ' ') {\n      current_position++;\n      current_char = *current_position;\n    }\n    else {\n      break;\n    }\n  }\n  while (exponent_value > 0) {\n    parsed_value *= 10;\n    exponent_value--;\n  }\n  while (exponent_value < 0) {\n    if (parsed_value % 10 == 0) {\n      parsed_value /= 10;\n      exponent_value++;\n    }\n    else {\n      break;\n    }\n  }\n  result = parsed_value;\n  if (is_negative) {\n    result = -parsed_value;\n  }\n  *output_value = result;\n  return 1;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002638",
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "parse_integer_08002638"
        },
        "FUN_080051b4": {
            "renaming": {
                "FUN_080051b4": "check_and_display_data_080051b4",
                "iVar1": "result",
                "auStack_18": "data_buffer",
                "local_9": "index",
                "FUN_08004dd2": "check_data",
                "FUN_08004030": "display_error",
                "FUN_08004c48": "set_flag",
                "FUN_08004250": "reset_display",
                "FUN_08004d7c": "get_data"
            },
            "code": "void check_and_display_data_080051b4(void)\n{\n  int result;\n  undefined data_buffer[15];\n  byte index;\n\n  result = check_data();\n  if (result == 0) {\n    display_error(10);\n    set_flag(1);\n    reset_display();\n  }\n  for (index = 0; index < 8; index++) {\n    result = get_data(index, data_buffer);\n    if (result == 0) {\n      display_error(10);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004250",
                "FUN_08004c48",
                "FUN_08004d7c",
                "FUN_08004030",
                "FUN_08004dd2"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080051b4",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "check_and_display_data_080051b4"
        },
        "FUN_080098d0": {
            "renaming": {
                "FUN_080098d0": "FUNC_080098d0"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined4 FUNC_080098d0(undefined4 param_1,undefined4 param_2)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  int *piVar5;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  uVar2 = FUN_0800a1bc();\n  cVar1 = *PTR_DAT_08009988;\n  if (((cVar1 == -1) || (local_30 = FUN_08008b74(param_1,param_2,param_1,param_2), local_30 != 0))\n     || (iVar3 = FUN_08008b24(param_1,param_2,0,0), iVar3 == 0)) {\n    return uVar2;\n  }\n  local_50 = 1;\n  local_4c = PTR_DAT_0800998c;\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_1;\n  uStack_3c = param_2;\n  if (cVar1 == '\\0') {\n    local_38 = 0;\nLAB_0800996c:\n    iVar3 = FUN_0800b2e0(&local_50);\n    if (iVar3 != 0) goto joined_r0x0800997a;\n  }\n  else {\n    local_38 = FUNC_08008894(0,0,0,0);\n    if (cVar1 != '\\x02') goto LAB_0800996c;\n  }\n  puVar4 = (undefined4 *)FUN_0800b3dc();\n  *puVar4 = 0x21;\njoined_r0x0800997a:\n  if (local_30 != 0) {\n    piVar5 = (int *)FUN_0800b3dc();\n    *piVar5 = local_30;\n  }\n  return (undefined4)local_38;\n}\n\n",
            "called": [
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008b24",
                "FUN_08008894",
                "FUN_08008b74",
                "FUN_0800b3dc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x080098d0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08002978"
            ],
            "imported": false,
            "current_name": "FUNC_080098d0"
        },
        "FUN_08005c30": {
            "renaming": {
                "FUN_08005c30": "is_param_within_range_08005c30",
                "param_1": "param",
                "bVar1": "is_within_range"
            },
            "code": "bool is_param_within_range_08005c30(unsigned int param) {\n  bool is_within_range = param < 0x1000000;\n  if (is_within_range) {\n    DAT_08005c70[1] = param - 1;\n    set_bits_in_DAT_08005c70(0xffffffff,0xf);\n    DAT_08005c70[2] = 0;\n    *DAT_08005c70 = 7;\n  }\n  return !is_within_range;\n}",
            "called": [
                "FUN_08005bdc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005c30",
            "calling": [
                "FUN_0800618c"
            ],
            "imported": false,
            "current_name": "is_param_within_range_08005c30"
        },
        "FUN_0800b51c": {
            "renaming": {
                "FUN_0800b51c": "do_nothing_0800b51c"
            },
            "code": "\nvoid do_nothing_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b51c",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b51c"
        },
        "FUN_0800056c": {
            "renaming": {
                "process_data": "process_data",
                "param_1": "input",
                "PTR_DAT_080005b0": "GLOBAL_VAR_1",
                "FUN_08008590": "compute",
                "FUNC_08008640": "transform",
                "DAT_080005a8": "GLOBAL_VAR_2",
                "DAT_080005ac": "unused",
                "FUN_08008c30": "finalize",
                "FUN_0800056c": "process_data_0800056c"
            },
            "code": "int process_data_0800056c(int input)\n{\n  if (is_valid_data()) {\n    int processed_data = compute(input);\n    int result = FUNC_08008640(processed_data, PTR_DAT_080005b0, DAT_080005a8);\n    input = finalize(result);\n  }\n  return input;\n}",
            "called": [
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800056c",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_0800056c"
        },
        "FUN_08002f24": {
            "renaming": {
                "FUN_08002f24": "execute_program_08002f24",
                "FUN_08002ef0": "initialize",
                "FUN_0800b430": "write_to_memory",
                "PTR_DAT_08002f3c": "PTR_DATA_SECTION"
            },
            "code": "void execute_program_08002f24(void)\n{\n  initialize();\n  write_to_memory(PTR_DAT_08002f3c, 0, 0x1c);\n  return;\n}",
            "called": [
                "FUN_08002ef0",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f24",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_program_08002f24"
        },
        "FUN_0800981c": {
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "cVar1": "hypotenuse_type",
                "puVar2": "hypotenuse_ptr",
                "iVar3": "error_code",
                "puVar4": "output_ptr",
                "piVar5": "status_ptr",
                "uVar6": "result",
                "local_50": "hypotenuse_length",
                "puStack_4c": "hypotenuse_data_ptr",
                "local_48": "x1_copy",
                "uStack_44": "y1_copy",
                "local_40": "x2_copy",
                "uStack_3c": "y2_copy",
                "local_30": "hypotenuse_status"
            },
            "code": "undefined8 calculate_hypotenuse_0800981c(undefined4 x1, undefined4 y1, undefined4 x2, undefined4 y2) {\n  char hypotenuse_type;\n  undefined *hypotenuse_ptr;\n  int error_code;\n  undefined4 *output_ptr;\n  int *status_ptr;\n  undefined8 result;\n  undefined4 hypotenuse_length;\n  undefined *hypotenuse_data_ptr;\n  undefined4 x1_copy;\n  undefined4 y1_copy;\n  undefined4 x2_copy;\n  undefined4 y2_copy;\n  int hypotenuse_status;\n  hypotenuse_ptr = PTR_DAT_080098cc;\n  result = FUNC_08009b24();\n  if (*hypotenuse_ptr == -1) {\n    return result;\n  }\n  hypotenuse_status = FUN_0800b2d4();\n  if (hypotenuse_status != 0) {\n    return result;\n  }\n  error_code = FUN_0800b2d4(x1, y1);\n  if (error_code == 0) {\n    return result;\n  }\n  error_code = FUN_0800b2d4(x2, y2);\n  if (error_code == 0) {\n    return result;\n  }\n  hypotenuse_type = *hypotenuse_ptr;\n  hypotenuse_length = 3;\n  hypotenuse_data_ptr = PTR_s_hypot_080098c0;\n  x1_copy = x1;\n  y1_copy = y1;\n  x2_copy = x2;\n  y2_copy = y2;\n  if (hypotenuse_type == '\\0') {\n    hypotenuse_length = 0xe0000000;\n    hypotenuse_data_ptr = DAT_080098c8;\n  }\n  else {\n    hypotenuse_data_ptr = DAT_080098c4;\n    if (hypotenuse_type == '\\x02') {\n      hypotenuse_length = 0xe0000000;\n    }\n  }\n  error_code = FUN_0800b2e0(&hypotenuse_length);\n  if (error_code != 0) {\n    goto LAB_08009896;\n  }\n  output_ptr = (undefined4 *)FUN_0800b3dc();\n  *output_ptr = 0x22;\nLAB_08009896:\n  result = CONCAT44(hypotenuse_length,hypotenuse_data_ptr);\n  if (hypotenuse_status != 0) {\n    status_ptr = (int *)FUN_0800b3dc();\n    result = CONCAT44(hypotenuse_length,hypotenuse_data_ptr);\n    *status_ptr = hypotenuse_status;\n  }\n  return result;\n}",
            "called": [
                "FUN_0800b2e0",
                "FUN_0800b2d4",
                "FUN_08009b24",
                "FUN_0800b3dc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800981c",
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_hypotenuse_0800981c"
        },
        "FUN_080059b4": {
            "renaming": {
                "FUN_080059b4": "enable_flags_and_call_functions_080059b4",
                "*DAT_080059f4": "data_ptr",
                "FUN_08006d72": "call_function_1",
                "FUN_08006ce0": "call_function_2",
                "do_nothing_08005a50": "do_nothing"
            },
            "code": "void enable_flags_and_call_functions_080059b4(void)\n{\n    int **DAT_080059f4 = DAT_080059f4;\n    **DAT_080059f4 |= 0x200;\n    **DAT_080059f4 |= 0x400;\n    **DAT_080059f4 |= 0x100;\n    call_function_1(16000);\n    call_function_2(3);\n    do_nothing();\n    return;\n}",
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080059b4",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "enable_flags_and_call_functions_080059b4"
        },
        "FUN_08006c04": {
            "renaming": {
                "FUN_08006c04": "decode_bits_08006c04",
                "param_1": "input_bits",
                "param_2": "num_bits_to_decode",
                "param_3": "decoded_bits1",
                "param_4": "decoded_bits2",
                "uVar1": "num_bits_remaining",
                "*param_3": "*decoded_bits1",
                "*param_4": "*decoded_bits2"
            },
            "code": "void decode_bits_08006c04(uint input_bits, uint num_bits_to_decode, uint* decoded_bits1, uint* decoded_bits2)\n{\n  uint num_bits_remaining = 7 - (num_bits_to_decode & 7);\n  if (num_bits_remaining > 3) {\n    num_bits_remaining = 4;\n  }\n  uint num_bits_to_shift = num_bits_to_decode + 4 > 7 ? num_bits_to_decode - 3 : 0;\n  *decoded_bits1 = (1 << (num_bits_remaining & 0xff)) - 1U & input_bits >> (num_bits_to_shift & 0xff);\n  *decoded_bits2 = (1 << (num_bits_to_shift & 0xff)) - 1U & input_bits;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006c04",
            "calling": [
                "FUN_08006d98"
            ],
            "imported": false,
            "current_name": "decode_bits_08006c04"
        },
        "FUN_08002e08": {
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "PTR_DAT_08002ed0": "current_index",
                "PTR_DAT_08002ed8": "end_index",
                "PTR_DAT_08002ed4": "data_array",
                "FUNC_08009054": "calculate_value",
                "local_18": "current_data",
                "local_11": "current_index",
                "puVar3": "data_ptr",
                "uVar1": "first_value",
                "uVar2": "second_value",
                "FUN_08002c18": "update_data"
            },
            "code": "void process_data_08002e08(void)\n{\n  uint8_t PTR_DAT_08002ed0 = *PTR_DAT_08002ed0;\n  uint8_t* current_data = (uint8_t*)0x0;\n  while (PTR_DAT_08002ed0 != *PTR_DAT_08002ed8) {\n    uint8_t* data_ptr = PTR_DAT_08002ed4 + (uint)PTR_DAT_08002ed0 * 0x40;\n    if ((current_data != (uint8_t*)0x0) && ((current_data[0x24] != '\\0' || (data_ptr[0x24] != '\\0')))) {\n      uint32_t first_value = FUNC_08009054(*(uint32_t *)(current_data + 0x18),*(uint32_t *)(current_data + 0x14));\n      uint32_t second_value = FUNC_08009054(*(uint32_t *)(data_ptr + 0x18),*(uint32_t *)(current_data + 0x14));\n      update_data(current_data,first_value,second_value);\n      current_data[0x24] = 0;\n    }\n    PTR_DAT_08002ed0 = get_next_index(PTR_DAT_08002ed0);\n    current_data = data_ptr;\n  }\n  uint32_t last_first_value = FUNC_08009054(*(uint32_t *)(current_data + 0x18),*(uint32_t *)(current_data + 0x14));\n  uint32_t last_second_value = FUNC_08009054(0,*(uint32_t *)(current_data + 0x14));\n  update_data(current_data,last_first_value,last_second_value);\n  current_data[0x24] = 0;\n  return;\n}",
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002e08",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002e08"
        },
        "FUN_08006680": {
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "value",
                "uVar2": "leading_zeroes",
                "FUN_08006628": "get_first_value",
                "count_leading_zeroes": "count_leading_zeroes",
                "PTR_DAT_080066c8": "data_pointer",
                "DAT_080066c4": "data"
            },
            "code": "unsigned int get_shifted_value_08006680() {\n    unsigned int value = get_first_value();\n    unsigned int leading_zeroes = count_leading_zeroes(0x380000);\n    unsigned int shift_amount = (*(unsigned int *)(PTR_DAT_080066c8 + 8) & 0x1c00) >> (leading_zeroes & 0xff);\n    return value >> shift_amount;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006680",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "get_shifted_value_08006680"
        },
        "FUN_08000340": {
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data",
                "PTR_DAT_0800036c": "data_available",
                "FUN_080002f0": "initialize_data",
                "PTR_DAT_08000370": "data_array"
            },
            "code": "void store_data_08000340(uint index, undefined data){\n    if (*(int *)PTR_DAT_0800036c == 0) {\n        initialize_data();\n    }\n    PTR_DAT_08000370[index & 0x3ff] = data;\n    return;\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000340",
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "imported": false,
            "current_name": "store_data_08000340"
        },
        "thunk_FUN_08009990": {
            "renaming": {
                "thunk_FUN_08009990": "calculate_value_thunk_08009990",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "difference",
                "uVar2": "result",
                "uVar3": "absolute_param4",
                "uVar4": "absolute_param2",
                "uVar5": "value",
                "uVar6": "combined_value"
            },
            "code": "uint calculate_value_thunk_08009990(uint param1, uint param2, uint param3, uint param4)\n{\n  int difference;\n  undefined4 result;\n  uint absolute_param4;\n  uint absolute_param2;\n  uint value;\n  undefined8 combined_value;\n  \n  combined_value = CONCAT44(DAT_08009b04, DAT_08009b00);\n  absolute_param4 = param4 & 0x7fffffff;\n  absolute_param2 = param2 & 0x7fffffff;\n  \n  if (DAT_08009b18 < (absolute_param4 | (-param3 | param3) >> 0x1f) || DAT_08009b18 < (absolute_param2 | (-param1 | param1) >> 0x1f)) {\n    value = FUNC_080082d4(param3, param4, param1, param2);\n  }\n  else {\n    if ((param4 + 0xc0100000 | param3) == 0) {\n      value = FUNC_0800af78();\n      return value;\n    }\n    else {\n      difference = (int)param4 >> 0x1e & 2U | param2 >> 0x1f;\n      if ((absolute_param2 | param1) == 0) {\n        value = DAT_08009af0;\n        if (difference != 2) {\n          value = param1;\n          if (difference == 3) {\n            value = DAT_08009af8;\n          }\n        }\n      }\n      else {\n        if ((absolute_param4 | param3) != 0) {\n          if (absolute_param4 == DAT_08009b18) {\n            difference = difference - 1;\n            if (absolute_param2 == absolute_param4) {\n              if (2 < difference) {\n                return DAT_08009b10;\n              }\n              return *(uint *)(PTR_DAT_08009b20 + difference * 8);\n            }\n            if (difference < 3) {\n              return *(uint *)(PTR_DAT_08009b1c + difference * 8);\n            }\n            return 0;\n          }\n          if (absolute_param2 != DAT_08009b18) {\n            difference = (int)(absolute_param2 - absolute_param4) >> 0x14;\n            if ((int)(absolute_param2 - absolute_param4) < 0x3d00000) {\n              if (((int)param4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n                combined_value = 0;\n              }\n              else {\n                FUNC_08008894(param1, param2, param3, param4, param4);\n                do_nothing_0800b2cc();\n                combined_value = FUNC_0800af78();\n              }\n            }\n            result = (undefined4)((ulonglong)combined_value >> 0x20);\n            value = (uint)combined_value;\n            if (difference == 1) {\n              return value;\n            }\n            if (difference == 2) {\n              combined_value = FUNC_080082d0(value, result, DAT_08009ae8, DAT_08009aec);\n              value = FUNC_080082d0(DAT_08009af0, DAT_08009af4, (int)combined_value, (int)((ulonglong)combined_value >> 0x20));\n              return value;\n            }\n            if (difference == 0) {\n              return value;\n            }\n            combined_value = FUNC_080082d0(value, result, DAT_08009ae8, DAT_08009aec);\n            value = FUNC_080082d0((int)combined_value, (int)((ulonglong)combined_value >> 0x20), DAT_08009af0, DAT_08009af4);\n            return value;\n          }\n        }\n        value = DAT_08009b08;\n        if (-1 < (int)param2) {\n          value = DAT_08009b00;\n        }\n      }\n    }\n  }\n  return value;\n}",
            "called": [
                "FUN_08009990"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009818",
            "calling": [
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "calculate_value_thunk_08009990"
        },
        "FUN_08004bf4": {
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_call_function_08004bf4",
                "param_1": "input_char",
                "param_2": "input_value",
                "FUN_08000374": "call_function_with_offset"
            },
            "code": "void calculate_offset_and_call_function_08004bf4(byte input_char, undefined4 input_value)\n{\n    ushort offset = (ushort)input_char * 0xd + 0x200;\n    int function_argument = 0xc;\n    call_function_with_offset(offset, input_value, function_argument);\n    return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bf4",
            "calling": [
                "FUN_080005b4",
                "FUN_08004d7c"
            ],
            "imported": false,
            "current_name": "calculate_offset_and_call_function_08004bf4"
        },
        "FUN_08004d7c": {
            "renaming": {
                "FUN_08004d7c": "check_value_08004d7c",
                "param_1": "value",
                "param_2": "ptr_data",
                "iVar1": "result",
                "FUN_080003ec": "process_data",
                "FUN_0800b430": "reset_data",
                "FUN_08004bf4": "update_value"
            },
            "code": "bool check_value_08004d7c(byte value, undefined4 ptr_data)\n{\n  int result = FUN_080003ec(ptr_data, (ushort)value * 0xd + 0x200, 0xc);\n  if (result == 0) {\n    FUN_0800b430(ptr_data, 0, 0xc);\n    FUN_08004bf4(value, ptr_data);\n  }\n  return result != 0;\n}",
            "called": [
                "FUN_08004bf4",
                "FUN_0800b430",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d7c",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "check_value_08004d7c"
        },
        "FUN_08009278": {
            "renaming": {
                "FUN_08009278": "convert_to_integer_08009278",
                "param_1": "input_value",
                "uVar1": "shift_value_8",
                "uVar2": "subtracted_value"
            },
            "code": "uint convert_to_integer_08009278(uint input_value) {\n  uint shift_value = input_value << 1;\n  if (shift_value < 0x7f000000) {\n    return 0;\n  }\n  uint shift_value_8 = shift_value >> 0x18;\n  uint subtracted_value = 0x9e - shift_value_8;\n  if (shift_value_8 < 0x9f && subtracted_value != 0) {\n    uint shifted_value = (input_value << 8 | 0x80000000) >> (subtracted_value & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((subtracted_value == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009278",
            "calling": [
                "FUN_08003826",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_to_integer_08009278"
        },
        "FUN_080004fc": {
            "renaming": {
                "FUN_080004fc": "process_params_and_store_in_memblock_080004fc",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "uVar1": "processed_param",
                "PTR_DAT_08000564": "GLOBAL_CONST_PTR",
                "PTR_DAT_08000568": "memblock_ptr",
                "FUN_08008e44": "process_param",
                "FUNC_08009054": "apply_function"
            },
            "code": "void process_params_and_store_in_memblock_080004fc(int param_1, int param_2, int param_3)\n{\n  int processed_param_1 = process_param(param_1);\n  int processed_param_2 = process_param(param_2);\n  int processed_param_3 = process_param(param_3);\n  *(int *)(PTR_DAT_08000568 + 0xc) = apply_function(processed_param_1, *(int *)PTR_DAT_08000564);\n  *(int *)(PTR_DAT_08000568 + 0x10) = apply_function(processed_param_2, *(int *)(PTR_DAT_08000564 + 4));\n  *(int *)(PTR_DAT_08000568 + 0x14) = apply_function(processed_param_3, *(int *)(PTR_DAT_08000564 + 8));\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004fc",
            "calling": [
                "FUN_0800283a"
            ],
            "imported": false,
            "current_name": "process_params_and_store_in_memblock_080004fc"
        },
        "FUN_08000220": {
            "renaming": {
                "FUN_08000220": "update_state_08000220",
                "param_1": "new_state",
                "FUN_08002fd4": "reset_state",
                "do_nothing_080001c8": "do_action_1",
                "do_nothing_080001e0": "do_action_2",
                "FUN_08000210": "handle_unknown_state"
            },
            "code": "void update_state_08000220(char new_state) {\n  if (new_state != *PTR_DAT_08000264) {\n    reset_state();\n    if (new_state == '\\x01') {\n      do_action_1();\n    }\n    else if (new_state == '\\x02') {\n      do_action_2();\n    }\n    else {\n      handle_unknown_state();\n    }\n    *PTR_DAT_08000264 = new_state;\n  }\n  return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_080001c8",
                "FUN_08000210",
                "FUN_080001e0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000220",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "update_state_08000220"
        },
        "FUN_08005238": {
            "renaming": {
                "FUN_08005238": "set_dat_pointer_to_zero_and_call_fun_08005250_08005238",
                "PTR_DAT_0800524c": "dat_pointer",
                "FUN_08005250": "call_fun_08005250"
            },
            "code": "void set_dat_pointer_to_zero_and_call_fun_08005250_08005238(void)\n{\n  *PTR_DAT_0800524c = 0;\n  call_fun_08005250();\n  return;\n}",
            "called": [
                "FUN_08005250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005238",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "set_dat_pointer_to_zero_and_call_fun_08005250_08005238"
        },
        "FUN_08007da8": {
            "renaming": {
                "FUN_08007da8": "set_bit_and_flag_08007da8",
                "puVar1": "ptr_data",
                "DAT_08007dd4": "data"
            },
            "code": "void set_bit_and_flag_08007da8(void)\n{\n  uint *ptr_DAT_08007dd4 = DAT_08007dd4;\n  ptr_DAT_08007dd4[8] |= 0x10;\n  *ptr_DAT_08007dd4 |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007da8",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "set_bit_and_flag_08007da8"
        },
        "FUN_08004148": {
            "renaming": {
                "FUN_08004148": "print_alarm_message_08004148",
                "param_1": "alarm_type",
                "FUN_080036c6": "print_message",
                "PTR_s_ALARM__08004190": "alarm_message",
                "PTR_s_Abort_during_cycle_08004198": "abort_message",
                "PTR_s_Hard_limit_08004194": "hard_limit_message",
                "PTR_s___MPos__0800419c": "mpos_message",
                "do_nothing_08002814": "delay"
            },
            "code": "void print_alarm_message_08004148(char alarm_type)\n{\n  print_message(PTR_s_ALARM__08004190);\n  if (alarm_type == -2) {\n    print_message(PTR_s_Abort_during_cycle_08004198);\n  }\n  else if (alarm_type == -1) {\n    print_message(PTR_s_Hard_limit_08004194);\n  }\n  print_message(PTR_s___MPos__0800419c);\n  delay(500);\n  return;\n}",
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004148",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "print_alarm_message_08004148"
        },
        "FUN_08004940": {
            "renaming": {
                "FUN_08004940": "process_data_08004940",
                "uVar1": "temp_var",
                "uVar2": "index",
                "uVar3": "temp_var_2",
                "uVar4": "temp_var_64",
                "uVar5": "temp_var_64_2",
                "auStack_2c": "stack_array",
                "local_11": "local_index",
                "PTR_DAT_08004b88": "ptr_data_08004b88",
                "PTR_DAT_08004bac": "ptr_data_08004bac",
                "PTR_DAT_08004bb8": "ptr_data_08004bb8",
                "PTR_DAT_08004b80": "ptr_data_08004b80",
                "PTR_DAT_08004b84": "ptr_data_08004b84",
                "PTR_s__MPos__08004ba8": "ptr_string_mpos_08004ba8",
                "PTR_s_WPos__08004bb4": "ptr_string_wpos_08004bb4",
                "PTR_DAT_08004bb0": "ptr_data_08004bb0",
                "PTR_DAT_08004bbc": "ptr_data_08004bbc",
                "switchD_0800495e": "switch_data_0800495e",
                "switchD_0800495e::switchdataD_08004964": "switch_data_08004964"
            },
            "code": "void process_data_08004940(void)\n{\n    uint8_t index;\n    uint32_t stack_array[6];\n    uint32_t temp_var;\n    uint64_t temp_var_64;\n    uint32_t array_08004bac[12] = {0};\n    uint8_t local_11;\n\n    array_08004bac[3] = *(uint32_t *)(PTR_DAT_08004b88 + 4);\n    array_08004bac[4] = *(uint32_t *)(PTR_DAT_08004b88 + 8);\n    array_08004bac[5] = *(uint32_t *)(PTR_DAT_08004b88 + 0xc);\n\n    if ((uint8_t)PTR_DAT_08004b88[1] < 8) {\n        (*(void (*)())(&switchD_0800495e::switchdataD_08004964)[(uint8_t)PTR_DAT_08004b88[1]])();\n        return;\n    }\n\n    process_string(PTR_s__MPos__08004ba8);\n\n    for (index = 0; index < 3; index++) {\n        temp_var = calculate_value(array_08004bac[index + 3]);\n        temp_var = perform_operation(temp_var,*(uint32_t *)(PTR_DAT_08004bac + index * 4));\n        stack_array[index] = temp_var;\n\n        if ((array_08004bac[0x28] & 1) != 0) {\n            temp_var_64 = get_value(stack_array[index]);\n            temp_var_64 = perform_operation_64((int32_t)temp_var_64,(int32_t)(temp_var_64 >> 0x20),DAT_08004b80,DAT_08004b84);\n            temp_var = calculate_value((int32_t)temp_var_64,(int32_t)(temp_var_64 >> 0x20));\n            stack_array[index] = temp_var;\n        }\n\n        process_string(PTR_DAT_08004bb0);\n    }\n\n    process_string(PTR_s_WPos__08004bb4);\n\n    for (local_11 = 0; local_11 < 3; local_11++) {\n        if ((array_08004bac[0x28] & 1) == 0) {\n            temp_var = stack_array[local_11];\n            temp_var = perform_operation_2(temp_var,*(uint32_t *)(PTR_DAT_08004bb8 + (local_11 + 8) * 4),*(uint32_t *)(PTR_DAT_08004bb8 + (local_11 + 10) * 4 + 4));\n            stack_array[local_11] = temp_var;\n        }\n        else {\n            temp_var_64 = get_value(stack_array[local_11]);\n            temp_var = perform_operation_2(temp_var_64,*(uint32_t *)(PTR_DAT_08004bb8 + (local_11 + 8) * 4),*(uint32_t *)(PTR_DAT_08004bb8 + (local_11 + 10) * 4 + 4));\n            temp_var_64 = get_value(temp_var);\n            temp_var_64 = perform_operation_64((int32_t)temp_var_64,(int32_t)(temp_var_64 >> 0x20),DAT_08004b80,DAT_08004b84);\n            temp_var = calculate_value((int32_t)temp_var_64,(int32_t)(temp_var_64 >> 0x20));\n            stack_array[local_11] = temp_var;\n        }\n\n        process_string(PTR_DAT_08004bb0);\n\n        if (local_11 < 2) {\n            process_string(PTR_DAT_08004bb0);\n        }\n    }\n\n    process_string(PTR_DAT_08004bbc);\n}\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08003826",
                "FUN_08008640",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004940",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "process_data_08004940"
        },
        "FUN_08008a74": {
            "renaming": {
                "FUN_08008a74": "check_params_08008a74",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "xor_result",
                "bVar2": "is_param2_or_param4_zero",
                "bVar3": "is_param4_less_than_param2"
            },
            "code": "uint check_params_08008a74(uint param1, uint param2, uint param3, uint param4)\n{\n    bool is_negative_1 = ((param2 << 1) >> 0x15 == -1 || (param4 << 1) >> 0x15 == -1);\n    bool is_param2_or_param4_zero = ((param2 | (param2 << 0xc)) == 0 || (param4 | (param4 << 0xc)) == 0);\n    bool are_param2_and_param4_equal = (param2 == param4);\n    bool are_param1_and_param3_equal = (param1 == param3);\n    if (is_negative_1 && ((param2 << 1) >> 0x15 == -1 && !is_param2_or_param4_zero || (param4 << 1) >> 0x15 == -1 && !is_param2_or_param4_zero))\n    {\n        return 1;\n    }\n    if (is_param2_or_param4_zero || are_param2_and_param4_equal || !are_param1_and_param3_equal)\n    {\n        uint xor_result = param2 ^ param4;\n        bool is_xor_result_zero = (xor_result == 0);\n        if (-1 < (int)xor_result)\n        {\n            is_xor_result_zero = are_param2_and_param4_equal;\n        }\n        bool is_param4_less_than_param2 = (-1 < (int)xor_result && param4 <= param2);\n        if (is_xor_result_zero)\n        {\n            is_param4_less_than_param2 = param3 <= param1;\n        }\n        uint param4_shifted = (int)param4 >> 0x1f;\n        if (!is_param4_less_than_param2)\n        {\n            param4_shifted = ~param4_shifted;\n        }\n        return param4_shifted | 1;\n    }\n    return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008a74",
            "calling": [
                "FUN_08008b00"
            ],
            "imported": false,
            "current_name": "check_params_08008a74"
        },
        "FUN_08002fd4": {
            "renaming": {
                "FUN_08002fd4": "check_and_execute_command_08002fd4",
                "iVar1": "command_result",
                "FUN_08002f74": "get_command_result",
                "PTR_DAT_08003000": "command_data",
                "FUN_08003a74": "execute_command"
            },
            "code": "void check_and_execute_command_08002fd4(void)\\n{\\n  int command_result;\\n  while ((command_result = get_command_result(), command_result != 0 || (PTR_DAT_08003000[1] == \"\\x03\")))\\n  {\\n    execute_command();\\n    if (*PTR_DAT_08003000 != \"\\0\")\\n    {\\n      return;\\n    }\\n  }\\n  return;\\n}",
            "called": [
                "FUN_08002f74",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fd4",
            "calling": [
                "FUN_0800525c",
                "FUN_080005b4",
                "FUN_08000220",
                "FUN_080024c4",
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "check_and_execute_command_08002fd4"
        },
        "FUN_08002408": {
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "data",
                "uVar1": "checksum",
                "uVar2": "encrypted_data",
                "uVar3": "chunk_size",
                "uVar4": "decrypted_data",
                "local_12": "checksum"
            },
            "code": "void process_data_08002408(uint32_t data)\n{\n    uint32_t encrypted_data = encrypt_data(data, encryption_key);\n    uint64_t decrypted_data = decrypt_data(encrypted_data);\n    uint16_t checksum = calculate_checksum(decrypted_data);\n    do_something(checksum);\n    while (checksum != 0 && is_end_of_data() == true)\n    {\n        process_next_data_chunk(0x32);\n        checksum--;\n    }\n    return;\n}",
            "called": [
                "FUN_080094c0",
                "FUN_080002a0",
                "FUN_08008590",
                "FUN_08002fd4",
                "FUN_08008e44",
                "FUN_08008bf0",
                "FUN_08008cd8",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002408",
            "calling": [
                "FUN_080005b4"
            ],
            "imported": false,
            "current_name": "process_data_08002408"
        },
        "FUN_08002a94": {
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "*PTR_DAT_08002af0": "data_pointer_1",
                "*PTR_DAT_08002af8": "data_pointer_2",
                "*PTR_DAT_08002af4": "data_pointer_3",
                "local_9": "current_byte",
                "local_18": "prev_data_pointer",
                "local_14": "current_data_pointer",
                "puVar1": "prev_data_pointer_temp",
                "puVar2": "current_data_pointer_temp"
            },
            "code": "void process_data_08002a94(void)\n{\n  uint8_t current_byte = **PTR_DAT_08002af0;\n  uint8_t *prev_data_pointer = NULL;\n  uint8_t *current_data_pointer = NULL;\n  while (current_byte != **PTR_DAT_08002af8) {\n    current_byte = get_next_byte(current_byte);\n    prev_data_pointer = current_data_pointer;\n    current_data_pointer = *PTR_DAT_08002af4 + (uint)current_byte * 0x40;\n    copy_data(current_data_pointer, prev_data_pointer);\n  }\n  return;\n}",
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002a94",
            "calling": [
                "FUN_08002edc"
            ],
            "imported": false,
            "current_name": "process_data_08002a94"
        },
        "FUN_08003618": {
            "renaming": {
                "FUN_08003618": "update_data_structure_08003618",
                "param_1": "new_data",
                "PTR_DAT_08003694": "data_structure_index_ptr",
                "PTR_DAT_08003698": "data_structure_ptr_ptr",
                "uVar3": "intermediate_result",
                "uVar4": "old_data",
                "FUNC_08008e44": "function_1",
                "FUNC_08008eec": "function_2",
                "FUNC_08009054": "function_3"
            },
            "code": "void update_data_structure_08003618(undefined4 new_data) {\n  byte index = *PTR_DAT_08003694;\n  undefined *data_structure_ptr = PTR_DAT_08003698;\n  undefined4 old_data = *(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x10);\n  undefined4 intermediate_result = FUNC_08008e44(new_data);\n  intermediate_result = FUNC_08008eec(*(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x20), intermediate_result);\n  intermediate_result = FUNC_08009054(intermediate_result, FUNC_08008e44(*(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x10)));\n  *(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x20) = intermediate_result;\n  *(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x10) = new_data;\n  *(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x18) = 0;\n  *(undefined4 *)(data_structure_ptr + (uint)index * 0x40 + 0x1c) = 0;\n  data_structure_ptr[(uint)index * 0x40 + 0x25] = 0;\n  data_structure_ptr[(uint)index * 0x40 + 0x24] = 1;\n  update_function();\n  return;\n}",
            "called": [
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08002edc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003618",
            "calling": [
                "FUN_080058a0"
            ],
            "imported": false,
            "current_name": "update_data_structure_08003618"
        },
        "FUN_0800522c": {
            "renaming": {
                "FUN_0800522c": "do_nothing_0800522c"
            },
            "code": "\nvoid do_nothing_0800522c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800522c",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_0800522c"
        },
        "FUN_0800af78": {
            "renaming": {
                "FUN_0800af78": "FUNC_0800af78"
            },
            "code": "\nint FUNC_0800af78(int param_1,uint param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined4 local_2c;\n  \n  uVar9 = CONCAT44(param_2,param_1);\n  uVar8 = param_2 & 0x7fffffff;\n  if (DAT_0800b298 < (int)uVar8) {\n    if ((uVar8 != DAT_0800b29c && (int)DAT_0800b29c <= (int)uVar8) ||\n       ((iVar2 = DAT_0800b2a8, uVar8 == DAT_0800b29c && (param_1 != 0)))) {\n      iVar2 = FUNC_080082d4(param_1,param_2,param_1);\n      return iVar2;\n    }\n  }\n  else {\n    if (DAT_0800b2ac < (int)uVar8) {\n      uVar9 = do_nothing_0800b2cc();\n      uVar6 = (undefined4)((ulonglong)uVar9 >> 0x20);\n      uVar3 = (undefined4)uVar9;\n      if (DAT_0800b2bc < (int)uVar8) {\n        if ((int)uVar8 < DAT_0800b2c0) {\n          uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_08008640(uVar3,uVar6,0,DAT_0800b2c4);\n          uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n          uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                               (int)((ulonglong)uVar10 >> 0x20));\n          iVar2 = 2;\n        }\n        else {\n          uVar9 = FUNC_08008894(0,DAT_0800b2c8,uVar3,uVar6);\n          iVar2 = 3;\n        }\n      }\n      else if (DAT_0800b2bc + -0xd0000 < (int)uVar8) {\n        uVar9 = FUNC_080082d0(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,DAT_0800b2b8);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 1;\n      }\n      else {\n        uVar9 = FUNC_080082d4(uVar3,uVar6,uVar3,uVar6);\n        uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),0,DAT_0800b2b8);\n        uVar10 = FUNC_080082d4(uVar3,uVar6,0,0x40000000);\n        uVar9 = FUNC_08008894((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),(int)uVar10,\n                             (int)((ulonglong)uVar10 >> 0x20));\n        iVar2 = 0;\n      }\n    }\n    else {\n      if ((int)uVar8 <= DAT_0800b2ac + -0x1bc0000) {\n        uVar10 = FUNC_080082d4(param_1,param_2,DAT_0800b290,DAT_0800b294);\n        iVar2 = FUN_08008b60((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_0800b2b8);\n        if (iVar2 != 0) {\n          return param_1;\n        }\n      }\n      iVar2 = -1;\n    }\n    local_2c = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar7 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar7,local_2c,uVar7);\n    uVar4 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar3 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar3,uVar4,uVar3,uVar4);\n    uVar5 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar6 = (undefined4)uVar9;\n    uVar9 = FUNC_08008640(uVar6,uVar5,DAT_0800b238,DAT_0800b23c);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b240,DAT_0800b244);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b248,DAT_0800b24c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b250,DAT_0800b254);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b258,DAT_0800b25c);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar6,uVar5);\n    uVar9 = FUNC_080082d4((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),DAT_0800b260,DAT_0800b264);\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar3,uVar4);\n    uVar3 = (undefined4)((ulonglong)uVar9 >> 0x20);\n    uVar10 = FUNC_08008640(uVar6,uVar5,DAT_0800b268,DAT_0800b26c);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b270,DAT_0800b274);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b278,DAT_0800b27c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b280,DAT_0800b284);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800b288,DAT_0800b28c);\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),uVar6,uVar5);\n    uVar6 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    if (iVar2 == -1) {\n      uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n      uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n      iVar2 = FUNC_080082d0(uVar7,local_2c,(int)uVar9,(int)((ulonglong)uVar9 >> 0x20));\n      return iVar2;\n    }\n    uVar9 = FUNC_080082d4((int)uVar9,uVar3,(int)uVar10,uVar6);\n    puVar1 = PTR_DAT_0800b2b0;\n    uVar9 = FUNC_08008640((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),\n                         *(undefined4 *)(PTR_DAT_0800b2b4 + iVar2 * 8),\n                         *(undefined4 *)((int)(PTR_DAT_0800b2b4 + iVar2 * 8) + 4));\n    uVar9 = FUNC_080082d0((int)uVar9,(int)((ulonglong)uVar9 >> 0x20),uVar7,local_2c);\n    iVar2 = FUNC_080082d0(*(undefined4 *)(puVar1 + iVar2 * 8),\n                         *(undefined4 *)((int)(puVar1 + iVar2 * 8) + 4),(int)uVar9,\n                         (int)((ulonglong)uVar9 >> 0x20));\n    if ((int)param_2 < 0) {\n      return iVar2;\n    }\n  }\n  return iVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008894",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800af78",
            "calling": [
                "FUN_08009990"
            ],
            "imported": false,
            "current_name": "FUNC_0800af78"
        },
        "FUN_08007d08": {
            "renaming": {
                "FUN_08007d08": "initialize_data_08007d08",
                "puVar1": "data_ptr"
            },
            "code": "void initialize_data_08007d08(void)\n{\n    uint32_t *data_ptr = data_array;\n    initialize_subsystem(data_ptr);\n    *data_ptr = 0x80;\n    data_ptr[1] = 0;\n    data_ptr[2] = 0;\n    data_ptr[3] = 0;\n    data_ptr[4] = 0;\n    data_ptr[6] = 0x6800;\n    data_ptr[7] = 0;\n    data_ptr[8] = 0;\n    data_ptr[9] = 0;\n    data_ptr[10] = (uint32_t)((uint64_t)DAT_08007da4 * (uint64_t)*(uint32_t *)PTR_DAT_08007da0 >> 0x35) - 1;\n    data_ptr[0xb] = 199;\n    data_ptr[0xd] = 0;\n    data_ptr[0xe] = 100;\n    data_ptr[0xf] = 0;\n    data_ptr[0x10] = 0;\n    data_ptr[0x12] = 0;\n    data_ptr[0x13] = 0;\n    data_ptr[5] = 1;\n    return;\n}",
            "called": [
                "FUN_08007a10"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007d08",
            "calling": [
                "FUN_08007e08"
            ],
            "imported": false,
            "current_name": "initialize_data_08007d08"
        },
        "FUN_080091fc": {
            "renaming": {
                "FUN_080091fc": "call_function_with_swapped_args_080091fc",
                "param_1": "arg1",
                "param_2": "arg2",
                "FUN_08009204": "call_function"
            },
            "code": "void call_function_with_swapped_args_080091fc(void* arg1, void* arg2)\n{\n  call_function(arg2, arg1);\n  return;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080091fc",
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "imported": false,
            "current_name": "call_function_with_swapped_args_080091fc"
        },
        "FUN_080058a0": {
            "renaming": {
                "FUN_080058a0": "update_status_if_needed_080058a0",
                "PTR_DAT_080058f0": "ptr",
                "PTR_DAT_080058f4": "ptr2",
                "PTR_DAT_080058fc": "status",
                "DAT_080058f8": "constant_value"
            },
            "code": "void update_status_if_needed_080058a0(void)\n{\n    int* PTR_DAT_080058f0 = (int*)PTR_DAT_080058f0;\n    int* PTR_DAT_080058f4 = (int*)PTR_DAT_080058f4;\n    int PTR_DAT_080058fc = PTR_DAT_080058fc[1];\n\n    if (*PTR_DAT_080058f0 == 0)\n    {\n        PTR_DAT_080058fc = 0;\n    }\n    else\n    {\n        int diff = *(int*)(*PTR_DAT_080058f0 + 0x10) - *(int*)(PTR_DAT_080058f4 + 0x10);\n        FUN_08003618(diff);\n        *(int*)(PTR_DAT_080058f4 + 0x1c) = 0;\n        FUN_08005324(*(int*)(PTR_DAT_080058f4 + 0x1c));\n        *(int*)(PTR_DAT_080058f4 + 0x18) = DAT_080058f8;\n        *(int*)(PTR_DAT_080058f4 + 0x10) = 0;\n        PTR_DAT_080058fc = 2;\n    }\n    PTR_DAT_080058fc[1] = PTR_DAT_080058fc;\n}\n",
            "called": [
                "FUN_08005324",
                "FUN_08003618"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080058a0",
            "calling": [
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "update_status_if_needed_080058a0"
        },
        "FUN_080036c6": {
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "input_string",
                "local_c": "current_char",
                "*local_c": "*current_char",
                "\\0": "\\\\0",
                "FUN_08008250": "process_character"
            },
            "code": "void process_string_080036c6(char *input_string)\n{\n  char *current_char;\n  current_char = input_string;\n  while (*current_char != '\\0') {\n    process_character(*current_char);\n    current_char++;\n  }\n  return;\n}",
            "called": [
                "FUN_08008250"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080036c6",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004148",
                "FUN_08004940",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004228",
                "FUN_080044e8",
                "FUN_08004900"
            ],
            "imported": false,
            "current_name": "process_string_080036c6"
        },
        "FUN_08008190": {
            "renaming": {
                "FUN_08008190": "set_flags_08008190",
                "puVar1": "flags",
                "DAT_08008240": "flags",
                "FUN_08007ea4": "set_flags_helper",
                "0xffffdfff": "0xFFFFDFFF_MASK",
                "0xffff400c": "0xFFFF400C_MASK",
                "0xc": "0xC_CONSTANT",
                "0xffff8090": "0xFFFF8090_MASK",
                "0xfffff000": "0xFFFFF000_MASK",
                "*puVar1": "*flags",
                "0xfffffc00": "0xFFFFFC00_MASK",
                "FUN_08007f54": "set_flags_helper"
            },
            "code": "void set_flags_08008190(void)\n{\n  uint *DAT_08008240;\n  DAT_08008240 = DAT_08008240;\n  set_flags_08008190_helper(DAT_08008240);\n  DAT_08008240[3] &= 0xffffdfff;\n  DAT_08008240[3] &= 0xffff400c | 0xc;\n  DAT_08008240[4] &= 0xffff8090;\n  DAT_08008240[5] &= 0xfffff000;\n  *DAT_08008240 &= 0xfffffc00;\n  set_flags_08008190_helper(DAT_08008240,0x1c200);\n  DAT_08008240[6] = DAT_08008240[6];\n  DAT_08008240[3] |= 0x2000;\n  return;\n}",
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008190",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "set_flags_08008190"
        },
        "FUN_080074c8": {
            "renaming": {
                "FUN_080074c8": "check_flags_080074c8",
                "param_1": "flags",
                "FUN_08007402": "print_error",
                "PTR_DAT_08007518": "ptr_data_1",
                "FUN_0800195c": "do_something",
                "PTR_DAT_0800751c": "ptr_data_2",
                "FUN_08003a18": "do_something_else"
            },
            "code": "void check_flags_080074c8(uint flags)\n{\n    if ((flags & 0x01) != 0)\n    {\n        print_error(0x3e);\n    }\n    if ((*(int *)PTR_DAT_08007518 != 0) && ((flags & 0x1e) != 0))\n    {\n        do_something();\n    }\n    if ((*(int *)PTR_DAT_0800751c != 0) && ((flags & 0x80) != 0))\n    {\n        do_something_else(flags);\n    }\n    return;\n}",
            "called": [
                "FUN_08007402",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080074c8",
            "calling": [
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "check_flags_080074c8"
        },
        "FUN_0800b430": {
            "renaming": {
                "FUN_0800b430": "write_to_memory_0800b430",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "current_word",
                "puVar2": "last_word",
                "uVar3": "remaining_bytes",
                "uVar4": "fill_value",
                "bVar5": "is_aligned"
            },
            "code": "void write_to_memory_0800b430(uint32_t *memory, uint8_t value, uint32_t size)\n{\n    uint32_t *current_word;\n    uint32_t *last_word;\n    uint32_t remaining_bytes;\n    uint32_t fill_value;\n    bool is_aligned = ((uint32_t)memory & 3) == 0;\n\n    if (!is_aligned)\n    {\n        remaining_bytes = size - 1;\n        current_word = memory;\n        if (size == 0)\n        {\n            return;\n        }\n        while (true)\n        {\n            memory = (uint32_t *)((int)current_word + 1);\n            *(uint8_t *)current_word = value;\n            size = remaining_bytes;\n            if (((uint32_t)memory & 3) == 0)\n            {\n                break;\n            }\n            remaining_bytes = remaining_bytes - 1;\n            current_word = memory;\n            if (remaining_bytes == 0)\n            {\n                return;\n            }\n        }\n    }\n\n    fill_value = (value << 24) | (value << 16) | (value << 8) | value;\n    if (size > 3)\n    {\n        if (size > 15)\n        {\n            last_word = (uint32_t *)((int)memory + (size - 16 & 0xfffffff0) + 0x20);\n            do\n            {\n                last_word[-4] = fill_value;\n                last_word[-3] = fill_value;\n                last_word[-2] = fill_value;\n                last_word[-1] = fill_value;\n                last_word = last_word + 4;\n            } while (last_word != (uint32_t *)((int)memory + (size - 16 & 0xfffffff0) + 0x20));\n            remaining_bytes = size & 0xc;\n            memory = memory + ((size - 16 >> 4) + 1) * 4;\n            size = size & 0xf;\n            if (remaining_bytes == 0)\n            {\n                goto end;\n            }\n        }\n        current_word = (uint32_t *)((size - 4 & 0xfffffffc) + 4 + (int)memory);\n        do\n        {\n            last_word = memory + 1;\n            *memory = fill_value;\n            memory = last_word;\n        } while (current_word != last_word);\n        size = size & 3;\n        memory = current_word;\n    }\nend:\n    if (size != 0)\n    {\n        current_word = memory;\n        do\n        {\n            last_word = (uint32_t *)((int)current_word + 1);\n            *(uint8_t *)current_word = value;\n            current_word = last_word;\n        } while ((uint32_t *)(size + (int)memory) != last_word);\n    }\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b430",
            "calling": [
                "FUN_08001994",
                "FUN_080079c0",
                "FUN_080005b4",
                "FUN_080002f0",
                "FUN_080004ac",
                "FUN_08004d7c",
                "FUN_08005814",
                "FUN_080024c4",
                "FUN_08002f24",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "write_to_memory_0800b430"
        },
        "FUN_08004030": {
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "error_code",
                "PTR_DAT_08004108": "error_null",
                "PTR_s_error__0800410c": "error_generic",
                "PTR_s_Bad_number_format_08004110": "error_bad_number_format",
                "PTR_s_Expected_command_letter_08004114": "error_expected_command",
                "PTR_s_Unsupported_statement_08004118": "error_unsupported_statement",
                "PTR_s_Invalid_radius_0800411c": "error_invalid_radius",
                "PTR_s_Modal_group_violation_08004120": "error_modal_group_violation",
                "PTR_s_Invalid_statement_08004124": "error_invalid_statement",
                "PTR_s_Setting_disabled_08004128": "error_setting_disabled",
                "PTR_s_Value___0_0_0800412c": "error_value_0_0",
                "PTR_s_Value___3_usec_08004130": "error_value_3_usec",
                "PTR_s_EEPROM_read_fail__Using_defaults_08004134": "error_eeprom_read_fail",
                "PTR_s_Busy_or_queued_08004138": "error_busy_or_queued",
                "PTR_s_Alarm_lock_0800413c": "error_alarm_lock",
                "PTR_s_Line_overflow_08004140": "error_line_overflow",
                "PTR_DAT_08004144": "error_end"
            },
            "code": "void print_error_message_08004030(char error_code) {\n    if (error_code == '\\0') {\n        print_message(PTR_DAT_08004108);\n    }\n    else {\n        print_message(PTR_s_error__0800410c);\n        switch(error_code) {\n            case '\\x01':\n                print_message(PTR_s_Bad_number_format_08004110);\n                break;\n            case '\\x02':\n                print_message(PTR_s_Expected_command_letter_08004114);\n                break;\n            case '\\x03':\n                print_message(PTR_s_Unsupported_statement_08004118);\n                break;\n            case '\\x04':\n                print_message(PTR_s_Invalid_radius_0800411c);\n                break;\n            case '\\x05':\n                print_message(PTR_s_Modal_group_violation_08004120);\n                break;\n            case '\\x06':\n                print_message(PTR_s_Invalid_statement_08004124);\n                break;\n            case '\\a':\n                print_message(PTR_s_Setting_disabled_08004128);\n                break;\n            case '\\b':\n                print_message(PTR_s_Value___0_0_0800412c);\n                break;\n            case '\\t':\n                print_message(PTR_s_Value___3_usec_08004130);\n                break;\n            case '\\n':\n                print_message(PTR_s_EEPROM_read_fail__Using_defaults_08004134);\n                break;\n            case '\\v':\n                print_message(PTR_s_Busy_or_queued_08004138);\n                break;\n            case '\\f':\n                print_message(PTR_s_Alarm_lock_0800413c);\n                break;\n            case '\\r':\n                print_message(PTR_s_Line_overflow_08004140);\n        }\n        print_message(PTR_DAT_08004144);\n    }\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004030",
            "calling": [
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_080044e8",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "print_error_message_08004030"
        },
        "FUN_08005360": {
            "renaming": {
                "FUN_08005360": "calculate_result_08005360",
                "DAT_0800539c": "result",
                "PTR_DAT_08005398": "data_pointer",
                "result_ptr": "result",
                "second_operand_ptr": "second_operand",
                "first_operand_ptr": "first_operand",
                "calculated_result": "calculated_result"
            },
            "code": "bool calculate_result_08005360(void)\n{\n    int *DAT_0800539c_ptr = PTR_DAT_08005398 + 0x18;\n    int *second_operand_ptr = PTR_DAT_08005398 + 0x14;\n    int *first_operand_ptr = PTR_DAT_08005398 + 0x18;\n    *DAT_0800539c_ptr = *second_operand_ptr + *first_operand_ptr;\n    uint DAT_0800539c = DAT_0800539c;\n    uint calculated_DAT_0800539c = *DAT_0800539c_ptr;\n    if (DAT_0800539c < calculated_DAT_0800539c)\n    {\n        *DAT_0800539c_ptr -= 420000;\n    }\n    return DAT_0800539c < calculated_DAT_0800539c;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005360",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "calculate_result_08005360"
        },
        "FUN_08003980": {
            "renaming": {
                "FUN_08003980": "clear_pointers_08003980",
                "*PTR_DAT_08003998": "*pointer_data_1",
                "*PTR_DAT_0800399c": "*pointer_data_2"
            },
            "code": "void clear_pointers_08003980(void)\n{\n    *PTR_DAT_08003998 = 0;\n    *PTR_DAT_0800399c = 0;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003980",
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "clear_pointers_08003980"
        },
        "FUN_08006de0": {
            "renaming": {
                "FUN_08006de0": "convert_char_to_int_08006de0",
                "param_1": "input_char",
                "uVar1": "converted_int",
                "FUN_08006a18": "convert_char_to_int_helper"
            },
            "code": "int convert_char_to_int_08006de0(char input_char)\n{\n    int converted_int = convert_char_to_int_08006de0_helper((int)input_char);\n    return converted_int;\n}",
            "called": [
                "FUN_08006a18"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006de0",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006de0"
        },
        "FUN_08007540": {
            "renaming": {
                "FUN_08007540": "initialize_program_08007540",
                "FUN_080059b4": "initialize_logger",
                "FUN_08007436": "initialize_database",
                "FUN_0800778c": "initialize_network",
                "FUN_08007e08": "initialize_user_interface",
                "FUN_080079c0": "initialize_configuration",
                "FUN_08008190": "initialize_security",
                "FUN_08005984": "set_logging_level",
                "FUN_08001ddc": "initialize_memory"
            },
            "code": "int initialize_program_08007540(void)\n{\n  initialize_logger();\n  initialize_database();\n  initialize_network();\n  initialize_user_interface();\n  initialize_configuration();\n  initialize_security();\n  set_logging_level(0);\n  initialize_memory();\n  return 0;\n}",
            "called": [
                "FUN_080079c0",
                "FUN_08008190",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08007436",
                "FUN_08005984",
                "FUN_080059b4",
                "FUN_08001ddc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007540",
            "calling": [
                "FUN_080092c4"
            ],
            "imported": false,
            "current_name": "initialize_program_08007540"
        },
        "FUN_080052dc": {
            "renaming": {
                "FUN_080052dc": "set_parameter_080052dc",
                "param_1": "new_param",
                "PTR_DAT_08005308": "param_ptr",
                "DAT_08005308": "param_offset",
                "mask": "bitmask",
                "current_value": "current_param_value"
            },
            "code": "void set_parameter_080052dc(uint new_param)\n{\n    uint* PTR_DAT_08005308 = (uint*)(DAT_08005308 + 0x14);\n    uint mask = 0xfffff55f;\n    uint current_value = *PTR_DAT_08005308;\n    *PTR_DAT_08005308 = (new_param | (current_value & mask));\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052dc",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "set_parameter_080052dc"
        },
        "FUN_080064ec": {
            "renaming": {
                "FUN_080064ec": "calculate_division_factor_080064ec",
                "uVar1": "bit_mask",
                "uVar2": "divisor",
                "local_c": "dividend"
            },
            "code": "uint calculate_division_factor_080064ec(void)\n{\n  uint bit_mask = *(uint *)(DAT_0800661c + 8) & 0xc;\n  if (bit_mask == 8) {\n    uint divisor = *(uint *)(DAT_0800661c + 4) & 0x3f;\n    uint leading_zeroes = count_leading_zeroes(0x200);\n    if ((*(uint *)(DAT_0800661c + 4) & 0x400000) >> (leading_zeroes & 0xff) == 0) {\n      leading_zeroes = count_leading_zeroes(0x3fe0000);\n      uint dividend = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (leading_zeroes & 0xff)) * (DAT_08006620 / divisor);\n    }\n    else {\n      leading_zeroes = count_leading_zeroes(0x3fe0000);\n      uint dividend = ((*(uint *)(DAT_0800661c + 4) & 0x7fc0) >> (leading_zeroes & 0xff)) * (DAT_08006624 / divisor);\n    }\n    leading_zeroes = count_leading_zeroes(0xc000);\n    return dividend / ((((*(uint *)(DAT_0800661c + 4) & 0x30000) >> (leading_zeroes & 0xff)) + 1) * 2);\n  }\n  if (bit_mask < 9) {\n    if (bit_mask == 0) {\n      return DAT_08006620;\n    }\n    if (bit_mask == 4) {\n      return DAT_08006624;\n    }\n  }\n  return DAT_08006620;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080064ec",
            "calling": [
                "FUN_08006628"
            ],
            "imported": false,
            "current_name": "calculate_division_factor_080064ec"
        },
        "FUN_08006ba0": {
            "renaming": {
                "FUN_08006ba0": "extract_bits_08006ba0",
                "param_1": "bit_offset",
                "param_2": "num_bits",
                "param_3": "bit_field",
                "uVar1": "msb_offset",
                "extracted_bits": "mask",
                "masked_bits": "masked_bits"
            },
            "code": "uint extract_bits_08006ba0(uint bit_offset, uint num_bits, uint bit_field){\n    uint msb_offset = 7 - bit_offset;\n    if (msb_offset > 3){\n        msb_offset = 4;\n    }\n    if (bit_offset + 4 < 7){\n        bit_offset = 0;\n    }\n    else {\n        bit_offset = bit_offset - 3;\n    }\n    uint mask = (1 << num_bits) - 1U;\n    uint extracted_bits = (mask & bit_field) << bit_offset;\n    uint masked_bits = (mask << msb_offset) - 1U;\n    masked_bits = masked_bits & bit_field;\n    return extracted_bits | masked_bits << bit_offset;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006ba0",
            "calling": [
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "extract_bits_08006ba0"
        },
        "FUN_080003ec": {
            "renaming": {
                "FUN_080003ec": "validate_checksum_080003ec",
                "param_1": "data",
                "param_2": "data_length",
                "param_3": "checksum_value",
                "local_1c": "data_length_copy",
                "local_18": "data_index",
                "local_14": "current_data",
                "local_9": "calculated_checksum",
                "PTR_DAT_08000470": "some_pointer"
            },
            "code": "bool validate_checksum_080003ec(char *data, int data_length, int checksum_value) {\n  char current_char;\n  uint8_t calculated_checksum = 0;\n  char *current_data = data;\n  if (*(int *)PTR_DAT_08000470 == 0) {\n    initialize();\n  }\n  for (; data_length != 0; data_length--) {\n    current_char = get_next_char(current_data);\n    calculated_checksum = current_char + (calculated_checksum != 0);\n    *current_data = current_char;\n    current_data++;\n  }\n  uint8_t expected_checksum = get_next_char(current_data);\n  return calculated_checksum == expected_checksum;\n}",
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080003ec",
            "calling": [
                "FUN_08004d2c",
                "FUN_08004d7c",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "validate_checksum_080003ec"
        },
        "FUN_08002896": {
            "renaming": {
                "FUN_08002896": "decrement_char_if_not_null_08002896",
                "param_1": "input_char",
                "local_9": "output_char"
            },
            "code": "char decrement_char_if_not_null_08002896(char input_char)\n{\n  char output_char;\n  output_char = input_char;\n  if (input_char == '\\0') {\n    output_char = '\\x12';\n  }\n  return output_char - 1;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002896",
            "calling": [
                "FUN_08002a94"
            ],
            "imported": false,
            "current_name": "decrement_char_if_not_null_08002896"
        },
        "FUN_0800a348": {
            "renaming": {
                "FUN_0800a348": "FUNC_0800a348"
            },
            "code": "\nundefined4 FUNC_0800a348(undefined4 param_1,uint param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  longlong lVar8;\n  undefined4 local_30;\n  undefined4 uStack_2c;\n  undefined4 local_28;\n  undefined4 uStack_24;\n  \n  uVar4 = param_2 & 0x7fffffff;\n  if (uVar4 < 0x3e400000) {\n    iVar1 = FUN_08008ba0();\n    if (iVar1 == 0) {\n      return 0;\n    }\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n  }\n  else {\n    uVar5 = FUNC_08008640(param_1,param_2,param_1,param_2);\n    uVar3 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    uVar6 = FUNC_08008640(uVar2,uVar3,DAT_0800a558,DAT_0800a55c);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a560,DAT_0800a564);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a568,DAT_0800a56c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a570,DAT_0800a574);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a578,DAT_0800a57c);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    uVar6 = FUNC_080082d4((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),DAT_0800a580,DAT_0800a584);\n    uVar6 = FUNC_08008640((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),uVar2,uVar3);\n    if (DAT_0800a590 < (int)uVar4) {\n      if (DAT_0800a594 < (int)uVar4) {\n        lVar8 = (ulonglong)DAT_0800a598 << 0x20;\n        iVar1 = DAT_0800a59c;\n      }\n      else {\n        lVar8 = FUNC_080082d0(0,DAT_0800a58c,0,uVar4 - 0x200000);\n        iVar1 = uVar4 - 0x200000;\n      }\n      uStack_24 = (undefined4)((ulonglong)lVar8 >> 0x20);\n      local_28 = (undefined4)lVar8;\n      uVar5 = FUNC_08008640(uVar2,uVar3,0,DAT_0800a588);\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0,iVar1);\n      uVar6 = FUNC_08008640(uVar2,uVar3,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n      uVar6 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                           (int)((ulonglong)uVar7 >> 0x20));\n      uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar6,\n                           (int)((ulonglong)uVar6 >> 0x20));\n      uVar2 = FUNC_080082d0(local_28,uStack_24,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n      return uVar2;\n    }\n  }\n  uStack_2c = (undefined4)((ulonglong)uVar6 >> 0x20);\n  local_30 = (undefined4)uVar6;\n  uVar2 = (undefined4)((ulonglong)uVar5 >> 0x20);\n  uVar6 = FUNC_08008640((int)uVar5,uVar2,0,DAT_0800a588);\n  uVar5 = FUNC_08008640((int)uVar5,uVar2,local_30,uStack_2c);\n  uVar7 = FUNC_08008640(param_1,param_2,param_3,param_4);\n  uVar5 = FUNC_080082d0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),(int)uVar7,\n                       (int)((ulonglong)uVar7 >> 0x20));\n  uVar5 = FUNC_080082d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar5,\n                       (int)((ulonglong)uVar5 >> 0x20));\n  uVar2 = FUNC_080082d0(0,DAT_0800a58c,(int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n  return uVar2;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x0800a348",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_0800a348"
        },
        "FUN_080001ac": {
            "renaming": {
                "FUN_080001ac": "combine_two_pointers_080001ac",
                "param_1": "first_pointer",
                "param_2": "second_pointer",
                "DAT_080001bc": "global_variable",
                "PTR_FUN_080001c4": "global_function_pointer",
                "PTR_DAT_080001c0": "global_data_pointer"
            },
            "code": "undefined8 combine_two_pointers_080001ac(undefined *first_pointer, undefined *second_pointer) {\n  if (DAT_080001bc != 0) {\n    first_pointer = PTR_FUN_080001c4;\n    second_pointer = PTR_DAT_080001c0;\n  }\n  return CONCAT44(second_pointer, first_pointer);\n}",
            "called": [
                "FUN_0800b5b0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001ac",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "combine_two_pointers_080001ac"
        },
        "FUN_08003740": {
            "renaming": {
                "FUN_08003740": "process_data_08003740",
                "param_1": "data_buffer",
                "FUN_080036f0": "copy_data"
            },
            "code": "void process_data_08003740(void* data_buffer)\n{\n  copy_data(data_buffer, 8);\n  return;\n}",
            "called": [
                "FUN_080036f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003740",
            "calling": [],
            "imported": false,
            "current_name": "process_data_08003740"
        },
        "FUN_08000478": {
            "renaming": {
                "FUN_08000478": "set_params_in_array_08000478",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param"
            },
            "code": "void set_params_in_array_08000478(int param_1, int param_2, int param_3)\n{\n  array[25] = param_1;\n  array[26] = param_2;\n  array[27] = param_3;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000478",
            "calling": [
                "FUN_080005b4",
                "FUN_080004ac"
            ],
            "imported": false,
            "current_name": "set_params_in_array_08000478"
        },
        "FUN_08006d2e": {
            "renaming": {
                "FUN_08006d2e": "print_character_08006d2e",
                "param_1": "input_char",
                "FUN_080069b4": "print_to_console"
            },
            "code": "void print_character_08006d2e(char input_char)\n{\n  print_to_console((int)input_char);\n  return;\n}",
            "called": [
                "FUN_080069b4"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006d2e",
            "calling": [],
            "imported": false,
            "current_name": "print_character_08006d2e"
        },
        "FUN_08007e1c": {
            "renaming": {
                "FUN_08007e1c": "wait_for_bit_to_set_08007e1c",
                "param_1": "bit",
                "DAT_08007e48": "device_status_register"
            },
            "code": "void wait_for_bit_to_set_08007e1c(uint8_t bit){\n  while((*DAT_08007e48 & 0x80) == 0);\n  DAT_08007e48[1] = (uint)bit;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e1c",
            "calling": [
                "FUN_08008250",
                "FUN_0800826a"
            ],
            "imported": false,
            "current_name": "wait_for_bit_to_set_08007e1c"
        },
        "FUN_0800adf0": {
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_value",
                "param_2": "input_value2",
                "param_3": "input_value3",
                "param_4": "input_value4",
                "param_5": "input_value5",
                "iVar1": "status_check",
                "uVar2": "intermediate_value2",
                "uVar3": "intermediate_value3",
                "uVar4": "intermediate_value4",
                "uVar5": "intermediate_value5",
                "uVar6": "intermediate_value8",
                "uVar7": "intermediate_value7",
                "uVar8": "intermediate_value9"
            },
            "code": "undefined4 calculate_result_0800adf0(undefined4 input_value, uint input_value2, undefined4 input_value3, undefined4 input_value4, int input_value5)\n{\n    int status_check = FUN_08008ba0();\n    if (((input_value2 & 0x7fffffff) < 0x3e400000) && (status_check == 0)) {\n        return input_value;\n    }\n    \n    undefined8 intermediate_value1 = FUNC_08008640(input_value, input_value2, input_value);\n    undefined4 intermediate_value2 = (undefined4)((ulonglong)intermediate_value1 >> 0x20);\n    undefined4 intermediate_value3 = (undefined4)intermediate_value1;\n    \n    undefined8 intermediate_value4 = FUNC_08008640(input_value, input_value2, intermediate_value3, intermediate_value2);\n    undefined4 intermediate_value5 = (undefined4)((ulonglong)intermediate_value4 >> 0x20);\n    undefined4 intermediate_value6 = (undefined4)intermediate_value4;\n    \n    undefined8 intermediate_value7 = FUNC_08008640(intermediate_value3, intermediate_value2, DAT_0800af40, DAT_0800af44);\n    intermediate_value7 = FUNC_080082d0((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), DAT_0800af48, DAT_0800af4c);\n    intermediate_value7 = FUNC_08008640((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), intermediate_value3, intermediate_value2);\n    intermediate_value7 = FUNC_080082d4((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), DAT_0800af50, DAT_0800af54);\n    intermediate_value7 = FUNC_08008640((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), intermediate_value3, intermediate_value2);\n    intermediate_value7 = FUNC_080082d0((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), DAT_0800af58, DAT_0800af5c);\n    intermediate_value7 = FUNC_08008640((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), intermediate_value3, intermediate_value2);\n    intermediate_value7 = FUNC_080082d4((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), DAT_0800af60, DAT_0800af64);\n    undefined4 intermediate_value8 = (undefined4)((ulonglong)intermediate_value7 >> 0x20);\n    \n    if (input_value5 != 0) {\n        undefined8 intermediate_value9 = FUNC_08008640(input_value3, input_value4, 0, DAT_0800af70);\n        intermediate_value7 = FUNC_08008640(intermediate_value6, intermediate_value5, (int)intermediate_value7, intermediate_value8);\n        intermediate_value7 = FUNC_080082d0((int)intermediate_value9, (int)((ulonglong)intermediate_value9 >> 0x20), (int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20));\n        intermediate_value7 = FUNC_08008640((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), intermediate_value3, intermediate_value2);\n        intermediate_value7 = FUNC_080082d0((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), input_value3, input_value4);\n        intermediate_value9 = FUNC_08008640(intermediate_value6, intermediate_value5, DAT_0800af68, DAT_0800af6c);\n        intermediate_value7 = FUNC_080082d4((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), (int)intermediate_value9, (int)((ulonglong)intermediate_value9 >> 0x20));\n        undefined4 result = FUNC_080082d0(input_value, input_value2, (int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20));\n        return result;\n    }\n    intermediate_value7 = FUNC_08008640(intermediate_value3, intermediate_value2, (int)intermediate_value7, intermediate_value8);\n    intermediate_value7 = FUNC_080082d0((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), DAT_0800af68, DAT_0800af6c);\n    intermediate_value7 = FUNC_08008640((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), intermediate_value6, intermediate_value5);\n    undefined4 result = FUNC_080082d4((int)intermediate_value7, (int)((ulonglong)intermediate_value7 >> 0x20), input_value, input_value2);\n    return result;\n}",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_08008ba0",
                "FUN_08008640"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800adf0",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "calculate_result_0800adf0"
        },
        "FUN_08003a74": {
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "PTR_DAT_08003b90": "PTR_DATA",
                "PTR_DAT_08003b94": "PTR_FLAG",
                "send_error": "send_error",
                "send_success": "send_success",
                "enable_flag": "enable_flag",
                "wait_for_flag": "wait_for_flag",
                "perform_a": "perform_a",
                "perform_b": "perform_b",
                "perform_c": "perform_c",
                "perform_d": "perform_d"
            },
            "code": "void process_data_08003a74(void)\n{\n  byte data = PTR_DAT_08003b90[2];\n  if (data != 0x00) {\n    if ((data & 0x60) != 0x00) {\n      PTR_DAT_08003b90[1] = 6;\n      if ((data & 0x40) == 0x00) {\n        send_error(0xfffffffe);\n      }\n      else {\n        send_success(0xffffffff);\n        enable_flag();\n        PTR_DAT_08003b90[2] = data & 0xef;\n        wait_for_flag();\n      }\n      PTR_DAT_08003b90[2] = data & 0x9f;\n    }\n    if ((data & 0x10) == 0x00) {\n      if ((data & 0x01) != 0x00) {\n        perform_a();\n        PTR_DAT_08003b90[2] = data & 0xfe;\n      }\n      if ((data & 0x08) != 0x00) {\n        perform_b();\n        PTR_DAT_08003b90[2] = data & 0xf7;\n      }\n      if ((data & 0x04) != 0x00) {\n        perform_c();\n        PTR_DAT_08003b90[2] = data & 0xfb;\n      }\n      if ((data & 0x02) != 0x00) {\n        perform_d();\n        if ((PTR_DAT_08003b90[0x28] & 0x02) != 0x00) {\n          PTR_DAT_08003b90[0x10] = 1;\n        }\n        PTR_DAT_08003b90[2] = data & 0xfd;\n      }\n    }\n    else {\n      *PTR_DAT_08003b90 = 1;\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_080058a0",
                "FUN_08004940",
                "FUN_08004148",
                "FUN_0800587c",
                "FUN_0800585c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a74",
            "calling": [
                "FUN_08002fd4",
                "FUN_08003f34",
                "FUN_08001e98",
                "FUN_080024c4",
                "FUN_08002408",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "process_data_08003a74"
        },
        "FUN_08005cec": {
            "renaming": {
                "FUN_08005cec": "FUNC_08005cec"
            },
            "code": "\nundefined4 FUNC_08005cec(uint *param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 4) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0x400000)))) {\n      if (((*DAT_08005fac & 0x20000) != 0) && (param_1[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      *DAT_08005fb0 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 0x20000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n      *DAT_08005fb0 = (char)param_1[1];\n      if (param_1[1] == 1) {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) == 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        iVar1 = FUN_08005a84();\n        while ((*DAT_08005fac & 0x20000) != 0) {\n          uVar2 = FUN_08005a84();\n          if (iVar1 + 5000U <= uVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((DAT_08005fac[2] & 0xc) == 0) ||\n       (((DAT_08005fac[2] & 0xc) == 8 && ((DAT_08005fac[1] & 0x400000) == 0)))) {\n      if (((*DAT_08005fac & 2) != 0) && (param_1[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (param_1[3] == 0) {\n      *DAT_08005fb4 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb4 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08005fac & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x1f000000);\n      *DAT_08005fac = param_1[4] << (uVar2 & 0xff) | *DAT_08005fac & 0xffffff07;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (param_1[5] == 0) {\n      *DAT_08005fb8 = 0;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08005fb8 = 1;\n      iVar1 = FUN_08005a84();\n      while ((DAT_08005fac[0x1d] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    DAT_08005fac[0x10] = DAT_08005fac[0x10] | 0x10000000;\n    *DAT_08005fbc = *DAT_08005fbc | 0x100;\n    iVar1 = FUN_08005a84();\n    while ((*DAT_08005fbc & 0x100) == 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 100U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08005fc0 = 0;\n    iVar1 = FUN_08005a84();\n    while ((DAT_08006180[0x1c] & 2) != 0) {\n      uVar2 = FUN_08005a84();\n      if (iVar1 + 5000U <= uVar2) {\n        return 3;\n      }\n    }\n    *DAT_08006184 = (char)param_1[2];\n    if (param_1[2] == 1) {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iVar1 = FUN_08005a84();\n      while ((DAT_08006180[0x1c] & 2) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 5000U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param_1[6] != 0) {\n    if ((DAT_08006180[2] & 0xc) == 8) {\n      return 1;\n    }\n    if (param_1[6] == 2) {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n      uVar2 = count_leading_zeroes(0x3fe0000);\n      uVar3 = count_leading_zeroes(0xc000);\n      uVar4 = count_leading_zeroes(0xf0);\n      DAT_08006180[1] =\n           param_1[0xb] << (uVar4 & 0xff) |\n           param_1[8] | param_1[9] << (uVar2 & 0xff) | (param_1[10] >> 1) - 1 << (uVar3 & 0xff) |\n           param_1[7] | 0x20000000;\n      *DAT_08006188 = 1;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) == 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      *DAT_08006188 = 0;\n      iVar1 = FUN_08005a84();\n      while ((*DAT_08006180 & 0x2000000) != 0) {\n        uVar2 = FUN_08005a84();\n        if (iVar1 + 100U <= uVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "called": [
                "FUN_08005a84"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08005cec",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "FUNC_08005cec"
        },
        "FUN_08006b00": {
            "renaming": {
                "FUN_08006b00": "set_data_byte_08006b00",
                "param_1": "data",
                "param_2": "value",
                "DAT_08006b4c": "data_ptr_1",
                "DAT_08006b50": "data_ptr_2"
            },
            "code": "void set_data_byte_08006b00(byte data, uint value) {\n  if (data < 0) {\n    *(char *)((data & 0xf) + DAT_08006b4c + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)data + DAT_08006b50 + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006b00",
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "imported": false,
            "current_name": "set_data_byte_08006b00"
        },
        "FUN_0800b4d0": {
            "renaming": {
                "FUN_0800b4d0": "check_and_call_0800b4d0",
                "DAT_0800b4dc": "data",
                "FUN_0800b524": "call_function",
                "PTR_LAB_0800b4f0_1_0800b4e0": "label_ptr"
            },
            "code": "void check_and_call_0800b4d0(){\n  if (DAT_0800b4dc != 0) {\n    call_function(0, PTR_LAB_0800b4f0_1_0800b4e0, 0);\n    return;\n  }\n  return;\n}",
            "called": [
                "FUN_0800b524"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b4d0",
            "calling": [
                "FUN_0800b3e8"
            ],
            "imported": false,
            "current_name": "check_and_call_0800b4d0"
        },
        "FUN_08007f54": {
            "renaming": {
                "FUN_08007f54": "calculate_value_08007f54",
                "param_1": "input_param",
                "param_2": "input_param2",
                "lVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "uVar4": "value4",
                "PTR_DAT_08008184": "ptr_dat_08008184",
                "PTR_DAT_08008188": "ptr_dat_08008188",
                "DAT_0800818c": "dat_0800818c",
                "*(uint *)(param_1 + 8)": "output"
            },
            "code": "void calculate_value_08007f54(int input_param, int input_param2) {\n  long long value1;\n  int value2;\n  int value3;\n  uint* ptr1 = (uint*)(input_param + 0xc);\n  uint ptr1_value = *ptr1;\n  if ((ptr1_value & 0x8000) == 0) {\n    if ((input_param != PTR_DAT_08008184) && (input_param != PTR_DAT_08008188)) {\n      uint value4 = FUN_08006680();\n      value1 = (long long)DAT_0800818c * ((long long)(uint)((int)value4 * 0x19) / (long long)(uint)(input_param2 << 2));\n      value2 = FUN_08006680((int)value4, (int)((ulonglong)value4 >> 0x20), (int)value1);\n      value3 = FUN_08006680();\n      *(uint *)(input_param + 8) = ((uint)(value1 >> 0x25) << 4) | ((uint)DAT_0800818c * (uint)((((uint)(value2 * 0x19) / (uint)(input_param2 << 2)) + ((uint)((ulonglong)DAT_0800818c * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(input_param2 << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    uint value4 = FUN_080066cc();\n    value1 = (long long)DAT_0800818c * ((long long)(uint)((int)value4 * 0x19) / (long long)(uint)(input_param2 << 2));\n    value2 = FUN_080066cc((int)value4, (int)((ulonglong)value4 >> 0x20), (int)value1);\n    value3 = FUN_080066cc();\n    *(uint *)(input_param + 8) = ((uint)(value1 >> 0x25) << 4) | ((uint)DAT_0800818c * (uint)((((uint)(value2 * 0x19) / (uint)(input_param2 << 2)) + ((uint)((ulonglong)DAT_0800818c * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(input_param2 << 2))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n  }\n  else {\n    if ((input_param != PTR_DAT_08008184) && (input_param != PTR_DAT_08008188)) {\n      uint value4 = FUN_08006680();\n      value1 = (long long)DAT_0800818c * ((long long)(uint)((int)value4 * 0x19) / (long long)(uint)(input_param2 << 1));\n      value2 = FUN_08006680((int)value4, (int)((ulonglong)value4 >> 0x20), (int)value1);\n      value3 = FUN_08006680();\n      *(uint *)(input_param + 8) = ((uint)(value1 >> 0x25) << 4) | ((uint)DAT_0800818c * (uint)((((uint)(value2 * 0x19) / (uint)(input_param2 << 1)) + ((uint)((ulonglong)DAT_0800818c * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(input_param2 << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n      return;\n    }\n    uint value4 = FUN_080066cc();\n    value1 = (long long)DAT_0800818c * ((long long)(uint)((int)value4 * 0x19) / (long long)(uint)(input_param2 << 1));\n    value2 = FUN_080066cc((int)value4, (int)((ulonglong)value4 >> 0x20), (int)value1);\n    value3 = FUN_080066cc();\n    *(uint *)(input_param + 8) = ((uint)(value1 >> 0x25) << 4) | ((uint)DAT_0800818c * (uint)((((uint)(value2 * 0x19) / (uint)(input_param2 << 1)) + ((uint)((ulonglong)DAT_0800818c * ((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(input_param2 << 1))) >> 0x25) * -100) * 0x10 + 0x32) >> 0x25) & 0xf;\n  }\n  return;\n}",
            "called": [
                "FUN_080066cc",
                "FUN_08006680"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007f54",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "calculate_value_08007f54"
        },
        "FUN_08003b98": {
            "renaming": {
                "FUN_08003b98": "check_input_08003b98",
                "param_1": "input",
                "bVar1": "second_char",
                "iVar2": "i",
                "uVar3": "uVar3",
                "uVar4": "result",
                "uVar5": "uVar5",
                "local_14": "local_14",
                "local_10": "local_10",
                "local_a": "flag",
                "local_9": "global_var4",
                "PTR_DAT_08003f2c": "global_var1",
                "PTR_DAT_08003f30": "global_var2",
                "PTR_DAT_08003f34": "global_var3",
                "PTR_FUN_080025e8": "print_message3",
                "PTR_FUN_080024c4": "process_input6",
                "PTR_FUN_080039bc": "print_message7",
                "PTR_FUN_08004030": "print_message8",
                "PTR_FUN_080041a0": "print_message4",
                "PTR_FUN_0800423c": "print_error_message",
                "PTR_FUN_08004250": "print_message2",
                "PTR_FUN_080044e8": "print_message1",
                "PTR_FUN_080046d0": "print_message5",
                "PTR_FUN_08004900": "process_input2",
                "PTR_FUN_08004bc0": "process_input4",
                "PTR_FUN_08004d2c": "process_input",
                "PTR_FUN_08004e30": "validate_input2",
                "PTR_FUN_08008590": "to_long",
                "PTR_FUN_08008bf0": "to_byte",
                "PTR_FUN_08009278": "to_int",
                "PTR_FUN_08009798": "calculate",
                "PTR_FUN_080005b4": "validate_input",
                "PTR_FUN_08002638": "process_input3"
            },
            "code": "uint check_input_08003b98(char *input)\n{\n  byte first_char = input[0];\n  int i = 0;\n  undefined4 uVar3;\n  uint result = 0;\n  undefined8 uVar5;\n  undefined4 local_14;\n  undefined4 local_10;\n  byte second_char;\n  byte flag;\n  if (first_char != '$') {\n    result = PTR_FUNC_080005b4(input);\n    return result;\n  }\n  flag = 1;\n  second_char = input[1];\n  if (second_char == 0) {\n    PTR_FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < second_char) || (second_char < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(second_char) {\n  case 0x23:\n    flag = 2;\n    if (input[2] != '\\0') {\n      return 3;\n    }\n    PTR_FUN_080044e8();\n    break;\n  case 0x24:\n    flag = 2;\n    if (input[2] != '\\0') {\n      return 3;\n    }\n    PTR_FUN_08004250();\n    break;\n  case 0x43:\n    flag = 2;\n    if (input[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\a') {\n      PTR_FUN_080025e8();\n      PTR_FUN_080041a0(5);\n    }\n    else {\n      if (PTR_DAT_08003f2c[1] != '\\0') {\n        return 0xb;\n      }\n      PTR_DAT_08003f2c[1] = 7;\n      PTR_FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    flag = 2;\n    if (input[2] != '\\0') {\n      return 3;\n    }\n    PTR_FUN_080046d0();\n    break;\n  case 0x48:\n    if ((PTR_DAT_08003f30[0x28] & 0x10) == 0) {\n      return 7;\n    }\n    if ((PTR_DAT_08003f2c[1] != '\\0') && (PTR_DAT_08003f2c[1] != '\\x06')) {\n      return 0xb;\n    }\n    print_message6();\n    if (*PTR_DAT_08003f2c == '\\0') {\n      PTR_FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    flag = 2;\n    if (input[2] == '\\0') {\n      for (i = 0; i < 2; i++) {\n        int ret = PTR_FUN_08004d2c(i,input);\n        if (ret == 0) {\n          PTR_FUN_08004030(10);\n        }\n        else {\n          PTR_FUN_08004900(i,input);\n        }\n      }\n      return 0;\n    }\n    flag = 1;\n  default:\nswitchD_08003bdc_caseD_25:\n    i = PTR_FUN_08002638(input,&flag,&local_10);\n    if (i == 0) {\n      return 1;\n    }\n    second_char = flag + 1;\n    if (input[flag] != '=') {\n      return 3;\n    }\n    flag = second_char;\n    if (PTR_DAT_08003f34 == '\\0') {\n      i = PTR_FUN_08002638(input,&flag,&local_14);\n      if (i == 0) {\n        return 1;\n      }\n      if (input[flag] == '\\0') {\n        uVar3 = PTR_FUN_08009278(local_10);\n        result = PTR_FUNC_08004e30(uVar3,local_14);\n        return result;\n      }\n      return 3;\n    }\n    do {\n      input[(uint)flag - (uint)second_char] = input[flag];\n      result = (uint)flag;\n      flag = flag + 1;\n    } while (input[result] != '\\0');\n    global_var4 = PTR_FUNC_080005b4(input);\n    if (global_var4 != 0) {\n      return (uint)global_var4;\n    }\n    uVar5 = PTR_FUN_08008590(local_10);\n    uVar5 = PTR_FUN_08009798(uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    global_var5 = PTR_FUN_08008bf0((int)uVar5,(int)((ulonglong)uVar5 >> 0x20));\n    PTR_FUN_08004bc0(global_var5,input);\n    break;\n  case 0x58:\n    flag = 2;\n    if (input[2] != '\\0') {\n      return 3;\n    }\n    if (PTR_DAT_08003f2c[1] == '\\x06') {\n      PTR_FUN_080041a0(3);\n      PTR_DAT_08003f2c[1] = 0;\n    }\n  }\n  return 0;\n}",
            "called": [
                "FUN_080046d0",
                "FUN_08008590",
                "FUN_08004bc0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_0800423c",
                "FUN_08004030",
                "FUN_08009278",
                "FUN_08002638",
                "FUN_08004e30",
                "FUN_080025e8",
                "FUN_08004250",
                "FUN_08004d2c",
                "FUN_080005b4",
                "FUN_08009798",
                "FUN_080024c4",
                "FUN_080041a0",
                "FUN_08004900",
                "FUN_080044e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003b98",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_input_08003b98"
        },
        "FUN_080024c4": {
            "renaming": {
                "FUN_080024c4": "process_data_080024c4",
                "PTR_DAT_080025d8": "data_flag_ptr",
                "PTR_DAT_080025dc": "data_ptr",
                "PTR_DAT_080025e0": "notification_ptr",
                "PTR_DAT_080025e4": "network_ptr",
                "FUN_08001d4c": "initialize_network",
                "FUN_08003a74": "initialize_database",
                "FUN_0800b430": "send_notification",
                "FUN_0800283a": "initialize_graphics",
                "FUN_08008e44": "get_param",
                "FUNC_08008eec": "send_data_to_server",
                "FUN_08001e98": "show_results",
                "FUN_0800585c": "close_graphics",
                "FUN_08002fd4": "initialize_graphics"
            },
            "code": "void process_data_080024c4(void)\n{\n    int is_data_empty = *PTR_DAT_080025d8;\n    PTR_DAT_080025d8[1] = 5;\n    *(int *)PTR_DAT_080025dc = 0;\n    initialize_network();\n    initialize_database();\n    if (is_data_empty == 0) {\n        send_notification(\"Processing data...\",0,0xc);\n        initialize_graphics();\n        PTR_DAT_080025d8[1] = 0;\n        char is_flag_set_1 = (*(unsigned short *)(PTR_DAT_080025dc + 0x2a) & 0x20) ? 1 : -1;\n        char is_flag_set_2 = (*(unsigned short *)(PTR_DAT_080025dc + 0x2a) & 0x80) ? 1 : -1;\n        char is_flag_set_3 = (*(unsigned short *)(PTR_DAT_080025dc + 0x2a) & 0x200) ? 1 : -1;\n        int param_1 = get_param(is_flag_set_1);\n        int param_2 = get_param(is_flag_set_2);\n        int param_3 = get_param(is_flag_set_3);\n        send_data_to_server(param_1,param_2,param_3,*(int *)(PTR_DAT_080025dc + 0x30),0);\n        show_results();\n        close_graphics();\n        initialize_graphics();\n        if ((PTR_DAT_080025dc[0x28] & 8) != 0) {\n            *(int *)PTR_DAT_080025dc = 1;\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08002fd4",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_0800585c",
                "FUN_0800b430",
                "FUN_08008eec",
                "FUN_08003a74"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080024c4",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "process_data_080024c4"
        },
        "FUN_08002f40": {
            "renaming": {
                "FUN_08002f40": "update_data_if_different_08002f40",
                "uVar1": "new_value",
                "PTR_DAT_08002f6c": "data_ptr_1",
                "PTR_DAT_08002f70": "data_ptr_2",
                "FUN_08002870": "calculate_new_value"
            },
            "code": "void update_data_if_different_08002f40(void)\n{\n  undefined new_value;\n  if (*PTR_DAT_08002f6c != *PTR_DAT_08002f70) {\n    new_value = calculate_new_value(*PTR_DAT_08002f70);\n    *PTR_DAT_08002f70 = new_value;\n  }\n  return;\n}",
            "called": [
                "FUN_08002870"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002f40",
            "calling": [
                "FUN_080053a0"
            ],
            "imported": false,
            "current_name": "update_data_if_different_08002f40"
        },
        "FUN_08009054": {
            "renaming": {
                "FUN_08009054": "FUNC_08009054"
            },
            "code": "\nuint FUNC_08009054(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 = param_1 >> 0x17 & 0xff;\n  bVar7 = uVar2 == 0;\n  if (!bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    bVar7 = param_4 == 0;\n  }\n  if (!bVar7) {\n    bVar7 = uVar2 == 0xff;\n  }\n  if (!bVar7) {\n    bVar7 = param_4 == 0xff;\n  }\n  if (bVar7) {\n    param_4 = param_2 >> 0x17 & 0xff;\n    uVar6 = param_1;\n    if (uVar2 == 0xff) {\n      if (((param_1 & 0x7fffff) != 0) || (uVar6 = param_2, param_4 == 0xff)) {\nLAB_0800904a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 == 0xff) {\n        uVar6 = param_2;\n        if ((param_2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (param_1 ^ param_2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      bVar7 = (param_1 & 0x7fffffff) == 0;\n      if (!bVar7) {\n        bVar7 = (param_2 & 0x7fffffff) == 0;\n      }\n      if (!bVar7) {\n        bVar7 = uVar2 == 0;\n        uVar6 = param_1 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 = param_1 << 1;\n            bVar7 = (param_1 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          uVar2 = uVar2 - 1;\n        }\n        param_1 = param_1 | uVar6;\n        bVar7 = param_4 == 0;\n        uVar6 = param_2 & 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 = param_2 << 1;\n            bVar7 = (param_2 & 0x800000) == 0;\n          }\n          if (!bVar7) break;\n          param_4 = param_4 - 1;\n        }\n        param_2 = param_2 | uVar6;\n        goto LAB_0800906c;\n      }\n      if ((param_1 & 0x7fffffff) == 0) {\n        if ((param_2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    param_1 = param_1 ^ param_2;\n  }\n  else {\nLAB_0800906c:\n    iVar3 = uVar2 - param_4;\n    if (param_2 << 9 == 0) {\n      param_1 = (param_1 ^ param_2) & 0x80000000 | param_1 & 0x7fffff;\n      bVar9 = SCARRY4(iVar3,0x7f);\n      iVar5 = iVar3 + 0x7f;\n      bVar7 = iVar5 < 0;\n      bVar8 = iVar5 == 0;\n      if (!bVar8 && bVar7 == bVar9) {\n        bVar9 = SBORROW4(0xff,iVar5);\n        bVar7 = 0xff - iVar5 < 0;\n        bVar8 = iVar5 == 0xff;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        param_1 = param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 && bVar7 == bVar9) {\n        return param_1;\n      }\n      param_1 = param_1 | 0x800000;\n      uVar2 = 0;\n      bVar8 = SBORROW4(iVar5,1);\n      uVar4 = iVar3 + 0x7e;\n      bVar7 = uVar4 == 0;\n      uVar6 = uVar4;\n    }\n    else {\n      uVar1 = (param_2 << 9) >> 4 | 0x10000000;\n      uVar2 = (param_1 << 9) >> 4 | 0x10000000;\n      param_1 = (param_1 ^ param_2) & 0x80000000;\n      bVar7 = uVar1 <= uVar2;\n      if (!bVar7) {\n        uVar2 = uVar2 << 1;\n      }\n      uVar4 = iVar3 + 0x7d + (uint)bVar7;\n      uVar6 = 0x800000;\n      do {\n        if (uVar1 <= uVar2) {\n          uVar2 = uVar2 - uVar1;\n          param_1 = param_1 | uVar6;\n        }\n        bVar7 = uVar1 >> 1 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 1);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 1;\n        }\n        bVar7 = uVar1 >> 2 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 2);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 2;\n        }\n        bVar7 = uVar1 >> 3 <= uVar2;\n        if (bVar7) {\n          uVar2 = uVar2 - (uVar1 >> 3);\n        }\n        if (bVar7) {\n          param_1 = param_1 | uVar6 >> 3;\n        }\n        uVar2 = uVar2 * 0x10;\n        bVar7 = uVar2 == 0;\n        if (!bVar7) {\n          uVar6 = uVar6 >> 4;\n          bVar7 = uVar6 == 0;\n        }\n      } while (!bVar7);\n      bVar8 = SBORROW4(uVar4,0xfd);\n      bVar7 = uVar4 == 0xfd;\n      uVar6 = uVar4 - 0xfd;\n      if (uVar4 < 0xfe) {\n        param_1 = param_1 + uVar4 * 0x800000 + (uint)(uVar1 <= uVar2);\n        if (uVar2 - uVar1 == 0) {\n          param_1 = param_1 & 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 < 0 != bVar8) {\n      bVar7 = (int)(uVar4 + 0x19) < 0;\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        param_1 = param_1 & 0x80000000;\n      }\n      if (uVar4 == 0xffffffe7 || bVar7 != SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 = (param_1 << 1) >> (-uVar4 & 0xff);\n      uVar4 = param_1 << (uVar4 + 0x20 & 0xff);\n      uVar6 = ((uint)((param_1 & 0x80000000) != 0) << 0x1f | uVar6 >> 1) + (uint)((byte)uVar6 & 1);\n      if ((uVar2 | uVar4 << 1) == 0) {\n        uVar6 = uVar6 & ~(uVar4 >> 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "called": [],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009054",
            "calling": [
                "FUN_08004250",
                "FUN_08001994",
                "FUN_080004fc",
                "FUN_08004940",
                "FUN_08002908",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08003004",
                "FUN_08003618",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "FUNC_08009054"
        },
        "FUN_080025e8": {
            "renaming": {
                "FUN_080025e8": "update_status_if_needed_080025e8",
                "PTR_DAT_08002634": "PTR_STATUS",
                "FUN_08005250": "update_info",
                "FUN_08000210": "update_config",
                "byte": "BYTE",
                "FUN_080057e4": "update_error"
            },
            "code": "void update_status_if_needed_080025e8(void)\n{\n  bool status_needs_update = !(PTR_DAT_08002634[2] & 0x10);\n  if (status_needs_update) {\n    PTR_DAT_08002634[2] |= 0x10;\n    update_info();\n    update_config();\n    if ((byte)PTR_DAT_08002634[1] - 3 < 3) {\n      PTR_DAT_08002634[2] |= 0x20;\n      update_error();\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08005250",
                "FUN_080057e4",
                "FUN_08000210"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080025e8",
            "calling": [
                "FUN_08005900",
                "FUN_080005b4",
                "FUN_08003b98",
                "FUN_0800195c",
                "FUN_08003a18"
            ],
            "imported": false,
            "current_name": "update_status_if_needed_080025e8"
        },
        "FUN_080001c8": {
            "renaming": {
                "FUN_080001c8": "do_nothing_080001c8"
            },
            "code": "\nvoid do_nothing_080001c8(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001c8",
            "calling": [
                "FUN_08000220"
            ],
            "imported": false,
            "current_name": "do_nothing_080001c8"
        },
        "FUN_08005250": {
            "renaming": {
                "FUN_08005250": "do_nothing_08005250",
                "PTR_": "PTR_",
                "DAT_": "DAT_"
            },
            "code": "void do_nothing_08005250() {\n  do_nothing_08005250_08005214();\n  return;\n}",
            "called": [
                "FUN_08005214"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005250",
            "calling": [
                "FUN_080025e8",
                "FUN_0800525c",
                "FUN_08005238"
            ],
            "imported": false,
            "current_name": "do_nothing_08005250"
        },
        "FUN_08007430": {
            "renaming": {
                "FUN_08007430": "wait_forever_08007430"
            },
            "code": "void wait_forever_08007430(void)\n{\n    while(true) {\n        // Do nothing block with infinite loop\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007430",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "wait_forever_08007430"
        },
        "FUN_08008640": {
            "renaming": {
                "FUN_08008640": "FUNC_08008640"
            },
            "code": "\nulonglong FUNC_08008640(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 = CONCAT44(param_2,param_1);\n  uVar7 = 0x7ff;\n  uVar4 = param_2 >> 0x14 & 0x7ff;\n  bVar9 = uVar4 == 0;\n  if (!bVar9) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar9 = unaff_r5 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = uVar4 == 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 = unaff_r5 == 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 = FUN_0800881c();\n  }\n  uVar3 = (uint)(uVar12 >> 0x20);\n  iVar5 = uVar4 + unaff_r5;\n  uVar4 = uVar3 ^ param_4;\n  uVar3 = uVar3 & ~(uVar7 << 0x15);\n  param_4 = param_4 & ~(uVar7 << 0x15);\n  bVar9 = ((uint)uVar12 | uVar3 << 0xc) == 0;\n  if (!bVar9) {\n    bVar9 = (param_3 | param_4 << 0xc) == 0;\n  }\n  uVar3 = uVar3 | 0x100000;\n  param_4 = param_4 | 0x100000;\n  if (bVar9) {\n    param_3 = (uint)uVar12 | param_3;\n    param_4 = (uVar4 & 0x80000000 | uVar3) ^ param_4;\n    uVar4 = uVar7 >> 1;\n    bVar11 = SBORROW4(iVar5,uVar4);\n    uVar6 = iVar5 - uVar4;\n    bVar9 = uVar6 == 0;\n    uVar3 = uVar6;\n    if (!bVar9 && (int)uVar4 <= iVar5) {\n      bVar11 = SBORROW4(uVar7,uVar6);\n      uVar3 = uVar7 - uVar6;\n      bVar9 = uVar7 == uVar6;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      param_4 = param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 && (int)uVar3 < 0 == bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 = param_4 | 0x100000;\n    uVar7 = 0;\n    bVar11 = SBORROW4(uVar6,1);\n    uVar6 = uVar6 - 1;\n    bVar9 = uVar6 == 0;\n    uVar4 = uVar6;\n  }\n  else {\n    uVar1 = (uVar12 & 0xffffffff) * (ulonglong)param_3;\n    uVar12 = (uVar12 & 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 >> 0x20);\n    uVar8 = (uint)uVar12;\n    lVar2 = (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 >> 0x20);\n    uVar7 = (uint)lVar2;\n    uVar3 = (uint)((ulonglong)lVar2 >> 0x20);\n    if ((int)uVar1 != 0) {\n      uVar8 = uVar8 | 1;\n    }\n    uVar6 = (iVar5 + -0x3ff) - (uint)(uVar3 < 0x200);\n    if (uVar3 < 0x200) {\n      bVar9 = (uVar8 & 0x80000000) != 0;\n      uVar8 = uVar8 << 1;\n      lVar2 = CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 = uVar4 & 0x80000000 | (int)((ulonglong)lVar2 >> 0x20) << 0xb | (uint)lVar2 >> 0x15;\n    param_3 = (uint)lVar2 << 0xb | uVar8 >> 0x15;\n    uVar7 = uVar8 * 0x800;\n    bVar10 = 0xfc < uVar6;\n    bVar11 = SBORROW4(uVar6,0xfd);\n    uVar3 = uVar6 - 0xfd;\n    bVar9 = uVar3 == 0;\n    uVar4 = uVar3;\n    if (bVar10 && !bVar9) {\n      bVar10 = 0x6ff < uVar3;\n      bVar11 = SBORROW4(uVar3,0x700);\n      uVar4 = uVar6 - 0x7fd;\n      bVar9 = uVar3 == 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 = 0x7fffffff < uVar7;\n      if (uVar7 == 0x80000000) {\n        bVar9 = (uVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 && (int)uVar4 < 0 == bVar11) {\n    return (ulonglong)(param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar10 = SCARRY4(uVar6,0x36);\n  bVar9 = (int)(uVar6 + 0x36) < 0;\n  bVar11 = uVar6 == 0xffffffca;\n  if (bVar11 || bVar9 != bVar10) {\n    param_3 = 0;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    param_4 = param_4 & 0x80000000;\n  }\n  if (bVar11 || bVar9 != bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 = -uVar6;\n  uVar3 = uVar4 - 0x20;\n  if (0x1f < (int)uVar4) {\n    uVar6 = param_3 >> (uVar3 & 0xff) | param_4 << (0x20 - uVar3 & 0xff);\n    uVar4 = (param_4 >> (uVar3 & 0xff) & ~((param_4 & 0x80000000) >> (uVar3 & 0xff))) -\n            ((int)uVar6 >> 0x1f);\n    if ((uVar7 | param_3 << (0x20 - uVar3 & 0xff) | uVar6 << 1) == 0) {\n      uVar4 = uVar4 & ~(uVar6 >> 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) & 0x80000000ffffffff;\n  }\n  iVar5 = uVar4 - 0x14;\n  if (iVar5 == 0 || iVar5 < 0 != SCARRY4(uVar3,0xc)) {\n    uVar8 = param_3 << (uVar6 + 0x20 & 0xff);\n    uVar3 = param_3 >> (uVar4 & 0xff) | param_4 << (uVar6 + 0x20 & 0xff);\n    uVar6 = uVar3 + -((int)uVar8 >> 0x1f);\n    if ((uVar7 | uVar8 << 1) == 0) {\n      uVar6 = uVar6 & ~(uVar8 >> 0x1f);\n    }\n    return CONCAT44((param_4 & 0x80000000) +\n                    ((param_4 & 0x7fffffff) >> (uVar4 & 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 >> 0x1f)),uVar6);\n  }\n  uVar4 = 0xc - iVar5;\n  uVar6 = param_3 << (uVar4 & 0xff);\n  uVar4 = param_3 >> (0x20 - uVar4 & 0xff) | param_4 << (uVar4 & 0xff);\n  uVar3 = uVar4 + -((int)uVar6 >> 0x1f);\n  if ((uVar7 | uVar6 << 1) == 0) {\n    uVar3 = uVar3 & ~(uVar6 >> 0x1f);\n  }\n  return CONCAT44((param_4 & 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 >> 0x1f)),uVar3);\n}\n\n",
            "called": [
                "FUN_0800881c"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08008640",
            "calling": [
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800056c",
                "FUN_0800af78",
                "FUN_08002638",
                "FUN_0800b2e8",
                "FUN_08001f00",
                "FUN_0800a5a0",
                "FUN_08002c18",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_0800a1bc",
                "FUN_08009b24",
                "FUN_0800a348",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "FUNC_08008640"
        },
        "FUN_08007436": {
            "renaming": {
                "FUN_08007436": "initialize_components_08007436",
                "iVar1": "status",
                "local_4c": "local_var1",
                "local_48": "local_var2",
                "local_34": "local_var3",
                "local_30": "local_var4",
                "local_2c": "local_var5",
                "local_28": "local_var6",
                "local_24": "local_var7",
                "local_20": "local_var8",
                "local_1c": "local_var9",
                "local_18": "local_var10",
                "local_14": "local_var11",
                "local_10": "local_var12",
                "local_c": "local_var13",
                "DAT_080074c0": "PTR_DAT_080074c0",
                "DAT_080074c4": "PTR_DAT_080074c4",
                "FUNC_08005cec": "function1",
                "FUNC_0800618c": "function2",
                "uint": "uint32_t"
            },
            "code": "void initialize_components_08007436(void)\n{\n  int status;\n  uint32_t flag1;\n  uint16_t flag2;\n  uint32_t local_var1 = 1;\n  uint32_t local_var2 = 1;\n  uint32_t local_var3 = 2;\n  uint32_t local_var4 = 4194304;\n  uint32_t local_var5 = 8;\n  uint32_t local_var6 = 336;\n  uint32_t local_var7 = 2;\n  uint32_t local_var8 = 7;\n  flag1 = *(uint32_t *)(DAT_080074c0 + 0x40) | 0x10000000;\n  *(uint32_t *)(DAT_080074c0 + 0x40) = flag1;\n  flag2 = *DAT_080074c4 | 0xc000;\n  *DAT_080074c4 = flag2;\n  status = FUNC_08005cec(&local_var1);\n  if (status != 0)\n  {\n    cleanup();\n  }\n  uint32_t local_var9 = 15;\n  uint32_t local_var10 = 2;\n  uint32_t local_var11 = 0;\n  uint32_t local_var12 = 5120;\n  uint32_t local_var13 = 4096;\n  status = FUNC_0800618c(&local_var9, 5);\n  if (status != 0)\n  {\n    cleanup();\n  }\n}\n",
            "called": [
                "FUN_0800618c",
                "FUN_08005cec",
                "FUN_08007430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007436",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "initialize_components_08007436"
        },
        "FUN_08005814": {
            "renaming": {
                "FUN_08005814": "initialize_data_08005814",
                "FUN_0800b430": "set_data",
                "FUN_08005324": "set_timer",
                "PTR_DAT_08005834": "PTR_DATA_ARRAY",
                "PTR_DAT_08005838": "PTR_DATA_FLAG"
            },
            "code": "void initialize_data_08005814(void)\n{\n  set_data(PTR_DAT_08005834, 0, 0x24);\n  set_timer(800);\n  *(undefined4 *)PTR_DAT_08005838 = 0;\n  return;\n}",
            "called": [
                "FUN_08005324",
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005814",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_08005814"
        },
        "FUN_08005bdc": {
            "renaming": {
                "FUN_08005bdc": "update_data_08005bdc",
                "param_1": "data",
                "param_2": "value",
                "DAT_08005c28": "data_array_1",
                "DAT_08005c2c": "data_array_2"
            },
            "code": "void update_data_08005bdc(byte data, uint value) {\n  if (data < 0) {\n    *(char *)((data & 0xf) + DAT_08005c28 + 0x14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)data + DAT_08005c2c + 0x300) = (char)((value & 0xff) << 4);\n  }\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005bdc",
            "calling": [
                "FUN_08005c30"
            ],
            "imported": false,
            "current_name": "update_data_08005bdc"
        },
        "FUN_080002f0": {
            "renaming": {
                "FUN_080002f0": "set_data_flag_and_fill_buffer_080002f0",
                "PTR_DAT_08000308": "data_pointer",
                "PTR_DAT_0800030c": "data_flag_pointer"
            },
            "code": "void set_data_flag_and_fill_buffer_080002f0(void)\n{\n  fill_buffer_with_value_at_address(PTR_DAT_08000308, 0xff, 4);\n  *(int *)PTR_DAT_0800030c = 1;\n  return;\n}",
            "called": [
                "FUN_0800b430"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002f0",
            "calling": [
                "FUN_08000374",
                "FUN_08000310",
                "FUN_08000340",
                "FUN_080003ec"
            ],
            "imported": false,
            "current_name": "set_data_flag_and_fill_buffer_080002f0"
        },
        "FUN_080073c0": {
            "renaming": {
                "FUN_080073c0": "do_nothing_080073c0"
            },
            "code": "\nvoid do_nothing_080073c0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080073c0",
            "calling": [
                "FUN_0800738e"
            ],
            "imported": false,
            "current_name": "do_nothing_080073c0"
        },
        "FUN_0800778c": {
            "renaming": {
                "FUN_0800778c": "process_data_0800778c",
                "local_24": "bit_shift",
                "local_20": "mask2",
                "local_1c": "mask3",
                "local_18": "mask4",
                "local_14": "mask5",
                "local_10": "data_ptr",
                "local_c": "counter"
            },
            "code": "void process_data_0800778c(void)\n{\n    int bit_shift;\n    uint mask1;\n    uint mask2;\n    uint mask3;\n    uint mask4;\n    uint *data_ptr;\n    uint counter;\n\n    for (counter = 0; counter < 0x11; counter++) {\n        data_ptr = (uint *)(PTR_DAT_0800784c + counter * 0x18);\n        *(uint *)(DAT_08007850 + 0x30) |= 1 << (*data_ptr >> 4 & 0xff);\n        bit_shift = *data_ptr & 0xf;\n        mask1 = 1 << bit_shift;\n        mask2 = data_ptr[1];\n        mask3 = data_ptr[2];\n        mask4 = data_ptr[3];\n        FUN_08006e88(((*data_ptr >> 4) + 0x100080) * 0x400, &mask1);\n        if ((int)data_ptr[5] >= 0) {\n            FUN_0800733e(((*data_ptr >> 4) + 0x100080) * 0x400, 1 << bit_shift & 0xffff, data_ptr[5] & 0xff);\n        }\n    }\n    return;\n}",
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800778c",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "process_data_0800778c"
        },
        "FUN_080001d4": {
            "renaming": {
                "FUN_080001d4": "do_nothing_080001d4"
            },
            "code": "\nvoid do_nothing_080001d4(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080001d4",
            "calling": [
                "FUN_08000210"
            ],
            "imported": false,
            "current_name": "do_nothing_080001d4"
        },
        "FUN_08001ddc": {
            "renaming": {
                "FUN_08001ddc": "execute_tasks_08001ddc",
                "FUN_080051b4": "initialize_system",
                "FUN_0800583c": "initialize_network",
                "FUN_0800b430": "initialize_database",
                "PTR_DAT_08001e90": "PTR_DATA",
                "do_nothing_08008244": "do_nothing",
                "*PTR_DAT_08001e90": "*PTR_DATA",
                "PTR_DAT_08001e94": "PTR_STATUS",
                "do_nothing_080082ba": "do_nothing",
                "FUN_08002f24": "process_network_data",
                "FUN_080004ac": "process_user_input",
                "FUN_080039a0": "process_database",
                "FUN_08005238": "process_file_system",
                "FUN_080001f8": "process_logging",
                "FUN_0800192c": "process_memory_management",
                "FUN_08005814": "process_timer",
                "FUN_0800283a": "process_idle",
                "PTR_DAT_08001e90[1]": "PTR_DATA[1]",
                "PTR_DAT_08001e90[2]": "PTR_DATA[2]",
                "PTR_DAT_08001e90[0x10]": "PTR_DATA[0x10]",
                "PTR_DAT_08001e94[0x28]": "PTR_STATUS[0x28]",
                "FUN_080041a0": "process_shutdown",
                "FUN_080039bc": "process_error_handling",
                "FUN_08003a74": "process_timer",
                "FUN_08003f34": "process_idle"
            },
            "code": "void execute_tasks_08001ddc(void)\n{\n    do_nothing();\n    initialize_system();\n    initialize_network();\n    initialize_database(PTR_DAT_08001e90, 0, 0x14);\n    *PTR_DAT_08001e90 = 1;\n    PTR_DAT_08001e90[1] = 1;\n    while(true) {\n        if (*PTR_DAT_08001e90 != 0) {\n            do_nothing();\n            process_network_data();\n            process_user_input();\n            process_database();\n            process_file_system();\n            process_logging();\n            process_memory_management();\n            *PTR_DAT_08001e90 = 0;\n            PTR_DAT_08001e90[2] = 0;\n            if ((PTR_DAT_08001e94[0x28] & 2) != 0) {\n                PTR_DAT_08001e90[0x10] = 1;\n            }\n            if ((PTR_DAT_08001e90[1] == 1) && ((PTR_DAT_08001e94[0x28] & 0x10) != 0)) {\n                PTR_DAT_08001e90[1] = 6;\n            }\n            if (PTR_DAT_08001e90[1] == 6) {\n                process_shutdown(2);\n            }\n            else {\n                PTR_DAT_08001e90[1] = 0;\n                process_error_handling();\n            }\n        }\n        process_timer();\n        process_idle();\n    }\n}",
            "called": [
                "FUN_080039a0",
                "FUN_0800283a",
                "FUN_080039bc",
                "FUN_0800583c",
                "FUN_080001f8",
                "FUN_080004ac",
                "FUN_080051b4",
                "FUN_08005814",
                "FUN_0800b430",
                "FUN_08002f24",
                "FUN_080082ba",
                "FUN_08003a74",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_08005238",
                "FUN_0800192c",
                "FUN_080041a0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08001ddc",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "execute_tasks_08001ddc"
        },
        "FUN_080069b4": {
            "renaming": {
                "FUN_080069b4": "set_bit_in_array_080069b4",
                "param_1": "bit_index",
                "DAT_080069e0": "array",
                "int": "",
                "char": "",
                "PTR_": "",
                "DAT_": "",
                "array[array_index]": "array[array_index]",
                "1 << bit_offset": "1 << bit_offset",
                "uint": "",
                "byte": "",
                "*(int *)(DAT_080069e0 + ((uint)(int)(char)param_1 >> 5) * 4)": "array[array_index]"
            },
            "code": "void set_bit_in_array_080069b4(int DAT_080069e0[], int bit_index) {\n    int DAT_080069e0_index = bit_index >> 5;\n    int bit_offset = bit_index & 0x1f;\n    *(int *)(DAT_080069e0 + ((uint)(int)(char)param_1 >> 5) * 4) = 1 << bit_offset;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080069b4",
            "calling": [
                "FUN_08006d2e"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_080069b4"
        },
        "FUN_08009228": {
            "renaming": {
                "FUN_08009228": "is_end_of_input_08009228",
                "in_CY": "input_char",
                "FUN_08009204": "read_input"
            },
            "code": "bool is_end_of_input_08009228(void)\n{\n  char input_char;\n  read_input();\n  return input_char == '\\0';\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009228",
            "calling": [
                "FUN_08002afc",
                "FUN_080005b4",
                "FUN_08003826",
                "FUN_080029d8",
                "FUN_08003004",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08009228"
        },
        "FUN_08007c7c": {
            "renaming": {
                "FUN_08007c7c": "update_status_registers_08007c7c",
                "_DAT_40000010": "status_register",
                "_DAT_4000000c": "data_register",
                "FUN_08005778": "reset_system",
                "FUN_08005760": "flush_cache",
                "FUNC_080053a0": "halt_cpu"
            },
            "code": "void update_status_registers_08007c7c(void)\n{\n    bool is_bit_two_set = (_DAT_40000010 & 2) != 0;\n    bool is_bit_four_set = (_DAT_40000010 & 4) != 0;\n    bool is_bit_one_set = (_DAT_40000010 & 1) != 0;\n    bool is_bit_two_set_in_data = (_DAT_4000000c & 2) != 0;\n    bool is_bit_four_set_in_data = (_DAT_4000000c & 4) != 0;\n    bool is_bit_one_set_in_data = (_DAT_4000000c & 1) != 0;\n\n    if (is_bit_two_set && is_bit_two_set_in_data) {\n        _DAT_40000010 &= 0xfffffffd;\n        reset_system();\n    }\n\n    if (is_bit_four_set && is_bit_four_set_in_data) {\n        _DAT_40000010 &= 0xfffffffb;\n        flush_cache();\n    }\n\n    if (is_bit_one_set && is_bit_one_set_in_data) {\n        _DAT_40000010 &= 0xfffffffe;\n        halt_cpu();\n    }\n}\n",
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007c7c",
            "calling": [],
            "imported": false,
            "current_name": "update_status_registers_08007c7c"
        },
        "FUN_08007b70": {
            "renaming": {
                "FUN_08007b70": "set_flags_according_to_global_variables_08007b70",
                "local_c": "flags",
                "_DAT_40000034": "global_var_1",
                "_DAT_40000038": "global_var_2",
                "_DAT_4000000c": "global_var_3",
                "_DAT_40000000": "global_var_4"
            },
            "code": "void set_flags_according_to_global_variables_08007b70(void)\n{\n  uint8_t flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags |= 4;\n  }\n  _DAT_4000000c |= flags;\n  _DAT_40000000 |= 1;\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007b70",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "set_flags_according_to_global_variables_08007b70"
        },
        "FUN_08004d2c": {
            "renaming": {
                "FUN_08004d2c": "check_and_copy_data_to_buffer_08004d2c",
                "param_1": "data",
                "param_2": "buffer",
                "iVar1": "result",
                "FUN_080003ec": "copy_data_to_buffer"
            },
            "code": "bool check_and_copy_data_to_buffer_08004d2c(byte data, undefined *buffer){\n                      int result;\n                      result = copy_data_to_buffer(buffer,(ushort)data * 0x101 + 0x300,0x100);\n                      if (result == 0) {\n                        *buffer = 0;\n                        copy_data_to_buffer(data,buffer);\n                      }\n                      return result != 0;\n                    }",
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004d2c",
            "calling": [
                "FUN_080039bc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_and_copy_data_to_buffer_08004d2c"
        },
        "FUN_08003004": {
            "renaming": {
                "FUN_08003004": "FUNC_08003004"
            },
            "code": "\nvoid FUNC_08003004(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 char param_5)\n\n{\n  undefined *puVar1;\n  undefined uVar2;\n  undefined4 uVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  uint uVar11;\n  ushort *puVar12;\n  int iVar13;\n  uint uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined4 local_20;\n  undefined4 local_1c;\n  \n  puVar12 = (ushort *)(PTR_DAT_08003234 + (uint)(byte)*PTR_DAT_08003230 * 0x40);\n  uVar3 = FUNC_08008eec(*(undefined4 *)PTR_DAT_08003238,param_1);\n  uVar15 = FUN_08008590(uVar3);\n  iVar4 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 4),param_2);\n  uVar15 = FUN_08008590(uVar3);\n  iVar5 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  uVar3 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003238 + 8),param_3);\n  uVar15 = FUN_08008590(uVar3);\n  iVar6 = FUN_080095b8((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n  *puVar12 = 0;\n  if (iVar4 < *(int *)PTR_DAT_0800323c) {\n    *puVar12 = *puVar12 | 0x20;\n  }\n  if (iVar5 < *(int *)(PTR_DAT_0800323c + 4)) {\n    *puVar12 = *puVar12 | 0x880;\n  }\n  if (iVar6 < *(int *)(PTR_DAT_0800323c + 8)) {\n    *puVar12 = *puVar12 | 0x200;\n  }\n  iVar13 = iVar4 - *(int *)PTR_DAT_0800323c;\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 2) = iVar13;\n  iVar13 = iVar5 - *(int *)(PTR_DAT_0800323c + 4);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 4) = iVar13;\n  iVar13 = iVar6 - *(int *)(PTR_DAT_0800323c + 8);\n  if (iVar13 < 0) {\n    iVar13 = -iVar13;\n  }\n  *(int *)(puVar12 + 6) = iVar13;\n  uVar11 = *(uint *)(puVar12 + 6);\n  if (*(uint *)(puVar12 + 6) < *(uint *)(puVar12 + 4)) {\n    uVar11 = *(uint *)(puVar12 + 4);\n  }\n  uVar14 = *(uint *)(puVar12 + 2);\n  if (*(uint *)(puVar12 + 2) < uVar11) {\n    uVar14 = uVar11;\n  }\n  *(uint *)(puVar12 + 8) = uVar14;\n  if (*(int *)(puVar12 + 8) != 0) {\n    uVar3 = FUN_08008e44(iVar4 - *(int *)PTR_DAT_0800323c);\n    uVar3 = FUNC_08009054(uVar3,*(undefined4 *)PTR_DAT_08003238);\n    uVar7 = FUN_08008e44(iVar5 - *(int *)(PTR_DAT_0800323c + 4));\n    uVar7 = FUNC_08009054(uVar7,*(undefined4 *)(PTR_DAT_08003238 + 4));\n    uVar8 = FUN_08008e44(iVar6 - *(int *)(PTR_DAT_0800323c + 8));\n    uVar8 = FUNC_08009054(uVar8,*(undefined4 *)(PTR_DAT_08003238 + 8));\n    uVar9 = FUNC_08008eec(uVar3,uVar3);\n    uVar10 = FUNC_08008eec(uVar7,uVar7);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar10 = FUNC_08008eec(uVar8,uVar8);\n    uVar9 = FUNC_08008cdc(uVar9,uVar10);\n    uVar15 = FUN_08008590(uVar9);\n    uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x10) = uVar9;\n    uVar9 = FUNC_08009054(0x3f800000,*(undefined4 *)(puVar12 + 0x10));\n    if (param_5 == '\\0') {\n      local_1c = FUNC_08008eec(param_4,uVar9);\n    }\n    else {\n      local_1c = FUNC_08009054(0x3f800000,param_4);\n    }\n    uVar10 = FUNC_08008eec(*(undefined4 *)(puVar12 + 0x10),local_1c);\n    *(undefined4 *)(puVar12 + 10) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,local_1c);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008bf0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x1e) = uVar10;\n    uVar10 = FUN_08008e44(*(undefined4 *)(puVar12 + 8));\n    uVar10 = FUNC_08008eec(uVar10,uVar9);\n    uVar10 = FUNC_08008eec(uVar10,*(undefined4 *)(PTR_DAT_08003560 + 0x20));\n    uVar10 = FUNC_08009054(uVar10,DAT_08003564);\n    uVar15 = FUN_08008590(uVar10);\n    uVar15 = FUN_08009318((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    uVar10 = FUN_08008ba0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n    *(undefined4 *)(puVar12 + 0x18) = uVar10;\n    uVar3 = FUNC_08008eec(uVar3,uVar9);\n    uVar7 = FUNC_08008eec(uVar7,uVar9);\n    uVar8 = FUNC_08008eec(uVar8,uVar9);\n    local_20 = 0;\n    if ((*PTR_DAT_08003568 != *PTR_DAT_0800356c) &&\n       (iVar13 = FUN_08009264(*(undefined4 *)(PTR_DAT_08003570 + 0x18),0), iVar13 != 0)) {\n      uVar9 = FUNC_08008eec(*(uint *)(PTR_DAT_08003570 + 0xc) ^ 0x80000000,uVar3);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x10),uVar7);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003570 + 0x14),uVar8);\n      uVar9 = FUNC_08008cd8(uVar9,uVar10);\n      uVar15 = FUN_08008590(uVar9);\n      iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003550,DAT_08003554);\n      if (iVar13 != 0) {\n        iVar13 = FUN_08009228(*(undefined4 *)(PTR_DAT_08003570 + 0x18),*(undefined4 *)(puVar12 + 10)\n                             );\n        if (iVar13 == 0) {\n          local_20 = *(undefined4 *)(puVar12 + 10);\n        }\n        else {\n          local_20 = *(undefined4 *)(PTR_DAT_08003570 + 0x18);\n        }\n        uVar15 = FUN_08008590(uVar9);\n        iVar13 = FUN_08008b60((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),DAT_08003558,DAT_0800355c\n                             );\n        if (iVar13 != 0) {\n          uVar15 = FUN_08008590(uVar9);\n          uVar15 = FUNC_080082d0(0,DAT_08003574,(int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUNC_08008640((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),0,DAT_08003578);\n          uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar9 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          uVar15 = FUN_08008590(local_20);\n          uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n          uVar10 = FUNC_08008eec(uVar10,uVar9);\n          uVar16 = FUN_08008590(uVar10);\n          uVar17 = FUN_08008590(uVar9);\n          uVar17 = FUNC_080082d0(0,DAT_08003574,(int)uVar17,(int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_08008894((int)uVar16,(int)((ulonglong)uVar16 >> 0x20),(int)uVar17,\n                                (int)((ulonglong)uVar17 >> 0x20));\n          uVar16 = FUNC_080098d0((int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n          iVar13 = FUN_08008b24((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                (int)((ulonglong)uVar16 >> 0x20));\n          if (iVar13 == 0) {\n            uVar10 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08003560 + 0x20),\n                                  *(undefined4 *)(PTR_DAT_08003560 + 0x24));\n            uVar10 = FUNC_08008eec(uVar10,uVar9);\n            uVar15 = FUN_08008590(uVar10);\n            uVar16 = FUN_08008590(uVar9);\n            uVar16 = FUNC_080082d0(0,DAT_08003574,(int)uVar16,(int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_08008894((int)uVar15,(int)((ulonglong)uVar15 >> 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 >> 0x20));\n            uVar15 = FUNC_080098d0((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n            local_20 = FUN_08008c30((int)uVar15,(int)((ulonglong)uVar15 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(puVar12 + 0xe) = local_20;\n    uVar10 = FUN_08002978(*(uint *)(PTR_DAT_08003560 + 0x20) ^ 0x80000000,0,\n                          *(undefined4 *)(puVar12 + 0x10));\n    iVar13 = FUN_08009228(local_20,uVar10);\n    uVar9 = uVar10;\n    if (iVar13 != 0) {\n      uVar9 = local_20;\n    }\n    *(undefined4 *)(puVar12 + 0xc) = uVar9;\n    iVar13 = FUN_08009250(uVar10,*(undefined4 *)(puVar12 + 10));\n    if (iVar13 == 0) {\n      *(undefined *)((int)puVar12 + 0x25) = 0;\n    }\n    else {\n      *(undefined *)((int)puVar12 + 0x25) = 1;\n    }\n    *(undefined *)(puVar12 + 0x12) = 1;\n    puVar1 = PTR_DAT_080035e0;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0xc) = uVar3;\n    *(undefined4 *)(puVar1 + 0x10) = uVar7;\n    *(undefined4 *)(puVar1 + 0x14) = uVar8;\n    *(undefined4 *)(PTR_DAT_080035e0 + 0x18) = *(undefined4 *)(puVar12 + 10);\n    *PTR_DAT_080035e8 = *PTR_DAT_080035e4;\n    uVar2 = FUN_08002870(*PTR_DAT_080035e8);\n    *PTR_DAT_080035e4 = uVar2;\n    puVar1 = PTR_DAT_080035e0;\n    *(int *)PTR_DAT_080035e0 = iVar4;\n    *(int *)(puVar1 + 4) = iVar5;\n    *(int *)(puVar1 + 8) = iVar6;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08009250",
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008b60",
                "FUN_08008640",
                "FUN_08008b24",
                "FUN_08008bf0",
                "FUN_08009264",
                "FUN_08009228",
                "FUN_08002870",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08002edc",
                "FUN_080082d0",
                "FUN_08008c30",
                "FUN_08008e44",
                "FUN_08008ba0",
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08003004",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "FUNC_08003004"
        },
        "FUN_080066cc": {
            "renaming": {
                "FUN_080066cc": "calculate_shift_amount_080066cc",
                "uVar1": "function_result",
                "uVar2": "leading_zeroes_count",
                "PTR_DAT_08006714": "shift_amount_pointer",
                "DAT_08006710": "global_data_pointer",
                "masked_value": "masked_value"
            },
            "code": "uint calculate_shift_amount_080066cc(void)\n{\n  uint shift_amount;\n  uint function_result = get_function_result();\n  uint leading_zeroes_count = count_leading_zeroes(0x70000);\n  uint masked_value = (*(uint *)(DAT_08006710 + 8) & 0xe000) >> (leading_zeroes_count & 0xff);\n  shift_amount = function_result >> PTR_DAT_08006714[masked_value];\n  return shift_amount;\n}",
            "called": [
                "FUN_08006628"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080066cc",
            "calling": [
                "FUN_08007f54"
            ],
            "imported": false,
            "current_name": "calculate_shift_amount_080066cc"
        },
        "FUN_080018fc": {
            "renaming": {
                "FUN_080018fc": "update_param_080018fc",
                "param_1": "new_param",
                "*(uint *)(DAT_08001928 + 0x14)": "*ptr",
                "uint": "uint",
                "DAT_08001928": "DAT_08001928",
                "0x14": "0x14",
                "&": "&",
                "return": "return",
                "mask": "mask",
                "old_val": "old_val"
            },
            "code": "void update_param_080018fc(uint new_param)\n{\n  uint* ptr = (uint*)(DAT_08001928 + 0x14);\n  uint mask = 0xfffff55f;\n  uint old_val = *(uint *)(DAT_08001928 + 0x14);\n  *(uint *)(DAT_08001928 + 0x14) = new_param | (old_val & mask);\n  return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080018fc",
            "calling": [
                "FUN_08001994"
            ],
            "imported": false,
            "current_name": "update_param_080018fc"
        },
        "FUN_080039bc": {
            "renaming": {
                "FUN_080039bc": "check_values_080039bc",
                "iVar1": "result",
                "uVar2": "value",
                "local_9": "counter",
                "FUN_08004d2c": "check_value",
                "PTR_DAT_08003a14": "data_pointer",
                "FUN_08004030": "print_error",
                "*PTR_DAT_08003a14": "data_value",
                "FUN_0800369c": "print_value",
                "FUNC_080005b4": "calculate_value"
            },
            "code": "void check_values_080039bc(void)\n{\n  int result;\n  byte counter;\n  for (counter = 0; counter < 2; counter++) {\n    result = check_value(counter, PTR_DAT_08003a14);\n    if (result == 0) {\n      print_error(10);\n    }\n    else if (*PTR_DAT_08003a14 != '\\0') {\n      print_value(PTR_DAT_08003a14);\n      int value = calculate_value(PTR_DAT_08003a14);\n      print_value(value);\n    }\n  }\n  return;\n}",
            "called": [
                "FUN_08004d2c",
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080039bc",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "check_values_080039bc"
        },
        "FUN_0800618c": {
            "renaming": {
                "FUN_0800618c": "set_data_0800618c",
                "param_1": "data",
                "param_2": "size",
                "lVar1": "result",
                "iVar2": "timeout",
                "uVar3": "current_time",
                "uVar4": "max_timeout",
                "uVar5": "time",
                "DAT_08006400": "data_size",
                "DAT_08006404": "timer_data",
                "max_size": "max_data_size",
                "data_type": "timer_type",
                "timeout": "start_time",
                "high_bits": "upper_bits",
                "mid_bits": "middle_bits",
                "low_bits": "lower_bits"
            },
            "code": "uint32_t set_data_0800618c(uint32_t *data, uint32_t size)\n{\n    uint8_t *DAT_08006400 = (uint8_t *)DAT_08006400;\n    uint32_t max_size = *DAT_08006400 & 0xf;\n    if (max_size < size)\n    {\n        *DAT_08006400 = (uint8_t)size;\n        if (size != (*DAT_08006400 & 0xf))\n        {\n            return 1;\n        }\n        if ((data[0] & 1) != 0)\n        {\n            uint32_t data_type = data[1];\n            if (data_type == 1)\n            {\n                if ((*DAT_08006404 & 0x20000) == 0)\n                {\n                    return 1;\n                }\n            }\n            else if (data_type == 2)\n            {\n                if ((*DAT_08006404 & 0x2000000) == 0)\n                {\n                    return 1;\n                }\n            }\n            else if ((*DAT_08006404 & 2) == 0)\n            {\n                return 1;\n            }\n            DAT_08006404[2] = data_type | (DAT_08006404[2] & 0xfffffffc);\n            uint32_t timeout = get_timeout();\n            uint32_t max_timeout = timeout + 5000;\n            if (data_type == 1)\n            {\n                while ((DAT_08006404[2] & 0xc) != 4)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n            else if (data_type == 2)\n            {\n                while ((DAT_08006404[2] & 0xc) != 8)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n            else\n            {\n                while ((DAT_08006404[2] & 0xc) != 0)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n        }\n    }\n    else\n    {\n        if ((data[0] & 1) != 0)\n        {\n            uint32_t data_type = data[1];\n            if (data_type == 1)\n            {\n                if ((*DAT_08006404 & 0x20000) == 0)\n                {\n                    return 1;\n                }\n            }\n            else if (data_type == 2)\n            {\n                if ((*DAT_08006404 & 0x2000000) == 0)\n                {\n                    return 1;\n                }\n            }\n            else if ((*DAT_08006404 & 2) == 0)\n            {\n                return 1;\n            }\n            DAT_08006404[2] = data_type | (DAT_08006404[2] & 0xfffffffc);\n            uint32_t timeout = get_timeout();\n            uint32_t max_timeout = timeout + 5000;\n            if (data_type == 1)\n            {\n                while ((DAT_08006404[2] & 0xc) != 4)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n            else if (data_type == 2)\n            {\n                while ((DAT_08006404[2] & 0xc) != 8)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n            else\n            {\n                while ((DAT_08006404[2] & 0xc) != 0)\n                {\n                    uint32_t current_time = get_timeout();\n                    if (max_timeout <= current_time)\n                    {\n                        return 3;\n                    }\n                }\n            }\n        }\n        *DAT_08006400 = (uint8_t)size;\n        if (size != (*DAT_08006400 & 0xf))\n        {\n            return 1;\n        }\n    }\n    if ((data[0] & 2) != 0)\n    {\n        DAT_08006404[2] = data[2] | (DAT_08006404[2] & 0xffffff0f);\n    }\n    if ((data[0] & 4) != 0)\n    {\n        DAT_08006404[2] = data[3] | (DAT_08006404[2] & 0xffffe3ff);\n    }\n    if ((data[0] & 8) != 0)\n    {\n        DAT_08006404[2] = (data[4] << 3) | (DAT_08006404[2] & 0xffff1fff);\n    }\n    uint32_t result = multiply(DAT_08006408, get_timeout());\n    uint32_t high_bits = (uint32_t)(result >> 38);\n    uint32_t mid_bits = (uint32_t)(result >> 8);\n    uint32_t low_bits = (uint32_t)(result << 22) >> 22;\n    set_timer(high_bits, mid_bits, low_bits);\n    return 0;\n}",
            "called": [
                "FUN_08005c30",
                "FUN_08006628",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800618c",
            "calling": [
                "FUN_08007436"
            ],
            "imported": false,
            "current_name": "set_data_0800618c"
        },
        "FUN_08006998": {
            "renaming": {
                "FUN_08006998": "get_data_bits_08006998",
                "DAT_080069b0": "DAT_offset",
                "uint": "unsigned int",
                "data": "data_value",
                "shifted_data": "shifted_data_value",
                "masked_data": "masked_data_value"
            },
            "code": "uint get_data_bits_08006998(void)\n{\n    uint data = *(uint *)(DAT_080069b0 + 0xc);\n    uint shifted_data = data >> 8;\n    uint masked_data = shifted_data & 7;\n    return masked_data;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006998",
            "calling": [
                "FUN_08006cf6",
                "FUN_08006d8a"
            ],
            "imported": false,
            "current_name": "get_data_bits_08006998"
        },
        "FUN_080004ac": {
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "PTR_DAT_080004f0": "PTR_DATA",
                "PTR_DAT_080004f4": "PTR_DATA_1",
                "PTR_DAT_080004f8": "PTR_DATA_2",
                "initialize_memory": "initialize_memory",
                "set_flags": "set_flags",
                "check_data": "check_data",
                "print_error": "print_error"
            },
            "code": "void initialize_data_080004ac(void)\n{\n  int result;\n  initialize_memory(PTR_DAT_080004f0, 0, 0x38);\n  PTR_DAT_080004f0[2] = PTR_DAT_080004f0[1] + 0x10;\n  set_flags(0, 1, 2);\n  PTR_DAT_080004f0[4] = 1;\n  result = check_data(PTR_DAT_080004f0[0x1c], PTR_DAT_080004f0[8]);\n  if (result == 0) {\n    print_error(10);\n  }\n  return;\n}",
            "called": [
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_0800b430",
                "FUN_08004030"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080004ac",
            "calling": [
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "initialize_data_080004ac"
        },
        "FUN_080078f4": {
            "renaming": {
                "FUN_080078f4": "calculate_sum_of_four_values_080078f4",
                "local_10": "index",
                "local_c": "sum"
            },
            "code": "uint calculate_sum_of_four_values_080078f4(void)\n{\n  int index;\n  uint sum = 0;\n  for (index = 0; index < 4; index++) {\n    sum = *(uint *)(PTR_DAT_0800792c + index * 4) | sum;\n  }\n  return sum;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080078f4",
            "calling": [
                "FUN_08001994",
                "FUN_08007930"
            ],
            "imported": false,
            "current_name": "calculate_sum_of_four_values_080078f4"
        },
        "FUN_080041a0": {
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "message_id",
                "PTR_DAT_0800420c": "title",
                "PTR_s_Reset_to_continue_08004210": "reset_message",
                "PTR_s___H____X__to_unlock_08004214": "unlock_message",
                "PTR_s_Caution__Unlocked_08004218": "caution_message",
                "PTR_s_Enabled_0800421c": "enabled_message",
                "PTR_s_Disabled_08004220": "disabled_message",
                "PTR_DAT_08004224": "footer"
            },
            "code": "void display_message_080041a0(int message_id)\n{\n    display_PTR_DAT_0800420c();\n    switch(message_id)\n    {\n        case 1:\n            display_text(\"Reset to continue\");\n            break;\n        case 2:\n            display_text(\"Press H+X to unlock\");\n            break;\n        case 3:\n            display_text(\"Caution: Unlocked\");\n            break;\n        case 4:\n            display_text(\"Enabled\");\n            break;\n        case 5:\n            display_text(\"Disabled\");\n            break;\n    }\n    display_PTR_DAT_08004224();\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080041a0",
            "calling": [
                "FUN_08001ddc",
                "FUN_08003b98",
                "FUN_08003a74"
            ],
            "imported": false,
            "current_name": "display_message_080041a0"
        },
        "FUN_08008bf0": {
            "renaming": {
                "FUN_08008bf0": "convert_float_to_fixed_point_08008bf0",
                "param_1": "float_num",
                "param_2": "float_bits",
                "iVar1": "fixed_num",
                "uVar2": "shift_amt"
            },
            "code": "uint convert_float_to_fixed_point_08008bf0(uint float_num, uint float_bits) {\n    int fixed_num;\n    uint shift_amt;\n    \n    if ((float_bits & 0x80000000) != 0) {\n        return 0;\n    }\n    fixed_num = float_bits * 2 + 0x200000;\n    if (float_bits * 2 < 0xffe00000) {\n        if (-1 < fixed_num) {\n            return 0;\n        }\n        shift_amt = -(fixed_num >> 0x15) - 0x3e1;\n        if (-1 < (int)shift_amt) {\n            return (float_bits << 0xb | 0x80000000 | float_num >> 0x15) >> (shift_amt & 0xff);\n        }\n    }\n    else if ((float_num | float_bits << 0xc) != 0) {\n        return 0;\n    }\n    return 0xffffffff;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008bf0",
            "calling": [
                "FUN_08001994",
                "FUN_080005b4",
                "FUN_08003004",
                "FUN_08004e30",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08002c18"
            ],
            "imported": false,
            "current_name": "convert_float_to_fixed_point_08008bf0"
        },
        "FUN_08003a18": {
            "renaming": {
                "FUN_08003a18": "set_flags_08003a18",
                "param_1": "flag_byte"
            },
            "code": "void set_flags_08003a18(uint8_t flag_byte) {\n    if (!(flag_byte & 0x80)) {\n        if (!(flag_byte & 0x40)) {\n            if (flag_byte & 0x20) {\n                PTR_DAT_08003a70[2] |= 2;\n            }\n        }\n        else {\n            PTR_DAT_08003a70[2] |= 8;\n        }\n    }\n    else {\n        FUN_080025e8();\n    }\n    return;\n}",
            "called": [
                "FUN_080025e8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003a18",
            "calling": [
                "FUN_080074c8"
            ],
            "imported": false,
            "current_name": "set_flags_08003a18"
        },
        "FUN_08005790": {
            "renaming": {
                "FUN_08005790": "do_nothing_and_check_if_third_byte_is_3_08005790",
                "PTR_DAT_080057d4": "PTR_DATA_ARRAY",
                "PTR_DAT_080057d8": "PTR_DATA_ARRAY_ONE",
                "PTR_DAT_080057dc": "PTR_DATA_ARRAY_TWO",
                "PTR_DAT_080057e0": "PTR_DATA_ARRAY_THREE",
                "FUN_08007c40": "call_function_with_hex_parameter",
                "FUN_08007c5e": "call_function_with_byte_parameter",
                "FUN_08007b70": "another_function_call"
            },
            "code": "void do_nothing_and_check_if_third_byte_is_3_08005790()\n{\n  do_nothing();\n  if (PTR_DAT_080057d4[1] == '\\x03') {\n    *(undefined2 *)PTR_DAT_080057dc = *(undefined2 *)(PTR_DAT_080057d8 + 0x18);\n    *(undefined2 *)PTR_DAT_080057e0 = *(undefined2 *)(PTR_DAT_080057d8 + 0x1a);\n    call_function_with_hex_parameter(0x69);\n    call_function_with_byte_parameter(((byte)PTR_DAT_080057d8[0xd] + 5) * 0x15);\n    another_function_call();\n  }\n  return;\n}",
            "called": [
                "FUN_08007b70",
                "FUN_08007c5e",
                "FUN_08005318",
                "FUN_08007c40"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005790",
            "calling": [
                "FUN_08001d4c",
                "FUN_0800583c",
                "FUN_0800585c"
            ],
            "imported": false,
            "current_name": "do_nothing_and_check_if_third_byte_is_3_08005790"
        },
        "FUN_08001994": {
            "renaming": {
                "FUN_08001994": "FUNC_08001994"
            },
            "code": "\nvoid FUNC_08001994(byte param_1,char param_2,char param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  byte local_61;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  ushort local_4e;\n  uint local_4c;\n  int local_48;\n  undefined4 local_44;\n  uint local_40;\n  uint local_3c;\n  ushort local_36;\n  uint local_34;\n  uint local_30;\n  int local_2c;\n  int local_28;\n  int local_24;\n  int local_20;\n  ushort local_1a;\n  uint local_18;\n  char local_11;\n  \n  local_11 = '\\0';\n  FUN_0800b430(&local_5c,0,0xc);\n  if ((param_1 & 1) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)PTR_DAT_08001c90);\n    local_5c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 2) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 4));\n    local_58 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  if ((param_1 & 4) != 0) {\n    local_11 = local_11 + '\\x01';\n    uVar3 = FUN_08008590(*(undefined4 *)(PTR_DAT_08001c90 + 8));\n    local_54 = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  }\n  uVar2 = local_54;\n  if (local_54 < local_58) {\n    uVar2 = local_58;\n  }\n  local_40 = local_5c;\n  if (local_5c < uVar2) {\n    local_40 = uVar2;\n  }\n  uVar3 = FUN_0800854c(local_40);\n  uVar4 = FUN_0800854c(local_11);\n  uVar4 = FUNC_080098d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n  uVar3 = FUNC_08008894((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  local_44 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(*(undefined4 *)(PTR_DAT_08001c90 + 0x20),local_44);\n  uVar1 = FUNC_08009054(uVar1,DAT_08001c94);\n  uVar3 = FUN_08008590(uVar1);\n  uVar3 = FUN_08009318((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_48 = FUN_08008bf0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar3 = FUN_0800854c(local_11);\n  uVar3 = FUNC_080098d0((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar4 = FUN_08008590(param_4);\n  uVar3 = FUNC_08008640((int)uVar3,(int)((ulonglong)uVar3 >> 0x20),(int)uVar4,\n                       (int)((ulonglong)uVar4 >> 0x20));\n  uVar1 = FUN_08008c30((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  uVar1 = FUNC_08008eec(local_44,uVar1);\n  uVar1 = FUNC_08009054(DAT_08001c98,uVar1);\n  uVar3 = FUN_08008590(uVar1);\n  local_4c = FUN_080095b8((int)uVar3,(int)((ulonglong)uVar3 >> 0x20));\n  local_18 = DAT_08001c9c;\n  if (local_4c < DAT_08001c9c) {\n    local_18 = local_4c;\n  }\n  local_4e = *(ushort *)(PTR_DAT_08001c90 + 0x18);\n  local_1a = *(ushort *)(PTR_DAT_08001c90 + 0x1a) ^ *(ushort *)(PTR_DAT_08001c90 + 0x2a) & 0xaa0;\n  if (param_2 == '\\0') {\n    local_1a = local_1a ^ 0xaa0;\n  }\n  FUN_080018fc(local_1a);\n  FUN_080018cc(local_4e);\n  local_28 = -(local_40 >> 1);\n  local_2c = local_18 - (byte)PTR_DAT_08001c90[0xd];\n  local_30 = 0;\n  local_34 = 10000;\n  local_61 = param_1;\n  local_24 = local_28;\n  local_20 = local_28;\n  while( true ) {\n    local_36 = local_4e;\n    local_3c = FUN_080078f4();\n    if (param_3 == '\\0') {\n      local_3c = local_3c ^ 0x1e;\n    }\n    if (((local_61 & 1) != 0) && (local_20 = local_20 + local_5c, 0 < local_20)) {\n      if ((local_3c & 0x10) == 0) {\n        local_61 = local_61 & 0xfe;\n      }\n      else {\n        local_36 = local_36 ^ 0x10;\n      }\n      local_20 = local_20 - local_40;\n    }\n    if (((local_61 & 2) != 0) && (local_24 = local_24 + local_58, 0 < local_24)) {\n      if ((local_3c & 8) == 0) {\n        local_61 = local_61 & 0xfd;\n      }\n      else {\n        local_36 = local_36 ^ 0x440;\n      }\n      local_24 = local_24 - local_40;\n    }\n    if (((local_61 & 4) != 0) && (local_28 = local_28 + local_54, 0 < local_28)) {\n      if ((local_3c & 4) == 0) {\n        local_61 = local_61 & 0xfb;\n      }\n      else {\n        local_36 = local_36 ^ 0x100;\n      }\n      local_28 = local_28 - local_40;\n    }\n    if ((local_61 == 0) || ((PTR_DAT_08001d40[2] & 0x10) != 0)) break;\n    FUN_080018cc(local_36);\n    do_nothing_08002828(PTR_DAT_08001d44[0xd]);\n    FUN_080018cc(local_4e);\n    do_nothing_08002828(local_2c);\n    if ((local_4c < local_18) && (local_34 = local_18 + local_34, 20000 < local_34)) {\n      local_34 = local_34 - 20000;\n      local_30 = local_48 + local_30;\n      local_18 = DAT_08001d48 / local_30;\n      if (local_18 < local_4c) {\n        local_18 = local_4c;\n      }\n      local_2c = local_18 - (byte)PTR_DAT_08001d44[0xd];\n    }\n  }\n  return;\n}\n\n",
            "called": [
                "FUN_08009318",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008640",
                "FUN_080078f4",
                "FUN_08008bf0",
                "FUN_0800b430",
                "FUN_080018fc",
                "FUN_08008c30",
                "FUN_080018cc",
                "FUN_08002828",
                "FUN_08009054",
                "FUN_08008894",
                "FUN_080095b8",
                "FUN_0800854c",
                "FUN_08008eec"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08001994",
            "calling": [
                "FUN_08001d4c"
            ],
            "imported": false,
            "current_name": "FUNC_08001994"
        },
        "FUN_08007854": {
            "renaming": {
                "FUN_08007854": "get_bit_at_index_08007854",
                "param_1": "input",
                "*PTR_": "ptr",
                "DAT_": "base_address",
                ">> 4": "shift_right_4_bits",
                "0x400": "base_address_increment",
                "0x40020010": "base_address_start",
                "& 0xf": "bitwise_and_with_15"
            },
            "code": "uint get_bit_at_index_08007854(uint input)\n{\n    uint index = input & 0xf;\n    uint DAT_ = ((int)input >> 4) * 0x400 + 0x40020010;\n    uint* *PTR_ = (uint*)DAT_;\n    uint value = **PTR_ >> index & 1;\n    return value;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007854",
            "calling": [
                "FUN_08007884"
            ],
            "imported": false,
            "current_name": "get_bit_at_index_08007854"
        },
        "FUN_08004900": {
            "renaming": {
                "FUN_08004900": "initialize_data_08004900",
                "param_1": "data",
                "param_2": "size",
                "FUN_080036c6": "load_data_start",
                "PTR_DAT_08004934": "DATA_START",
                "FUN_080037fc": "setup_data",
                "FUN_0800369c": "initialize_size",
                "PTR_DAT_08004938": "DATA_MIDDLE",
                "PTR_DAT_0800493c": "DATA_END"
            },
            "code": "void initialize_data_08004900(undefined data, undefined4 size) {\n  load_data_start(PTR_DAT_08004934);\n  setup_data(data);\n  load_data_end(PTR_DAT_08004938);\n  initialize_size(size);\n  load_data_end(PTR_DAT_0800493c);\n  return;\n}",
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004900",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "initialize_data_08004900"
        },
        "FUN_08005318": {
            "renaming": {
                "FUN_08005318": "do_nothing_08005318"
            },
            "code": "\nvoid do_nothing_08005318(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005318",
            "calling": [
                "FUN_08005790"
            ],
            "imported": false,
            "current_name": "do_nothing_08005318"
        },
        "FUN_08004228": {
            "renaming": {
                "FUN_08004228": "print_help_message_08004228",
                "FUN_080036c6": "print_string",
                "PTR_s__Grbl_0_8c______for_help__08004238": "s__help_message"
            },
            "code": "void print_help_message_08004228(void)\n{\n  print_string(s__Grbl_0_8c______for_help__08004238);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004228",
            "calling": [
                "FUN_080039a0"
            ],
            "imported": false,
            "current_name": "print_help_message_08004228"
        },
        "FUN_08009b24": {
            "renaming": {
                "FUN_08009b24": "FUNC_08009b24"
            },
            "code": "\nuint FUNC_08009b24(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  undefined4 uVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined8 uVar13;\n  int local_3c;\n  \n  uVar1 = DAT_08009d70;\n  param_2 = param_2 & 0x7fffffff;\n  param_4 = param_4 & 0x7fffffff;\n  uVar3 = param_1;\n  uVar7 = param_2;\n  if (param_2 < param_4) {\n    uVar3 = param_3;\n    param_3 = param_1;\n    uVar7 = param_4;\n    param_4 = param_2;\n  }\n  if (0x3c00000 < (int)(uVar7 - param_4)) {\n    uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n    return uVar3;\n  }\n  if (DAT_08009d68 < (int)uVar7) {\n    if (DAT_08009d74 < (int)uVar7) {\n      if ((uVar7 & 0xfffff | uVar3) != 0) {\n        uVar3 = FUNC_080082d4(uVar3,uVar7,param_3,param_4);\n      }\n      if ((param_4 ^ 0x7ff00000 | param_3) != 0) {\n        return uVar3;\n      }\n      return param_3;\n    }\n    uVar7 = uVar7 + 0xda800000;\n    param_4 = param_4 + 0xda800000;\n    local_3c = 600;\n  }\n  else {\n    local_3c = 0;\n  }\n  uVar11 = CONCAT44(uVar7,uVar3);\n  uVar10 = CONCAT44(param_4,param_3);\n  if ((int)param_4 <= DAT_08009d6c) {\n    if ((int)param_4 < 0x100000) {\n      if ((param_4 | param_3) == 0) {\n        return uVar3;\n      }\n      uVar10 = FUNC_08008640(param_3,param_4,0,DAT_08009d70);\n      uVar11 = FUNC_08008640(uVar3,uVar7,0,uVar1);\n      local_3c = local_3c + -0x3fe;\n    }\n    else {\n      uVar7 = uVar7 + 0x25800000;\n      uVar11 = CONCAT44(uVar7,uVar3);\n      param_4 = param_4 + 0x25800000;\n      uVar10 = CONCAT44(param_4,param_3);\n      local_3c = local_3c + -600;\n    }\n  }\n  uVar9 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar8 = (undefined4)uVar11;\n  iVar6 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar5 = (undefined4)uVar10;\n  uVar10 = FUNC_080082d0(uVar8,uVar9,uVar5,iVar6);\n  iVar4 = (int)((ulonglong)uVar10 >> 0x20);\n  uVar1 = (undefined4)uVar10;\n  iVar2 = FUN_08008b24(uVar5,iVar6,uVar1,iVar4);\n  if (iVar2 == 0) {\n    uVar10 = FUNC_08008640(0,param_4,0);\n    uVar11 = FUNC_08008640(uVar1,iVar4 + -0x80000000,uVar1,iVar4);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,uVar8,uVar9);\n    uVar12 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),uVar5,iVar6);\n    uVar13 = FUNC_080082d0(uVar5,iVar6,0,param_4);\n    uVar13 = FUNC_08008640((int)uVar13,(int)((ulonglong)uVar13 >> 0x20),0,uVar7 + 0x100000);\n    uVar12 = FUNC_080082d4((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  else {\n    uVar10 = FUNC_08008640(0,uVar7,0,uVar7);\n    uVar11 = FUNC_08008640(uVar5,iVar6 + -0x80000000,uVar5,iVar6);\n    uVar12 = FUNC_080082d4(uVar8,uVar9,0,uVar7);\n    uVar13 = FUNC_080082d0(uVar8,uVar9,0,uVar7);\n    uVar12 = FUNC_08008640((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar13,\n                          (int)((ulonglong)uVar13 >> 0x20));\n    uVar11 = FUNC_080082d0((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),(int)uVar12,\n                          (int)((ulonglong)uVar12 >> 0x20));\n    FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                 (int)((ulonglong)uVar11 >> 0x20));\n    uVar10 = FUN_0800a1bc();\n  }\n  uVar3 = (uint)uVar10;\n  if (local_3c != 0) {\n    uVar3 = FUNC_08008640(uVar3,(int)((ulonglong)uVar10 >> 0x20),0,local_3c * 0x100000 + 0x3ff00000);\n  }\n  return uVar3;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_080082d4",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_08008b24"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009b24",
            "calling": [
                "FUN_0800981c"
            ],
            "imported": false,
            "current_name": "FUNC_08009b24"
        },
        "FUN_080076c8": {
            "renaming": {
                "FUN_080076c8": "set_bit_080076c8",
                "param_1": "bit_position",
                "PTR_": "bit_array",
                "DAT_": "bit_index"
            },
            "code": "void set_bit_080076c8(uint bit_position)\n{\n    uint* PTR_ = (uint*)((int)bit_position >> 4) * 0x400 + 0x40020014;\n    uint DAT_ = bit_position & 0xf;\n    *PTR_ = (*PTR_) ^ (1 << DAT_);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080076c8",
            "calling": [
                "FUN_08007756"
            ],
            "imported": false,
            "current_name": "set_bit_080076c8"
        },
        "FUN_0800530c": {
            "renaming": {
                "FUN_0800530c": "do_nothing_0800530c"
            },
            "code": "\nvoid do_nothing_0800530c(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800530c",
            "calling": [
                "FUN_080057e4"
            ],
            "imported": false,
            "current_name": "do_nothing_0800530c"
        },
        "FUN_08006a8c": {
            "renaming": {
                "FUN_08006a8c": "set_bit_in_array_at_index_08006a8c",
                "param_1": "index_to_set",
                "DAT_08006abc": "array_ptr"
            },
            "code": "void set_bit_in_array_at_index_08006a8c(byte index_to_set){\n    int* DAT_08006abc = DAT_08006abc;\n    int array_index = ((uint)(int)(char)index_to_set >> 5) + 0x60;\n    int bit_index = index_to_set & 0x1f;\n    int bit_value = 1 << bit_index;\n    *(DAT_08006abc + (array_index * 4)) = bit_value;\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006a8c",
            "calling": [
                "FUN_08006dfe"
            ],
            "imported": false,
            "current_name": "set_bit_in_array_at_index_08006a8c"
        },
        "FUN_0800283a": {
            "renaming": {
                "FUN_0800283a": "execute_functions_0800283a",
                "FUN_080035ec": "execute_function1",
                "FUN_080004fc": "execute_function2",
                "PTR_DAT_08002868": "data_pointer"
            },
            "code": "void execute_functions_0800283a(void)\n{\n  int arg1 = *(int *)(PTR_DAT_08002868 + 4);\n  int arg2 = *(int *)(PTR_DAT_08002868 + 8);\n  int arg3 = *(int *)(PTR_DAT_08002868 + 0xc);\n  execute_function1(arg1, arg2, arg3);\n  execute_function2(arg1, arg2, arg3);\n  return;\n}",
            "called": [
                "FUN_080004fc",
                "FUN_080035ec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800283a",
            "calling": [
                "FUN_080024c4",
                "FUN_08001ddc"
            ],
            "imported": false,
            "current_name": "execute_functions_0800283a"
        },
        "FUN_0800881c": {
            "renaming": {
                "FUN_0800881c": "calculate_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp2",
                "unaff_r4": "temp4",
                "uVar2": "temp1",
                "uVar3": "temp3",
                "in_r12": "mask",
                "bVar4": "is_input_1_and_input_2_zero"
            },
            "code": "ulonglong calculate_result_0800881c(uint input_1, uint input_2, uint input_3, uint input_4)\n{\n  uint temp1, temp2, temp3, temp4;\n  bool is_input_1_and_input_2_zero, is_input_3_and_input_4_zero;\n  uint mask = 0x80000000;\n  uint shift = 0x14;\n  uint bit_mask = 0x100000;\n  uint sign_bit_mask = 0x80000000;\n  uint exponent_bit_mask = 0x7ff00000;\n  uint nan_bit_mask = 0x7ff8000000000000;\n  temp1 = input_4 >> shift;\n  if (input_2 != input_4 && temp1 != input_4) {\n    is_input_1_and_input_2_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_input_1_and_input_2_zero) {\n      is_input_1_and_input_2_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_input_1_and_input_2_zero) {\n      return (ulonglong)((input_2 ^ input_4) & mask) << 0x20;\n    }\n    if (input_2 == 0) {\n      temp3 = input_2 & mask;\n      do {\n        temp2 = input_1 & mask;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp2 != 0);\n      } while ((input_2 & bit_mask) == 0);\n      input_2 = input_2 | temp3;\n      if (temp1 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp1 = input_3 & mask;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp1 != 0);\n    } while ((input_4 & bit_mask) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_input_1_and_input_2_zero = (input_1 | input_2 << 1) == 0;\n  if (is_input_1_and_input_2_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_input_1_and_input_2_zero) {\n    is_input_3_and_input_4_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp3 = input_2;\n  if (((!is_input_3_and_input_4_zero) && ((input_2 != input_4 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp1 != input_4 || (input_1 = input_3, temp3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & mask | exponent_bit_mask) << 0x20;\n  }\n  return CONCAT44(temp3,input_1) | nan_bit_mask;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800881c",
            "calling": [
                "FUN_08008640"
            ],
            "imported": false,
            "current_name": "calculate_result_0800881c"
        },
        "FUN_08004bc0": {
            "renaming": {
                "FUN_08004bc0": "convert_byte_to_ushort_and_add_offset_08004bc0",
                "param_1": "input_byte",
                "param_2": "input_undefined4"
            },
            "code": "void convert_byte_to_ushort_and_add_offset_08004bc0(byte input_byte, undefined4 input_undefined4){\n  ushort converted_ushort = (ushort)input_byte * 0x101 + 0x300;\n  FUN_08000374(converted_ushort, input_undefined4, 0x100);\n  return;\n}",
            "called": [
                "FUN_08000374"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004bc0",
            "calling": [
                "FUN_08004d2c",
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "convert_byte_to_ushort_and_add_offset_08004bc0"
        },
        "FUN_08008b4c": {
            "renaming": {
                "FUN_08008b4c": "check_CY_or_ZR_08008b4c",
                "in_ZR": "zero",
                "in_CY": "carry",
                "FUN_08008af0": "execute_some_function"
            },
            "code": "bool check_CY_or_ZR_08008b4c(void)\n{\n  undefined zero = 0;\n  undefined carry = 0;\n  \n  execute_some_function();\n  return (bool)zero || !(bool)carry;\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b4c",
            "calling": [
                "FUN_0800a5a0"
            ],
            "imported": false,
            "current_name": "check_CY_or_ZR_08008b4c"
        },
        "FUN_08004c2a": {
            "renaming": {
                "FUN_08004c2a": "print_five_and_initialize_buffer_08004c2a",
                "FUN_08000340": "print_number",
                "FUN_08000374": "initialize_buffer",
                "PTR_DAT_08004c44": "buffer_data"
            },
            "code": "void print_five_and_initialize_buffer_08004c2a(void)\n{\n  print_number(0,5);\n  initialize_buffer(1,PTR_DAT_08004c44,0x40);\n  return;\n}",
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c2a",
            "calling": [
                "FUN_08004c48",
                "FUN_08004e30"
            ],
            "imported": false,
            "current_name": "print_five_and_initialize_buffer_08004c2a"
        },
        "FUN_0800826a": {
            "renaming": {
                "FUN_0800826a": "initialize_data_0800826a",
                "param_1": "data",
                "FUN_08007e1c": "initialize_database"
            },
            "code": "int initialize_data_0800826a(undefined data){\n  initialize_data_0800826abase(data);\n  return 0;\n}",
            "called": [
                "FUN_08007e1c"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800826a",
            "calling": [],
            "imported": false,
            "current_name": "initialize_data_0800826a"
        },
        "FUN_08008b60": {
            "renaming": {
                "FUN_08008b60": "is_end_of_input_08008b60",
                "in_CY": "current_char",
                "FUN_08008af0": "read_next_char"
            },
            "code": "bool is_end_of_input_08008b60(void)\n{\n  char current_char;\n  read_next_char();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_08008af0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b60",
            "calling": [
                "FUN_08009318",
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_0800af78"
            ],
            "imported": false,
            "current_name": "is_end_of_input_08008b60"
        },
        "FUN_08005324": {
            "renaming": {
                "FUN_08005324": "calculate_local_value_08005324",
                "param_1": "input_value",
                "local_14": "local_value"
            },
            "code": "void calculate_local_value_08005324(uint input_value)\n{\n  uint local_value;\n  if (input_value < 800) {\n    local_value = 800;\n  }\n  else {\n    local_value = input_value;\n  }\n  uint calculated_value = DAT_08005358 / local_value;\n  *(uint *)(PTR_DAT_0800535c + 0x14) = calculated_value;\n  FUN_08007bf0(calculated_value);\n  return;\n}",
            "called": [
                "FUN_08007bf0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005324",
            "calling": [
                "FUN_080058a0",
                "FUN_080053a0",
                "FUN_08005814"
            ],
            "imported": false,
            "current_name": "calculate_local_value_08005324"
        },
        "FUN_08000310": {
            "renaming": {
                "FUN_08000310": "get_value_from_array_08000310",
                "param_1": "index",
                "PTR_DAT_08000338": "ptr",
                "FUN_080002f0": "initialize_array",
                "PTR_DAT_0800033c": "array"
            },
            "code": "int get_value_from_array_08000310(uint index) {\n  int* PTR_DAT_08000338 = (int*)PTR_DAT_08000338;\n  if (*PTR_DAT_08000338 == 0) {\n    initialize_PTR_DAT_0800033c();\n  }\n  int* PTR_DAT_0800033c = PTR_DAT_0800033c;\n  int masked_index = index & 0x3ff;\n  return PTR_DAT_0800033c[masked_index];\n}",
            "called": [
                "FUN_080002f0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08000310",
            "calling": [
                "FUN_080003ec",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "get_value_from_array_08000310"
        },
        "FUN_08005208": {
            "renaming": {
                "FUN_08005208": "do_nothing_08005208"
            },
            "code": "\nvoid do_nothing_08005208(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005208",
            "calling": [
                "FUN_0800525c"
            ],
            "imported": false,
            "current_name": "do_nothing_08005208"
        },
        "FUN_08007a70": {
            "renaming": {
                "FUN_08007a70": "process_data_08007a70",
                "param_1": "data",
                "local_c": "local_variable",
                "DAT_08007ac8": "data_pointer_1",
                "DAT_08007acc": "data_pointer_2",
                "FUN_08006cf6": "call_function_1",
                "FUN_080079e0": "call_function_2"
            },
            "code": "void process_data_08007a70(int data, undefined4 param_2, undefined4 param_3)\n{\n  undefined local_variable;\n  if (data == 0x40000000) {\n    local_variable = 0x1c;\n  }\n  else if (data == DAT_08007ac8) {\n    local_variable = 0x1d;\n  }\n  else {\n    if (data != DAT_08007acc) {\n      return;\n    }\n    local_variable = 0x1e;\n  }\n  call_function_1(local_variable, param_2, param_3);\n  call_function_2(local_variable);\n  return;\n}",
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007a70",
            "calling": [
                "FUN_08007ad0"
            ],
            "imported": false,
            "current_name": "process_data_08007a70"
        },
        "FUN_0800b5b0": {
            "renaming": {
                "FUN_0800b5b0": "do_nothing_0800b5b0"
            },
            "code": "\nvoid do_nothing_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5b0",
            "calling": [
                "FUN_080001ac",
                "FUN_0800b3e8",
                "FUN_08000188"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b5b0"
        },
        "FUN_08002978": {
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "first_param",
                "param_2": "second_param",
                "param_3": "third_param",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3"
            },
            "code": "undefined4 calculate_result_08002978(undefined4 first_param, undefined4 second_param, undefined4 third_param) {\n    undefined4 result_1 = FUNC_08008eec(second_param, second_param);\n    undefined4 result_2 = FUNC_08008cdc(first_param, first_param);\n    result_2 = FUNC_08008eec(result_2, third_param);\n    result_1 = FUNC_08008cd8(result_1, result_2);\n    undefined8 result_3 = FUN_08008590(result_1);\n    result_3 = FUNC_080098d0((int)result_3, (int)((ulonglong)result_3 >> 0x20));\n    undefined4 result_4 = FUN_08008c30((int)result_3, (int)((ulonglong)result_3 >> 0x20));\n    return result_4;\n}",
            "called": [
                "FUN_080098d0",
                "FUN_08008590",
                "FUN_08008c30",
                "FUN_08008cd8",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002978",
            "calling": [
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "calculate_result_08002978"
        },
        "FUN_08009d78": {
            "renaming": {
                "FUN_08009d78": "FUNC_08009d78"
            },
            "code": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nint FUNC_08009d78(undefined4 param_1,uint param_2,undefined8 *param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  \n  uVar8 = param_2 & 0x7fffffff;\n  if ((int)uVar8 <= DAT_08009fb0) {\n    *(undefined4 *)param_3 = param_1;\n    *(uint *)((int)param_3 + 4) = param_2;\n    *(undefined4 *)(param_3 + 1) = 0;\n    *(undefined4 *)((int)param_3 + 0xc) = 0;\n    return 0;\n  }\n  if ((int)uVar8 <= DAT_08009fb4) {\n    if ((int)param_2 < 1) {\n      uVar10 = FUNC_080082d4(param_1,param_2,DAT_08009f88,DAT_08009f8c);\n      uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar1 = (undefined4)uVar10;\n      if (uVar8 != DAT_0800a1b8) {\n        uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a1b0,DAT_0800a1b4);\n        *param_3 = uVar10;\n        uVar10 = FUNC_080082d0(uVar1,uVar3);\n        uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a1b0,DAT_0800a1b4\n                             );\n        param_3[1] = uVar10;\n        return -1;\n      }\n      uVar10 = FUNC_080082d4(uVar1,uVar3,DAT_0800a190,DAT_0800a194);\n      uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n      uVar11 = FUNC_080082d4((int)uVar10,uVar1,DAT_0800a198,DAT_0800a19c);\n      *param_3 = uVar11;\n      uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n      uVar10 = FUNC_080082d4((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_0800a198,DAT_0800a19c);\n      param_3[1] = uVar10;\n      return -1;\n    }\n    uVar10 = FUNC_080082d0();\n    uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar1 = (undefined4)uVar10;\n    if (uVar8 != DAT_08009fb8) {\n      uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f90,DAT_08009f94);\n      *param_3 = uVar10;\n      uVar10 = FUNC_080082d0(uVar1,uVar3);\n      uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009f90,DAT_08009f94);\n      param_3[1] = uVar10;\n      return 1;\n    }\n    uVar10 = FUNC_080082d0(uVar1,uVar3,DAT_08009f98,DAT_08009f9c);\n    uVar1 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar11 = FUNC_080082d0((int)uVar10,uVar1,DAT_08009fa0,DAT_08009fa4);\n    *param_3 = uVar11;\n    uVar10 = FUNC_080082d0((int)uVar10,uVar1);\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),DAT_08009fa0,DAT_08009fa4);\n    param_3[1] = uVar10;\n    return 1;\n  }\n  if (DAT_08009fbc < (int)uVar8) {\n    if (DAT_08009fc0 < (int)uVar8) {\n      uVar10 = FUNC_080082d0(param_1,param_2,param_1,param_2);\n      param_3[1] = uVar10;\n      *param_3 = uVar10;\n      return 0;\n    }\n    iVar9 = ((int)uVar8 >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_40 = FUN_0800856c();\n    uVar10 = FUNC_080082d0(param_1,uVar8 + iVar9 * -0x100000,(int)local_40,\n                          (int)((ulonglong)local_40 >> 0x20));\n    uVar10 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008ba0();\n    local_38 = FUN_0800856c();\n    uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20));\n    local_30 = FUNC_08008640((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),0,DAT_08009fc4);\n    FUN_08008b10((int)local_30,(int)((ulonglong)local_30 >> 0x20),0,0);\n    iVar9 = FUNC_0800a5a0(&local_40,param_3,iVar9);\n    if (-1 < (int)param_2) {\n      return iVar9;\n    }\n    *(int *)((int)param_3 + 4) = *(int *)((int)param_3 + 4) + -0x80000000;\n    *(int *)((int)param_3 + 0xc) = *(int *)((int)param_3 + 0xc) + -0x80000000;\n    return -iVar9;\n  }\n  uVar10 = do_nothing_0800b2cc();\n  uVar3 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar11 = FUNC_08008640((int)uVar10,uVar3,DAT_08009fa8,DAT_08009fac);\n  FUNC_080082d4((int)uVar11,(int)((ulonglong)uVar11 >> 0x20),0,DAT_08009fcc);\n  iVar9 = FUN_08008ba0();\n  uVar11 = FUN_0800856c();\n  uVar4 = (undefined4)((ulonglong)uVar11 >> 0x20);\n  uVar1 = (undefined4)uVar11;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f88,DAT_08009f8c);\n  uVar10 = FUNC_080082d0((int)uVar10,uVar3,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n  uVar5 = (undefined4)((ulonglong)uVar10 >> 0x20);\n  uVar3 = (undefined4)uVar10;\n  uVar11 = FUNC_08008640(uVar1,uVar4,DAT_08009f90,DAT_08009f94);\n  if ((0x1f < iVar9) || (*(uint *)(PTR_DAT_08009fd0 + (iVar9 + -1) * 4) == uVar8)) {\n    uVar12 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)((uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a190,DAT_0800a194);\n    uVar6 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar3,uVar5,(int)uVar11,uVar6);\n    uVar7 = (undefined4)((ulonglong)uVar10 >> 0x20);\n    uVar2 = (undefined4)uVar10;\n    uVar12 = FUNC_080082d0(uVar3,uVar5,uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar6);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a198,DAT_0800a19c);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n    uVar12 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,(int)((ulonglong)uVar11 >> 0x20));\n    if ((int)(((int)uVar8 >> 0x14) - ((uint)((int)((ulonglong)uVar12 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    uVar11 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a0,DAT_0800a1a4);\n    uVar3 = (undefined4)((ulonglong)uVar11 >> 0x20);\n    uVar10 = FUNC_080082d0(uVar2,uVar7,(int)uVar11,uVar3);\n    uVar12 = FUNC_080082d0(uVar2,uVar7);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,uVar3);\n    uVar12 = FUNC_08008640(uVar1,uVar4,DAT_0800a1a8,DAT_0800a1ac);\n    uVar11 = FUNC_080082d0((int)uVar12,(int)((ulonglong)uVar12 >> 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 >> 0x20));\n  }\n  uVar12 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\nLAB_0800a0ce:\n  uStack_4c = (undefined4)((ulonglong)uVar10 >> 0x20);\n  local_50 = (undefined4)uVar10;\n  *param_3 = uVar12;\n  uVar10 = FUNC_080082d0(local_50,uStack_4c);\n  uVar10 = FUNC_080082d0((int)uVar10,(int)((ulonglong)uVar10 >> 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 >> 0x20));\n  param_3[1] = uVar10;\n  if ((int)param_2 < 0) {\n    *(int *)param_3 = (int)uVar12;\n    *(int *)((int)param_3 + 4) = (int)((ulonglong)uVar12 >> 0x20) + -0x80000000;\n    *(int *)(param_3 + 1) = (int)uVar10;\n    *(int *)((int)param_3 + 0xc) = (int)((ulonglong)uVar10 >> 0x20) + -0x80000000;\n    iVar9 = -iVar9;\n  }\n  return iVar9;\n}\n\n",
            "called": [
                "FUN_080082d0",
                "FUN_08008b10",
                "FUN_080082d4",
                "FUN_0800856c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_0800a5a0",
                "FUN_0800b2cc"
            ],
            "skipped": true,
            "tags": [],
            "improved": false,
            "entrypoint": "0x08009d78",
            "calling": [
                "FUN_08009410",
                "FUN_080096e8"
            ],
            "imported": false,
            "current_name": "FUNC_08009d78"
        },
        "FUN_08003826": {
            "renaming": {
                "FUN_08003826": "print_float_from_uint_08003826",
                "param_1": "value",
                "iVar1": "sign",
                "local_24": "abs_value",
                "local_9": "i",
                "local_a": "digit",
                "local_10": "integer_part",
                "acStack_1d": "digits",
                "PTR_DAT_08003970": "precision",
                "DAT_08003974": "base",
                "DAT_08003978": "extra_base",
                "DAT_0800397c": "fraction_base"
            },
            "code": "void print_float_from_uint_08003826(uint32_t value)\n{\n  int sign = 0;\n  uint32_t abs_value = value;\n  if (value >> 31) {\n    printf(\"-\");\n    abs_value = ~value + 1;\n  }\n  for (int i = PTR_DAT_08003970[0x3d]; i > 1; i -= 2) {\n    abs_value = multiply_uint32_t(abs_value, DAT_08003974);\n  }\n  if (i != 0) {\n    abs_value = multiply_uint32_t(abs_value, DAT_08003978);\n  }\n  uint32_t fraction = divide_uint32_t(abs_value, 0x3f000000);\n  int32_t integer_part = (int32_t)divide_uint32_t(abs_value, 0x3f000000);\n  if (integer_part == 0) {\n    printf(\"0\");\n  }\n  else {\n    print_int_from_int32_t(integer_part);\n  }\n  printf(\".\");\n  for (int i = 0; i < PTR_DAT_08003970[0x3d]; ++i) {\n    fraction = multiply_uint32_t(fraction, DAT_0800397c);\n    char digit = (char)(fraction >> 31) + '0';\n    fraction &= 0x7fffffff;\n    printf(\"%c\", digit);\n  }\n}\n",
            "called": [
                "FUN_08008250",
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008cdc",
                "FUN_08008eec"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08003826",
            "calling": [
                "FUN_08004250",
                "FUN_080046d0",
                "FUN_08004940",
                "FUN_080044e8"
            ],
            "imported": false,
            "current_name": "print_float_from_uint_08003826"
        },
        "FUN_0800923c": {
            "renaming": {
                "FUN_0800923c": "check_for_carry_or_zero_flag_0800923c",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag",
                "FUN_08009204": "check_carry_and_zero_flags"
            },
            "code": "bool check_for_carry_or_zero_flag_0800923c(void)\n{\n  bool carry_flag = check_carry_flag();\n  bool zero_flag = check_zero_flag();\n  return !carry_flag || zero_flag;\n}",
            "called": [
                "FUN_08009204"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800923c",
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "check_for_carry_or_zero_flag_0800923c"
        },
        "FUN_08002afc": {
            "renaming": {
                "FUN_08002afc": "process_params_08002afc",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "param2",
                "PTR_DAT_08002ba4": "PTR_DAT_08002ba4",
                "DAT_08002ba4": "DAT_08002ba4"
            },
            "code": "void process_params_08002afc(int param1, int param2)\n{\n    int result1;\n    uint32_t xor_val = *(uint32_t*)(PTR_DAT_08002ba4 + 0x20) ^ 0x80000000;\n    if (param1 != 0 && *(char*)(param1 + 0x25) == 0 && (result1 = FUN_08009228(*(uint32_t*)(param1 + 0x18), *(uint32_t*)(param2 + 0x18))) != 0)\n    {\n        uint32_t result2 = FUN_08002978(xor_val, *(uint32_t*)(param1 + 0x18), *(uint32_t*)(param1 + 0x20));\n        if (FUN_08009228(*(uint32_t*)(param2 + 0x18), result2) == 0)\n        {\n            *(uint32_t*)(param2 + 0x18) = result2;\n            *(char*)(param2 + 0x24) = 1;\n        }\n        else\n        {\n            *(uint32_t*)(param2 + 0x18) = *(uint32_t*)(param2 + 0x18);\n        }\n    }\n}\n",
            "called": [
                "FUN_08009214",
                "FUN_08009228",
                "FUN_08002978"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002afc",
            "calling": [
                "FUN_08002ba8"
            ],
            "imported": false,
            "current_name": "process_params_08002afc"
        },
        "FUN_08004c48": {
            "renaming": {
                "FUN_08004c48": "initialize_config_08004c48",
                "param_1": "config_value",
                "PTR_DAT_08004d0c": "config_ptr_1",
                "DAT_08004d10": "initial_config_value_1",
                "DAT_08004d14": "initial_config_value_2",
                "DAT_08004d18": "initial_config_value_3",
                "DAT_08004d1c": "initial_config_value_4",
                "DAT_08004d20": "initial_config_value_5",
                "DAT_08004d24": "initial_config_value_6",
                "DAT_08004d28": "initial_config_value_7"
            },
            "code": "void initialize_config_08004c48(char config_value)\n{\n    if (config_value != '\\0') {\n        // Set initial configuration values\n        *(undefined4 *)PTR_DAT_08004d0c = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 4) = DAT_08004d10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 8) = DAT_08004d10;\n        PTR_DAT_08004d0c[0xd] = 10;\n        *(undefined4 *)(PTR_DAT_08004d0c + 0x10) = DAT_08004d14;\n        *(undefined4 *)(PTR_DAT_08004d0c + 0x14) = DAT_08004d18;\n        *(undefined4 *)(PTR_DAT_08004d0c + 0x20) = DAT_08004d1c;\n        *(undefined4 *)(PTR_DAT_08004d0c + 0x1c) = DAT_08004d20;\n        *(undefined2 *)(PTR_DAT_08004d0c + 0x18) = 0;\n        *(undefined2 *)(PTR_DAT_08004d0c + 0x1a) = 0xa80;\n        *(undefined4 *)(PTR_DAT_08004d0c + 0x24) = DAT_08004d24;\n    }\n    // Set remaining configuration values\n    PTR_DAT_08004d0c[0x28] |= 2;\n    PTR_DAT_08004d0c[0x28] |= 0x10;\n    *(undefined2 *)(PTR_DAT_08004d0c + 0x2a) = 0;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x2c) = DAT_08004d28;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x30) = DAT_08004d14;\n    *(undefined2 *)(PTR_DAT_08004d0c + 0x34) = 100;\n    *(undefined4 *)(PTR_DAT_08004d0c + 0x38) = 0x3f800000;\n    PTR_DAT_08004d0c[0x3c] = 0x19;\n    PTR_DAT_08004d0c[0x3d] = 3;\n    PTR_DAT_08004d0c[0x3e] = 0x19;\n    // Call initialization function\n    initialize_helper();\n    return;\n}",
            "called": [
                "FUN_08004c2a"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08004c48",
            "calling": [
                "FUN_080051b4",
                "FUN_08004dd2"
            ],
            "imported": false,
            "current_name": "initialize_config_08004c48"
        },
        "FUN_080002a0": {
            "renaming": {
                "FUN_080002a0": "call_function_with_param_080002a0",
                "param_1": "param",
                "FUN_08005a98": "call_specific_function"
            },
            "code": "void call_function_with_param_080002a0(undefined4 param){\n                    call_specific_function(param);\n                    return;\n                }",
            "called": [
                "FUN_08005a98"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002a0",
            "calling": [
                "FUN_08002408"
            ],
            "imported": false,
            "current_name": "call_function_with_param_080002a0"
        },
        "FUN_08009250": {
            "renaming": {
                "FUN_08009250": "is_CY_false_or_ZR_true_08009250",
                "in_ZR": "zero_register",
                "in_CY": "carry_flag",
                "FUN_080091fc": "execute_080091fc"
            },
            "code": "bool is_CY_false_or_ZR_true_08009250() {\n  undefined zero_register;\n  undefined carry_flag;\n  execute_080091fc();\n  return !(bool)carry_flag || (bool)zero_register;\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009250",
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "imported": false,
            "current_name": "is_CY_false_or_ZR_true_08009250"
        },
        "FUN_0800640c": {
            "renaming": {
                "FUN_0800640c": "process_input_0800640c",
                "param_1": "input_type",
                "param_2": "param1",
                "param_3": "param2",
                "local_1c": "local_1",
                "local_18": "local_2",
                "local_14": "local_3",
                "local_10": "local_4",
                "local_c": "local_5",
                "DAT_080064b0": "data_1",
                "DAT_080064b4": "data_2",
                "DAT_080064b8": "data_3",
                "PTR_080064b0": "flag_ptr",
                "PTR_080064b8": "output_ptr",
                "*(uint *)(DAT_080064b0 + 0x30)": "bit_mask",
                "*(uint *)(DAT_080064b0 + 8)": "output_value"
            },
            "code": "void process_input_0800640c(int input_type, uint32_t param1, uint32_t param2) {\n  uint32_t* data_ptr = (input_type == 0) ? (uint32_t*)DAT_080064b4 : (uint32_t*)DAT_080064b8;\n  uint32_t *(uint *)(DAT_080064b0 + 0x30) = (input_type == 0) ? 1 : 4;\n  uint32_t* PTR_080064b0 = (uint32_t*)(DAT_080064b0 + 0x30);\n  *PTR_080064b0 = *PTR_080064b0 | *(uint *)(DAT_080064b0 + 0x30);\n  uint32_t local_1 = 0x100;\n  uint32_t local_2 = 2;\n  uint32_t local_3 = 3;\n  uint32_t local_4 = 0;\n  uint32_t local_5 = 0;\n  if (input_type == 1) {\n    local_1 = 0x200;\n  }\n  FUN_08006e88(data_ptr, &local_1);\n  uint32_t* PTR_080064b8 = (uint32_t*)(DAT_080064b0 + 8);\n  *PTR_080064b8 = (input_type == 0) ? (param2 | param1 | (*PTR_080064b8 & 0xf89fffff)) : (param1 | (param2 << 3) | (*PTR_080064b8 & 0x7ffffff));\n}\n",
            "called": [
                "FUN_08006e88"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800640c",
            "calling": [],
            "imported": false,
            "current_name": "process_input_0800640c"
        },
        "FUN_08008af0": {
            "renaming": {
                "FUN_08008af0": "call_function_with_swapped_arguments_08008af0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "FUN_08008b00": "call_function_with_arguments_swapped"
            },
            "code": "void call_function_with_swapped_arguments_08008af0(undefined4 arg1, undefined4 arg2, undefined4 arg3, undefined4 arg4) {\n  call_function_with_arguments_swapped(arg3, arg4, arg1, arg2);\n  return;\n}",
            "called": [
                "FUN_08008b00"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008af0",
            "calling": [
                "FUN_08008b60",
                "FUN_08008b4c"
            ],
            "imported": false,
            "current_name": "call_function_with_swapped_arguments_08008af0"
        },
        "FUN_08006e1a": {
            "renaming": {
                "FUN_08006e1a": "convert_char_to_int_08006e1a",
                "param_1": "character",
                "uVar1": "converted_int",
                "FUN_08006ac0": "convert_char_to_int_inner"
            },
            "code": "int convert_char_to_int_08006e1a(char character) {\n    int converted_int = convert_char_to_int_08006e1a_inner((int)character);\n    return converted_int;\n}",
            "called": [
                "FUN_08006ac0"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08006e1a",
            "calling": [],
            "imported": false,
            "current_name": "convert_char_to_int_08006e1a"
        },
        "FUN_080052ac": {
            "renaming": {
                "FUN_080052ac": "set_param_bits_080052ac",
                "param_1": "param",
                "PTR_DAT_080052d8": "ptr",
                "DAT_080052d8": "dat"
            },
            "code": "void set_param_bits_080052ac(uint param)\n{\n    uint* PTR_DAT_080052d8 = (uint *)(DAT_080052d8 + 0x14);\n    uint mask = 0xfffffaaf;\n    *PTR_DAT_080052d8 = param | (*PTR_DAT_080052d8 & mask);\n    return;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080052ac",
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "imported": false,
            "current_name": "set_param_bits_080052ac"
        },
        "FUN_08008286": {
            "renaming": {
                "FUN_08008286": "check_file_08008286",
                "uVar1": "result",
                "iVar2": "file_open_result",
                "FUN_08007e58": "open_file",
                "FUN_08007e84": "get_file_contents",
                "FUN_08005900": "check_file_contents"
            },
            "code": "undefined check_file_08008286(void)\n{\n  undefined result;\n  int file_open_result;\n  \n  file_open_result = open_file();\n  if (file_open_result != 0) {\n    result = get_file_contents();\n    int file_check_result = check_file_08008286_contents(result);\n    if (file_check_result == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n",
            "called": [
                "FUN_08005900",
                "FUN_08007e58",
                "FUN_08007e84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008286",
            "calling": [
                "FUN_08003f34"
            ],
            "imported": false,
            "current_name": "check_file_08008286"
        },
        "FUN_0800b5bc": {
            "renaming": {
                "FUN_0800b5bc": "do_nothing_0800b5bc"
            },
            "code": "\nvoid do_nothing_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b5bc",
            "calling": [],
            "imported": false,
            "current_name": "do_nothing_0800b5bc"
        },
        "FUN_08008b74": {
            "renaming": {
                "FUN_08008b74": "is_valid_input_08008b74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "code": "int is_valid_input_08008b74(uint input_1, int input_2, uint input_3, int input_4) {\n  bool is_input_2_valid = ((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0);\n  bool is_input_4_valid = ((input_4 << 1) >> 0x15 != -1) || ((input_3 | input_4 << 0xc) == 0);\n  if (is_input_2_valid && is_input_4_valid) {\n    return 1;\n  }\n  return 0;\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08008b74",
            "calling": [
                "FUN_080098d0"
            ],
            "imported": false,
            "current_name": "is_valid_input_08008b74"
        },
        "FUN_0800b524": {
            "renaming": {
                "FUN_0800b524": "insert_value_into_data_structure_0800b524",
                "param_1": "value_to_insert",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "param_4": "parameter_4",
                "puVar1": "unused_pointer",
                "uVar2": "return_value",
                "uVar3": "bit_mask",
                "iVar4": "data_structure_ptr",
                "iVar5": "data_structure_index_ptr",
                "uVar6": "data_structure_size"
            },
            "code": "int insert_value_into_data_structure_0800b524(int value_to_insert, int parameter_2, int parameter_3, int parameter_4) {\n  uint index;\n  int data_structure_ptr;\n  int data_structure_index_ptr;\n  uint bit_mask;\n  uint data_structure_size;\n\n  data_structure_ptr = PTR_PTR_DAT_0800b5a8;\n  do_nothing_0800b51c(*(int *)PTR_PTR_DAT_0800b5ac);\n  data_structure_index_ptr = *(int *)(data_structure_ptr + 0x148);\n  if (data_structure_index_ptr == 0) {\n    data_structure_index_ptr = data_structure_ptr + 0x14c;\n    *(int *)(data_structure_ptr + 0x148) = data_structure_index_ptr;\n  }\n  data_structure_size = *(uint *)(data_structure_index_ptr + 4);\n  if ((int)data_structure_size < 0x20) {\n    if (value_to_insert != 0) {\n      index = data_structure_size * 4 + data_structure_index_ptr;\n      *(int *)(index + 0x88) = parameter_3;\n      bit_mask = 1 << (data_structure_size & 0xff);\n      *(uint *)(data_structure_index_ptr + 0x188) = *(uint *)(data_structure_index_ptr + 0x188) | bit_mask;\n      *(int *)(index + 0x108) = parameter_4;\n      if (value_to_insert == 2) {\n        *(uint *)(data_structure_index_ptr + 0x18c) = bit_mask | *(uint *)(data_structure_index_ptr + 0x18c);\n      }\n    }\n    do_nothing_0800b520(*(int *)PTR_PTR_DAT_0800b5ac);\n    *(uint *)(data_structure_index_ptr + 4) = data_structure_size + 1;\n    *(int *)(data_structure_index_ptr + (data_structure_size + 2) * 4) = parameter_2;\n    return 0;\n  }\n  else {\n    do_nothing_0800b520(*(int *)PTR_PTR_DAT_0800b5ac);\n    return -1;\n  }\n}",
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b524",
            "calling": [
                "FUN_0800b4d0"
            ],
            "imported": false,
            "current_name": "insert_value_into_data_structure_0800b524"
        },
        "FUN_08005214": {
            "renaming": {
                "FUN_08005214": "do_nothing_08005214"
            },
            "code": "\nvoid do_nothing_08005214(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08005214",
            "calling": [
                "FUN_08005250"
            ],
            "imported": false,
            "current_name": "do_nothing_08005214"
        },
        "FUN_08007ea4": {
            "renaming": {
                "FUN_08007ea4": "set_flags_08007ea4",
                "param_1": "flag_value",
                "DAT_08007f38": "SOME_FLAG_1",
                "DAT_08007f40": "SOME_FLAG_2",
                "DAT_08007f44": "SOME_FLAG_3",
                "DAT_08007f48": "SOME_FLAG_4",
                "DAT_08007f4c": "SOME_FLAG_5",
                "DAT_08007f50": "SOME_FLAG_6",
                "*(uint *)(DAT_08007f3c + 0x44)": "*other_flags_ptr",
                "*(uint *)(DAT_08007f3c + 0x40)": "*flags_ptr"
            },
            "code": "void set_flags_08007ea4(int flag_value) {\n    uint* flags_ptr = (uint*)(DAT_08007f3c + 0x40);\n    uint* other_flags_ptr = (uint*)(DAT_08007f3c + 0x44);\n    switch (flag_value) {\n        case DAT_08007f38:\n            *(uint *)(DAT_08007f3c + 0x44) |= 0x10;\n            break;\n        case DAT_08007f40:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x20000;\n            break;\n        case DAT_08007f44:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x40000;\n            break;\n        case DAT_08007f48:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x80000;\n            break;\n        case DAT_08007f4c:\n            *(uint *)(DAT_08007f3c + 0x40) |= 0x100000;\n            break;\n        case DAT_08007f50:\n            *(uint *)(DAT_08007f3c + 0x44) |= 0x20;\n            break;\n        default:\n            break;\n    }\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007ea4",
            "calling": [
                "FUN_08008190"
            ],
            "imported": false,
            "current_name": "set_flags_08007ea4"
        },
        "FUN_08007756": {
            "renaming": {
                "FUN_08007756": "check_and_execute_08007756",
                "uVar1": "random_number",
                "FUN_08005a84": "get_random_number",
                "FUN_080076c8": "execute_function1",
                "FUN_08007930": "execute_function2",
                "FUN_08005a68": "execute_function3"
            },
            "code": "void check_and_execute_08007756(void)\n{\n  uint32_t random_number = get_random_number();\n  if ((random_number & 0x1ff) == 0) {\n    execute_function1(0x3c);\n  }\n  if ((random_number & 0xf) == 0) {\n    execute_function2();\n  }\n  execute_function3();\n  return;\n}\n",
            "called": [
                "FUN_08007930",
                "FUN_08005a68",
                "FUN_080076c8",
                "FUN_08005a84"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007756",
            "calling": [],
            "imported": false,
            "current_name": "check_and_execute_08007756"
        },
        "FUN_0800b520": {
            "renaming": {
                "FUN_0800b520": "do_nothing_0800b520"
            },
            "code": "\nvoid do_nothing_0800b520(void)\n\n{\n  return;\n}\n\n",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800b520",
            "calling": [
                "FUN_0800b524"
            ],
            "imported": false,
            "current_name": "do_nothing_0800b520"
        },
        "FUN_0800423c": {
            "renaming": {
                "FUN_0800423c": "view_Grbl_settings_0800423c",
                "FUN_080036c6": "display_settings"
            },
            "code": "void view_Grbl_settings_0800423c(){\n  display_settings(PTR_s_____view_Grbl_settings_0800423c______view_0800424c);\n  return;\n}",
            "called": [
                "FUN_080036c6"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x0800423c",
            "calling": [
                "FUN_08003b98"
            ],
            "imported": false,
            "current_name": "view_Grbl_settings_0800423c"
        },
        "FUN_08009264": {
            "renaming": {
                "FUN_08009264": "is_end_of_string_08009264",
                "in_CY": "current_char",
                "FUN_080091fc": "call_some_function"
            },
            "code": "bool is_end_of_string_08009264(void)\n{\n  char current_char;\n  call_some_function();\n  return current_char == '\\0';\n}",
            "called": [
                "FUN_080091fc"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08009264",
            "calling": [
                "FUN_080029d8",
                "FUN_08003004"
            ],
            "imported": false,
            "current_name": "is_end_of_string_08009264"
        },
        "FUN_08007e08": {
            "renaming": {
                "FUN_08007e08": "execute_three_functions_08007e08",
                "FUN_08007ad0": "execute_first_function",
                "FUN_08007d08": "execute_second_function",
                "FUN_08007da8": "execute_third_function"
            },
            "code": "void execute_three_functions_08007e08(void)\n{\n  execute_first_function();\n  execute_second_function();\n  execute_third_function();\n  return;\n}",
            "called": [
                "FUN_08007d08",
                "FUN_08007ad0",
                "FUN_08007da8"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08007e08",
            "calling": [
                "FUN_08007540"
            ],
            "imported": false,
            "current_name": "execute_three_functions_08007e08"
        },
        "FUN_08002fac": {
            "renaming": {
                "FUN_08002fac": "is_ptr_dat_equal_08002fac",
                "PTR_DAT_08002fcc": "ptr_dat_first",
                "PTR_DAT_08002fd0": "ptr_dat_second"
            },
            "code": "bool is_ptr_dat_equal_08002fac(void)\n{\n  return (*PTR_DAT_08002fcc == *PTR_DAT_08002fd0);\n}",
            "called": [],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x08002fac",
            "calling": [
                "FUN_08001e98"
            ],
            "imported": false,
            "current_name": "is_ptr_dat_equal_08002fac"
        },
        "FUN_080002b6": {
            "renaming": {
                "FUN_080002b6": "check_if_param_less_than_random_080002b6",
                "param_1": "param",
                "uVar1": "random1",
                "uVar2": "random2",
                "bVar3": "is_param_less_than_random",
                "lVar4": "random3",
                "uVar5": "random4"
            },
            "code": "void check_if_param_less_than_random_080002b6(uint param)\n{\n  uint random1;\n  uint random2;\n  bool is_param_less_than_random;\n  longlong random3;\n  undefined8 random4;\n\n  random3 = get_random_number();\n  random2 = (uint)(random3 + (ulonglong)param >> 0x20);\n  do {\n    random4 = get_random_number();\n    random1 = (uint)((ulonglong)random4 >> 0x20);\n    is_param_less_than_random = random2 <= random1;\n    if (random1 == random2) {\n      is_param_less_than_random = (uint)(random3 + (ulonglong)param) <= (uint)random4;\n    }\n  } while (!is_param_less_than_random);\n  return;\n}",
            "called": [
                "FUN_08000268"
            ],
            "skipped": false,
            "tags": [],
            "improved": true,
            "entrypoint": "0x080002b6",
            "calling": [],
            "imported": false,
            "current_name": "check_if_param_less_than_random_080002b6"
        }
    },
    "used_tokens": 197204,
    "layers": [
        [
            "FUN_0800192c",
            "FUN_08006950",
            "FUN_08008ba0",
            "FUN_08005984",
            "FUN_08007a10",
            "FUN_0800856c",
            "FUN_08008b00",
            "FUN_0800585c",
            "FUN_0800597c",
            "FUN_08009798",
            "FUN_08007930",
            "FUN_08000188",
            "FUN_08009318",
            "FUN_080018cc",
            "FUN_080079e0",
            "FUN_08006a58",
            "FUN_08005a84",
            "FUN_08008b10",
            "FUN_08008c30",
            "FUN_08007bf0",
            "FUN_08008590",
            "FUN_08007ad0",
            "FUN_080039a0",
            "FUN_08009204",
            "FUN_080029d8",
            "FUN_08007c5e",
            "FUN_08005760",
            "FUN_08008b24",
            "FUN_0800587c",
            "FUN_08008a02",
            "FUN_0800369c",
            "FUN_08005a98",
            "FUN_080044e8",
            "FUN_08006c9c",
            "FUN_0800195c",
            "FUN_08009214",
            "FUN_08004dd2",
            "FUN_08005778",
            "FUN_080028bc",
            "FUN_08006628",
            "FUN_0800738e",
            "FUN_080092c4",
            "FUN_08008250",
            "FUN_0800184c",
            "FUN_08006ce0",
            "FUN_08006d4a",
            "FUN_08000374",
            "FUN_080037fc",
            "FUN_0800a1bc",
            "FUN_0800525c",
            "FUN_080073d4",
            "FUN_08006dfe",
            "FUN_08006d66",
            "FUN_08006e88",
            "FUN_080036f0",
            "FUN_08002edc",
            "FUN_0800375c",
            "FUN_08009990",
            "FUN_08007e58",
            "FUN_080059f8",
            "FUN_08003f34",
            "FUN_080095b8",
            "FUN_08006cf6",
            "FUN_08002ef0",
            "FUN_08001d4c",
            "FUN_08000268",
            "FUN_08003778",
            "FUN_0800b3dc",
            "FUN_080046d0",
            "FUN_08006d72",
            "FUN_0800756c",
            "FUN_080001f8",
            "FUN_08002f74",
            "FUN_0800b3e8",
            "FUN_080096e8",
            "FUN_08006a18",
            "FUN_08002c18",
            "FUN_08006ac0",
            "FUN_08002ba8",
            "FUN_0800919c",
            "FUN_0800854c",
            "FUN_08008e44",
            "FUN_0800733e",
            "FUN_0800583c",
            "FUN_08001e98",
            "FUN_080069e4",
            "FUN_0800b2d4",
            "FUN_08008e3c",
            "FUN_08009654",
            "FUN_08007bc2",
            "FUN_08009410",
            "FUN_080035ec",
            "FUN_08006c70",
            "FUN_08006d98",
            "FUN_08005a68",
            "FUN_080079c0",
            "FUN_0800b2e0",
            "FUN_08002908",
            "FUN_08007c40",
            "FUN_080094c0",
            "FUN_08006b54",
            "FUN_08007e84",
            "FUN_080057e4",
            "FUN_08006d8a",
            "FUN_0800b2e8",
            "FUN_08007520",
            "FUN_08007884",
            "FUN_08004250",
            "FUN_08006dc4",
            "FUN_08007402",
            "FUN_08002870",
            "FUN_08000210",
            "FUN_08005900",
            "FUN_08002638",
            "FUN_080051b4",
            "FUN_080098d0",
            "FUN_08005c30",
            "FUN_0800056c",
            "FUN_08002f24",
            "FUN_0800981c",
            "FUN_080059b4",
            "FUN_08006c04",
            "FUN_08002e08",
            "FUN_08006680",
            "FUN_08000340",
            "thunk_FUN_08009990",
            "FUN_08004bf4",
            "FUN_08004d7c",
            "FUN_08009278",
            "FUN_080004fc",
            "FUN_08000220",
            "FUN_08005238",
            "FUN_08007da8",
            "FUN_08004148",
            "FUN_08004940",
            "FUN_08008a74",
            "FUN_08002fd4",
            "FUN_08002408",
            "FUN_08002a94",
            "FUN_08003618",
            "FUN_08007d08",
            "FUN_080091fc",
            "FUN_080058a0",
            "FUN_080036c6",
            "FUN_08008190",
            "FUN_080074c8",
            "FUN_0800b430",
            "FUN_08004030",
            "FUN_08005360",
            "FUN_08003980",
            "FUN_08006de0",
            "FUN_08007540",
            "FUN_080052dc",
            "FUN_080064ec",
            "FUN_08006ba0",
            "FUN_080003ec",
            "FUN_08002896",
            "FUN_080001ac",
            "FUN_08003740",
            "FUN_08000478",
            "FUN_08006d2e",
            "FUN_08007e1c",
            "FUN_0800adf0",
            "FUN_08003a74",
            "FUN_08006b00",
            "FUN_0800b4d0",
            "FUN_08007f54",
            "FUN_08003b98",
            "FUN_080024c4",
            "FUN_08002f40",
            "FUN_080025e8",
            "FUN_08005250",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_08005814",
            "FUN_08005bdc",
            "FUN_080002f0",
            "FUN_0800778c",
            "FUN_08001ddc",
            "FUN_080069b4",
            "FUN_08009228",
            "FUN_08007c7c",
            "FUN_08007b70",
            "FUN_08004d2c",
            "FUN_080066cc",
            "FUN_080018fc",
            "FUN_080039bc",
            "FUN_0800618c",
            "FUN_08006998",
            "FUN_080004ac",
            "FUN_080078f4",
            "FUN_080041a0",
            "FUN_08008bf0",
            "FUN_08003a18",
            "FUN_08005790",
            "FUN_08007854",
            "FUN_08004900",
            "FUN_08004228",
            "FUN_080076c8",
            "FUN_08006a8c",
            "FUN_0800283a",
            "FUN_0800881c",
            "FUN_08004bc0",
            "FUN_08008b4c",
            "FUN_08004c2a",
            "FUN_0800826a",
            "FUN_08008b60",
            "FUN_08005324",
            "FUN_08000310",
            "FUN_08007a70",
            "FUN_08002978",
            "FUN_08003826",
            "FUN_0800923c",
            "FUN_08002afc",
            "FUN_08004c48",
            "FUN_080002a0",
            "FUN_08009250",
            "FUN_0800640c",
            "FUN_08008af0",
            "FUN_08006e1a",
            "FUN_080052ac",
            "FUN_08008286",
            "FUN_08008b74",
            "FUN_0800b524",
            "FUN_08007ea4",
            "FUN_08007756",
            "FUN_0800423c",
            "FUN_08009264",
            "FUN_08007e08",
            "FUN_08002fac",
            "FUN_080002b6"
        ],
        [
            "FUN_08002ba8",
            "FUN_080098d0",
            "FUN_0800056c"
        ],
        [
            "FUN_080098d0"
        ]
    ],
    "locked_functions": []
}