{
  "functions": {
    "FUN_08000110": {
      "entrypoint": "0x08000110",
      "current_name": "FUN_08000110",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 FUN_08000110(undefined4 param_1)\n\n{\n  if ((char)completed_8672 \u003d\u003d \u0027\\0\u0027) {\n    completed_8672._0_1_ \u003d \u0027\\x01\u0027;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "_init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000134": {
      "entrypoint": "0x08000134",
      "current_name": "FUN_08000134",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 FUN_08000134(undefined4 param_1,undefined4 param_2)\n\n{\n  return CONCAT44(param_2,param_1);\n}\n\n",
      "renaming": {},
      "calling": [
        "__libc_init_array"
      ],
      "called": [
        "_init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000150": {
      "entrypoint": "0x08000150",
      "current_name": "FUN_08000150",
      "code": "\nsize_t FUN_08000150(char *__s)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  pcVar3 \u003d __s;\n  do {\n    pcVar2 \u003d pcVar3 + 1;\n    cVar1 \u003d *pcVar3;\n    pcVar3 \u003d pcVar2;\n  } while (cVar1 !\u003d \u0027\\0\u0027);\n  return (size_t)(pcVar2 + (-1 - (int)__s));\n}\n\n",
      "renaming": {},
      "calling": [
        "serialPrint"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000160": {
      "entrypoint": "0x08000160",
      "current_name": "FUN_08000160",
      "code": "\nvoid FUN_08000160(undefined4 param_1,uint param_2)\n\n{\n  __aeabi_dadd(param_1,param_2 ^ 0x80000000);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__aeabi_dadd"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000168": {
      "entrypoint": "0x08000168",
      "current_name": "FUN_08000168",
      "code": "\nulonglong FUN_08000168(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar6 \u003d param_4 ^ 0x80000000;\n  uVar9 \u003d param_2 \u003c\u003c 1;\n  param_4 \u003d param_4 \u003c\u003c 1;\n  bVar13 \u003d ((param_2 ^ uVar6) \u0026 0x7fffffff) \u003d\u003d 0;\n  bVar14 \u003d bVar13 \u0026\u0026 param_1 \u003d\u003d param_3;\n  if (!bVar13 || param_1 !\u003d param_3) {\n    bVar14 \u003d (uVar9 | param_1) \u003d\u003d 0;\n  }\n  if (!bVar14) {\n    bVar14 \u003d (param_4 | param_3) \u003d\u003d 0;\n  }\n  iVar8 \u003d (int)uVar9 \u003e\u003e 0x15;\n  if (!bVar14) {\n    bVar14 \u003d iVar8 \u003d\u003d -1;\n  }\n  iVar1 \u003d (int)param_4 \u003e\u003e 0x15;\n  if (!bVar14) {\n    bVar14 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (bVar14) {\n    if (iVar8 \u003d\u003d -1 || iVar1 \u003d\u003d -1) {\n      uVar9 \u003d uVar6;\n      uVar11 \u003d param_3;\n      if (iVar8 \u003d\u003d -1) {\n        uVar9 \u003d param_2;\n        uVar11 \u003d param_1;\n      }\n      if (iVar8 !\u003d -1 || iVar1 !\u003d -1) {\n        param_3 \u003d uVar11;\n        uVar6 \u003d uVar9;\n      }\n      bVar14 \u003d (uVar11 | uVar9 \u003c\u003c 0xc) \u003d\u003d 0;\n      if (bVar14) {\n        bVar14 \u003d (param_3 | uVar6 \u003c\u003c 0xc) \u003d\u003d 0;\n      }\n      if (bVar14) {\n        bVar14 \u003d uVar9 \u003d\u003d uVar6;\n      }\n      if (!bVar14) {\n        uVar9 \u003d uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((param_2 ^ uVar6) \u0026 0x7fffffff) !\u003d 0 || param_1 !\u003d param_3) {\n      if ((uVar9 | param_1) \u003d\u003d 0) {\n        param_1 \u003d param_3;\n        param_2 \u003d uVar6;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 !\u003d uVar6) {\n      return 0;\n    }\n    if (uVar9 \u003e\u003e 0x15 \u003d\u003d 0) {\n      bVar14 \u003d (param_1 \u0026 0x80000000) !\u003d 0;\n      uVar6 \u003d param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar6 \u003d uVar6 | 0x80000000;\n      }\n      return CONCAT44(uVar6,param_1 \u003c\u003c 1);\n    }\n    if (uVar9 \u003c 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 \u003d param_2 \u0026 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) \u003c\u003c 0x20;\n  }\n  uVar9 \u003d uVar9 \u003e\u003e 0x15;\n  param_4 \u003d param_4 \u003e\u003e 0x15;\n  uVar11 \u003d param_4 - uVar9;\n  bVar14 \u003d uVar11 !\u003d 0;\n  if (param_4 \u003c uVar9) {\n    uVar11 \u003d -uVar11;\n  }\n  uVar10 \u003d param_1;\n  uVar7 \u003d param_2;\n  if (bVar14 \u0026\u0026 uVar9 \u003c\u003d param_4) {\n    uVar9 \u003d uVar9 + uVar11;\n    uVar10 \u003d param_3;\n    uVar7 \u003d uVar6;\n    param_3 \u003d param_1;\n    uVar6 \u003d param_2;\n  }\n  if (0x36 \u003c uVar11) {\n    return CONCAT44(uVar7,uVar10);\n  }\n  uVar4 \u003d uVar7 \u0026 0xfffff | 0x100000;\n  if ((uVar7 \u0026 0x80000000) !\u003d 0) {\n    bVar14 \u003d uVar10 !\u003d 0;\n    uVar10 \u003d -uVar10;\n    uVar4 \u003d -uVar4 - (uint)bVar14;\n  }\n  uVar7 \u003d uVar6 \u0026 0xfffff | 0x100000;\n  if ((uVar6 \u0026 0x80000000) !\u003d 0) {\n    bVar14 \u003d param_3 !\u003d 0;\n    param_3 \u003d -param_3;\n    uVar7 \u003d -uVar7 - (uint)bVar14;\n  }\n  if (uVar9 \u003d\u003d uVar11) {\n    uVar7 \u003d uVar7 ^ 0x100000;\n    if (uVar9 \u003d\u003d 0) {\n      uVar4 \u003d uVar4 ^ 0x100000;\n      uVar9 \u003d 1;\n    }\n    else {\n      uVar11 \u003d uVar11 - 1;\n    }\n  }\n  uVar6 \u003d -uVar11 + 0x20;\n  if ((int)uVar11 \u003c 0x21) {\n    uVar12 \u003d param_3 \u003c\u003c (uVar6 \u0026 0xff);\n    param_3 \u003d param_3 \u003e\u003e (uVar11 \u0026 0xff);\n    uVar3 \u003d uVar10 + param_3;\n    uVar5 \u003d uVar7 \u003c\u003c (uVar6 \u0026 0xff);\n    uVar6 \u003d uVar3 + uVar5;\n    uVar4 \u003d uVar4 + CARRY4(uVar10,param_3) + ((int)uVar7 \u003e\u003e (uVar11 \u0026 0xff)) +\n            (uint)CARRY4(uVar3,uVar5);\n  }\n  else {\n    uVar12 \u003d uVar7 \u003c\u003c (-uVar11 + 0x40 \u0026 0xff);\n    if (param_3 !\u003d 0) {\n      uVar12 \u003d uVar12 | 2;\n    }\n    uVar7 \u003d (int)uVar7 \u003e\u003e (uVar11 - 0x20 \u0026 0xff);\n    uVar6 \u003d uVar10 + uVar7;\n    uVar4 \u003d uVar4 + ((int)uVar7 \u003e\u003e 0x1f) + (uint)CARRY4(uVar10,uVar7);\n  }\n  param_2 \u003d uVar4 \u0026 0x80000000;\n  uVar11 \u003d uVar4;\n  if ((int)uVar4 \u003c 0) {\n    bVar14 \u003d uVar12 \u003d\u003d 0;\n    uVar12 \u003d -uVar12;\n    uVar11 \u003d -uVar6;\n    uVar6 \u003d -(uint)!bVar14 - uVar6;\n    uVar11 \u003d -(uint)(bVar14 \u003c\u003d uVar11) - uVar4;\n  }\n  if (0xfffff \u003c uVar11) {\n    uVar10 \u003d uVar9 - 1;\n    if (0x1fffff \u003c uVar11) {\n      uVar10 \u003d uVar11 \u0026 1;\n      uVar11 \u003d uVar11 \u003e\u003e 1;\n      bVar2 \u003d (byte)uVar6;\n      uVar6 \u003d (uint)(uVar10 !\u003d 0) \u003c\u003c 0x1f | uVar6 \u003e\u003e 1;\n      uVar12 \u003d (uint)(bVar2 \u0026 1) \u003c\u003c 0x1f | uVar12 \u003e\u003e 1;\n      uVar10 \u003d uVar9;\n      if (0xffbfffff \u003c uVar9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 \u003d 0x7fffffff \u003c uVar12;\n    if (uVar12 \u003d\u003d 0x80000000) {\n      bVar14 \u003d (uVar6 \u0026 1) !\u003d 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(uVar6,(uint)bVar14) | param_2,\n                    uVar6 + bVar14);\n  }\n  bVar13 \u003d (uVar12 \u0026 0x80000000) !\u003d 0;\n  uVar12 \u003d uVar12 \u003c\u003c 1;\n  uVar10 \u003d uVar6 * 2;\n  bVar14 \u003d CARRY4(uVar6,uVar6);\n  uVar6 \u003d uVar6 * 2 + (uint)bVar13;\n  uVar11 \u003d uVar11 * 2 + (uint)(bVar14 || CARRY4(uVar10,(uint)bVar13));\n  uVar10 \u003d uVar9 - 2;\n  if ((uVar11 \u0026 0x100000) !\u003d 0) goto LAB_08000278;\n  uVar7 \u003d uVar6;\n  uVar9 \u003d uVar11;\n  if (uVar11 \u003d\u003d 0) {\n    uVar7 \u003d 0;\n    uVar9 \u003d uVar6;\n  }\n  iVar8 \u003d LZCOUNT(uVar9);\n  if (uVar11 \u003d\u003d 0) {\n    iVar8 \u003d iVar8 + 0x20;\n  }\n  uVar11 \u003d iVar8 - 0xb;\n  bVar15 \u003d SBORROW4(uVar11,0x20);\n  uVar6 \u003d iVar8 - 0x2b;\n  bVar14 \u003d (int)uVar6 \u003c 0;\n  bVar13 \u003d uVar6 \u003d\u003d 0;\n  if ((int)uVar11 \u003c 0x20) {\n    bVar15 \u003d SCARRY4(uVar6,0xc);\n    iVar8 \u003d iVar8 + -0x1f;\n    bVar14 \u003d iVar8 \u003c 0;\n    bVar13 \u003d iVar8 \u003d\u003d 0;\n    uVar6 \u003d uVar11;\n    if (!bVar13 \u0026\u0026 bVar14 \u003d\u003d bVar15) {\n      uVar7 \u003d uVar9 \u003c\u003c (uVar11 \u0026 0xff);\n      uVar9 \u003d uVar9 \u003e\u003e (0xcU - iVar8 \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar12 \u003d 0x20 - uVar6;\n  }\n  uVar9 \u003d uVar9 \u003c\u003c (uVar6 \u0026 0xff);\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar9 \u003d uVar9 | uVar7 \u003e\u003e (uVar12 \u0026 0xff);\n  }\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar7 \u003d uVar7 \u003c\u003c (uVar6 \u0026 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar11 \u003c\u003d (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | param_2,uVar7);\n  }\n  uVar6 \u003d ~(uVar10 - uVar11);\n  if ((int)uVar6 \u003c 0x1f) {\n    iVar8 \u003d uVar6 - 0x13;\n    if (iVar8 !\u003d 0 \u0026\u0026 iVar8 \u003c 0 \u003d\u003d SCARRY4(uVar6 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,uVar7 \u003e\u003e (0x20 - (0xcU - iVar8) \u0026 0xff) | uVar9 \u003c\u003c (0xcU - iVar8 \u0026 0xff)\n                     ) \u0026 0x80000000ffffffff;\n    }\n    uVar6 \u003d uVar6 + 1;\n    return CONCAT44(param_2 | uVar9 \u003e\u003e (uVar6 \u0026 0xff),\n                    uVar7 \u003e\u003e (uVar6 \u0026 0xff) | uVar9 \u003c\u003c (0x20 - uVar6 \u0026 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 \u003e\u003e (uVar6 - 0x1f \u0026 0xff)) \u0026 0x80000000ffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_atan2",
        "rint",
        "atan",
        "__ieee754_sqrt",
        "__ieee754_asin",
        "MS5611_Update",
        "__ieee754_pow"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800016c": {
      "entrypoint": "0x0800016c",
      "current_name": "FUN_0800016c",
      "code": "\nulonglong FUN_0800016c(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  byte bVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 \u003d param_2 \u003c\u003c 1;\n  uVar9 \u003d param_4 \u003c\u003c 1;\n  bVar13 \u003d ((param_2 ^ param_4) \u0026 0x7fffffff) \u003d\u003d 0;\n  bVar14 \u003d bVar13 \u0026\u0026 param_1 \u003d\u003d param_3;\n  if (!bVar13 || param_1 !\u003d param_3) {\n    bVar14 \u003d (uVar7 | param_1) \u003d\u003d 0;\n  }\n  if (!bVar14) {\n    bVar14 \u003d (uVar9 | param_3) \u003d\u003d 0;\n  }\n  iVar6 \u003d (int)uVar7 \u003e\u003e 0x15;\n  if (!bVar14) {\n    bVar14 \u003d iVar6 \u003d\u003d -1;\n  }\n  iVar1 \u003d (int)uVar9 \u003e\u003e 0x15;\n  if (!bVar14) {\n    bVar14 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (bVar14) {\n    if (iVar6 \u003d\u003d -1 || iVar1 \u003d\u003d -1) {\n      uVar9 \u003d param_4;\n      uVar7 \u003d param_3;\n      if (iVar6 \u003d\u003d -1) {\n        uVar9 \u003d param_2;\n        uVar7 \u003d param_1;\n      }\n      if (iVar6 !\u003d -1 || iVar1 !\u003d -1) {\n        param_3 \u003d uVar7;\n        param_4 \u003d uVar9;\n      }\n      bVar14 \u003d (uVar7 | uVar9 \u003c\u003c 0xc) \u003d\u003d 0;\n      if (bVar14) {\n        bVar14 \u003d (param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0;\n      }\n      if (bVar14) {\n        bVar14 \u003d uVar9 \u003d\u003d param_4;\n      }\n      if (!bVar14) {\n        uVar9 \u003d uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar7);\n    }\n    if (((param_2 ^ param_4) \u0026 0x7fffffff) !\u003d 0 || param_1 !\u003d param_3) {\n      if ((uVar7 | param_1) \u003d\u003d 0) {\n        param_1 \u003d param_3;\n        param_2 \u003d param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 !\u003d param_4) {\n      return 0;\n    }\n    if (uVar7 \u003e\u003e 0x15 \u003d\u003d 0) {\n      bVar14 \u003d (param_1 \u0026 0x80000000) !\u003d 0;\n      uVar9 \u003d param_2 * 2 + (uint)bVar14;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)bVar14)) {\n        uVar9 \u003d uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,param_1 \u003c\u003c 1);\n    }\n    if (uVar7 \u003c 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 \u003d param_2 \u0026 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(param_2 | 0x7ff00000) \u003c\u003c 0x20;\n  }\n  uVar7 \u003d uVar7 \u003e\u003e 0x15;\n  uVar9 \u003d uVar9 \u003e\u003e 0x15;\n  uVar10 \u003d uVar9 - uVar7;\n  bVar14 \u003d uVar10 !\u003d 0;\n  if (uVar9 \u003c uVar7) {\n    uVar10 \u003d -uVar10;\n  }\n  uVar8 \u003d param_1;\n  uVar5 \u003d param_2;\n  if (bVar14 \u0026\u0026 uVar7 \u003c\u003d uVar9) {\n    uVar7 \u003d uVar7 + uVar10;\n    uVar8 \u003d param_3;\n    uVar5 \u003d param_4;\n    param_3 \u003d param_1;\n    param_4 \u003d param_2;\n  }\n  if (0x36 \u003c uVar10) {\n    return CONCAT44(uVar5,uVar8);\n  }\n  uVar9 \u003d uVar5 \u0026 0xfffff | 0x100000;\n  if ((uVar5 \u0026 0x80000000) !\u003d 0) {\n    bVar14 \u003d uVar8 !\u003d 0;\n    uVar8 \u003d -uVar8;\n    uVar9 \u003d -uVar9 - (uint)bVar14;\n  }\n  uVar5 \u003d param_4 \u0026 0xfffff | 0x100000;\n  if ((param_4 \u0026 0x80000000) !\u003d 0) {\n    bVar14 \u003d param_3 !\u003d 0;\n    param_3 \u003d -param_3;\n    uVar5 \u003d -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 \u003d\u003d uVar10) {\n    uVar5 \u003d uVar5 ^ 0x100000;\n    if (uVar7 \u003d\u003d 0) {\n      uVar9 \u003d uVar9 ^ 0x100000;\n      uVar7 \u003d 1;\n    }\n    else {\n      uVar10 \u003d uVar10 - 1;\n    }\n  }\n  uVar12 \u003d -uVar10 + 0x20;\n  if ((int)uVar10 \u003c 0x21) {\n    uVar11 \u003d param_3 \u003c\u003c (uVar12 \u0026 0xff);\n    param_3 \u003d param_3 \u003e\u003e (uVar10 \u0026 0xff);\n    uVar3 \u003d uVar8 + param_3;\n    uVar4 \u003d uVar5 \u003c\u003c (uVar12 \u0026 0xff);\n    uVar12 \u003d uVar3 + uVar4;\n    uVar9 \u003d uVar9 + CARRY4(uVar8,param_3) + ((int)uVar5 \u003e\u003e (uVar10 \u0026 0xff)) +\n            (uint)CARRY4(uVar3,uVar4);\n  }\n  else {\n    uVar11 \u003d uVar5 \u003c\u003c (-uVar10 + 0x40 \u0026 0xff);\n    if (param_3 !\u003d 0) {\n      uVar11 \u003d uVar11 | 2;\n    }\n    uVar5 \u003d (int)uVar5 \u003e\u003e (uVar10 - 0x20 \u0026 0xff);\n    uVar12 \u003d uVar8 + uVar5;\n    uVar9 \u003d uVar9 + ((int)uVar5 \u003e\u003e 0x1f) + (uint)CARRY4(uVar8,uVar5);\n  }\n  param_2 \u003d uVar9 \u0026 0x80000000;\n  uVar10 \u003d uVar9;\n  if ((int)uVar9 \u003c 0) {\n    bVar14 \u003d uVar11 \u003d\u003d 0;\n    uVar11 \u003d -uVar11;\n    uVar10 \u003d -uVar12;\n    uVar12 \u003d -(uint)!bVar14 - uVar12;\n    uVar10 \u003d -(uint)(bVar14 \u003c\u003d uVar10) - uVar9;\n  }\n  if (0xfffff \u003c uVar10) {\n    uVar8 \u003d uVar7 - 1;\n    if (0x1fffff \u003c uVar10) {\n      uVar9 \u003d uVar10 \u0026 1;\n      uVar10 \u003d uVar10 \u003e\u003e 1;\n      bVar2 \u003d (byte)uVar12;\n      uVar12 \u003d (uint)(uVar9 !\u003d 0) \u003c\u003c 0x1f | uVar12 \u003e\u003e 1;\n      uVar11 \u003d (uint)(bVar2 \u0026 1) \u003c\u003c 0x1f | uVar11 \u003e\u003e 1;\n      uVar8 \u003d uVar7;\n      if (0xffbfffff \u003c uVar7 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 \u003d 0x7fffffff \u003c uVar11;\n    if (uVar11 \u003d\u003d 0x80000000) {\n      bVar14 \u003d (uVar12 \u0026 1) !\u003d 0;\n    }\n    return CONCAT44(uVar10 + uVar8 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | param_2,\n                    uVar12 + bVar14);\n  }\n  bVar13 \u003d (uVar11 \u0026 0x80000000) !\u003d 0;\n  uVar11 \u003d uVar11 \u003c\u003c 1;\n  uVar8 \u003d uVar12 * 2;\n  bVar14 \u003d CARRY4(uVar12,uVar12);\n  uVar12 \u003d uVar12 * 2 + (uint)bVar13;\n  uVar10 \u003d uVar10 * 2 + (uint)(bVar14 || CARRY4(uVar8,(uint)bVar13));\n  uVar8 \u003d uVar7 - 2;\n  if ((uVar10 \u0026 0x100000) !\u003d 0) goto LAB_08000278;\n  uVar5 \u003d uVar12;\n  uVar7 \u003d uVar10;\n  if (uVar10 \u003d\u003d 0) {\n    uVar5 \u003d 0;\n    uVar7 \u003d uVar12;\n  }\n  iVar6 \u003d LZCOUNT(uVar7);\n  if (uVar10 \u003d\u003d 0) {\n    iVar6 \u003d iVar6 + 0x20;\n  }\n  uVar12 \u003d iVar6 - 0xb;\n  bVar15 \u003d SBORROW4(uVar12,0x20);\n  uVar10 \u003d iVar6 - 0x2b;\n  bVar14 \u003d (int)uVar10 \u003c 0;\n  bVar13 \u003d uVar10 \u003d\u003d 0;\n  if ((int)uVar12 \u003c 0x20) {\n    bVar15 \u003d SCARRY4(uVar10,0xc);\n    iVar6 \u003d iVar6 + -0x1f;\n    bVar14 \u003d iVar6 \u003c 0;\n    bVar13 \u003d iVar6 \u003d\u003d 0;\n    uVar10 \u003d uVar12;\n    if (!bVar13 \u0026\u0026 bVar14 \u003d\u003d bVar15) {\n      uVar5 \u003d uVar7 \u003c\u003c (uVar12 \u0026 0xff);\n      uVar7 \u003d uVar7 \u003e\u003e (0xcU - iVar6 \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar11 \u003d 0x20 - uVar10;\n  }\n  uVar7 \u003d uVar7 \u003c\u003c (uVar10 \u0026 0xff);\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar7 \u003d uVar7 | uVar5 \u003e\u003e (uVar11 \u0026 0xff);\n  }\n  if (bVar13 || bVar14 !\u003d bVar15) {\n    uVar5 \u003d uVar5 \u003c\u003c (uVar10 \u0026 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 \u003c\u003d (int)uVar8) {\n    return CONCAT44(uVar7 + (uVar8 - uVar12) * 0x100000 | param_2,uVar5);\n  }\n  uVar10 \u003d ~(uVar8 - uVar12);\n  if ((int)uVar10 \u003c 0x1f) {\n    iVar6 \u003d uVar10 - 0x13;\n    if (iVar6 !\u003d 0 \u0026\u0026 iVar6 \u003c 0 \u003d\u003d SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,uVar5 \u003e\u003e (0x20 - (0xcU - iVar6) \u0026 0xff) | uVar7 \u003c\u003c (0xcU - iVar6 \u0026 0xff)\n                     ) \u0026 0x80000000ffffffff;\n    }\n    uVar10 \u003d uVar10 + 1;\n    return CONCAT44(param_2 | uVar7 \u003e\u003e (uVar10 \u0026 0xff),\n                    uVar5 \u003e\u003e (uVar10 \u0026 0xff) | uVar7 \u003c\u003c (0x20 - uVar10 \u0026 0xff));\n  }\n  return CONCAT44(uVar9,uVar7 \u003e\u003e (uVar10 - 0x1f \u0026 0xff)) \u0026 0x80000000ffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "scalbn",
        "__ieee754_atan2",
        "rint",
        "atan",
        "__ieee754_sqrt",
        "__ieee754_asin",
        "__aeabi_drsub",
        "__ieee754_pow"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080003e4": {
      "entrypoint": "0x080003e4",
      "current_name": "FUN_080003e4",
      "code": "\nulonglong FUN_080003e4(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  uint in_r12;\n  bool bVar5;\n  bool bVar6;\n  bool bVar7;\n  \n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar1 \u003d 0;\n  iVar3 \u003d LZCOUNT(param_1);\n  uVar4 \u003d iVar3 + 0x15;\n  bVar7 \u003d SBORROW4(uVar4,0x20);\n  uVar2 \u003d iVar3 - 0xb;\n  bVar5 \u003d (int)uVar2 \u003c 0;\n  bVar6 \u003d uVar2 \u003d\u003d 0;\n  if (uVar4 \u003c 0x20) {\n    bVar7 \u003d SCARRY4(uVar2,0xc);\n    bVar5 \u003d false;\n    bVar6 \u003d iVar3 + 1 \u003d\u003d 0;\n    uVar2 \u003d uVar4;\n    if (!bVar6 \u0026\u0026 bVar7 \u003d\u003d false) {\n      uVar1 \u003d param_1 \u003c\u003c uVar4;\n      param_1 \u003d param_1 \u003e\u003e (0xcU - (iVar3 + 1) \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar6 || bVar5 !\u003d bVar7) {\n    in_r12 \u003d 0x20 - uVar2;\n  }\n  param_1 \u003d param_1 \u003c\u003c (uVar2 \u0026 0xff);\n  if (bVar6 || bVar5 !\u003d bVar7) {\n    param_1 \u003d param_1 | 0U \u003e\u003e (in_r12 \u0026 0xff);\n  }\n  if (bVar6 || bVar5 !\u003d bVar7) {\n    uVar1 \u003d 0 \u003c\u003c (uVar2 \u0026 0xff);\n  }\nLAB_080002f0:\n  if (uVar4 \u003c 0x433) {\n    return CONCAT44(param_1 + (0x432 - uVar4) * 0x100000,uVar1);\n  }\n  uVar2 \u003d ~(0x432 - uVar4);\n  if (0x1e \u003c (int)uVar2) {\n    return (ulonglong)(param_1 \u003e\u003e (uVar2 - 0x1f \u0026 0xff));\n  }\n  iVar3 \u003d uVar2 - 0x13;\n  if (iVar3 \u003d\u003d 0 || iVar3 \u003c 0 !\u003d SCARRY4(uVar2 - 0x1f,0xc)) {\n    uVar2 \u003d uVar2 + 1;\n    return CONCAT44(param_1 \u003e\u003e (uVar2 \u0026 0xff),\n                    uVar1 \u003e\u003e (uVar2 \u0026 0xff) | param_1 \u003c\u003c (0x20 - uVar2 \u0026 0xff));\n  }\n  return (ulonglong)(uVar1 \u003e\u003e (0x20 - (0xcU - iVar3) \u0026 0xff) | param_1 \u003c\u003c (0xcU - iVar3 \u0026 0xff));\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000404": {
      "entrypoint": "0x08000404",
      "current_name": "FUN_08000404",
      "code": "\nulonglong FUN_08000404(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint in_r12;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar6 \u003d param_1 \u0026 0x80000000;\n  uVar2 \u003d param_1;\n  if ((int)uVar6 \u003c 0) {\n    uVar2 \u003d -param_1;\n  }\n  uVar1 \u003d 0;\n  iVar4 \u003d LZCOUNT(uVar2);\n  uVar5 \u003d iVar4 + 0x15;\n  bVar9 \u003d SBORROW4(uVar5,0x20);\n  uVar3 \u003d iVar4 - 0xb;\n  bVar7 \u003d (int)uVar3 \u003c 0;\n  bVar8 \u003d uVar3 \u003d\u003d 0;\n  if (uVar5 \u003c 0x20) {\n    bVar9 \u003d SCARRY4(uVar3,0xc);\n    bVar7 \u003d false;\n    bVar8 \u003d iVar4 + 1 \u003d\u003d 0;\n    uVar3 \u003d uVar5;\n    if (!bVar8 \u0026\u0026 bVar9 \u003d\u003d false) {\n      uVar1 \u003d uVar2 \u003c\u003c uVar5;\n      uVar2 \u003d uVar2 \u003e\u003e (0xcU - (iVar4 + 1) \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar8 || bVar7 !\u003d bVar9) {\n    in_r12 \u003d 0x20 - uVar3;\n  }\n  uVar2 \u003d uVar2 \u003c\u003c (uVar3 \u0026 0xff);\n  if (bVar8 || bVar7 !\u003d bVar9) {\n    uVar2 \u003d uVar2 | 0U \u003e\u003e (in_r12 \u0026 0xff);\n  }\n  if (bVar8 || bVar7 !\u003d bVar9) {\n    uVar1 \u003d 0 \u003c\u003c (uVar3 \u0026 0xff);\n  }\nLAB_080002f0:\n  if (uVar5 \u003c 0x433) {\n    return CONCAT44(uVar2 + (0x432 - uVar5) * 0x100000 | uVar6,uVar1);\n  }\n  uVar3 \u003d ~(0x432 - uVar5);\n  if (0x1e \u003c (int)uVar3) {\n    return CONCAT44(param_1,uVar2 \u003e\u003e (uVar3 - 0x1f \u0026 0xff)) \u0026 0x80000000ffffffff;\n  }\n  iVar4 \u003d uVar3 - 0x13;\n  if (iVar4 \u003d\u003d 0 || iVar4 \u003c 0 !\u003d SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 \u003d uVar3 + 1;\n    return CONCAT44(uVar6 | uVar2 \u003e\u003e (uVar3 \u0026 0xff),\n                    uVar1 \u003e\u003e (uVar3 \u0026 0xff) | uVar2 \u003c\u003c (0x20 - uVar3 \u0026 0xff));\n  }\n  return CONCAT44(param_1,uVar1 \u003e\u003e (0x20 - (0xcU - iVar4) \u0026 0xff) | uVar2 \u003c\u003c (0xcU - iVar4 \u0026 0xff))\n         \u0026 0x80000000ffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_pow"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000428": {
      "entrypoint": "0x08000428",
      "current_name": "FUN_08000428",
      "code": "\nulonglong FUN_08000428(uint param_1,undefined4 param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  uint uVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar5 \u003d param_1 \u003c\u003c 1;\n  bVar9 \u003d uVar5 \u003d\u003d 0;\n  uVar1 \u003d (uint)((param_1 \u0026 0x80000000) !\u003d 0) \u003c\u003c 0x1f;\n  uVar4 \u003d (uint)((int)uVar5 \u003e\u003e 3) \u003e\u003e 1;\n  uVar3 \u003d uVar1 | uVar4;\n  param_1 \u003d param_1 \u003c\u003c 0x1d;\n  if (!bVar9) {\n    param_4 \u003d uVar5 \u0026 0xff000000;\n    bVar9 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar9) {\n    bVar9 \u003d param_4 \u003d\u003d 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(uVar3,param_1) ^ 0x3800000000000000;\n  }\n  if (uVar5 \u003d\u003d 0 || param_4 \u003d\u003d 0xff000000) {\n    return CONCAT44(uVar3,param_1);\n  }\n  uVar2 \u003d param_1;\n  uVar5 \u003d uVar4;\n  if (uVar4 \u003d\u003d 0) {\n    uVar2 \u003d 0;\n    uVar5 \u003d param_1;\n  }\n  iVar6 \u003d LZCOUNT(uVar5);\n  if (uVar4 \u003d\u003d 0) {\n    iVar6 \u003d iVar6 + 0x20;\n  }\n  uVar7 \u003d iVar6 - 0xb;\n  bVar10 \u003d SBORROW4(uVar7,0x20);\n  uVar4 \u003d iVar6 - 0x2b;\n  bVar9 \u003d (int)uVar4 \u003c 0;\n  bVar8 \u003d uVar4 \u003d\u003d 0;\n  if ((int)uVar7 \u003c 0x20) {\n    bVar10 \u003d SCARRY4(uVar4,0xc);\n    iVar6 \u003d iVar6 + -0x1f;\n    bVar9 \u003d iVar6 \u003c 0;\n    bVar8 \u003d iVar6 \u003d\u003d 0;\n    uVar4 \u003d uVar7;\n    if (!bVar8 \u0026\u0026 bVar9 \u003d\u003d bVar10) {\n      uVar2 \u003d uVar5 \u003c\u003c (uVar7 \u0026 0xff);\n      uVar5 \u003d uVar5 \u003e\u003e (0xcU - iVar6 \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar8 || bVar9 !\u003d bVar10) {\n    in_r12 \u003d 0x20 - uVar4;\n  }\n  uVar5 \u003d uVar5 \u003c\u003c (uVar4 \u0026 0xff);\n  if (bVar8 || bVar9 !\u003d bVar10) {\n    uVar5 \u003d uVar5 | uVar2 \u003e\u003e (in_r12 \u0026 0xff);\n  }\n  if (bVar8 || bVar9 !\u003d bVar10) {\n    uVar2 \u003d uVar2 \u003c\u003c (uVar4 \u0026 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar7 \u003c 0x381) {\n    return CONCAT44(uVar5 + (0x380 - uVar7) * 0x100000 | uVar1,uVar2);\n  }\n  uVar4 \u003d ~(0x380 - uVar7);\n  if ((int)uVar4 \u003c 0x1f) {\n    iVar6 \u003d uVar4 - 0x13;\n    if (iVar6 !\u003d 0 \u0026\u0026 iVar6 \u003c 0 \u003d\u003d SCARRY4(uVar4 - 0x1f,0xc)) {\n      return CONCAT44(uVar3,uVar2 \u003e\u003e (0x20 - (0xcU - iVar6) \u0026 0xff) | uVar5 \u003c\u003c (0xcU - iVar6 \u0026 0xff)\n                     ) \u0026 0x80000000ffffffff;\n    }\n    uVar4 \u003d uVar4 + 1;\n    return CONCAT44(uVar1 | uVar5 \u003e\u003e (uVar4 \u0026 0xff),\n                    uVar2 \u003e\u003e (uVar4 \u0026 0xff) | uVar5 \u003c\u003c (0x20 - uVar4 \u0026 0xff));\n  }\n  return CONCAT44(uVar3,uVar5 \u003e\u003e (uVar4 - 0x1f \u0026 0xff)) \u0026 0x80000000ffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000464": {
      "entrypoint": "0x08000464",
      "current_name": "FUN_08000464",
      "code": "\nulonglong FUN_08000464(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  \n  if ((param_1 | param_2) \u003d\u003d 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  iVar7 \u003d 0x432;\n  uVar8 \u003d param_2 \u003e\u003e 0x16;\n  if (uVar8 !\u003d 0) {\n    iVar7 \u003d 3;\n    if (param_2 \u003e\u003e 0x19 !\u003d 0) {\n      iVar7 \u003d 6;\n    }\n    if (param_2 \u003e\u003e 0x1c !\u003d 0) {\n      iVar7 \u003d iVar7 + 3;\n    }\n    uVar4 \u003d iVar7 - ((int)param_2 \u003e\u003e 0x1f);\n    uVar8 \u003d param_1 \u003c\u003c (0x20 - uVar4 \u0026 0xff);\n    param_1 \u003d param_1 \u003e\u003e (uVar4 \u0026 0xff) | param_2 \u003c\u003c (0x20 - uVar4 \u0026 0xff);\n    param_2 \u003d param_2 \u003e\u003e (uVar4 \u0026 0xff);\n    iVar7 \u003d uVar4 + 0x432;\n  }\n  if (0xfffff \u003c param_2) {\n    if (0x1fffff \u003c param_2) {\n      uVar4 \u003d param_2 \u0026 1;\n      param_2 \u003d param_2 \u003e\u003e 1;\n      bVar1 \u003d (byte)param_1;\n      param_1 \u003d (uint)(uVar4 !\u003d 0) \u003c\u003c 0x1f | param_1 \u003e\u003e 1;\n      uVar8 \u003d (uint)(bVar1 \u0026 1) \u003c\u003c 0x1f | uVar8 \u003e\u003e 1;\n      iVar7 \u003d iVar7 + 1;\n      if (0xffbfffff \u003c (uint)(iVar7 * 0x200000)) {\n        return 0x7ff0000000000000;\n      }\n    }\nLAB_08000278:\n    bVar10 \u003d 0x7fffffff \u003c uVar8;\n    if (uVar8 \u003d\u003d 0x80000000) {\n      bVar10 \u003d (param_1 \u0026 1) !\u003d 0;\n    }\n    return CONCAT44(param_2 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar10),param_1 + bVar10\n                   );\n  }\n  bVar9 \u003d (uVar8 \u0026 0x80000000) !\u003d 0;\n  uVar8 \u003d uVar8 \u003c\u003c 1;\n  uVar4 \u003d param_1 * 2;\n  bVar10 \u003d CARRY4(param_1,param_1);\n  param_1 \u003d param_1 * 2 + (uint)bVar9;\n  param_2 \u003d param_2 * 2 + (uint)(bVar10 || CARRY4(uVar4,(uint)bVar9));\n  iVar7 \u003d iVar7 + -1;\n  if ((param_2 \u0026 0x100000) !\u003d 0) goto LAB_08000278;\n  uVar2 \u003d param_1;\n  uVar4 \u003d param_2;\n  if (param_2 \u003d\u003d 0) {\n    uVar2 \u003d 0;\n    uVar4 \u003d param_1;\n  }\n  iVar5 \u003d LZCOUNT(uVar4);\n  if (param_2 \u003d\u003d 0) {\n    iVar5 \u003d iVar5 + 0x20;\n  }\n  uVar6 \u003d iVar5 - 0xb;\n  bVar11 \u003d SBORROW4(uVar6,0x20);\n  uVar3 \u003d iVar5 - 0x2b;\n  bVar10 \u003d (int)uVar3 \u003c 0;\n  bVar9 \u003d uVar3 \u003d\u003d 0;\n  if ((int)uVar6 \u003c 0x20) {\n    bVar11 \u003d SCARRY4(uVar3,0xc);\n    iVar5 \u003d iVar5 + -0x1f;\n    bVar10 \u003d iVar5 \u003c 0;\n    bVar9 \u003d iVar5 \u003d\u003d 0;\n    uVar3 \u003d uVar6;\n    if (!bVar9 \u0026\u0026 bVar10 \u003d\u003d bVar11) {\n      uVar2 \u003d uVar4 \u003c\u003c (uVar6 \u0026 0xff);\n      uVar4 \u003d uVar4 \u003e\u003e (0xcU - iVar5 \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar9 || bVar10 !\u003d bVar11) {\n    uVar8 \u003d 0x20 - uVar3;\n  }\n  uVar4 \u003d uVar4 \u003c\u003c (uVar3 \u0026 0xff);\n  if (bVar9 || bVar10 !\u003d bVar11) {\n    uVar4 \u003d uVar4 | uVar2 \u003e\u003e (uVar8 \u0026 0xff);\n  }\n  if (bVar9 || bVar10 !\u003d bVar11) {\n    uVar2 \u003d uVar2 \u003c\u003c (uVar3 \u0026 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar6 \u003c\u003d iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000,uVar2);\n  }\n  uVar8 \u003d ~(iVar7 - uVar6);\n  if (0x1e \u003c (int)uVar8) {\n    return (ulonglong)(uVar4 \u003e\u003e (uVar8 - 0x1f \u0026 0xff));\n  }\n  iVar7 \u003d uVar8 - 0x13;\n  if (iVar7 \u003d\u003d 0 || iVar7 \u003c 0 !\u003d SCARRY4(uVar8 - 0x1f,0xc)) {\n    uVar8 \u003d uVar8 + 1;\n    return CONCAT44(uVar4 \u003e\u003e (uVar8 \u0026 0xff),uVar2 \u003e\u003e (uVar8 \u0026 0xff) | uVar4 \u003c\u003c (0x20 - uVar8 \u0026 0xff)\n                   );\n  }\n  return (ulonglong)(uVar2 \u003e\u003e (0x20 - (0xcU - iVar7) \u0026 0xff) | uVar4 \u003c\u003c (0xcU - iVar7 \u0026 0xff));\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000474": {
      "entrypoint": "0x08000474",
      "current_name": "FUN_08000474",
      "code": "\nulonglong FUN_08000474(uint param_1,uint param_2)\n\n{\n  byte bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  bool bVar10;\n  bool bVar11;\n  bool bVar12;\n  \n  if ((param_1 | param_2) \u003d\u003d 0) {\n    return CONCAT44(param_2,param_1);\n  }\n  uVar8 \u003d param_2 \u0026 0x80000000;\n  uVar3 \u003d param_2;\n  if ((int)uVar8 \u003c 0) {\n    bVar11 \u003d param_1 !\u003d 0;\n    param_1 \u003d -param_1;\n    uVar3 \u003d -param_2 - (uint)bVar11;\n  }\n  iVar7 \u003d 0x432;\n  uVar9 \u003d uVar3 \u003e\u003e 0x16;\n  if (uVar9 !\u003d 0) {\n    iVar7 \u003d 3;\n    if (uVar3 \u003e\u003e 0x19 !\u003d 0) {\n      iVar7 \u003d 6;\n    }\n    if (uVar3 \u003e\u003e 0x1c !\u003d 0) {\n      iVar7 \u003d iVar7 + 3;\n    }\n    uVar4 \u003d iVar7 - ((int)uVar3 \u003e\u003e 0x1f);\n    uVar9 \u003d param_1 \u003c\u003c (0x20 - uVar4 \u0026 0xff);\n    param_1 \u003d param_1 \u003e\u003e (uVar4 \u0026 0xff) | uVar3 \u003c\u003c (0x20 - uVar4 \u0026 0xff);\n    uVar3 \u003d uVar3 \u003e\u003e (uVar4 \u0026 0xff);\n    iVar7 \u003d uVar4 + 0x432;\n  }\n  if (0xfffff \u003c uVar3) {\n    if (0x1fffff \u003c uVar3) {\n      uVar4 \u003d uVar3 \u0026 1;\n      uVar3 \u003d uVar3 \u003e\u003e 1;\n      bVar1 \u003d (byte)param_1;\n      param_1 \u003d (uint)(uVar4 !\u003d 0) \u003c\u003c 0x1f | param_1 \u003e\u003e 1;\n      uVar9 \u003d (uint)(bVar1 \u0026 1) \u003c\u003c 0x1f | uVar9 \u003e\u003e 1;\n      iVar7 \u003d iVar7 + 1;\n      if (0xffbfffff \u003c (uint)(iVar7 * 0x200000)) {\n        return (ulonglong)(uVar8 | 0x7ff00000) \u003c\u003c 0x20;\n      }\n    }\nLAB_08000278:\n    bVar11 \u003d 0x7fffffff \u003c uVar9;\n    if (uVar9 \u003d\u003d 0x80000000) {\n      bVar11 \u003d (param_1 \u0026 1) !\u003d 0;\n    }\n    return CONCAT44(uVar3 + iVar7 * 0x100000 + (uint)CARRY4(param_1,(uint)bVar11) | uVar8,\n                    param_1 + bVar11);\n  }\n  bVar10 \u003d (uVar9 \u0026 0x80000000) !\u003d 0;\n  uVar9 \u003d uVar9 \u003c\u003c 1;\n  uVar4 \u003d param_1 * 2;\n  bVar11 \u003d CARRY4(param_1,param_1);\n  param_1 \u003d param_1 * 2 + (uint)bVar10;\n  uVar3 \u003d uVar3 * 2 + (uint)(bVar11 || CARRY4(uVar4,(uint)bVar10));\n  iVar7 \u003d iVar7 + -1;\n  if ((uVar3 \u0026 0x100000) !\u003d 0) goto LAB_08000278;\n  uVar2 \u003d param_1;\n  uVar4 \u003d uVar3;\n  if (uVar3 \u003d\u003d 0) {\n    uVar2 \u003d 0;\n    uVar4 \u003d param_1;\n  }\n  iVar5 \u003d LZCOUNT(uVar4);\n  if (uVar3 \u003d\u003d 0) {\n    iVar5 \u003d iVar5 + 0x20;\n  }\n  uVar6 \u003d iVar5 - 0xb;\n  bVar12 \u003d SBORROW4(uVar6,0x20);\n  uVar3 \u003d iVar5 - 0x2b;\n  bVar11 \u003d (int)uVar3 \u003c 0;\n  bVar10 \u003d uVar3 \u003d\u003d 0;\n  if ((int)uVar6 \u003c 0x20) {\n    bVar12 \u003d SCARRY4(uVar3,0xc);\n    iVar5 \u003d iVar5 + -0x1f;\n    bVar11 \u003d iVar5 \u003c 0;\n    bVar10 \u003d iVar5 \u003d\u003d 0;\n    uVar3 \u003d uVar6;\n    if (!bVar10 \u0026\u0026 bVar11 \u003d\u003d bVar12) {\n      uVar2 \u003d uVar4 \u003c\u003c (uVar6 \u0026 0xff);\n      uVar4 \u003d uVar4 \u003e\u003e (0xcU - iVar5 \u0026 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar10 || bVar11 !\u003d bVar12) {\n    uVar9 \u003d 0x20 - uVar3;\n  }\n  uVar4 \u003d uVar4 \u003c\u003c (uVar3 \u0026 0xff);\n  if (bVar10 || bVar11 !\u003d bVar12) {\n    uVar4 \u003d uVar4 | uVar2 \u003e\u003e (uVar9 \u0026 0xff);\n  }\n  if (bVar10 || bVar11 !\u003d bVar12) {\n    uVar2 \u003d uVar2 \u003c\u003c (uVar3 \u0026 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar6 \u003c\u003d iVar7) {\n    return CONCAT44(uVar4 + (iVar7 - uVar6) * 0x100000 | uVar8,uVar2);\n  }\n  uVar3 \u003d ~(iVar7 - uVar6);\n  if (0x1e \u003c (int)uVar3) {\n    return CONCAT44(param_2,uVar4 \u003e\u003e (uVar3 - 0x1f \u0026 0xff)) \u0026 0x80000000ffffffff;\n  }\n  iVar7 \u003d uVar3 - 0x13;\n  if (iVar7 \u003d\u003d 0 || iVar7 \u003c 0 !\u003d SCARRY4(uVar3 - 0x1f,0xc)) {\n    uVar3 \u003d uVar3 + 1;\n    return CONCAT44(uVar8 | uVar4 \u003e\u003e (uVar3 \u0026 0xff),\n                    uVar2 \u003e\u003e (uVar3 \u0026 0xff) | uVar4 \u003c\u003c (0x20 - uVar3 \u0026 0xff));\n  }\n  return CONCAT44(param_2,uVar2 \u003e\u003e (0x20 - (0xcU - iVar7) \u0026 0xff) | uVar4 \u003c\u003c (0xcU - iVar7 \u0026 0xff))\n         \u0026 0x80000000ffffffff;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080004d0": {
      "entrypoint": "0x080004d0",
      "current_name": "FUN_080004d0",
      "code": "\nulonglong FUN_080004d0(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  ulonglong uVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  uint unaff_r5;\n  uint uVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  ulonglong uVar12;\n  \n  uVar12 \u003d CONCAT44(param_2,param_1);\n  uVar7 \u003d 0x7ff;\n  uVar4 \u003d param_2 \u003e\u003e 0x14 \u0026 0x7ff;\n  bVar9 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar9) {\n    unaff_r5 \u003d param_4 \u003e\u003e 0x14 \u0026 0x7ff;\n    bVar9 \u003d unaff_r5 \u003d\u003d 0;\n  }\n  if (!bVar9) {\n    bVar9 \u003d uVar4 \u003d\u003d 0x7ff;\n  }\n  if (!bVar9) {\n    bVar9 \u003d unaff_r5 \u003d\u003d 0x7ff;\n  }\n  if (bVar9) {\n    uVar12 \u003d FUN_080006ac();\n  }\n  uVar3 \u003d (uint)(uVar12 \u003e\u003e 0x20);\n  iVar5 \u003d uVar4 + unaff_r5;\n  uVar4 \u003d uVar3 ^ param_4;\n  uVar3 \u003d uVar3 \u0026 ~(uVar7 \u003c\u003c 0x15);\n  param_4 \u003d param_4 \u0026 ~(uVar7 \u003c\u003c 0x15);\n  bVar9 \u003d ((uint)uVar12 | uVar3 \u003c\u003c 0xc) \u003d\u003d 0;\n  if (!bVar9) {\n    bVar9 \u003d (param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0;\n  }\n  uVar3 \u003d uVar3 | 0x100000;\n  param_4 \u003d param_4 | 0x100000;\n  if (bVar9) {\n    param_3 \u003d (uint)uVar12 | param_3;\n    param_4 \u003d (uVar4 \u0026 0x80000000 | uVar3) ^ param_4;\n    uVar4 \u003d uVar7 \u003e\u003e 1;\n    bVar11 \u003d SBORROW4(iVar5,uVar4);\n    uVar6 \u003d iVar5 - uVar4;\n    bVar9 \u003d uVar6 \u003d\u003d 0;\n    uVar3 \u003d uVar6;\n    if (!bVar9 \u0026\u0026 (int)uVar4 \u003c\u003d iVar5) {\n      bVar11 \u003d SBORROW4(uVar7,uVar6);\n      uVar3 \u003d uVar7 - uVar6;\n      bVar9 \u003d uVar7 \u003d\u003d uVar6;\n    }\n    if (!bVar9 \u0026\u0026 (int)uVar3 \u003c 0 \u003d\u003d bVar11) {\n      param_4 \u003d param_4 | uVar6 * 0x100000;\n    }\n    if (!bVar9 \u0026\u0026 (int)uVar3 \u003c 0 \u003d\u003d bVar11) {\n      return CONCAT44(param_4,param_3);\n    }\n    param_4 \u003d param_4 | 0x100000;\n    uVar7 \u003d 0;\n    bVar11 \u003d SBORROW4(uVar6,1);\n    uVar6 \u003d uVar6 - 1;\n    bVar9 \u003d uVar6 \u003d\u003d 0;\n    uVar4 \u003d uVar6;\n  }\n  else {\n    uVar1 \u003d (uVar12 \u0026 0xffffffff) * (ulonglong)param_3;\n    uVar12 \u003d (uVar12 \u0026 0xffffffff) * (ulonglong)param_4 +\n             (ulonglong)uVar3 * (ulonglong)param_3 + (uVar1 \u003e\u003e 0x20);\n    uVar8 \u003d (uint)uVar12;\n    lVar2 \u003d (ulonglong)uVar3 * (ulonglong)param_4 + (uVar12 \u003e\u003e 0x20);\n    uVar7 \u003d (uint)lVar2;\n    uVar3 \u003d (uint)((ulonglong)lVar2 \u003e\u003e 0x20);\n    if ((int)uVar1 !\u003d 0) {\n      uVar8 \u003d uVar8 | 1;\n    }\n    uVar6 \u003d (iVar5 + -0x3ff) - (uint)(uVar3 \u003c 0x200);\n    if (uVar3 \u003c 0x200) {\n      bVar9 \u003d (uVar8 \u0026 0x80000000) !\u003d 0;\n      uVar8 \u003d uVar8 \u003c\u003c 1;\n      lVar2 \u003d CONCAT44(uVar3 * 2 + (uint)(CARRY4(uVar7,uVar7) || CARRY4(uVar7 * 2,(uint)bVar9)),\n                       uVar7 * 2 + (uint)bVar9);\n    }\n    param_4 \u003d uVar4 \u0026 0x80000000 | (int)((ulonglong)lVar2 \u003e\u003e 0x20) \u003c\u003c 0xb | (uint)lVar2 \u003e\u003e 0x15;\n    param_3 \u003d (uint)lVar2 \u003c\u003c 0xb | uVar8 \u003e\u003e 0x15;\n    uVar7 \u003d uVar8 * 0x800;\n    bVar10 \u003d 0xfc \u003c uVar6;\n    bVar11 \u003d SBORROW4(uVar6,0xfd);\n    uVar3 \u003d uVar6 - 0xfd;\n    bVar9 \u003d uVar3 \u003d\u003d 0;\n    uVar4 \u003d uVar3;\n    if (bVar10 \u0026\u0026 !bVar9) {\n      bVar10 \u003d 0x6ff \u003c uVar3;\n      bVar11 \u003d SBORROW4(uVar3,0x700);\n      uVar4 \u003d uVar6 - 0x7fd;\n      bVar9 \u003d uVar3 \u003d\u003d 0x700;\n    }\n    if (!bVar10 || bVar9) {\n      bVar9 \u003d 0x7fffffff \u003c uVar7;\n      if (uVar7 \u003d\u003d 0x80000000) {\n        bVar9 \u003d (uVar8 \u003e\u003e 0x15 \u0026 1) !\u003d 0;\n      }\n      return CONCAT44(param_4 + uVar6 * 0x100000 + (uint)CARRY4(param_3,(uint)bVar9),param_3 + bVar9\n                     );\n    }\n  }\n  if (!bVar9 \u0026\u0026 (int)uVar4 \u003c 0 \u003d\u003d bVar11) {\n    return (ulonglong)(param_4 \u0026 0x80000000 | 0x7ff00000) \u003c\u003c 0x20;\n  }\n  bVar10 \u003d SCARRY4(uVar6,0x36);\n  bVar9 \u003d (int)(uVar6 + 0x36) \u003c 0;\n  bVar11 \u003d uVar6 \u003d\u003d 0xffffffca;\n  if (bVar11 || bVar9 !\u003d bVar10) {\n    param_3 \u003d 0;\n  }\n  if (bVar11 || bVar9 !\u003d bVar10) {\n    param_4 \u003d param_4 \u0026 0x80000000;\n  }\n  if (bVar11 || bVar9 !\u003d bVar10) {\n    return CONCAT44(param_4,param_3);\n  }\n  uVar4 \u003d -uVar6;\n  uVar3 \u003d uVar4 - 0x20;\n  if (0x1f \u003c (int)uVar4) {\n    uVar6 \u003d param_3 \u003e\u003e (uVar3 \u0026 0xff) | param_4 \u003c\u003c (0x20 - uVar3 \u0026 0xff);\n    uVar4 \u003d (param_4 \u003e\u003e (uVar3 \u0026 0xff) \u0026 ~((param_4 \u0026 0x80000000) \u003e\u003e (uVar3 \u0026 0xff))) -\n            ((int)uVar6 \u003e\u003e 0x1f);\n    if ((uVar7 | param_3 \u003c\u003c (0x20 - uVar3 \u0026 0xff) | uVar6 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar4 \u003d uVar4 \u0026 ~(uVar6 \u003e\u003e 0x1f);\n    }\n    return CONCAT44(param_4,uVar4) \u0026 0x80000000ffffffff;\n  }\n  iVar5 \u003d uVar4 - 0x14;\n  if (iVar5 \u003d\u003d 0 || iVar5 \u003c 0 !\u003d SCARRY4(uVar3,0xc)) {\n    uVar8 \u003d param_3 \u003c\u003c (uVar6 + 0x20 \u0026 0xff);\n    uVar3 \u003d param_3 \u003e\u003e (uVar4 \u0026 0xff) | param_4 \u003c\u003c (uVar6 + 0x20 \u0026 0xff);\n    uVar6 \u003d uVar3 + -((int)uVar8 \u003e\u003e 0x1f);\n    if ((uVar7 | uVar8 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar6 \u003d uVar6 \u0026 ~(uVar8 \u003e\u003e 0x1f);\n    }\n    return CONCAT44((param_4 \u0026 0x80000000) +\n                    ((param_4 \u0026 0x7fffffff) \u003e\u003e (uVar4 \u0026 0xff)) +\n                    (uint)CARRY4(uVar3,-((int)uVar8 \u003e\u003e 0x1f)),uVar6);\n  }\n  uVar4 \u003d 0xc - iVar5;\n  uVar6 \u003d param_3 \u003c\u003c (uVar4 \u0026 0xff);\n  uVar4 \u003d param_3 \u003e\u003e (0x20 - uVar4 \u0026 0xff) | param_4 \u003c\u003c (uVar4 \u0026 0xff);\n  uVar3 \u003d uVar4 + -((int)uVar6 \u003e\u003e 0x1f);\n  if ((uVar7 | uVar6 \u003c\u003c 1) \u003d\u003d 0) {\n    uVar3 \u003d uVar3 \u0026 ~(uVar6 \u003e\u003e 0x1f);\n  }\n  return CONCAT44((param_4 \u0026 0x80000000) + (uint)CARRY4(uVar4,-((int)uVar6 \u003e\u003e 0x1f)),uVar3);\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "scalbn",
        "atan",
        "__ieee754_sqrt",
        "MadgwickQuaternionUpdate",
        "__ieee754_asin",
        "MS5611_Update",
        "__ieee754_pow"
      ],
      "called": [
        "FUN_080006ac"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080006ac": {
      "entrypoint": "0x080006ac",
      "current_name": "FUN_080006ac",
      "code": "\nulonglong FUN_080006ac(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 \u003d in_r12 \u0026 param_4 \u003e\u003e 0x14;\n  if (unaff_r4 !\u003d in_r12 \u0026\u0026 uVar2 !\u003d in_r12) {\n    bVar4 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n    if (!bVar4) {\n      bVar4 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n    }\n    if (bVar4) {\n      return (ulonglong)((param_2 ^ param_4) \u0026 0x80000000) \u003c\u003c 0x20;\n    }\n    if (unaff_r4 \u003d\u003d 0) {\n      uVar3 \u003d param_2 \u0026 0x80000000;\n      do {\n        uVar1 \u003d param_1 \u0026 0x80000000;\n        param_1 \u003d param_1 \u003c\u003c 1;\n        param_2 \u003d param_2 * 2 + (uint)(uVar1 !\u003d 0);\n      } while ((param_2 \u0026 0x100000) \u003d\u003d 0);\n      param_2 \u003d param_2 | uVar3;\n      if (uVar2 !\u003d 0) {\n        return CONCAT44(param_2,param_1);\n      }\n    }\n    do {\n      uVar2 \u003d param_3 \u0026 0x80000000;\n      param_3 \u003d param_3 \u003c\u003c 1;\n      param_4 \u003d param_4 * 2 + (uint)(uVar2 !\u003d 0);\n    } while ((param_4 \u0026 0x100000) \u003d\u003d 0);\n    return CONCAT44(param_2,param_1);\n  }\n  bVar4 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n  if (bVar4) {\n    param_2 \u003d param_4;\n    param_1 \u003d param_3;\n  }\n  if (!bVar4) {\n    bVar4 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n  }\n  uVar3 \u003d param_2;\n  if (((!bVar4) \u0026\u0026 ((unaff_r4 !\u003d in_r12 || ((param_1 | param_2 \u003c\u003c 0xc) \u003d\u003d 0)))) \u0026\u0026\n     ((uVar2 !\u003d in_r12 || (param_1 \u003d param_3, uVar3 \u003d param_4, (param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0)))) {\n    return (ulonglong)((param_2 ^ param_4) \u0026 0x80000000 | 0x7ff00000) \u003c\u003c 0x20;\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n",
      "renaming": {},
      "calling": [
        "__muldf3"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000724": {
      "entrypoint": "0x08000724",
      "current_name": "FUN_08000724",
      "code": "\nulonglong FUN_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  undefined8 uVar17;\n  \n  uVar17 \u003d CONCAT44(param_2,param_1);\n  uVar13 \u003d 0x7ff;\n  uVar7 \u003d param_2 \u003e\u003e 0x14 \u0026 0x7ff;\n  bVar14 \u003d uVar7 \u003d\u003d 0;\n  if (!bVar14) {\n    unaff_r5 \u003d param_4 \u003e\u003e 0x14 \u0026 0x7ff;\n    bVar14 \u003d unaff_r5 \u003d\u003d 0;\n  }\n  if (!bVar14) {\n    bVar14 \u003d uVar7 \u003d\u003d 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 \u003d unaff_r5 \u003d\u003d 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 \u003d FUN_08000892();\n  }\n  uVar9 \u003d (uint)((ulonglong)uVar17 \u003e\u003e 0x20);\n  uVar11 \u003d (uint)uVar17;\n  iVar8 \u003d uVar7 - unaff_r5;\n  if ((param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0) {\n    uVar7 \u003d (uVar9 ^ param_4) \u0026 0x80000000 | uVar9 \u0026 0xfffff;\n    bVar16 \u003d SCARRY4(iVar8,uVar13 \u003e\u003e 1);\n    uVar9 \u003d iVar8 + (uVar13 \u003e\u003e 1);\n    bVar14 \u003d (int)uVar9 \u003c 0;\n    bVar15 \u003d uVar9 \u003d\u003d 0;\n    if (!bVar15 \u0026\u0026 bVar14 \u003d\u003d bVar16) {\n      bVar16 \u003d SBORROW4(uVar13,uVar9);\n      bVar14 \u003d (int)(uVar13 - uVar9) \u003c 0;\n      bVar15 \u003d uVar13 \u003d\u003d uVar9;\n    }\n    if (!bVar15 \u0026\u0026 bVar14 \u003d\u003d bVar16) {\n      uVar7 \u003d uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 \u0026\u0026 bVar14 \u003d\u003d bVar16) {\n      return CONCAT44(uVar7,uVar11);\n    }\n    uVar7 \u003d uVar7 | 0x100000;\n    uVar13 \u003d 0;\n    bVar15 \u003d SBORROW4(uVar9,1);\n    uVar9 \u003d uVar9 - 1;\n    bVar14 \u003d uVar9 \u003d\u003d 0;\n    uVar3 \u003d uVar9;\n  }\n  else {\n    uVar3 \u003d (param_4 \u003c\u003c 0xc) \u003e\u003e 4 | 0x10000000 | param_3 \u003e\u003e 0x18;\n    uVar13 \u003d param_3 \u003c\u003c 8;\n    uVar10 \u003d (uVar9 \u003c\u003c 0xc) \u003e\u003e 4 | 0x10000000 | uVar11 \u003e\u003e 0x18;\n    uVar11 \u003d uVar11 * 0x100;\n    uVar7 \u003d (uVar9 ^ param_4) \u0026 0x80000000;\n    bVar14 \u003d uVar3 \u003c\u003d uVar10;\n    if (uVar10 \u003d\u003d uVar3) {\n      bVar14 \u003d uVar13 \u003c\u003d uVar11;\n    }\n    iVar8 \u003d iVar8 + (uint)bVar14;\n    uVar9 \u003d iVar8 + 0x3fd;\n    if (bVar14 \u003d\u003d false) {\n      uVar3 \u003d uVar3 \u003e\u003e 1;\n      uVar13 \u003d (uint)((param_3 \u003e\u003e 0x18 \u0026 1) !\u003d 0) \u003c\u003c 0x1f | uVar13 \u003e\u003e 1;\n    }\n    uVar12 \u003d uVar11 - uVar13;\n    uVar10 \u003d (uVar10 - uVar3) - (uint)(uVar11 \u003c uVar13);\n    uVar4 \u003d uVar3 \u003e\u003e 1;\n    uVar1 \u003d (uint)((uVar3 \u0026 1) !\u003d 0) \u003c\u003c 0x1f | uVar13 \u003e\u003e 1;\n    uVar11 \u003d 0x100000;\n    uVar3 \u003d 0x80000;\n    while( true ) {\n      bVar14 \u003d uVar1 \u003c\u003d uVar12;\n      if (uVar4 \u003c uVar10 || uVar10 - uVar4 \u003c (uint)bVar14) {\n        uVar12 \u003d uVar12 - uVar1;\n        uVar11 \u003d uVar11 | uVar3;\n        uVar10 \u003d (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 \u003d uVar4 \u003e\u003e 1;\n      uVar1 \u003d (uint)((uVar4 \u0026 1) !\u003d 0) \u003c\u003c 0x1f | uVar1 \u003e\u003e 1;\n      bVar15 \u003d uVar1 \u003c\u003d uVar12;\n      bVar14 \u003d uVar10 - uVar5 \u003c (uint)bVar15;\n      uVar13 \u003d uVar10;\n      if (uVar5 \u003c uVar10 || bVar14) {\n        uVar12 \u003d uVar12 - uVar1;\n        uVar13 \u003d (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 \u003c uVar10 || bVar14) {\n        uVar11 \u003d uVar11 | uVar3 \u003e\u003e 1;\n      }\n      uVar10 \u003d uVar4 \u003e\u003e 2;\n      uVar2 \u003d (uint)((uVar5 \u0026 1) !\u003d 0) \u003c\u003c 0x1f | uVar1 \u003e\u003e 1;\n      bVar15 \u003d uVar2 \u003c\u003d uVar12;\n      bVar14 \u003d uVar13 - uVar10 \u003c (uint)bVar15;\n      uVar5 \u003d uVar13;\n      if (uVar10 \u003c uVar13 || bVar14) {\n        uVar12 \u003d uVar12 - uVar2;\n        uVar5 \u003d (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 \u003c uVar13 || bVar14) {\n        uVar11 \u003d uVar11 | uVar3 \u003e\u003e 2;\n      }\n      uVar6 \u003d uVar4 \u003e\u003e 3;\n      uVar1 \u003d (uint)((uVar10 \u0026 1) !\u003d 0) \u003c\u003c 0x1f | uVar2 \u003e\u003e 1;\n      bVar15 \u003d uVar1 \u003c\u003d uVar12;\n      bVar14 \u003d uVar5 - uVar6 \u003c (uint)bVar15;\n      uVar10 \u003d uVar5;\n      if (uVar6 \u003c uVar5 || bVar14) {\n        uVar12 \u003d uVar12 - uVar1;\n        uVar10 \u003d (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 \u003c uVar5 || bVar14) {\n        uVar11 \u003d uVar11 | uVar3 \u003e\u003e 3;\n      }\n      uVar13 \u003d uVar10 | uVar12;\n      if (uVar13 \u003d\u003d 0) break;\n      uVar10 \u003d uVar10 \u003c\u003c 4 | uVar12 \u003e\u003e 0x1c;\n      uVar12 \u003d uVar12 \u003c\u003c 4;\n      uVar4 \u003d uVar4 \u0026 0xfffffff8 | uVar1 \u003e\u003e 0x1d;\n      uVar1 \u003d (uVar2 \u003e\u003e 1) \u003c\u003c 3;\n      uVar3 \u003d uVar3 \u003e\u003e 4;\n      if (uVar3 \u003d\u003d 0) {\n        uVar6 \u003d uVar4;\n        if ((uVar7 \u0026 0x100000) !\u003d 0) goto LAB_08000842;\n        uVar7 \u003d uVar7 | uVar11;\n        uVar11 \u003d 0;\n        uVar3 \u003d 0x80000000;\n      }\n    }\n    if ((uVar7 \u0026 0x100000) \u003d\u003d 0) {\n      uVar7 \u003d uVar7 | uVar11;\n      uVar11 \u003d 0;\n    }\nLAB_08000842:\n    bVar16 \u003d 0xfc \u003c uVar9;\n    bVar15 \u003d SBORROW4(uVar9,0xfd);\n    uVar4 \u003d iVar8 + 0x300;\n    bVar14 \u003d uVar4 \u003d\u003d 0;\n    uVar3 \u003d uVar4;\n    if (bVar16 \u0026\u0026 !bVar14) {\n      bVar16 \u003d 0x6ff \u003c uVar4;\n      bVar15 \u003d SBORROW4(uVar4,0x700);\n      uVar3 \u003d iVar8 - 0x400;\n      bVar14 \u003d uVar4 \u003d\u003d 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 \u003d uVar6 \u003c\u003d uVar10;\n      if (uVar10 \u003d\u003d uVar6) {\n        bVar14 \u003d uVar1 \u003c\u003d uVar12;\n      }\n      if (uVar10 \u003d\u003d uVar6 \u0026\u0026 uVar12 \u003d\u003d uVar1) {\n        bVar14 \u003d (uVar11 \u0026 1) !\u003d 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 \u0026\u0026 (int)uVar3 \u003c 0 \u003d\u003d bVar15) {\n    return (ulonglong)(uVar7 \u0026 0x80000000 | 0x7ff00000) \u003c\u003c 0x20;\n  }\n  bVar16 \u003d SCARRY4(uVar9,0x36);\n  bVar14 \u003d (int)(uVar9 + 0x36) \u003c 0;\n  bVar15 \u003d uVar9 \u003d\u003d 0xffffffca;\n  if (bVar15 || bVar14 !\u003d bVar16) {\n    uVar11 \u003d 0;\n  }\n  if (bVar15 || bVar14 !\u003d bVar16) {\n    uVar7 \u003d uVar7 \u0026 0x80000000;\n  }\n  if (bVar15 || bVar14 !\u003d bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 \u003d -uVar9;\n  uVar10 \u003d uVar3 - 0x20;\n  if (0x1f \u003c (int)uVar3) {\n    uVar3 \u003d uVar11 \u003e\u003e (uVar10 \u0026 0xff) | uVar7 \u003c\u003c (0x20 - uVar10 \u0026 0xff);\n    uVar9 \u003d (uVar7 \u003e\u003e (uVar10 \u0026 0xff) \u0026 ~((uVar7 \u0026 0x80000000) \u003e\u003e (uVar10 \u0026 0xff))) -\n            ((int)uVar3 \u003e\u003e 0x1f);\n    if ((uVar13 | uVar11 \u003c\u003c (0x20 - uVar10 \u0026 0xff) | uVar3 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar9 \u003d uVar9 \u0026 ~(uVar3 \u003e\u003e 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) \u0026 0x80000000ffffffff;\n  }\n  iVar8 \u003d uVar3 - 0x14;\n  if (iVar8 !\u003d 0 \u0026\u0026 iVar8 \u003c 0 \u003d\u003d SCARRY4(uVar10,0xc)) {\n    uVar9 \u003d 0xc - iVar8;\n    uVar3 \u003d uVar11 \u003c\u003c (uVar9 \u0026 0xff);\n    uVar11 \u003d uVar11 \u003e\u003e (0x20 - uVar9 \u0026 0xff) | uVar7 \u003c\u003c (uVar9 \u0026 0xff);\n    uVar9 \u003d uVar11 + -((int)uVar3 \u003e\u003e 0x1f);\n    if ((uVar13 | uVar3 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar9 \u003d uVar9 \u0026 ~(uVar3 \u003e\u003e 0x1f);\n    }\n    return CONCAT44((uVar7 \u0026 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 \u003e\u003e 0x1f)),uVar9);\n  }\n  uVar10 \u003d uVar11 \u003c\u003c (uVar9 + 0x20 \u0026 0xff);\n  uVar11 \u003d uVar11 \u003e\u003e (uVar3 \u0026 0xff) | uVar7 \u003c\u003c (uVar9 + 0x20 \u0026 0xff);\n  uVar9 \u003d uVar11 + -((int)uVar10 \u003e\u003e 0x1f);\n  if ((uVar13 | uVar10 \u003c\u003c 1) \u003d\u003d 0) {\n    uVar9 \u003d uVar9 \u0026 ~(uVar10 \u003e\u003e 0x1f);\n  }\n  return CONCAT44((uVar7 \u0026 0x80000000) +\n                  ((uVar7 \u0026 0x7fffffff) \u003e\u003e (uVar3 \u0026 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 \u003e\u003e 0x1f)),uVar9);\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "__ieee754_atan2",
        "atan",
        "__ieee754_sqrt",
        "MadgwickQuaternionUpdate",
        "__ieee754_asin",
        "sqrt",
        "__ieee754_pow"
      ],
      "called": [
        "FUN_08000892"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000892": {
      "entrypoint": "0x08000892",
      "current_name": "FUN_08000892",
      "code": "\nulonglong FUN_08000892(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  \n  uVar2 \u003d in_r12 \u0026 param_4 \u003e\u003e 0x14;\n  uVar3 \u003d param_2;\n  if (unaff_r4 !\u003d in_r12 || uVar2 !\u003d in_r12) {\n    if (unaff_r4 \u003d\u003d in_r12) {\n      if (((param_1 | param_2 \u003c\u003c 0xc) \u003d\u003d 0) \u0026\u0026 (param_1 \u003d param_3, uVar3 \u003d param_4, uVar2 !\u003d in_r12)\n         ) {\nLAB_08000704:\n        return (ulonglong)((param_2 ^ param_4) \u0026 0x80000000 | 0x7ff00000) \u003c\u003c 0x20;\n      }\n    }\n    else if (uVar2 \u003d\u003d in_r12) {\n      param_1 \u003d param_3;\n      uVar3 \u003d param_4;\n      if ((param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0) {\nLAB_080006c8:\n        return (ulonglong)((param_2 ^ param_4) \u0026 0x80000000) \u003c\u003c 0x20;\n      }\n    }\n    else {\n      bVar4 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n      if (!bVar4) {\n        bVar4 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n      }\n      if (!bVar4) {\n        if (unaff_r4 \u003d\u003d 0) {\n          uVar3 \u003d param_2 \u0026 0x80000000;\n          do {\n            uVar1 \u003d param_1 \u0026 0x80000000;\n            param_1 \u003d param_1 \u003c\u003c 1;\n            param_2 \u003d param_2 * 2 + (uint)(uVar1 !\u003d 0);\n          } while ((param_2 \u0026 0x100000) \u003d\u003d 0);\n          param_2 \u003d param_2 | uVar3;\n          if (uVar2 !\u003d 0) {\n            return CONCAT44(param_2,param_1);\n          }\n        }\n        do {\n          uVar3 \u003d param_3 \u0026 0x80000000;\n          param_3 \u003d param_3 \u003c\u003c 1;\n          param_4 \u003d param_4 * 2 + (uint)(uVar3 !\u003d 0);\n        } while ((param_4 \u0026 0x100000) \u003d\u003d 0);\n        return CONCAT44(param_2,param_1);\n      }\n      if ((param_1 | param_2 \u003c\u003c 1) !\u003d 0) goto LAB_08000704;\n      if ((param_3 | param_4 \u003c\u003c 1) !\u003d 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(uVar3,param_1) | 0x7ff8000000000000;\n}\n\n",
      "renaming": {},
      "calling": [
        "__divdf3"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080008f4": {
      "entrypoint": "0x080008f4",
      "current_name": "FUN_080008f4",
      "code": "\nuint FUN_080008f4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 || (int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1) \u0026\u0026\n     ((((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_1 | param_2 \u003c\u003c 0xc) !\u003d 0)) ||\n      (((int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_3 | param_4 \u003c\u003c 0xc) !\u003d 0)))))) {\n    return 0xffffffff;\n  }\n  bVar2 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n  if (bVar2) {\n    bVar2 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n  }\n  if (!bVar2) {\n    bVar2 \u003d param_2 \u003d\u003d param_4;\n  }\n  if (bVar2) {\n    bVar2 \u003d param_1 \u003d\u003d param_3;\n  }\n  if (!bVar2) {\n    uVar1 \u003d param_2 ^ param_4;\n    bVar2 \u003d uVar1 \u003d\u003d 0;\n    if (-1 \u003c (int)uVar1) {\n      bVar2 \u003d param_2 \u003d\u003d param_4;\n    }\n    bVar3 \u003d -1 \u003c (int)uVar1 \u0026\u0026 param_4 \u003c\u003d param_2;\n    if (bVar2) {\n      bVar3 \u003d param_3 \u003c\u003d param_1;\n    }\n    param_4 \u003d (int)param_4 \u003e\u003e 0x1f;\n    if (!bVar3) {\n      param_4 \u003d ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080008fc": {
      "entrypoint": "0x080008fc",
      "current_name": "FUN_080008fc",
      "code": "\nuint FUN_080008fc(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 || (int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1) \u0026\u0026\n     ((((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_1 | param_2 \u003c\u003c 0xc) !\u003d 0)) ||\n      (((int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_3 | param_4 \u003c\u003c 0xc) !\u003d 0)))))) {\n    return 1;\n  }\n  bVar2 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n  if (bVar2) {\n    bVar2 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n  }\n  if (!bVar2) {\n    bVar2 \u003d param_2 \u003d\u003d param_4;\n  }\n  if (bVar2) {\n    bVar2 \u003d param_1 \u003d\u003d param_3;\n  }\n  if (!bVar2) {\n    uVar1 \u003d param_2 ^ param_4;\n    bVar2 \u003d uVar1 \u003d\u003d 0;\n    if (-1 \u003c (int)uVar1) {\n      bVar2 \u003d param_2 \u003d\u003d param_4;\n    }\n    bVar3 \u003d -1 \u003c (int)uVar1 \u0026\u0026 param_4 \u003c\u003d param_2;\n    if (bVar2) {\n      bVar3 \u003d param_3 \u003c\u003d param_1;\n    }\n    param_4 \u003d (int)param_4 \u003e\u003e 0x1f;\n    if (!bVar3) {\n      param_4 \u003d ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000904": {
      "entrypoint": "0x08000904",
      "current_name": "FUN_08000904",
      "code": "\nuint FUN_08000904(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  bool bVar2;\n  bool bVar3;\n  \n  if (((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 || (int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1) \u0026\u0026\n     ((((int)(param_2 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_1 | param_2 \u003c\u003c 0xc) !\u003d 0)) ||\n      (((int)(param_4 \u003c\u003c 1) \u003e\u003e 0x15 \u003d\u003d -1 \u0026\u0026 ((param_3 | param_4 \u003c\u003c 0xc) !\u003d 0)))))) {\n    return 1;\n  }\n  bVar2 \u003d (param_1 | param_2 \u003c\u003c 1) \u003d\u003d 0;\n  if (bVar2) {\n    bVar2 \u003d (param_3 | param_4 \u003c\u003c 1) \u003d\u003d 0;\n  }\n  if (!bVar2) {\n    bVar2 \u003d param_2 \u003d\u003d param_4;\n  }\n  if (bVar2) {\n    bVar2 \u003d param_1 \u003d\u003d param_3;\n  }\n  if (!bVar2) {\n    uVar1 \u003d param_2 ^ param_4;\n    bVar2 \u003d uVar1 \u003d\u003d 0;\n    if (-1 \u003c (int)uVar1) {\n      bVar2 \u003d param_2 \u003d\u003d param_4;\n    }\n    bVar3 \u003d -1 \u003c (int)uVar1 \u0026\u0026 param_4 \u003c\u003d param_2;\n    if (bVar2) {\n      bVar3 \u003d param_3 \u003c\u003d param_1;\n    }\n    param_4 \u003d (int)param_4 \u003e\u003e 0x1f;\n    if (!bVar3) {\n      param_4 \u003d ~param_4;\n    }\n    return param_4 | 1;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_cdcmpeq"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000980": {
      "entrypoint": "0x08000980",
      "current_name": "FUN_08000980",
      "code": "\nvoid FUN_08000980(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  __aeabi_cdcmpeq(param_3,param_4,param_1,param_2);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_dcmpge",
        "__aeabi_dcmpgt"
      ],
      "called": [
        "__aeabi_cdcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000990": {
      "entrypoint": "0x08000990",
      "current_name": "FUN_08000990",
      "code": "\nundefined4 FUN_08000990(undefined4 param_1)\n\n{\n  __nedf2();\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_dcmpeq",
        "__aeabi_cdrcmple",
        "__aeabi_dcmplt",
        "__aeabi_dcmple"
      ],
      "called": [
        "__nedf2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080009a0": {
      "entrypoint": "0x080009a0",
      "current_name": "FUN_080009a0",
      "code": "\nbool FUN_080009a0(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cdcmpeq();\n  return in_ZR !\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow"
      ],
      "called": [
        "__aeabi_cdcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080009b4": {
      "entrypoint": "0x080009b4",
      "current_name": "FUN_080009b4",
      "code": "\nbool FUN_080009b4(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdcmpeq();\n  return in_CY \u003d\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "sqrt"
      ],
      "called": [
        "__aeabi_cdcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080009c8": {
      "entrypoint": "0x080009c8",
      "current_name": "FUN_080009c8",
      "code": "\nbool FUN_080009c8(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_pow"
      ],
      "called": [
        "__aeabi_cdcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080009dc": {
      "entrypoint": "0x080009dc",
      "current_name": "FUN_080009dc",
      "code": "\nbool FUN_080009dc(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cdrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__aeabi_cdrcmple"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080009f0": {
      "entrypoint": "0x080009f0",
      "current_name": "FUN_080009f0",
      "code": "\nbool FUN_080009f0(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cdrcmple();\n  return in_CY \u003d\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "atan",
        "__ieee754_asin",
        "__ieee754_pow",
        "asin"
      ],
      "called": [
        "__aeabi_cdrcmple"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000a04": {
      "entrypoint": "0x08000a04",
      "current_name": "FUN_08000a04",
      "code": "\nundefined4 FUN_08000a04(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if ((((param_2 \u003c\u003c 1) \u003e\u003e 0x15 !\u003d -1) || ((param_1 | param_2 \u003c\u003c 0xc) \u003d\u003d 0)) \u0026\u0026\n     (((param_4 \u003c\u003c 1) \u003e\u003e 0x15 !\u003d -1 || ((param_3 | param_4 \u003c\u003c 0xc) \u003d\u003d 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "sqrt",
        "asin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000a30": {
      "entrypoint": "0x08000a30",
      "current_name": "FUN_08000a30",
      "code": "\nuint FUN_08000a30(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint in_r12;\n  bool bVar4;\n  bool bVar5;\n  \n  uVar2 \u003d param_2 * 2;\n  bVar5 \u003d uVar2 \u003c 0x70000000;\n  uVar3 \u003d uVar2 + 0x90000000;\n  uVar1 \u003d uVar3;\n  if (!bVar5) {\n    in_r12 \u003d uVar2 + 0x8fe00000;\n    uVar1 \u003d in_r12;\n  }\n  bVar4 \u003d uVar1 \u003d\u003d 0;\n  if (!bVar5 \u0026\u0026 uVar3 \u003e\u003d 0x200000) {\n    bVar4 \u003d in_r12 \u003d\u003d 0x1fc00000;\n  }\n  if (((bVar5 || uVar3 \u003c 0x200000) || 0x1fc00000 \u003c in_r12) || bVar4) {\n    if ((param_2 \u0026 0x40000000) !\u003d 0) {\n      if (((int)uVar2 \u003e\u003e 0x15 \u003d\u003d -1) \u0026\u0026 ((param_1 | param_2 \u003c\u003c 0xc) !\u003d 0)) {\n        return 0x7fc00000;\n      }\n      return param_2 \u0026 0x80000000 | 0x7f800000;\n    }\n    if ((int)(uVar2 + 0x92e00000) \u003c 0 !\u003d SCARRY4(uVar3,0x2e00000)) {\n      return param_2 \u0026 0x80000000;\n    }\n    uVar2 \u003d 0x18 - (uVar2 + 0x92e00000 \u003e\u003e 0x15);\n    uVar1 \u003d param_1 \u003e\u003e (uVar2 \u0026 0xff);\n    if (param_1 \u003c\u003c (0x20 - uVar2 \u0026 0xff) !\u003d 0) {\n      uVar1 \u003d uVar1 | 1;\n    }\n    uVar3 \u003d param_2 \u0026 0x1fffff | 0x100000;\n    param_1 \u003d uVar1 | uVar3 \u003c\u003c (0x20 - uVar2 \u0026 0xff);\n    uVar3 \u003d (uVar3 \u003e\u003e (uVar2 \u0026 0xff)) \u003c\u003c 1;\n  }\n  uVar1 \u003d (param_2 \u0026 0x80000000 | param_1 \u003e\u003e 0x1d) + uVar3 * 4 + (uint)(0x7fffffff \u003c param_1 * 8);\n  if (param_1 * 8 \u003d\u003d 0x80000000) {\n    uVar1 \u003d uVar1 \u0026 0xfffffffe;\n  }\n  return uVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000ad0": {
      "entrypoint": "0x08000ad0",
      "current_name": "FUN_08000ad0",
      "code": "\nvoid FUN_08000ad0(uint param_1)\n\n{\n  __addsf3(param_1 ^ 0x80000000);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__addsf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000ad8": {
      "entrypoint": "0x08000ad8",
      "current_name": "FUN_08000ad8",
      "code": "\nuint FUN_08000ad8(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  bool bVar8;\n  \n  uVar3 \u003d param_2 ^ 0x80000000;\n  uVar5 \u003d param_1 \u003c\u003c 1;\n  bVar8 \u003d uVar5 \u003d\u003d 0;\n  if (!bVar8) {\n    param_4 \u003d param_2 \u003c\u003c 1;\n    bVar8 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar8) {\n    bVar8 \u003d uVar5 \u003d\u003d param_4;\n  }\n  iVar1 \u003d (int)uVar5 \u003e\u003e 0x18;\n  if (!bVar8) {\n    bVar8 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (!bVar8) {\n    bVar8 \u003d (int)param_4 \u003e\u003e 0x18 \u003d\u003d -1;\n  }\n  if (bVar8) {\n    iVar2 \u003d (int)(param_2 \u003c\u003c 1) \u003e\u003e 0x18;\n    if (iVar1 \u003d\u003d -1 || iVar2 \u003d\u003d -1) {\n      uVar5 \u003d uVar3;\n      if (iVar1 \u003d\u003d -1) {\n        uVar5 \u003d param_1;\n      }\n      if (iVar1 !\u003d -1 || iVar2 !\u003d -1) {\n        uVar3 \u003d uVar5;\n      }\n      bVar8 \u003d (uVar5 \u0026 0x7fffff) \u003d\u003d 0;\n      if (bVar8) {\n        bVar8 \u003d (uVar3 \u0026 0x7fffff) \u003d\u003d 0;\n      }\n      if (bVar8) {\n        bVar8 \u003d uVar5 \u003d\u003d uVar3;\n      }\n      if (!bVar8) {\n        uVar5 \u003d uVar5 | 0x400000;\n      }\n      return uVar5;\n    }\n    if (((param_1 ^ uVar3) \u0026 0x7fffffff) !\u003d 0) {\n      if (uVar5 \u003d\u003d 0) {\n        param_1 \u003d uVar3;\n      }\n      return param_1;\n    }\n    if (param_1 !\u003d uVar3) {\n      return 0;\n    }\n    if ((uVar5 \u0026 0xff000000) \u003d\u003d 0) {\n      uVar3 \u003d param_1 \u003c\u003c 1;\n      if ((param_1 \u0026 0x80000000) !\u003d 0) {\n        uVar3 \u003d uVar3 | 0x80000000;\n      }\n      return uVar3;\n    }\n    if (uVar5 \u003c 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 \u003d param_1 \u0026 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar5 \u003d uVar5 \u003e\u003e 0x18;\n  param_4 \u003d param_4 \u003e\u003e 0x18;\n  uVar7 \u003d param_4 - uVar5;\n  bVar8 \u003d uVar7 !\u003d 0;\n  uVar6 \u003d uVar5;\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar6 \u003d uVar5 + uVar7;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar3 \u003d uVar3 ^ param_1;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    param_1 \u003d param_1 ^ uVar3;\n  }\n  if (bVar8 \u0026\u0026 uVar5 \u003c\u003d param_4) {\n    uVar3 \u003d uVar3 ^ param_1;\n  }\n  if (param_4 \u003c uVar5) {\n    uVar7 \u003d -uVar7;\n  }\n  if (0x19 \u003c uVar7) {\n    return param_1;\n  }\n  uVar5 \u003d param_1 \u0026 0xffffff | 0x800000;\n  if ((param_1 \u0026 0x80000000) !\u003d 0) {\n    uVar5 \u003d -uVar5;\n  }\n  uVar4 \u003d uVar3 \u0026 0xffffff | 0x800000;\n  if ((uVar3 \u0026 0x80000000) !\u003d 0) {\n    uVar4 \u003d -uVar4;\n  }\n  if (uVar6 \u003d\u003d uVar7) {\n    uVar4 \u003d uVar4 ^ 0x800000;\n    if (uVar6 \u003d\u003d 0) {\n      uVar5 \u003d uVar5 ^ 0x800000;\n      uVar6 \u003d 1;\n    }\n    else {\n      uVar7 \u003d uVar7 - 1;\n    }\n  }\n  uVar5 \u003d uVar5 + ((int)uVar4 \u003e\u003e (uVar7 \u0026 0xff));\n  uVar4 \u003d uVar4 \u003c\u003c (0x20 - uVar7 \u0026 0xff);\n  param_1 \u003d uVar5 \u0026 0x80000000;\n  if ((int)uVar5 \u003c 0) {\n    bVar8 \u003d uVar4 !\u003d 0;\n    uVar4 \u003d -uVar4;\n    uVar5 \u003d -uVar5 - (uint)bVar8;\n  }\n  if (uVar5 \u003c 0x800000) {\n    uVar3 \u003d uVar4 \u0026 0x80000000;\n    uVar4 \u003d uVar4 \u003c\u003c 1;\n    uVar5 \u003d uVar5 * 2 + (uint)(uVar3 !\u003d 0);\n    uVar3 \u003d uVar6 - 2;\n    if ((uVar5 \u0026 0x800000) \u003d\u003d 0) {\n      uVar7 \u003d LZCOUNT(uVar5) - 8;\n      uVar5 \u003d uVar5 \u003c\u003c (uVar7 \u0026 0xff);\n      if ((int)uVar3 \u003c (int)uVar7) {\n        uVar5 \u003d uVar5 \u003e\u003e (-(uVar3 - uVar7) \u0026 0xff);\n      }\n      else {\n        uVar5 \u003d uVar5 + (uVar3 - uVar7) * 0x800000;\n      }\n      return uVar5 | param_1;\n    }\n  }\n  else {\n    uVar3 \u003d uVar6 - 1;\n    if (0xffffff \u003c uVar5) {\n      uVar3 \u003d uVar5 \u0026 1;\n      uVar5 \u003d uVar5 \u003e\u003e 1;\n      uVar4 \u003d (uint)(uVar3 !\u003d 0) \u003c\u003c 0x1f | uVar4 \u003e\u003e 1;\n      uVar3 \u003d uVar6;\n      if (0xfd \u003c uVar6) goto LAB_08000c12;\n    }\n  }\n  uVar5 \u003d uVar5 + uVar3 * 0x800000 + (uint)(0x7fffffff \u003c uVar4);\n  if (uVar4 \u003d\u003d 0x80000000) {\n    uVar5 \u003d uVar5 \u0026 0xfffffffe;\n  }\n  return uVar5 | param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Compute",
        "lowPassFilter",
        "Motor_DistributeSpeed",
        "AK8963_ReadData",
        "MadgwickQuaternionUpdate",
        "MPU9250_ReadGyroData",
        "AHRS_GetYaw"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000adc": {
      "entrypoint": "0x08000adc",
      "current_name": "FUN_08000adc",
      "code": "\nuint FUN_08000adc(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  bool bVar7;\n  \n  uVar4 \u003d param_1 \u003c\u003c 1;\n  bVar7 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar7) {\n    param_4 \u003d param_2 \u003c\u003c 1;\n    bVar7 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar7) {\n    bVar7 \u003d uVar4 \u003d\u003d param_4;\n  }\n  iVar1 \u003d (int)uVar4 \u003e\u003e 0x18;\n  if (!bVar7) {\n    bVar7 \u003d iVar1 \u003d\u003d -1;\n  }\n  if (!bVar7) {\n    bVar7 \u003d (int)param_4 \u003e\u003e 0x18 \u003d\u003d -1;\n  }\n  if (bVar7) {\n    iVar2 \u003d (int)(param_2 \u003c\u003c 1) \u003e\u003e 0x18;\n    if (iVar1 \u003d\u003d -1 || iVar2 \u003d\u003d -1) {\n      uVar4 \u003d param_2;\n      if (iVar1 \u003d\u003d -1) {\n        uVar4 \u003d param_1;\n      }\n      if (iVar1 !\u003d -1 || iVar2 !\u003d -1) {\n        param_2 \u003d uVar4;\n      }\n      bVar7 \u003d (uVar4 \u0026 0x7fffff) \u003d\u003d 0;\n      if (bVar7) {\n        bVar7 \u003d (param_2 \u0026 0x7fffff) \u003d\u003d 0;\n      }\n      if (bVar7) {\n        bVar7 \u003d uVar4 \u003d\u003d param_2;\n      }\n      if (!bVar7) {\n        uVar4 \u003d uVar4 | 0x400000;\n      }\n      return uVar4;\n    }\n    if (((param_1 ^ param_2) \u0026 0x7fffffff) !\u003d 0) {\n      if (uVar4 \u003d\u003d 0) {\n        param_1 \u003d param_2;\n      }\n      return param_1;\n    }\n    if (param_1 !\u003d param_2) {\n      return 0;\n    }\n    if ((uVar4 \u0026 0xff000000) \u003d\u003d 0) {\n      uVar4 \u003d param_1 \u003c\u003c 1;\n      if ((param_1 \u0026 0x80000000) !\u003d 0) {\n        uVar4 \u003d uVar4 | 0x80000000;\n      }\n      return uVar4;\n    }\n    if (uVar4 \u003c 0xfe000000) {\n      return param_1 + 0x800000;\n    }\n    param_1 \u003d param_1 \u0026 0x80000000;\nLAB_08000c12:\n    return param_1 | 0x7f800000;\n  }\n  uVar4 \u003d uVar4 \u003e\u003e 0x18;\n  param_4 \u003d param_4 \u003e\u003e 0x18;\n  uVar6 \u003d param_4 - uVar4;\n  bVar7 \u003d uVar6 !\u003d 0;\n  uVar5 \u003d uVar4;\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    uVar5 \u003d uVar4 + uVar6;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_2 \u003d param_2 ^ param_1;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_1 \u003d param_1 ^ param_2;\n  }\n  if (bVar7 \u0026\u0026 uVar4 \u003c\u003d param_4) {\n    param_2 \u003d param_2 ^ param_1;\n  }\n  if (param_4 \u003c uVar4) {\n    uVar6 \u003d -uVar6;\n  }\n  if (0x19 \u003c uVar6) {\n    return param_1;\n  }\n  uVar4 \u003d param_1 \u0026 0xffffff | 0x800000;\n  if ((param_1 \u0026 0x80000000) !\u003d 0) {\n    uVar4 \u003d -uVar4;\n  }\n  uVar3 \u003d param_2 \u0026 0xffffff | 0x800000;\n  if ((param_2 \u0026 0x80000000) !\u003d 0) {\n    uVar3 \u003d -uVar3;\n  }\n  if (uVar5 \u003d\u003d uVar6) {\n    uVar3 \u003d uVar3 ^ 0x800000;\n    if (uVar5 \u003d\u003d 0) {\n      uVar4 \u003d uVar4 ^ 0x800000;\n      uVar5 \u003d 1;\n    }\n    else {\n      uVar6 \u003d uVar6 - 1;\n    }\n  }\n  uVar4 \u003d uVar4 + ((int)uVar3 \u003e\u003e (uVar6 \u0026 0xff));\n  uVar3 \u003d uVar3 \u003c\u003c (0x20 - uVar6 \u0026 0xff);\n  param_1 \u003d uVar4 \u0026 0x80000000;\n  if ((int)uVar4 \u003c 0) {\n    bVar7 \u003d uVar3 !\u003d 0;\n    uVar3 \u003d -uVar3;\n    uVar4 \u003d -uVar4 - (uint)bVar7;\n  }\n  if (uVar4 \u003c 0x800000) {\n    uVar6 \u003d uVar3 \u0026 0x80000000;\n    uVar3 \u003d uVar3 \u003c\u003c 1;\n    uVar4 \u003d uVar4 * 2 + (uint)(uVar6 !\u003d 0);\n    uVar6 \u003d uVar5 - 2;\n    if ((uVar4 \u0026 0x800000) \u003d\u003d 0) {\n      uVar5 \u003d LZCOUNT(uVar4) - 8;\n      uVar4 \u003d uVar4 \u003c\u003c (uVar5 \u0026 0xff);\n      if ((int)uVar6 \u003c (int)uVar5) {\n        uVar4 \u003d uVar4 \u003e\u003e (-(uVar6 - uVar5) \u0026 0xff);\n      }\n      else {\n        uVar4 \u003d uVar4 + (uVar6 - uVar5) * 0x800000;\n      }\n      return uVar4 | param_1;\n    }\n  }\n  else {\n    uVar6 \u003d uVar5 - 1;\n    if (0xffffff \u003c uVar4) {\n      uVar6 \u003d uVar4 \u0026 1;\n      uVar4 \u003d uVar4 \u003e\u003e 1;\n      uVar3 \u003d (uint)(uVar6 !\u003d 0) \u003c\u003c 0x1f | uVar3 \u003e\u003e 1;\n      uVar6 \u003d uVar5;\n      if (0xfd \u003c uVar5) goto LAB_08000c12;\n    }\n  }\n  uVar4 \u003d uVar4 + uVar6 * 0x800000 + (uint)(0x7fffffff \u003c uVar3);\n  if (uVar3 \u003d\u003d 0x80000000) {\n    uVar4 \u003d uVar4 \u0026 0xfffffffe;\n  }\n  return uVar4 | param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "PID_Compute",
        "lowPassFilter",
        "Motor_DistributeSpeed",
        "AK8963_Init",
        "MadgwickQuaternionUpdate",
        "__aeabi_frsub",
        "AHRS_GetYaw",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000c3c": {
      "entrypoint": "0x08000c3c",
      "current_name": "FUN_08000c3c",
      "code": "\nuint FUN_08000c3c(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  \n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar1 \u003d LZCOUNT(param_1);\n  uVar2 \u003d uVar1 - 8;\n  iVar3 \u003d uVar2 * -0x800000 + 0x4a800000;\n  if (7 \u003c uVar1) {\n    uVar4 \u003d 0 \u003c\u003c (uVar2 \u0026 0xff);\n    uVar1 \u003d iVar3 + (param_1 \u003c\u003c (uVar2 \u0026 0xff)) +\n            (0U \u003e\u003e (0x20 - uVar2 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar4);\n    if (uVar4 \u003d\u003d 0x80000000) {\n      uVar1 \u003d uVar1 \u0026 0xfffffffe;\n    }\n    return uVar1;\n  }\n  uVar2 \u003d param_1 \u003c\u003c uVar1 + 0x18;\n  uVar1 \u003d iVar3 + ((param_1 \u003e\u003e (0x20 - (uVar1 + 0x18) \u0026 0xff)) - ((int)uVar2 \u003e\u003e 0x1f));\n  if ((uVar2 \u0026 0x7fffffff) \u003d\u003d 0) {\n    uVar1 \u003d uVar1 \u0026 ~(uVar2 \u003e\u003e 0x1f);\n  }\n  return uVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000c44": {
      "entrypoint": "0x08000c44",
      "current_name": "FUN_08000c44",
      "code": "\nuint FUN_08000c44(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  \n  uVar3 \u003d param_1 \u0026 0x80000000;\n  if ((int)uVar3 \u003c 0) {\n    param_1 \u003d -param_1;\n  }\n  if (param_1 \u003d\u003d 0) {\n    return 0;\n  }\n  uVar1 \u003d LZCOUNT(param_1);\n  uVar2 \u003d uVar1 - 8;\n  iVar4 \u003d ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 \u003c uVar1) {\n    uVar1 \u003d 0 \u003c\u003c (uVar2 \u0026 0xff);\n    uVar3 \u003d iVar4 + (param_1 \u003c\u003c (uVar2 \u0026 0xff)) +\n            (0U \u003e\u003e (0x20 - uVar2 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar1);\n    if (uVar1 \u003d\u003d 0x80000000) {\n      uVar3 \u003d uVar3 \u0026 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 \u003d param_1 \u003c\u003c uVar1 + 0x18;\n  uVar3 \u003d iVar4 + ((param_1 \u003e\u003e (0x20 - (uVar1 + 0x18) \u0026 0xff)) - ((int)uVar2 \u003e\u003e 0x1f));\n  if ((uVar2 \u0026 0x7fffffff) \u003d\u003d 0) {\n    uVar3 \u003d uVar3 \u0026 ~(uVar2 \u003e\u003e 0x1f);\n  }\n  return uVar3;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Compute",
        "AK8963_Init",
        "MPU9250_ReadAccelData",
        "AK8963_ReadData",
        "MPU9250_ReadGyroData",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000c60": {
      "entrypoint": "0x08000c60",
      "current_name": "FUN_08000c60",
      "code": "\nuint FUN_08000c60(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  \n  if ((param_1 | param_2) \u003d\u003d 0) {\n    return param_1;\n  }\n  uVar1 \u003d param_1;\n  uVar2 \u003d param_2;\n  if (param_2 \u003d\u003d 0) {\n    uVar1 \u003d 0;\n    uVar2 \u003d param_1;\n  }\n  iVar5 \u003d 0x5b000000;\n  if (param_2 \u003d\u003d 0) {\n    iVar5 \u003d 0x4b000000;\n  }\n  uVar3 \u003d LZCOUNT(uVar2);\n  uVar4 \u003d uVar3 - 8;\n  iVar5 \u003d iVar5 + -0x800000 + uVar4 * -0x800000;\n  if (uVar3 \u003c 8) {\n    uVar4 \u003d uVar2 \u003c\u003c uVar3 + 0x18;\n    uVar2 \u003d iVar5 + ((uVar2 \u003e\u003e (0x20 - (uVar3 + 0x18) \u0026 0xff)) - ((int)uVar4 \u003e\u003e 0x1f));\n    if ((uVar1 | uVar4 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar2 \u003d uVar2 \u0026 ~(uVar4 \u003e\u003e 0x1f);\n    }\n    return uVar2;\n  }\n  uVar3 \u003d uVar1 \u003c\u003c (uVar4 \u0026 0xff);\n  uVar2 \u003d iVar5 + (uVar2 \u003c\u003c (uVar4 \u0026 0xff)) +\n          (uVar1 \u003e\u003e (0x20 - uVar4 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar3);\n  if (uVar3 \u003d\u003d 0x80000000) {\n    uVar2 \u003d uVar2 \u0026 0xfffffffe;\n  }\n  return uVar2;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000c70": {
      "entrypoint": "0x08000c70",
      "current_name": "FUN_08000c70",
      "code": "\nuint FUN_08000c70(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  int iVar6;\n  bool bVar7;\n  \n  if ((param_1 | param_2) \u003d\u003d 0) {\n    return param_1;\n  }\n  uVar5 \u003d param_2 \u0026 0x80000000;\n  if ((int)uVar5 \u003c 0) {\n    bVar7 \u003d param_1 !\u003d 0;\n    param_1 \u003d -param_1;\n    param_2 \u003d -param_2 - (uint)bVar7;\n  }\n  uVar2 \u003d param_1;\n  uVar1 \u003d param_2;\n  if (param_2 \u003d\u003d 0) {\n    uVar2 \u003d 0;\n    uVar1 \u003d param_1;\n  }\n  uVar5 \u003d uVar5 | 0x5b000000;\n  if (param_2 \u003d\u003d 0) {\n    uVar5 \u003d uVar5 + 0xf0000000;\n  }\n  uVar3 \u003d LZCOUNT(uVar1);\n  uVar4 \u003d uVar3 - 8;\n  iVar6 \u003d (uVar5 - 0x800000) + uVar4 * -0x800000;\n  if (uVar3 \u003c 8) {\n    uVar4 \u003d uVar1 \u003c\u003c uVar3 + 0x18;\n    uVar5 \u003d iVar6 + ((uVar1 \u003e\u003e (0x20 - (uVar3 + 0x18) \u0026 0xff)) - ((int)uVar4 \u003e\u003e 0x1f));\n    if ((uVar2 | uVar4 \u003c\u003c 1) \u003d\u003d 0) {\n      uVar5 \u003d uVar5 \u0026 ~(uVar4 \u003e\u003e 0x1f);\n    }\n    return uVar5;\n  }\n  uVar3 \u003d uVar2 \u003c\u003c (uVar4 \u0026 0xff);\n  uVar5 \u003d iVar6 + (uVar1 \u003c\u003c (uVar4 \u0026 0xff)) +\n          (uVar2 \u003e\u003e (0x20 - uVar4 \u0026 0xff)) + (uint)(0x7fffffff \u003c uVar3);\n  if (uVar3 \u003d\u003d 0x80000000) {\n    uVar5 \u003d uVar5 \u0026 0xfffffffe;\n  }\n  return uVar5;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000cec": {
      "entrypoint": "0x08000cec",
      "current_name": "FUN_08000cec",
      "code": "\nuint FUN_08000cec(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  longlong lVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar3 \u003d param_1 \u003e\u003e 0x17 \u0026 0xff;\n  bVar9 \u003d uVar3 \u003d\u003d 0;\n  if (!bVar9) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    bVar9 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar9) {\n    bVar9 \u003d uVar3 \u003d\u003d 0xff;\n  }\n  if (!bVar9) {\n    bVar9 \u003d param_4 \u003d\u003d 0xff;\n  }\n  if (bVar9) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    if (uVar3 \u003d\u003d 0xff || param_4 \u003d\u003d 0xff) {\n      bVar9 \u003d param_1 \u003d\u003d 0 || param_1 \u003d\u003d 0x80000000;\n      uVar2 \u003d param_2;\n      if (param_1 !\u003d 0 \u0026\u0026 param_1 !\u003d 0x80000000) {\n        bVar9 \u003d param_2 \u003d\u003d 0;\n        uVar2 \u003d param_1;\n      }\n      if (!bVar9) {\n        bVar9 \u003d param_2 \u003d\u003d 0x80000000;\n      }\n      uVar8 \u003d uVar2;\n      if (((bVar9) || ((uVar3 \u003d\u003d 0xff \u0026\u0026 ((uVar2 \u0026 0x7fffff) !\u003d 0)))) ||\n         ((param_4 \u003d\u003d 0xff \u0026\u0026 (uVar8 \u003d param_2, (param_2 \u0026 0x7fffff) !\u003d 0)))) {\n        return uVar8 | 0x7fc00000;\n      }\n      uVar2 \u003d uVar2 ^ param_2;\n      goto LAB_08000e3c;\n    }\n    bVar9 \u003d (param_1 \u0026 0x7fffffff) \u003d\u003d 0;\n    if (!bVar9) {\n      bVar9 \u003d (param_2 \u0026 0x7fffffff) \u003d\u003d 0;\n    }\n    if (bVar9) {\n      return (param_1 ^ param_2) \u0026 0x80000000;\n    }\n    bVar9 \u003d uVar3 \u003d\u003d 0;\n    uVar2 \u003d param_1 \u0026 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_1 \u003d param_1 \u003c\u003c 1;\n        bVar9 \u003d (param_1 \u0026 0x800000) \u003d\u003d 0;\n      }\n      if (!bVar9) break;\n      uVar3 \u003d uVar3 - 1;\n    }\n    param_1 \u003d param_1 | uVar2;\n    bVar9 \u003d param_4 \u003d\u003d 0;\n    uVar2 \u003d param_2 \u0026 0x80000000;\n    while( true ) {\n      if (bVar9) {\n        param_2 \u003d param_2 \u003c\u003c 1;\n        bVar9 \u003d (param_2 \u0026 0x800000) \u003d\u003d 0;\n      }\n      if (!bVar9) break;\n      param_4 \u003d param_4 - 1;\n    }\n    param_2 \u003d param_2 | uVar2;\n  }\n  iVar4 \u003d uVar3 + param_4;\n  uVar8 \u003d param_1 ^ param_2;\n  uVar3 \u003d param_1 \u003c\u003c 9;\n  bVar9 \u003d uVar3 \u003d\u003d 0;\n  if (!bVar9) {\n    param_2 \u003d param_2 \u003c\u003c 9;\n    bVar9 \u003d param_2 \u003d\u003d 0;\n  }\n  if (bVar9) {\n    if (uVar3 \u003d\u003d 0) {\n      param_2 \u003d param_2 \u003c\u003c 9;\n    }\n    uVar2 \u003d uVar8 \u0026 0x80000000 | param_1 \u0026 0x7fffff | param_2 \u003e\u003e 9;\n    bVar10 \u003d SBORROW4(iVar4,0x7f);\n    iVar5 \u003d iVar4 + -0x7f;\n    bVar9 \u003d iVar5 \u003d\u003d 0;\n    iVar7 \u003d iVar5;\n    if (!bVar9 \u0026\u0026 0x7e \u003c iVar4) {\n      bVar10 \u003d SBORROW4(0xff,iVar5);\n      iVar7 \u003d 0xff - iVar5;\n      bVar9 \u003d iVar5 \u003d\u003d 0xff;\n    }\n    if (!bVar9 \u0026\u0026 iVar7 \u003c 0 \u003d\u003d bVar10) {\n      uVar2 \u003d uVar2 | iVar5 * 0x800000;\n    }\n    if (!bVar9 \u0026\u0026 iVar7 \u003c 0 \u003d\u003d bVar10) {\n      return uVar2;\n    }\n    uVar2 \u003d uVar2 | 0x800000;\n    uVar6 \u003d 0;\n    bVar10 \u003d SBORROW4(iVar5,1);\n    uVar8 \u003d iVar4 - 0x80;\n    bVar9 \u003d uVar8 \u003d\u003d 0;\n    uVar3 \u003d uVar8;\n  }\n  else {\n    lVar1 \u003d (ulonglong)(uVar3 \u003e\u003e 5 | 0x8000000) * (ulonglong)(param_2 \u003e\u003e 5 | 0x8000000);\n    uVar6 \u003d (uint)lVar1;\n    uVar2 \u003d (uint)((ulonglong)lVar1 \u003e\u003e 0x20);\n    bVar9 \u003d uVar2 \u003c 0x800000;\n    if (bVar9) {\n      uVar2 \u003d uVar2 \u003c\u003c 1;\n    }\n    if (bVar9) {\n      uVar2 \u003d uVar2 | uVar6 \u003e\u003e 0x1f;\n      uVar6 \u003d uVar6 \u003c\u003c 1;\n    }\n    uVar2 \u003d uVar8 \u0026 0x80000000 | uVar2;\n    uVar8 \u003d (iVar4 + -0x7f) - (uint)bVar9;\n    bVar10 \u003d SBORROW4(uVar8,0xfd);\n    bVar9 \u003d uVar8 \u003d\u003d 0xfd;\n    uVar3 \u003d uVar8 - 0xfd;\n    if (uVar8 \u003c 0xfe) {\n      uVar2 \u003d uVar2 + uVar8 * 0x800000 + (uint)(0x7fffffff \u003c uVar6);\n      if (uVar6 \u003d\u003d 0x80000000) {\n        uVar2 \u003d uVar2 \u0026 0xfffffffe;\n      }\n      return uVar2;\n    }\n  }\n  if (bVar9 || (int)uVar3 \u003c 0 !\u003d bVar10) {\n    bVar9 \u003d (int)(uVar8 + 0x19) \u003c 0;\n    if (uVar8 \u003d\u003d 0xffffffe7 || bVar9 !\u003d SCARRY4(uVar8,0x19)) {\n      uVar2 \u003d uVar2 \u0026 0x80000000;\n    }\n    if (uVar8 !\u003d 0xffffffe7 \u0026\u0026 bVar9 \u003d\u003d SCARRY4(uVar8,0x19)) {\n      uVar3 \u003d (uVar2 \u003c\u003c 1) \u003e\u003e (-uVar8 \u0026 0xff);\n      uVar8 \u003d uVar2 \u003c\u003c (uVar8 + 0x20 \u0026 0xff);\n      uVar3 \u003d ((uint)((uVar2 \u0026 0x80000000) !\u003d 0) \u003c\u003c 0x1f | uVar3 \u003e\u003e 1) + (uint)((byte)uVar3 \u0026 1);\n      if ((uVar6 | uVar8 \u003c\u003c 1) \u003d\u003d 0) {\n        uVar3 \u003d uVar3 \u0026 ~(uVar8 \u003e\u003e 0x1f);\n      }\n      return uVar3;\n    }\n    return uVar2;\n  }\nLAB_08000e3c:\n  return uVar2 \u0026 0x80000000 | 0x7f800000;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "PID_Compute",
        "lowPassFilter",
        "AK8963_Init",
        "AHRS_ComputeAngles",
        "MPU9250_ReadAccelData",
        "AK8963_ReadData",
        "MadgwickQuaternionUpdate",
        "MPU9250_ReadGyroData",
        "PID_UpdateAltitude"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000e54": {
      "entrypoint": "0x08000e54",
      "current_name": "FUN_08000e54",
      "code": "\nuint FUN_08000e54(uint param_1,uint param_2,undefined4 param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  uint uVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  uVar2 \u003d param_1 \u003e\u003e 0x17 \u0026 0xff;\n  bVar7 \u003d uVar2 \u003d\u003d 0;\n  if (!bVar7) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    bVar7 \u003d param_4 \u003d\u003d 0;\n  }\n  if (!bVar7) {\n    bVar7 \u003d uVar2 \u003d\u003d 0xff;\n  }\n  if (!bVar7) {\n    bVar7 \u003d param_4 \u003d\u003d 0xff;\n  }\n  if (bVar7) {\n    param_4 \u003d param_2 \u003e\u003e 0x17 \u0026 0xff;\n    uVar6 \u003d param_1;\n    if (uVar2 \u003d\u003d 0xff) {\n      if (((param_1 \u0026 0x7fffff) !\u003d 0) || (uVar6 \u003d param_2, param_4 \u003d\u003d 0xff)) {\nLAB_08000e4a:\n        return uVar6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (param_4 \u003d\u003d 0xff) {\n        uVar6 \u003d param_2;\n        if ((param_2 \u0026 0x7fffff) \u003d\u003d 0) {\nLAB_08000e00:\n          return (param_1 ^ param_2) \u0026 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      bVar7 \u003d (param_1 \u0026 0x7fffffff) \u003d\u003d 0;\n      if (!bVar7) {\n        bVar7 \u003d (param_2 \u0026 0x7fffffff) \u003d\u003d 0;\n      }\n      if (!bVar7) {\n        bVar7 \u003d uVar2 \u003d\u003d 0;\n        uVar6 \u003d param_1 \u0026 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_1 \u003d param_1 \u003c\u003c 1;\n            bVar7 \u003d (param_1 \u0026 0x800000) \u003d\u003d 0;\n          }\n          if (!bVar7) break;\n          uVar2 \u003d uVar2 - 1;\n        }\n        param_1 \u003d param_1 | uVar6;\n        bVar7 \u003d param_4 \u003d\u003d 0;\n        uVar6 \u003d param_2 \u0026 0x80000000;\n        while( true ) {\n          if (bVar7) {\n            param_2 \u003d param_2 \u003c\u003c 1;\n            bVar7 \u003d (param_2 \u0026 0x800000) \u003d\u003d 0;\n          }\n          if (!bVar7) break;\n          param_4 \u003d param_4 - 1;\n        }\n        param_2 \u003d param_2 | uVar6;\n        goto LAB_08000e6c;\n      }\n      if ((param_1 \u0026 0x7fffffff) \u003d\u003d 0) {\n        if ((param_2 \u0026 0x7fffffff) !\u003d 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    param_1 \u003d param_1 ^ param_2;\n  }\n  else {\nLAB_08000e6c:\n    iVar3 \u003d uVar2 - param_4;\n    if (param_2 \u003c\u003c 9 \u003d\u003d 0) {\n      param_1 \u003d (param_1 ^ param_2) \u0026 0x80000000 | param_1 \u0026 0x7fffff;\n      bVar9 \u003d SCARRY4(iVar3,0x7f);\n      iVar5 \u003d iVar3 + 0x7f;\n      bVar7 \u003d iVar5 \u003c 0;\n      bVar8 \u003d iVar5 \u003d\u003d 0;\n      if (!bVar8 \u0026\u0026 bVar7 \u003d\u003d bVar9) {\n        bVar9 \u003d SBORROW4(0xff,iVar5);\n        bVar7 \u003d 0xff - iVar5 \u003c 0;\n        bVar8 \u003d iVar5 \u003d\u003d 0xff;\n      }\n      if (!bVar8 \u0026\u0026 bVar7 \u003d\u003d bVar9) {\n        param_1 \u003d param_1 | iVar5 * 0x800000;\n      }\n      if (!bVar8 \u0026\u0026 bVar7 \u003d\u003d bVar9) {\n        return param_1;\n      }\n      param_1 \u003d param_1 | 0x800000;\n      uVar2 \u003d 0;\n      bVar8 \u003d SBORROW4(iVar5,1);\n      uVar4 \u003d iVar3 + 0x7e;\n      bVar7 \u003d uVar4 \u003d\u003d 0;\n      uVar6 \u003d uVar4;\n    }\n    else {\n      uVar1 \u003d (param_2 \u003c\u003c 9) \u003e\u003e 4 | 0x10000000;\n      uVar2 \u003d (param_1 \u003c\u003c 9) \u003e\u003e 4 | 0x10000000;\n      param_1 \u003d (param_1 ^ param_2) \u0026 0x80000000;\n      bVar7 \u003d uVar1 \u003c\u003d uVar2;\n      if (!bVar7) {\n        uVar2 \u003d uVar2 \u003c\u003c 1;\n      }\n      uVar4 \u003d iVar3 + 0x7d + (uint)bVar7;\n      uVar6 \u003d 0x800000;\n      do {\n        if (uVar1 \u003c\u003d uVar2) {\n          uVar2 \u003d uVar2 - uVar1;\n          param_1 \u003d param_1 | uVar6;\n        }\n        bVar7 \u003d uVar1 \u003e\u003e 1 \u003c\u003d uVar2;\n        if (bVar7) {\n          uVar2 \u003d uVar2 - (uVar1 \u003e\u003e 1);\n        }\n        if (bVar7) {\n          param_1 \u003d param_1 | uVar6 \u003e\u003e 1;\n        }\n        bVar7 \u003d uVar1 \u003e\u003e 2 \u003c\u003d uVar2;\n        if (bVar7) {\n          uVar2 \u003d uVar2 - (uVar1 \u003e\u003e 2);\n        }\n        if (bVar7) {\n          param_1 \u003d param_1 | uVar6 \u003e\u003e 2;\n        }\n        bVar7 \u003d uVar1 \u003e\u003e 3 \u003c\u003d uVar2;\n        if (bVar7) {\n          uVar2 \u003d uVar2 - (uVar1 \u003e\u003e 3);\n        }\n        if (bVar7) {\n          param_1 \u003d param_1 | uVar6 \u003e\u003e 3;\n        }\n        uVar2 \u003d uVar2 * 0x10;\n        bVar7 \u003d uVar2 \u003d\u003d 0;\n        if (!bVar7) {\n          uVar6 \u003d uVar6 \u003e\u003e 4;\n          bVar7 \u003d uVar6 \u003d\u003d 0;\n        }\n      } while (!bVar7);\n      bVar8 \u003d SBORROW4(uVar4,0xfd);\n      bVar7 \u003d uVar4 \u003d\u003d 0xfd;\n      uVar6 \u003d uVar4 - 0xfd;\n      if (uVar4 \u003c 0xfe) {\n        param_1 \u003d param_1 + uVar4 * 0x800000 + (uint)(uVar1 \u003c\u003d uVar2);\n        if (uVar2 - uVar1 \u003d\u003d 0) {\n          param_1 \u003d param_1 \u0026 0xfffffffe;\n        }\n        return param_1;\n      }\n    }\n    if (bVar7 || (int)uVar6 \u003c 0 !\u003d bVar8) {\n      bVar7 \u003d (int)(uVar4 + 0x19) \u003c 0;\n      if (uVar4 \u003d\u003d 0xffffffe7 || bVar7 !\u003d SCARRY4(uVar4,0x19)) {\n        param_1 \u003d param_1 \u0026 0x80000000;\n      }\n      if (uVar4 \u003d\u003d 0xffffffe7 || bVar7 !\u003d SCARRY4(uVar4,0x19)) {\n        return param_1;\n      }\n      uVar6 \u003d (param_1 \u003c\u003c 1) \u003e\u003e (-uVar4 \u0026 0xff);\n      uVar4 \u003d param_1 \u003c\u003c (uVar4 + 0x20 \u0026 0xff);\n      uVar6 \u003d ((uint)((param_1 \u0026 0x80000000) !\u003d 0) \u003c\u003c 0x1f | uVar6 \u003e\u003e 1) + (uint)((byte)uVar6 \u0026 1);\n      if ((uVar2 | uVar4 \u003c\u003c 1) \u003d\u003d 0) {\n        uVar6 \u003d uVar6 \u0026 ~(uVar4 \u003e\u003e 0x1f);\n      }\n      return uVar6;\n    }\n  }\n  return param_1 \u0026 0x80000000 | 0x7f800000;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Compute",
        "AHRS_ComputeAngles",
        "MadgwickQuaternionUpdate",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000f8c": {
      "entrypoint": "0x08000f8c",
      "current_name": "FUN_08000f8c",
      "code": "\nuint FUN_08000f8c(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 \u003d param_1 * 2;\n  uVar3 \u003d param_2 * 2;\n  if (((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 || (int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1) \u0026\u0026\n     ((((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) ||\n      (((int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_2 \u0026 0x7fffff) !\u003d 0)))))) {\n    return 0xffffffff;\n  }\n  uVar4 \u003d uVar2 | param_2 \u0026 0x7fffffff;\n  bVar5 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar5) {\n    uVar4 \u003d param_1 ^ param_2;\n    bVar5 \u003d uVar4 \u003d\u003d 0;\n  }\n  bVar1 \u003d -1 \u003c (int)uVar4;\n  if (bVar1) {\n    param_1 \u003d uVar2 + param_2 * -2;\n    bVar5 \u003d param_1 \u003d\u003d 0;\n  }\n  if ((bVar1 \u0026\u0026 uVar3 \u003c\u003d uVar2) \u0026\u0026 !bVar5) {\n    param_1 \u003d (int)param_2 \u003e\u003e 0x1f;\n  }\n  if (!bVar1 || uVar3 \u003e uVar2) {\n    param_1 \u003d ~((int)param_2 \u003e\u003e 0x1f);\n  }\n  if (!bVar5) {\n    param_1 \u003d param_1 | 1;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000f94": {
      "entrypoint": "0x08000f94",
      "current_name": "FUN_08000f94",
      "code": "\nuint FUN_08000f94(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 \u003d param_1 * 2;\n  uVar3 \u003d param_2 * 2;\n  if (((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 || (int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1) \u0026\u0026\n     ((((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) ||\n      (((int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_2 \u0026 0x7fffff) !\u003d 0)))))) {\n    return 1;\n  }\n  uVar4 \u003d uVar2 | param_2 \u0026 0x7fffffff;\n  bVar5 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar5) {\n    uVar4 \u003d param_1 ^ param_2;\n    bVar5 \u003d uVar4 \u003d\u003d 0;\n  }\n  bVar1 \u003d -1 \u003c (int)uVar4;\n  if (bVar1) {\n    param_1 \u003d uVar2 + param_2 * -2;\n    bVar5 \u003d param_1 \u003d\u003d 0;\n  }\n  if ((bVar1 \u0026\u0026 uVar3 \u003c\u003d uVar2) \u0026\u0026 !bVar5) {\n    param_1 \u003d (int)param_2 \u003e\u003e 0x1f;\n  }\n  if (!bVar1 || uVar3 \u003e uVar2) {\n    param_1 \u003d ~((int)param_2 \u003e\u003e 0x1f);\n  }\n  if (!bVar5) {\n    param_1 \u003d param_1 | 1;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000f9c": {
      "entrypoint": "0x08000f9c",
      "current_name": "FUN_08000f9c",
      "code": "\nuint FUN_08000f9c(uint param_1,uint param_2)\n\n{\n  bool bVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar2 \u003d param_1 * 2;\n  uVar3 \u003d param_2 * 2;\n  if (((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 || (int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1) \u0026\u0026\n     ((((int)uVar2 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) ||\n      (((int)uVar3 \u003e\u003e 0x18 \u003d\u003d -1 \u0026\u0026 ((param_2 \u0026 0x7fffff) !\u003d 0)))))) {\n    return 1;\n  }\n  uVar4 \u003d uVar2 | param_2 \u0026 0x7fffffff;\n  bVar5 \u003d uVar4 \u003d\u003d 0;\n  if (!bVar5) {\n    uVar4 \u003d param_1 ^ param_2;\n    bVar5 \u003d uVar4 \u003d\u003d 0;\n  }\n  bVar1 \u003d -1 \u003c (int)uVar4;\n  if (bVar1) {\n    param_1 \u003d uVar2 + param_2 * -2;\n    bVar5 \u003d param_1 \u003d\u003d 0;\n  }\n  if ((bVar1 \u0026\u0026 uVar3 \u003c\u003d uVar2) \u0026\u0026 !bVar5) {\n    param_1 \u003d (int)param_2 \u003e\u003e 0x1f;\n  }\n  if (!bVar1 || uVar3 \u003e uVar2) {\n    param_1 \u003d ~((int)param_2 \u003e\u003e 0x1f);\n  }\n  if (!bVar5) {\n    param_1 \u003d param_1 | 1;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_cfcmpeq"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08000ffc": {
      "entrypoint": "0x08000ffc",
      "current_name": "FUN_08000ffc",
      "code": "\nvoid FUN_08000ffc(undefined4 param_1,undefined4 param_2)\n\n{\n  __aeabi_cfcmpeq(param_2,param_1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_fcmpgt",
        "__aeabi_fcmpge"
      ],
      "called": [
        "__aeabi_cfcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001004": {
      "entrypoint": "0x08001004",
      "current_name": "FUN_08001004",
      "code": "\nundefined8 FUN_08001004(undefined4 param_1,undefined4 param_2)\n\n{\n  __cmpsf2();\n  return CONCAT44(param_2,param_1);\n}\n\n",
      "renaming": {},
      "calling": [
        "__aeabi_fcmpeq",
        "__aeabi_cfrcmple",
        "__aeabi_fcmple",
        "__aeabi_fcmplt"
      ],
      "called": [
        "__cmpsf2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001014": {
      "entrypoint": "0x08001014",
      "current_name": "FUN_08001014",
      "code": "\nbool FUN_08001014(void)\n\n{\n  char in_ZR;\n  \n  __aeabi_cfcmpeq();\n  return in_ZR !\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate"
      ],
      "called": [
        "__aeabi_cfcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001028": {
      "entrypoint": "0x08001028",
      "current_name": "FUN_08001028",
      "code": "\nbool FUN_08001028(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfcmpeq();\n  return in_CY \u003d\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "PID_Compute",
        "AHRS_GetYaw"
      ],
      "called": [
        "__aeabi_cfcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800103c": {
      "entrypoint": "0x0800103c",
      "current_name": "FUN_0800103c",
      "code": "\nbool FUN_0800103c(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__aeabi_cfcmpeq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001050": {
      "entrypoint": "0x08001050",
      "current_name": "FUN_08001050",
      "code": "\nbool FUN_08001050(void)\n\n{\n  undefined in_ZR;\n  undefined in_CY;\n  \n  __aeabi_cfrcmple();\n  return !(bool)in_CY || (bool)in_ZR;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_GetYaw"
      ],
      "called": [
        "__aeabi_cfrcmple"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001064": {
      "entrypoint": "0x08001064",
      "current_name": "FUN_08001064",
      "code": "\nbool FUN_08001064(void)\n\n{\n  char in_CY;\n  \n  __aeabi_cfrcmple();\n  return in_CY \u003d\u003d \u0027\\0\u0027;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "PID_Compute"
      ],
      "called": [
        "__aeabi_cfrcmple"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001078": {
      "entrypoint": "0x08001078",
      "current_name": "FUN_08001078",
      "code": "\nuint FUN_08001078(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 \u003c\u003c 1 \u003c 0x7f000000) {\n    return 0;\n  }\n  uVar1 \u003d (param_1 \u003c\u003c 1) \u003e\u003e 0x18;\n  uVar2 \u003d 0x9e - uVar1;\n  if (uVar1 \u003c 0x9f \u0026\u0026 uVar2 !\u003d 0) {\n    uVar1 \u003d (param_1 \u003c\u003c 8 | 0x80000000) \u003e\u003e (uVar2 \u0026 0xff);\n    if ((param_1 \u0026 0x80000000) !\u003d 0) {\n      uVar1 \u003d -uVar1;\n    }\n    return uVar1;\n  }\n  if ((uVar2 \u003d\u003d 0xffffff9f) \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) {\n    return 0;\n  }\n  param_1 \u003d param_1 \u0026 0x80000000;\n  if (param_1 \u003d\u003d 0) {\n    param_1 \u003d 0x7fffffff;\n  }\n  return param_1;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_DistributeSpeed",
        "AHRS_ComputeAngles",
        "MS5611_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080010c4": {
      "entrypoint": "0x080010c4",
      "current_name": "FUN_080010c4",
      "code": "\nuint FUN_080010c4(uint param_1)\n\n{\n  uint uVar1;\n  \n  if (((param_1 \u0026 0x80000000) !\u003d 0) || (param_1 \u003c\u003c 1 \u003c 0x7f000000)) {\n    return 0;\n  }\n  uVar1 \u003d 0x9e - ((param_1 \u003c\u003c 1) \u003e\u003e 0x18);\n  if (-1 \u003c (int)uVar1) {\n    return (param_1 \u003c\u003c 8 | 0x80000000) \u003e\u003e (uVar1 \u0026 0xff);\n  }\n  if ((uVar1 \u003d\u003d 0xffffff9f) \u0026\u0026 ((param_1 \u0026 0x7fffff) !\u003d 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001104": {
      "entrypoint": "0x08001104",
      "current_name": "FUN_08001104",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001104(uint32_t TickPriority)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 \u003d HAL_RCC_GetHCLKFreq();\n  HAL_SYSTICK_Config(uVar1 / 1000);\n  HAL_NVIC_SetPriority(SysTick_IRQn,TickPriority,0);\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_RCC_ClockConfig",
        "HAL_Init"
      ],
      "called": [
        "HAL_SYSTICK_Config",
        "HAL_RCC_GetHCLKFreq",
        "HAL_NVIC_SetPriority"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001128": {
      "entrypoint": "0x08001128",
      "current_name": "FUN_08001128",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001128(void)\n\n{\n  _DAT_40022000 \u003d _DAT_40022000 | 0x10;\n  HAL_NVIC_SetPriorityGrouping(3);\n  HAL_InitTick(0);\n  HAL_MspInit();\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "HAL_NVIC_SetPriorityGrouping",
        "HAL_MspInit",
        "HAL_InitTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800114c": {
      "entrypoint": "0x0800114c",
      "current_name": "FUN_0800114c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800114c(void)\n\n{\n  uwTick \u003d uwTick + 1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "SysTick_Handler",
        "main"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800115c": {
      "entrypoint": "0x0800115c",
      "current_name": "FUN_0800115c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_0800115c(void)\n\n{\n  return uwTick;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_RCC_OscConfig",
        "HAL_RCC_ClockConfig",
        "I2C_RequestMemoryWrite",
        "I2C_RequestMemoryRead",
        "HAL_I2C_Mem_Read",
        "HAL_UART_Transmit",
        "I2C_WaitOnMasterAddressFlagUntilTimeout",
        "HAL_I2C_Mem_Write",
        "millis",
        "I2C_WaitOnRXNEFlagUntilTimeout",
        "micros",
        "I2C_WaitOnTXEFlagUntilTimeout"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001168": {
      "entrypoint": "0x08001168",
      "current_name": "FUN_08001168",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001168(uint32_t Delay)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_RCC_OscConfig",
        "delay_ms"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001170": {
      "entrypoint": "0x08001170",
      "current_name": "FUN_08001170",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001170(uint32_t PriorityGroup)\n\n{\n  _DAT_e000ed0c \u003d _DAT_e000ed0c \u0026 0xf8ff | 0x5fa0000 | (PriorityGroup \u0026 7) \u003c\u003c 8;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_Init",
        "HAL_MspInit"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001194": {
      "entrypoint": "0x08001194",
      "current_name": "FUN_08001194",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001194(IRQn_Type IRQn,uint32_t PreemptPriority,uint32_t SubPriority)\n\n{\n  uint uVar1;\n  undefined uVar2;\n  uint32_t PreemptPriorityBits;\n  uint uVar3;\n  uint32_t PriorityGroupTmp;\n  uint32_t SubPriorityBits;\n  uint uVar4;\n  \n  uVar1 \u003d (uint)IRQn;\n  SubPriorityBits \u003d (uint)(_DAT_e000ed0c \u003c\u003c 0x15) \u003e\u003e 0x1d;\n  PreemptPriorityBits \u003d 7 - SubPriorityBits;\n  uVar4 \u003d SubPriorityBits + 4;\n  if (3 \u003c PreemptPriorityBits) {\n    PreemptPriorityBits \u003d 4;\n  }\n  if (uVar4 \u003c 7) {\n    SubPriorityBits \u003d 0;\n  }\n  uVar3 \u003d (1 \u003c\u003c (PreemptPriorityBits \u0026 0xff)) - 1;\n  if (6 \u003c uVar4) {\n    SubPriorityBits \u003d SubPriorityBits - 3;\n  }\n  uVar2 \u003d (undefined)\n          ((SubPriority \u0026 (1 \u003c\u003c (SubPriorityBits \u0026 0xff)) - 1U |\n           (PreemptPriority \u0026 uVar3) \u003c\u003c (SubPriorityBits \u0026 0xff)) \u003c\u003c 4);\n  if (-1 \u003c (int)uVar1) {\n    uVar4 \u003d uVar1 + 0xe000e100;\n  }\n  else {\n    uVar3 \u003d 0xe000ed14;\n    uVar4 \u003d uVar1 \u0026 0xf;\n  }\n  if (-1 \u003c (int)uVar1) {\n    *(undefined *)(uVar4 + 0x300) \u003d uVar2;\n  }\n  else {\n    *(undefined *)(uVar3 + uVar4) \u003d uVar2;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_MspInit",
        "HAL_MspInit",
        "HAL_InitTick",
        "SystemClock_Config"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080011fc": {
      "entrypoint": "0x080011fc",
      "current_name": "FUN_080011fc",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080011fc(IRQn_Type IRQn)\n\n{\n  *(int *)(((uint)(int)IRQn \u003e\u003e 5) * 4 + -0x1fff1f00) \u003d 1 \u003c\u003c ((int)IRQn \u0026 0x1fU);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_MspInit"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001214": {
      "entrypoint": "0x08001214",
      "current_name": "FUN_08001214",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08001214(uint32_t TicksNumb)\n\n{\n  if (TicksNumb - 1 \u003c 0x1000000) {\n    _DAT_e000e014 \u003d TicksNumb - 1;\n    DAT_e000ed23 \u003d 0xf0;\n    _DAT_e000e018 \u003d 0;\n    _DAT_e000e010 \u003d 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_InitTick",
        "SystemClock_Config"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001240": {
      "entrypoint": "0x08001240",
      "current_name": "FUN_08001240",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001240(uint32_t CLKSource)\n\n{\n  if (CLKSource \u003d\u003d 4) {\n    _DAT_e000e010 \u003d _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 \u003d _DAT_e000e010 \u0026 0xfffffffb;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "SystemClock_Config"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001258": {
      "entrypoint": "0x08001258",
      "current_name": "FUN_08001258",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001258(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_SYSTICK_IRQHandler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800125a": {
      "entrypoint": "0x0800125a",
      "current_name": "FUN_0800125a",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800125a(void)\n\n{\n  HAL_SYSTICK_Callback();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "SysTick_Handler"
      ],
      "called": [
        "HAL_SYSTICK_Callback"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001264": {
      "entrypoint": "0x08001264",
      "current_name": "FUN_08001264",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001264(GPIO_TypeDef *GPIOx,GPIO_InitTypeDef *GPIO_Init)\n\n{\n  uint32_t *configregister;\n  uint32_t uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  GPIO_TypeDef *unaff_r10;\n  int iVar8;\n  uint32_t tmpreg;\n  \n  uVar1 \u003d 0;\n  uVar5 \u003d 0;\n  do {\n    uVar6 \u003d 1 \u003c\u003c (uVar5 \u0026 0xff);\n    uVar2 \u003d uVar6 \u0026 GPIO_Init-\u003ePin;\n    if (uVar6 \u003d\u003d uVar2) {\n      uVar3 \u003d GPIO_Init-\u003eMode;\n      if (uVar3 \u003d\u003d 0x12) {\n        uVar1 \u003d GPIO_Init-\u003eSpeed + 0xc;\n      }\n      else if (uVar3 \u003c 0x13) {\n        if (uVar3 \u003d\u003d 2) {\n          uVar1 \u003d GPIO_Init-\u003eSpeed + 8;\n        }\n        else if (uVar3 \u003c 3) {\n          if (uVar3 \u003d\u003d 0) goto LAB_080013be;\n          if (uVar3 \u003d\u003d 1) {\n            uVar1 \u003d GPIO_Init-\u003eSpeed;\n          }\n        }\n        else if (uVar3 \u003d\u003d 3) {\n          uVar1 \u003d 0;\n        }\n        else if (uVar3 \u003d\u003d 0x11) {\n          uVar1 \u003d GPIO_Init-\u003eSpeed + 4;\n        }\n      }\n      else {\n        if (uVar3 !\u003d 0x10210000) {\n          if (uVar3 \u003c 0x10210001) {\n            if (uVar3 !\u003d 0x10110000) {\n              uVar7 \u003d 0x10120000;\nLAB_080013b8:\n              if (uVar3 !\u003d uVar7) goto LAB_080012a8;\n            }\n          }\n          else if ((uVar3 !\u003d 0x10310000) \u0026\u0026 (uVar3 !\u003d 0x10320000)) {\n            uVar7 \u003d 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        uVar1 \u003d GPIO_Init-\u003ePull;\n        if (uVar1 \u003d\u003d 0) {\n          uVar1 \u003d 4;\n        }\n        else {\n          if (uVar1 \u003d\u003d 1) {\n            GPIOx-\u003eBSRR \u003d uVar6;\n          }\n          if (uVar1 !\u003d 1) {\n            GPIOx-\u003eBRR \u003d uVar6;\n          }\n          uVar1 \u003d 8;\n        }\n      }\nLAB_080012a8:\n      if (uVar2 \u003c 0x100) {\n        uVar6 \u003d GPIOx-\u003eCRL;\n        uVar3 \u003d uVar5 \u003c\u003c 2;\n        unaff_r10 \u003d GPIOx;\n      }\n      else {\n        uVar6 \u003d GPIOx-\u003eCRH;\n        uVar3 \u003d (uVar5 + 0x3ffffff8) * 4;\n      }\n      if (0xff \u003c uVar2) {\n        unaff_r10 \u003d (GPIO_TypeDef *)\u0026GPIOx-\u003eCRH;\n      }\n      unaff_r10-\u003eCRL \u003d uVar6 \u0026 ~(0xf \u003c\u003c (uVar3 \u0026 0xff)) | uVar1 \u003c\u003c (uVar3 \u0026 0xff);\n      unaff_r10 \u003d (GPIO_TypeDef *)GPIO_Init-\u003eMode;\n      if (((uint)unaff_r10 \u0026 0x10000000) !\u003d 0) {\n        _DAT_40021018 \u003d _DAT_40021018 | 1;\n        iVar8 \u003d (uVar5 \u0026 3) \u003c\u003c 2;\n        if (GPIOx \u003d\u003d (GPIO_TypeDef *)0x40010800) {\n          iVar4 \u003d 0;\n        }\n        else if (GPIOx \u003d\u003d (GPIO_TypeDef *)0x40010c00) {\n          iVar4 \u003d 1;\n        }\n        else if (GPIOx \u003d\u003d (GPIO_TypeDef *)0x40011000) {\n          iVar4 \u003d 2;\n        }\n        else if (GPIOx \u003d\u003d (GPIO_TypeDef *)0x40011400) {\n          iVar4 \u003d 3;\n        }\n        else {\n          iVar4 \u003d 4;\n        }\n        *(uint *)((uVar5 \u0026 0xfffffffc) + 0x40010008) \u003d\n             iVar4 \u003c\u003c iVar8 | *(uint *)((uVar5 \u0026 0xfffffffc) + 0x40010008) \u0026 ~(0xf \u003c\u003c iVar8);\n        if (((uint)unaff_r10 \u0026 0x10000) \u003d\u003d 0) {\n          _DAT_40010400 \u003d _DAT_40010400 \u0026 ~uVar2;\n        }\n        else {\n          _DAT_40010400 \u003d _DAT_40010400 | uVar2;\n        }\n        if (((uint)unaff_r10 \u0026 0x20000) \u003d\u003d 0) {\n          _DAT_40010404 \u003d _DAT_40010404 \u0026 ~uVar2;\n        }\n        else {\n          _DAT_40010404 \u003d _DAT_40010404 | uVar2;\n        }\n        if (((uint)unaff_r10 \u0026 0x100000) \u003d\u003d 0) {\n          _DAT_40010408 \u003d _DAT_40010408 \u0026 ~uVar2;\n        }\n        else {\n          _DAT_40010408 \u003d _DAT_40010408 | uVar2;\n        }\n        if (((uint)unaff_r10 \u0026 0x200000) \u003d\u003d 0) {\n          _DAT_4001040c \u003d _DAT_4001040c \u0026 ~uVar2;\n        }\n        else {\n          _DAT_4001040c \u003d uVar2 | _DAT_4001040c;\n        }\n      }\n    }\n    uVar5 \u003d uVar5 + 1;\n    if (uVar5 \u003d\u003d 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_MspInit",
        "Peripherals_Init",
        "HAL_I2C_MspInit",
        "HAL_TIM_MspPostInit"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001424": {
      "entrypoint": "0x08001424",
      "current_name": "FUN_08001424",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08001424(GPIO_TypeDef *GPIOx,uint16_t GPIO_Pin,GPIO_PinState PinState)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 \u003d (uint32_t)GPIO_Pin;\n  if (PinState \u003d\u003d GPIO_PIN_RESET) {\n    uVar1 \u003d uVar1 \u003c\u003c 0x10;\n  }\n  GPIOx-\u003eBSRR \u003d uVar1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init",
        "toggleLED",
        "_Error_Handler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800142e": {
      "entrypoint": "0x0800142e",
      "current_name": "FUN_0800142e",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800142e(GPIO_TypeDef *GPIOx,uint16_t GPIO_Pin)\n\n{\n  GPIOx-\u003eODR \u003d (uint)GPIO_Pin ^ GPIOx-\u003eODR;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_Error_Handler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001436": {
      "entrypoint": "0x08001436",
      "current_name": "FUN_08001436",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001436(I2C_HandleTypeDef *hi2c)\n\n{\n  I2C_TypeDef *pIVar1;\n  \n  pIVar1 \u003d hi2c-\u003eInstance;\n  if ((pIVar1-\u003eSR1 \u0026 0x400) !\u003d 0) {\n    pIVar1-\u003eSR1 \u003d pIVar1-\u003eSR1 \u0026 0xfffffbff;\n    hi2c-\u003eErrorCode \u003d 4;\n    hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n    hi2c-\u003eLock \u003d HAL_UNLOCKED;\n    return HAL_ERROR;\n  }\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "I2C_WaitOnTXEFlagUntilTimeout"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001460": {
      "entrypoint": "0x08001460",
      "current_name": "FUN_08001460",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001460(I2C_HandleTypeDef *hi2c,uint32_t Flag,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  I2C_TypeDef *pIVar4;\n  \n  uVar1 \u003d HAL_GetTick();\n  do {\n    pIVar4 \u003d hi2c-\u003eInstance;\n    if ((Flag \u003c\u003c 8) \u003e\u003e 0x18 \u003d\u003d 1) {\n      uVar3 \u003d pIVar4-\u003eSR1;\n    }\n    else {\n      uVar3 \u003d pIVar4-\u003eSR2;\n    }\n    if ((Flag \u0026 0xffff \u0026 ~uVar3) \u003d\u003d 0) {\n      return HAL_OK;\n    }\n    if ((int)(pIVar4-\u003eSR1 \u003c\u003c 0x15) \u003c 0) {\n      pIVar4-\u003eCR1 \u003d pIVar4-\u003eCR1 | 0x200;\n      pIVar4-\u003eSR1 \u003d pIVar4-\u003eSR1 \u0026 0xfffffbff;\n      hi2c-\u003eErrorCode \u003d 4;\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_ERROR;\n    }\n  } while ((Timeout \u003d\u003d 0xffffffff) ||\n          ((Timeout !\u003d 0 \u0026\u0026 (uVar2 \u003d HAL_GetTick(), uVar2 - uVar1 \u003c\u003d Timeout))));\n  hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n  hi2c-\u003eLock \u003d HAL_UNLOCKED;\n  return HAL_TIMEOUT;\n}\n\n",
      "renaming": {},
      "calling": [
        "I2C_RequestMemoryWrite",
        "I2C_RequestMemoryRead"
      ],
      "called": [
        "HAL_GetTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080014e2": {
      "entrypoint": "0x080014e2",
      "current_name": "FUN_080014e2",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_080014e2(I2C_HandleTypeDef *hi2c,uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  uint32_t tickstart;\n  \n  uVar2 \u003d HAL_GetTick();\n  while( true ) {\n    if ((int)(hi2c-\u003eInstance-\u003eSR1 \u003c\u003c 0x18) \u003c 0) {\n      return HAL_OK;\n    }\n    HVar1 \u003d I2C_IsAcknowledgeFailed(hi2c);\n    if (HVar1 !\u003d HAL_OK) break;\n    if ((Timeout !\u003d 0xffffffff) \u0026\u0026\n       ((Timeout \u003d\u003d 0 || (uVar3 \u003d HAL_GetTick(), Timeout \u003c uVar3 - uVar2)))) {\n      hi2c-\u003eErrorCode \u003d hi2c-\u003eErrorCode | 0x20;\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "I2C_RequestMemoryWrite",
        "I2C_RequestMemoryRead",
        "HAL_I2C_Mem_Write"
      ],
      "called": [
        "HAL_GetTick",
        "I2C_IsAcknowledgeFailed"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001530": {
      "entrypoint": "0x08001530",
      "current_name": "FUN_08001530",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_08001530(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n            uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint32_t tmpreg;\n  \n  hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x100;\n  uVar2 \u003d HAL_GetTick();\n  do {\n    do {\n      if ((int)(hi2c-\u003eInstance-\u003eSR1 \u003c\u003c 0x1f) \u003c 0) {\n        hi2c-\u003eInstance-\u003eDR \u003d DevAddress \u0026 0xfe;\n        HVar1 \u003d I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,0x10002,Timeout);\n        if (HVar1 \u003d\u003d HAL_OK) {\n          HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n          if (HVar1 \u003d\u003d HAL_OK) {\n            pIVar4 \u003d hi2c-\u003eInstance;\n            if (MemAddSize \u003d\u003d 1) {\nLAB_080015ca:\n              pIVar4-\u003eDR \u003d (uint)(byte)MemAddress;\n              return HAL_OK;\n            }\n            pIVar4-\u003eDR \u003d (uint)(MemAddress \u003e\u003e 8);\n            HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n            if (HVar1 \u003d\u003d HAL_OK) {\n              pIVar4 \u003d hi2c-\u003eInstance;\n              goto LAB_080015ca;\n            }\n          }\n          if (hi2c-\u003eErrorCode !\u003d 4) {\n            return HAL_TIMEOUT;\n          }\n          hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x200;\n        }\n        else if (hi2c-\u003eErrorCode !\u003d 4) {\n          return HAL_TIMEOUT;\n        }\n        return HAL_ERROR;\n      }\n    } while (Timeout \u003d\u003d 0xffffffff);\n    if ((Timeout \u003d\u003d 0) || (uVar3 \u003d HAL_GetTick(), Timeout \u003c uVar3 - uVar2)) {\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_I2C_Mem_Write"
      ],
      "called": [
        "HAL_GetTick",
        "I2C_WaitOnMasterAddressFlagUntilTimeout",
        "I2C_WaitOnTXEFlagUntilTimeout"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080015e8": {
      "entrypoint": "0x080015e8",
      "current_name": "FUN_080015e8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_080015e8(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n            uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint32_t tmpreg;\n  \n  pIVar4 \u003d hi2c-\u003eInstance;\n  pIVar4-\u003eCR1 \u003d pIVar4-\u003eCR1 | 0x400;\n  pIVar4-\u003eCR1 \u003d pIVar4-\u003eCR1 | 0x100;\n  uVar2 \u003d HAL_GetTick();\nLAB_0800160e:\n  while (-1 \u003c (int)(hi2c-\u003eInstance-\u003eSR1 \u003c\u003c 0x1f)) {\n    if (Timeout !\u003d 0xffffffff) goto code_r0x08001658;\n  }\n  hi2c-\u003eInstance-\u003eDR \u003d (byte)DevAddress \u0026 0xfe;\n  HVar1 \u003d I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,0x10002,Timeout);\n  if (HVar1 !\u003d HAL_OK) goto LAB_080016ba;\n  HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n  if (HVar1 \u003d\u003d HAL_OK) {\n    pIVar4 \u003d hi2c-\u003eInstance;\n    if (MemAddSize !\u003d 1) {\n      pIVar4-\u003eDR \u003d (uint)(MemAddress \u003e\u003e 8);\n      HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n      if (HVar1 !\u003d HAL_OK) goto LAB_08001642;\n      pIVar4 \u003d hi2c-\u003eInstance;\n    }\n    pIVar4-\u003eDR \u003d (uint)(byte)MemAddress;\n    HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar1 \u003d\u003d HAL_OK) {\n      hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x100;\n      uVar2 \u003d HAL_GetTick();\n      do {\n        do {\n          if ((int)(hi2c-\u003eInstance-\u003eSR1 \u003c\u003c 0x1f) \u003c 0) {\n            hi2c-\u003eInstance-\u003eDR \u003d (byte)DevAddress | 1;\n            HVar1 \u003d I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c,0x10002,Timeout);\n            if (HVar1 \u003d\u003d HAL_OK) {\n              return HAL_OK;\n            }\nLAB_080016ba:\n            if (hi2c-\u003eErrorCode !\u003d 4) {\n              return HAL_TIMEOUT;\n            }\n            return HAL_ERROR;\n          }\n        } while (Timeout \u003d\u003d 0xffffffff);\n      } while ((Timeout !\u003d 0) \u0026\u0026 (uVar3 \u003d HAL_GetTick(), uVar3 - uVar2 \u003c\u003d Timeout));\nLAB_0800165a:\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\nLAB_08001642:\n  if (hi2c-\u003eErrorCode \u003d\u003d 4) {\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x200;\n    return HAL_ERROR;\n  }\n  return HAL_TIMEOUT;\ncode_r0x08001658:\n  if ((Timeout \u003d\u003d 0) || (uVar3 \u003d HAL_GetTick(), Timeout \u003c uVar3 - uVar2)) goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_I2C_Mem_Read"
      ],
      "called": [
        "HAL_GetTick",
        "I2C_WaitOnMasterAddressFlagUntilTimeout",
        "I2C_WaitOnTXEFlagUntilTimeout"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080016f4": {
      "entrypoint": "0x080016f4",
      "current_name": "FUN_080016f4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_080016f4(I2C_HandleTypeDef *hi2c,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  I2C_TypeDef *pIVar3;\n  \n  uVar1 \u003d HAL_GetTick();\n  while( true ) {\n    pIVar3 \u003d hi2c-\u003eInstance;\n    if ((pIVar3-\u003eSR1 \u0026 0x40) !\u003d 0) {\n      return HAL_OK;\n    }\n    if ((int)(pIVar3-\u003eSR1 \u003c\u003c 0x1b) \u003c 0) break;\n    if ((Timeout \u003d\u003d 0) || (uVar2 \u003d HAL_GetTick(), Timeout \u003c uVar2 - uVar1)) {\n      hi2c-\u003eErrorCode \u003d hi2c-\u003eErrorCode | 0x20;\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  pIVar3-\u003eSR1 \u003d pIVar3-\u003eSR1 \u0026 0xffffffef;\n  hi2c-\u003eErrorCode \u003d 0;\n  hi2c-\u003eLock \u003d HAL_UNLOCKED;\n  hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_I2C_Mem_Read"
      ],
      "called": [
        "HAL_GetTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001754": {
      "entrypoint": "0x08001754",
      "current_name": "FUN_08001754",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001754(I2C_HandleTypeDef *hi2c)\n\n{\n  uint32_t uVar1;\n  uint extraout_r1;\n  uint uVar2;\n  I2C_TypeDef *pIVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  if (hi2c !\u003d (I2C_HandleTypeDef *)0x0) {\n    if (hi2c-\u003eState \u003d\u003d HAL_I2C_STATE_RESET) {\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      HAL_I2C_MspInit(hi2c);\n    }\n    hi2c-\u003eState \u003d HAL_I2C_STATE_BUSY;\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 \u0026 0xfffffffe;\n    uVar1 \u003d HAL_RCC_GetPCLK1Freq();\n    uVar4 \u003d (hi2c-\u003eInit).ClockSpeed;\n    uVar5 \u003d uVar1 / 1000000;\n    uVar2 \u003d extraout_r1;\n    if (100000 \u003c uVar4) {\n      uVar2 \u003d 300;\n    }\n    pIVar3 \u003d hi2c-\u003eInstance;\n    if (100000 \u003c uVar4) {\n      uVar2 \u003d uVar5 * uVar2;\n    }\n    pIVar3-\u003eCR2 \u003d uVar5;\n    if (100000 \u003c uVar4) {\n      uVar5 \u003d uVar2 / 1000;\n    }\n    pIVar3-\u003eTRISE \u003d uVar5 + 1;\n    if (uVar4 \u003c 0x186a1) {\n      uVar1 \u003d uVar1 / (uVar4 \u003c\u003c 1);\n      if ((uVar1 \u0026 0xfff) \u003c 4) {\n        uVar1 \u003d 4;\n      }\n    }\n    else {\n      if ((hi2c-\u003eInit).DutyCycle \u003d\u003d 0) {\n        uVar1 \u003d uVar1 / (uVar4 * 3) | 0x8000;\n      }\n      else {\n        uVar1 \u003d uVar1 / (uVar4 * 0x19) | 0xc000;\n      }\n      if ((uVar1 \u0026 0xfff) \u003d\u003d 0) {\n        uVar1 \u003d 1;\n      }\n    }\n    uVar5 \u003d (hi2c-\u003eInit).NoStretchMode;\n    uVar2 \u003d (hi2c-\u003eInit).GeneralCallMode;\n    pIVar3-\u003eCCR \u003d uVar1;\n    pIVar3-\u003eCR1 \u003d uVar2 | uVar5;\n    pIVar3-\u003eOAR1 \u003d (hi2c-\u003eInit).AddressingMode | (hi2c-\u003eInit).OwnAddress1;\n    pIVar3-\u003eOAR2 \u003d (hi2c-\u003eInit).DualAddressMode | (hi2c-\u003eInit).OwnAddress2;\n    pIVar3-\u003eCR1 \u003d pIVar3-\u003eCR1 | 1;\n    hi2c-\u003eErrorCode \u003d 0;\n    hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n    hi2c-\u003eMode \u003d HAL_I2C_MODE_NONE;\n    return HAL_OK;\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "HAL_I2C_MspInit",
        "HAL_RCC_GetPCLK1Freq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001828": {
      "entrypoint": "0x08001828",
      "current_name": "FUN_08001828",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_08001828(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n            uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  I2C_TypeDef *pIVar4;\n  uint uVar5;\n  \n  if (hi2c-\u003eState \u003d\u003d HAL_I2C_STATE_READY) {\n    if (pData \u003d\u003d (uint8_t *)0x0) {\n      return HAL_ERROR;\n    }\n    if (Size \u003d\u003d 0) {\n      return HAL_ERROR;\n    }\n    uVar2 \u003d HAL_GetTick();\n    do {\n      pIVar4 \u003d hi2c-\u003eInstance;\n      if ((~pIVar4-\u003eSR2 \u0026 2) !\u003d 0) {\n        if (hi2c-\u003eLock \u003d\u003d HAL_LOCKED) {\n          return HAL_BUSY;\n        }\n        uVar5 \u003d pIVar4-\u003eCR1;\n        hi2c-\u003eLock \u003d HAL_LOCKED;\n        pIVar4-\u003eCR1 \u003d uVar5 \u0026 0xfffff7ff;\n        hi2c-\u003eState \u003d HAL_I2C_STATE_BUSY_TX;\n        hi2c-\u003eMode \u003d HAL_I2C_MODE_MEM;\n        hi2c-\u003eErrorCode \u003d 0;\n        HVar1 \u003d I2C_RequestMemoryWrite(hi2c,DevAddress,MemAddress,MemAddSize,Timeout);\n        if (HVar1 !\u003d HAL_OK) {\n          hi2c-\u003eLock \u003d HAL_UNLOCKED;\n          if (hi2c-\u003eErrorCode \u003d\u003d 4) {\n            return HAL_ERROR;\n          }\n          return HAL_TIMEOUT;\n        }\n        goto LAB_080018e2;\n      }\n      uVar3 \u003d HAL_GetTick();\n    } while (uVar3 - uVar2 \u003c 0x2711);\n    hi2c-\u003eLock \u003d HAL_UNLOCKED;\n    hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n  }\n  return HAL_BUSY;\n  while (Size !\u003d 0) {\nLAB_080018e2:\n    HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar1 !\u003d HAL_OK) goto LAB_080018ee;\n    pIVar4 \u003d hi2c-\u003eInstance;\n    pIVar4-\u003eDR \u003d (uint)*pData;\n    if ((int)(pIVar4-\u003eSR1 \u003c\u003c 0x1d) \u003c 0) {\n      if ((uint16_t)(Size - 1) \u003d\u003d 0) break;\n      Size \u003d Size - 2;\n      pIVar4-\u003eDR \u003d (uint)pData[1];\n      pData \u003d pData + 2;\n    }\n    else {\n      pData \u003d pData + 1;\n      Size \u003d Size - 1;\n    }\n  }\n  HVar1 \u003d I2C_WaitOnTXEFlagUntilTimeout(hi2c,Timeout);\n  if (HVar1 \u003d\u003d HAL_OK) {\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x200;\n    hi2c-\u003eLock \u003d HAL_UNLOCKED;\n    hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n    hi2c-\u003eMode \u003d HAL_I2C_MODE_NONE;\n    return HAL_OK;\n  }\nLAB_080018ee:\n  if (hi2c-\u003eErrorCode \u003d\u003d 4) {\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x200;\n    return HAL_ERROR;\n  }\n  return HAL_TIMEOUT;\n}\n\n",
      "renaming": {},
      "calling": [
        "I2C_WriteByte"
      ],
      "called": [
        "HAL_GetTick",
        "I2C_RequestMemoryWrite",
        "I2C_WaitOnTXEFlagUntilTimeout"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001938": {
      "entrypoint": "0x08001938",
      "current_name": "FUN_08001938",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_08001938(I2C_HandleTypeDef *hi2c,uint16_t DevAddress,uint16_t MemAddress,uint16_t MemAddSize,\n            uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint8_t *puVar1;\n  HAL_StatusTypeDef HVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  I2C_TypeDef *pIVar5;\n  uint uVar6;\n  uint8_t *puVar7;\n  bool bVar8;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  \n  if (hi2c-\u003eState !\u003d HAL_I2C_STATE_READY) {\n    return HAL_BUSY;\n  }\n  if (pData \u003d\u003d (uint8_t *)0x0) {\n    return HAL_ERROR;\n  }\n  if (Size \u003d\u003d 0) {\n    return HAL_ERROR;\n  }\n  uVar3 \u003d HAL_GetTick();\n  while (pIVar5 \u003d hi2c-\u003eInstance, (~pIVar5-\u003eSR2 \u0026 2) \u003d\u003d 0) {\n    uVar4 \u003d HAL_GetTick();\n    if (10000 \u003c uVar4 - uVar3) {\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      return HAL_BUSY;\n    }\n  }\n  if (hi2c-\u003eLock \u003d\u003d HAL_LOCKED) {\n    return HAL_BUSY;\n  }\n  uVar6 \u003d pIVar5-\u003eCR1;\n  hi2c-\u003eLock \u003d HAL_LOCKED;\n  pIVar5-\u003eCR1 \u003d uVar6 \u0026 0xfffff7ff;\n  hi2c-\u003eState \u003d HAL_I2C_STATE_BUSY_RX;\n  hi2c-\u003eMode \u003d HAL_I2C_MODE_MEM;\n  hi2c-\u003eErrorCode \u003d 0;\n  HVar2 \u003d I2C_RequestMemoryRead(hi2c,DevAddress,MemAddress,MemAddSize,Timeout);\n  if (HVar2 !\u003d HAL_OK) {\n    hi2c-\u003eLock \u003d HAL_UNLOCKED;\n    if (hi2c-\u003eErrorCode \u003d\u003d 4) {\n      return HAL_ERROR;\n    }\n    return HAL_TIMEOUT;\n  }\n  pIVar5 \u003d hi2c-\u003eInstance;\n  uVar6 \u003d pIVar5-\u003eCR1;\n  if (Size \u003d\u003d 1) {\n    pIVar5-\u003eCR1 \u003d uVar6 \u0026 0xfffffbff;\n    disableIRQinterrupts();\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 | 0x200;\n    enableIRQinterrupts();\n    HVar2 \u003d I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout);\n    if (HVar2 \u003d\u003d HAL_OK) {\n      *pData \u003d (uint8_t)hi2c-\u003eInstance-\u003eDR;\nLAB_08001ab8:\n      hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n      hi2c-\u003eMode \u003d HAL_I2C_MODE_NONE;\n      hi2c-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_OK;\n    }\nLAB_08001a18:\n    if (hi2c-\u003eErrorCode !\u003d 0x20) {\n      return HAL_ERROR;\n    }\n    return HAL_TIMEOUT;\n  }\n  if (Size \u003d\u003d 2) {\n    pIVar5-\u003eCR1 \u003d uVar6 | 0x800;\n    disableIRQinterrupts();\n    hi2c-\u003eInstance-\u003eCR1 \u003d hi2c-\u003eInstance-\u003eCR1 \u0026 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    pIVar5-\u003eCR1 \u003d uVar6 | 0x400;\n    while (3 \u003c Size) {\n      HVar2 \u003d I2C_WaitOnRXNEFlagUntilTimeout(hi2c,Timeout);\n      if (HVar2 !\u003d HAL_OK) goto LAB_08001a18;\n      *pData \u003d (uint8_t)hi2c-\u003eInstance-\u003eDR;\n      pIVar5 \u003d hi2c-\u003eInstance;\n      bVar8 \u003d (int)(pIVar5-\u003eSR1 \u003c\u003c 0x1d) \u003c 0;\n      if (bVar8) {\n        pIVar5 \u003d (I2C_TypeDef *)pIVar5-\u003eDR;\n        puVar7 \u003d pData + 2;\n        Size \u003d Size - 2;\n      }\n      else {\n        puVar7 \u003d pData + 1;\n        Size \u003d Size - 1;\n      }\n      puVar1 \u003d pData + 1;\n      pData \u003d puVar7;\n      if (bVar8) {\n        *puVar1 \u003d (uint8_t)pIVar5;\n      }\n    }\n    if (Size !\u003d 2) {\n      uVar3 \u003d HAL_GetTick();\n      do {\n        pIVar5 \u003d hi2c-\u003eInstance;\n        do {\n          if ((int)(pIVar5-\u003eSR1 \u003c\u003c 0x1d) \u003c 0) {\n            pIVar5-\u003eCR1 \u003d pIVar5-\u003eCR1 \u0026 0xfffffbff;\n            disableIRQinterrupts();\n            *pData \u003d (uint8_t)hi2c-\u003eInstance-\u003eDR;\n            uVar3 \u003d HAL_GetTick();\n            goto LAB_08001b3a;\n          }\n        } while (Timeout \u003d\u003d 0xffffffff);\n      } while ((Timeout !\u003d 0) \u0026\u0026 (uVar4 \u003d HAL_GetTick(), uVar4 - uVar3 \u003c\u003d Timeout));\n      goto LAB_08001afa;\n    }\n  }\n  uVar3 \u003d HAL_GetTick();\n  do {\n    do {\n      if ((int)(hi2c-\u003eInstance-\u003eSR1 \u003c\u003c 0x1d) \u003c 0) {\n        disableIRQinterrupts();\n        pIVar5 \u003d hi2c-\u003eInstance;\n        pIVar5-\u003eCR1 \u003d pIVar5-\u003eCR1 | 0x200;\n        *pData \u003d (uint8_t)pIVar5-\u003eDR;\n        enableIRQinterrupts();\n        pData[1] \u003d (uint8_t)hi2c-\u003eInstance-\u003eDR;\n        goto LAB_08001ab8;\n      }\n    } while (Timeout \u003d\u003d 0xffffffff);\n  } while ((Timeout !\u003d 0) \u0026\u0026 (uVar4 \u003d HAL_GetTick(), uVar4 - uVar3 \u003c\u003d Timeout));\nLAB_08001afa:\n  hi2c-\u003eState \u003d HAL_I2C_STATE_READY;\n  hi2c-\u003eLock \u003d HAL_UNLOCKED;\n  return HAL_TIMEOUT;\nLAB_08001b3a:\n  do {\n    pIVar5 \u003d hi2c-\u003eInstance;\n    do {\n      if ((int)(pIVar5-\u003eSR1 \u003c\u003c 0x1d) \u003c 0) {\n        pIVar5-\u003eCR1 \u003d pIVar5-\u003eCR1 | 0x200;\n        pData[1] \u003d (uint8_t)pIVar5-\u003eDR;\n        enableIRQinterrupts();\n        pData[2] \u003d (uint8_t)hi2c-\u003eInstance-\u003eDR;\n        goto LAB_08001ab8;\n      }\n    } while (Timeout \u003d\u003d 0xffffffff);\n  } while ((Timeout !\u003d 0) \u0026\u0026 (uVar4 \u003d HAL_GetTick(), uVar4 - uVar3 \u003c\u003d Timeout));\n  goto LAB_08001afa;\n}\n\n",
      "renaming": {},
      "calling": [
        "I2C_ReadByte",
        "I2C_ReadBytes"
      ],
      "called": [
        "HAL_GetTick",
        "I2C_RequestMemoryRead",
        "I2C_WaitOnRXNEFlagUntilTimeout"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08001b58": {
      "entrypoint": "0x08001b58",
      "current_name": "FUN_08001b58",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08001b58(RCC_OscInitTypeDef *RCC_OscInitStruct)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  uint32_t tmpreg;\n  \n  if ((int)(RCC_OscInitStruct-\u003eOscillatorType \u003c\u003c 0x1f) \u003c 0) {\n    if (((_DAT_40021004 \u0026 0xc) \u003d\u003d 4) ||\n       (((_DAT_40021004 \u0026 0xc) \u003d\u003d 8 \u0026\u0026 ((int)(_DAT_40021004 \u003c\u003c 0xf) \u003c 0)))) {\n      if (((int)((_DAT_40021000 \u003e\u003e 0x11) \u003c\u003c 0x1f) \u003c 0) \u0026\u0026 (RCC_OscInitStruct-\u003eHSEState \u003d\u003d 0)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      uVar1 \u003d RCC_OscInitStruct-\u003eHSEState;\n      if (uVar1 \u003d\u003d 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 \u003d _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (uVar1 \u003d\u003d 0) {\n          _DAT_40021000 \u003d _DAT_40021000 \u0026 0xfffaffff;\n          uVar1 \u003d HAL_GetTick();\n          while ((int)((_DAT_40021000 \u003e\u003e 0x11) \u003c\u003c 0x1f) \u003c 0) {\n            uVar2 \u003d HAL_GetTick();\n            if (100 \u003c uVar2 - uVar1) {\n              return HAL_TIMEOUT;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (uVar1 \u003d\u003d 0x50000) {\n          _DAT_40021000 \u003d _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 \u003d _DAT_40021000 \u0026 0xfffaffff;\n      }\n      uVar1 \u003d HAL_GetTick();\n      while (-1 \u003c (int)((_DAT_40021000 \u003e\u003e 0x11) \u003c\u003c 0x1f)) {\n        uVar2 \u003d HAL_GetTick();\n        if (100 \u003c uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if ((int)(RCC_OscInitStruct-\u003eOscillatorType \u003c\u003c 0x1e) \u003c 0) {\n    if (((_DAT_40021004 \u0026 0xc) \u003d\u003d 0) ||\n       (((_DAT_40021004 \u0026 0xc) \u003d\u003d 8 \u0026\u0026 (-1 \u003c (int)(_DAT_40021004 \u003c\u003c 0xf))))) {\n      if (((int)((_DAT_40021000 \u003e\u003e 1) \u003c\u003c 0x1f) \u003c 0) \u0026\u0026 (RCC_OscInitStruct-\u003eHSIState !\u003d 1)) {\n        return HAL_ERROR;\n      }\n    }\n    else {\n      uRam42420000 \u003d RCC_OscInitStruct-\u003eHSIState;\n      if (uRam42420000 \u003d\u003d 0) {\n        uVar1 \u003d HAL_GetTick();\n        while ((int)((_DAT_40021000 \u003e\u003e 1) \u003c\u003c 0x1f) \u003c 0) {\n          uVar2 \u003d HAL_GetTick();\n          if (2 \u003c uVar2 - uVar1) {\n            return HAL_TIMEOUT;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      uRam42420000 \u003d 1;\n      uVar1 \u003d HAL_GetTick();\n      while (-1 \u003c (int)((_DAT_40021000 \u003e\u003e 1) \u003c\u003c 0x1f)) {\n        uVar2 \u003d HAL_GetTick();\n        if (2 \u003c uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    _DAT_40021000 \u003d RCC_OscInitStruct-\u003eHSICalibrationValue \u003c\u003c 3 | _DAT_40021000 \u0026 0xffffff07;\n  }\nLAB_08001b6c:\n  if ((int)(RCC_OscInitStruct-\u003eOscillatorType \u003c\u003c 0x1c) \u003c 0) {\n    uRam42420480 \u003d RCC_OscInitStruct-\u003eLSIState;\n    if (uRam42420480 \u003d\u003d 0) {\n      uVar1 \u003d HAL_GetTick();\n      while ((int)((_DAT_40021024 \u003e\u003e 1) \u003c\u003c 0x1f) \u003c 0) {\n        uVar2 \u003d HAL_GetTick();\n        if (2 \u003c uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n    }\n    else {\n      uRam42420480 \u003d 1;\n      uVar1 \u003d HAL_GetTick();\n      while (-1 \u003c (int)((_DAT_40021024 \u003e\u003e 1) \u003c\u003c 0x1f)) {\n        uVar2 \u003d HAL_GetTick();\n        if (2 \u003c uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n      HAL_Delay(1);\n    }\n  }\n  if (-1 \u003c (int)(RCC_OscInitStruct-\u003eOscillatorType \u003c\u003c 0x1d)) goto LAB_08001bc2;\n  _DAT_4002101c \u003d _DAT_4002101c | 0x10000000;\n  _DAT_40007000 \u003d _DAT_40007000 | 0x100;\n  uVar1 \u003d HAL_GetTick();\n  while (-1 \u003c (int)(_DAT_40007000 \u003c\u003c 0x17)) {\n    uVar2 \u003d HAL_GetTick();\n    if (100 \u003c uVar2 - uVar1) {\n      return HAL_TIMEOUT;\n    }\n  }\n  uVar1 \u003d RCC_OscInitStruct-\u003eLSEState;\n  if (uVar1 \u003d\u003d 1) {\nLAB_08001e1a:\n    _DAT_40021020 \u003d _DAT_40021020 | 1;\n  }\n  else {\n    if (uVar1 \u003d\u003d 0) {\n      _DAT_40021020 \u003d _DAT_40021020 \u0026 0xfffffffa;\n      uVar1 \u003d HAL_GetTick();\n      while ((int)((_DAT_40021020 \u003e\u003e 1) \u003c\u003c 0x1f) \u003c 0) {\n        uVar2 \u003d HAL_GetTick();\n        if (5000 \u003c uVar2 - uVar1) {\n          return HAL_TIMEOUT;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (uVar1 \u003d\u003d 5) {\n      _DAT_40021020 \u003d _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 \u003d _DAT_40021020 \u0026 0xfffffffa;\n  }\n  uVar1 \u003d HAL_GetTick();\n  while (-1 \u003c (int)((_DAT_40021020 \u003e\u003e 1) \u003c\u003c 0x1f)) {\n    uVar2 \u003d HAL_GetTick();\n    if (5000 \u003c uVar2 - uVar1) {\n      return HAL_TIMEOUT;\n    }\n  }\nLAB_08001bc2:\n  uVar1 \u003d (RCC_OscInitStruct-\u003ePLL).PLLState;\n  if (uVar1 \u003d\u003d 0) {\n    return HAL_OK;\n  }\n  if ((_DAT_40021004 \u0026 0xc) !\u003d 8) {\n    if (uVar1 !\u003d 2) {\n      uRam42420060 \u003d 0;\n      uVar1 \u003d HAL_GetTick();\n      do {\n        if (-1 \u003c (int)((_DAT_40021000 \u003e\u003e 0x19) \u003c\u003c 0x1f)) {\n          return HAL_OK;\n        }\n        uVar2 \u003d HAL_GetTick();\n      } while (uVar2 - uVar1 \u003c 3);\n      return HAL_TIMEOUT;\n    }\n    uRam42420060 \u003d 0;\n    uVar1 \u003d HAL_GetTick();\n    do {\n      if (-1 \u003c (int)((_DAT_40021000 \u003e\u003e 0x19) \u003c\u003c 0x1f)) {\n        uVar3 \u003d (RCC_OscInitStruct-\u003ePLL).PLLSource;\n        if (uVar3 \u003d\u003d 0x10000) {\n          _DAT_40021004 \u003d _DAT_40021004 \u0026 0xfffdffff | RCC_OscInitStruct-\u003eHSEPredivValue;\n        }\n        _DAT_40021004 \u003d uVar3 | (RCC_OscInitStruct-\u003ePLL).PLLMUL | _DAT_40021004 \u0026 0xffc2ffff;\n        uRam42420060 \u003d 1;\n        uVar1 \u003d HAL_GetTick();\n        do {\n          if ((int)((_DAT_40021000 \u003e\u003e 0x19) \u003c\u003c 0x1f) \u003c 0) {\n            return HAL_OK;\n          }\n          uVar2 \u003d HAL_GetTick();\n        } while (uVar2 - uVar1 \u003c 3);\n        return HAL_TIMEOUT;\n      }\n      uVar2 \u003d HAL_GetTick();\n    } while (uVar2 - uVar1 \u003c 3);\n    return HAL_TIMEOUT;\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "SystemClock_Config"
      ],
      "called": [
        "HAL_GetTick",
        "HAL_Delay"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002008": {
      "entrypoint": "0x08002008",
      "current_name": "FUN_08002008",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08002008(void)\n\n{\n  undefined4 uVar1;\n  uint32_t uVar2;\n  undefined4 uVar3;\n  undefined4 *puVar4;\n  uint uVar5;\n  undefined4 *puVar6;\n  uint8_t aPredivFactorTable [2];\n  uint8_t aPLLMULFactorTable [16];\n  \n  puVar4 \u003d \u0026DAT_080072f0;\n  puVar6 \u003d (undefined4 *)aPLLMULFactorTable;\n  do {\n    uVar1 \u003d *puVar4;\n    uVar3 \u003d puVar4[1];\n    puVar4 \u003d puVar4 + 2;\n    *puVar6 \u003d uVar1;\n    puVar6[1] \u003d uVar3;\n    puVar6 \u003d puVar6 + 2;\n  } while (puVar4 !\u003d (undefined4 *)\"../Src/MPU9250.c\");\n  aPredivFactorTable[0] \u003d \u0027\\x01\u0027;\n  aPredivFactorTable[1] \u003d \u0027\\x02\u0027;\n  if ((_DAT_40021004 \u0026 0xc) \u003d\u003d 8) {\n    if ((int)(_DAT_40021004 \u003c\u003c 0xf) \u003c 0) {\n      uVar5 \u003d 8000000 / aPredivFactorTable[(_DAT_40021004 \u0026 0x20000) \u003e\u003e 0x11];\n    }\n    else {\n      uVar5 \u003d 4000000;\n    }\n    uVar2 \u003d uVar5 * aPLLMULFactorTable[(_DAT_40021004 \u0026 0x3c0000) \u003e\u003e 0x12];\n  }\n  else {\n    uVar2 \u003d 8000000;\n  }\n  return uVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_RCC_ClockConfig"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800209c": {
      "entrypoint": "0x0800209c",
      "current_name": "FUN_0800209c",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_0800209c(RCC_ClkInitTypeDef *RCC_ClkInitStruct,uint32_t FLatency)\n\n{\n  char cVar1;\n  char cVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  uint uVar5;\n  \n  if ((FLatency \u003c\u003d (_DAT_40022000 \u0026 7)) ||\n     (_DAT_40022000 \u003d _DAT_40022000 \u0026 0xfffffff8 | FLatency, FLatency \u003d\u003d (FLatency \u0026 7))) {\n    if ((int)(RCC_ClkInitStruct-\u003eClockType \u003c\u003c 0x1e) \u003c 0) {\n      _DAT_40021004 \u003d _DAT_40021004 \u0026 0xffffff0f | RCC_ClkInitStruct-\u003eAHBCLKDivider;\n    }\n    if (-1 \u003c (int)(RCC_ClkInitStruct-\u003eClockType \u003c\u003c 0x1f)) {\nLAB_080020ba:\n      if ((FLatency \u003c (_DAT_40022000 \u0026 7)) \u0026\u0026\n         (_DAT_40022000 \u003d _DAT_40022000 \u0026 0xfffffff8 | FLatency, FLatency !\u003d (FLatency \u0026 7))) {\n        return HAL_ERROR;\n      }\n      if ((RCC_ClkInitStruct-\u003eClockType \u0026 4) !\u003d 0) {\n        _DAT_40021004 \u003d _DAT_40021004 \u0026 0xfffff8ff | RCC_ClkInitStruct-\u003eAPB1CLKDivider;\n      }\n      if ((int)(RCC_ClkInitStruct-\u003eClockType \u003c\u003c 0x1c) \u003c 0) {\n        _DAT_40021004 \u003d _DAT_40021004 \u0026 0xffffc7ff | RCC_ClkInitStruct-\u003eAPB2CLKDivider \u003c\u003c 3;\n      }\n      uVar3 \u003d HAL_RCC_GetSysClockFreq();\n      SystemCoreClock \u003d uVar3 \u003e\u003e \"\"[(_DAT_40021004 \u0026 0xf0) \u003e\u003e 4];\n      HAL_InitTick(0);\n      return HAL_OK;\n    }\n    uVar5 \u003d RCC_ClkInitStruct-\u003eSYSCLKSource;\n    if (uVar5 \u003d\u003d 1) {\n      cVar2 \u003d \u0027\\x01\u0027;\n      cVar1 \u003d \u0027\\0\u0027;\n    }\n    else {\n      if (uVar5 \u003d\u003d 2) goto LAB_08002176;\n      cVar2 \u003d \u0027\\0\u0027;\n      cVar1 \u003d \u0027\\x01\u0027;\n    }\n    if ((int)((_DAT_40021000 \u003e\u003e\n              (LZCOUNT((uint)(byte)(cVar1 \u003c\u003c 6) \u003c\u003c 0x18 | (uint)(byte)(cVar2 \u003c\u003c 6) \u003c\u003c 8) \u0026 0x1fU))\n             \u003c\u003c 0x1f) \u003c 0) {\nLAB_08002176:\n      _DAT_40021004 \u003d _DAT_40021004 \u0026 0xfffffffc | uVar5;\n      uVar3 \u003d HAL_GetTick();\n      if (RCC_ClkInitStruct-\u003eSYSCLKSource \u003d\u003d 1) {\n        do {\n          if ((_DAT_40021004 \u0026 0xc) \u003d\u003d 4) goto LAB_080020ba;\n          uVar4 \u003d HAL_GetTick();\n        } while (uVar4 - uVar3 \u003c 0x1389);\n      }\n      else if (RCC_ClkInitStruct-\u003eSYSCLKSource \u003d\u003d 2) {\n        do {\n          if ((_DAT_40021004 \u0026 0xc) \u003d\u003d 8) goto LAB_080020ba;\n          uVar4 \u003d HAL_GetTick();\n        } while (uVar4 - uVar3 \u003c 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 \u0026 0xc) \u003d\u003d 0) goto LAB_080020ba;\n          uVar4 \u003d HAL_GetTick();\n        } while (uVar4 - uVar3 \u003c 0x1389);\n      }\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "SystemClock_Config"
      ],
      "called": [
        "HAL_RCC_GetSysClockFreq",
        "HAL_GetTick",
        "HAL_InitTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002214": {
      "entrypoint": "0x08002214",
      "current_name": "FUN_08002214",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08002214(void)\n\n{\n  return SystemCoreClock;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_InitTick",
        "SystemClock_Config"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002220": {
      "entrypoint": "0x08002220",
      "current_name": "FUN_08002220",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08002220(void)\n\n{\n  return SystemCoreClock \u003e\u003e \"\"[(_DAT_40021004 \u0026 0x700) \u003e\u003e 8];\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_I2C_Init",
        "UART_SetConfig"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002250": {
      "entrypoint": "0x08002250",
      "current_name": "FUN_08002250",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08002250(void)\n\n{\n  return SystemCoreClock \u003e\u003e \"\"[(_DAT_40021004 \u0026 0x3800) \u003e\u003e 0xb];\n}\n\n",
      "renaming": {},
      "calling": [
        "UART_SetConfig"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002280": {
      "entrypoint": "0x08002280",
      "current_name": "FUN_08002280",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002280(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  \n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 0xfffffffe;\n  uVar2 \u003d TIMx-\u003eCR2;\n  uVar3 \u003d OC_Config-\u003eOCMode;\n  uVar1 \u003d TIMx-\u003eCCER \u0026 0xfffffffd | OC_Config-\u003eOCPolarity;\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d (uVar1 \u0026 0xfffffff7 | OC_Config-\u003eOCNPolarity) \u0026 0xfffffffb;\n    uVar2 \u003d uVar2 \u0026 0xfffffcff | OC_Config-\u003eOCIdleState | OC_Config-\u003eOCNIdleState;\n  }\n  TIMx-\u003eCR2 \u003d uVar2;\n  TIMx-\u003eCCMR1 \u003d TIMx-\u003eCCMR1 \u0026 0xffffff8c | uVar3;\n  TIMx-\u003eCCR1 \u003d OC_Config-\u003ePulse;\n  TIMx-\u003eCCER \u003d uVar1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_ConfigChannel"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080022d0": {
      "entrypoint": "0x080022d0",
      "current_name": "FUN_080022d0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080022d0(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  \n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 0xfffffeff;\n  uVar2 \u003d TIMx-\u003eCR2;\n  uVar3 \u003d OC_Config-\u003eOCMode;\n  uVar1 \u003d TIMx-\u003eCCER \u0026 0xfffffdff | OC_Config-\u003eOCPolarity \u003c\u003c 8;\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d (uVar1 \u0026 0xfffff7ff | OC_Config-\u003eOCNPolarity \u003c\u003c 8) \u0026 0xfffffbff;\n    uVar2 \u003d uVar2 \u0026 0xffffcfff | (OC_Config-\u003eOCIdleState | OC_Config-\u003eOCNIdleState) \u003c\u003c 4;\n  }\n  TIMx-\u003eCR2 \u003d uVar2;\n  TIMx-\u003eCCMR2 \u003d TIMx-\u003eCCMR2 \u0026 0xffffff8c | uVar3;\n  TIMx-\u003eCCR3 \u003d OC_Config-\u003ePulse;\n  TIMx-\u003eCCER \u003d uVar1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_ConfigChannel"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002324": {
      "entrypoint": "0x08002324",
      "current_name": "FUN_08002324",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002324(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  uint32_t uVar4;\n  \n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 0xffffefff;\n  uVar1 \u003d TIMx-\u003eCR2;\n  uVar2 \u003d OC_Config-\u003eOCMode;\n  uVar3 \u003d OC_Config-\u003eOCPolarity;\n  uVar4 \u003d 0x40012c00;\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar4 \u003d OC_Config-\u003eOCIdleState;\n    uVar1 \u003d uVar1 \u0026 0xffffbfff;\n  }\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d uVar1 | uVar4 \u003c\u003c 6;\n  }\n  TIMx-\u003eCR2 \u003d uVar1;\n  TIMx-\u003eCCMR2 \u003d TIMx-\u003eCCMR2 \u0026 0xffff8cff | uVar2 \u003c\u003c 8;\n  TIMx-\u003eCCR4 \u003d OC_Config-\u003ePulse;\n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 0xffffdfff | uVar3 \u003c\u003c 0xc;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_ConfigChannel"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002368": {
      "entrypoint": "0x08002368",
      "current_name": "FUN_08002368",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002368(TIM_TypeDef *TIMx,TIM_Base_InitTypeDef *Structure)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 \u003d TIMx-\u003eCR1;\n  if (((((TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) || (TIMx \u003d\u003d (TIM_TypeDef *)0x40000000)) ||\n       (TIMx \u003d\u003d (TIM_TypeDef *)0x40000400)) || (TIMx \u003d\u003d (TIM_TypeDef *)0x40000800)) \u0026\u0026\n     (((uVar1 \u003d uVar1 \u0026 0xffffff8f | Structure-\u003eCounterMode, TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00 ||\n       (TIMx \u003d\u003d (TIM_TypeDef *)0x40000000)) ||\n      ((TIMx \u003d\u003d (TIM_TypeDef *)0x40000400 || (TIMx \u003d\u003d (TIM_TypeDef *)0x40000800)))))) {\n    uVar1 \u003d uVar1 \u0026 0xfffffcff | Structure-\u003eClockDivision;\n  }\n  TIMx-\u003eCR1 \u003d uVar1;\n  TIMx-\u003eARR \u003d Structure-\u003ePeriod;\n  TIMx-\u003ePSC \u003d Structure-\u003ePrescaler;\n  uVar1 \u003d 0x40012c00;\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d Structure-\u003eRepetitionCounter;\n  }\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    TIMx-\u003eRCR \u003d uVar1;\n  }\n  TIMx-\u003eEGR \u003d 1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080023d0": {
      "entrypoint": "0x080023d0",
      "current_name": "FUN_080023d0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_080023d0(TIM_HandleTypeDef *htim)\n\n{\n  if (htim !\u003d (TIM_HandleTypeDef *)0x0) {\n    if (htim-\u003eState \u003d\u003d HAL_TIM_STATE_RESET) {\n      htim-\u003eLock \u003d HAL_UNLOCKED;\n      HAL_TIM_PWM_MspInit(htim);\n    }\n    htim-\u003eState \u003d HAL_TIM_STATE_BUSY;\n    TIM_Base_SetConfig(htim-\u003eInstance,\u0026htim-\u003eInit);\n    htim-\u003eState \u003d HAL_TIM_STATE_READY;\n    return HAL_OK;\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "TIM_Base_SetConfig",
        "HAL_TIM_PWM_MspInit"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002404": {
      "entrypoint": "0x08002404",
      "current_name": "FUN_08002404",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002404(TIM_TypeDef *TIMx,TIM_OC_InitTypeDef *OC_Config)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint32_t uVar3;\n  \n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 0xffffffef;\n  uVar2 \u003d TIMx-\u003eCR2;\n  uVar3 \u003d OC_Config-\u003eOCMode;\n  uVar1 \u003d TIMx-\u003eCCER \u0026 0xffffffdf | OC_Config-\u003eOCPolarity \u003c\u003c 4;\n  if (TIMx \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d (uVar1 \u0026 0xffffff7f | OC_Config-\u003eOCNPolarity \u003c\u003c 4) \u0026 0xffffffbf;\n    uVar2 \u003d uVar2 \u0026 0xfffff3ff | (OC_Config-\u003eOCIdleState | OC_Config-\u003eOCNIdleState) \u003c\u003c 2;\n  }\n  TIMx-\u003eCR2 \u003d uVar2;\n  TIMx-\u003eCCMR1 \u003d TIMx-\u003eCCMR1 \u0026 0xffff8cff | uVar3 \u003c\u003c 8;\n  TIMx-\u003eCCR2 \u003d OC_Config-\u003ePulse;\n  TIMx-\u003eCCER \u003d uVar1;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_ConfigChannel"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800245c": {
      "entrypoint": "0x0800245c",
      "current_name": "FUN_0800245c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_0800245c(TIM_HandleTypeDef *htim,TIM_OC_InitTypeDef *sConfig,uint32_t Channel)\n\n{\n  int extraout_r1;\n  int extraout_r1_00;\n  int extraout_r1_01;\n  uint uVar1;\n  int extraout_r1_02;\n  int iVar2;\n  uint32_t uVar3;\n  TIM_TypeDef *pTVar4;\n  \n  if (htim-\u003eLock \u003d\u003d HAL_LOCKED) {\n    return HAL_BUSY;\n  }\n  htim-\u003eState \u003d HAL_TIM_STATE_BUSY;\n  htim-\u003eLock \u003d HAL_LOCKED;\n  switch(Channel) {\n  case 0:\n    TIM_OC1_SetConfig(htim-\u003eInstance,sConfig);\n    pTVar4 \u003d htim-\u003eInstance;\n    uVar1 \u003d *(uint *)(extraout_r1 + 0x10);\n    pTVar4-\u003eCCMR1 \u003d pTVar4-\u003eCCMR1 | 8;\n    pTVar4-\u003eCCMR1 \u003d pTVar4-\u003eCCMR1 \u0026 0xfffffffb;\n    uVar3 \u003d pTVar4-\u003eCCMR1 | uVar1;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    TIM_OC2_SetConfig(htim-\u003eInstance,sConfig);\n    pTVar4 \u003d htim-\u003eInstance;\n    iVar2 \u003d *(int *)(extraout_r1_00 + 0x10);\n    pTVar4-\u003eCCMR1 \u003d pTVar4-\u003eCCMR1 | 0x800;\n    pTVar4-\u003eCCMR1 \u003d pTVar4-\u003eCCMR1 \u0026 0xfffffbff;\n    uVar3 \u003d pTVar4-\u003eCCMR1 | iVar2 \u003c\u003c 8;\n    break;\n  case 8:\n    TIM_OC3_SetConfig(htim-\u003eInstance,sConfig);\n    pTVar4 \u003d htim-\u003eInstance;\n    uVar1 \u003d *(uint *)(extraout_r1_01 + 0x10);\n    pTVar4-\u003eCCMR2 \u003d pTVar4-\u003eCCMR2 | 8;\n    pTVar4-\u003eCCMR2 \u003d pTVar4-\u003eCCMR2 \u0026 0xfffffffb;\n    uVar3 \u003d pTVar4-\u003eCCMR2 | uVar1;\n    goto LAB_080024fa;\n  case 0xc:\n    TIM_OC4_SetConfig(htim-\u003eInstance,sConfig);\n    pTVar4 \u003d htim-\u003eInstance;\n    iVar2 \u003d *(int *)(extraout_r1_02 + 0x10);\n    pTVar4-\u003eCCMR2 \u003d pTVar4-\u003eCCMR2 | 0x800;\n    pTVar4-\u003eCCMR2 \u003d pTVar4-\u003eCCMR2 \u0026 0xfffffbff;\n    uVar3 \u003d pTVar4-\u003eCCMR2 | iVar2 \u003c\u003c 8;\nLAB_080024fa:\n    pTVar4-\u003eCCMR2 \u003d uVar3;\n    goto switchD_0800247a_caseD_1;\n  }\n  pTVar4-\u003eCCMR1 \u003d uVar3;\nswitchD_0800247a_caseD_1:\n  htim-\u003eState \u003d HAL_TIM_STATE_READY;\n  htim-\u003eLock \u003d HAL_UNLOCKED;\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "TIM_OC3_SetConfig",
        "TIM_OC1_SetConfig",
        "TIM_OC4_SetConfig",
        "TIM_OC2_SetConfig"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002520": {
      "entrypoint": "0x08002520",
      "current_name": "FUN_08002520",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002520(TIM_TypeDef *TIMx,uint32_t Channel,uint32_t ChannelState)\n\n{\n  TIMx-\u003eCCER \u003d TIMx-\u003eCCER \u0026 ~(1 \u003c\u003c (Channel \u0026 0xff));\n  TIMx-\u003eCCER \u003d ChannelState \u003c\u003c (Channel \u0026 0xff) | TIMx-\u003eCCER;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_Start"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002538": {
      "entrypoint": "0x08002538",
      "current_name": "FUN_08002538",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08002538(TIM_HandleTypeDef *htim,uint32_t Channel)\n\n{\n  uint32_t uVar1;\n  TIM_TypeDef *pTVar2;\n  \n  TIM_CCxChannelCmd(htim-\u003eInstance,Channel,1);\n  pTVar2 \u003d htim-\u003eInstance;\n  uVar1 \u003d 0x40012c00;\n  if (pTVar2 \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    uVar1 \u003d uRam40012c44 | 0x8000;\n  }\n  if (pTVar2 \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    pTVar2-\u003eBDTR \u003d uVar1;\n  }\n  pTVar2-\u003eCR1 \u003d pTVar2-\u003eCR1 | 1;\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "PWM_Init"
      ],
      "called": [
        "TIM_CCxChannelCmd"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002564": {
      "entrypoint": "0x08002564",
      "current_name": "FUN_08002564",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_08002564(TIM_HandleTypeDef *htim,TIM_BreakDeadTimeConfigTypeDef *sBreakDeadTimeConfig)\n\n{\n  HAL_StatusTypeDef HVar1;\n  \n  HVar1 \u003d HAL_BUSY;\n  if (htim-\u003eLock !\u003d HAL_LOCKED) {\n    htim-\u003eState \u003d HAL_TIM_STATE_BUSY;\n    htim-\u003eInstance-\u003eBDTR \u003d\n         sBreakDeadTimeConfig-\u003eOffStateRunMode | sBreakDeadTimeConfig-\u003eOffStateIDLEMode |\n         sBreakDeadTimeConfig-\u003eLockLevel | sBreakDeadTimeConfig-\u003eDeadTime |\n         sBreakDeadTimeConfig-\u003eBreakState | sBreakDeadTimeConfig-\u003eBreakPolarity |\n         sBreakDeadTimeConfig-\u003eAutomaticOutput;\n    htim-\u003eState \u003d HAL_TIM_STATE_READY;\n    HVar1 \u003d HAL_OK;\n    htim-\u003eLock \u003d HAL_UNLOCKED;\n  }\n  return HVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080025a4": {
      "entrypoint": "0x080025a4",
      "current_name": "FUN_080025a4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_080025a4(TIM_HandleTypeDef *htim,TIM_MasterConfigTypeDef *sMasterConfig)\n\n{\n  uint uVar1;\n  HAL_StatusTypeDef HVar2;\n  TIM_TypeDef *pTVar3;\n  uint uVar4;\n  \n  HVar2 \u003d HAL_BUSY;\n  if (htim-\u003eLock !\u003d HAL_LOCKED) {\n    htim-\u003eState \u003d HAL_TIM_STATE_BUSY;\n    pTVar3 \u003d htim-\u003eInstance;\n    uVar4 \u003d sMasterConfig-\u003eMasterOutputTrigger;\n    uVar1 \u003d sMasterConfig-\u003eMasterSlaveMode;\n    pTVar3-\u003eCR2 \u003d pTVar3-\u003eCR2 \u0026 0xffffff8f;\n    pTVar3-\u003eCR2 \u003d pTVar3-\u003eCR2 | uVar4;\n    pTVar3-\u003eSMCR \u003d pTVar3-\u003eSMCR \u0026 0xffffff7f;\n    pTVar3-\u003eSMCR \u003d pTVar3-\u003eSMCR | uVar1;\n    htim-\u003eState \u003d HAL_TIM_STATE_READY;\n    HVar2 \u003d HAL_OK;\n    htim-\u003eLock \u003d HAL_UNLOCKED;\n  }\n  return HVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080025e8": {
      "entrypoint": "0x080025e8",
      "current_name": "FUN_080025e8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080025e8(UART_HandleTypeDef *huart)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  uint uVar3;\n  int iVar4;\n  uint32_t uVar5;\n  int iVar6;\n  USART_TypeDef *pUVar7;\n  \n  pUVar7 \u003d huart-\u003eInstance;\n  uVar3 \u003d (huart-\u003eInit).Parity;\n  pUVar7-\u003eCR2 \u003d pUVar7-\u003eCR2 \u0026 0xffffcfff | (huart-\u003eInit).StopBits;\n  pUVar7-\u003eCR1 \u003d (huart-\u003eInit).WordLength | uVar3 | (huart-\u003eInit).Mode | pUVar7-\u003eCR1 \u0026 0xffffe9f3;\n  pUVar7-\u003eCR3 \u003d pUVar7-\u003eCR3 \u0026 0xfffffcff | (huart-\u003eInit).HwFlowCtl;\n  if (pUVar7 \u003d\u003d (USART_TypeDef *)0x40013800) {\n    uVar1 \u003d HAL_RCC_GetPCLK2Freq();\n    iVar4 \u003d (int)(((ulonglong)(uVar1 * 0x19) / (ulonglong)((huart-\u003eInit).BaudRate \u003c\u003c 2)) / 100);\n    uVar1 \u003d HAL_RCC_GetPCLK2Freq();\n    uVar5 \u003d (huart-\u003eInit).BaudRate;\n    uVar2 \u003d HAL_RCC_GetPCLK2Freq();\n    iVar6 \u003d (uVar1 * 0x19) / (uVar5 \u003c\u003c 2) +\n            (int)(((ulonglong)(uVar2 * 0x19) / (ulonglong)((huart-\u003eInit).BaudRate \u003c\u003c 2)) / 100) *\n            -100;\n    uVar1 \u003d HAL_RCC_GetPCLK2Freq();\n    uVar3 \u003d (uVar1 * 0x19) / ((huart-\u003eInit).BaudRate \u003c\u003c 2);\n    uVar1 \u003d HAL_RCC_GetPCLK2Freq();\n  }\n  else {\n    uVar1 \u003d HAL_RCC_GetPCLK1Freq();\n    iVar4 \u003d (int)(((ulonglong)(uVar1 * 0x19) / (ulonglong)((huart-\u003eInit).BaudRate \u003c\u003c 2)) / 100);\n    uVar1 \u003d HAL_RCC_GetPCLK1Freq();\n    uVar5 \u003d (huart-\u003eInit).BaudRate;\n    uVar2 \u003d HAL_RCC_GetPCLK1Freq();\n    iVar6 \u003d (uVar1 * 0x19) / (uVar5 \u003c\u003c 2) +\n            (int)(((ulonglong)(uVar2 * 0x19) / (ulonglong)((huart-\u003eInit).BaudRate \u003c\u003c 2)) / 100) *\n            -100;\n    uVar1 \u003d HAL_RCC_GetPCLK1Freq();\n    uVar3 \u003d (uVar1 * 0x19) / ((huart-\u003eInit).BaudRate \u003c\u003c 2);\n    uVar1 \u003d HAL_RCC_GetPCLK1Freq();\n  }\n  pUVar7-\u003eBRR \u003d (((uVar3 + (int)(((ulonglong)(uVar1 * 0x19) /\n                                 (ulonglong)((huart-\u003eInit).BaudRate \u003c\u003c 2)) / 100) * -100) * 0x10 +\n                 0x32) / 100 \u0026 0xf | (iVar6 * 0x10 + 0x32U) / 100 \u0026 0xf0) + iVar4 * 0x10;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_Init"
      ],
      "called": [
        "HAL_RCC_GetPCLK1Freq",
        "HAL_RCC_GetPCLK2Freq"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002724": {
      "entrypoint": "0x08002724",
      "current_name": "FUN_08002724",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_08002724(UART_HandleTypeDef *huart)\n\n{\n  USART_TypeDef *pUVar1;\n  \n  if (huart !\u003d (UART_HandleTypeDef *)0x0) {\n    if (huart-\u003eState \u003d\u003d HAL_UART_STATE_RESET) {\n      huart-\u003eLock \u003d HAL_UNLOCKED;\n      HAL_UART_MspInit(huart);\n    }\n    huart-\u003eState \u003d HAL_UART_STATE_BUSY;\n    huart-\u003eInstance-\u003eCR1 \u003d huart-\u003eInstance-\u003eCR1 \u0026 0xffffdfff;\n    UART_SetConfig(huart);\n    pUVar1 \u003d huart-\u003eInstance;\n    pUVar1-\u003eCR2 \u003d pUVar1-\u003eCR2 \u0026 0xffffb7ff;\n    pUVar1-\u003eCR3 \u003d pUVar1-\u003eCR3 \u0026 0xffffffd5;\n    pUVar1-\u003eCR1 \u003d pUVar1-\u003eCR1 | 0x2000;\n    huart-\u003eErrorCode \u003d 0;\n    huart-\u003eState \u003d HAL_UART_STATE_READY;\n    return HAL_OK;\n  }\n  return HAL_ERROR;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "HAL_UART_MspInit",
        "UART_SetConfig"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800277c": {
      "entrypoint": "0x0800277c",
      "current_name": "FUN_0800277c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef\nFUN_0800277c(UART_HandleTypeDef *huart,uint8_t *pData,uint16_t Size,uint32_t Timeout)\n\n{\n  uint32_t uVar1;\n  uint32_t uVar2;\n  HAL_UART_StateTypeDef HVar3;\n  USART_TypeDef *pUVar4;\n  uint16_t *tmp;\n  \n  if ((huart-\u003eState \u003d\u003d HAL_UART_STATE_READY) || (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_RX)) {\n    if ((pData \u003d\u003d (uint8_t *)0x0) || (Size \u003d\u003d 0)) {\n      return HAL_ERROR;\n    }\n    if (huart-\u003eLock !\u003d HAL_LOCKED) {\n      huart-\u003eLock \u003d HAL_LOCKED;\n      huart-\u003eErrorCode \u003d 0;\n      huart-\u003eTxXferSize \u003d Size;\n      if (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_RX) {\n        HVar3 \u003d HAL_UART_STATE_BUSY_TX_RX;\n      }\n      else {\n        HVar3 \u003d HAL_UART_STATE_BUSY_TX;\n      }\n      huart-\u003eTxXferCount \u003d Size;\n      huart-\u003eState \u003d HVar3;\nLAB_080027c4:\n      if (huart-\u003eTxXferCount \u003d\u003d 0) {\n        uVar1 \u003d HAL_GetTick();\n        do {\n          do {\n            if ((int)(huart-\u003eInstance-\u003eSR \u003c\u003c 0x19) \u003c 0) {\n              if (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_TX_RX) {\n                HVar3 \u003d HAL_UART_STATE_BUSY_RX;\n              }\n              else {\n                HVar3 \u003d HAL_UART_STATE_READY;\n              }\n              huart-\u003eState \u003d HVar3;\n              huart-\u003eLock \u003d HAL_UNLOCKED;\n              return HAL_OK;\n            }\n          } while (Timeout \u003d\u003d 0xffffffff);\n        } while ((Timeout !\u003d 0) \u0026\u0026 (uVar2 \u003d HAL_GetTick(), uVar2 - uVar1 \u003c\u003d Timeout));\n      }\n      else {\n        huart-\u003eTxXferCount \u003d huart-\u003eTxXferCount - 1;\n        if ((huart-\u003eInit).WordLength \u003d\u003d 0x1000) {\n          uVar1 \u003d HAL_GetTick();\n          do {\n            do {\n              if ((int)(huart-\u003eInstance-\u003eSR \u003c\u003c 0x18) \u003c 0) {\n                huart-\u003eInstance-\u003eDR \u003d *(ushort *)pData \u0026 0x1ff;\n                if ((huart-\u003eInit).Parity \u003d\u003d 0) {\n                  pData \u003d (uint8_t *)((int)pData + 2);\n                }\n                else {\nLAB_08002812:\n                  pData \u003d (uint8_t *)((int)pData + 1);\n                }\n                goto LAB_080027c4;\n              }\n            } while (Timeout \u003d\u003d 0xffffffff);\n          } while ((Timeout !\u003d 0) \u0026\u0026 (uVar2 \u003d HAL_GetTick(), uVar2 - uVar1 \u003c\u003d Timeout));\n        }\n        else {\n          uVar1 \u003d HAL_GetTick();\n          do {\n            do {\n              if ((int)(huart-\u003eInstance-\u003eSR \u003c\u003c 0x18) \u003c 0) {\n                huart-\u003eInstance-\u003eDR \u003d (uint)*pData;\n                goto LAB_08002812;\n              }\n            } while (Timeout \u003d\u003d 0xffffffff);\n          } while ((Timeout !\u003d 0) \u0026\u0026 (uVar2 \u003d HAL_GetTick(), uVar2 - uVar1 \u003c\u003d Timeout));\n        }\n      }\n      pUVar4 \u003d huart-\u003eInstance;\n      pUVar4-\u003eCR1 \u003d pUVar4-\u003eCR1 \u0026 0xffffff7f;\n      pUVar4-\u003eCR1 \u003d pUVar4-\u003eCR1 \u0026 0xffffffdf;\n      pUVar4-\u003eCR1 \u003d pUVar4-\u003eCR1 \u0026 0xfffffeff;\n      pUVar4-\u003eCR3 \u003d pUVar4-\u003eCR3 \u0026 0xfffffffe;\n      huart-\u003eState \u003d HAL_UART_STATE_READY;\n      huart-\u003eLock \u003d HAL_UNLOCKED;\n      return HAL_TIMEOUT;\n    }\n  }\n  return HAL_BUSY;\n}\n\n",
      "renaming": {},
      "calling": [
        "serialWrite"
      ],
      "called": [
        "HAL_GetTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080028a6": {
      "entrypoint": "0x080028a6",
      "current_name": "FUN_080028a6",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_080028a6(UART_HandleTypeDef *huart,uint8_t *pData,uint16_t Size)\n\n{\n  HAL_UART_StateTypeDef HVar1;\n  uint uVar2;\n  USART_TypeDef *pUVar3;\n  \n  if ((huart-\u003eState \u003d\u003d HAL_UART_STATE_READY) || (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_TX)) {\n    if ((pData \u003d\u003d (uint8_t *)0x0) || (Size \u003d\u003d 0)) {\n      return HAL_ERROR;\n    }\n    if (huart-\u003eLock !\u003d HAL_LOCKED) {\n      huart-\u003eLock \u003d HAL_LOCKED;\n      huart-\u003eErrorCode \u003d 0;\n      huart-\u003eRxXferSize \u003d Size;\n      huart-\u003eRxXferCount \u003d Size;\n      huart-\u003eLock \u003d HAL_UNLOCKED;\n      if (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_TX) {\n        HVar1 \u003d HAL_UART_STATE_BUSY_TX_RX;\n      }\n      else {\n        HVar1 \u003d HAL_UART_STATE_BUSY_RX;\n      }\n      pUVar3 \u003d huart-\u003eInstance;\n      huart-\u003eState \u003d HVar1;\n      uVar2 \u003d pUVar3-\u003eCR1;\n      huart-\u003epRxBuffPtr \u003d pData;\n      pUVar3-\u003eCR1 \u003d uVar2 | 0x100;\n      pUVar3-\u003eCR3 \u003d pUVar3-\u003eCR3 | 1;\n      pUVar3-\u003eCR1 \u003d pUVar3-\u003eCR1 | 0x20;\n      return HAL_OK;\n    }\n  }\n  return HAL_BUSY;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_RxCpltCallback",
        "serialBegin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800290a": {
      "entrypoint": "0x0800290a",
      "current_name": "FUN_0800290a",
      "code": "\nvoid FUN_0800290a(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_IRQHandler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800290c": {
      "entrypoint": "0x0800290c",
      "current_name": "FUN_0800290c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nHAL_StatusTypeDef FUN_0800290c(UART_HandleTypeDef *huart)\n\n{\n  uint32_t uVar1;\n  byte bVar2;\n  USART_TypeDef *pUVar3;\n  uint16_t uVar4;\n  ushort *puVar5;\n  uint16_t *tmp;\n  ushort *puVar6;\n  bool bVar7;\n  \n  if ((huart-\u003eState \u0026 0xef) !\u003d 0x22) {\n    return HAL_BUSY;\n  }\n  uVar1 \u003d (huart-\u003eInit).Parity;\n  pUVar3 \u003d huart-\u003eInstance;\n  puVar5 \u003d (ushort *)huart-\u003epRxBuffPtr;\n  if ((huart-\u003eInit).WordLength \u003d\u003d 0x1000) {\n    if (uVar1 \u003d\u003d 0) {\n      puVar6 \u003d puVar5 + 1;\n      *puVar5 \u003d (ushort)((pUVar3-\u003eDR \u003c\u003c 0x17) \u003e\u003e 0x17);\n    }\n    else {\n      puVar6 \u003d (ushort *)((int)puVar5 + 1);\n      *puVar5 \u003d (ushort)pUVar3-\u003eDR \u0026 0xff;\n    }\n    huart-\u003epRxBuffPtr \u003d (uint8_t *)puVar6;\n  }\n  else {\n    if (uVar1 \u003d\u003d 0) {\n      bVar2 \u003d (byte)pUVar3-\u003eDR;\n      huart-\u003epRxBuffPtr \u003d (uint8_t *)((int)puVar5 + 1);\n    }\n    else {\n      uVar1 \u003d pUVar3-\u003eDR;\n      huart-\u003epRxBuffPtr \u003d (uint8_t *)((int)puVar5 + 1);\n      bVar2 \u003d (byte)uVar1 \u0026 0x7f;\n    }\n    *(byte *)puVar5 \u003d bVar2;\n  }\n  uVar4 \u003d huart-\u003eRxXferCount - 1;\n  huart-\u003eRxXferCount \u003d uVar4;\n  if (uVar4 \u003d\u003d 0) {\n    pUVar3 \u003d huart-\u003eInstance;\n    pUVar3-\u003eCR1 \u003d pUVar3-\u003eCR1 \u0026 0xffffffdf;\n    bVar7 \u003d huart-\u003eState !\u003d HAL_UART_STATE_BUSY_TX_RX;\n    if (bVar7) {\n      uVar1 \u003d pUVar3-\u003eCR1 \u0026 0xfffffeff;\n    }\n    else {\n      pUVar3 \u003d (USART_TypeDef *)0x12;\n      uVar1 \u003d 0x32;\n    }\n    if (bVar7) {\n      pUVar3-\u003eCR1 \u003d uVar1;\n      uVar1 \u003d pUVar3-\u003eCR3 \u0026 0xfffffffe;\n    }\n    if (bVar7) {\n      pUVar3-\u003eCR3 \u003d uVar1;\n      pUVar3 \u003d (USART_TypeDef *)0x1;\n    }\n    huart-\u003eState \u003d (HAL_UART_StateTypeDef)pUVar3;\n    HAL_UART_RxCpltCallback(huart);\n  }\n  return HAL_OK;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_IRQHandler"
      ],
      "called": [
        "HAL_UART_RxCpltCallback"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002998": {
      "entrypoint": "0x08002998",
      "current_name": "FUN_08002998",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002998(UART_HandleTypeDef *huart)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_IRQHandler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800299a": {
      "entrypoint": "0x0800299a",
      "current_name": "FUN_0800299a",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800299a(UART_HandleTypeDef *huart)\n\n{\n  uint uVar1;\n  uint32_t cr1its;\n  uint16_t uVar2;\n  uint uVar3;\n  uint32_t isrflags;\n  ushort *puVar4;\n  uint16_t *tmp;\n  HAL_UART_StateTypeDef HVar5;\n  USART_TypeDef *pUVar6;\n  uint32_t uVar7;\n  uint32_t cr3its;\n  uint uVar8;\n  bool bVar9;\n  \n  pUVar6 \u003d huart-\u003eInstance;\n  uVar3 \u003d pUVar6-\u003eSR;\n  uVar1 \u003d pUVar6-\u003eCR1;\n  if ((uVar3 \u0026 0xf) \u003d\u003d 0) {\n    if (((int)(uVar3 \u003c\u003c 0x1a) \u003c 0) \u0026\u0026 ((int)(uVar1 \u003c\u003c 0x1a) \u003c 0)) {\n      UART_Receive_IT(huart);\n      return;\n    }\n  }\n  else {\n    uVar8 \u003d pUVar6-\u003eCR3 \u0026 1;\n    if ((uVar8 !\u003d 0) || ((uVar1 \u0026 0x120) !\u003d 0)) {\n      uVar7 \u003d uVar3 \u003c\u003c 0x1f;\n      if ((int)uVar7 \u003c 0) {\n        bVar9 \u003d (int)(uVar1 \u003c\u003c 0x17) \u003c 0;\n        if (bVar9) {\n          uVar7 \u003d huart-\u003eErrorCode | 1;\n        }\n        if (bVar9) {\n          huart-\u003eErrorCode \u003d uVar7;\n        }\n      }\n      if (((int)(uVar3 \u003c\u003c 0x1d) \u003c 0) \u0026\u0026 (uVar8 !\u003d 0)) {\n        huart-\u003eErrorCode \u003d huart-\u003eErrorCode | 2;\n      }\n      if (((int)(uVar3 \u003c\u003c 0x1e) \u003c 0) \u0026\u0026 (uVar8 !\u003d 0)) {\n        huart-\u003eErrorCode \u003d huart-\u003eErrorCode | 4;\n      }\n      if (((int)(uVar3 \u003c\u003c 0x1c) \u003c 0) \u0026\u0026 (uVar8 !\u003d 0)) {\n        huart-\u003eErrorCode \u003d huart-\u003eErrorCode | 8;\n      }\n      if (huart-\u003eErrorCode \u003d\u003d 0) {\n        return;\n      }\n      if (((int)(uVar3 \u003c\u003c 0x1a) \u003c 0) \u0026\u0026 ((int)(uVar1 \u003c\u003c 0x1a) \u003c 0)) {\n        UART_Receive_IT(huart);\n      }\n      pUVar6 \u003d huart-\u003eInstance;\n      if ((-1 \u003c (int)(huart-\u003eErrorCode \u003c\u003c 0x1c)) \u0026\u0026 ((pUVar6-\u003eCR3 \u0026 0x40) \u003d\u003d 0)) {\n        HAL_UART_ErrorCallback(huart);\n        huart-\u003eErrorCode \u003d 0;\n        return;\n      }\n      pUVar6-\u003eCR1 \u003d pUVar6-\u003eCR1 \u0026 0xfffffedf;\n      pUVar6-\u003eCR3 \u003d pUVar6-\u003eCR3 \u0026 0xfffffffe;\n      huart-\u003eState \u003d HAL_UART_STATE_READY;\n      HAL_UART_ErrorCallback(huart);\n      return;\n    }\n  }\n  if (((int)(uVar3 \u003c\u003c 0x18) \u003c 0) \u0026\u0026 ((int)(uVar1 \u003c\u003c 0x18) \u003c 0)) {\n    if ((huart-\u003eState \u0026 0xdf) \u003d\u003d 0x12) {\n      puVar4 \u003d (ushort *)huart-\u003epTxBuffPtr;\n      if ((huart-\u003eInit).WordLength \u003d\u003d 0x1000) {\n        pUVar6-\u003eDR \u003d *puVar4 \u0026 0x1ff;\n        if ((huart-\u003eInit).Parity \u003d\u003d 0) {\n          puVar4 \u003d puVar4 + 1;\n        }\n        else {\n          puVar4 \u003d (ushort *)((int)puVar4 + 1);\n        }\n        huart-\u003epTxBuffPtr \u003d (uint8_t *)puVar4;\n      }\n      else {\n        huart-\u003epTxBuffPtr \u003d (byte *)((int)puVar4 + 1);\n        pUVar6-\u003eDR \u003d (uint)*(byte *)puVar4;\n      }\n      uVar2 \u003d huart-\u003eTxXferCount - 1;\n      huart-\u003eTxXferCount \u003d uVar2;\n      if (uVar2 \u003d\u003d 0) {\n        pUVar6-\u003eCR1 \u003d pUVar6-\u003eCR1 \u0026 0xffffff7f;\n        pUVar6-\u003eCR1 \u003d pUVar6-\u003eCR1 | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(uVar3 \u003c\u003c 0x19) \u003c 0) \u0026\u0026 ((int)(uVar1 \u003c\u003c 0x19) \u003c 0)) {\n    pUVar6-\u003eCR1 \u003d pUVar6-\u003eCR1 \u0026 0xffffffbf;\n    if (huart-\u003eState \u003d\u003d HAL_UART_STATE_BUSY_TX_RX) {\n      HVar5 \u003d HAL_UART_STATE_BUSY_RX;\n    }\n    else {\n      HVar5 \u003d HAL_UART_STATE_READY;\n    }\n    huart-\u003eState \u003d HVar5;\n    HAL_UART_TxCpltCallback(huart);\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "USART1_IRQHandler"
      ],
      "called": [
        "HAL_UART_ErrorCallback",
        "HAL_UART_TxCpltCallback",
        "UART_Receive_IT"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002ad0": {
      "entrypoint": "0x08002ad0",
      "current_name": "FUN_08002ad0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002ad0(void)\n\n{\n  I2C_ReadByte(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  I2C_WriteByte(0xd0,0x6b,0x80,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x6b,\u0027\\x01\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x6c,\u0027\\0\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x19,\u0027\\0\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x1d,\u0027\\x03\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x1a,\u0027\\x03\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x1b,\u0027\\x10\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x1c,\u0027\\b\u0027,\u0027\\x01\u0027);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "IMU_Init"
      ],
      "called": [
        "I2C_ReadByte",
        "I2C_WriteByte"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002b48": {
      "entrypoint": "0x08002b48",
      "current_name": "FUN_08002b48",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002b48(void)\n\n{\n  undefined4 uVar1;\n  uint in_r3;\n  int iVar2;\n  int iVar3;\n  uint8_t raw_data [6];\n  \n  raw_data[0] \u003d \u0027\\0\u0027;\n  raw_data[1] \u003d \u0027\\0\u0027;\n  raw_data[2] \u003d \u0027\\0\u0027;\n  raw_data[3] \u003d \u0027\\0\u0027;\n  stack0xffffffec \u003d in_r3 \u0026 0xffff0000;\n  I2C_ReadByteArray(0xd0,0x3b,raw_data,6,\"../Src/MPU9250.c\",0x58);\n  accelRaw.y \u003d CONCAT11(raw_data[2],raw_data[3]);\n  accelRaw.x \u003d CONCAT11(raw_data[0],raw_data[1]);\n  accelRaw.z \u003d CONCAT11(raw_data[4],raw_data[5]);\n  iVar3 \u003d (int)accelRaw.y;\n  iVar2 \u003d (int)accelRaw.z;\n  uVar1 \u003d __floatsisf();\n  uVar1 \u003d __aeabi_fmul(uVar1,0x40800000);\n  accelData.x \u003d (float)__aeabi_fmul(uVar1,0x38000000);\n  uVar1 \u003d __floatsisf(iVar3);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x40800000);\n  accelData.y \u003d (float)__aeabi_fmul(uVar1,0x38000000);\n  uVar1 \u003d __floatsisf(iVar2);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x40800000);\n  accelData.z \u003d (float)__aeabi_fmul(uVar1,0x38000000);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [
        "__floatsisf",
        "__aeabi_fmul",
        "I2C_ReadByteArray"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002bf0": {
      "entrypoint": "0x08002bf0",
      "current_name": "FUN_08002bf0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002bf0(void)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int iVar3;\n  uint8_t raw_data [6];\n  \n  raw_data[0] \u003d \u0027\\0\u0027;\n  raw_data[1] \u003d \u0027\\0\u0027;\n  raw_data[2] \u003d \u0027\\0\u0027;\n  raw_data[3] \u003d \u0027\\0\u0027;\n  raw_data[4] \u003d \u0027\\0\u0027;\n  raw_data[5] \u003d \u0027\\0\u0027;\n  I2C_ReadByteArray(0xd0,0x43,raw_data,6,\"../Src/MPU9250.c\",0x7b);\n  gyroRaw.y \u003d CONCAT11(raw_data[2],raw_data[3]);\n  gyroRaw.x \u003d CONCAT11(raw_data[0],raw_data[1]);\n  gyroRaw.z \u003d CONCAT11(raw_data[4],raw_data[5]);\n  iVar3 \u003d (int)gyroRaw.y;\n  iVar2 \u003d (int)gyroRaw.z;\n  uVar1 \u003d __floatsisf();\n  uVar1 \u003d __aeabi_fmul(uVar1,0x447a0000);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x38000000);\n  gyroData.x \u003d (float)__aeabi_fsub(uVar1,gyroBias.x);\n  uVar1 \u003d __floatsisf(iVar3);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x447a0000);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x38000000);\n  gyroData.y \u003d (float)__aeabi_fsub(uVar1,gyroBias.y);\n  uVar1 \u003d __floatsisf(iVar2);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x447a0000);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x38000000);\n  gyroData.z \u003d (float)__aeabi_fsub(uVar1,gyroBias.z);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [
        "__aeabi_fsub",
        "__floatsisf",
        "__aeabi_fmul",
        "I2C_ReadByteArray"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002cb0": {
      "entrypoint": "0x08002cb0",
      "current_name": "FUN_08002cb0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002cb0(void)\n\n{\n  undefined4 uVar1;\n  uint in_r3;\n  uint8_t rawData [3];\n  \n  _rawData \u003d in_r3;\n  I2C_WriteByte(0xd0,0x37,\u0027\\\"\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0xd0,0x6a,\u0027\\x01\u0027,\u0027\\x01\u0027);\n  I2C_ReadByte(0x18,0,\"../Src/MPU9250.c\",0xad);\n  I2C_WriteByte(0x18,0xb,\u0027\\x01\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0x18,10,\u0027\\0\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0x18,10,\u0027\\x0f\u0027,\u0027\\x01\u0027);\n  I2C_ReadByteArray(0x18,0x10,rawData,3,\"../Src/MPU9250.c\",0xb6);\n  uVar1 \u003d __floatsisf((_rawData \u0026 0xff) - 0x80);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x3b800000);\n  magCalib.x \u003d (float)__addsf3(uVar1,0x3f800000);\n  uVar1 \u003d __floatsisf((_rawData \u003e\u003e 8 \u0026 0xff) - 0x80);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x3b800000);\n  magCalib.y \u003d (float)__addsf3(uVar1,0x3f800000);\n  uVar1 \u003d __floatsisf(rawData[2] - 0x80);\n  uVar1 \u003d __aeabi_fmul(uVar1,0x3b800000);\n  magCalib.z \u003d (float)__addsf3(uVar1,0x3f800000);\n  I2C_WriteByte(0x18,10,\u0027\\0\u0027,\u0027\\x01\u0027);\n  I2C_WriteByte(0x18,10,\u0027\\x16\u0027,\u0027\\x01\u0027);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "IMU_Init"
      ],
      "called": [
        "I2C_ReadByte",
        "__addsf3",
        "__floatsisf",
        "__aeabi_fmul",
        "I2C_WriteByte",
        "I2C_ReadByteArray"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002d88": {
      "entrypoint": "0x08002d88",
      "current_name": "FUN_08002d88",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002d88(void)\n\n{\n  float fVar1;\n  byte bVar2;\n  undefined4 uVar3;\n  undefined4 in_r3;\n  int iVar4;\n  int iVar5;\n  int16_t local_28;\n  undefined uStack_26;\n  undefined uStack_25;\n  undefined local_24;\n  undefined local_23;\n  uint8_t OVF;\n  undefined uStack_21;\n  \n  uStack_21 \u003d (undefined)((uint)in_r3 \u003e\u003e 0x18);\n  local_28 \u003d 0;\n  uStack_26 \u003d 0;\n  uStack_25 \u003d 0;\n  local_24 \u003d 0;\n  local_23 \u003d 0;\n  OVF \u003d \u0027\\0\u0027;\n  bVar2 \u003d I2C_ReadByte(0x18,2,\"../Src/MPU9250.c\",0xd7);\n  if ((int)((uint)bVar2 \u003c\u003c 0x1f) \u003c 0) {\n    I2C_ReadByteArray(0x18,3,(uint8_t *)\u0026local_28,7,\"../Src/MPU9250.c\",0xda);\n    fVar1 \u003d mRes;\n    if ((int)((uint)OVF \u003c\u003c 0x1c) \u003c 0) {\n      msp_txf_status.i2c_errors_count \u003d msp_txf_status.i2c_errors_count + 1;\n    }\n    else {\n      magRaw.y \u003d CONCAT11(uStack_25,uStack_26);\n      magRaw.z \u003d CONCAT11(local_23,local_24);\n      iVar5 \u003d (int)magRaw.y;\n      iVar4 \u003d (int)magRaw.z;\n      magRaw.x \u003d local_28;\n      uVar3 \u003d __floatsisf();\n      uVar3 \u003d __aeabi_fmul(uVar3,fVar1);\n      uVar3 \u003d __aeabi_fmul(uVar3,magCalib.x);\n      uVar3 \u003d __aeabi_fsub(uVar3,magBias.x);\n      magData.x \u003d (float)__aeabi_fmul(uVar3,magScale.x);\n      uVar3 \u003d __floatsisf(iVar5);\n      uVar3 \u003d __aeabi_fmul(uVar3,fVar1);\n      uVar3 \u003d __aeabi_fmul(uVar3,magCalib.y);\n      uVar3 \u003d __aeabi_fsub(uVar3,magBias.y);\n      magData.y \u003d (float)__aeabi_fmul(uVar3,magScale.y);\n      uVar3 \u003d __floatsisf(iVar4);\n      uVar3 \u003d __aeabi_fmul(uVar3,fVar1);\n      uVar3 \u003d __aeabi_fmul(uVar3,magCalib.z);\n      uVar3 \u003d __aeabi_fsub(uVar3,magBias.z);\n      magData.z \u003d (float)__aeabi_fmul(uVar3,magScale.z);\n    }\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [
        "I2C_ReadByte",
        "__aeabi_fsub",
        "__floatsisf",
        "__aeabi_fmul",
        "I2C_ReadByteArray"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002ea0": {
      "entrypoint": "0x08002ea0",
      "current_name": "FUN_08002ea0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002ea0(void)\n\n{\n  MPU9250_Init();\n  AK8963_Init();\n  MadgwickSetBeta(0.6);\n  MadgwickSetDelta(0.0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "setup"
      ],
      "called": [
        "MPU9250_Init",
        "AK8963_Init",
        "MadgwickSetDelta",
        "MadgwickSetBeta"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002ec0": {
      "entrypoint": "0x08002ec0",
      "current_name": "FUN_08002ec0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nfloat FUN_08002ec0(void)\n\n{\n  float fVar1;\n  \n  fVar1 \u003d lowPassFilter(\u0026lpf_pitch,AHRS_Angle[1]);\n  return fVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "AHRS_ComputeAngles"
      ],
      "called": [
        "lowPassFilter"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002ed4": {
      "entrypoint": "0x08002ed4",
      "current_name": "FUN_08002ed4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nfloat FUN_08002ed4(void)\n\n{\n  float fVar1;\n  \n  fVar1 \u003d lowPassFilter(\u0026lpf_roll,AHRS_Angle[0]);\n  return fVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "AHRS_ComputeAngles"
      ],
      "called": [
        "lowPassFilter"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002ee8": {
      "entrypoint": "0x08002ee8",
      "current_name": "FUN_08002ee8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nfloat FUN_08002ee8(void)\n\n{\n  int iVar1;\n  float angle;\n  float fVar2;\n  \n  fVar2 \u003d AHRS_Angle[2];\n  iVar1 \u003d __aeabi_fcmpge(AHRS_Angle[2],0xc3340000);\n  if ((iVar1 !\u003d 0) \u0026\u0026 (iVar1 \u003d __aeabi_fcmplt(fVar2,0x42b40000), iVar1 !\u003d 0)) {\n    fVar2 \u003d (float)__addsf3(fVar2,0x42b40000);\n    return fVar2;\n  }\n  fVar2 \u003d (float)__aeabi_fsub(fVar2,0x43870000);\n  return fVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "AHRS_ComputeAngles"
      ],
      "called": [
        "__aeabi_fcmpge",
        "__addsf3",
        "__aeabi_fsub",
        "__aeabi_fcmplt"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08002f28": {
      "entrypoint": "0x08002f28",
      "current_name": "FUN_08002f28",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08002f28(void)\n\n{\n  undefined4 uVar1;\n  float _deltat;\n  \n  MPU9250_ReadAccelData();\n  MPU9250_ReadGyroData();\n  AK8963_ReadData();\n  AHRS_timeNow \u003d micros();\n  uVar1 \u003d __floatunsisf(AHRS_timeNow - AHRS_lastUpdate);\n  _deltat \u003d (float)__aeabi_fdiv(uVar1,0x447a0000);\n  MadgwickSetDelta(_deltat);\n  AHRS_lastUpdate \u003d AHRS_timeNow;\n  MadgwickQuaternionUpdate\n            ((float)((int)accelData.y + -0x80000000),(float)((int)accelData.x + -0x80000000),\n             accelData.z,gyroData.y,gyroData.x,(float)((int)gyroData.z + -0x80000000),magData.x,\n             magData.y,magData.z,AHRS_Angle);\n  msp_txf_raw_imu.accx \u003d (int16_t)((uint)(int)accelRaw.x / 100);\n  msp_txf_raw_imu.accz \u003d (int16_t)((uint)(int)accelRaw.z / 100);\n  msp_txf_raw_imu.accy \u003d (int16_t)((uint)(int)accelRaw.y / 100);\n  msp_txf_raw_imu.gyrx \u003d gyroRaw.x;\n  msp_txf_raw_imu.gyry \u003d gyroRaw.y;\n  msp_txf_raw_imu.gyrz \u003d gyroRaw.z;\n  msp_txf_raw_imu.magx \u003d magRaw.x;\n  msp_txf_raw_imu.magy \u003d magRaw.y;\n  msp_txf_raw_imu.magz \u003d magRaw.z;\n  AHRS_GetRoll();\n  __aeabi_fmul();\n  msp_txf_attitude.angx \u003d __aeabi_f2iz();\n  AHRS_GetPitch();\n  __aeabi_fmul();\n  msp_txf_attitude.angy \u003d __aeabi_f2iz();\n  AHRS_GetYaw();\n  msp_txf_attitude.heading \u003d __aeabi_f2iz();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "__aeabi_f2iz",
        "__aeabi_fdiv",
        "__aeabi_fmul",
        "MPU9250_ReadAccelData",
        "micros",
        "MPU9250_ReadGyroData",
        "AHRS_GetRoll",
        "AHRS_GetPitch",
        "MadgwickQuaternionUpdate",
        "AK8963_ReadData",
        "AHRS_GetYaw",
        "MadgwickSetDelta",
        "__floatunsisf"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003034": {
      "entrypoint": "0x08003034",
      "current_name": "FUN_08003034",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08003034(void)\n\n{\n  undefined4 in_r3;\n  uint8_t rxbuf [3];\n  \n  _rxbuf \u003d in_r3;\n  I2C_ReadBytes(0xee,0,rxbuf,3,\"../Src/MS5611.c\",0x8c);\n  return (uint)CONCAT12(rxbuf[0],CONCAT11(rxbuf[1],rxbuf[2]));\n}\n\n",
      "renaming": {},
      "calling": [
        "MS5611_Update"
      ],
      "called": [
        "I2C_ReadBytes"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003068": {
      "entrypoint": "0x08003068",
      "current_name": "FUN_08003068",
      "code": "\n/* WARNING: Unknown calling convention */\n\nfloat FUN_08003068(void)\n\n{\n  float in_s0;\n  \n  return in_s0;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_UpdateAltitude"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003078": {
      "entrypoint": "0x08003078",
      "current_name": "FUN_08003078",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003078(void)\n\n{\n  float *pfVar1;\n  longlong lVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined4 uVar6;\n  float fVar7;\n  uint32_t uVar8;\n  undefined4 extraout_r1;\n  uint uVar9;\n  undefined4 unaff_r4;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  float *pfVar13;\n  undefined4 unaff_r5;\n  undefined4 unaff_r6;\n  undefined4 unaff_r7;\n  int iVar14;\n  int32_t TEMP;\n  int iVar15;\n  int iVar16;\n  int32_t dT;\n  bool bVar17;\n  undefined8 uVar18;\n  \n  if ((TEMP_READY !\u003d \u0027\\0\u0027) \u0026\u0026 (PRESSURE_READY !\u003d \u0027\\0\u0027)) {\n    iVar16 \u003d MS5611_RawTemperature + (uint)MS5611_Coefficients[5] * -0x100;\n    uVar9 \u003d (uint)((longlong)(int)(uint)MS5611_Coefficients[6] * (longlong)iVar16) \u003e\u003e 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)MS5611_Coefficients[6] * (longlong)iVar16) \u003e\u003e\n                 0x20) \u003c\u003c 9;\n    uVar10 \u003d (uint)((longlong)(int)(uint)MS5611_Coefficients[4] * (longlong)iVar16 \u003e\u003e 7);\n    uVar11 \u003d uVar10 + (uint)MS5611_Coefficients[2] * 0x10000;\n    uVar4 \u003d (uint)((ulonglong)((longlong)(int)(uint)MS5611_Coefficients[3] * (longlong)iVar16) \u003e\u003e 8)\n    ;\n    iVar14 \u003d uVar9 + 2000;\n    uVar5 \u003d uVar4 + (uint)MS5611_Coefficients[1] * 0x8000;\n    bVar17 \u003d (int)uVar9 \u003c 0;\n    if (1999 \u003c iVar14) {\n      uVar9 \u003d 0;\n    }\n    uVar3 \u003d uVar9;\n    if (bVar17 !\u003d SBORROW4(iVar14,2000)) {\n      iVar15 \u003d uVar9 * uVar9 * 5;\n      uVar9 \u003d iVar15 \u003e\u003e 2;\n      uVar3 \u003d iVar15 \u003e\u003e 1;\n    }\n    uVar12 \u003d uVar11 - uVar3;\n    lVar2 \u003d (ulonglong)(uVar5 - uVar9) * (ulonglong)MS5611_RawPressure;\n    iVar15 \u003d MS5611_RawPressure *\n             ((((int)((longlong)(int)(uint)MS5611_Coefficients[3] * (longlong)iVar16 \u003e\u003e 0x28) +\n               (uint)CARRY4(uVar4,(uint)MS5611_Coefficients[1] * 0x8000)) - ((int)uVar9 \u003e\u003e 0x1f)) -\n             (uint)(uVar5 \u003c uVar9)) + (int)((ulonglong)lVar2 \u003e\u003e 0x20);\n    uVar4 \u003d (uint)lVar2 \u003e\u003e 0x15 | iVar15 * 0x800;\n    uVar6 \u003d __floatsisf(uVar4 - uVar12 \u003e\u003e 0xf |\n                        (((iVar15 \u003e\u003e 0x15) -\n                         ((((int)((longlong)(int)(uint)MS5611_Coefficients[4] * (longlong)iVar16 \u003e\u003e\n                                 0x27) + (uint)CARRY4(uVar10,(uint)MS5611_Coefficients[2] * 0x10000)\n                           ) - ((int)uVar3 \u003e\u003e 0x1f)) - (uint)(uVar11 \u003c uVar3))) -\n                        (uint)(uVar4 \u003c uVar12)) * 0x20000);\n    fVar7 \u003d (float)__aeabi_fdiv(uVar6,0x42c80000);\n    MS5611_CompensatedPressure \u003d fVar7;\n    uVar6 \u003d __floatsisf(iVar14);\n    MS5611_CompensatedTemperature \u003d (float)__aeabi_fdiv(uVar6,0x42c80000);\n    __aeabi_fdiv(fVar7,0x447d5000);\n    uVar6 \u003d __aeabi_f2d();\n    pow((double)CONCAT44(unaff_r5,unaff_r4),(double)CONCAT44(unaff_r7,unaff_r6));\n    uVar18 \u003d __subdf3(0,0x3ff00000,uVar6,extraout_r1);\n    __muldf3((int)uVar18,(int)((ulonglong)uVar18 \u003e\u003e 0x20),0,0x40e5a540);\n    fVar7 \u003d (float)__truncdfsf2();\n    uVar6 \u003d 0;\n    pfVar13 \u003d alt_filter;\n    MS5611_Altitude \u003d fVar7;\n    do {\n      pfVar1 \u003d pfVar13 + 1;\n      *pfVar13 \u003d *pfVar1;\n      uVar6 \u003d __addsf3(uVar6);\n      pfVar13 \u003d pfVar1;\n    } while (pfVar1 !\u003d alt_filter + 0x13);\n    alt_filter[19] \u003d fVar7;\n    uVar6 \u003d __addsf3(uVar6,fVar7);\n    MS5611_FilteredAltitude \u003d (float)__aeabi_fdiv(uVar6,0x41a00000);\n    iVar14 \u003d __aeabi_f2iz();\n    msp_txf_altitude.est_alt \u003d iVar14 * 100;\n    TEMP_READY \u003d \u0027\\0\u0027;\n    PRESSURE_READY \u003d \u0027\\0\u0027;\n    I2C_WriteByte(0xee,MS5611_OSR + 0x50,\u0027\\x01\u0027,\u0027\\0\u0027);\n    temp_time \u003d millis();\n  }\n  uVar8 \u003d millis();\n  if (((10 \u003c uVar8 - temp_time) \u0026\u0026 (TEMP_READY \u003d\u003d \u0027\\0\u0027)) \u0026\u0026 (PRESSURE_READY \u003d\u003d \u0027\\0\u0027)) {\n    MS5611_RawTemperature \u003d MS5611_ReadADC();\n    TEMP_READY \u003d \u0027\\x01\u0027;\n    I2C_WriteByte(0xee,MS5611_OSR + 0x40,\u0027\\x01\u0027,\u0027\\0\u0027);\n    pressure_time \u003d millis();\n  }\n  uVar8 \u003d millis();\n  if (((10 \u003c uVar8 - pressure_time) \u0026\u0026 (TEMP_READY !\u003d \u0027\\0\u0027)) \u0026\u0026 (PRESSURE_READY \u003d\u003d \u0027\\0\u0027)) {\n    MS5611_RawPressure \u003d MS5611_ReadADC();\n    PRESSURE_READY \u003d \u0027\\x01\u0027;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "__aeabi_f2d",
        "pow",
        "__truncdfsf2",
        "__aeabi_f2iz",
        "__aeabi_fdiv",
        "__addsf3",
        "__floatsisf",
        "__muldf3",
        "millis",
        "MS5611_ReadADC",
        "I2C_WriteByte",
        "__subdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003298": {
      "entrypoint": "0x08003298",
      "current_name": "FUN_08003298",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003298(void)\n\n{\n  int i;\n  int iVar1;\n  uint8_t rxbuf [2];\n  \n  iVar1 \u003d 0;\n  I2C_WriteByte(0xee,0x1e,\u0027\\x01\u0027,\u0027\\x01\u0027);\n  delay_ms(10);\n  MS5611_OSR \u003d \u0027\\b\u0027;\n  do {\n    rxbuf[0] \u003d \u0027\\0\u0027;\n    rxbuf[1] \u003d \u0027\\0\u0027;\n    I2C_ReadByteArray(0xee,(short)iVar1 + 0xa0,rxbuf,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)MS5611_Coefficients + iVar1) \u003d CONCAT11(rxbuf[0],rxbuf[1]);\n    iVar1 \u003d iVar1 + 2;\n  } while (iVar1 !\u003d 0x10);\n  iVar1 \u003d 0;\n  do {\n    alt_filter[iVar1] \u003d 0.0;\n    iVar1 \u003d iVar1 + 1;\n  } while (iVar1 !\u003d 0x14);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "setup"
      ],
      "called": [
        "delay_ms",
        "I2C_WriteByte",
        "I2C_ReadByteArray"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003314": {
      "entrypoint": "0x08003314",
      "current_name": "FUN_08003314",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003314(float _beta)\n\n{\n  beta \u003d _beta;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "IMU_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003320": {
      "entrypoint": "0x08003320",
      "current_name": "FUN_08003320",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003320(float _deltat)\n\n{\n  deltat \u003d _deltat;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles",
        "IMU_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003330": {
      "entrypoint": "0x08003330",
      "current_name": "FUN_08003330",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003330(float ax,float ay,float az,float gx,float gy,float gz,float mx,float my,float mz,\n                 float *angle)\n\n{\n  float fVar1;\n  float fVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  float norm;\n  undefined4 uVar5;\n  int iVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  int iVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  undefined4 uVar20;\n  int iVar21;\n  float _2q1mx;\n  undefined4 uVar22;\n  float _2q1my;\n  undefined4 uVar23;\n  float _2q1mz;\n  undefined4 uVar24;\n  float _2q2mx;\n  undefined4 uVar25;\n  undefined4 uVar26;\n  undefined4 uVar27;\n  int iVar28;\n  float _2bx;\n  float _2bz;\n  float _4bz;\n  float s1;\n  float s2;\n  float s3;\n  float s4;\n  float fVar29;\n  float fVar30;\n  float fVar31;\n  float q1;\n  float q2;\n  float q4;\n  float q3;\n  undefined8 uVar32;\n  undefined8 uVar33;\n  undefined4 in_stack_ffffff78;\n  float fVar34;\n  float hy;\n  float hx;\n  \n  fVar31 \u003d q[3];\n  fVar30 \u003d q[2];\n  fVar29 \u003d q[0];\n  fVar34 \u003d q[1];\n  uVar3 \u003d __aeabi_fmul(ax,ax);\n  uVar4 \u003d __aeabi_fmul(ay);\n  uVar3 \u003d __addsf3(uVar3,uVar4);\n  uVar4 \u003d __aeabi_fmul(az);\n  __addsf3(uVar3,uVar4);\n  __aeabi_f2d();\n  sqrt((double)CONCAT44(fVar34,in_stack_ffffff78));\n  uVar3 \u003d __truncdfsf2();\n  norm \u003d (float)__aeabi_fcmpeq(uVar3,0);\n  if (norm \u003d\u003d 0.0) {\n    uVar4 \u003d __aeabi_fmul(mx);\n    uVar5 \u003d __aeabi_fmul(my);\n    uVar4 \u003d __addsf3(uVar4,uVar5);\n    uVar5 \u003d __aeabi_fmul(mz);\n    __addsf3(uVar4,uVar5);\n    __aeabi_f2d();\n    sqrt((double)CONCAT44(fVar34,in_stack_ffffff78));\n    uVar4 \u003d __truncdfsf2();\n    iVar6 \u003d __aeabi_fcmpeq(uVar4,0);\n    if (iVar6 \u003d\u003d 0) {\n      uVar32 \u003d __aeabi_f2d(gx);\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0xa2529d39,0x3f91df46);\n      uVar5 \u003d __truncdfsf2();\n      uVar32 \u003d __aeabi_f2d(gy);\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0xa2529d39,0x3f91df46);\n      uVar7 \u003d __truncdfsf2();\n      uVar32 \u003d __aeabi_f2d(gz);\n      __muldf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0xa2529d39,0x3f91df46);\n      uVar8 \u003d __truncdfsf2();\n      iVar6 \u003d __addsf3(fVar29);\n      uVar9 \u003d __addsf3(fVar34);\n      iVar10 \u003d __addsf3(fVar30,fVar30);\n      uVar11 \u003d __addsf3(fVar31,fVar31);\n      uVar12 \u003d __aeabi_fmul(fVar29);\n      uVar13 \u003d __aeabi_fmul(fVar29,fVar34);\n      uVar14 \u003d __aeabi_fmul(fVar29,fVar30);\n      uVar15 \u003d __aeabi_fmul(fVar34);\n      uVar16 \u003d __aeabi_fmul(fVar34,fVar31);\n      uVar17 \u003d __aeabi_fmul(fVar30,fVar30);\n      uVar18 \u003d __aeabi_fmul(fVar31,fVar31);\n      uVar3 \u003d __aeabi_fdiv(0x3f800000,uVar3);\n      uVar4 \u003d __aeabi_fdiv(0x3f800000,uVar4);\n      uVar19 \u003d __aeabi_fmul(mx,uVar4);\n      uVar20 \u003d __aeabi_fmul(my,uVar4);\n      uVar4 \u003d __aeabi_fmul(mz,uVar4);\n      iVar21 \u003d __aeabi_fmul(iVar6,uVar19);\n      uVar22 \u003d __aeabi_fmul(iVar6,uVar20);\n      uVar23 \u003d __aeabi_fmul(iVar6,uVar4);\n      uVar24 \u003d __aeabi_fmul(uVar9,uVar19);\n      uVar25 \u003d __aeabi_fmul(uVar12,uVar19);\n      uVar26 \u003d __aeabi_fmul(fVar31,uVar22);\n      uVar25 \u003d __aeabi_fsub(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(fVar30,uVar23);\n      uVar25 \u003d __addsf3(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar15,uVar19);\n      uVar25 \u003d __addsf3(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar9,uVar20);\n      uVar26 \u003d __aeabi_fmul(uVar26,fVar30);\n      uVar25 \u003d __addsf3(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar9,uVar4);\n      uVar26 \u003d __aeabi_fmul(uVar26,fVar31);\n      uVar25 \u003d __addsf3(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar17,uVar19);\n      uVar25 \u003d __aeabi_fsub(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar18,uVar19);\n      uVar25 \u003d __aeabi_fsub(uVar25,uVar26);\n      uVar26 \u003d __aeabi_fmul(fVar31,iVar21);\n      uVar27 \u003d __aeabi_fmul(uVar12,uVar20);\n      uVar26 \u003d __addsf3(uVar26,uVar27);\n      uVar23 \u003d __aeabi_fmul(fVar34,uVar23);\n      uVar23 \u003d __aeabi_fsub(uVar26,uVar23);\n      uVar26 \u003d __aeabi_fmul(fVar30,uVar24);\n      uVar23 \u003d __addsf3(uVar23,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar15,uVar20);\n      uVar23 \u003d __aeabi_fsub(uVar23,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar17,uVar20);\n      uVar23 \u003d __addsf3(uVar23,uVar26);\n      uVar26 \u003d __aeabi_fmul(iVar10,uVar4);\n      uVar26 \u003d __aeabi_fmul(uVar26,fVar31);\n      uVar23 \u003d __addsf3(uVar23,uVar26);\n      uVar26 \u003d __aeabi_fmul(uVar18,uVar20);\n      uVar23 \u003d __aeabi_fsub(uVar23,uVar26);\n      uVar25 \u003d __aeabi_fmul(uVar25,uVar25);\n      uVar23 \u003d __aeabi_fmul(uVar23,uVar23);\n      __addsf3(uVar25,uVar23);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(fVar34,in_stack_ffffff78));\n      iVar28 \u003d __truncdfsf2();\n      uVar23 \u003d __aeabi_fmul(iVar21 + -0x80000000,fVar30);\n      uVar22 \u003d __aeabi_fmul(fVar34,uVar22);\n      uVar22 \u003d __addsf3(uVar23,uVar22);\n      uVar12 \u003d __aeabi_fmul(uVar12,uVar4);\n      uVar12 \u003d __addsf3(uVar22,uVar12);\n      uVar22 \u003d __aeabi_fmul(fVar31,uVar24);\n      uVar12 \u003d __addsf3(uVar12,uVar22);\n      uVar22 \u003d __aeabi_fmul(uVar15,uVar4);\n      uVar12 \u003d __aeabi_fsub(uVar12,uVar22);\n      uVar22 \u003d __aeabi_fmul(iVar10,uVar20);\n      uVar22 \u003d __aeabi_fmul(uVar22,fVar31);\n      uVar12 \u003d __addsf3(uVar12,uVar22);\n      uVar22 \u003d __aeabi_fmul(uVar17,uVar4);\n      uVar12 \u003d __aeabi_fsub(uVar12,uVar22);\n      uVar22 \u003d __aeabi_fmul(uVar18,uVar4);\n      uVar12 \u003d __addsf3(uVar12,uVar22);\n      _2bz \u003d (float)__addsf3(uVar12,uVar12);\n      uVar22 \u003d __addsf3(uVar16);\n      uVar23 \u003d __aeabi_fmul(fVar30,iVar6);\n      uVar22 \u003d __aeabi_fsub(uVar22,uVar23);\n      uVar23 \u003d __aeabi_fmul(ax,uVar3);\n      uVar22 \u003d __aeabi_fsub(uVar22,uVar23);\n      uVar23 \u003d __aeabi_fmul(fVar31,iVar10);\n      uVar24 \u003d __addsf3(uVar13);\n      uVar23 \u003d __addsf3(uVar23,uVar24);\n      uVar24 \u003d __aeabi_fmul(ay,uVar3);\n      uVar23 \u003d __aeabi_fsub(uVar23,uVar24);\n      uVar24 \u003d __aeabi_fmul(fVar30,uVar12);\n      uVar25 \u003d __aeabi_fsub(0x3f000000,uVar17);\n      uVar18 \u003d __aeabi_fsub(uVar25,uVar18);\n      uVar18 \u003d __aeabi_fmul(uVar18,iVar28);\n      uVar25 \u003d __aeabi_fsub(uVar16,uVar14);\n      uVar25 \u003d __aeabi_fmul(uVar25,uVar12);\n      uVar18 \u003d __addsf3(uVar18,uVar25);\n      uVar18 \u003d __aeabi_fsub(uVar18,uVar19);\n      uVar19 \u003d __aeabi_fmul(fVar34,uVar12);\n      uVar25 \u003d __aeabi_fmul(fVar34,fVar30);\n      uVar26 \u003d __aeabi_fmul(fVar29,fVar31);\n      uVar25 \u003d __aeabi_fsub(uVar25,uVar26);\n      uVar25 \u003d __aeabi_fmul(uVar25,iVar28);\n      uVar26 \u003d __aeabi_fmul(fVar30,fVar31);\n      uVar13 \u003d __addsf3(uVar26,uVar13);\n      uVar13 \u003d __aeabi_fmul(uVar13,uVar12);\n      uVar13 \u003d __addsf3(uVar25,uVar13);\n      uVar13 \u003d __aeabi_fsub(uVar13,uVar20);\n      uVar20 \u003d __aeabi_fmul(fVar30,iVar28);\n      uVar25 \u003d __aeabi_fsub(0x3f000000,uVar15);\n      uVar25 \u003d __aeabi_fsub(uVar25,uVar17);\n      uVar25 \u003d __aeabi_fmul(uVar25,uVar12);\n      uVar14 \u003d __addsf3(uVar14,uVar16);\n      uVar14 \u003d __aeabi_fmul(uVar14,iVar28);\n      uVar14 \u003d __addsf3(uVar25,uVar14);\n      uVar4 \u003d __aeabi_fsub(uVar14,uVar4);\n      uVar14 \u003d __aeabi_fmul(iVar10 + -0x80000000,uVar22);\n      uVar16 \u003d __aeabi_fmul(uVar9,uVar23);\n      uVar14 \u003d __addsf3(uVar14,uVar16);\n      uVar16 \u003d __aeabi_fmul(uVar24,uVar18);\n      uVar14 \u003d __aeabi_fsub(uVar14,uVar16);\n      uVar16 \u003d __aeabi_fmul(fVar31,iVar28 + -0x80000000);\n      uVar16 \u003d __addsf3(uVar16,uVar19);\n      uVar16 \u003d __aeabi_fmul(uVar16,uVar13);\n      uVar14 \u003d __addsf3(uVar14,uVar16);\n      uVar16 \u003d __aeabi_fmul(uVar20,uVar4);\n      uVar14 \u003d __addsf3(uVar14,uVar16);\n      uVar15 \u003d __addsf3(uVar15);\n      uVar15 \u003d __aeabi_fsub(0x3f800000,uVar15);\n      uVar16 \u003d __addsf3(uVar17);\n      uVar15 \u003d __aeabi_fsub(uVar15,uVar16);\n      uVar3 \u003d __aeabi_fmul(az,uVar3);\n      uVar3 \u003d __aeabi_fsub(uVar15,uVar3);\n      uVar15 \u003d __aeabi_fmul(fVar31,uVar12);\n      uVar12 \u003d __aeabi_fmul(fVar29,uVar12);\n      uVar16 \u003d __aeabi_fmul(uVar11,uVar22);\n      uVar17 \u003d __aeabi_fmul(iVar6,uVar23);\n      uVar16 \u003d __addsf3(uVar16,uVar17);\n      uVar17 \u003d __aeabi_fmul(fVar34,0x40800000);\n      uVar17 \u003d __aeabi_fmul(uVar17,uVar3);\n      uVar16 \u003d __aeabi_fsub(uVar16,uVar17);\n      uVar17 \u003d __aeabi_fmul(uVar18,uVar15);\n      uVar16 \u003d __addsf3(uVar16,uVar17);\n      uVar17 \u003d __addsf3(uVar20,uVar12);\n      uVar17 \u003d __aeabi_fmul(uVar17,uVar13);\n      uVar16 \u003d __addsf3(uVar16,uVar17);\n      uVar17 \u003d __aeabi_fmul(fVar31,iVar28);\n      uVar20 \u003d __aeabi_fmul(fVar34,_2bz);\n      uVar17 \u003d __aeabi_fsub(uVar17,uVar20);\n      uVar17 \u003d __aeabi_fmul(uVar17,uVar4);\n      uVar16 \u003d __addsf3(uVar16,uVar17);\n      iVar21 \u003d __addsf3(iVar28,iVar28);\n      uVar17 \u003d __aeabi_fmul(fVar34,iVar28);\n      uVar20 \u003d __aeabi_fmul(iVar6 + -0x80000000,uVar22);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar23);\n      uVar11 \u003d __addsf3(uVar20,uVar11);\n      uVar20 \u003d __aeabi_fmul(fVar30,0x40800000);\n      uVar3 \u003d __aeabi_fmul(uVar20,uVar3);\n      uVar3 \u003d __aeabi_fsub(uVar11,uVar3);\n      uVar11 \u003d __aeabi_fmul(fVar30,iVar21 + -0x80000000);\n      uVar11 \u003d __aeabi_fsub(uVar11,uVar12);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar18);\n      uVar3 \u003d __addsf3(uVar3,uVar11);\n      uVar11 \u003d __addsf3(uVar15,uVar17);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar13);\n      uVar3 \u003d __addsf3(uVar3,uVar11);\n      uVar11 \u003d __aeabi_fmul(fVar29,iVar28);\n      uVar12 \u003d __aeabi_fmul(fVar30,_2bz);\n      uVar11 \u003d __aeabi_fsub(uVar11,uVar12);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar4);\n      uVar3 \u003d __addsf3(uVar3,uVar11);\n      uVar9 \u003d __aeabi_fmul(uVar9,uVar22);\n      uVar11 \u003d __aeabi_fmul(iVar10,uVar23);\n      uVar9 \u003d __addsf3(uVar9,uVar11);\n      uVar11 \u003d __aeabi_fmul(fVar31,iVar21 + -0x80000000);\n      uVar11 \u003d __addsf3(uVar11,uVar19);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar18);\n      uVar9 \u003d __addsf3(uVar9,uVar11);\n      uVar11 \u003d __aeabi_fmul(fVar29,iVar28 + -0x80000000);\n      uVar11 \u003d __addsf3(uVar11,uVar24);\n      uVar11 \u003d __aeabi_fmul(uVar11,uVar13);\n      uVar9 \u003d __addsf3(uVar9,uVar11);\n      uVar4 \u003d __aeabi_fmul(uVar4,uVar17);\n      uVar4 \u003d __addsf3(uVar9,uVar4);\n      uVar9 \u003d __aeabi_fmul(uVar14);\n      uVar11 \u003d __aeabi_fmul(uVar16);\n      uVar9 \u003d __addsf3(uVar9,uVar11);\n      uVar11 \u003d __aeabi_fmul(uVar3,uVar3);\n      uVar9 \u003d __addsf3(uVar9,uVar11);\n      uVar11 \u003d __aeabi_fmul(uVar4,uVar4);\n      __addsf3(uVar9,uVar11);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(fVar34,in_stack_ffffff78));\n      uVar9 \u003d __truncdfsf2();\n      uVar9 \u003d __aeabi_fdiv(0x3f800000,uVar9);\n      fVar1 \u003d beta;\n      uVar11 \u003d __aeabi_fmul((int)fVar34 + -0x80000000,uVar5);\n      uVar12 \u003d __aeabi_fmul(fVar30,uVar7);\n      uVar11 \u003d __aeabi_fsub(uVar11,uVar12);\n      uVar12 \u003d __aeabi_fmul(fVar31,uVar8);\n      uVar11 \u003d __aeabi_fsub(uVar11,uVar12);\n      uVar11 \u003d __aeabi_fmul(uVar11,0x3f000000);\n      uVar12 \u003d __aeabi_fmul(uVar14,uVar9);\n      fVar2 \u003d deltat;\n      uVar12 \u003d __aeabi_fmul(uVar12,fVar1);\n      uVar11 \u003d __aeabi_fsub(uVar11,uVar12);\n      uVar11 \u003d __aeabi_fmul(uVar11,fVar2);\n      uVar11 \u003d __addsf3(uVar11,fVar29);\n      uVar12 \u003d __aeabi_fmul(fVar29,uVar5);\n      uVar13 \u003d __aeabi_fmul(fVar30,uVar8);\n      fVar2 \u003d deltat;\n      uVar12 \u003d __addsf3(uVar12,uVar13);\n      uVar13 \u003d __aeabi_fmul(fVar31,uVar7);\n      uVar12 \u003d __aeabi_fsub(uVar12,uVar13);\n      uVar12 \u003d __aeabi_fmul(uVar12,0x3f000000);\n      uVar13 \u003d __aeabi_fmul(uVar16,uVar9);\n      uVar13 \u003d __aeabi_fmul(uVar13,fVar1);\n      uVar12 \u003d __aeabi_fsub(uVar12,uVar13);\n      uVar12 \u003d __aeabi_fmul(uVar12,fVar2);\n      uVar12 \u003d __addsf3(uVar12,fVar34);\n      fVar2 \u003d deltat;\n      uVar13 \u003d __aeabi_fmul(fVar29,uVar7);\n      uVar14 \u003d __aeabi_fmul(fVar34,uVar8);\n      uVar13 \u003d __aeabi_fsub(uVar13,uVar14);\n      uVar14 \u003d __aeabi_fmul(fVar31,uVar5);\n      uVar13 \u003d __addsf3(uVar13,uVar14);\n      uVar13 \u003d __aeabi_fmul(uVar13,0x3f000000);\n      uVar3 \u003d __aeabi_fmul(uVar3,uVar9);\n      uVar3 \u003d __aeabi_fmul(uVar3,fVar1);\n      uVar3 \u003d __aeabi_fsub(uVar13,uVar3);\n      uVar3 \u003d __aeabi_fmul(uVar3,fVar2);\n      uVar3 \u003d __addsf3(uVar3,fVar30);\n      uVar8 \u003d __aeabi_fmul(fVar29,uVar8);\n      uVar7 \u003d __aeabi_fmul(fVar34,uVar7);\n      uVar7 \u003d __addsf3(uVar8,uVar7);\n      uVar5 \u003d __aeabi_fmul(fVar30,uVar5);\n      uVar5 \u003d __aeabi_fsub(uVar7,uVar5);\n      uVar5 \u003d __aeabi_fmul(uVar5,0x3f000000);\n      uVar4 \u003d __aeabi_fmul(uVar4,uVar9);\n      uVar4 \u003d __aeabi_fmul(uVar4,fVar1);\n      fVar29 \u003d deltat;\n      uVar4 \u003d __aeabi_fsub(uVar5,uVar4);\n      uVar4 \u003d __aeabi_fmul(uVar4,fVar29);\n      uVar4 \u003d __addsf3(uVar4,fVar31);\n      uVar5 \u003d __aeabi_fmul(uVar11,uVar11);\n      uVar8 \u003d __aeabi_fmul(uVar12,uVar12);\n      uVar5 \u003d __addsf3(uVar5,uVar8);\n      uVar8 \u003d __aeabi_fmul(uVar3,uVar3);\n      uVar5 \u003d __addsf3(uVar5,uVar8);\n      uVar8 \u003d __aeabi_fmul(uVar4,uVar4);\n      __addsf3(uVar5,uVar8);\n      __aeabi_f2d();\n      sqrt((double)CONCAT44(uVar7,in_stack_ffffff78));\n      uVar5 \u003d __truncdfsf2();\n      uVar5 \u003d __aeabi_fdiv(0x3f800000,uVar5);\n      fVar29 \u003d (float)__aeabi_fmul(uVar11,uVar5);\n      q[0] \u003d fVar29;\n      fVar30 \u003d (float)__aeabi_fmul(uVar12,uVar5);\n      q[1] \u003d fVar30;\n      fVar31 \u003d (float)__aeabi_fmul(uVar3,uVar5);\n      q[2] \u003d fVar31;\n      q[3] \u003d (float)__aeabi_fmul(uVar4,uVar5);\n      uVar3 \u003d __aeabi_fmul(fVar30,q[3]);\n      uVar4 \u003d __aeabi_fmul(fVar29,fVar31);\n      uVar3 \u003d __aeabi_fsub(uVar3,uVar4);\n      __addsf3(uVar3,uVar3);\n      __aeabi_f2d();\n      asin((double)CONCAT44(uVar7,in_stack_ffffff78));\n      uVar32 \u003d __muldf3();\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0x54442d18,0x400921fb);\n      fVar29 \u003d (float)__truncdfsf2();\n      *angle \u003d fVar29;\n      fVar30 \u003d q[1];\n      fVar29 \u003d q[0];\n      uVar3 \u003d __aeabi_fmul(q[0],q[0]);\n      uVar4 \u003d __aeabi_fmul(fVar30,fVar30);\n      uVar3 \u003d __aeabi_fsub(uVar3,uVar4);\n      fVar31 \u003d q[2];\n      uVar4 \u003d __aeabi_fmul(q[2],q[2]);\n      uVar3 \u003d __aeabi_fsub(uVar3,uVar4);\n      fVar34 \u003d q[3];\n      uVar4 \u003d __aeabi_fmul(q[3],q[3]);\n      __addsf3(uVar3,uVar4);\n      uVar32 \u003d __aeabi_f2d();\n      uVar3 \u003d __aeabi_fmul(fVar29,fVar30);\n      uVar4 \u003d __aeabi_fmul(fVar31,fVar34);\n      uVar3 \u003d __addsf3(uVar3,uVar4);\n      __addsf3(uVar3,uVar3);\n      uVar33 \u003d __aeabi_f2d();\n      uVar32 \u003d atan2((int)uVar33,(int)((ulonglong)uVar33 \u003e\u003e 0x20),(int)uVar32,\n                     (int)((ulonglong)uVar32 \u003e\u003e 0x20));\n      uVar32 \u003d __muldf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0,0x40668000);\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0x54442d18,0x400921fb);\n      fVar29 \u003d (float)__truncdfsf2();\n      angle[1] \u003d fVar29;\n      fVar30 \u003d q[1];\n      fVar29 \u003d q[0];\n      uVar3 \u003d __aeabi_fmul(q[0],q[0]);\n      uVar4 \u003d __aeabi_fmul(fVar30,fVar30);\n      uVar3 \u003d __addsf3(uVar3,uVar4);\n      fVar31 \u003d q[2];\n      uVar4 \u003d __aeabi_fmul(q[2],q[2]);\n      uVar3 \u003d __aeabi_fsub(uVar3,uVar4);\n      fVar34 \u003d q[3];\n      uVar4 \u003d __aeabi_fmul(q[3],q[3]);\n      __aeabi_fsub(uVar3,uVar4);\n      uVar32 \u003d __aeabi_f2d();\n      uVar3 \u003d __aeabi_fmul(fVar30,fVar31);\n      uVar4 \u003d __aeabi_fmul(fVar29,fVar34);\n      uVar3 \u003d __addsf3(uVar3,uVar4);\n      __addsf3(uVar3,uVar3);\n      uVar33 \u003d __aeabi_f2d();\n      uVar32 \u003d atan2((int)uVar33,(int)((ulonglong)uVar33 \u003e\u003e 0x20),(int)uVar32,\n                     (int)((ulonglong)uVar32 \u003e\u003e 0x20));\n      uVar32 \u003d __muldf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0,0x40668000);\n      __divdf3((int)uVar32,(int)((ulonglong)uVar32 \u003e\u003e 0x20),0x54442d18,0x400921fb);\n      fVar29 \u003d (float)__truncdfsf2();\n      angle[2] \u003d fVar29;\n    }\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [
        "__aeabi_f2d",
        "__truncdfsf2",
        "__aeabi_fdiv",
        "__aeabi_fcmpeq",
        "__addsf3",
        "__aeabi_fsub",
        "__muldf3",
        "__aeabi_fmul",
        "atan2",
        "sqrt",
        "__divdf3",
        "asin"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003eac": {
      "entrypoint": "0x08003eac",
      "current_name": "FUN_08003eac",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08003eac(uint32_t a0,uint32_t a1,int32_t a2)\n\n{\n  software_interrupt(0x3f);\n  return a0;\n}\n\n",
      "renaming": {},
      "calling": [
        "startForkserver"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003eb0": {
      "entrypoint": "0x08003eb0",
      "current_name": "FUN_08003eb0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nint FUN_08003eb0(int ticks)\n\n{\n  uint32_t uVar1;\n  \n  if (noHyperCall \u003d\u003d 0) {\n    uVar1 \u003d aflCall(1,ticks,0);\n    return uVar1;\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "main"
      ],
      "called": [
        "aflCall"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003ec8": {
      "entrypoint": "0x08003ec8",
      "current_name": "FUN_08003ec8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nint FUN_08003ec8(CircularBuffer *cb,uint8_t data)\n\n{\n  cb-\u003esize \u003d cb-\u003esize + 1;\n  cb-\u003ebuffer[cb-\u003etail] \u003d data;\n  cb-\u003etail \u003d cb-\u003etail + 1 \u0026 0x7ff;\n  return 1;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_RxCpltCallback"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003ef2": {
      "entrypoint": "0x08003ef2",
      "current_name": "FUN_08003ef2",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003ef2(CircularBuffer *cb)\n\n{\n  int i;\n  \n  i \u003d 0;\n  cb-\u003ehead \u003d 0;\n  cb-\u003etail \u003d 0;\n  cb-\u003esize \u003d 0;\n  do {\n    cb-\u003ebuffer[i] \u003d \u0027\\0\u0027;\n    i \u003d i + 1;\n  } while (i !\u003d 0x800);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "serialFlush"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003f0e": {
      "entrypoint": "0x08003f0e",
      "current_name": "FUN_08003f0e",
      "code": "\n/* WARNING: Unknown calling convention */\n\nfloat FUN_08003f0e(LPF *var,float current)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  float fVar3;\n  float extraout_s0;\n  \n  fVar3 \u003d var-\u003ebeta;\n  uVar1 \u003d __aeabi_fsub(0x3f800000,fVar3);\n  uVar1 \u003d __aeabi_fmul(uVar1,current);\n  uVar2 \u003d __aeabi_fmul(fVar3,var-\u003elast);\n  fVar3 \u003d (float)__addsf3(uVar2,uVar1);\n  var-\u003elast \u003d fVar3;\n  return extraout_s0;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_GetRoll",
        "AHRS_GetPitch"
      ],
      "called": [
        "__addsf3",
        "__aeabi_fsub",
        "__aeabi_fmul"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003f3c": {
      "entrypoint": "0x08003f3c",
      "current_name": "FUN_08003f3c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003f3c(int led_white,int led_red,int led_blue)\n\n{\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x8000,led_white \u003d\u003d 0);\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x4000,led_red \u003d\u003d 0);\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x2000,led_blue \u003d\u003d 0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update",
        "LED_StartupSequence"
      ],
      "called": [
        "HAL_GPIO_WritePin"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003f7c": {
      "entrypoint": "0x08003f7c",
      "current_name": "FUN_08003f7c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003f7c(void)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d 3;\n  do {\n    toggleLED(1,0,0);\n    delay_ms(100);\n    toggleLED(0,1,0);\n    delay_ms(100);\n    toggleLED(0,0,1);\n    delay_ms(100);\n    iVar1 \u003d iVar1 + -1;\n  } while (iVar1 !\u003d 0);\n  toggleLED(1,1,1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Devices_Init"
      ],
      "called": [
        "toggleLED",
        "delay_ms"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003fc4": {
      "entrypoint": "0x08003fc4",
      "current_name": "FUN_08003fc4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003fc4(int pwm)\n\n{\n  (htim4.Instance)-\u003eCCR4 \u003d pwm;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_StopAll",
        "Motor_SetSpeed"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003fd0": {
      "entrypoint": "0x08003fd0",
      "current_name": "FUN_08003fd0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003fd0(int pwm)\n\n{\n  (htim4.Instance)-\u003eCCR3 \u003d pwm;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_StopAll",
        "Motor_SetSpeed"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003fdc": {
      "entrypoint": "0x08003fdc",
      "current_name": "FUN_08003fdc",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003fdc(int pwm)\n\n{\n  (htim2.Instance)-\u003eCCR2 \u003d pwm;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_StopAll",
        "Motor_SetSpeed"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003fe8": {
      "entrypoint": "0x08003fe8",
      "current_name": "FUN_08003fe8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003fe8(int pwm)\n\n{\n  (htim3.Instance)-\u003eCCR3 \u003d pwm;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_StopAll",
        "Motor_SetSpeed"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08003ff4": {
      "entrypoint": "0x08003ff4",
      "current_name": "FUN_08003ff4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08003ff4(void)\n\n{\n  HAL_TIM_PWM_Start(\u0026htim2,4);\n  HAL_TIM_PWM_Start(\u0026htim3,8);\n  HAL_TIM_PWM_Start(\u0026htim4,8);\n  HAL_TIM_PWM_Start(\u0026htim4,0xc);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Devices_Init"
      ],
      "called": [
        "HAL_TIM_PWM_Start"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004028": {
      "entrypoint": "0x08004028",
      "current_name": "FUN_08004028",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004028(void)\n\n{\n  Peripherals_Init();\n  PWM_Init();\n  LED_StartupSequence();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "setup"
      ],
      "called": [
        "Peripherals_Init",
        "LED_StartupSequence",
        "PWM_Init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800403c": {
      "entrypoint": "0x0800403c",
      "current_name": "FUN_0800403c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800403c(uint16_t device_add,uint16_t register_add,uint8_t register_val,uint8_t delay_mode)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint8_t ret;\n  uint8_t byte [1];\n  \n  byte[0] \u003d register_val;\n  HVar1 \u003d HAL_I2C_Mem_Write(\u0026hi2c1,device_add,register_add,1,byte,1,200);\n  if (HVar1 !\u003d HAL_OK) {\n    _Error_Handler(\"../Src/i2c.c\",0x1b);\n  }\n  if (delay_mode !\u003d \u0027\\0\u0027) {\n    delay_ms(0x32);\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "MPU9250_Init",
        "AK8963_Init",
        "MS5611_Init",
        "MS5611_Update"
      ],
      "called": [
        "delay_ms",
        "HAL_I2C_Mem_Write",
        "_Error_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800407c": {
      "entrypoint": "0x0800407c",
      "current_name": "FUN_0800407c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint8_t FUN_0800407c(uint16_t device_add,uint16_t register_add,char *file,int line)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint8_t ret;\n  uint8_t byte [1];\n  \n  byte[0] \u003d \u0027\\0\u0027;\n  HVar1 \u003d HAL_I2C_Mem_Read(\u0026hi2c1,device_add,register_add,1,byte,1,200);\n  if (HVar1 !\u003d HAL_OK) {\n    _Error_Handler(file,line);\n  }\n  return byte[0];\n}\n\n",
      "renaming": {},
      "calling": [
        "MPU9250_Init",
        "AK8963_Init",
        "AK8963_ReadData",
        "I2C_ReadByteArray"
      ],
      "called": [
        "HAL_I2C_Mem_Read",
        "_Error_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080040b8": {
      "entrypoint": "0x080040b8",
      "current_name": "FUN_080040b8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080040b8(uint16_t device_add,uint16_t register_add,uint8_t *bytes,uint16_t size,char *file,\n                 int line)\n\n{\n  HAL_StatusTypeDef HVar1;\n  uint8_t ret;\n  \n  HVar1 \u003d HAL_I2C_Mem_Read(\u0026hi2c1,device_add,register_add,1,bytes,size,200);\n  if (HVar1 !\u003d HAL_OK) {\n    _Error_Handler(file,line);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "MS5611_ReadADC"
      ],
      "called": [
        "HAL_I2C_Mem_Read",
        "_Error_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080040e8": {
      "entrypoint": "0x080040e8",
      "current_name": "FUN_080040e8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080040e8(uint16_t device_add,uint16_t register_add,uint8_t *byte_array,uint16_t size,\n                 char *file,int line)\n\n{\n  uint8_t uVar1;\n  int iVar2;\n  uint8_t *puVar3;\n  \n  puVar3 \u003d byte_array + -1;\n  for (iVar2 \u003d 0; iVar2 \u003c (int)(uint)size; iVar2 \u003d iVar2 + 1) {\n    uVar1 \u003d I2C_ReadByte(device_add,register_add + (short)iVar2,\"../Src/i2c.c\",0x4c);\n    puVar3 \u003d puVar3 + 1;\n    *puVar3 \u003d uVar1;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "AK8963_Init",
        "MS5611_Init",
        "MPU9250_ReadAccelData",
        "AK8963_ReadData",
        "MPU9250_ReadGyroData"
      ],
      "called": [
        "I2C_ReadByte"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800411c": {
      "entrypoint": "0x0800411c",
      "current_name": "FUN_0800411c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800411c(void)\n\n{\n  uint32_t uVar1;\n  \n  uVar1 \u003d millis();\n  if (1 \u003c uVar1 - last_tick1) {\n    last_tick1 \u003d millis();\n    AHRS_ComputeAngles();\n  }\n  uVar1 \u003d millis();\n  if (2 \u003c uVar1 - last_tick3) {\n    last_tick3 \u003d millis();\n    PID_Update();\n  }\n  uVar1 \u003d millis();\n  if (3 \u003c uVar1 - last_tick2) {\n    last_tick2 \u003d millis();\n    MSP_SendIdent();\n    MSP_SendStatus();\n    MSP_SendMotor();\n    MSP_SendAttitude();\n    MSP_SendAltitude();\n    MSP_SendRawIMU();\n    MSP_SendPID();\n  }\n  MS5611_Update();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "main"
      ],
      "called": [
        "MSP_SendMotor",
        "PID_Update",
        "MSP_SendAttitude",
        "MSP_SendAltitude",
        "MSP_SendStatus",
        "AHRS_ComputeAngles",
        "MSP_SendPID",
        "millis",
        "MSP_SendIdent",
        "MS5611_Update",
        "MSP_SendRawIMU"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004194": {
      "entrypoint": "0x08004194",
      "current_name": "FUN_08004194",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004194(void)\n\n{\n  Devices_Init();\n  serialBegin();\n  IMU_Init();\n  MS5611_Init();\n  PID_Init();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "main"
      ],
      "called": [
        "PID_Init",
        "Devices_Init",
        "MS5611_Init",
        "IMU_Init",
        "serialBegin"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080041ae": {
      "entrypoint": "0x080041ae",
      "current_name": "FUN_080041ae",
      "code": "\n/* WARNING: Unknown calling convention */\n\nint FUN_080041ae(void)\n\n{\n  startForkserver(0);\n  setup();\n  do {\n    HAL_IncTick();\n    taskScheduler();\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "Reset_Handler"
      ],
      "called": [
        "startForkserver",
        "taskScheduler",
        "HAL_IncTick",
        "setup"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080041c4": {
      "entrypoint": "0x080041c4",
      "current_name": "FUN_080041c4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080041c4(void)\n\n{\n  Motor1_SetPWM(0);\n  Motor2_SetPWM(0);\n  Motor3_SetPWM(0);\n  Motor4_SetPWM(0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update"
      ],
      "called": [
        "Motor4_SetPWM",
        "Motor3_SetPWM",
        "Motor2_SetPWM",
        "Motor1_SetPWM"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080041e4": {
      "entrypoint": "0x080041e4",
      "current_name": "FUN_080041e4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080041e4(int m1,int m2,int m3,int m4)\n\n{\n  if (999 \u003c m1) {\n    m1 \u003d 1000;\n  }\n  if (999 \u003c m2) {\n    m2 \u003d 1000;\n  }\n  if (999 \u003c m3) {\n    m3 \u003d 1000;\n  }\n  if (999 \u003c m4) {\n    m4 \u003d 1000;\n  }\n  motor_pwm[2] \u003d m3 \u0026 ~(m3 \u003e\u003e 0x1f);\n  motor_pwm[3] \u003d m4 \u0026 ~(m4 \u003e\u003e 0x1f);\n  motor_pwm[1] \u003d m2 \u0026 ~(m2 \u003e\u003e 0x1f);\n  motor_pwm[0] \u003d m1 \u0026 ~(m1 \u003e\u003e 0x1f);\n  Motor1_SetPWM(motor_pwm[0]);\n  Motor2_SetPWM(motor_pwm[1]);\n  Motor3_SetPWM(motor_pwm[2]);\n  Motor4_SetPWM(motor_pwm[3]);\n  msp_txf_motor.motor[0] \u003d (short)motor_pwm[0] + 1000;\n  msp_txf_motor.motor[1] \u003d (short)motor_pwm[1] + 1000;\n  msp_txf_motor.motor[2] \u003d (short)motor_pwm[2] + 1000;\n  msp_txf_motor.motor[3] \u003d (short)motor_pwm[3] + 1000;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Motor_DistributeSpeed"
      ],
      "called": [
        "Motor4_SetPWM",
        "Motor3_SetPWM",
        "Motor2_SetPWM",
        "Motor1_SetPWM"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800426c": {
      "entrypoint": "0x0800426c",
      "current_name": "FUN_0800426c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800426c(float throttle,float pitch,float roll,float yaw)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  int m4;\n  int m3;\n  int m2;\n  int m1;\n  \n  uVar1 \u003d __aeabi_fsub();\n  uVar2 \u003d __addsf3(throttle,pitch);\n  uVar3 \u003d __aeabi_fsub(uVar1,roll);\n  uVar3 \u003d __addsf3(uVar3,yaw);\n  __aeabi_fsub(uVar3,0x447a0000);\n  m4 \u003d __aeabi_f2iz();\n  uVar3 \u003d __aeabi_fsub(uVar2,roll);\n  uVar3 \u003d __aeabi_fsub(uVar3,yaw);\n  __aeabi_fsub(uVar3,0x447a0000);\n  m3 \u003d __aeabi_f2iz();\n  uVar1 \u003d __addsf3(uVar1,roll);\n  uVar1 \u003d __aeabi_fsub(uVar1,yaw);\n  __aeabi_fsub(uVar1,0x447a0000);\n  m2 \u003d __aeabi_f2iz();\n  uVar1 \u003d __addsf3(roll,uVar2);\n  uVar1 \u003d __addsf3(uVar1,yaw);\n  __aeabi_fsub(uVar1,0x447a0000);\n  m1 \u003d __aeabi_f2iz();\n  Motor_SetSpeed(m1,m2,m3,m4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update"
      ],
      "called": [
        "__aeabi_f2iz",
        "__addsf3",
        "__aeabi_fsub",
        "Motor_SetSpeed"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004300": {
      "entrypoint": "0x08004300",
      "current_name": "FUN_08004300",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004300(uint8_t code,uint8_t *data,uint16_t data_length)\n\n{\n  byte ch;\n  byte *pbVar1;\n  \n  serialPrint(\"$M\u003e\");\n  serialWrite((byte)data_length);\n  ch \u003d (byte)data_length ^ code;\n  serialWrite(code);\n  for (pbVar1 \u003d data; (int)pbVar1 - (int)data \u003c (int)(uint)data_length; pbVar1 \u003d pbVar1 + 1) {\n    serialWrite(*pbVar1);\n    ch \u003d ch ^ *pbVar1;\n  }\n  serialWrite(ch);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "MSP_SendMotor",
        "MSP_SendAttitude",
        "MSP_SendStatus",
        "MSP_SendAltitude",
        "MSP_SendPID",
        "MSP_SendIdent",
        "MSP_SendRawIMU"
      ],
      "called": [
        "serialWrite",
        "serialPrint"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004348": {
      "entrypoint": "0x08004348",
      "current_name": "FUN_08004348",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004348(void)\n\n{\n  uint in_r1;\n  uint8_t buff [7];\n  undefined4 local_10;\n  uint local_c;\n  \n  msp_txf_ident._0_4_ \u003d 0x40003e9;\n  msp_txf_ident.capability._1_2_ \u003d 0;\n  msp_txf_ident.capability._3_1_ \u003d 0;\n  local_10 \u003d 0x40003e9;\n  local_c \u003d in_r1 \u0026 0xff000000;\n  MSP_SendFrame(\u0027d\u0027,(uint8_t *)\u0026local_10,7);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004384": {
      "entrypoint": "0x08004384",
      "current_name": "FUN_08004384",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004384(void)\n\n{\n  uint in_r3;\n  undefined4 local_14;\n  undefined4 uStack_10;\n  uint local_c;\n  \n  msp_txf_status._4_4_ \u003d 0x2a0007;\n  local_14 \u003d msp_txf_status._0_4_;\n  uStack_10 \u003d 0x2a0007;\n  msp_txf_status.flag._2_2_ \u003d 0;\n  msp_txf_status.current_set \u003d \u0027\\0\u0027;\n  local_c \u003d in_r3 \u0026 0xff000000;\n  MSP_SendFrame(\u0027e\u0027,(uint8_t *)\u0026local_14,0xb);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080043bc": {
      "entrypoint": "0x080043bc",
      "current_name": "FUN_080043bc",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080043bc(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 *puVar3;\n  msp_raw_imu *pmVar4;\n  uint8_t buff [18];\n  \n  pmVar4 \u003d \u0026msp_txf_raw_imu;\n  puVar3 \u003d (undefined4 *)buff;\n  do {\n    uVar1 \u003d *(undefined4 *)pmVar4;\n    uVar2 \u003d *(undefined4 *)\u0026pmVar4-\u003eaccz;\n    pmVar4 \u003d (msp_raw_imu *)\u0026pmVar4-\u003egyry;\n    *puVar3 \u003d uVar1;\n    puVar3[1] \u003d uVar2;\n    puVar3 \u003d puVar3 + 2;\n  } while (pmVar4 !\u003d (msp_raw_imu *)\u0026msp_txf_raw_imu.magz);\n  *(int16_t *)puVar3 \u003d msp_txf_raw_imu.magz;\n  MSP_SendFrame(\u0027f\u0027,buff,0x12);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080043f0": {
      "entrypoint": "0x080043f0",
      "current_name": "FUN_080043f0",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_080043f0(void)\n\n{\n  uint8_t buff [8];\n  undefined4 local_10;\n  undefined4 uStack_c;\n  \n  local_10 \u003d msp_txf_motor.motor._0_4_;\n  uStack_c \u003d msp_txf_motor.motor._4_4_;\n  MSP_SendFrame(\u0027h\u0027,(uint8_t *)\u0026local_10,8);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004410": {
      "entrypoint": "0x08004410",
      "current_name": "FUN_08004410",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004410(void)\n\n{\n  undefined4 in_r1;\n  uint8_t buff [6];\n  undefined4 local_10;\n  undefined4 local_c;\n  \n  local_10 \u003d msp_txf_attitude._0_4_;\n  local_c \u003d CONCAT22((short)((uint)in_r1 \u003e\u003e 0x10),msp_txf_attitude.heading);\n  MSP_SendFrame(\u0027l\u0027,(uint8_t *)\u0026local_10,6);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004434": {
      "entrypoint": "0x08004434",
      "current_name": "FUN_08004434",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004434(void)\n\n{\n  undefined4 in_r1;\n  uint8_t buff [6];\n  int32_t local_10;\n  undefined4 local_c;\n  \n  local_10 \u003d msp_txf_altitude.est_alt;\n  local_c \u003d CONCAT22((short)((uint)in_r1 \u003e\u003e 0x10),msp_txf_altitude.vario);\n  MSP_SendFrame(\u0027m\u0027,(uint8_t *)\u0026local_10,6);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004458": {
      "entrypoint": "0x08004458",
      "current_name": "FUN_08004458",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004458(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 *puVar3;\n  msp_pid *pmVar4;\n  msp_pid *pmVar5;\n  uint8_t buff [30];\n  undefined4 local_30 [3];\n  undefined2 local_24 [10];\n  \n  puVar1 \u003d local_30;\n  pmVar5 \u003d \u0026msp_txf_pid;\n  do {\n    pmVar4 \u003d pmVar5;\n    puVar3 \u003d puVar1;\n    uVar2 \u003d *(undefined4 *)\u0026(pmVar4-\u003epitch).i;\n    pmVar5 \u003d (msp_pid *)\u0026(pmVar4-\u003eyaw).d;\n    *puVar3 \u003d *(undefined4 *)pmVar4;\n    puVar3[1] \u003d uVar2;\n    puVar1 \u003d puVar3 + 2;\n  } while (pmVar5 !\u003d (msp_pid *)\u0026msp_txf_pid.mag);\n  puVar3[2] \u003d msp_txf_pid._24_4_;\n  *(undefined2 *)(puVar3 + 3) \u003d *(undefined2 *)\u0026pmVar4-\u003epos;\n  MSP_SendFrame(\u0027p\u0027,(uint8_t *)local_30,0x1e);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "MSP_SendFrame"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004490": {
      "entrypoint": "0x08004490",
      "current_name": "FUN_08004490",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004490(char *file,int line)\n\n{\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x4000,GPIO_PIN_SET);\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x8000,GPIO_PIN_RESET);\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0x2000,GPIO_PIN_RESET);\n  do {\n    HAL_GPIO_TogglePin((GPIO_TypeDef *)0x40011000,0x4000);\n    HAL_GPIO_TogglePin((GPIO_TypeDef *)0x40011000,0x8000);\n    HAL_GPIO_TogglePin((GPIO_TypeDef *)0x40011000,0x2000);\n    serialPrint(\"Error with \");\n    serialPrint(file);\n    serialPrint(\" at line: \");\n    serialInt(line);\n    serialWrite(\u0027\\n\u0027);\n    delay_ms(500);\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init",
        "I2C_ReadByte",
        "I2C_ReadBytes",
        "I2C_WriteByte",
        "SystemClock_Config"
      ],
      "called": [
        "HAL_GPIO_WritePin",
        "serialWrite",
        "delay_ms",
        "serialInt",
        "serialPrint",
        "HAL_GPIO_TogglePin"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004514": {
      "entrypoint": "0x08004514",
      "current_name": "FUN_08004514",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004514(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  char *pcVar2;\n  uint32_t uVar3;\n  int line;\n  uint FLatency;\n  RCC_ClkInitTypeDef RCC_ClkInitStruct;\n  RCC_OscInitTypeDef RCC_OscInitStruct;\n  \n  RCC_OscInitStruct.HSIState \u003d 1;\n  RCC_OscInitStruct.HSICalibrationValue \u003d 0x10;\n  FLatency \u003d 2;\n  RCC_OscInitStruct.PLL.PLLSource \u003d 0;\n  RCC_OscInitStruct.OscillatorType \u003d 2;\n  RCC_OscInitStruct.PLL.PLLState \u003d 2;\n  RCC_OscInitStruct.PLL.PLLMUL \u003d 0x380000;\n  HVar1 \u003d HAL_RCC_OscConfig(\u0026RCC_OscInitStruct);\n  pcVar2 \u003d (char *)(uint)HVar1;\n  if (pcVar2 \u003d\u003d (char *)0x0) goto LAB_08004540;\n  line \u003d 0x3c;\n  while( true ) {\n    pcVar2 \u003d \"../Src/peripherals.c\";\n    _Error_Handler(\"../Src/peripherals.c\",line);\nLAB_08004540:\n    RCC_ClkInitStruct.ClockType \u003d 0xf;\n    RCC_ClkInitStruct.APB1CLKDivider \u003d 0x400;\n    RCC_ClkInitStruct.SYSCLKSource \u003d FLatency;\n    RCC_ClkInitStruct.AHBCLKDivider \u003d (uint32_t)pcVar2;\n    RCC_ClkInitStruct.APB2CLKDivider \u003d (uint32_t)pcVar2;\n    HVar1 \u003d HAL_RCC_ClockConfig(\u0026RCC_ClkInitStruct,FLatency);\n    FLatency \u003d (uint)HVar1;\n    if (FLatency \u003d\u003d 0) break;\n    line \u003d 0x49;\n  }\n  uVar3 \u003d HAL_RCC_GetHCLKFreq();\n  HAL_SYSTICK_Config(uVar3 / 1000);\n  HAL_SYSTICK_CLKSourceConfig(4);\n  HAL_NVIC_SetPriority(SysTick_IRQn,0,0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "HAL_SYSTICK_CLKSourceConfig",
        "HAL_RCC_ClockConfig",
        "HAL_RCC_OscConfig",
        "HAL_SYSTICK_Config",
        "HAL_NVIC_SetPriority",
        "HAL_RCC_GetHCLKFreq",
        "_Error_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800458c": {
      "entrypoint": "0x0800458c",
      "current_name": "FUN_0800458c",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800458c(void)\n\n{\n  HAL_StatusTypeDef HVar1;\n  char *pcVar2;\n  uint uVar3;\n  int line;\n  uint uVar4;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  TIM_MasterConfigTypeDef sMasterConfig;\n  TIM_OC_InitTypeDef sConfigOC;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  HAL_Init();\n  SystemClock_Config();\n  uVar4 \u003d 2;\n  _DAT_40021018 \u003d _DAT_40021018 | 0x1c;\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40011000,0xe000,GPIO_PIN_RESET);\n  HAL_GPIO_WritePin((GPIO_TypeDef *)0x40010800,0x20,GPIO_PIN_RESET);\n  GPIO_InitStruct.Pin \u003d 0xe000;\n  GPIO_InitStruct.Mode \u003d 1;\n  GPIO_InitStruct.Speed \u003d 2;\n  HAL_GPIO_Init((GPIO_TypeDef *)0x40011000,\u0026GPIO_InitStruct);\n  GPIO_InitStruct.Pin \u003d 0x20;\n  GPIO_InitStruct.Mode \u003d 1;\n  GPIO_InitStruct.Speed \u003d 2;\n  HAL_GPIO_Init((GPIO_TypeDef *)0x40010800,\u0026GPIO_InitStruct);\n  hi2c1.Instance \u003d (I2C_TypeDef *)0x40005400;\n  hi2c1.Init.ClockSpeed \u003d 400000;\n  hi2c1.Init.AddressingMode \u003d 0x4000;\n  hi2c1.Init.DutyCycle \u003d 0;\n  hi2c1.Init.OwnAddress1 \u003d 0;\n  hi2c1.Init.DualAddressMode \u003d 0;\n  hi2c1.Init.OwnAddress2 \u003d 0;\n  hi2c1.Init.GeneralCallMode \u003d 0;\n  hi2c1.Init.NoStretchMode \u003d 0;\n  HVar1 \u003d HAL_I2C_Init(\u0026hi2c1);\n  pcVar2 \u003d (char *)(uint)HVar1;\n  if (pcVar2 \u003d\u003d (char *)0x0) goto LAB_0800463a;\n  line \u003d 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  pcVar2 \u003d \"../Src/peripherals.c\";\n                                  _Error_Handler(\"../Src/peripherals.c\",line);\nLAB_0800463a:\n                                  huart1.Instance \u003d (USART_TypeDef *)0x40013800;\n                                  huart1.Init.BaudRate \u003d 0x1c200;\n                                  huart1.Init.Mode \u003d 0xc;\n                                  huart1.Init.WordLength \u003d (uint32_t)pcVar2;\n                                  huart1.Init.StopBits \u003d (uint32_t)pcVar2;\n                                  huart1.Init.Parity \u003d (uint32_t)pcVar2;\n                                  huart1.Init.HwFlowCtl \u003d (uint32_t)pcVar2;\n                                  huart1.Init.OverSampling \u003d (uint32_t)pcVar2;\n                                  HVar1 \u003d HAL_UART_Init(\u0026huart1);\n                                  uVar3 \u003d (uint)HVar1;\n                                  if (uVar3 \u003d\u003d 0) break;\n                                  line \u003d 0x151;\n                                }\n                                htim1.Instance \u003d (TIM_TypeDef *)0x40012c00;\n                                htim1.Init.Period \u003d 1000;\n                                htim1.Init.Prescaler \u003d uVar4;\n                                htim1.Init.CounterMode \u003d uVar3;\n                                htim1.Init.ClockDivision \u003d uVar3;\n                                htim1.Init.RepetitionCounter \u003d uVar3;\n                                HVar1 \u003d HAL_TIM_PWM_Init(\u0026htim1);\n                                uVar3 \u003d (uint)HVar1;\n                                if (uVar3 \u003d\u003d 0) break;\n                                line \u003d 0x88;\n                              }\n                              sMasterConfig.MasterOutputTrigger \u003d uVar3;\n                              sMasterConfig.MasterSlaveMode \u003d uVar3;\n                              HVar1 \u003d HAL_TIMEx_MasterConfigSynchronization(\u0026htim1,\u0026sMasterConfig);\n                              uVar3 \u003d (uint)HVar1;\n                              if (uVar3 \u003d\u003d 0) break;\n                              line \u003d 0x8f;\n                            }\n                            sConfigOC.OCMode \u003d 0x60;\n                            sConfigOC.Pulse \u003d uVar3;\n                            sConfigOC.OCPolarity \u003d uVar3;\n                            sConfigOC.OCFastMode \u003d uVar3;\n                            sConfigOC.OCIdleState \u003d uVar3;\n                            sConfigOC.OCNIdleState \u003d uVar3;\n                            HVar1 \u003d HAL_TIM_PWM_ConfigChannel(\u0026htim1,\u0026sConfigOC,0xc);\n                            uVar3 \u003d (uint)HVar1;\n                            if (uVar3 \u003d\u003d 0) break;\n                            line \u003d 0x9a;\n                          }\n                          GPIO_InitStruct.Pin \u003d uVar3;\n                          GPIO_InitStruct.Mode \u003d uVar3;\n                          GPIO_InitStruct.Pull \u003d uVar3;\n                          GPIO_InitStruct.Speed \u003d uVar3;\n                          HVar1 \u003d HAL_TIMEx_ConfigBreakDeadTime\n                                            (\u0026htim1,(TIM_BreakDeadTimeConfigTypeDef *)\n                                                    \u0026GPIO_InitStruct);\n                          uVar3 \u003d (uint)HVar1;\n                          if (uVar3 \u003d\u003d 0) break;\n                          line \u003d 0xa6;\n                        }\n                        HAL_TIM_MspPostInit(\u0026htim1);\n                        htim2.Instance \u003d (TIM_TypeDef *)0x40000000;\n                        htim2.Init.Period \u003d 1000;\n                        htim2.Init.Prescaler \u003d uVar4;\n                        htim2.Init.CounterMode \u003d uVar3;\n                        htim2.Init.ClockDivision \u003d uVar3;\n                        HVar1 \u003d HAL_TIM_PWM_Init(\u0026htim2);\n                        uVar3 \u003d (uint)HVar1;\n                        if (uVar3 \u003d\u003d 0) break;\n                        line \u003d 0xc3;\n                      }\n                      sConfigOC.OCMode \u003d uVar3;\n                      sConfigOC.Pulse \u003d uVar3;\n                      HVar1 \u003d HAL_TIMEx_MasterConfigSynchronization\n                                        (\u0026htim2,(TIM_MasterConfigTypeDef *)\u0026sConfigOC);\n                      uVar3 \u003d (uint)HVar1;\n                      if (uVar3 \u003d\u003d 0) break;\n                      line \u003d 0xca;\n                    }\n                    GPIO_InitStruct.Pin \u003d 0x60;\n                    GPIO_InitStruct.Mode \u003d uVar3;\n                    GPIO_InitStruct.Pull \u003d uVar3;\n                    HVar1 \u003d HAL_TIM_PWM_ConfigChannel\n                                      (\u0026htim2,(TIM_OC_InitTypeDef *)\u0026GPIO_InitStruct,4);\n                    uVar3 \u003d (uint)HVar1;\n                    if (uVar3 \u003d\u003d 0) break;\n                    line \u003d 0xd3;\n                  }\n                  HAL_TIM_MspPostInit(\u0026htim2);\n                  htim3.Init.Period \u003d 1000;\n                  htim3.Instance \u003d (TIM_TypeDef *)0x40000400;\n                  htim3.Init.Prescaler \u003d uVar4;\n                  htim3.Init.CounterMode \u003d uVar3;\n                  htim3.Init.ClockDivision \u003d uVar3;\n                  HVar1 \u003d HAL_TIM_PWM_Init(\u0026htim3);\n                  if (HVar1 \u003d\u003d HAL_OK) break;\n                  line \u003d 0xf0;\n                }\n                sConfigOC.OCMode \u003d 0;\n                sConfigOC.Pulse \u003d 0;\n                HVar1 \u003d HAL_TIMEx_MasterConfigSynchronization\n                                  (\u0026htim3,(TIM_MasterConfigTypeDef *)\u0026sConfigOC);\n                uVar3 \u003d (uint)HVar1;\n                if (uVar3 \u003d\u003d 0) break;\n                line \u003d 0xf7;\n              }\n              GPIO_InitStruct.Pin \u003d 0x60;\n              GPIO_InitStruct.Mode \u003d uVar3;\n              GPIO_InitStruct.Pull \u003d uVar3;\n              HVar1 \u003d HAL_TIM_PWM_ConfigChannel(\u0026htim3,(TIM_OC_InitTypeDef *)\u0026GPIO_InitStruct,8);\n              if (HVar1 \u003d\u003d HAL_OK) break;\n              line \u003d 0x100;\n            }\n            HVar1 \u003d HAL_TIM_PWM_ConfigChannel(\u0026htim3,(TIM_OC_InitTypeDef *)\u0026GPIO_InitStruct,0xc);\n            uVar4 \u003d (uint)HVar1;\n            if (uVar4 \u003d\u003d 0) break;\n            line \u003d 0x105;\n          }\n          HAL_TIM_MspPostInit(\u0026htim3);\n          htim4.Instance \u003d (TIM_TypeDef *)0x40000800;\n          htim4.Init.Prescaler \u003d 2;\n          htim4.Init.Period \u003d 1000;\n          htim4.Init.CounterMode \u003d uVar4;\n          htim4.Init.ClockDivision \u003d uVar4;\n          HVar1 \u003d HAL_TIM_PWM_Init(\u0026htim4);\n          uVar3 \u003d (uint)HVar1;\n          if (uVar3 \u003d\u003d 0) break;\n          line \u003d 0x122;\n        }\n        sConfigOC.OCMode \u003d uVar3;\n        sConfigOC.Pulse \u003d uVar3;\n        HVar1 \u003d HAL_TIMEx_MasterConfigSynchronization(\u0026htim4,(TIM_MasterConfigTypeDef *)\u0026sConfigOC);\n        uVar3 \u003d (uint)HVar1;\n        if (uVar3 \u003d\u003d 0) break;\n        line \u003d 0x129;\n      }\n      GPIO_InitStruct.Pin \u003d 0x60;\n      GPIO_InitStruct.Mode \u003d uVar3;\n      GPIO_InitStruct.Pull \u003d uVar3;\n      HVar1 \u003d HAL_TIM_PWM_ConfigChannel(\u0026htim4,(TIM_OC_InitTypeDef *)\u0026GPIO_InitStruct,8);\n      if (HVar1 \u003d\u003d HAL_OK) break;\n      line \u003d 0x132;\n    }\n    HVar1 \u003d HAL_TIM_PWM_ConfigChannel(\u0026htim4,(TIM_OC_InitTypeDef *)\u0026GPIO_InitStruct,0xc);\n    if (HVar1 \u003d\u003d HAL_OK) break;\n    line \u003d 0x137;\n  }\n  HAL_TIM_MspPostInit(\u0026htim4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Devices_Init"
      ],
      "called": [
        "HAL_GPIO_WritePin",
        "HAL_UART_Init",
        "HAL_Init",
        "HAL_GPIO_Init",
        "HAL_I2C_Init",
        "HAL_TIMEx_ConfigBreakDeadTime",
        "HAL_TIMEx_MasterConfigSynchronization",
        "HAL_TIM_PWM_ConfigChannel",
        "_Error_Handler",
        "HAL_TIM_PWM_Init",
        "HAL_TIM_MspPostInit",
        "SystemClock_Config"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800483c": {
      "entrypoint": "0x0800483c",
      "current_name": "FUN_0800483c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_0800483c(PID_TypeDef *pid)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  undefined4 uVar3;\n  float fVar4;\n  float fVar5;\n  float fVar6;\n  \n  fVar4 \u003d pid-\u003einput;\n  uVar1 \u003d __addsf3(pid-\u003eset_point,pid-\u003eoffset);\n  fVar4 \u003d (float)__aeabi_fsub(uVar1,fVar4);\n  pid-\u003eerror \u003d fVar4;\n  if (pid-\u003einstance \u003d\u003d 3) {\n    iVar2 \u003d __aeabi_fcmpgt(pid-\u003eerror,0);\n    if (iVar2 \u003d\u003d 0) {\n      iVar2 \u003d __aeabi_fcmplt(pid-\u003eerror,0xc3340000);\n    }\n    else {\n      iVar2 \u003d __aeabi_fcmpgt(pid-\u003eerror,0x43340000);\n    }\n    if (iVar2 !\u003d 0) {\n      fVar5 \u003d pid-\u003eerror;\n      uVar1 \u003d __aeabi_fmul(pid-\u003eerror,0x43b40000);\n      iVar2 \u003d __aeabi_fcmpgt(pid-\u003eerror,0);\n      fVar4 \u003d pid-\u003eerror;\n      if (iVar2 \u003d\u003d 0) {\n        fVar4 \u003d (float)((int)fVar4 + -0x80000000);\n      }\n      uVar1 \u003d __aeabi_fdiv(uVar1,fVar4);\n      fVar4 \u003d (float)__aeabi_fsub(fVar5,uVar1);\n      pid-\u003eerror \u003d fVar4;\n    }\n  }\n  fVar6 \u003d pid-\u003econ_KI;\n  fVar5 \u003d pid-\u003econ_KD;\n  fVar4 \u003d (float)__aeabi_fmul(pid-\u003econ_KP,pid-\u003eerror);\n  pid-\u003eproportional \u003d fVar4;\n  fVar4 \u003d (float)__addsf3(pid-\u003eerror,pid-\u003eintegral);\n  pid-\u003eintegral \u003d fVar4;\n  iVar2 \u003d __aeabi_fcmplt(pid-\u003eintegral,0xc3fa0000);\n  if (iVar2 \u003d\u003d 0) {\n    iVar2 \u003d __aeabi_fcmpgt(pid-\u003eintegral,0x43fa0000);\n    if (iVar2 \u003d\u003d 0) {\n      fVar4 \u003d pid-\u003eintegral;\n    }\n    else {\n      fVar4 \u003d 500.0;\n    }\n  }\n  else {\n    fVar4 \u003d -500.0;\n  }\n  pid-\u003eintegral \u003d fVar4;\n  fVar4 \u003d (float)__aeabi_fsub(pid-\u003einput,pid-\u003elast_input);\n  pid-\u003ederivative \u003d fVar4;\n  fVar4 \u003d pid-\u003eproportional;\n  uVar1 \u003d __aeabi_fmul(fVar6,pid-\u003eintegral);\n  uVar1 \u003d __addsf3(uVar1,fVar4);\n  uVar3 \u003d __aeabi_fmul(fVar5,pid-\u003ederivative);\n  fVar4 \u003d (float)__aeabi_fsub(uVar1,uVar3);\n  pid-\u003eoutput \u003d fVar4;\n  uVar1 \u003d __floatsisf(pid-\u003edirection);\n  iVar2 \u003d __aeabi_fcmplt(pid-\u003eoutput,0xc3fa0000);\n  if (iVar2 \u003d\u003d 0) {\n    iVar2 \u003d __aeabi_fcmpgt(pid-\u003eoutput,0x43fa0000);\n    if (iVar2 \u003d\u003d 0) {\n      fVar4 \u003d pid-\u003eoutput;\n    }\n    else {\n      fVar4 \u003d 500.0;\n    }\n  }\n  else {\n    fVar4 \u003d -500.0;\n  }\n  fVar4 \u003d (float)__aeabi_fmul(fVar4,uVar1);\n  pid-\u003eoutput \u003d fVar4;\n  pid-\u003elast_input \u003d pid-\u003einput;\n  pid-\u003elast_error \u003d pid-\u003eerror;\n  pid-\u003elast_time \u003d pid-\u003etime;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update"
      ],
      "called": [
        "__aeabi_fcmpgt",
        "__aeabi_fdiv",
        "__addsf3",
        "__aeabi_fsub",
        "__floatsisf",
        "__aeabi_fmul",
        "__aeabi_fcmplt"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004978": {
      "entrypoint": "0x08004978",
      "current_name": "FUN_08004978",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004978(void)\n\n{\n  pid_pitch.direction \u003d 1;\n  pid_roll.direction \u003d 1;\n  pid_yaw.direction \u003d -1;\n  pid_altitude.direction \u003d 1;\n  pid_pitch.breakpoint \u003d 1500.0;\n  pid_roll.breakpoint \u003d 1450.0;\n  pid_yaw.breakpoint \u003d 2000.0;\n  pid_altitude.breakpoint \u003d 0.0;\n  pid_pitch.con_KP \u003d 4.4;\n  pid_pitch.con_KI \u003d 0.02;\n  pid_pitch.con_KD \u003d 280.0;\n  pid_pitch.agr_KP \u003d 4.5;\n  pid_pitch.agr_KI \u003d 0.02;\n  pid_pitch.agr_KD \u003d 360.0;\n  pid_roll.con_KP \u003d 3.8;\n  pid_roll.con_KI \u003d 0.02;\n  pid_roll.con_KD \u003d 260.0;\n  pid_roll.agr_KP \u003d 3.8;\n  pid_roll.agr_KI \u003d 0.02;\n  pid_roll.agr_KD \u003d 320.0;\n  pid_yaw.con_KP \u003d 3.0;\n  pid_yaw.con_KI \u003d 0.01;\n  pid_yaw.con_KD \u003d 280.0;\n  pid_yaw.agr_KP \u003d 0.0;\n  pid_yaw.agr_KI \u003d 0.0;\n  pid_yaw.agr_KD \u003d 0.0;\n  pid_altitude.con_KP \u003d 10.0;\n  pid_altitude.con_KI \u003d 0.0;\n  pid_altitude.con_KD \u003d 0.0;\n  pid_altitude.agr_KP \u003d 0.0;\n  pid_altitude.agr_KI \u003d 0.0;\n  pid_altitude.agr_KD \u003d 0.0;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "setup"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004a30": {
      "entrypoint": "0x08004a30",
      "current_name": "FUN_08004a30",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004a30(void)\n\n{\n  if (joystick.ALT_HOLD !\u003d \u0027\\0\u0027) {\n    if (ALT_FLAG \u003d\u003d \u0027\\0\u0027) {\n      MS5611_GetFilteredAltitude();\n      pid_altitude.set_point \u003d (float)__aeabi_fmul();\n      ALT_FLAG \u003d \u0027\\x01\u0027;\n    }\n    else {\n      MS5611_GetFilteredAltitude();\n      pid_altitude.input \u003d (float)__aeabi_fmul();\n    }\n  }\n  if (joystick.ALT_HOLD \u003d\u003d \u0027\\0\u0027) {\n    if (ALT_FLAG !\u003d \u0027\\0\u0027) {\n      ALT_FLAG \u003d joystick.ALT_HOLD;\n    }\n    pid_altitude.output \u003d joystick.throttle;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "PID_Update"
      ],
      "called": [
        "MS5611_GetFilteredAltitude",
        "__aeabi_fmul"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004a84": {
      "entrypoint": "0x08004a84",
      "current_name": "FUN_08004a84",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004a84(void)\n\n{\n  float in_r0;\n  int iVar1;\n  \n  AHRS_GetPitch();\n  pid_pitch.input \u003d in_r0;\n  AHRS_GetRoll();\n  pid_roll.input \u003d in_r0;\n  AHRS_GetYaw();\n  pid_yaw.input \u003d in_r0;\n  PID_UpdateAltitude();\n  iVar1 \u003d __aeabi_fcmpgt(pid_pitch.input,0);\n  if (iVar1 \u003d\u003d 0) {\n    iVar1 \u003d __aeabi_fcmplt(pid_pitch.input,0xc2a00000);\n  }\n  else {\n    iVar1 \u003d __aeabi_fcmpgt(pid_pitch.input,0x42a00000);\n  }\n  if (iVar1 \u003d\u003d 0) {\n    iVar1 \u003d __aeabi_fcmpgt(pid_roll.input,0);\n    if (iVar1 \u003d\u003d 0) {\n      iVar1 \u003d __aeabi_fcmplt(pid_roll.input,0xc2a00000);\n    }\n    else {\n      iVar1 \u003d __aeabi_fcmpgt(pid_roll.input,0x42a00000);\n    }\n    if (iVar1 \u003d\u003d 0) {\n      toggleLED(1,1,1);\n      PID_Compute(\u0026pid_pitch);\n      PID_Compute(\u0026pid_roll);\n      PID_Compute(\u0026pid_yaw);\n      if (joystick.ALT_HOLD !\u003d \u0027\\0\u0027) {\n        PID_Compute(\u0026pid_altitude);\n        __addsf3(pid_altitude.output,0x44bb8000);\n      }\n      pid_altitude.output \u003d joystick.throttle;\n      if (joystick.MOTOR_ARM \u003d\u003d \u0027\\0\u0027) {\n        Motor_StopAll();\n      }\n      else {\n        Motor_DistributeSpeed(joystick.throttle,pid_pitch.output,pid_roll.output,pid_yaw.output);\n      }\n      __aeabi_fmul(pid_pitch.con_KP,0x437f0000);\n      msp_txf_pid.pitch.p \u003d __fixunssfsi();\n      __aeabi_fmul(pid_pitch.con_KI,0x437f0000);\n      msp_txf_pid.pitch.i \u003d __fixunssfsi();\n      __aeabi_fmul(pid_roll.con_KP,0x437f0000);\n      msp_txf_pid.roll.p \u003d __fixunssfsi();\n      __aeabi_fmul(pid_roll.con_KI,0x437f0000);\n      msp_txf_pid.roll.i \u003d __fixunssfsi();\n      __aeabi_fmul(pid_roll.con_KD,0x437f0000);\n      msp_txf_pid.roll.d \u003d __fixunssfsi();\n      __aeabi_fmul(pid_yaw.con_KP,0x437f0000);\n      msp_txf_pid.yaw.p \u003d __fixunssfsi();\n      __aeabi_fmul(pid_yaw.con_KI,0x437f0000);\n      msp_txf_pid.yaw.i \u003d __fixunssfsi();\n      __aeabi_fmul(pid_yaw.con_KD,0x437f0000);\n      msp_txf_pid.yaw.d \u003d __fixunssfsi();\n      __aeabi_fmul(pid_altitude.con_KP,0x437f0000);\n      msp_txf_pid.alt.p \u003d __fixunssfsi();\n      __aeabi_fmul(pid_altitude.con_KI,0x437f0000);\n      msp_txf_pid.alt.i \u003d __fixunssfsi();\n      __aeabi_fmul(pid_altitude.con_KD,0x437f0000);\n      msp_txf_pid.alt.d \u003d __fixunssfsi();\n      return;\n    }\n  }\n  Motor_StopAll();\n  toggleLED(0,1,0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler"
      ],
      "called": [
        "__aeabi_fcmpgt",
        "Motor_StopAll",
        "__aeabi_fmul",
        "__aeabi_fcmplt",
        "AHRS_GetRoll",
        "PID_Compute",
        "__addsf3",
        "toggleLED",
        "Motor_DistributeSpeed",
        "AHRS_GetPitch",
        "__fixunssfsi",
        "AHRS_GetYaw",
        "PID_UpdateAltitude"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004c18": {
      "entrypoint": "0x08004c18",
      "current_name": "FUN_08004c18",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004c18(uchar ch)\n\n{\n  tx_buffer[0] \u003d ch;\n  HAL_UART_Transmit(\u0026huart1,(uint8_t *)tx_buffer,1,5);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "MSP_SendFrame",
        "serialPrint",
        "_Error_Handler"
      ],
      "called": [
        "HAL_UART_Transmit"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004c30": {
      "entrypoint": "0x08004c30",
      "current_name": "FUN_08004c30",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004c30(UART_HandleTypeDef *huart)\n\n{\n  if (huart-\u003eInstance \u003d\u003d (USART_TypeDef *)0x40013800) {\n    CB_Write(\u0026rxc,rx_buffer[0]);\n    HAL_UART_Receive_IT(\u0026huart1,rx_buffer,1);\n    return;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "UART_Receive_IT"
      ],
      "called": [
        "HAL_UART_Receive_IT",
        "CB_Write"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004c64": {
      "entrypoint": "0x08004c64",
      "current_name": "FUN_08004c64",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004c64(void)\n\n{\n  CB_Init(\u0026rxc);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "serialBegin"
      ],
      "called": [
        "CB_Init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004c70": {
      "entrypoint": "0x08004c70",
      "current_name": "FUN_08004c70",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004c70(void)\n\n{\n  serialFlush();\n  HAL_UART_Receive_IT(\u0026huart1,rx_buffer,1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "setup"
      ],
      "called": [
        "serialFlush",
        "HAL_UART_Receive_IT"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004c8c": {
      "entrypoint": "0x08004c8c",
      "current_name": "FUN_08004c8c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004c8c(char *data)\n\n{\n  size_t sVar1;\n  uchar *puVar2;\n  \n  for (puVar2 \u003d (uchar *)data; sVar1 \u003d strlen(data), (uint)((int)puVar2 - (int)data) \u003c sVar1;\n      puVar2 \u003d puVar2 + 1) {\n    serialWrite(*puVar2);\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "MSP_SendFrame",
        "serialInt",
        "_Error_Handler"
      ],
      "called": [
        "strlen",
        "serialWrite"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004cac": {
      "entrypoint": "0x08004cac",
      "current_name": "FUN_08004cac",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004cac(int val)\n\n{\n  siprintf(tx_buffer,\"%i\",val);\n  serialPrint(tx_buffer);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_Error_Handler"
      ],
      "called": [
        "siprintf",
        "serialPrint"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ccc": {
      "entrypoint": "0x08004ccc",
      "current_name": "FUN_08004ccc",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004ccc(void)\n\n{\n  uint32_t tmpreg;\n  \n  _DAT_40021018 \u003d _DAT_40021018 | 1;\n  HAL_NVIC_SetPriorityGrouping(3);\n  HAL_NVIC_SetPriority(MemoryManagement_IRQn,0,0);\n  HAL_NVIC_SetPriority(BusFault_IRQn,0,0);\n  HAL_NVIC_SetPriority(UsageFault_IRQn,0,0);\n  HAL_NVIC_SetPriority(SVCall_IRQn,0,0);\n  HAL_NVIC_SetPriority(DebugMonitor_IRQn,0,0);\n  HAL_NVIC_SetPriority(PendSV_IRQn,0,0);\n  HAL_NVIC_SetPriority(SysTick_IRQn,0,0);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_Init"
      ],
      "called": [
        "HAL_NVIC_SetPriorityGrouping",
        "HAL_NVIC_SetPriority"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004d48": {
      "entrypoint": "0x08004d48",
      "current_name": "FUN_08004d48",
      "code": "\n/* WARNING: Variable defined which should be unmapped: GPIO_InitStruct */\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004d48(I2C_HandleTypeDef *hi2c)\n\n{\n  uint32_t tmpreg;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  if (hi2c-\u003eInstance \u003d\u003d (I2C_TypeDef *)0x40005400) {\n    GPIO_InitStruct.Pin \u003d 0xc0;\n    GPIO_InitStruct.Mode \u003d 0x12;\n    GPIO_InitStruct.Speed \u003d 3;\n    HAL_GPIO_Init((GPIO_TypeDef *)0x40010c00,\u0026GPIO_InitStruct);\n    _DAT_4002101c \u003d _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_I2C_Init"
      ],
      "called": [
        "HAL_GPIO_Init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004d8c": {
      "entrypoint": "0x08004d8c",
      "current_name": "FUN_08004d8c",
      "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004d8c(TIM_HandleTypeDef *htim_pwm)\n\n{\n  TIM_TypeDef *pTVar1;\n  uint32_t tmpreg;\n  uint32_t tmpreg_1;\n  uint32_t tmpreg_2;\n  uint32_t tmpreg_3;\n  \n  pTVar1 \u003d htim_pwm-\u003eInstance;\n  if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    _DAT_40021018 \u003d _DAT_40021018 | 0x800;\n  }\n  else if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40000000) {\n    _DAT_4002101c \u003d _DAT_4002101c | 1;\n  }\n  else if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40000400) {\n    _DAT_4002101c \u003d _DAT_4002101c | 2;\n  }\n  else if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40000800) {\n    _DAT_4002101c \u003d _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_TIM_PWM_Init"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004e14": {
      "entrypoint": "0x08004e14",
      "current_name": "FUN_08004e14",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004e14(TIM_HandleTypeDef *htim)\n\n{\n  GPIO_TypeDef *GPIOx;\n  TIM_TypeDef *pTVar1;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  pTVar1 \u003d htim-\u003eInstance;\n  if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40012c00) {\n    GPIO_InitStruct.Pin \u003d 0x800;\n  }\n  else {\n    if (pTVar1 !\u003d (TIM_TypeDef *)0x40000000) {\n      if (pTVar1 \u003d\u003d (TIM_TypeDef *)0x40000400) {\n        GPIO_InitStruct.Pin \u003d 3;\n      }\n      else {\n        if (pTVar1 !\u003d (TIM_TypeDef *)0x40000800) {\n          return;\n        }\n        GPIO_InitStruct.Pin \u003d 0x300;\n      }\n      GPIOx \u003d (GPIO_TypeDef *)0x40010c00;\n      goto LAB_08004e2e;\n    }\n    GPIO_InitStruct.Pin \u003d 2;\n  }\n  GPIOx \u003d (GPIO_TypeDef *)0x40010800;\nLAB_08004e2e:\n  GPIO_InitStruct.Speed \u003d 2;\n  GPIO_InitStruct.Mode \u003d 2;\n  HAL_GPIO_Init(GPIOx,\u0026GPIO_InitStruct);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Peripherals_Init"
      ],
      "called": [
        "HAL_GPIO_Init"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004e7c": {
      "entrypoint": "0x08004e7c",
      "current_name": "FUN_08004e7c",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004e7c(UART_HandleTypeDef *huart)\n\n{\n  uint32_t tmpreg;\n  GPIO_InitTypeDef GPIO_InitStruct;\n  \n  if (huart-\u003eInstance \u003d\u003d (USART_TypeDef *)0x40013800) {\n    _DAT_40021018 \u003d _DAT_40021018 | 0x4000;\n    GPIO_InitStruct.Pin \u003d 0x200;\n    GPIO_InitStruct.Mode \u003d 2;\n    GPIO_InitStruct.Speed \u003d 3;\n    HAL_GPIO_Init((GPIO_TypeDef *)0x40010800,\u0026GPIO_InitStruct);\n    GPIO_InitStruct.Pin \u003d 0x400;\n    GPIO_InitStruct.Mode \u003d 0;\n    GPIO_InitStruct.Pull \u003d 0;\n    HAL_GPIO_Init((GPIO_TypeDef *)0x40010800,\u0026GPIO_InitStruct);\n    HAL_NVIC_SetPriority(USART1_IRQn,0,0);\n    HAL_NVIC_EnableIRQ(USART1_IRQn);\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "HAL_UART_Init"
      ],
      "called": [
        "HAL_NVIC_EnableIRQ",
        "HAL_GPIO_Init",
        "HAL_NVIC_SetPriority"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ee4": {
      "entrypoint": "0x08004ee4",
      "current_name": "FUN_08004ee4",
      "code": "\nvoid FUN_08004ee4(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ee6": {
      "entrypoint": "0x08004ee6",
      "current_name": "FUN_08004ee6",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004ee6(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "HardFault_Handler"
      ],
      "called": [
        "HardFault_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ee8": {
      "entrypoint": "0x08004ee8",
      "current_name": "FUN_08004ee8",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004ee8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "MemManage_Handler"
      ],
      "called": [
        "MemManage_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004eea": {
      "entrypoint": "0x08004eea",
      "current_name": "FUN_08004eea",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004eea(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "BusFault_Handler"
      ],
      "called": [
        "BusFault_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004eec": {
      "entrypoint": "0x08004eec",
      "current_name": "FUN_08004eec",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004eec(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "UsageFault_Handler"
      ],
      "called": [
        "UsageFault_Handler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004eee": {
      "entrypoint": "0x08004eee",
      "current_name": "FUN_08004eee",
      "code": "\nvoid FUN_08004eee(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ef0": {
      "entrypoint": "0x08004ef0",
      "current_name": "FUN_08004ef0",
      "code": "\nvoid FUN_08004ef0(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ef2": {
      "entrypoint": "0x08004ef2",
      "current_name": "FUN_08004ef2",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004ef2(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ef4": {
      "entrypoint": "0x08004ef4",
      "current_name": "FUN_08004ef4",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004ef4(void)\n\n{\n  HAL_IncTick();\n  HAL_SYSTICK_IRQHandler();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "HAL_IncTick",
        "HAL_SYSTICK_IRQHandler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f04": {
      "entrypoint": "0x08004f04",
      "current_name": "FUN_08004f04",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004f04(void)\n\n{\n  HAL_UART_IRQHandler(\u0026huart1);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "HAL_UART_IRQHandler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f10": {
      "entrypoint": "0x08004f10",
      "current_name": "FUN_08004f10",
      "code": "\n\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004f10(void)\n\n{\n  _DAT_40021000 \u003d _DAT_40021000 \u0026 0xfef2ffff | 1;\n  _DAT_40021004 \u003d _DAT_40021004 \u0026 0xf8800000;\n  _DAT_40021008 \u003d 0x9f0000;\n  _DAT_e000ed08 \u003d 0x8000000;\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Reset_Handler"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f5c": {
      "entrypoint": "0x08004f5c",
      "current_name": "FUN_08004f5c",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t HAL_GetTick(void)\n\n{\n  return uwTick;\n}\n\n",
      "renaming": {},
      "calling": [
        "taskScheduler",
        "MS5611_Update"
      ],
      "called": [
        "HAL_GetTick"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f60": {
      "entrypoint": "0x08004f60",
      "current_name": "FUN_08004f60",
      "code": "\n/* WARNING: Unknown calling convention */\n\nuint32_t FUN_08004f60(void)\n\n{\n  return uwTick;\n}\n\n",
      "renaming": {},
      "calling": [
        "AHRS_ComputeAngles"
      ],
      "called": [
        "HAL_GetTick"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f64": {
      "entrypoint": "0x08004f64",
      "current_name": "FUN_08004f64",
      "code": "\n/* WARNING: Unknown calling convention */\n\nvoid FUN_08004f64(uint32_t Delay)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "LED_StartupSequence",
        "MS5611_Init",
        "I2C_WriteByte",
        "_Error_Handler"
      ],
      "called": [
        "HAL_Delay"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004f68": {
      "entrypoint": "0x08004f68",
      "current_name": "FUN_08004f68",
      "code": "\nvoid FUN_08004f68(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 \u003d 0; (undefined4 *)(iVar1 + 0x20000000) \u003c \u0026completed_8672; iVar1 \u003d iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) \u003d *(undefined4 *)(\u0026_sidata + iVar1);\n  }\n  for (puVar2 \u003d \u0026completed_8672; puVar2 \u003c \u0026_ebss; puVar2 \u003d puVar2 + 1) {\n    *puVar2 \u003d 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  UNRECOVERED_JUMPTABLE \u003d (code *)0x8004f9a;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [
        "__libc_init_array",
        "SystemInit",
        "main"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004fb0": {
      "entrypoint": "0x08004fb0",
      "current_name": "FUN_08004fb0",
      "code": "\nvoid FUN_08004fb0(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
      "renaming": {},
      "calling": [
        "USBWakeUp_IRQHandler"
      ],
      "called": [
        "USBWakeUp_IRQHandler"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004fb4": {
      "entrypoint": "0x08004fb4",
      "current_name": "FUN_08004fb4",
      "code": "\nvoid FUN_08004fb4(EVP_PKEY_CTX *param_1)\n\n{\n  int iVar1;\n  \n  for (iVar1 \u003d 0; iVar1 !\u003d 0; iVar1 \u003d iVar1 + 1) {\n    param_1 \u003d (EVP_PKEY_CTX *)(*(code *)(\u0026__frame_dummy_init_array_entry)[iVar1])();\n  }\n  _init(param_1);\n  for (iVar1 \u003d 0; iVar1 !\u003d 1; iVar1 \u003d iVar1 + 1) {\n    (*(code *)(\u0026__frame_dummy_init_array_entry)[iVar1])();\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "Reset_Handler"
      ],
      "called": [
        "_init",
        "frame_dummy"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08004ffc": {
      "entrypoint": "0x08004ffc",
      "current_name": "FUN_08004ffc",
      "code": "\nint FUN_08004ffc(char *__s,char *__format,...)\n\n{\n  int iVar1;\n  undefined4 in_r2;\n  undefined4 in_r3;\n  char *local_78 [2];\n  undefined4 local_70;\n  undefined2 local_6c;\n  undefined2 local_6a;\n  char *local_68;\n  undefined4 local_64;\n  char *pcStack_c;\n  undefined4 uStack_8;\n  undefined4 uStack_4;\n  \n  local_6c \u003d 0x208;\n  local_70 \u003d 0x7fffffff;\n  local_64 \u003d 0x7fffffff;\n  local_6a \u003d 0xffff;\n  local_78[0] \u003d __s;\n  local_68 \u003d __s;\n  pcStack_c \u003d __format;\n  uStack_8 \u003d in_r2;\n  uStack_4 \u003d in_r3;\n  iVar1 \u003d _svfiprintf_r(_impure_ptr,local_78,__format);\n  *local_78[0] \u003d \u0027\\0\u0027;\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "serialInt"
      ],
      "called": [
        "_svfiprintf_r"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005044": {
      "entrypoint": "0x08005044",
      "current_name": "FUN_08005044",
      "code": "\nundefined4 FUN_08005044(undefined4 *param_1,void **param_2,void *param_3,void *param_4)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  size_t __n;\n  \n  pvVar2 \u003d param_2[2];\n  if ((pvVar2 \u003c\u003d param_4) \u0026\u0026 ((*(ushort *)(param_2 + 3) \u0026 0x480) !\u003d 0)) {\n    __n \u003d (int)*param_2 - (int)param_2[4];\n    pvVar2 \u003d (void *)((uint)((int)param_2[5] * 3) / 2);\n    pvVar1 \u003d (void *)((int)param_4 + __n + 1);\n    if (pvVar2 \u003c pvVar1) {\n      pvVar2 \u003d pvVar1;\n    }\n    if ((int)((uint)*(ushort *)(param_2 + 3) \u003c\u003c 0x15) \u003c 0) {\n      pvVar1 \u003d (void *)_malloc_r(param_1,pvVar2);\n      if (pvVar1 \u003d\u003d (void *)0x0) {\nLAB_0800508a:\n        *param_1 \u003d 0xc;\n        *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) | 0x40;\n        return 0xffffffff;\n      }\n      memcpy(pvVar1,param_2[4],__n);\n      *(ushort *)(param_2 + 3) \u003d *(ushort *)(param_2 + 3) \u0026 0xfb7f | 0x80;\n    }\n    else {\n      pvVar1 \u003d (void *)_realloc_r(param_1,param_2[4],pvVar2);\n      if (pvVar1 \u003d\u003d (void *)0x0) {\n        _free_r(param_1,param_2[4]);\n        goto LAB_0800508a;\n      }\n    }\n    param_2[4] \u003d pvVar1;\n    *param_2 \u003d (void *)((int)pvVar1 + __n);\n    param_2[5] \u003d pvVar2;\n    param_2[2] \u003d (void *)((int)pvVar2 - __n);\n    pvVar2 \u003d param_4;\n  }\n  if (param_4 \u003c\u003d pvVar2) {\n    pvVar2 \u003d param_4;\n  }\n  memmove(*param_2,param_3,(size_t)pvVar2);\n  param_2[2] \u003d (void *)((int)param_2[2] - (int)pvVar2);\n  *param_2 \u003d (void *)((int)pvVar2 + (int)*param_2);\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "_svfiprintf_r"
      ],
      "called": [
        "_free_r",
        "memmove",
        "_malloc_r",
        "memcpy",
        "_realloc_r"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080050fc": {
      "entrypoint": "0x080050fc",
      "current_name": "FUN_080050fc",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint FUN_080050fc(undefined4 *param_1,int *param_2,byte *param_3,int *param_4)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  void *pvVar4;\n  int *piVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  int unaff_r9;\n  int *local_8c;\n  uint local_88;\n  int local_84;\n  undefined4 local_80;\n  int local_7c;\n  int local_74;\n  byte local_70;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  local_8c \u003d param_4;\n  if (((int)((uint)*(ushort *)(param_2 + 3) \u003c\u003c 0x18) \u003c 0) \u0026\u0026 (param_2[4] \u003d\u003d 0)) {\n    iVar2 \u003d _malloc_r(param_1,0x40);\n    *param_2 \u003d iVar2;\n    param_2[4] \u003d iVar2;\n    if (iVar2 \u003d\u003d 0) {\n      *param_1 \u003d 0xc;\n      return -1;\n    }\n    param_2[5] \u003d 0x40;\n  }\n  local_74 \u003d 0;\n  local_6f \u003d 0x20;\n  local_6e \u003d 0x30;\n  pbVar6 \u003d param_3;\nLAB_08005146:\n  pbVar7 \u003d pbVar6;\n  if (*pbVar7 !\u003d 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  pbVar6 \u003d pbVar7 + 1;\n  if (*pbVar7 !\u003d 0x25) goto LAB_08005146;\nLAB_08005150:\n  iVar2 \u003d (int)pbVar7 - (int)param_3;\n  if (iVar2 !\u003d 0) {\n    iVar3 \u003d __ssputs_r(param_1,param_2,param_3,iVar2);\n    if (iVar3 \u003d\u003d -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(param_2 + 3) \u003c\u003c 0x19) \u003c 0) {\n        return -1;\n      }\n      return local_74;\n    }\n    local_74 \u003d local_74 + iVar2;\n  }\n  if (*pbVar7 \u003d\u003d 0) goto LAB_080052ac;\n  local_88 \u003d 0;\n  local_7c \u003d 0;\n  local_84 \u003d -1;\n  local_80 \u003d 0;\n  local_45 \u003d 0;\n  local_30 \u003d 0;\n  pbVar6 \u003d pbVar7 + 1;\n  while( true ) {\n    pvVar4 \u003d memchr(\u0026DAT_08007379,(uint)*pbVar6,5);\n    param_3 \u003d pbVar6 + 1;\n    if (pvVar4 \u003d\u003d (void *)0x0) break;\n    local_88 \u003d 1 \u003c\u003c ((int)pvVar4 + 0xf7ff8c87U \u0026 0xff) | local_88;\n    pbVar6 \u003d param_3;\n  }\n  if ((int)(local_88 \u003c\u003c 0x1b) \u003c 0) {\n    local_45 \u003d 0x20;\n  }\n  if ((int)(local_88 \u003c\u003c 0x1c) \u003c 0) {\n    local_45 \u003d 0x2b;\n  }\n  if (*pbVar6 \u003d\u003d 0x2a) {\n    piVar5 \u003d local_8c + 1;\n    iVar2 \u003d *local_8c;\n    local_8c \u003d piVar5;\n    if (iVar2 \u003c 0) {\n      local_7c \u003d -iVar2;\n      local_88 \u003d local_88 | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    bVar1 \u003d false;\n    iVar2 \u003d local_7c;\n    param_3 \u003d pbVar6;\n    while( true ) {\n      if (9 \u003c *param_3 - 0x30) break;\n      iVar2 \u003d iVar2 * 10 + (*param_3 - 0x30);\n      bVar1 \u003d true;\n      param_3 \u003d param_3 + 1;\n    }\n    if (!bVar1) goto LAB_080051fc;\n  }\n  local_7c \u003d iVar2;\nLAB_080051fc:\n  if (*param_3 \u003d\u003d 0x2e) {\n    if (param_3[1] \u003d\u003d 0x2a) {\n      param_3 \u003d param_3 + 2;\n      piVar5 \u003d local_8c + 1;\n      local_84 \u003d *local_8c;\n      local_8c \u003d piVar5;\n      if (local_84 \u003c 0) {\n        local_84 \u003d -1;\n      }\n    }\n    else {\n      bVar1 \u003d false;\n      iVar2 \u003d 0;\n      local_84 \u003d 0;\n      while( true ) {\n        param_3 \u003d param_3 + 1;\n        if (9 \u003c *param_3 - 0x30) break;\n        iVar2 \u003d iVar2 * 10 + (*param_3 - 0x30);\n        bVar1 \u003d true;\n      }\n      if (bVar1) {\n        local_84 \u003d iVar2;\n      }\n    }\n  }\n  pvVar4 \u003d memchr(\u0026DAT_0800737f,(uint)*param_3,3);\n  if (pvVar4 !\u003d (void *)0x0) {\n    param_3 \u003d param_3 + 1;\n    local_88 \u003d local_88 | 0x40 \u003c\u003c ((int)pvVar4 + 0xf7ff8c81U \u0026 0xff);\n  }\n  local_70 \u003d *param_3;\n  param_3 \u003d param_3 + 1;\n  pvVar4 \u003d memchr(\"efgEFG\",(uint)local_70,6);\n  if (pvVar4 \u003d\u003d (void *)0x0) {\n    unaff_r9 \u003d _printf_i(param_1,\u0026local_88,param_2,0x8005045,\u0026local_8c);\n    if (unaff_r9 \u003d\u003d -1) goto LAB_080052ac;\n  }\n  else {\n    local_8c \u003d (int *)(((int)local_8c + 7U \u0026 0xfffffff8) + 8);\n  }\n  local_74 \u003d local_74 + unaff_r9;\n  pbVar6 \u003d param_3;\n  goto LAB_08005146;\n}\n\n",
      "renaming": {},
      "calling": [
        "siprintf"
      ],
      "called": [
        "__ssputs_r",
        "memchr",
        "_malloc_r",
        "_printf_i"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080052e4": {
      "entrypoint": "0x080052e4",
      "current_name": "FUN_080052e4",
      "code": "\nundefined4\nFUN_080052e4(undefined4 param_1,uint *param_2,uint *param_3,undefined4 param_4,code *param_5)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  uVar3 \u003d param_2[4];\n  if ((int)param_2[4] \u003c (int)param_2[2]) {\n    uVar3 \u003d param_2[2];\n  }\n  *param_3 \u003d uVar3;\n  if (*(char *)((int)param_2 + 0x43) !\u003d \u0027\\0\u0027) {\n    *param_3 \u003d uVar3 + 1;\n  }\n  if ((int)(*param_2 \u003c\u003c 0x1a) \u003c 0) {\n    *param_3 \u003d *param_3 + 2;\n  }\n  if ((*param_2 \u0026 6) \u003d\u003d 0) {\n    for (iVar1 \u003d 0; iVar1 \u003c (int)(param_2[3] - *param_3); iVar1 \u003d iVar1 + 1) {\n      iVar2 \u003d (*param_5)(param_1,param_4,(int)param_2 + 0x19,1);\n      if (iVar2 \u003d\u003d -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  uVar3 \u003d (uint)*(byte *)((int)param_2 + 0x43);\n  if (uVar3 !\u003d 0) {\n    uVar3 \u003d 1;\n  }\n  uVar4 \u003d uVar3;\n  if ((int)(*param_2 \u003c\u003c 0x1a) \u003c 0) {\n    *(undefined *)((int)param_2 + uVar3 + 0x43) \u003d 0x30;\n    uVar4 \u003d uVar3 + 2;\n    *(undefined *)((int)param_2 + uVar3 + 0x44) \u003d *(undefined *)((int)param_2 + 0x45);\n  }\n  iVar1 \u003d (*param_5)(param_1,param_4,(int)param_2 + 0x43,uVar4);\n  if (iVar1 !\u003d -1) {\n    uVar3 \u003d param_2[3];\n    bVar5 \u003d (*param_2 \u0026 6) !\u003d 4;\n    if (bVar5) {\n      uVar3 \u003d 0;\n    }\n    uVar4 \u003d 0;\n    if (!bVar5) {\n      uVar3 \u003d uVar3 - *param_3;\n    }\n    if (!bVar5) {\n      uVar3 \u003d uVar3 \u0026 ~((int)uVar3 \u003e\u003e 0x1f);\n    }\n    if ((int)param_2[4] \u003c (int)param_2[2]) {\n      uVar3 \u003d uVar3 + (param_2[2] - param_2[4]);\n    }\n    while( true ) {\n      if (uVar3 \u003d\u003d uVar4) {\n        return 0;\n      }\n      iVar1 \u003d (*param_5)(param_1,param_4,(int)param_2 + 0x1a,1);\n      if (iVar1 \u003d\u003d -1) break;\n      uVar4 \u003d uVar4 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
      "renaming": {},
      "calling": [
        "_printf_i"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080053d4": {
      "entrypoint": "0x080053d4",
      "current_name": "FUN_080053d4",
      "code": "\nuint FUN_080053d4(undefined4 param_1,uint *param_2,undefined4 param_3,code *param_4,uint **param_5)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint *puVar3;\n  void *pvVar4;\n  int iVar5;\n  char *pcVar6;\n  uint uVar7;\n  uint **ppuVar8;\n  char **ppcVar9;\n  uint uVar10;\n  uint uVar11;\n  char *pcVar12;\n  char *__s;\n  uint local_24 [2];\n  \n  bVar1 \u003d *(byte *)(param_2 + 6);\n  __s \u003d (char *)((int)param_2 + 0x43);\n  if (bVar1 !\u003d 0x6e) {\n    if (bVar1 \u003c 0x6f) {\n      if (bVar1 !\u003d 99) {\n        if (bVar1 \u003c 100) {\n          if (bVar1 \u003d\u003d 0) goto LAB_0800558e;\n          if (bVar1 !\u003d 0x58) goto LAB_08005404;\n          *(undefined *)((int)param_2 + 0x45) \u003d 0x58;\n          pcVar6 \u003d \"0123456789ABCDEF\";\nLAB_0800551e:\n          uVar7 \u003d *param_2;\n          puVar3 \u003d *param_5;\n          *param_5 \u003d puVar3 + 1;\n          if (((uVar7 \u0026 0x80) \u003d\u003d 0) \u0026\u0026 ((int)(uVar7 \u003c\u003c 0x19) \u003c 0)) {\n            uVar10 \u003d (uint)*(ushort *)puVar3;\n          }\n          else {\n            uVar10 \u003d *puVar3;\n          }\n          if ((int)(uVar7 \u003c\u003c 0x1f) \u003c 0) {\n            *param_2 \u003d uVar7 | 0x20;\n          }\n          if (uVar10 \u003d\u003d 0) {\n            *param_2 \u003d *param_2 \u0026 0xffffffdf;\n          }\n          uVar7 \u003d 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param_2 + 0x43) \u003d 0;\n        }\n        else {\n          if ((bVar1 !\u003d 100) \u0026\u0026 (bVar1 !\u003d 0x69)) goto LAB_08005404;\n          uVar10 \u003d *param_2;\n          puVar3 \u003d *param_5;\n          if ((uVar10 \u0026 0x80) \u003d\u003d 0) {\n            *param_5 \u003d puVar3 + 1;\n            if ((uVar10 \u0026 0x40) \u003d\u003d 0) goto LAB_08005424;\n            uVar10 \u003d (uint)(short)*(ushort *)puVar3;\n          }\n          else {\n            *param_5 \u003d puVar3 + 1;\nLAB_08005424:\n            uVar10 \u003d *puVar3;\n          }\n          if ((int)uVar10 \u003c 0) {\n            uVar10 \u003d -uVar10;\n            *(undefined *)((int)param_2 + 0x43) \u003d 0x2d;\n          }\n          pcVar6 \u003d \"0123456789ABCDEF\";\n          uVar7 \u003d 10;\n        }\n        uVar11 \u003d param_2[1];\n        param_2[2] \u003d uVar11;\n        pcVar12 \u003d __s;\n        if ((int)uVar11 \u003c 0) {\n          if (uVar10 !\u003d 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)param_2 + 0x42) \u003d *pcVar6;\n          pcVar12 \u003d (char *)((int)param_2 + 0x42);\n        }\n        else {\n          *param_2 \u003d *param_2 \u0026 0xfffffffb;\n          if (uVar10 \u003d\u003d 0) {\n            if (uVar11 !\u003d 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              uVar11 \u003d uVar10 / uVar7;\n              pcVar12 \u003d pcVar12 + -1;\n              *pcVar12 \u003d pcVar6[uVar10 - uVar7 * uVar11];\n              uVar10 \u003d uVar11;\n            } while (uVar11 !\u003d 0);\n          }\n        }\n        if (((uVar7 \u003d\u003d 8) \u0026\u0026 ((int)(*param_2 \u003c\u003c 0x1f) \u003c 0)) \u0026\u0026 ((int)param_2[1] \u003c\u003d (int)param_2[4]))\n        {\n          pcVar12[-1] \u003d \u00270\u0027;\n          pcVar12 \u003d pcVar12 + -1;\n        }\n        param_2[4] \u003d (int)__s - (int)pcVar12;\n        __s \u003d pcVar12;\n        goto LAB_080054fa;\n      }\n      puVar3 \u003d *param_5;\n      *param_5 \u003d puVar3 + 1;\n      *(char *)((int)param_2 + 0x42) \u003d (char)*puVar3;\nLAB_08005464:\n      __s \u003d (char *)((int)param_2 + 0x42);\n      uVar10 \u003d 1;\n    }\n    else {\n      if (bVar1 !\u003d 0x73) {\n        if (bVar1 \u003c 0x74) {\n          if (bVar1 \u003d\u003d 0x6f) {\nLAB_0800548a:\n            uVar10 \u003d *param_2;\n            puVar3 \u003d *param_5;\n            if ((uVar10 \u0026 0x80) \u003d\u003d 0) {\n              *param_5 \u003d puVar3 + 1;\n              if ((uVar10 \u0026 0x40) \u003d\u003d 0) goto LAB_08005498;\n              uVar10 \u003d (uint)*(ushort *)puVar3;\n            }\n            else {\n              *param_5 \u003d puVar3 + 1;\nLAB_08005498:\n              uVar10 \u003d *puVar3;\n            }\n            if (bVar1 \u003d\u003d 0x6f) {\n              uVar7 \u003d 8;\n            }\n            else {\n              uVar7 \u003d 10;\n            }\n            pcVar6 \u003d \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (bVar1 \u003d\u003d 0x70) {\n            *param_2 \u003d *param_2 | 0x20;\nLAB_0800544a:\n            pcVar6 \u003d \"0123456789abcdef\";\n            *(undefined *)((int)param_2 + 0x45) \u003d 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (bVar1 \u003d\u003d 0x75) goto LAB_0800548a;\n          if (bVar1 \u003d\u003d 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param_2 + 0x42) \u003d bVar1;\n        goto LAB_08005464;\n      }\n      ppcVar9 \u003d (char **)*param_5;\n      *param_5 \u003d (uint *)(ppcVar9 + 1);\n      __s \u003d *ppcVar9;\n      pvVar4 \u003d memchr(__s,0,param_2[1]);\n      if (pvVar4 !\u003d (void *)0x0) {\n        param_2[1] \u003d (int)pvVar4 - (int)__s;\n      }\n      uVar10 \u003d param_2[1];\n    }\n    param_2[4] \u003d uVar10;\n    *(undefined *)((int)param_2 + 0x43) \u003d 0;\n    goto LAB_080054fa;\n  }\n  uVar10 \u003d *param_2;\n  ppuVar8 \u003d (uint **)*param_5;\n  uVar7 \u003d param_2[5];\n  if ((uVar10 \u0026 0x80) \u003d\u003d 0) {\n    *param_5 \u003d (uint *)(ppuVar8 + 1);\n    puVar3 \u003d *ppuVar8;\n    if ((uVar10 \u0026 0x40) \u003d\u003d 0) goto LAB_0800557a;\n    *(short *)puVar3 \u003d (short)uVar7;\n  }\n  else {\n    *param_5 \u003d (uint *)(ppuVar8 + 1);\n    puVar3 \u003d *ppuVar8;\nLAB_0800557a:\n    *puVar3 \u003d uVar7;\n  }\nLAB_0800558e:\n  param_2[4] \u003d 0;\nLAB_080054fa:\n  iVar2 \u003d _printf_common(param_1,param_2,local_24,param_3,param_4);\n  if ((iVar2 \u003d\u003d -1) || (iVar2 \u003d (*param_4)(param_1,param_3,__s,param_2[4]), iVar2 \u003d\u003d -1)) {\nLAB_0800550e:\n    uVar10 \u003d 0xffffffff;\n  }\n  else {\n    if ((int)(*param_2 \u003c\u003c 0x1e) \u003c 0) {\n      for (iVar2 \u003d 0; iVar2 \u003c (int)(param_2[3] - local_24[0]); iVar2 \u003d iVar2 + 1) {\n        iVar5 \u003d (*param_4)(param_1,param_3,(int)param_2 + 0x19,1);\n        if (iVar5 \u003d\u003d -1) goto LAB_0800550e;\n      }\n    }\n    uVar10 \u003d param_2[3];\n    if ((int)param_2[3] \u003c (int)local_24[0]) {\n      uVar10 \u003d local_24[0];\n    }\n  }\n  return uVar10;\n}\n\n",
      "renaming": {},
      "calling": [
        "_svfiprintf_r"
      ],
      "called": [
        "_printf_common",
        "memchr"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005614": {
      "entrypoint": "0x08005614",
      "current_name": "FUN_08005614",
      "code": "\nvoid * FUN_08005614(void *__s,int __c,size_t __n)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  \n  pbVar1 \u003d (byte *)__s;\n  do {\n    pbVar2 \u003d pbVar1;\n    if (pbVar2 \u003d\u003d (byte *)(__n + (int)__s)) {\n      return (void *)0x0;\n    }\n    pbVar1 \u003d pbVar2 + 1;\n  } while ((uint)*pbVar2 !\u003d (__c \u0026 0xffU));\n  return pbVar2;\n}\n\n",
      "renaming": {},
      "calling": [
        "_svfiprintf_r",
        "_printf_i"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005630": {
      "entrypoint": "0x08005630",
      "current_name": "FUN_08005630",
      "code": "\nvoid * FUN_08005630(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar2 \u003d (undefined *)((int)__dest + -1);\n  puVar1 \u003d (undefined *)(__n + (int)__src);\n  for (; (undefined *)__src !\u003d puVar1; __src \u003d (void *)((int)__src + 1)) {\n    puVar2 \u003d puVar2 + 1;\n    *puVar2 \u003d *__src;\n                    /* WARNING: Load size is inaccurate */\n  }\n  return __dest;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ssputs_r",
        "_realloc_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005646": {
      "entrypoint": "0x08005646",
      "current_name": "FUN_08005646",
      "code": "\nvoid * FUN_08005646(void *__dest,void *__src,size_t __n)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  \n  puVar3 \u003d (undefined *)((int)__src + __n);\n  if ((__src \u003c __dest) \u0026\u0026 (__dest \u003c puVar3)) {\n    puVar1 \u003d (undefined *)((int)__dest + __n);\n    iVar2 \u003d __n - (int)puVar3;\n    while (puVar3 + iVar2 !\u003d (undefined *)0x0) {\n      puVar3 \u003d puVar3 + -1;\n      puVar1 \u003d puVar1 + -1;\n      *puVar1 \u003d *puVar3;\n    }\n    return __dest;\n  }\n  puVar1 \u003d (undefined *)((int)__dest + -1);\n  for (; (undefined *)__src !\u003d puVar3; __src \u003d (void *)((int)__src + 1)) {\n    puVar1 \u003d puVar1 + 1;\n    *puVar1 \u003d *__src;\n                    /* WARNING: Load size is inaccurate */\n  }\n  return __dest;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ssputs_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800567c": {
      "entrypoint": "0x0800567c",
      "current_name": "FUN_0800567c",
      "code": "\nvoid FUN_0800567c(undefined4 *param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int **extraout_r1;\n  int **ppiVar1;\n  int **ppiVar2;\n  int *piVar3;\n  int **ppiVar4;\n  int **ppiVar5;\n  \n  if (param_2 \u003d\u003d 0) {\n    return;\n  }\n  ppiVar5 \u003d (int **)(param_2 + -4);\n  if (*(int *)(param_2 + -4) \u003c 0) {\n    ppiVar5 \u003d (int **)((int)ppiVar5 + *(int *)(param_2 + -4));\n  }\n  __malloc_lock();\n  ppiVar2 \u003d (int **)\u0026__malloc_free_list;\n  if (__malloc_free_list \u003d\u003d (int **)0x0) {\n    ppiVar5[1] \u003d (int *)0x0;\n    ppiVar1 \u003d extraout_r1;\n    __malloc_free_list \u003d ppiVar5;\n  }\n  else {\n    ppiVar2 \u003d __malloc_free_list;\n    if (ppiVar5 \u003c __malloc_free_list) {\n      ppiVar1 \u003d (int **)*ppiVar5;\n      ppiVar2 \u003d (int **)((int)ppiVar5 + (int)ppiVar1);\n      if (__malloc_free_list \u003d\u003d ppiVar2) {\n        piVar3 \u003d *__malloc_free_list;\n        __malloc_free_list \u003d (int **)__malloc_free_list[1];\n        ppiVar2 \u003d (int **)((int)piVar3 + (int)ppiVar1);\n        *ppiVar5 \u003d (int *)ppiVar2;\n      }\n      ppiVar5[1] \u003d (int *)__malloc_free_list;\n      __malloc_free_list \u003d ppiVar5;\n    }\n    else {\n      do {\n        ppiVar4 \u003d ppiVar2;\n        ppiVar2 \u003d (int **)ppiVar4[1];\n        if (ppiVar2 \u003d\u003d (int **)0x0) break;\n      } while (ppiVar2 \u003c\u003d ppiVar5);\n      ppiVar1 \u003d (int **)*ppiVar4;\n      if ((int **)((int)ppiVar4 + (int)ppiVar1) \u003d\u003d ppiVar5) {\n        ppiVar1 \u003d (int **)((int)ppiVar1 + (int)*ppiVar5);\n        *ppiVar4 \u003d (int *)ppiVar1;\n        if (ppiVar2 \u003d\u003d (int **)((int)ppiVar4 + (int)ppiVar1)) {\n          piVar3 \u003d *ppiVar2;\n          ppiVar2 \u003d (int **)ppiVar2[1];\n          ppiVar1 \u003d (int **)((int)ppiVar1 + (int)piVar3);\n          *ppiVar4 \u003d (int *)ppiVar1;\n          ppiVar4[1] \u003d (int *)ppiVar2;\n        }\n      }\n      else if (ppiVar5 \u003c (int **)((int)ppiVar4 + (int)ppiVar1)) {\n        *param_1 \u003d 0xc;\n      }\n      else {\n        ppiVar1 \u003d (int **)((int)ppiVar5 + (int)*ppiVar5);\n        if (ppiVar2 \u003d\u003d ppiVar1) {\n          piVar3 \u003d *ppiVar2;\n          ppiVar2 \u003d (int **)ppiVar2[1];\n          ppiVar1 \u003d (int **)((int)piVar3 + (int)*ppiVar5);\n          *ppiVar5 \u003d (int *)ppiVar1;\n        }\n        ppiVar5[1] \u003d (int *)ppiVar2;\n        ppiVar4[1] \u003d (int *)ppiVar5;\n      }\n    }\n  }\n  __malloc_unlock(param_1,ppiVar1,ppiVar2,param_4);\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ssputs_r",
        "_realloc_r"
      ],
      "called": [
        "__malloc_unlock",
        "__malloc_lock"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005714": {
      "entrypoint": "0x08005714",
      "current_name": "FUN_08005714",
      "code": "\nuint FUN_08005714(undefined4 *param_1,uint param_2)\n\n{\n  uint *puVar1;\n  int iVar2;\n  uint *puVar3;\n  uint uVar4;\n  uint *puVar5;\n  uint uVar6;\n  \n  uVar6 \u003d (param_2 + 3 \u0026 0xfffffffc) + 8;\n  if (uVar6 \u003c 0xc) {\n    uVar6 \u003d 0xc;\n  }\n  if (((int)uVar6 \u003c 0) || (uVar6 \u003c param_2)) {\n    *param_1 \u003d 0xc;\n  }\n  else {\n    __malloc_lock();\n    puVar1 \u003d __malloc_free_list;\n    puVar5 \u003d __malloc_free_list;\n    while (puVar3 \u003d puVar1, puVar3 !\u003d (uint *)0x0) {\n      uVar4 \u003d *puVar3 - uVar6;\n      if (-1 \u003c (int)uVar4) {\n        if (uVar4 \u003c 0xc) {\n          if (puVar5 \u003d\u003d puVar3) {\n            puVar1 \u003d (uint *)puVar5[1];\n            __malloc_free_list \u003d puVar1;\n          }\n          else {\n            puVar1 \u003d (uint *)puVar3[1];\n          }\n          if (puVar5 !\u003d puVar3) {\n            puVar5[1] \u003d (uint)puVar1;\n            puVar5 \u003d puVar3;\n          }\n        }\n        else {\n          *puVar3 \u003d uVar4;\n          *(uint *)((int)puVar3 + uVar4) \u003d uVar6;\n          puVar5 \u003d (uint *)((int)puVar3 + uVar4);\n        }\n        goto LAB_08005778;\n      }\n      puVar5 \u003d puVar3;\n      puVar1 \u003d (uint *)puVar3[1];\n    }\n    if (__malloc_sbrk_start \u003d\u003d 0) {\n      __malloc_sbrk_start \u003d _sbrk_r(param_1);\n    }\n    puVar1 \u003d (uint *)_sbrk_r(param_1,uVar6);\n    if ((puVar1 !\u003d (uint *)0xffffffff) \u0026\u0026\n       ((puVar5 \u003d (uint *)((int)puVar1 + 3U \u0026 0xfffffffc), puVar1 \u003d\u003d puVar5 ||\n        (iVar2 \u003d _sbrk_r(param_1,(int)puVar5 - (int)puVar1), iVar2 !\u003d -1)))) {\n      *puVar5 \u003d uVar6;\nLAB_08005778:\n      __malloc_unlock(param_1);\n      uVar6 \u003d (int)puVar5 + 0xbU \u0026 0xfffffff8;\n      iVar2 \u003d uVar6 - (int)(puVar5 + 1);\n      if (iVar2 !\u003d 0) {\n        *(int *)((int)puVar5 + iVar2) \u003d -iVar2;\n        return uVar6;\n      }\n      return uVar6;\n    }\n    *param_1 \u003d 0xc;\n    __malloc_unlock(param_1);\n  }\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ssputs_r",
        "_svfiprintf_r",
        "_realloc_r"
      ],
      "called": [
        "__malloc_unlock",
        "__malloc_lock",
        "_sbrk_r"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080057d0": {
      "entrypoint": "0x080057d0",
      "current_name": "FUN_080057d0",
      "code": "\nvoid * FUN_080057d0(undefined4 param_1,void *param_2,uint param_3,undefined4 param_4)\n\n{\n  void *pvVar1;\n  uint uVar2;\n  \n  if (param_2 !\u003d (void *)0x0) {\n    if (param_3 \u003d\u003d 0) {\n      _free_r();\n      pvVar1 \u003d (void *)0x0;\n    }\n    else {\n      uVar2 \u003d _malloc_usable_size_r();\n      pvVar1 \u003d param_2;\n      if ((uVar2 \u003c param_3) \u0026\u0026 (pvVar1 \u003d (void *)_malloc_r(param_1,param_3), pvVar1 !\u003d (void *)0x0))\n      {\n        memcpy(pvVar1,param_2,param_3);\n        _free_r(param_1,param_2);\n      }\n    }\n    return pvVar1;\n  }\n  pvVar1 \u003d (void *)_malloc_r(param_1,param_3,param_3,param_4);\n  return pvVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ssputs_r"
      ],
      "called": [
        "_free_r",
        "_malloc_usable_size_r",
        "_malloc_r",
        "memcpy"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800581c": {
      "entrypoint": "0x0800581c",
      "current_name": "FUN_0800581c",
      "code": "\nvoid FUN_0800581c(int *param_1,intptr_t param_2)\n\n{\n  void *pvVar1;\n  \n  errno \u003d 0;\n  pvVar1 \u003d _sbrk(param_2);\n  if ((pvVar1 \u003d\u003d (void *)0xffffffff) \u0026\u0026 (errno !\u003d 0)) {\n    *param_1 \u003d errno;\n  }\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_malloc_r"
      ],
      "called": [
        "_sbrk"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800583c": {
      "entrypoint": "0x0800583c",
      "current_name": "FUN_0800583c",
      "code": "\nvoid FUN_0800583c(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_free_r",
        "_malloc_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800583e": {
      "entrypoint": "0x0800583e",
      "current_name": "FUN_0800583e",
      "code": "\nvoid FUN_0800583e(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "_free_r",
        "_malloc_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005840": {
      "entrypoint": "0x08005840",
      "current_name": "FUN_08005840",
      "code": "\nint FUN_08005840(undefined4 param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 \u003d *(int *)(param_2 + -4) + -4;\n  if (*(int *)(param_2 + -4) \u003c 0) {\n    iVar1 \u003d iVar1 + *(int *)(param_2 + iVar1);\n  }\n  return iVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "_realloc_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005854": {
      "entrypoint": "0x08005854",
      "current_name": "FUN_08005854",
      "code": "\n/* WARNING: Removing unreachable block (ram,0x080058d4) */\n\ndouble FUN_08005854(double __x)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  double dVar3;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  int in_stack_ffffffb8;\n  char *in_stack_ffffffbc;\n  \n  dVar3 \u003d (double)__ieee754_asin();\n  if ((__fdlib_version !\u003d -1) \u0026\u0026 (iVar1 \u003d __unorddf2(), dVar3 \u003d extraout_d0, iVar1 \u003d\u003d 0)) {\n    fabs((double)CONCAT44(in_stack_ffffffbc,in_stack_ffffffb8));\n    iVar1 \u003d __aeabi_dcmpgt();\n    dVar3 \u003d extraout_d0_00;\n    if ((iVar1 !\u003d 0) \u0026\u0026\n       ((nan(\"\"), __fdlib_version \u003d\u003d \u0027\\x02\u0027 ||\n        (iVar1 \u003d matherr((exception *)\u0026stack0xffffffb8), dVar3 \u003d extraout_d0_02, iVar1 \u003d\u003d 0)))) {\n      puVar2 \u003d (undefined4 *)__errno();\n      *puVar2 \u003d 0x21;\n      dVar3 \u003d extraout_d0_01;\n    }\n  }\n  return dVar3;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate"
      ],
      "called": [
        "__errno",
        "fabs",
        "matherr",
        "__aeabi_dcmpgt",
        "nan",
        "__ieee754_asin",
        "__unorddf2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080058fc": {
      "entrypoint": "0x080058fc",
      "current_name": "FUN_080058fc",
      "code": "\nundefined8 __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  undefined4 uVar1;\n  undefined4 extraout_r1;\n  int extraout_r1_00;\n  undefined4 unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  \n  uVar5 \u003d param_4 \u0026 0x7fffffff;\n  if ((0x7ff00000 \u003c (uVar5 | (-param_3 | param_3) \u003e\u003e 0x1f)) ||\n     (uVar3 \u003d param_2 \u0026 0x7fffffff, 0x7ff00000 \u003c (uVar3 | (-param_1 | param_1) \u003e\u003e 0x1f))) {\n    uVar6 \u003d __aeabi_dadd(param_1,param_2);\n    return uVar6;\n  }\n  if ((param_4 + 0xc0100000 | param_3) \u003d\u003d 0) {\n    atan(param_5);\n    return CONCAT44(extraout_r1,param_1);\n  }\n  uVar2 \u003d (int)param_4 \u003e\u003e 0x1e \u0026 2U | param_2 \u003e\u003e 0x1f;\n  if ((param_1 | uVar3) \u003d\u003d 0) {\n    if (uVar2 \u003d\u003d 2) {\n      return 0x400921fb54442d18;\n    }\n    if (uVar2 !\u003d 3) {\n      return CONCAT44(param_2,param_1);\n    }\nLAB_0800613e:\n    uVar6 \u003d 0xc00921fb54442d18;\n  }\n  else {\n    if ((param_3 | uVar5) !\u003d 0) {\n      if (uVar5 \u003d\u003d 0x7ff00000) {\n        if (uVar3 \u003d\u003d 0x7ff00000) {\n          if (uVar2 \u003d\u003d 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (uVar2 \u003d\u003d 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (uVar2 !\u003d 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (uVar2 \u003d\u003d 2) {\n          return 0x400921fb54442d18;\n        }\n        if (uVar2 !\u003d 3) {\n          if (uVar2 !\u003d 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (uVar3 !\u003d 0x7ff00000) {\n        iVar4 \u003d (int)(uVar3 - uVar5) \u003e\u003e 0x14;\n        if (iVar4 \u003c 0x3d) {\n          if (((int)param_4 \u003c 0) \u0026\u0026 (iVar4 + 0x3c \u003c 0 !\u003d SCARRY4(iVar4,0x3c))) {\n            uVar1 \u003d 0;\n            iVar4 \u003d 0;\n          }\n          else {\n            uVar1 \u003d __divdf3(param_1,param_2);\n            fabs((double)CONCAT44(unaff_r4,param_4));\n            atan((double)CONCAT44(unaff_r4,param_4));\n            iVar4 \u003d extraout_r1_00;\n          }\n        }\n        else {\n          uVar1 \u003d 0x54442d18;\n          iVar4 \u003d 0x3ff921fb;\n        }\n        if (uVar2 \u003d\u003d 1) {\n          return CONCAT44(iVar4 + -0x80000000,uVar1);\n        }\n        if (uVar2 \u003d\u003d 2) {\n          uVar7 \u003d __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar6 \u003d 0x400921fb54442d18;\n        }\n        else {\n          if (uVar2 \u003d\u003d 0) {\n            return CONCAT44(iVar4,uVar1);\n          }\n          uVar6 \u003d __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar7 \u003d 0x400921fb54442d18;\n        }\n        uVar6 \u003d __subdf3((int)uVar6,(int)((ulonglong)uVar6 \u003e\u003e 0x20),(int)uVar7,\n                         (int)((ulonglong)uVar7 \u003e\u003e 0x20));\n        return uVar6;\n      }\n    }\n    if ((int)param_2 \u003c 0) {\n      uVar6 \u003d 0xbff921fb54442d18;\n    }\n    else {\n      uVar6 \u003d 0x3ff921fb54442d18;\n    }\n  }\n  return uVar6;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate"
      ],
      "called": [
        "__ieee754_atan2"
      ],
      "improved": true,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005900": {
      "entrypoint": "0x08005900",
      "current_name": "FUN_08005900",
      "code": "\ndouble FUN_08005900(double __x,double __y)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 uVar6;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  double extraout_d0_03;\n  double extraout_d0_04;\n  double extraout_d0_05;\n  double extraout_d0_06;\n  double extraout_d0_07;\n  double extraout_d0_08;\n  double extraout_d0_09;\n  double extraout_d0_10;\n  double extraout_d0_11;\n  double extraout_d0_12;\n  double dVar7;\n  undefined8 uVar8;\n  undefined local_50 [24];\n  undefined8 local_38;\n  int local_30;\n  \n  dVar7 \u003d (double)__ieee754_pow();\n  cVar1 \u003d __fdlib_version;\n  if (__fdlib_version \u003d\u003d -1) {\n    return extraout_d0;\n  }\n  iVar2 \u003d __unorddf2();\n  if (iVar2 !\u003d 0) {\n    return extraout_d0_00;\n  }\n  iVar2 \u003d __unorddf2();\n  if (iVar2 !\u003d 0) {\n    iVar2 \u003d __aeabi_dcmpeq();\n    if (iVar2 \u003d\u003d 0) {\n      return extraout_d0_01;\n    }\n    local_50._0_4_ \u003d 1;\n    local_50._4_4_ \u003d \"pow\";\n    local_38 \u003d 1.0;\n    local_30 \u003d 0;\n    if (cVar1 \u003d\u003d \u0027\\x02\u0027) {\n      return extraout_d0_01;\n    }\n    goto LAB_08005978;\n  }\n  iVar2 \u003d __aeabi_dcmpeq();\n  if (iVar2 \u003d\u003d 0) {\n    iVar2 \u003d finite(dVar7);\n    if ((iVar2 \u003d\u003d 0) \u0026\u0026 (iVar5 \u003d finite(dVar7), iVar5 !\u003d 0)) {\n      iVar5 \u003d finite(dVar7);\n      if (iVar5 \u003d\u003d 0) goto LAB_08005b4c;\n      local_30 \u003d __unorddf2(SUB84(dVar7,0),(int)((ulonglong)dVar7 \u003e\u003e 0x20));\n      cVar1 \u003d __fdlib_version;\n      if (local_30 !\u003d 0) {\n        local_50._4_4_ \u003d \"pow\";\n        local_50._0_4_ \u003d 1;\n        local_30 \u003d iVar2;\n        if (__fdlib_version \u003d\u003d \u0027\\0\u0027) goto LAB_08005a22;\n        local_38 \u003d (double)__divdf3(0,0,0,0);\n        goto LAB_08005a32;\n      }\n      local_50._4_4_ \u003d \"pow\";\n      local_50._0_4_ \u003d 3;\n      if (__fdlib_version !\u003d \u0027\\0\u0027) {\n        local_38._0_4_ \u003d 0;\n        local_38._4_4_ \u003d 0x7ff00000;\n        iVar2 \u003d __aeabi_dcmplt();\n        if (iVar2 !\u003d 0) {\n          uVar8 \u003d __muldf3();\n          uVar6 \u003d (int)uVar8;\n          rint(dVar7);\n          iVar2 \u003d __aeabi_dcmpeq((int)uVar8,(int)((ulonglong)uVar8 \u003e\u003e 0x20),uVar6,extraout_r1_00);\n          if (iVar2 \u003d\u003d 0) {\n            local_38._0_4_ \u003d 0;\n            local_38._4_4_ \u003d 0xfff00000;\n          }\n        }\n        goto LAB_08005afa;\n      }\n      local_38._0_4_ \u003d 0xe0000000;\n      local_38._4_4_ \u003d 0x47efffff;\n      iVar2 \u003d __aeabi_dcmplt();\n      if (iVar2 !\u003d 0) {\n        uVar8 \u003d __muldf3();\n        uVar6 \u003d (int)uVar8;\n        rint(dVar7);\n        iVar2 \u003d __aeabi_dcmpeq((int)uVar8,(int)((ulonglong)uVar8 \u003e\u003e 0x20),uVar6,extraout_r1);\n        if (iVar2 \u003d\u003d 0) {\n          local_38._0_4_ \u003d 0xe0000000;\n          local_38._4_4_ \u003d 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar2 \u003d matherr((exception *)local_50);\n      dVar7 \u003d extraout_d0_12;\n      if (iVar2 !\u003d 0) goto LAB_080059d0;\n    }\n    else {\nLAB_08005b4c:\n      iVar2 \u003d __aeabi_dcmpeq(SUB84(dVar7,0),(int)((ulonglong)dVar7 \u003e\u003e 0x20),0,0);\n      if (iVar2 \u003d\u003d 0) {\n        return extraout_d0_09;\n      }\n      iVar2 \u003d finite(dVar7);\n      if (iVar2 \u003d\u003d 0) {\n        return extraout_d0_10;\n      }\n      iVar2 \u003d finite(dVar7);\n      if (iVar2 \u003d\u003d 0) {\n        return extraout_d0_11;\n      }\n      local_50._0_4_ \u003d 4;\n      local_50._4_4_ \u003d \"pow\";\n      local_30 \u003d 0;\n      local_38._0_4_ \u003d 0;\n      local_38._4_4_ \u003d 0;\nLAB_08005afa:\n      if (__fdlib_version !\u003d \u0027\\x02\u0027) goto LAB_08005b98;\n    }\n    puVar4 \u003d (undefined4 *)__errno();\n    uVar6 \u003d 0x22;\n    dVar7 \u003d extraout_d0_08;\n  }\n  else {\n    iVar2 \u003d __aeabi_dcmpeq();\n    if (iVar2 \u003d\u003d 0) {\n      iVar2 \u003d finite(dVar7);\n      if (iVar2 \u003d\u003d 0) {\n        return extraout_d0_05;\n      }\n      iVar2 \u003d __aeabi_dcmplt();\n      if (iVar2 \u003d\u003d 0) {\n        return extraout_d0_06;\n      }\n      local_50._0_4_ \u003d 1;\n      local_50._4_4_ \u003d \"pow\";\n      local_30 \u003d 0;\n      if (__fdlib_version \u003d\u003d \u0027\\0\u0027) {\nLAB_08005a22:\n        local_50._4_4_ \u003d \"pow\";\n        local_50._0_4_ \u003d 1;\n        local_38 \u003d 0.0;\n        goto LAB_08005978;\n      }\n      local_38 \u003d -INFINITY;\n      local_30 \u003d 0;\n      cVar1 \u003d __fdlib_version;\nLAB_08005a32:\n      if (cVar1 !\u003d \u0027\\x02\u0027) goto LAB_08005978;\n    }\n    else {\n      local_50._0_4_ \u003d 1;\n      local_50._4_4_ \u003d \"pow\";\n      local_38 \u003d 0.0;\n      local_30 \u003d 0;\n      if (cVar1 !\u003d \u0027\\0\u0027) {\n        local_38 \u003d 1.0;\n        dVar7 \u003d extraout_d0_03;\n        goto LAB_080059d0;\n      }\nLAB_08005978:\n      iVar2 \u003d matherr((exception *)local_50);\n      dVar7 \u003d extraout_d0_02;\n      if (iVar2 !\u003d 0) goto LAB_080059d0;\n    }\n    puVar4 \u003d (undefined4 *)__errno();\n    uVar6 \u003d 0x21;\n    dVar7 \u003d extraout_d0_07;\n  }\n  *puVar4 \u003d uVar6;\nLAB_080059d0:\n  if (local_30 !\u003d 0) {\n    piVar3 \u003d (int *)__errno();\n    *piVar3 \u003d local_30;\n    dVar7 \u003d extraout_d0_04;\n  }\n  return dVar7;\n}\n\n",
      "renaming": {},
      "calling": [
        "MS5611_Update"
      ],
      "called": [
        "__aeabi_dcmpeq",
        "__aeabi_dcmplt",
        "__errno",
        "rint",
        "matherr",
        "__muldf3",
        "finite",
        "__ieee754_pow",
        "__unorddf2",
        "__divdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005bc8": {
      "entrypoint": "0x08005bc8",
      "current_name": "FUN_08005bc8",
      "code": "\ndouble FUN_08005bc8(double __x)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  double dVar5;\n  double extraout_d0;\n  double extraout_d0_00;\n  double extraout_d0_01;\n  double extraout_d0_02;\n  double extraout_d0_03;\n  undefined local_50 [24];\n  undefined8 local_38;\n  int local_30;\n  \n  dVar5 \u003d (double)__ieee754_sqrt();\n  cVar1 \u003d __fdlib_version;\n  if (__fdlib_version \u003d\u003d -1) {\n    return dVar5;\n  }\n  local_30 \u003d __unorddf2();\n  if (local_30 !\u003d 0) {\n    return extraout_d0;\n  }\n  iVar2 \u003d __aeabi_dcmplt();\n  if (iVar2 \u003d\u003d 0) {\n    return extraout_d0_00;\n  }\n  local_50._0_4_ \u003d 1;\n  local_50._4_4_ \u003d \"sqrt\";\n  if (cVar1 \u003d\u003d \u0027\\0\u0027) {\n    local_38 \u003d 0.0;\nLAB_08005c26:\n    iVar2 \u003d matherr((exception *)local_50);\n    dVar5 \u003d extraout_d0_01;\n    if (iVar2 !\u003d 0) goto LAB_08005c2e;\n  }\n  else {\n    local_38 \u003d (double)__divdf3(0,0,0,0);\n    if (cVar1 !\u003d \u0027\\x02\u0027) goto LAB_08005c26;\n  }\n  puVar4 \u003d (undefined4 *)__errno();\n  *puVar4 \u003d 0x21;\n  dVar5 \u003d extraout_d0_03;\nLAB_08005c2e:\n  if (local_30 !\u003d 0) {\n    piVar3 \u003d (int *)__errno();\n    *piVar3 \u003d local_30;\n    dVar5 \u003d extraout_d0_02;\n  }\n  return dVar5;\n}\n\n",
      "renaming": {},
      "calling": [
        "MadgwickQuaternionUpdate"
      ],
      "called": [
        "__aeabi_dcmplt",
        "__errno",
        "matherr",
        "__ieee754_sqrt",
        "__divdf3",
        "__unorddf2"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08005c70": {
      "entrypoint": "0x08005c70",
      "current_name": "FUN_08005c70",
      "code": "\nundefined8 FUN_08005c70(uint param_1,uint param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_r1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined4 in_stack_ffffffc8;\n  \n  uVar9 \u003d CONCAT44(param_2,param_1);\n  uVar8 \u003d param_2 \u0026 0x7fffffff;\n  if (uVar8 \u003c 0x3ff00000) {\n    if (uVar8 \u003c 0x3fe00000) {\n      if (0x3e3fffff \u003c uVar8) {\n        uVar10 \u003d __muldf3(param_1,param_2,param_1,param_2);\n        uVar7 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n        uVar6 \u003d (undefined4)uVar10;\n        uVar10 \u003d __muldf3(uVar6,uVar7,0xdfdf709,0x3f023de1);\n        uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x7501b288,0x3f49efe0);\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0xb5688f3b,0x3fa48228);\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0xe884455,0x3fc9c155);\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x3eb6f7d,0x3fd4d612);\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x55555555,0x3fc55555);\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar11 \u003d __muldf3(uVar6,uVar7,0xb12e9282,0x3fb3b8c5);\n        uVar11 \u003d __subdf3((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),0x1b8d0159,0x3fe6066c);\n        uVar11 \u003d __muldf3((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar11 \u003d __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),0x9c598ac8,0x40002ae5);\n        uVar11 \u003d __muldf3((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar11 \u003d __subdf3((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),0x1c8a2d4b,0x40033a27);\n        uVar11 \u003d __muldf3((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),uVar6,uVar7);\n        uVar11 \u003d __aeabi_dadd((int)uVar11,(int)((ulonglong)uVar11 \u003e\u003e 0x20),0,0x3ff00000);\n        uVar10 \u003d __divdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),(int)uVar11,\n                          (int)((ulonglong)uVar11 \u003e\u003e 0x20));\n        uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),param_1,param_2);\n        goto LAB_08005cba;\n      }\n      uVar10 \u003d __aeabi_dadd(param_1,param_2,0x8800759c,0x7e37e43c);\n      iVar1 \u003d __aeabi_dcmpgt((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0,0x3ff00000);\n      if (iVar1 !\u003d 0) {\n        return uVar9;\n      }\n    }\n    fabs((double)CONCAT44(param_2,in_stack_ffffffc8));\n    uVar9 \u003d __subdf3(0,0x3ff00000,param_1,extraout_r1);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0,0x3fe00000);\n    uVar2 \u003d (undefined4)((ulonglong)uVar9 \u003e\u003e 0x20);\n    uVar6 \u003d (undefined4)uVar9;\n    uVar9 \u003d __muldf3(uVar6,uVar2,0xdfdf709,0x3f023de1);\n    uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x7501b288,0x3f49efe0);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0xb5688f3b,0x3fa48228);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0xe884455,0x3fc9c155);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x3eb6f7d,0x3fd4d612);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x55555555,0x3fc55555);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar3 \u003d (undefined4)((ulonglong)uVar9 \u003e\u003e 0x20);\n    uVar10 \u003d __muldf3(uVar6,uVar2,0xb12e9282,0x3fb3b8c5);\n    uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x1b8d0159,0x3fe6066c);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x9c598ac8,0x40002ae5);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x1c8a2d4b,0x40033a27);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar2);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0,0x3ff00000);\n    uVar4 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n    uVar11 \u003d __ieee754_sqrt(uVar6,uVar2);\n    uVar5 \u003d (undefined4)((ulonglong)uVar11 \u003e\u003e 0x20);\n    uVar7 \u003d (undefined4)uVar11;\n    if (uVar8 \u003c 0x3fef3333) {\n      uVar9 \u003d __divdf3((int)uVar9,uVar3,(int)uVar10,uVar4);\n      uVar10 \u003d __aeabi_dadd(uVar7,uVar5,uVar7,uVar5);\n      uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),(int)uVar10,\n                       (int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar10 \u003d __muldf3(0,uVar5,0,uVar5);\n      uVar10 \u003d __subdf3(uVar6,uVar2,(int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar11 \u003d __aeabi_dadd(uVar7,uVar5,0,uVar5);\n      uVar10 \u003d __divdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),(int)uVar11,\n                        (int)((ulonglong)uVar11 \u003e\u003e 0x20));\n      uVar6 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n      uVar10 \u003d __aeabi_dadd((int)uVar10,uVar6,(int)uVar10,uVar6);\n      uVar10 \u003d __subdf3(0x33145c07,0x3c91a626,(int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),(int)uVar10,\n                       (int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar10 \u003d __aeabi_dadd(0,uVar5,0,uVar5);\n      uVar10 \u003d __subdf3(0x54442d18,0x3fe921fb,(int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),(int)uVar10,\n                       (int)((ulonglong)uVar10 \u003e\u003e 0x20));\n      uVar6 \u003d 0x3fe921fb;\n    }\n    else {\n      uVar9 \u003d __divdf3((int)uVar9,uVar3,(int)uVar10,uVar4);\n      uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar7,uVar5);\n      uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar7,uVar5);\n      uVar6 \u003d (undefined4)((ulonglong)uVar9 \u003e\u003e 0x20);\n      uVar9 \u003d __aeabi_dadd((int)uVar9,uVar6,(int)uVar9,uVar6);\n      uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x33145c07,0x3c91a626);\n      uVar6 \u003d 0x3ff921fb;\n    }\n    uVar9 \u003d __subdf3(0x54442d18,uVar6,(int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20));\n    if ((int)param_2 \u003c 1) {\n      uVar9 \u003d CONCAT44((int)((ulonglong)uVar9 \u003e\u003e 0x20) + -0x80000000,(int)uVar9);\n    }\n  }\n  else {\n    if ((uVar8 + 0xc0100000 | param_1) !\u003d 0) {\n      uVar9 \u003d __subdf3(param_1,param_2,param_1,param_2);\n      uVar6 \u003d (undefined4)((ulonglong)uVar9 \u003e\u003e 0x20);\n      uVar9 \u003d __divdf3((int)uVar9,uVar6,(int)uVar9,uVar6);\n      return uVar9;\n    }\n    uVar9 \u003d __muldf3(param_1,param_2,0x54442d18,0x3ff921fb);\n    uVar10 \u003d __muldf3(param_1,param_2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),(int)uVar10,\n                         (int)((ulonglong)uVar10 \u003e\u003e 0x20));\n  }\n  return uVar9;\n}\n\n",
      "renaming": {},
      "calling": [
        "asin"
      ],
      "called": [
        "fabs",
        "__aeabi_dadd",
        "__aeabi_dcmpgt",
        "__ieee754_sqrt",
        "__muldf3",
        "__subdf3",
        "__divdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08006070": {
      "entrypoint": "0x08006070",
      "current_name": "FUN_08006070",
      "code": "\nundefined8 FUN_08006070(uint param_1,uint param_2,uint param_3,uint param_4,double param_5)\n\n{\n  undefined4 uVar1;\n  undefined4 extraout_r1;\n  int extraout_r1_00;\n  undefined4 unaff_r4;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  \n  uVar5 \u003d param_4 \u0026 0x7fffffff;\n  if ((0x7ff00000 \u003c (uVar5 | (-param_3 | param_3) \u003e\u003e 0x1f)) ||\n     (uVar3 \u003d param_2 \u0026 0x7fffffff, 0x7ff00000 \u003c (uVar3 | (-param_1 | param_1) \u003e\u003e 0x1f))) {\n    uVar6 \u003d __aeabi_dadd(param_1,param_2);\n    return uVar6;\n  }\n  if ((param_4 + 0xc0100000 | param_3) \u003d\u003d 0) {\n    atan(param_5);\n    return CONCAT44(extraout_r1,param_1);\n  }\n  uVar2 \u003d (int)param_4 \u003e\u003e 0x1e \u0026 2U | param_2 \u003e\u003e 0x1f;\n  if ((param_1 | uVar3) \u003d\u003d 0) {\n    if (uVar2 \u003d\u003d 2) {\n      return 0x400921fb54442d18;\n    }\n    if (uVar2 !\u003d 3) {\n      return CONCAT44(param_2,param_1);\n    }\nLAB_0800613e:\n    uVar6 \u003d 0xc00921fb54442d18;\n  }\n  else {\n    if ((param_3 | uVar5) !\u003d 0) {\n      if (uVar5 \u003d\u003d 0x7ff00000) {\n        if (uVar3 \u003d\u003d 0x7ff00000) {\n          if (uVar2 \u003d\u003d 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (uVar2 \u003d\u003d 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (uVar2 !\u003d 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (uVar2 \u003d\u003d 2) {\n          return 0x400921fb54442d18;\n        }\n        if (uVar2 !\u003d 3) {\n          if (uVar2 !\u003d 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (uVar3 !\u003d 0x7ff00000) {\n        iVar4 \u003d (int)(uVar3 - uVar5) \u003e\u003e 0x14;\n        if (iVar4 \u003c 0x3d) {\n          if (((int)param_4 \u003c 0) \u0026\u0026 (iVar4 + 0x3c \u003c 0 !\u003d SCARRY4(iVar4,0x3c))) {\n            uVar1 \u003d 0;\n            iVar4 \u003d 0;\n          }\n          else {\n            uVar1 \u003d __divdf3(param_1,param_2);\n            fabs((double)CONCAT44(unaff_r4,param_4));\n            atan((double)CONCAT44(unaff_r4,param_4));\n            iVar4 \u003d extraout_r1_00;\n          }\n        }\n        else {\n          uVar1 \u003d 0x54442d18;\n          iVar4 \u003d 0x3ff921fb;\n        }\n        if (uVar2 \u003d\u003d 1) {\n          return CONCAT44(iVar4 + -0x80000000,uVar1);\n        }\n        if (uVar2 \u003d\u003d 2) {\n          uVar7 \u003d __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar6 \u003d 0x400921fb54442d18;\n        }\n        else {\n          if (uVar2 \u003d\u003d 0) {\n            return CONCAT44(iVar4,uVar1);\n          }\n          uVar6 \u003d __subdf3(uVar1,iVar4,0x33145c07,0x3ca1a626);\n          uVar7 \u003d 0x400921fb54442d18;\n        }\n        uVar6 \u003d __subdf3((int)uVar6,(int)((ulonglong)uVar6 \u003e\u003e 0x20),(int)uVar7,\n                         (int)((ulonglong)uVar7 \u003e\u003e 0x20));\n        return uVar6;\n      }\n    }\n    if ((int)param_2 \u003c 0) {\n      uVar6 \u003d 0xbff921fb54442d18;\n    }\n    else {\n      uVar6 \u003d 0x3ff921fb54442d18;\n    }\n  }\n  return uVar6;\n}\n\n",
      "renaming": {},
      "calling": [
        "atan2"
      ],
      "called": [
        "fabs",
        "atan",
        "__aeabi_dadd",
        "__subdf3",
        "__divdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08006228": {
      "entrypoint": "0x08006228",
      "current_name": "FUN_08006228",
      "code": "\nvoid FUN_08006228(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  undefined4 extraout_r1;\n  uint extraout_r1_00;\n  undefined4 uVar2;\n  undefined4 extraout_r1_01;\n  undefined4 extraout_r1_02;\n  uint extraout_r1_03;\n  undefined4 extraout_r1_04;\n  undefined4 uVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  undefined4 uVar9;\n  uint uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined8 uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  longlong lVar17;\n  ulonglong uVar18;\n  undefined8 uVar19;\n  undefined4 uVar20;\n  undefined4 in_stack_ffffff94;\n  undefined4 local_68;\n  undefined4 local_64;\n  int local_54;\n  \n  uVar10 \u003d param_4 \u0026 0x7fffffff;\n  if ((uVar10 | param_3) \u003d\u003d 0) {\n    return;\n  }\n  uVar8 \u003d param_2 \u0026 0x7fffffff;\n  if (uVar8 \u003c 0x7ff00001) {\n    if (uVar8 \u003d\u003d 0x7ff00000) {\n      if (param_1 \u003d\u003d 0) {\n        if (0x7ff00000 \u003c uVar10) goto LAB_08006278;\nLAB_08006262:\n        if ((uVar10 !\u003d 0x7ff00000) || (param_3 \u003d\u003d 0)) {\n          if (-1 \u003c (int)param_2) goto LAB_0800632a;\n          if (uVar10 \u003c 0x43400000) {\n            if (uVar10 \u003c 0x3ff00000) {\nLAB_0800632a:\n              uVar1 \u003d 0;\n              goto LAB_080062ba;\n            }\n            iVar4 \u003d ((int)uVar10 \u003e\u003e 0x14) + -0x3ff;\n            if (0x14 \u003c iVar4) {\n              uVar1 \u003d param_3 \u003e\u003e (0x34U - iVar4 \u0026 0xff);\n              if (param_3 \u003d\u003d uVar1 \u003c\u003c (0x34U - iVar4 \u0026 0xff)) {\n                uVar1 \u003d 2 - (uVar1 \u0026 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (param_3 \u003d\u003d 0) {\n              uVar1 \u003d (int)uVar10 \u003e\u003e (0x14U - iVar4 \u0026 0xff);\n              if (uVar10 \u003d\u003d uVar1 \u003c\u003c (0x14U - iVar4 \u0026 0xff)) {\n                uVar1 \u003d 2 - (uVar1 \u0026 1);\n              }\n              else {\n                uVar1 \u003d 0;\n              }\n              goto LAB_0800630c;\n            }\n            uVar1 \u003d 0;\n          }\n          else {\n            uVar1 \u003d 2;\nLAB_080062ba:\n            if (param_3 \u003d\u003d 0) {\n              if (uVar10 \u003d\u003d 0x7ff00000) {\n                return;\n              }\nLAB_0800630c:\n              if (uVar10 \u003d\u003d 0x3ff00000) {\n                if (-1 \u003c (int)param_4) {\n                  return;\n                }\n                uVar13 \u003d 0x3ff0000000000000;\n                uVar14 \u003d CONCAT44(param_2,param_1);\n                goto LAB_08006320;\n              }\n              if (param_4 \u003d\u003d 0x40000000) goto LAB_0800634a;\n              if ((param_4 \u003d\u003d 0x3fe00000) \u0026\u0026 (-1 \u003c (int)param_2)) {\n                __ieee754_sqrt(param_1,param_2);\n                return;\n              }\n            }\n          }\n          uVar5 \u003d param_1;\n          fabs((double)CONCAT44(in_stack_ffffff94,uVar1));\n          uVar18 \u003d CONCAT44(param_2,uVar5) \u0026 0x7fffffffffffffff;\n          if ((param_1 \u003d\u003d 0) \u0026\u0026 ((uVar8 \u003d\u003d 0 || ((param_2 \u0026 0x3fffffff) \u003d\u003d 0x3ff00000)))) {\n            if ((int)param_4 \u003c 0) {\n              __divdf3(0,0x3ff00000,uVar5,extraout_r1);\n            }\n            if (-1 \u003c (int)param_2) {\n              return;\n            }\n            if ((uVar1 | uVar8 + 0xc0100000) !\u003d 0) {\n              return;\n            }\n          }\n          else {\n            uVar5 \u003d 0xffffffff - ((int)param_2 \u003e\u003e 0x1f);\n            if ((uVar1 | uVar5) !\u003d 0) {\n              if (uVar10 \u003c 0x41e00001) {\n                local_54 \u003d 0;\n                if (uVar8 \u003c 0x100000) {\n                  uVar18 \u003d __muldf3();\n                  local_54 \u003d -0x35;\n                }\n                uVar10 \u003d (uint)(uVar18 \u003e\u003e 0x20);\n                local_54 \u003d ((int)uVar10 \u003e\u003e 0x14) + -0x3ff + local_54;\n                uVar10 \u003d uVar10 \u0026 0xfffff;\n                uVar8 \u003d uVar10 | 0x3ff00000;\n                if (uVar10 \u003c 0x3988f) {\nLAB_08006628:\n                  iVar4 \u003d 0;\n                }\n                else {\n                  if (0xbb679 \u003c uVar10) {\n                    uVar8 \u003d uVar8 - 0x100000;\n                    local_54 \u003d local_54 + 1;\n                    goto LAB_08006628;\n                  }\n                  iVar4 \u003d 1;\n                }\n                iVar6 \u003d iVar4 * 8;\n                uVar7 \u003d (\u0026bp)[iVar4 * 2];\n                uVar20 \u003d (\u0026DAT_080073c4)[iVar4 * 2];\n                uVar13 \u003d __subdf3();\n                uVar11 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                uVar14 \u003d __aeabi_dadd((int)uVar18,uVar8,uVar7,uVar20);\n                uVar14 \u003d __divdf3(0,0x3ff00000,(int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar12 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar15 \u003d __muldf3((int)uVar13,uVar11,(int)uVar14,uVar12);\n                uVar2 \u003d (undefined4)((ulonglong)uVar15 \u003e\u003e 0x20);\n                uVar9 \u003d (undefined4)uVar15;\n                uVar15 \u003d __muldf3(0,uVar2);\n                uVar13 \u003d __subdf3((int)uVar13,uVar11,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar15 \u003d __subdf3(0,((int)uVar8 \u003e\u003e 1 | 0x20000000U) + 0x80000 + iVar4 * 0x40000,\n                                  uVar7,uVar20);\n                uVar15 \u003d __subdf3((int)uVar18,uVar8,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar15 \u003d __muldf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),0,uVar2);\n                uVar13 \u003d __subdf3((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),(int)uVar15,\n                                  (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar13 \u003d __muldf3((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),(int)uVar14,uVar12);\n                uVar12 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                uVar14 \u003d __muldf3(uVar9,uVar2);\n                uVar7 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar11 \u003d (undefined4)uVar14;\n                uVar14 \u003d __muldf3(uVar11,uVar7,0x4a454eef,0x3fca7e28);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar11,uVar7);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xa91d4101,\n                                      0x3fd17460);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar11,uVar7);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0x518f264d,\n                                      0x3fd55555);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar11,uVar7);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar11,uVar7);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0x33333303,\n                                      0x3fe33333);\n                uVar15 \u003d __muldf3(uVar11,uVar7,uVar11,uVar7);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar15,\n                                  (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar15 \u003d __aeabi_dadd(uVar9,uVar2,0,uVar2);\n                uVar15 \u003d __muldf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),(int)uVar13,uVar12);\n                uVar14 \u003d __aeabi_dadd((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar11 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar15 \u003d __muldf3(0,uVar2,0,uVar2);\n                uVar7 \u003d (undefined4)((ulonglong)uVar15 \u003e\u003e 0x20);\n                uVar16 \u003d __aeabi_dadd((int)uVar15,uVar7,0,0x40080000);\n                __aeabi_dadd((int)uVar16,(int)((ulonglong)uVar16 \u003e\u003e 0x20),(int)uVar14,uVar11);\n                uVar16 \u003d __muldf3(0,uVar2,0,extraout_r1_01);\n                uVar20 \u003d (undefined4)((ulonglong)uVar16 \u003e\u003e 0x20);\n                uVar19 \u003d __subdf3(0,extraout_r1_01,0,0x40080000);\n                uVar15 \u003d __subdf3((int)uVar19,(int)((ulonglong)uVar19 \u003e\u003e 0x20),(int)uVar15,uVar7);\n                uVar14 \u003d __subdf3((int)uVar14,uVar11,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar9,uVar2);\n                uVar13 \u003d __muldf3((int)uVar13,uVar12,0,extraout_r1_01);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar13,\n                                      (int)((ulonglong)uVar13 \u003e\u003e 0x20));\n                uVar9 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                __aeabi_dadd((int)uVar16,uVar20,(int)uVar14,uVar9);\n                uVar13 \u003d __muldf3(0,extraout_r1_02,0xe0000000,0x3feec709);\n                uVar15 \u003d __subdf3(0,extraout_r1_02,(int)uVar16,uVar20);\n                uVar14 \u003d __subdf3((int)uVar14,uVar9,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xdc3a03fd,0x3feec709\n                                 );\n                uVar15 \u003d __muldf3(0,extraout_r1_02,0x145b01f5,0xbe3e2fe0);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),\n                                      *(undefined4 *)(\u0026dp_l + iVar6),\n                                      *(undefined4 *)(\u0026DAT_080073e4 + iVar6));\n                uVar15 \u003d __aeabi_i2d(local_54);\n                uVar9 \u003d (undefined4)((ulonglong)uVar15 \u003e\u003e 0x20);\n                uVar11 \u003d *(undefined4 *)(\u0026dp_h + iVar6);\n                uVar12 \u003d *(undefined4 *)(\u0026DAT_080073d4 + iVar6);\n                uVar16 \u003d __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),(int)uVar14,\n                                      (int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar16 \u003d __aeabi_dadd((int)uVar16,(int)((ulonglong)uVar16 \u003e\u003e 0x20),uVar11,uVar12);\n                __aeabi_dadd((int)uVar16,(int)((ulonglong)uVar16 \u003e\u003e 0x20),(int)uVar15,uVar9);\n                uVar15 \u003d __subdf3(0,extraout_r1_03,(int)uVar15,uVar9);\n                lVar17 \u003d __subdf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),uVar11,uVar12);\n                uVar10 \u003d extraout_r1_03;\n              }\n              else {\n                if (0x43f00000 \u003c uVar10) {\n                  if (0x3fefffff \u003c uVar8) {\nLAB_08006418:\n                    if ((int)param_4 \u003c 1) {\n                      return;\n                    }\n                    goto LAB_0800634a;\n                  }\nLAB_080063fa:\n                  if (-1 \u003c (int)param_4) {\n                    return;\n                  }\n                  goto LAB_0800634a;\n                }\n                if (uVar8 \u003c 0x3fefffff) goto LAB_080063fa;\n                if (0x3ff00000 \u003c uVar8) goto LAB_08006418;\n                uVar13 \u003d __subdf3();\n                uVar11 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                uVar9 \u003d (undefined4)uVar13;\n                uVar13 \u003d __muldf3(uVar9,uVar11,0x60000000,0x3ff71547);\n                uVar14 \u003d __muldf3(uVar9,uVar11,0xf85ddf44,0x3e54ae0b);\n                uVar15 \u003d __muldf3(uVar9,uVar11,0,0x3fd00000);\n                uVar15 \u003d __subdf3(0x55555555,0x3fd55555,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20)\n                                 );\n                uVar15 \u003d __muldf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),uVar9,uVar11);\n                uVar15 \u003d __subdf3(0,0x3fe00000,(int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar16 \u003d __muldf3(uVar9,uVar11,uVar9,uVar11);\n                uVar15 \u003d __muldf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),(int)uVar16,\n                                  (int)((ulonglong)uVar16 \u003e\u003e 0x20));\n                uVar15 \u003d __muldf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),0x652b82fe,0x3ff71547\n                                 );\n                uVar14 \u003d __subdf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar15,\n                                  (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                __aeabi_dadd((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),(int)uVar14,\n                             (int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                lVar17 \u003d (ulonglong)extraout_r1_00 \u003c\u003c 0x20;\n                uVar10 \u003d extraout_r1_00;\n              }\n              uVar13 \u003d __subdf3((int)lVar17,(int)((ulonglong)lVar17 \u003e\u003e 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 \u003e\u003e 0x20));\n              uVar13 \u003d __subdf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar13,\n                                (int)((ulonglong)uVar13 \u003e\u003e 0x20));\n              if ((uVar1 - 1 | uVar5) \u003d\u003d 0) {\n                uVar9 \u003d 0xbff00000;\n              }\n              else {\n                uVar9 \u003d 0x3ff00000;\n              }\n              uVar20 \u003d 0;\n              uVar14 \u003d __subdf3(param_3,param_4,0,param_4);\n              uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0,uVar10);\n              uVar13 \u003d __muldf3((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),param_3,param_4);\n              uVar13 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar13,\n                                    (int)((ulonglong)uVar13 \u003e\u003e 0x20));\n              uVar2 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n              uVar11 \u003d (undefined4)uVar13;\n              uVar13 \u003d __muldf3(0,uVar10,0,param_4);\n              uVar7 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n              uVar12 \u003d (undefined4)uVar13;\n              lVar17 \u003d __aeabi_dadd(uVar11,uVar2,uVar12,uVar7);\n              uVar8 \u003d (uint)((ulonglong)lVar17 \u003e\u003e 0x20);\n              uVar10 \u003d (uint)lVar17;\n              if (0x408fffffffffffff \u003c lVar17) {\n                if ((uVar8 + 0xbf700000 | uVar10) \u003d\u003d 0) {\n                  uVar14 \u003d __aeabi_dadd(uVar11,uVar2,0x652b82fe,0x3c971547);\n                  uVar15 \u003d __subdf3(uVar10,uVar8,uVar12,uVar7);\n                  iVar4 \u003d __aeabi_dcmpgt((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar15,\n                                         (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                  if (iVar4 \u003d\u003d 0) goto LAB_08006968;\n                }\n                __muldf3(uVar20,uVar9,0x8800759c,0x7e37e43c);\n                goto LAB_0800634a;\n              }\n              if ((uVar8 \u0026 0x7fffffff) \u003c 0x4090cc00) {\nLAB_08006968:\n                if ((uVar8 \u0026 0x7fffffff) \u003c 0x3fe00001) {\n                  iVar4 \u003d 0;\n                }\n                else {\n                  uVar8 \u003d (0x100000 \u003e\u003e (((int)(uVar8 \u0026 0x7fffffff) \u003e\u003e 0x14) - 0x3feU \u0026 0xff)) +\n                          uVar8;\n                  uVar10 \u003d (uVar8 * 2 \u003e\u003e 0x15) - 0x3ff;\n                  iVar4 \u003d (int)(uVar8 \u0026 0xfffff | 0x100000) \u003e\u003e (0x14 - uVar10 \u0026 0xff);\n                  if (lVar17 \u003c 0) {\n                    iVar4 \u003d -iVar4;\n                  }\n                  uVar13 \u003d __subdf3(uVar12,uVar7,0,uVar8 \u0026 ~(0xfffff \u003e\u003e (uVar10 \u0026 0xff)));\n                }\n                local_64 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                local_68 \u003d (undefined4)uVar13;\n                __aeabi_dadd(local_68,local_64,uVar11,uVar2);\n                uVar13 \u003d __muldf3(0,extraout_r1_04,0,0x3fe62e43);\n                uVar12 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                uVar14 \u003d __subdf3(0,extraout_r1_04,local_68,local_64);\n                uVar14 \u003d __subdf3(uVar11,uVar2,(int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xfefa39ef,0x3fe62e42\n                                 );\n                uVar15 \u003d __muldf3(0,extraout_r1_04,0xca86c39,0xbe205c61);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar15,\n                                      (int)((ulonglong)uVar15 \u003e\u003e 0x20));\n                uVar2 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar15 \u003d __aeabi_dadd((int)uVar13,uVar12,(int)uVar14,uVar2);\n                uVar7 \u003d (undefined4)((ulonglong)uVar15 \u003e\u003e 0x20);\n                uVar11 \u003d (undefined4)uVar15;\n                uVar13 \u003d __subdf3(uVar11,uVar7,(int)uVar13,uVar12);\n                uVar13 \u003d __subdf3((int)uVar14,uVar2,(int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20));\n                uVar2 \u003d (undefined4)((ulonglong)uVar13 \u003e\u003e 0x20);\n                uVar14 \u003d __muldf3(uVar11,uVar7,uVar11,uVar7);\n                uVar3 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar12 \u003d (undefined4)uVar14;\n                uVar14 \u003d __muldf3(uVar12,uVar3,0x72bea4d0,0x3e663769);\n                uVar14 \u003d __subdf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xc5d26bf1,0x3ebbbd41\n                                 );\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar12,uVar3);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar12,uVar3);\n                uVar14 \u003d __subdf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0x16bebd93,0x3f66c16c\n                                 );\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar12,uVar3);\n                uVar14 \u003d __aeabi_dadd((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),0x5555553e,\n                                      0x3fc55555);\n                uVar14 \u003d __muldf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),uVar12,uVar3);\n                uVar14 \u003d __subdf3(uVar11,uVar7,(int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar12 \u003d (undefined4)((ulonglong)uVar14 \u003e\u003e 0x20);\n                uVar15 \u003d __muldf3(uVar11,uVar7,(int)uVar14,uVar12);\n                uVar14 \u003d __subdf3((int)uVar14,uVar12,0,0x40000000);\n                uVar14 \u003d __divdf3((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),(int)uVar14,\n                                  (int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                uVar15 \u003d __muldf3(uVar11,uVar7,(int)uVar13,uVar2);\n                uVar13 \u003d __aeabi_dadd((int)uVar15,(int)((ulonglong)uVar15 \u003e\u003e 0x20),(int)uVar13,uVar2\n                                     );\n                uVar13 \u003d __subdf3((int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20),(int)uVar13,\n                                  (int)((ulonglong)uVar13 \u003e\u003e 0x20));\n                uVar13 \u003d __subdf3((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),uVar11,uVar7);\n                uVar13 \u003d __subdf3(0,0x3ff00000,(int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20));\n                if ((int)((ulonglong)uVar13 \u003e\u003e 0x20) + iVar4 * 0x100000 \u003c 0x100000) {\n                  scalbn((double)CONCAT44(uVar9,uVar20),(int)uVar13);\n                }\n              }\n              else {\n                if ((uVar8 + 0x3f6f3400 | uVar10) \u003d\u003d 0) {\n                  uVar14 \u003d __subdf3(uVar10,uVar8,uVar12,uVar7);\n                  iVar4 \u003d __aeabi_dcmple(uVar11,uVar2,(int)uVar14,(int)((ulonglong)uVar14 \u003e\u003e 0x20));\n                  if (iVar4 \u003d\u003d 0) goto LAB_08006968;\n                }\n                __muldf3(uVar20,uVar9,0xc2f8f359,0x1a56e1f);\n              }\nLAB_0800634a:\n              __muldf3();\n              return;\n            }\n          }\n          uVar13 \u003d __subdf3();\n          uVar14 \u003d uVar13;\nLAB_08006320:\n          __divdf3((int)uVar13,(int)((ulonglong)uVar13 \u003e\u003e 0x20),(int)uVar14,\n                   (int)((ulonglong)uVar14 \u003e\u003e 0x20));\n          return;\n        }\n      }\n    }\n    else if (uVar10 \u003c 0x7ff00001) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | param_1) \u003d\u003d 0) {\n    return;\n  }\nLAB_08006278:\n  nan(\"\");\n  return;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow"
      ],
      "called": [
        "__aeabi_i2d",
        "scalbn",
        "fabs",
        "__aeabi_dadd",
        "__aeabi_dcmpgt",
        "__ieee754_sqrt",
        "__muldf3",
        "__aeabi_dcmple",
        "nan",
        "__subdf3",
        "__divdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08006c0c": {
      "entrypoint": "0x08006c0c",
      "current_name": "FUN_08006c0c",
      "code": "\nundefined8 FUN_08006c0c(uint param_1,uint param_2)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  int iVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  uint uVar11;\n  undefined8 uVar12;\n  \n  if ((~param_2 \u0026 0x7ff00000) \u003d\u003d 0) {\n    uVar12 \u003d __muldf3(param_1,param_2,param_1,param_2);\n    uVar12 \u003d __aeabi_dadd(param_1,param_2,(int)uVar12,(int)((ulonglong)uVar12 \u003e\u003e 0x20));\n    return uVar12;\n  }\n  if ((int)param_2 \u003c 1) {\n    if ((param_2 \u0026 0x7fffffff | param_1) \u003d\u003d 0) {\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 !\u003d 0) {\n      uVar12 \u003d __subdf3(param_1,param_2,param_1,param_2);\n      uVar1 \u003d (undefined4)((ulonglong)uVar12 \u003e\u003e 0x20);\n      uVar12 \u003d __divdf3((int)uVar12,uVar1,(int)uVar12,uVar1);\n      return uVar12;\n    }\n  }\n  iVar3 \u003d (int)param_2 \u003e\u003e 0x14;\n  if (iVar3 \u003d\u003d 0) {\n    while (param_2 \u003d\u003d 0) {\n      iVar3 \u003d iVar3 + -0x15;\n      param_2 \u003d param_1 \u003e\u003e 0xb;\n      param_1 \u003d param_1 \u003c\u003c 0x15;\n    }\n    uVar2 \u003d 0;\n    for (; -1 \u003c (int)(param_2 \u003c\u003c 0xb); param_2 \u003d param_2 \u003c\u003c 1) {\n      uVar2 \u003d uVar2 + 1;\n    }\n    iVar3 \u003d iVar3 - (uVar2 - 1);\n    param_2 \u003d param_2 | param_1 \u003e\u003e (0x20 - uVar2 \u0026 0xff);\n    param_1 \u003d param_1 \u003c\u003c (uVar2 \u0026 0xff);\n  }\n  iVar7 \u003d 0;\n  uVar2 \u003d param_2 \u0026 0xfffff | 0x100000;\n  if ((iVar3 + -0x3ff) * -0x80000000 \u003c 0) {\n    uVar2 \u003d uVar2 * 2 - ((int)param_1 \u003e\u003e 0x1f);\n    param_1 \u003d param_1 \u003c\u003c 1;\n  }\n  uVar2 \u003d uVar2 * 2 - ((int)param_1 \u003e\u003e 0x1f);\n  iVar4 \u003d 0x16;\n  uVar5 \u003d 0;\n  uVar8 \u003d 0x200000;\n  param_1 \u003d param_1 \u003c\u003c 1;\n  do {\n    iVar10 \u003d uVar5 + uVar8;\n    if (iVar10 \u003c\u003d (int)uVar2) {\n      uVar2 \u003d uVar2 - iVar10;\n      uVar5 \u003d iVar10 + uVar8;\n      iVar7 \u003d iVar7 + uVar8;\n    }\n    iVar4 \u003d iVar4 + -1;\n    uVar2 \u003d uVar2 * 2 - ((int)param_1 \u003e\u003e 0x1f);\n    uVar8 \u003d uVar8 \u003e\u003e 1;\n    param_1 \u003d param_1 \u003c\u003c 1;\n  } while (iVar4 !\u003d 0);\n  iVar10 \u003d 0x20;\n  uVar9 \u003d 0x80000000;\n  uVar8 \u003d 0;\n  iVar4 \u003d 0;\n  do {\n    uVar11 \u003d uVar9 + iVar4;\n    uVar6 \u003d uVar5;\n    if (((int)uVar5 \u003c (int)uVar2) || ((uVar2 \u003d\u003d uVar5 \u0026\u0026 (uVar11 \u003c\u003d param_1)))) {\n      iVar4 \u003d uVar11 + uVar9;\n      if (((int)uVar11 \u003c 0) \u0026\u0026 (-1 \u003c iVar4)) {\n        uVar6 \u003d uVar5 + 1;\n      }\n      uVar2 \u003d uVar2 - uVar5;\n      if (param_1 \u003c uVar11) {\n        uVar2 \u003d uVar2 - 1;\n      }\n      param_1 \u003d param_1 - uVar11;\n      uVar8 \u003d uVar8 + uVar9;\n    }\n    uVar2 \u003d uVar2 * 2 - ((int)param_1 \u003e\u003e 0x1f);\n    iVar10 \u003d iVar10 + -1;\n    param_1 \u003d param_1 \u003c\u003c 1;\n    uVar9 \u003d uVar9 \u003e\u003e 1;\n    uVar5 \u003d uVar6;\n  } while (iVar10 !\u003d 0);\n  if ((param_1 | uVar2) !\u003d 0) {\n    if (uVar8 \u003d\u003d 0xffffffff) {\n      iVar7 \u003d iVar7 + 1;\n      uVar8 \u003d 0;\n    }\n    else {\n      uVar8 \u003d uVar8 + 1 \u0026 0xfffffffe;\n    }\n  }\n  uVar8 \u003d uVar8 \u003e\u003e 1;\n  if (iVar7 \u003c\u003c 0x1f \u003c 0) {\n    uVar8 \u003d uVar8 | 0x80000000;\n  }\n  return CONCAT44((iVar7 \u003e\u003e 1) + 0x3fe00000 + (iVar3 + -0x3ff \u003e\u003e 1) * 0x100000,uVar8);\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_asin",
        "sqrt",
        "__ieee754_pow"
      ],
      "called": [
        "__aeabi_dadd",
        "__muldf3",
        "__subdf3",
        "__divdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08006d68": {
      "entrypoint": "0x08006d68",
      "current_name": "FUN_08006d68",
      "code": "\ndouble FUN_08006d68(double __x)\n\n{\n  int in_r0;\n  int iVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint in_r1;\n  undefined4 extraout_r1;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 in_r3;\n  undefined4 unaff_r4;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  uint uVar8;\n  double in_d0;\n  double extraout_d0;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  \n  uVar10 \u003d CONCAT44(in_r1,in_r0);\n  uVar8 \u003d in_r1 \u0026 0x7fffffff;\n  if (uVar8 \u003c 0x44100000) {\n    if (uVar8 \u003c 0x3fdc0000) {\n      if (uVar8 \u003c 0x3e200000) {\n        uVar9 \u003d __aeabi_dadd(in_r0,in_r1,0x8800759c,0x7e37e43c);\n        iVar1 \u003d __aeabi_dcmpgt((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0,0x3ff00000);\n        if (iVar1 !\u003d 0) {\n          return extraout_d0;\n        }\n      }\n      iVar1 \u003d -1;\n    }\n    else {\n      fabs((double)CONCAT44(unaff_r4,in_r3));\n      if (uVar8 \u003c 0x3ff30000) {\n        if (uVar8 \u003c 0x3fe60000) {\n          uVar10 \u003d __aeabi_dadd();\n          uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0,0x3ff00000);\n          uVar9 \u003d __aeabi_dadd(in_r0,extraout_r1,0,0x40000000);\n          uVar10 \u003d __divdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),(int)uVar9,\n                            (int)((ulonglong)uVar9 \u003e\u003e 0x20));\n          iVar1 \u003d 0;\n        }\n        else {\n          uVar10 \u003d __subdf3();\n          uVar9 \u003d __aeabi_dadd(in_r0,extraout_r1,0,0x3ff00000);\n          uVar10 \u003d __divdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),(int)uVar9,\n                            (int)((ulonglong)uVar9 \u003e\u003e 0x20));\n          iVar1 \u003d 1;\n        }\n      }\n      else if (uVar8 \u003c 0x40038000) {\n        uVar10 \u003d __subdf3();\n        uVar9 \u003d __muldf3(in_r0,extraout_r1,0,0x3ff80000);\n        uVar9 \u003d __aeabi_dadd((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0,0x3ff00000);\n        uVar10 \u003d __divdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),(int)uVar9,\n                          (int)((ulonglong)uVar9 \u003e\u003e 0x20));\n        iVar1 \u003d 2;\n      }\n      else {\n        uVar10 \u003d __divdf3(0,0xbff00000,in_r0,extraout_r1);\n        iVar1 \u003d 3;\n      }\n    }\n    uVar7 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n    uVar6 \u003d (undefined4)uVar10;\n    uVar10 \u003d __muldf3(uVar6,uVar7,uVar6,uVar7);\n    uVar4 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n    uVar2 \u003d (undefined4)uVar10;\n    uVar10 \u003d __muldf3(uVar2,uVar4,uVar2,uVar4);\n    uVar5 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n    uVar3 \u003d (undefined4)uVar10;\n    uVar10 \u003d __muldf3(uVar3,uVar5,0xe322da11,0x3f90ad3a);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x24760deb,0x3fa97b4b);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0xa0d03d51,0x3fb10d66);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0xc54c206e,0x3fb745cd);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x920083ff,0x3fc24924);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar10 \u003d __aeabi_dadd((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),0x5555550d,0x3fd55555);\n    uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar2,uVar4);\n    uVar2 \u003d (undefined4)((ulonglong)uVar10 \u003e\u003e 0x20);\n    uVar9 \u003d __muldf3(uVar3,uVar5,0x2c6a6c2f,0xbfa2b444);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x52defd9a,0x3fadde2d);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0xaf749a6d,0x3fb3b0f2);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0xfe231671,0x3fbc71c6);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar9 \u003d __subdf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),0x9998ebc4,0x3fc99999);\n    uVar9 \u003d __muldf3((int)uVar9,(int)((ulonglong)uVar9 \u003e\u003e 0x20),uVar3,uVar5);\n    uVar3 \u003d (undefined4)((ulonglong)uVar9 \u003e\u003e 0x20);\n    if (iVar1 \u003d\u003d -1) {\n      uVar10 \u003d __aeabi_dadd((int)uVar10,uVar2,(int)uVar9,uVar3);\n      uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n      in_d0 \u003d (double)__subdf3(uVar6,uVar7,(int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20));\n    }\n    else {\n      uVar10 \u003d __aeabi_dadd((int)uVar10,uVar2,(int)uVar9,uVar3);\n      uVar10 \u003d __muldf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n      iVar1 \u003d iVar1 * 8;\n      uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),\n                        *(undefined4 *)(\u0026atanlo + iVar1),*(undefined4 *)(\u0026UNK_08007414 + iVar1));\n      uVar10 \u003d __subdf3((int)uVar10,(int)((ulonglong)uVar10 \u003e\u003e 0x20),uVar6,uVar7);\n      in_d0 \u003d (double)__subdf3(*(undefined4 *)(\u0026atanhi + iVar1),\n                               *(undefined4 *)(\u0026UNK_080073f4 + iVar1),(int)uVar10,\n                               (int)((ulonglong)uVar10 \u003e\u003e 0x20));\n    }\n  }\n  else if ((0x7ff00000 \u003c uVar8) || ((uVar8 \u003d\u003d 0x7ff00000 \u0026\u0026 (in_r0 !\u003d 0)))) {\n    in_d0 \u003d (double)__aeabi_dadd();\n  }\n  return in_d0;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_atan2"
      ],
      "called": [
        "fabs",
        "__aeabi_dadd",
        "__aeabi_dcmpgt",
        "__muldf3",
        "__divdf3",
        "__subdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800708c": {
      "entrypoint": "0x0800708c",
      "current_name": "FUN_0800708c",
      "code": "\ndouble FUN_0800708c(double __x)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_atan2",
        "atan",
        "__ieee754_asin",
        "__ieee754_pow",
        "asin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_08007092": {
      "entrypoint": "0x08007092",
      "current_name": "FUN_08007092",
      "code": "\nint FUN_08007092(double __value)\n\n{\n  uint in_r1;\n  \n  return (in_r1 | 0x80000000) + 0x100000 \u003e\u003e 0x1f;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800709e": {
      "entrypoint": "0x0800709e",
      "current_name": "FUN_0800709e",
      "code": "\nint FUN_0800709e(exception *__exc)\n\n{\n  return 0;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "sqrt",
        "asin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080070a4": {
      "entrypoint": "0x080070a4",
      "current_name": "FUN_080070a4",
      "code": "\ndouble FUN_080070a4(char *__tagb)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_pow",
        "asin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080070b0": {
      "entrypoint": "0x080070b0",
      "current_name": "FUN_080070b0",
      "code": "\ndouble FUN_080070b0(double __x)\n\n{\n  int iVar1;\n  uint in_r0;\n  uint in_r1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  double in_d0;\n  double dVar6;\n  undefined8 uVar7;\n  \n  uVar5 \u003d (in_r1 \u003c\u003c 1) \u003e\u003e 0x15;\n  uVar4 \u003d uVar5 - 0x3ff;\n  iVar1 \u003d (int)in_r1 \u003e\u003e 0x1f;\n  if ((int)uVar4 \u003c 0x14) {\n    if ((int)uVar4 \u003c 0) {\n      if ((in_r1 \u0026 0x7fffffff | in_r0) \u003d\u003d 0) {\n        return in_d0;\n      }\n      uVar4 \u003d in_r1 \u0026 0xfffff | in_r0;\n      iVar1 \u003d iVar1 * -8;\n      uVar2 \u003d *(undefined4 *)(\u0026TWO52 + iVar1);\n      uVar3 \u003d *(undefined4 *)(\u0026DAT_08007434 + iVar1);\n      uVar7 \u003d __aeabi_dadd(in_r0,(-uVar4 | uVar4) \u003e\u003e 0xc \u0026 0x80000 | in_r1 \u0026 0xfffe0000,uVar2,uVar3)\n      ;\n      dVar6 \u003d (double)__subdf3((int)uVar7,(int)((ulonglong)uVar7 \u003e\u003e 0x20),uVar2,uVar3);\n      return dVar6;\n    }\n    uVar5 \u003d 0xfffff \u003e\u003e (uVar4 \u0026 0xff);\n    if ((in_r1 \u0026 uVar5 | in_r0) \u003d\u003d 0) {\n      return in_d0;\n    }\n    uVar5 \u003d uVar5 \u003e\u003e 1;\n    in_r0 \u003d in_r1 \u0026 uVar5 | in_r0;\n    if (in_r0 !\u003d 0) {\n      if (uVar4 \u003d\u003d 0x13) {\n        in_r0 \u003d 0x80000000;\n      }\n      else {\n        in_r0 \u003d 0;\n      }\n      in_r1 \u003d 0x40000 \u003e\u003e (uVar4 \u0026 0xff) | in_r1 \u0026 ~uVar5;\n    }\n  }\n  else {\n    if (0x33 \u003c (int)uVar4) {\n      if (uVar4 !\u003d 0x400) {\n        return in_d0;\n      }\n      dVar6 \u003d (double)__aeabi_dadd();\n      return dVar6;\n    }\n    uVar5 \u003d uVar5 - 0x413;\n    uVar4 \u003d 0xffffffff \u003e\u003e (uVar5 \u0026 0xff);\n    if ((in_r0 \u0026 uVar4) \u003d\u003d 0) {\n      return in_d0;\n    }\n    uVar4 \u003d uVar4 \u003e\u003e 1;\n    if ((in_r0 \u0026 uVar4) !\u003d 0) {\n      in_r0 \u003d 0x40000000 \u003e\u003e (uVar5 \u0026 0xff) | in_r0 \u0026 ~uVar4;\n    }\n  }\n  iVar1 \u003d iVar1 * -8;\n  uVar2 \u003d *(undefined4 *)(\u0026TWO52 + iVar1);\n  uVar3 \u003d *(undefined4 *)(\u0026DAT_08007434 + iVar1);\n  uVar7 \u003d __aeabi_dadd(in_r0,in_r1,uVar2,uVar3);\n  dVar6 \u003d (double)__subdf3((int)uVar7,(int)((ulonglong)uVar7 \u003e\u003e 0x20),uVar2,uVar3);\n  return dVar6;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow"
      ],
      "called": [
        "__aeabi_dadd",
        "__subdf3"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080071c0": {
      "entrypoint": "0x080071c0",
      "current_name": "FUN_080071c0",
      "code": "\ndouble FUN_080071c0(double __x,int __n)\n\n{\n  uint in_r1;\n  int extraout_r1;\n  int in_r2;\n  uint uVar1;\n  int iVar2;\n  undefined4 in_r3;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 unaff_r6;\n  double in_d0;\n  double dVar3;\n  \n  uVar1 \u003d (in_r1 \u003c\u003c 1) \u003e\u003e 0x15;\n  if (uVar1 \u003d\u003d 0) {\n    if ((in_r1 \u0026 0x7fffffff | __n) \u003d\u003d 0) {\n      return in_d0;\n    }\n    in_d0 \u003d (double)__muldf3(__n,in_r1,0,0x43500000);\n    if (in_r2 \u003c -50000) goto LAB_0800722e;\n    uVar1 \u003d ((uint)(extraout_r1 \u003c\u003c 1) \u003e\u003e 0x15) - 0x36;\n  }\n  else if (uVar1 \u003d\u003d 0x7ff) {\n    dVar3 \u003d (double)__aeabi_dadd(__n,in_r1,__n);\n    return dVar3;\n  }\n  iVar2 \u003d uVar1 + in_r2;\n  if (iVar2 \u003c 0x7ff) {\n    if (0 \u003c iVar2) {\n      return in_d0;\n    }\n    if (iVar2 + 0x35 \u003c 0 \u003d\u003d SCARRY4(iVar2,0x35)) goto LAB_0800722e;\n    if (in_r2 \u003c 0xc351) {\n      copysign((double)CONCAT44(unaff_r4,in_r3),(double)CONCAT44(unaff_r6,unaff_r5));\n      goto LAB_0800722e;\n    }\n  }\n  copysign((double)CONCAT44(unaff_r4,in_r3),(double)CONCAT44(unaff_r6,unaff_r5));\nLAB_0800722e:\n  dVar3 \u003d (double)__muldf3();\n  return dVar3;\n}\n\n",
      "renaming": {},
      "calling": [
        "__ieee754_pow"
      ],
      "called": [
        "__aeabi_dadd",
        "__muldf3",
        "copysign"
      ],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_0800729c": {
      "entrypoint": "0x0800729c",
      "current_name": "FUN_0800729c",
      "code": "\ndouble FUN_0800729c(double __x,double __y)\n\n{\n  double in_d0;\n  \n  return in_d0;\n}\n\n",
      "renaming": {},
      "calling": [
        "scalbn"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080072ac": {
      "entrypoint": "0x080072ac",
      "current_name": "FUN_080072ac",
      "code": "\nundefined4 FUN_080072ac(void)\n\n{\n  return _impure_ptr;\n}\n\n",
      "renaming": {},
      "calling": [
        "pow",
        "sqrt",
        "asin"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080072b8": {
      "entrypoint": "0x080072b8",
      "current_name": "FUN_080072b8",
      "code": "\nvoid * FUN_080072b8(intptr_t __delta)\n\n{\n  undefined *puVar1;\n  \n  if (heap_end_4116 \u003d\u003d (undefined *)0x0) {\n    heap_end_4116 \u003d \u0026_ebss;\n  }\n  puVar1 \u003d heap_end_4116;\n  heap_end_4116 \u003d heap_end_4116 + __delta;\n  return puVar1;\n}\n\n",
      "renaming": {},
      "calling": [
        "_sbrk_r"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080072d4": {
      "entrypoint": "0x080072d4",
      "current_name": "FUN_080072d4",
      "code": "\nint FUN_080072d4(EVP_PKEY_CTX *ctx)\n\n{\n  return (int)ctx;\n}\n\n",
      "renaming": {},
      "calling": [
        "__libc_init_array",
        "__do_global_dtors_aux",
        "frame_dummy"
      ],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    },
    "FUN_080072e0": {
      "entrypoint": "0x080072e0",
      "current_name": "FUN_080072e0",
      "code": "\nvoid FUN_080072e0(void)\n\n{\n  return;\n}\n\n",
      "renaming": {},
      "calling": [],
      "called": [],
      "improved": false,
      "skipped": false,
      "imported": false,
      "tags": []
    }
  },
  "layers": [],
  "locked_functions": [],
  "used_tokens": 0
}