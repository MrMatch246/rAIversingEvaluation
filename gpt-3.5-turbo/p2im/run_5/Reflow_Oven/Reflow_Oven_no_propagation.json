{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_pos;\n  \n  current_pos = string;\n  do {\n    next_char = current_pos + 1;\n    current_char = *current_pos;\n    current_pos = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_pos"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "reverse_numbers_08000190",
            "code": "\nulonglong reverseNumbers_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (temp9 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!flag2) {\n    flag2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      flag2 = (temp11 | temp9 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp9 == temp6;\n      }\n      if (!flag2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  flag2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (flag2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    flag2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)flag2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)flag2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    flag2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!flag2 - temp6;\n    temp11 = -(uint)(flag2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      flag2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)flag2) | input2,\n                    temp6 + flag2);\n  }\n  flag1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  flag2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)flag1;\n  temp11 = temp11 * 2 + (uint)(flag2 || CARRY4(temp10,(uint)flag1));\n  temp10 = temp9 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_080002a0;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  flag3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  flag2 = (int)temp6 < 0;\n  flag1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    flag3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    flag2 = temp8 < 0;\n    flag1 = temp8 == 0;\n    temp6 = temp11;\n    if (!flag1 && flag2 == flag3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "reverse_numbers_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_difference_08000194",
            "code": "\nulonglong calculate_difference_08000194(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shifted_input_2;\n  byte carry_flag;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  int shifted_input_4;\n  uint shifted_input_2;\n  uint shifted_input_4;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  bool is_equal;\n  bool condition_1;\n  bool condition_2;\n  \n  shifted_input_2 = input_2 << 1;\n  temp_4 = input_4 << 1;\n  is_equal = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  condition_1 = is_equal && input_1 == input_3;\n  if (!is_equal || input_1 != input_3) {\n    condition_1 = (shifted_input_2 | input_1) == 0;\n  }\n  if (!condition_1) {\n    condition_1 = (temp_4 | input_3) == 0;\n  }\n  shifted_input_4 = (int)shifted_input_2 >> 0x15;\n  if (!condition_1) {\n    condition_1 = shifted_input_4 == -1;\n  }\n  shifted_input_2 = (int)temp_4 >> 0x15;\n  if (!condition_1) {\n    condition_1 = shifted_input_2 == -1;\n  }\n  if (condition_1) {\n    if (shifted_input_4 == -1 || shifted_input_2 == -1) {\n      temp_4 = input_4;\n      shifted_input_2 = input_3;\n      if (shifted_input_4 == -1) {\n        temp_4 = input_2;\n        shifted_input_2 = input_1;\n      }\n      if (shifted_input_4 != -1 || shifted_input_2 != -1) {\n        input_3 = shifted_input_2;\n        input_4 = temp_4;\n      }\n      condition_1 = (shifted_input_2 | temp_4 << 0xc) == 0;\n      if (condition_1) {\n        condition_1 = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (condition_1) {\n        condition_1 = temp_4 == input_4;\n      }\n      if (!condition_1) {\n        temp_4 = temp_4 | 0x80000;\n      }\n      return CONCAT44(temp_4,shifted_input_2);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((shifted_input_2 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (shifted_input_2 >> 0x15 == 0) {\n      condition_1 = (input_1 & 0x80000000) != 0;\n      temp_4 = input_2 * 2 + (uint)condition_1;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)condition_1)) {\n        temp_4 = temp_4 | 0x80000000;\n      }\n      return CONCAT44(temp_4,input_1 << 1);\n    }\n    if (shifted_input_2 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input_2 = shifted_input_2 >> 0x15;\n  temp_4 = temp_4 >> 0x15;\n  temp_5 = temp_4 - shifted_input_2;\n  condition_1 = temp_5 != 0;\n  if (temp_4 < shifted_input_2) {\n    temp_5 = -temp_5;\n  }\n  shifted_input_4 = input_1;\n  temp_3 = input_2;\n  if (condition_1 && shifted_input_2 <= temp_4) {\n    shifted_input_2 = shifted_input_2 + temp_5;\n    shifted_input_4 = input_3;\n    temp_3 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < temp_5) {\n    return CONCAT44(temp_3,shifted_input_4);\n  }\n  temp_4 = temp_3 & 0xfffff | 0x100000;\n  if ((temp_3 & 0x80000000) != 0) {\n    condition_1 = shifted_input_4 != 0;\n    shifted_input_4 = -shifted_input_4;\n    temp_4 = -temp_4 - (uint)condition_1;\n  }\n  temp_3 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    condition_1 = input_3 != 0;\n    input_3 = -input_3;\n    temp_3 = -temp_3 - (uint)condition_1;\n  }\n  if (shifted_input_2 == temp_5) {\n    temp_3 = temp_3 ^ 0x100000;\n    if (shifted_input_2 == 0) {\n      temp_4 = temp_4 ^ 0x100000;\n      shifted_input_2 = 1;\n    }\n    else {\n      temp_5 = temp_5 - 1;\n    }\n  }\n  temp_7 = -temp_5 + 0x20;\n  if ((int)temp_5 < 0x21) {\n    temp_6 = input_3 << (temp_7 & 0xff);\n    input_3 = input_3 >> (temp_5 & 0xff);\n    temp_1 = shifted_input_4 + input_3;\n    temp_2 = temp_3 << (temp_7 & 0xff);\n    temp_7 = temp_1 + temp_2;\n    temp_4 = temp_4 + CARRY4(shifted_input_4,input_3) + ((int)temp_3 >> (temp_5 & 0xff)) +\n            (uint)CARRY4(temp_1,temp_2);\n  }\n  else {\n    temp_6 = temp_3 << (-temp_5 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp_6 = temp_6 | 2;\n    }\n    temp_3 = (int)temp_3 >> (temp_5 - 0x20 & 0xff);\n    temp_7 = shifted_input_4 + temp_3;\n    temp_4 = temp_4 + ((int)temp_3 >> 0x1f) + (uint)CARRY4(shifted_input_4,temp_3);\n  }\n  input_2 = temp_4 & 0x80000000;\n  temp_5 = temp_4;\n  if ((int)temp_4 < 0) {\n    condition_1 = temp_6 == 0;\n    temp_6 = -temp_6;\n    temp_5 = -temp_7;\n    temp_7 = -(uint)!condition_1 - temp_7;\n    temp_5 = -(uint)(condition_1 <= temp_5) - temp_4;\n  }\n  if (0xfffff < temp_5) {\n    shifted_input_4 = shifted_input_2 - 1;\n    if (0x1fffff < temp_5) {\n      temp_4 = temp_5 & 1;\n      temp_5 = temp_5 >> 1;\n      carry_flag = (byte)temp_7;\n      temp_7 = (uint)(temp_4 != 0) << 0x1f | temp_7 >> 1;\n      temp_6 = (uint)(carry_flag & 1) << 0x1f | temp_6 >> 1;\n      shifted_input_4 = shifted_input_2;\n      if (0xffbfffff < shifted_input_2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition_1 = 0x7fffffff < temp_6;\n    if (temp_6 == 0x80000000) {\n      condition_1 = (temp_7 & 1) != 0;\n    }\n    return CONCAT44(temp_5 + shifted_input_4 * 0x100000 + (uint)CARRY4(temp_7,(uint)condition_1) | input_2,\n                    temp_7 + condition_1);\n  }\n  is_equal = (temp_6 & 0x80000000) != 0;\n  temp_6 = temp_6 << 1;\n  shifted_input_4 = temp_7 * 2;\n  condition_1 = CARRY4(temp_7,temp_7);\n  temp_7 = temp_7 * 2 + (uint)is_equal;\n  temp_5 = temp_5 * 2 + (uint)(condition_1 || CARRY4(shifted_input_4,(uint)is_equal));\n  shifted_input_4 = shifted_input_2 - 2;\n  if ((temp_5 & 0x100000) != 0) goto LAB_080002a0;\n  temp_3 = temp_7;\n  shifted_input_2 = temp_5;\n  if (temp_5 == 0) {\n    temp_3 = 0;\n    shifted_input_2 = temp_7;\n  }\n  shifted_input_4 = LZCOUNT(shifted_input_2);\n  if (temp_5 == 0) {\n    shifted_input_4 = shifted_input_4 + 0x20;\n  }\n  temp_7 = shifted_input_4 - 0xb;\n  condition_2 = SBORROW4(temp_7,0x20);\n  temp_5 = shifted_input_4 - 0x2b;\n  condition_1 = (int)temp_5 < 0;\n  is_equal = temp_5 == 0;\n  if ((int)temp_7 < 0x20) {\n    condition_2 = SCARRY4(temp_5,0xc);\n    shifted_input_4 = shifted_input_4 + -0x1f;\n    condition_1 = shifted_input_4 < 0;\n    is_equal = shifted_input_4 == 0;\n    temp_5 = temp_7;\n    if (!is_equal && condition_1 == condition_2) {\n      temp_3 = shifted_input_2 << (temp_7 & 0xff);\n      shifted_input_2 = shifted_input_2 >> (0xcU - shifted_input_4 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_equal || condition_1 != condition_2) {\n    temp_6 = 0x20 - temp_5;\n  }\n  shifted_input_2 = shifted_input_2 << (temp_5 & 0xff);\n  if (is_equal || condition_1 != condition_2) {\n    shifted_input_2 = shifted_input_2 | temp_3 >> (temp_6 & 0xff);\n  }\n  if (is_equal || condition_1 != condition_2) {\n    temp_3 = temp_3 << (temp_5 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_7 <= (int)shifted_input_4) {\n    return CONCAT44(shifted_input_2 + (shifted_input_4 - temp_7) * 0x100000 | input_2,temp_3);\n  }\n  temp_5 = ~(shifted_input_4 - temp_7);\n  if ((int)temp_5 < 0x1f) {\n    shifted_input_4 = temp_5 - 0x13;\n    if (shifted_input_4 != 0 && shifted_input_4 < 0 == SCARRY4(temp_5 - 0x1f,0xc)) {\n      return CONCAT44(temp_4,temp_3 >> (0x20 - (0xcU - shifted_input_4) & 0xff) | shifted_input_2 << (0xcU - shifted_input_4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_5 = temp_5 + 1;\n    return CONCAT44(input_2 | shifted_input_2 >> (temp_5 & 0xff),\n                    temp_3 >> (temp_5 & 0xff) | shifted_input_2 << (0x20 - temp_5 & 0xff));\n  }\n  return CONCAT44(temp_4,shifted_input_2 >> (temp_5 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_difference_08000194",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shifted_input_2",
                "bVar2": "carry_flag",
                "uVar3": "temp_1",
                "uVar4": "temp_2",
                "uVar5": "temp_3",
                "iVar6": "shifted_input_4",
                "uVar7": "shifted_input_2",
                "uVar8": "shifted_input_4",
                "uVar9": "temp_4",
                "uVar10": "temp_5",
                "uVar11": "temp_6",
                "uVar12": "temp_7",
                "bVar13": "is_equal",
                "bVar14": "condition_1",
                "bVar15": "condition_2"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_concat_bits_0800040c",
            "code": "\nulonglong shiftAndConcatBits_0800040c(uint input)\n\n{\n  uint upperBits;\n  uint shiftAmount;\n  int leadingZeros;\n  uint length;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  upperBits = 0;\n  leadingZeros = LZCOUNT(input);\n  length = leadingZeros + 0x15;\n  isCarry = SBORROW4(length,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (length < 0x20) {\n    isCarry = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = length;\n    if (!isZero && isCarry == false) {\n      upperBits = input << length;\n      input = input >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto calculateResult;\n    }\n  }\n  if (isZero || isNegative != isCarry) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZero || isNegative != isCarry) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != isCarry) {\n    upperBits = 0 << (shiftAmount & 0xff);\n  }\ncalculateResult:\n  if (length < 0x433) {\n    return CONCAT44(input + (0x432 - length) * 0x100000,upperBits);\n  }\n  shiftAmount = ~(0x432 - length);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    upperBits >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(upperBits >> (0x20 - (0xcU - leadingZeros) & 0xff) | input << (0xcU - leadingZeros & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_concat_bits_0800040c",
                "param_1": "input",
                "uVar1": "upperBits",
                "uVar2": "shiftAmount",
                "iVar3": "leadingZeros",
                "uVar4": "length",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isCarry",
                "LAB_08000318": "calculateResult"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "calculate_shifted_value_0800042c",
            "code": "\nulonglong calculateShiftedValue_0800042c(uint input)\n\n{\n  uint absoluteValue;\n  uint tempValue;\n  uint shiftAmount;\n  int leadingZeros;\n  uint adjustedShiftAmount;\n  uint signBit;\n  uint remainingBits;\n  bool negativeShift;\n  bool zeroShift;\n  bool carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  tempValue = input;\n  if ((int)signBit < 0) {\n    tempValue = -input;\n  }\n  absoluteValue = 0;\n  leadingZeros = LZCOUNT(tempValue);\n  adjustedShiftAmount = leadingZeros + 0x15;\n  carry = SBORROW4(adjustedShiftAmount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  negativeShift = (int)shiftAmount < 0;\n  zeroShift = shiftAmount == 0;\n  if (adjustedShiftAmount < 0x20) {\n    carry = SCARRY4(shiftAmount,0xc);\n    negativeShift = false;\n    zeroShift = leadingZeros + 1 == 0;\n    shiftAmount = adjustedShiftAmount;\n    if (!zeroShift && carry == false) {\n      absoluteValue = tempValue << adjustedShiftAmount;\n      tempValue = tempValue >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (zeroShift || negativeShift != carry) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  tempValue = tempValue << (shiftAmount & 0xff);\n  if (zeroShift || negativeShift != carry) {\n    tempValue = tempValue | 0U >> (remainingBits & 0xff);\n  }\n  if (zeroShift || negativeShift != carry) {\n    absoluteValue = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (adjustedShiftAmount < 0x433) {\n    return CONCAT44(tempValue + (0x432 - adjustedShiftAmount) * 0x100000 | signBit,absoluteValue);\n  }\n  shiftAmount = ~(0x432 - adjustedShiftAmount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,tempValue >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | tempValue >> (shiftAmount & 0xff),\n                    absoluteValue >> (shiftAmount & 0xff) | tempValue << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,absoluteValue >> (0x20 - (0xcU - leadingZeros) & 0xff) | tempValue << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "calculate_shifted_value_0800042c",
                "param_1": "input",
                "uVar1": "absoluteValue",
                "uVar2": "tempValue",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "adjustedShiftAmount",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "negativeShift",
                "bVar8": "zeroShift",
                "bVar9": "carry"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint unaff_r5;\n  uint temp5;\n  uint temp6;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong concatenatedInput;\n  \n  concatenatedInput = CONCAT44(input2,input1);\n  temp5 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    unaff_r5 = input4 >> 0x14 & 0x7ff;\n    flag1 = unaff_r5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = unaff_r5 == 0x7ff;\n  }\n  if (flag1) {\n    concatenatedInput = FUN_080006d4();\n  }\n  temp1 = (uint)(concatenatedInput >> 0x20);\n  temp3 = temp2 + unaff_r5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp5 << 0x15);\n  input4 = input4 & ~(temp5 << 0x15);\n  flag1 = ((uint)concatenatedInput | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)concatenatedInput | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp5 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp5,temp4);\n      temp1 = temp5 - temp4;\n      flag1 = temp5 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp5 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (concatenatedInput & 0xffffffff) * (ulonglong)input3;\n    concatenatedInput = (concatenatedInput & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp6 = (uint)concatenatedInput;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (concatenatedInput >> 0x20);\n    temp5 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp6 = temp6 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp6 & 0x80000000) != 0;\n      temp6 = temp6 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp5,temp5) || CARRY4(temp5 * 2,(uint)flag1)),\n                       temp5 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp6 >> 0x15;\n    temp5 = temp6 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp5;\n      if (temp5 == 0x80000000) {\n        flag1 = (temp6 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp5 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp6 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp6 >> 0x1f);\n    if ((temp5 | temp6 << 1) == 0) {\n      temp4 = temp4 & ~(temp6 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp6 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp5 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "concatenatedInput"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculate_bitwise_operation_080006d4",
            "code": "\nulonglong calculate_bitwise_operation_080006d4(uint input_param_1,uint input_param_2,uint input_param_3,uint input_param_4)\n\n{\n  uint temp_var_1;\n  uint temp_var_2;\n  uint temp_var_3;\n  uint temp_var_4;\n  uint temp_var_5;\n  bool flag_var;\n  \n  temp_var_3 = temp_var_5 & input_param_4 >> 0x14;\n  if (temp_var_2 != temp_var_5 && temp_var_3 != temp_var_5) {\n    flag_var = (input_param_1 | input_param_2 << 1) == 0;\n    if (!flag_var) {\n      flag_var = (input_param_3 | input_param_4 << 1) == 0;\n    }\n    if (flag_var) {\n      return (ulonglong)((input_param_2 ^ input_param_4) & 0x80000000) << 0x20;\n    }\n    if (temp_var_2 == 0) {\n      temp_var_4 = input_param_2 & 0x80000000;\n      do {\n        temp_var_1 = input_param_1 & 0x80000000;\n        input_param_1 = input_param_1 << 1;\n        input_param_2 = input_param_2 * 2 + (uint)(temp_var_1 != 0);\n      } while ((input_param_2 & 0x100000) == 0);\n      input_param_2 = input_param_2 | temp_var_4;\n      if (temp_var_3 != 0) {\n        return CONCAT44(input_param_2,input_param_1);\n      }\n    }\n    do {\n      temp_var_3 = input_param_3 & 0x80000000;\n      input_param_3 = input_param_3 << 1;\n      input_param_4 = input_param_4 * 2 + (uint)(temp_var_3 != 0);\n    } while ((input_param_4 & 0x100000) == 0);\n    return CONCAT44(input_param_2,input_param_1);\n  }\n  flag_var = (input_param_1 | input_param_2 << 1) == 0;\n  if (flag_var) {\n    input_param_2 = input_param_4;\n    input_param_1 = input_param_3;\n  }\n  if (!flag_var) {\n    flag_var = (input_param_3 | input_param_4 << 1) == 0;\n  }\n  temp_var_4 = input_param_2;\n  if (((!flag_var) && ((temp_var_2 != temp_var_5 || ((input_param_1 | input_param_2 << 0xc) == 0)))) &&\n     ((temp_var_3 != temp_var_5 || (input_param_1 = input_param_3, temp_var_4 = input_param_4, (input_param_3 | input_param_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_param_2 ^ input_param_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_var_4,input_param_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculate_bitwise_operation_080006d4",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "uVar1": "temp_var_1",
                "unaff_r4": "temp_var_2",
                "uVar2": "temp_var_3",
                "uVar3": "temp_var_4",
                "in_r12": "temp_var_5",
                "bVar4": "flag_var"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "perform_binary_operation_0800074c",
            "code": "\nulonglong performBinaryOperation_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint result;\n  int difference;\n  uint shiftAmount;\n  uint unaff_r5;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint maxValue;\n  bool isCondition1True;\n  bool isCondition2True;\n  bool isCondition3True;\n  undefined8 combinedInputs;\n  \n  combinedInputs = CONCAT44(input2,input1);\n  maxValue = 0x7ff;\n  result = input2 >> 0x14 & 0x7ff;\n  isCondition1True = result == 0;\n  if (!isCondition1True) {\n    unaff_r5 = input4 >> 0x14 & 0x7ff;\n    isCondition1True = unaff_r5 == 0;\n  }\n  if (!isCondition1True) {\n    isCondition1True = result == 0x7ff;\n  }\n  if (!isCondition1True) {\n    isCondition1True = unaff_r5 == 0x7ff;\n  }\n  if (isCondition1True) {\n    combinedInputs = FUN_080008ba();\n  }\n  shiftAmount = (uint)((ulonglong)combinedInputs >> 0x20);\n  temp11 = (uint)combinedInputs;\n  difference = result - unaff_r5;\n  if ((input3 | input4 << 0xc) == 0) {\n    result = (shiftAmount ^ input4) & 0x80000000 | shiftAmount & 0xfffff;\n    isCondition3True = SCARRY4(difference,maxValue >> 1);\n    shiftAmount = difference + (maxValue >> 1);\n    isCondition1True = (int)shiftAmount < 0;\n    isCondition2True = shiftAmount == 0;\n    if (!isCondition2True && isCondition1True == isCondition3True) {\n      isCondition3True = SBORROW4(maxValue,shiftAmount);\n      isCondition1True = (int)(maxValue - shiftAmount) < 0;\n      isCondition2True = maxValue == shiftAmount;\n    }\n    if (!isCondition2True && isCondition1True == isCondition3True) {\n      result = result | shiftAmount * 0x100000;\n    }\n    if (!isCondition2True && isCondition1True == isCondition3True) {\n      return CONCAT44(result,temp11);\n    }\n    result = result | 0x100000;\n    maxValue = 0;\n    isCondition2True = SBORROW4(shiftAmount,1);\n    shiftAmount = shiftAmount - 1;\n    isCondition1True = shiftAmount == 0;\n    temp3 = shiftAmount;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    maxValue = input3 << 8;\n    temp10 = (shiftAmount << 0xc) >> 4 | 0x10000000 | temp11 >> 0x18;\n    temp11 = temp11 * 0x100;\n    result = (shiftAmount ^ input4) & 0x80000000;\n    isCondition1True = temp3 <= temp10;\n    if (temp10 == temp3) {\n      isCondition1True = maxValue <= temp11;\n    }\n    difference = difference + (uint)isCondition1True;\n    shiftAmount = difference + 0x3fd;\n    if (isCondition1True == false) {\n      temp3 = temp3 >> 1;\n      maxValue = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | maxValue >> 1;\n    }\n    temp12 = temp11 - maxValue;\n    temp10 = (temp10 - temp3) - (uint)(temp11 < maxValue);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | maxValue >> 1;\n    temp11 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      isCondition1True = temp1 <= temp12;\n      if (temp4 < temp10 || temp10 - temp4 < (uint)isCondition1True) {\n        temp12 = temp12 - temp1;\n        temp11 = temp11 | temp3;\n        temp10 = (temp10 - temp4) - (uint)!isCondition1True;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      isCondition2True = temp1 <= temp12;\n      isCondition1True = temp10 - temp5 < (uint)isCondition2True;\n      maxValue = temp10;\n      if (temp5 < temp10 || isCondition1True) {\n        temp12 = temp12 - temp1;\n        maxValue = (temp10 - temp5) - (uint)!isCondition2True;\n      }\n      if (temp5 < temp10 || isCondition1True) {\n        temp11 = temp11 | temp3 >> 1;\n      }\n      temp10 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      isCondition2True = temp2 <= temp12;\n      isCondition1True = maxValue - temp10 < (uint)isCondition2True;\n      temp5 = maxValue;\n      if (temp10 < maxValue || isCondition1True) {\n        temp12 = temp12 - temp2;\n        temp5 = (maxValue - temp10) - (uint)!isCondition2True;\n      }\n      if (temp10 < maxValue || isCondition1True) {\n        temp11 = temp11 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp10 & 1) != 0) << 0x1f | temp2 >> 1;\n      isCondition2True = temp1 <= temp12;\n      isCondition1True = temp5 - temp6 < (uint)isCondition2True;\n      temp10 = temp5;\n      if (temp6 < temp5 || isCondition1True) {\n        temp12 = temp12 - temp1;\n        temp10 = (temp5 - temp6) - (uint)!isCondition2True;\n      }\n      if (temp6 < temp5 || isCondition1True) {\n        temp11 = temp11 | temp3 >> 3;\n      }\n      maxValue = temp10 | temp12;\n      if (maxValue == 0) break;\n      temp10 = temp10 << 4 | temp12 >> 0x1c;\n      temp12 = temp12 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((result & 0x100000) != 0) goto LAB_0800086a;\n        result = result | temp11;\n        temp11 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((result & 0x100000) == 0) {\n      result = result | temp11;\n      temp11 = 0;\n    }\nLAB_0800086a:\n    isCondition3True = 0xfc < shiftAmount;\n    isCondition2True = SBORROW4(shiftAmount,0xfd);\n    temp4 = difference + 0x300;\n    isCondition1True = temp4 == 0;\n    temp3 = temp4;\n    if (isCondition3True && !isCondition1True) {\n      isCondition3True = 0x6ff < temp4;\n      isCondition2True = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      isCondition1True = temp4 == 0x700;\n    }\n    if (!isCondition3True || isCondition1True) {\n      isCondition1True = temp6 <= temp10;\n      if (temp10 == temp6) {\n        isCondition1True = temp1 <= temp12;\n      }\n      if (temp10 == temp6 && temp12 == temp1) {\n        isCondition1True = (temp11 & 1) != 0;\n      }\n      return CONCAT44(result + shiftAmount * 0x100000 + (uint)CARRY4(temp11,(uint)isCondition1True),temp11 + isCondition1True);\n    }\n  }\n  if (!isCondition1True && (int)temp3 < 0 == isCondition2True) {\n    return (ulonglong)(result & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCondition3True = SCARRY4(shiftAmount,0x36);\n  isCondition1True = (int)(shiftAmount + 0x36) < 0;\n  isCondition2True = shiftAmount == 0xffffffca;\n  if (isCondition2True || isCondition1True != isCondition3True) {\n    temp11 = 0;\n  }\n  if (isCondition2True || isCondition1True != isCondition3True) {\n    result = result & 0x80000000;\n  }\n  if (isCondition2True || isCondition1True != isCondition3True) {\n    return CONCAT44(result,temp11);\n  }\n  temp3 = -shiftAmount;\n  temp10 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp11 >> (temp10 & 0xff) | result << (0x20 - temp10 & 0xff);\n    shiftAmount = (result >> (temp10 & 0xff) & ~((result & 0x80000000) >> (temp10 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((maxValue | temp11 << (0x20 - temp10 & 0xff) | temp3 << 1) == 0) {\n      shiftAmount = shiftAmount & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(result,shiftAmount) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp10,0xc)) {\n    shiftAmount = 0xc - difference;\n    temp3 = temp11 << (shiftAmount & 0xff);\n    temp11 = temp11 >> (0x20 - shiftAmount & 0xff) | result << (shiftAmount & 0xff);\n    shiftAmount = temp11 + -((int)temp3 >> 0x1f);\n    if ((maxValue | temp3 << 1) == 0) {\n      shiftAmount = shiftAmount & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((result & 0x80000000) + (uint)CARRY4(temp11,-((int)temp3 >> 0x1f)),shiftAmount);\n  }\n  temp10 = temp11 << (shiftAmount + 0x20 & 0xff);\n  temp11 = temp11 >> (temp3 & 0xff) | result << (shiftAmount + 0x20 & 0xff);\n  shiftAmount = temp11 + -((int)temp10 >> 0x1f);\n  if ((maxValue | temp10 << 1) == 0) {\n    shiftAmount = shiftAmount & ~(temp10 >> 0x1f);\n  }\n  return CONCAT44((result & 0x80000000) +\n                  ((result & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp11,-((int)temp10 >> 0x1f)),shiftAmount);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "perform_binary_operation_0800074c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "result",
                "iVar8": "difference",
                "uVar9": "shiftAmount",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "uVar13": "maxValue",
                "bVar14": "isCondition1True",
                "bVar15": "isCondition2True",
                "bVar16": "isCondition3True",
                "uVar17": "combinedInputs"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "compute_result_080008ba",
            "code": "\nulonglong computeResult_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint constant;\n  uint temp1;\n  uint temp2;\n  uint constant2;\n  bool isZero;\n  \n  temp1 = constant2 & input4 >> 0x14;\n  temp2 = input2;\n  if (constant != constant2 || temp1 != constant2) {\n    if (constant == constant2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp2 = input4, temp1 != constant2)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp1 == constant2) {\n      input1 = input3;\n      temp2 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (constant == 0) {\n          temp2 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp2;\n          if (temp1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp2 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp2 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(temp2,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "compute_result_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "constant",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "constant2",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_param_equality_0800092c",
            "code": "\nuint check_param_equality_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint xor_result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    xor_result = value2 ^ value4;\n    is_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)xor_result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_param_equality_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "xor_result",
                "bVar2": "is_zero",
                "bVar3": "is_negative"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_with_params_080009a8",
            "code": "\nvoid executeFunctionWithParams_080009a8(undefined4 ptr_param1,undefined4 ptr_param2,undefined4 ptr_param3,undefined4 ptr_param4)\n\n{\n  FUN_080009b8(ptr_param3,ptr_param4,ptr_param1,ptr_param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_with_params_080009a8",
                "param_1": "ptr_param1",
                "param_2": "ptr_param2",
                "param_3": "ptr_param3",
                "param_4": "ptr_param4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_080009b8",
            "code": "\nundefined4 initialize_080009b8(undefined4 input)\n\n{\n  FUN_0800092c();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_080009b8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_zero_080009c8",
            "code": "\nbool checkIfZero_080009c8(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_zero_080009c8",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_string_empty_080009dc",
            "code": "\nbool isStringEmpty_080009dc(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_string_empty_080009dc",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_zero_or_carry_080009f0",
            "code": "\nbool check_zero_or_carry_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_zero_or_carry_080009f0",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_carry_and_zero_08000a04",
            "code": "\nbool check_carry_and_zero_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_carry_and_zero_08000a04",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_null_termination_08000a18",
            "code": "\nbool check_null_termination_08000a18(void)\n\n{\n  char input_character;\n  \n  FUN_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_null_termination_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_params_08000a2c",
            "code": "\nundefined4 check_params_08000a2c(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_params_08000a2c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_signed_float_08000a58",
            "code": "\nuint calculate_signed_float_08000a58(uint input_value1,uint input_value2)\n\n{\n  uint shifted_result;\n  int multiplied_offset;\n  uint adjusted_shift;\n  \n  multiplied_offset = input_value2 * 2 + 0x200000;\n  if (input_value2 * 2 < 0xffe00000) {\n    if (-1 < multiplied_offset) {\n      return 0;\n    }\n    shifted_result = multiplied_offset >> 0x15;\n    adjusted_shift = -shifted_result - 0x3e1;\n    if (shifted_result < 0xfffffc20 && adjusted_shift != 0) {\n      shifted_result = (input_value2 << 0xb | 0x80000000 | input_value1 >> 0x15) >> (adjusted_shift & 0xff);\n      if ((input_value2 & 0x80000000) != 0) {\n        shifted_result = -shifted_result;\n      }\n      return shifted_result;\n    }\n  }\n  else if ((input_value1 | input_value2 << 0xc) != 0) {\n    return 0;\n  }\n  input_value2 = input_value2 & 0x80000000;\n  if (input_value2 == 0) {\n    input_value2 = 0x7fffffff;\n  }\n  return input_value2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_signed_float_08000a58",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "uVar1": "shifted_result",
                "iVar2": "multiplied_offset",
                "uVar3": "adjusted_shift"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shift_08000aa8",
            "code": "\nuint calculateShift_08000aa8(uint input1,uint input2)\n\n{\n  int shiftedValue;\n  uint shiftAmount;\n  \n  if ((input2 & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    shiftAmount = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftAmount) {\n      return (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (shiftAmount & 0xff);\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shift_08000aa8",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "shiftedValue",
                "uVar2": "shiftAmount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "execute_system_call_08000ae8",
            "code": "\nvoid execute_system_call_08000ae8(void)\n\n{\n  trigger_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "execute_system_call_08000ae8",
                "software_interrupt": "trigger_interrupt"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_process_08000aec",
            "code": "\nundefined4 executeProcess_08000aec(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_process_08000aec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "process_data_08000b08",
            "code": "\nvoid processData_08000b08(int inputFlag,int inputValue)\n\n{\n  if ((inputFlag == 1) && (inputValue == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "process_data_08000b08",
                "param_1": "inputFlag",
                "param_2": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_reflow_oven_08000bcc",
            "code": "\nvoid initializeReflowOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_reflow_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "do_something_08000cd0",
            "code": "\nvoid doSomething_08000cd0(void)\n\n{\n  uint result1;\n  undefined4 tempResult1;\n  int tempVar1;\n  undefined4 tempResult2;\n  undefined4 tempResult3;\n  undefined4 tempResult4;\n  undefined4 tempResult5;\n  undefined8 tempResult6;\n  \n  result1 = FUN_080058e0();\n  if (DAT_200001b4 < result1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    tempResult6 = FUN_080015f8(&DAT_2000024c,0);\n    tempResult2 = (undefined4)((ulonglong)tempResult6 >> 0x20);\n    tempResult1 = (undefined4)tempResult6;\n    DAT_20000188 = tempResult1;\n    DAT_2000018c = tempResult2;\n    tempVar1 = FUN_080009c8(tempResult1,tempResult2,0,0x40c38800);\n    if (((tempVar1 != 0) || (tempVar1 = FUN_080009c8(tempResult1,tempResult2,0,0x40c38880), tempVar1 != 0)) ||\n       (tempVar1 = FUN_080009c8(tempResult1,tempResult2,0,0x40c38900), tempVar1 != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result1 = FUN_080058e0();\n  tempResult1 = DAT_20000060;\n  if (DAT_200001b0 < result1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      tempVar1 = FUN_08005890(DAT_20000060);\n      FUN_08005848(tempResult1,tempVar1 == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,tempResult3,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,tempResult4,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,tempResult5,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  tempResult2 = DAT_2000018c;\n  tempResult1 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    tempVar1 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (tempVar1 == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        tempResult6 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)tempResult6 >> 0x20),0,0,tempResult6);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    tempVar1 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (tempVar1 != 0) {\n      tempResult6 = FUN_080058e0();\n      DAT_20000254 = (int)tempResult6 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempResult6 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result1 = FUN_080058e0();\n    if (DAT_20000254 < result1) {\n      tempVar1 = FUN_080058e0();\n      DAT_20000254 = tempVar1 + 9000;\n      tempResult6 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)tempResult6 >> 0x20);\n      DAT_20000240 = (undefined4)tempResult6;\n      tempResult6 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)tempResult6 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempResult6 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    tempResult6 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)tempResult6 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempResult6 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    tempVar1 = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (tempVar1 != 0) {\n      tempVar1 = FUN_080058e0();\n      DAT_20000180 = tempVar1 + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result1 = FUN_080058e0();\n    if (DAT_20000180 < result1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    tempVar1 = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (tempVar1 != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    tempVar1 = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((tempVar1 == 0) && (tempVar1 = FUN_080009c8(tempResult1,tempResult2,0,0x40c38880), tempVar1 == 0)) &&\n       (tempVar1 = FUN_080009c8(tempResult1,tempResult2,0,0x40c38900), tempVar1 == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    tempVar1 = FUN_08005754(DAT_20000068);\n    if (tempVar1 == 0) {\n      tempVar1 = FUN_080058e0();\n      if (0x32 < (uint)(tempVar1 - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    tempVar1 = FUN_08005754(DAT_20000068);\n    if (tempVar1 == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (tempVar1 = FUN_08005754(DAT_20000068), tempVar1 != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    tempVar1 = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(tempVar1 - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    tempResult6 = FUN_0800040c(tempVar1 - DAT_2000025c);\n    tempVar1 = FUN_080009dc((int)tempResult6,(int)((ulonglong)tempResult6 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (tempVar1 == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "do_something_08000cd0",
                "uVar1": "result1",
                "uVar2": "tempResult1",
                "iVar3": "tempVar1",
                "uVar4": "tempResult2",
                "extraout_r1": "tempResult3",
                "extraout_r1_00": "tempResult4",
                "extraout_r1_01": "tempResult5",
                "uVar5": "tempResult6"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_pointer_values_08001294",
            "code": "\nvoid setPointerValues_08001294(int baseAddress,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(baseAddress + 0x18) = value1;\n  *(undefined *)(baseAddress + 0x19) = value2;\n  *(undefined *)(baseAddress + 0x1a) = value3;\n  *(undefined *)(baseAddress + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_pointer_values_08001294",
                "param_1": "baseAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_operations_080012a2",
            "code": "\nvoid executeOperations_080012a2(int input)\n\n{\n  FUN_08005848(*(undefined *)(input + 10),0);\n  FUN_08005848(*(undefined *)(input + 10),1);\n  FUN_08005848(*(undefined *)(input + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_operations_080012a2",
                "param_1": "input"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid process_data_080012c0(int data_ptr,int mask)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < 4; i = i + 1) {\n    FUN_08005848(*(undefined *)(data_ptr + i + 0xb),mask >> (i & 0xff) & 1);\n  }\n  FUN_080012a2(data_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "data_ptr",
                "param_2": "mask",
                "uVar1": "i"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid process_data_080012e8(int data_address,int input_value)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 8; index = index + 1) {\n    FUN_08005848(*(undefined *)(data_address + index + 0xb),input_value >> (index & 0xff) & 1);\n  }\n  FUN_080012a2(data_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "data_address",
                "param_2": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "extract_and_process_data_08001310",
            "code": "\nvoid extract_and_process_data_08001310(int data_ptr,uint data_value,undefined4 param_ptr_1,undefined4 param_ptr_2)\n\n{\n  FUN_08005848(*(undefined *)(data_ptr + 8),param_ptr_1,param_ptr_1,param_ptr_2,param_ptr_2);\n  if (*(char *)(data_ptr + 9) != -1) {\n    FUN_08005848(*(char *)(data_ptr + 9),0);\n  }\n  if ((*(byte *)(data_ptr + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data_ptr,data_value >> 4);\n    FUN_080012c0(data_ptr,data_value);\n    return;\n  }\n  FUN_080012e8(data_ptr,data_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "extract_and_process_data_08001310",
                "param_1": "data_ptr",
                "param_2": "data_value",
                "param_3": "param_ptr_1",
                "param_4": "param_ptr_2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_and_return_one_0800134e",
            "code": "\nundefined4 initializeAndReturnOne_0800134e(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08001310(input1,input2,1,input4,input4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_and_return_one_0800134e",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08001310(inputParam1,1,0,inputParam4,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "adjust_and_call_function_08001366",
            "code": "\nvoid adjustAndCallFunction_08001366(int inputBuffer,char character,uint count,undefined4 data)\n\n{\n  char selectedChar;\n  \n  if (3 < count) {\n    count = 3;\n  }\n  if ((int)(uint)*(byte *)(inputBuffer + 0x17) <= (int)count) {\n    count = *(byte *)(inputBuffer + 0x17) - 1 & 0xff;\n  }\n  selectedChar = *(char *)(count + inputBuffer + 0x18);\n  FUN_08001310(inputBuffer,character + selectedChar | 0x80,0,selectedChar,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "adjust_and_call_function_08001366",
                "param_1": "inputBuffer",
                "param_2": "character",
                "param_3": "count",
                "param_4": "data",
                "cVar1": "selectedChar"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_call_function_0800138e",
            "code": "\nvoid setFlagAndCallFunction_0800138e(int object,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte currentFlagValue;\n  \n  currentFlagValue = *(byte *)(object + 0x14);\n  *(byte *)(object + 0x14) = currentFlagValue | 4;\n  FUN_08001310(object,currentFlagValue | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "param_1": "object",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "currentFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "initialize_communication_080013a4",
            "code": "\nvoid initializeCommunication_080013a4(int communicationData,int startAddress,int length,int flag)\n\n{\n  int loopCounter;\n  int counter;\n  \n  if (1 < length) {\n    *(byte *)(communicationData + 0x13) = *(byte *)(communicationData + 0x13) | 8;\n  }\n  *(char *)(communicationData + 0x17) = (char)length;\n  FUN_08001294(communicationData,0,0x40,startAddress,startAddress + 0x40);\n  if ((flag != 0) && (length == 1)) {\n    *(byte *)(communicationData + 0x13) = *(byte *)(communicationData + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(communicationData + 8),1);\n  if (*(char *)(communicationData + 9) != -1) {\n    FUN_080057b4(*(char *)(communicationData + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(communicationData + 10),1);\n  counter = 0;\n  while( true ) {\n    if ((*(byte *)(communicationData + 0x13) & 0x10) == 0) {\n      loopCounter = 4;\n    }\n    else {\n      loopCounter = 8;\n    }\n    if (loopCounter <= counter) break;\n    FUN_080057b4(*(undefined *)(communicationData + counter + 0xb),1);\n    counter = counter + 1;\n  }\n  FUN_08005848(*(undefined *)(communicationData + 8),0);\n  FUN_08005848(*(undefined *)(communicationData + 10),0);\n  if (*(char *)(communicationData + 9) != -1) {\n    FUN_08005848(*(char *)(communicationData + 9),0);\n  }\n  if ((*(byte *)(communicationData + 0x13) & 0x10) == 0) {\n    FUN_080012c0(communicationData,3);\n    FUN_080012c0(communicationData,3);\n    FUN_080012c0(communicationData,3);\n    FUN_080012c0(communicationData,2);\n  }\n  else {\n    FUN_08001310(communicationData,*(byte *)(communicationData + 0x13) | 0x20,0);\n    FUN_08001310(communicationData,*(byte *)(communicationData + 0x13) | 0x20,0);\n    FUN_08001310(communicationData,*(byte *)(communicationData + 0x13) | 0x20,0);\n  }\n  FUN_08001310(communicationData,*(byte *)(communicationData + 0x13) | 0x20,0);\n  *(undefined *)(communicationData + 0x14) = 4;\n  FUN_0800138e(communicationData);\n  FUN_0800135a(communicationData);\n  *(undefined *)(communicationData + 0x15) = 2;\n  FUN_08001310(communicationData,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "initialize_communication_080013a4",
                "param_1": "communicationData",
                "param_2": "startAddress",
                "param_3": "length",
                "param_4": "flag",
                "iVar1": "loopCounter",
                "iVar2": "counter"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "update_parameters_080014ba",
            "code": "\nvoid updateParameters_080014ba(int objectAddress,int flag,undefined param3,undefined4 param4,undefined param5,\n                 undefined param6,undefined param7,undefined param8,undefined param9,\n                 undefined param10,undefined param11,undefined param12,undefined param13)\n\n{\n  *(undefined *)(objectAddress + 8) = param3;\n  *(char *)(objectAddress + 9) = (char)param4;\n  *(undefined *)(objectAddress + 10) = param5;\n  *(undefined *)(objectAddress + 0xb) = param6;\n  *(undefined *)(objectAddress + 0xc) = param7;\n  *(undefined *)(objectAddress + 0xd) = param8;\n  *(undefined *)(objectAddress + 0xe) = param9;\n  *(undefined *)(objectAddress + 0xf) = param10;\n  *(undefined *)(objectAddress + 0x10) = param11;\n  *(undefined *)(objectAddress + 0x11) = param12;\n  *(undefined *)(objectAddress + 0x12) = param13;\n  if (flag == 0) {\n    *(undefined *)(objectAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(objectAddress + 0x13) = 0;\n  }\n  FUN_080013a4(objectAddress,0x10,1,0,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "update_parameters_080014ba",
                "param_1": "objectAddress",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *outputArray,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3,\n            undefined inputValue4,undefined inputValue5,undefined inputValue6)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(outputArray,1,inputValue1,0xff,inputValue2,inputValue3,inputValue4,inputValue5,inputValue6,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "outputArray",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "param_5": "inputValue4",
                "param_6": "inputValue5",
                "param_7": "inputValue6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "execute_data_processing_08001550",
            "code": "\nvoid executeDataProcessing_08001550(undefined4 *dataPointer,uint size,int dataAddress)\n\n{\n  int index;\n  \n  FUN_08001310(dataPointer,(size & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*dataPointer)(dataPointer,*(undefined *)(dataAddress + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "execute_data_processing_08001550",
                "param_1": "dataPointer",
                "param_2": "size",
                "param_3": "dataAddress",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "set_params_and_call_func_0800157c",
            "code": "\nundefined * setParamsAndCallFunc_0800157c(undefined *ptrToData,undefined4 data1,undefined param1,undefined param2)\n\n{\n  *ptrToData = (char)data1;\n  ptrToData[1] = param1;\n  ptrToData[2] = param2;\n  FUN_080057b4(data1,0);\n  FUN_080057b4(ptrToData[1],1);\n  FUN_080057b4(ptrToData[2],1);\n  FUN_08005848(ptrToData[1],1);\n  FUN_08005848(ptrToData[2],0);\n  return ptrToData;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "set_params_and_call_func_0800157c",
                "param_1": "ptrToData",
                "param_2": "data1",
                "param_3": "param1",
                "param_4": "param2"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "bitwise_flag_operation_080015b2",
            "code": "\nuint bitwiseFlagOperation_080015b2(undefined *arrayPointer)\n\n{\n  int result;\n  uint bitIndex;\n  uint flagValue;\n  \n  FUN_08005848(arrayPointer[1],0);\n  flagValue = 0;\n  for (bitIndex = 0x1f; -1 < (int)bitIndex; bitIndex = bitIndex - 1) {\n    FUN_08005848(arrayPointer[2],1);\n    result = FUN_08005890(*arrayPointer);\n    if (result != 0) {\n      flagValue = flagValue | 1 << (bitIndex & 0xff);\n    }\n    FUN_08005848(arrayPointer[2],0);\n  }\n  FUN_08005848(arrayPointer[1],1);\n  return flagValue;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "bitwise_flag_operation_080015b2",
                "param_1": "arrayPointer",
                "iVar1": "result",
                "uVar2": "bitIndex",
                "uVar3": "flagValue"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "convert_float_080015f8",
            "code": "\nundefined8 convertFloat_080015f8(undefined4 inputParam1,int inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  uint extractedBits;\n  undefined8 convertedFloat;\n  \n  extractedBits = FUN_080015b2();\n  if ((extractedBits & 0x10000) == 0) {\n    extractedBits = extractedBits >> 0x12;\n    convertedFloat = FUN_0800040c(extractedBits & 0x1fff);\n    if ((extractedBits & 0x2000) != 0) {\n      convertedFloat = FUN_0800040c(~extractedBits & 0x1fff);\n      convertedFloat = FUN_08000194((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0x3ff00000,inputParam4);\n      convertedFloat = CONCAT44((int)((ulonglong)convertedFloat >> 0x20) + -0x80000000,(int)convertedFloat);\n    }\n    convertedFloat = FUN_080004f8((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0x3fd00000);\n    if (inputParam2 == 1) {\n      convertedFloat = FUN_080004f8((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0x40220000);\n      convertedFloat = FUN_0800074c((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0x40140000);\n      convertedFloat = FUN_08000194((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0x40400000);\n      return convertedFloat;\n    }\n  }\n  else {\n    extractedBits = extractedBits & 7;\n    if (extractedBits == 2) {\n      return 0x40c3888000000000;\n    }\n    if (extractedBits == 4) {\n      return 0x40c3890000000000;\n    }\n    if (extractedBits != 1) {\n      return 0;\n    }\n    convertedFloat = 0x40c3880000000000;\n  }\n  return convertedFloat;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "convert_float_080015f8",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "uVar1": "extractedBits",
                "uVar2": "convertedFloat"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "reverse_and_improve_080016b4",
            "code": "\nchar reverse_and_improve_080016b4(int input)\n\n{\n  char output;\n  int result1;\n  int result2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined8 value4;\n  undefined8 value5;\n  undefined8 value6;\n  undefined8 value7;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  \n  flag = *(char *)(input + 0x70);\n  if (flag != '\\0') {\n    result1 = FUN_080058e0();\n    if ((uint)(result1 - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(input + 0x38);\n      temp5 = (*(undefined4 **)(input + 0x38))[1];\n      value4 = FUN_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      value3 = (undefined4)((ulonglong)value4 >> 0x20);\n      value5 = FUN_08000190(temp2,temp5,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      temp1 = (undefined4)((ulonglong)value5 >> 0x20);\n      value6 = FUN_080004f8((int)value4,value3,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      value6 = FUN_08000194((int)value6,(int)((ulonglong)value6 >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = value6;\n      output = *(char *)(input + 0x71);\n      if (output == '\\0') {\n        value7 = FUN_080004f8((int)value5,temp1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        value6 = FUN_08000190((int)value6,(int)((ulonglong)value6 >> 0x20),(int)value7,\n                              (int)((ulonglong)value7 >> 0x20));\n        *(undefined8 *)(input + 0x48) = value6;\n      }\n      temp3 = *(undefined4 *)(input + 0x48);\n      temp6 = *(undefined4 *)(input + 0x4c);\n      value1 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      value2 = *(undefined4 *)(input + 0x6c);\n      value6 = *(undefined8 *)(input + 0x68);\n      result2 = FUN_08000a18(temp3,temp6,value1,value2);\n      if (result2 == 0) {\n        temp4 = *(undefined4 *)(input + 0x60);\n        temp7 = *(undefined4 *)(input + 100);\n        result2 = FUN_080009dc(temp3,temp6);\n        if (result2 != 0) {\n          *(undefined4 *)(input + 0x48) = temp4;\n          *(undefined4 *)(input + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = value1;\n        *(undefined4 *)(input + 0x4c) = value2;\n      }\n      if (output == '\\0') {\n        value4 = 0;\n      }\n      else {\n        value4 = FUN_080004f8((int)value4,value3,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      localVar2 = (undefined4)((ulonglong)value4 >> 0x20);\n      localVar1 = (undefined4)value4;\n      value3 = *(undefined4 *)(input + 0x48);\n      temp3 = *(undefined4 *)(input + 0x4c);\n      value4 = FUN_080004f8((int)value5,temp1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      value4 = FUN_08000190(value3,temp3,(int)value4,(int)((ulonglong)value4 >> 0x20));\n      value4 = FUN_08000194(localVar1,localVar2,(int)value4,(int)((ulonglong)value4 >> 0x20));\n      value3 = (undefined4)((ulonglong)value4 >> 0x20);\n      result2 = FUN_080009dc(value1,value2,(int)value4,value3);\n      if (result2 == 0) {\n        value6 = *(undefined8 *)(input + 0x60);\n        result2 = FUN_080009dc((int)value4,value3,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (result2 == 0) {\n          value6 = value4;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = value6;\n      *(undefined4 *)(input + 0x50) = temp2;\n      *(undefined4 *)(input + 0x54) = temp5;\n      *(int *)(input + 0x44) = result1;\n    }\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "reverse_and_improve_080016b4",
                "param_1": "input",
                "cVar1": "output",
                "iVar2": "result1",
                "iVar3": "result2",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "flag",
                "uVar12": "value1",
                "uVar13": "value2",
                "uVar14": "value3",
                "uVar15": "value4",
                "uVar16": "value5",
                "uVar17": "value6",
                "uVar18": "value7",
                "local_38": "localVar1",
                "uStack_34": "localVar2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_parameters_08001814",
            "code": "\nvoid initializeParameters_08001814(undefined4 *outputArray,undefined4 param_2,undefined4 value1,undefined4 value2,\n                 undefined4 value3,undefined4 value4,undefined4 value5,undefined4 value6,\n                 int inputValue)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined temp2;\n  bool flag;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  \n  result = FUN_080009dc(value1,value2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(value3,value4,0,0), result == 0)) &&\n     (result = FUN_080009dc(value5,value6,0,0), result == 0)) {\n    outputArray[0xd] = inputValue;\n    flag = inputValue != 1;\n    if (flag) {\n      inputValue = 0;\n    }\n    temp2 = (undefined)inputValue;\n    if (!flag) {\n      temp2 = 1;\n    }\n    *(undefined *)((int)outputArray + 0x71) = temp2;\n    *outputArray = value1;\n    outputArray[1] = value2;\n    outputArray[2] = value3;\n    outputArray[3] = value4;\n    outputArray[4] = value5;\n    outputArray[5] = value6;\n    temp3 = FUN_0800040c(outputArray[0x16]);\n    temp3 = FUN_0800074c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x408f4000);\n    temp1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    outputArray[6] = value1;\n    outputArray[7] = value2;\n    temp4 = FUN_080004f8(value3,value4,(int)temp3,temp1);\n    *(undefined8 *)(outputArray + 8) = temp4;\n    temp3 = FUN_0800074c(value5,value6,(int)temp3,temp1);\n    *(undefined8 *)(outputArray + 10) = temp3;\n    if (outputArray[0xc] == 1) {\n      temp5 = FUN_08000190(0,0,value1,value2);\n      *(undefined8 *)(outputArray + 6) = temp5;\n      temp4 = FUN_08000190(0,0,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      *(undefined8 *)(outputArray + 8) = temp4;\n      temp3 = FUN_08000190(0,0,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      *(undefined8 *)(outputArray + 10) = temp3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_parameters_08001814",
                "param_1": "outputArray",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "inputValue",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "bVar4": "flag",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_program_080018f8",
            "code": "\nvoid initializeProgram_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_program_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "process_function_08001918",
            "code": "\nvoid process_function_08001918(int binary_offset,int param_count,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 result_1;\n  undefined8 result_2;\n  undefined8 result_3;\n  \n  if (0 < param_count) {\n    result_2 = FUN_0800042c(param_count);\n    result_3 = FUN_0800040c(*(undefined4 *)(binary_offset + 0x58));\n    result_2 = FUN_0800074c((int)result_2,(int)((ulonglong)result_2 >> 0x20),(int)result_3,\n                         (int)((ulonglong)result_3 >> 0x20),param_4);\n    result_1 = (undefined4)((ulonglong)result_2 >> 0x20);\n    result_3 = FUN_080004f8((int)result_2,result_1,*(undefined4 *)(binary_offset + 0x20),\n                         *(undefined4 *)(binary_offset + 0x24));\n    *(undefined8 *)(binary_offset + 0x20) = result_3;\n    result_2 = FUN_0800074c(*(undefined4 *)(binary_offset + 0x28),*(undefined4 *)(binary_offset + 0x2c),(int)result_2,\n                         result_1);\n    *(undefined8 *)(binary_offset + 0x28) = result_2;\n    *(int *)(binary_offset + 0x58) = param_count;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "process_function_08001918",
                "param_1": "binary_offset",
                "param_2": "param_count",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_params_08001960",
            "code": "\nvoid updateParams_08001960(int param_1,undefined4 param_2,undefined4 newParam1,undefined4 newParam2,\n                 undefined4 newParam3,undefined4 newParam4)\n\n{\n  int returnValue;\n  undefined4 *ptr;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  returnValue = FUN_08000a04(newParam1,newParam2,newParam3,newParam4,newParam2);\n  if (returnValue == 0) {\n    *(undefined4 *)(param_1 + 0x60) = newParam1;\n    *(undefined4 *)(param_1 + 100) = newParam2;\n    *(undefined4 *)(param_1 + 0x68) = newParam3;\n    *(undefined4 *)(param_1 + 0x6c) = newParam4;\n    if (*(char *)(param_1 + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(param_1 + 0x3c);\n      value1 = *ptr;\n      value3 = ptr[1];\n      returnValue = FUN_080009dc(newParam3,newParam4,value1,value3);\n      if (returnValue == 0) {\n        returnValue = FUN_08000a18(newParam1,newParam2,value1,value3);\n        if (returnValue != 0) {\n          *ptr = newParam1;\n          ptr[1] = newParam2;\n        }\n      }\n      else {\n        *ptr = newParam3;\n        ptr[1] = newParam4;\n      }\n      value1 = *(undefined4 *)(param_1 + 0x48);\n      value3 = *(undefined4 *)(param_1 + 0x4c);\n      value2 = *(undefined4 *)(param_1 + 0x68);\n      value4 = *(undefined4 *)(param_1 + 0x6c);\n      returnValue = FUN_08000a18(value1,value3,value2,value4);\n      if (returnValue != 0) {\n        *(undefined4 *)(param_1 + 0x48) = value2;\n        *(undefined4 *)(param_1 + 0x4c) = value4;\n        return;\n      }\n      value2 = *(undefined4 *)(param_1 + 0x60);\n      value4 = *(undefined4 *)(param_1 + 100);\n      returnValue = FUN_080009dc(value1,value3,value2,value4);\n      if (returnValue != 0) {\n        *(undefined4 *)(param_1 + 0x48) = value2;\n        *(undefined4 *)(param_1 + 0x4c) = value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_params_08001960",
                "param_3": "newParam1",
                "param_4": "newParam2",
                "param_5": "newParam3",
                "param_6": "newParam4",
                "iVar1": "returnValue",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2",
                "uVar5": "value3",
                "uVar6": "value4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_data_080019f6",
            "code": "\nvoid updateData_080019f6(int baseAddress)\n\n{\n  int result;\n  undefined4 value1;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 value2;\n  \n  ptr1 = **(undefined4 **)(baseAddress + 0x3c);\n  ptr2 = (*(undefined4 **)(baseAddress + 0x3c))[1];\n  *(undefined4 *)(baseAddress + 0x48) = ptr1;\n  *(undefined4 *)(baseAddress + 0x4c) = ptr2;\n  value1 = (*(undefined4 **)(baseAddress + 0x38))[1];\n  *(undefined4 *)(baseAddress + 0x50) = **(undefined4 **)(baseAddress + 0x38);\n  *(undefined4 *)(baseAddress + 0x54) = value1;\n  value1 = *(undefined4 *)(baseAddress + 0x68);\n  value2 = *(undefined4 *)(baseAddress + 0x6c);\n  result = FUN_08000a18(ptr1,ptr2,value1,value2);\n  if (result == 0) {\n    value1 = *(undefined4 *)(baseAddress + 0x60);\n    value2 = *(undefined4 *)(baseAddress + 100);\n    result = FUN_080009dc(ptr1,ptr2,value1,value2);\n    if (result != 0) {\n      *(undefined4 *)(baseAddress + 0x48) = value1;\n      *(undefined4 *)(baseAddress + 0x4c) = value2;\n    }\n    return;\n  }\n  *(undefined4 *)(baseAddress + 0x48) = value1;\n  *(undefined4 *)(baseAddress + 0x4c) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_data_080019f6",
                "param_1": "baseAddress",
                "uVar2": "value1",
                "uVar3": "ptr1",
                "uVar4": "ptr2",
                "uVar5": "value2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_if_param_is_one_08001a44",
            "code": "\nvoid setFlagIfParamIsOne_08001a44(int ptrToData,int flagValue)\n\n{\n  undefined newValue;\n  \n  if (flagValue == 1) {\n    newValue = 1;\n    if (*(char *)(ptrToData + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newValue = 0;\n  }\n  *(undefined *)(ptrToData + 0x70) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_if_param_is_one_08001a44",
                "param_1": "ptrToData",
                "param_2": "flagValue",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int structAddress,int newValue,undefined4 temp1,undefined4 temp2)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(structAddress + 0x70) != '\\0') && (*(int *)(structAddress + 0x30) != newValue)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(structAddress + 0x18),*(undefined4 *)(structAddress + 0x1c),temp2\n                        );\n    *(undefined8 *)(structAddress + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(structAddress + 0x20),*(undefined4 *)(structAddress + 0x24));\n    *(undefined8 *)(structAddress + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(structAddress + 0x28),*(undefined4 *)(structAddress + 0x2c));\n    *(undefined8 *)(structAddress + 0x28) = result;\n  }\n  *(int *)(structAddress + 0x30) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "structAddress",
                "param_2": "newValue",
                "param_3": "temp1",
                "param_4": "temp2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_data_08001ab0",
            "code": "\nint initializeData_08001ab0(int dataPointer,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extraOutput;\n  \n  *(undefined4 *)(dataPointer + 0x3c) = param3;\n  *(undefined4 *)(dataPointer + 0x38) = param2;\n  *(undefined4 *)(dataPointer + 0x40) = param4;\n  *(undefined *)(dataPointer + 0x70) = 0;\n  FUN_08001960(dataPointer,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(dataPointer + 0x58) = 100;\n  FUN_08001a66(dataPointer,param12);\n  FUN_08001814(dataPointer,extraOutput,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(dataPointer + 0x44) = result - *(int *)(dataPointer + 0x58);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_data_08001ab0",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extraOutput"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "run_initialization_08001b18",
            "code": "\nundefined4 run_initialization_08001b18(undefined4 input_value)\n\n{\n  FUN_08001ab0();\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "run_initialization_08001b18",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_device_08001b48",
            "code": "\nvoid initializeDevice_08001b48(void)\n\n{\n  int result;\n  uint timeInMilliseconds;\n  undefined4 array1 [2];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 array2 [4];\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 value11;\n  \n  array2[0] = 2;\n  value7 = 1;\n  value8 = 0x10;\n  value9 = 2;\n  value10 = 0;\n  value11 = 0x380000;\n  result = FUN_08003688(array2);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value2 = 0xf;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x400;\n  value6 = 0;\n  result = FUN_08003ad4(&value2);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  array1[0] = 2;\n  value1 = 0x8000;\n  result = FUN_08003c90(array1);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeInMilliseconds = FUN_08003c44();\n  FUN_08002514(timeInMilliseconds / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_device_08001b48",
                "iVar1": "result",
                "uVar2": "timeInMilliseconds",
                "local_54": "array1",
                "local_4c": "value1",
                "local_44": "value2",
                "local_40": "value3",
                "local_3c": "value4",
                "local_38": "value5",
                "local_34": "value6",
                "local_30": "array2",
                "local_20": "value7",
                "local_1c": "value8",
                "local_14": "value9",
                "local_10": "value10",
                "local_c": "value11"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "execute_initialization_08001c32",
            "code": "\nvoid executeInitialization_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "execute_initialization_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "check_and_set_param_08001c3c",
            "code": "\nundefined4 checkAndSetParam_08001c3c(uint value)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < value) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,value,0);\n  DAT_2000007c = value;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "check_and_set_param_08001c3c",
                "param_1": "value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "set_flag_and_call_functions_08001c88",
            "code": "\n\n\nundefined4 setFlagAndCallFunctions_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "set_flag_and_call_functions_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "add_values_08001cac",
            "code": "\nvoid addValues_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "add_values_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_dat_value_08001cc4",
            "code": "\nundefined4 get_dat_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_dat_value_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "check_and_process_data_08001cd0",
            "code": "\nundefined4 checkAndProcessData_08001cd0(uint **data,uint size)\n\n{\n  int initialValue;\n  uint factor;\n  int offset;\n  undefined4 result;\n  uint *ptrData;\n  uint adjustedSize;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08001cc4();\n  adjustedSize = DAT_20000084;\n  ptrData = *data;\n  if ((ptrData[2] & 0x100) == 0) {\n    if (((ptrData[1] & 0x100) == 0) && ((ptrData[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data & 2) != 0) goto LAB_08001de2;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (offset = FUN_08001cc4(), (uint)(offset - initialValue) <= size))));\n      data[10] = (uint *)((uint)data[10] | 4);\n      *(undefined *)(data + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      ptrData = *data;\n      if (((ptrData[4] & 0x24924924) == 0) && ((ptrData[3] & 0x924924) == 0)) {\n        if ((ptrData[4] & 0x12492492) == 0) {\n          if ((ptrData[3] & 0x492492) == 0) {\n            offset = 0x14;\n          }\n          else {\n            offset = 0x29;\n          }\n        }\n        else {\n          offset = 0x29;\n        }\n      }\n      else if (((ptrData[4] & 0x12492492) == 0) && ((ptrData[3] & 0x492492) == 0)) {\n        offset = 0x54;\n      }\n      else if ((ptrData[4] & 0x249249) == 0) {\n        if ((ptrData[3] & 0x249249) == 0) {\n          offset = 0x54;\n        }\n        else {\n          offset = 0xfc;\n        }\n      }\n      else {\n        offset = 0xfc;\n      }\n      adjustedSize = (adjustedSize / factor) * offset;\n      for (; counter <= adjustedSize && adjustedSize - counter != 0; counter = counter + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (offset = FUN_08001cc4(), size < (uint)(offset - initialValue))))) {\n          data[10] = (uint *)((uint)data[10] | 4);\n          *(undefined *)(data + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **data = 0xffffffed;\n      data[10] = (uint *)((uint)data[10] | 0x200);\n      if (((*data)[2] & 0xe0000) == 0xe0000) {\n        if (data[3] == (uint *)0x0) {\n          data[10] = (uint *)((uint)data[10] & 0xfffffeff);\n          if (((uint)data[10] & 0x1000) == 0) {\n            data[10] = (uint *)((uint)data[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    data[10] = (uint *)((uint)data[10] | 0x20);\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "check_and_process_data_08001cd0",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "offset",
                "uVar4": "result",
                "puVar5": "ptrData",
                "uVar6": "adjustedSize",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_data_from_pointer_08001e40",
            "code": "\nundefined4 get_data_from_pointer_08001e40(int *pointer)\n\n{\n  return *(undefined4 *)(*pointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_data_from_pointer_08001e40",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_device_info_08001e48",
            "code": "\nundefined4 updateDeviceInfo_08001e48(int *deviceInfoPtr,uint *dataPtr)\n\n{\n  undefined4 returnValue;\n  uint tempVar;\n  int loopCounter;\n  \n  if (*(char *)(deviceInfoPtr + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(deviceInfoPtr + 9) = 1;\n    tempVar = dataPtr[1];\n    if (tempVar < 7) {\n      tempVar = tempVar * 5 - 5;\n      *(uint *)(*deviceInfoPtr + 0x34) =\n           *dataPtr << (tempVar & 0xff) | *(uint *)(*deviceInfoPtr + 0x34) & ~(0x1f << (tempVar & 0xff));\n    }\n    else if (tempVar < 0xd) {\n      tempVar = tempVar * 5 - 0x23;\n      *(uint *)(*deviceInfoPtr + 0x30) =\n           *dataPtr << (tempVar & 0xff) | *(uint *)(*deviceInfoPtr + 0x30) & ~(0x1f << (tempVar & 0xff));\n    }\n    else {\n      tempVar = tempVar * 5 - 0x41;\n      *(uint *)(*deviceInfoPtr + 0x2c) =\n           *dataPtr << (tempVar & 0xff) | *(uint *)(*deviceInfoPtr + 0x2c) & ~(0x1f << (tempVar & 0xff));\n    }\n    tempVar = *dataPtr;\n    if (tempVar < 10) {\n      *(uint *)(*deviceInfoPtr + 0x10) =\n           dataPtr[2] << (tempVar * 3 & 0xff) |\n           *(uint *)(*deviceInfoPtr + 0x10) & ~(7 << (tempVar * 3 & 0xff));\n    }\n    else {\n      tempVar = tempVar * 3 - 0x1e;\n      *(uint *)(*deviceInfoPtr + 0xc) =\n           dataPtr[2] << (tempVar & 0xff) | *(uint *)(*deviceInfoPtr + 0xc) & ~(7 << (tempVar & 0xff));\n    }\n    if (*dataPtr - 0x10 < 2) {\n      if (*deviceInfoPtr == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*dataPtr == 0x10) {\n            for (loopCounter = (DAT_20000084 / 1000000) * 10; loopCounter != 0; loopCounter = loopCounter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        deviceInfoPtr[10] = deviceInfoPtr[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(deviceInfoPtr + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_device_info_08001e48",
                "param_1": "deviceInfoPtr",
                "param_2": "dataPtr",
                "uVar1": "returnValue",
                "uVar2": "tempVar",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_pointer_at_offset_08001f80",
            "code": "\nundefined4 getPointerAtOffset_08001f80(int offset)\n\n{\n  return *(undefined4 *)(offset + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_pointer_at_offset_08001f80",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "check_and_set_flag_08001f84",
            "code": "\nundefined4 checkAndSetFlag_08001f84(int *pointer,undefined4 value)\n\n{\n  int loopCounter;\n  undefined4 result;\n  int data;\n  uint delayCounter;\n  \n  data = *pointer;\n  if ((*(uint *)(data + 8) & 1) == 0) {\n    *(uint *)(data + 8) = *(uint *)(data + 8) | 1;\n    for (delayCounter = DAT_20000084 / 1000000; delayCounter != 0; delayCounter = delayCounter - 1) {\n    }\n    data = FUN_08001cc4(pointer,value,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*pointer + 8) & 1) != 0) {\n        return 0;\n      }\n      loopCounter = FUN_08001cc4();\n    } while ((uint)(loopCounter - data) < 3);\n    pointer[10] = pointer[10] | 0x10;\n    pointer[0xb] = pointer[0xb] | 1;\n    *(undefined *)(pointer + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "check_and_set_flag_08001f84",
                "param_1": "pointer",
                "param_2": "value",
                "iVar1": "loopCounter",
                "iVar3": "data",
                "uVar2": "result",
                "local_14": "delayCounter"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "update_configuration_08002004",
            "code": "\n\n\nint updateConfiguration_08002004(int *configParams)\n\n{\n  int result;\n  undefined4 *ptrConfig;\n  int configValue;\n  \n  if (*(char *)(configParams + 9) != '\\x01') {\n    *(undefined *)(configParams + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      configParams[10] = configParams[10] & 0xfffffcfeU | 0x100;\n      ptrConfig = (undefined4 *)*configParams;\n      if ((ptrConfig == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        configParams[10] = configParams[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          configParams[10] = configParams[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        configParams[10] = configParams[10] & 0xffefffff;\n        if ((ptrConfig[1] & 0x400) != 0) {\n          configParams[10] = configParams[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((configParams[10] & 0x1000U) == 0) {\n        configParams[0xb] = 0;\n      }\n      else {\n        configParams[0xb] = configParams[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(configParams + 9) = 0;\n      *ptrConfig = 0xfffffffd;\n      configValue = *configParams;\n      if (((*(uint *)(configValue + 8) & 0xe0000) == 0xe0000) &&\n         ((configValue != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(configValue + 8) = *(uint *)(configValue + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(configValue + 8) = *(uint *)(configValue + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(configParams + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "update_configuration_08002004",
                "param_1": "configParams",
                "iVar1": "result",
                "puVar2": "ptrConfig",
                "iVar3": "configValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_and_values_080020f0",
            "code": "\nundefined4 updateFlagsAndValues_080020f0(int *ptr)\n\n{\n  int value1;\n  int value2;\n  \n  value2 = *ptr;\n  if ((*(uint *)(value2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value2 + 8) = *(uint *)(value2 + 8) & 0xfffffffe;\n  value2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*ptr + 8) & 1) == 0) {\n      return 0;\n    }\n    value1 = FUN_08001cc4();\n  } while ((uint)(value1 - value2) < 3);\n  ptr[10] = ptr[10] | 0x10;\n  ptr[0xb] = ptr[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_and_values_080020f0",
                "param_1": "ptr",
                "iVar1": "value1",
                "iVar2": "value2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "configure_device_0800213c",
            "code": "\nundefined4 configureDevice_0800213c(int *deviceConfig)\n\n{\n  int result;\n  uint mask1;\n  uint mask2;\n  \n  if (deviceConfig == (int *)0x0) {\n    return 1;\n  }\n  if (deviceConfig[10] == 0) {\n    deviceConfig[0xb] = 0;\n    *(undefined *)(deviceConfig + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(deviceConfig);\n  if (((deviceConfig[10] & 0x10U) == 0) && (result == 0)) {\n    deviceConfig[10] = deviceConfig[10] & 0xffffeefdU | 2;\n    mask1 = deviceConfig[1] | deviceConfig[7] | deviceConfig[3] << 1;\n    if (deviceConfig[2] == 0x100) {\n      mask2 = 0x100;\n    }\n    else {\n      mask2 = 0;\n      if (deviceConfig[2] == 1) {\n        mask2 = 0x100;\n      }\n    }\n    if (deviceConfig[5] == 1) {\n      if (deviceConfig[3] == 0) {\n        mask2 = mask2 | (deviceConfig[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        deviceConfig[10] = deviceConfig[10] | 0x20;\n        deviceConfig[0xb] = deviceConfig[0xb] | 1;\n      }\n    }\n    *(uint *)(*deviceConfig + 4) = mask2 | *(uint *)(*deviceConfig + 4) & 0xffff16ff;\n    *(uint *)(*deviceConfig + 8) = *(uint *)(*deviceConfig + 8) & 0xffe1f7fd | mask1;\n    if ((deviceConfig[2] == 0x100) || (deviceConfig[2] == 1)) {\n      mask2 = (deviceConfig[4] + -1) * 0x100000;\n    }\n    else {\n      mask2 = 0;\n    }\n    *(uint *)(*deviceConfig + 0x2c) = mask2 | *(uint *)(*deviceConfig + 0x2c) & 0xff0fffff;\n    if (mask1 != (*(uint *)(*deviceConfig + 8) & 0xff1f0efe)) {\n      deviceConfig[10] = deviceConfig[10] & 0xffffffedU | 0x10;\n      deviceConfig[0xb] = deviceConfig[0xb] | 1;\n      return 1;\n    }\n    deviceConfig[0xb] = 0;\n    deviceConfig[10] = deviceConfig[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  deviceConfig[10] = deviceConfig[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "configure_device_0800213c",
                "param_1": "deviceConfig",
                "iVar1": "result",
                "uVar2": "mask1",
                "uVar3": "mask2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "clear_flags_and_reset_0800224c",
            "code": "\nint clearFlagsAndReset_0800224c(int *inputArray)\n\n{\n  int returnValue;\n  \n  if (inputArray == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    inputArray[10] = inputArray[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*inputArray = 0xffffffe0;\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xff3f0000;\n      *(uint *)(*inputArray + 8) = *(uint *)(*inputArray + 8) & 0xff0106f0;\n      *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xff000000;\n      *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xc0000000;\n      *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffff000;\n      *(uint *)(*inputArray + 0x18) = *(uint *)(*inputArray + 0x18) & 0xfffff000;\n      *(uint *)(*inputArray + 0x1c) = *(uint *)(*inputArray + 0x1c) & 0xfffff000;\n      *(uint *)(*inputArray + 0x20) = *(uint *)(*inputArray + 0x20) & 0xfffff000;\n      *(uint *)(*inputArray + 0x24) = *(uint *)(*inputArray + 0x24) & 0xfffff000;\n      *(uint *)(*inputArray + 0x28) = *(uint *)(*inputArray + 0x28) & 0xfffff000;\n      *(uint *)(*inputArray + 0x2c) = *(uint *)(*inputArray + 0x2c) & 0xff000000;\n      *(uint *)(*inputArray + 0x2c) = *(uint *)(*inputArray + 0x2c) & 0xff000000;\n      *(uint *)(*inputArray + 0x30) = *(uint *)(*inputArray + 0x30) & 0xc0000000;\n      *(uint *)(*inputArray + 0x34) = *(uint *)(*inputArray + 0x34) & 0xc0000000;\n      *(uint *)(*inputArray + 0x38) = *(uint *)(*inputArray + 0x38) & 0xffc00000;\n      *(uint *)(*inputArray + 0x38) = *(uint *)(*inputArray + 0x38) & 0xffc00000;\n      FUN_080049f0(inputArray);\n      inputArray[0xb] = 0;\n      inputArray[10] = 0;\n    }\n    *(undefined *)(inputArray + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "clear_flags_and_reset_0800224c",
                "param_1": "inputArray",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_status_08002348",
            "code": "\nint checkAndUpdateStatus_08002348(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_status_08002348",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "checkandupdate_flag_08002384",
            "code": "\nint checkandupdate_flag_08002384(int *input_array)\n\n{\n  uint temp1;\n  int result;\n  uint temp2;\n  int temp3;\n  int temp4;\n  int iteration_counter;\n  \n  if (*(char *)(input_array + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input_array + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    input_array[10] = input_array[10] & 0xffffeefdU | 2;\n    temp1 = DAT_20000084;\n    temp2 = FUN_08003da4(2);\n    for (iteration_counter = temp1 / temp2 << 1; iteration_counter != 0; iteration_counter = iteration_counter + -1) {\n    }\n    FUN_08001f84(input_array);\n    *(uint *)(*input_array + 8) = *(uint *)(*input_array + 8) | 8;\n    temp3 = FUN_08001cc4();\n    while (temp4 = *input_array, (*(uint *)(temp4 + 8) & 8) != 0) {\n      temp4 = FUN_08001cc4();\n      if (10 < (uint)(temp4 - temp3)) {\n        input_array[10] = input_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(input_array + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(temp4 + 8) = *(uint *)(temp4 + 8) | 4;\n    temp3 = FUN_08001cc4();\n    while ((*(uint *)(*input_array + 8) & 4) != 0) {\n      temp4 = FUN_08001cc4();\n      if (10 < (uint)(temp4 - temp3)) {\n        input_array[10] = input_array[10] & 0xffffffedU | 0x10;\n        *(undefined *)(input_array + 9) = 0;\n        return 1;\n      }\n    }\n    input_array[10] = input_array[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(input_array + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "checkandupdate_flag_08002384",
                "param_1": "input_array",
                "uVar1": "temp1",
                "iVar2": "result",
                "uVar3": "temp2",
                "iVar4": "temp3",
                "iVar5": "temp4",
                "local_14": "iteration_counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_register_value_08002470",
            "code": "\n\n\nvoid updateRegisterValue_08002470(uint input)\n\n{\n  _DAT_e000ed0c = (input & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_register_value_08002470",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_data_08002494",
            "code": "\n\n\nvoid updateData_08002494(uint inputData_1,uint inputData_2,uint inputData_3)\n\n{\n  uint shiftCount;\n  uint adjustedShiftCount;\n  \n  shiftCount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  adjustedShiftCount = 7 - shiftCount;\n  if (3 < adjustedShiftCount) {\n    adjustedShiftCount = 4;\n  }\n  if (shiftCount + 4 < 7) {\n    shiftCount = 0;\n  }\n  else {\n    shiftCount = shiftCount - 3;\n  }\n  shiftCount = (inputData_2 & (1 << (adjustedShiftCount & 0xff)) - 1U) << (shiftCount & 0xff) |\n          (1 << (shiftCount & 0xff)) - 1U & inputData_3;\n  if ((int)inputData_1 < 0) {\n    *(char *)((inputData_1 & 0xf) + 0xe000ed14) = (char)(shiftCount << 4);\n  }\n  else {\n    *(char *)(inputData_1 + 0xe000e400) = (char)(shiftCount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_data_08002494",
                "param_1": "inputData_1",
                "param_2": "inputData_2",
                "param_3": "inputData_3",
                "uVar1": "shiftCount",
                "uVar2": "adjustedShiftCount"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_in_array_080024f8",
            "code": "\nvoid setBitInArray_080024f8(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_in_array_080024f8",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int input)\n\n{\n  if (input - 1U < 0x1000000) {\n    _DAT_e000e014 = input - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "input"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_memory_08002540",
            "code": "\nvoid setBitInMemory_08002540(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_memory_08002540",
                "param_1": "bitPosition"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "set_flag_08002560",
            "code": "\n\n\nvoid setFlag_08002560(int input)\n\n{\n  if (input != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "set_flag_08002560",
                "param_1": "input"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_system_08002582",
            "code": "\nvoid initializeSystem_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_system_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "configure_parameter_0800258c",
            "code": "\n\n\nundefined4 configureParameter_0800258c(uint **parameters)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)parameters + 0x21) != '\\x02') {\n    parameters[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **parameters = **parameters & 0xfffffff1;\n  **parameters = **parameters & 0xfffffffe;\n  tempPtr = *parameters;\n  if (tempPtr == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (tempPtr == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (tempPtr == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (tempPtr == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (tempPtr == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (tempPtr == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)parameters + 0x21) = 1;\n  *(undefined *)(parameters + 8) = 0;\n  if (parameters[0xd] != (uint *)0x0) {\n    (*(code *)parameters[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "configure_parameter_0800258c",
                "param_1": "parameters",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_configuration_08002624",
            "code": "\n\n\nvoid updateConfiguration_08002624(uint *configuration,uint *updateParams)\n\n{\n  uint *currentConfigPtr;\n  uint bitMask;\n  uint checkBit;\n  uint bitIndex;\n  uint opcode;\n  uint newValue;\n  int lowNibbleIndex;\n  int registerIndex;\n  \n  newValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    checkBit = *updateParams & bitMask;\n    if (bitMask == checkBit) {\n      opcode = updateParams[1];\n      if (opcode == 0x12) {\n        newValue = updateParams[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          newValue = updateParams[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            newValue = updateParams[3];\n          }\n        }\n        else if (opcode == 3) {\n          newValue = 0;\n        }\n        else if (opcode == 0x11) {\n          newValue = updateParams[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (updateParams[2] == 0) {\n          newValue = 4;\n        }\n        else if (updateParams[2] == 1) {\n          configuration[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          configuration[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitIndex;\n      currentConfigPtr = configuration;\n      if (0xff < checkBit) {\n        bitMask = bitIndex - 8;\n        currentConfigPtr = configuration + 1;\n      }\n      *currentConfigPtr = *currentConfigPtr & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((updateParams[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        lowNibbleIndex = (bitIndex & 3) << 2;\n        if (configuration == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (configuration == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (configuration == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (configuration == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << lowNibbleIndex) | registerIndex << lowNibbleIndex;\n        if ((updateParams[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~checkBit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | checkBit;\n        }\n        if ((updateParams[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~checkBit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | checkBit;\n        }\n        if ((updateParams[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~checkBit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | checkBit;\n        }\n        if ((updateParams[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~checkBit;\n        }\n        else {\n          _DAT_4001040c = checkBit | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_configuration_08002624",
                "param_1": "configuration",
                "param_2": "updateParams",
                "puVar1": "currentConfigPtr",
                "uVar2": "bitMask",
                "uVar3": "checkBit",
                "uVar4": "bitIndex",
                "uVar5": "opcode",
                "uVar6": "newValue",
                "iVar7": "lowNibbleIndex",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int param,uint bitmask)\n\n{\n  if ((bitmask & *(uint *)(param + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "param",
                "param_2": "bitmask"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "update_parameter_value_0800281e",
            "code": "\nvoid updateParameterValue_0800281e(int baseAddress,int newValue,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(baseAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(baseAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "update_parameter_value_0800281e",
                "param_1": "baseAddress",
                "param_2": "newValue",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_permission_0800282c",
            "code": "\n\n\nvoid update_permission_0800282c(uint permission)\n\n{\n  if ((_DAT_40010414 & permission) != 0) {\n    _DAT_40010414 = permission;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_permission_0800282c",
                "param_1": "permission"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "set_flag_based_on_conditions_08002848",
            "code": "\nundefined4 setFlagBasedOnConditions_08002848(int *parameters)\n\n{\n  if (*(char *)((int)parameters + 0x3e) == '@') {\n    if (condition1 == 0) {\n      *(uint *)(*parameters + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition2 == 0x4000) {\n    if (*(char *)((int)parameters + 0x3d) == '!') {\n      *(uint *)(*parameters + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition1 == 0) {\n    *(uint *)(*parameters + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition1 == 1) {\n    *(uint *)(*parameters + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "set_flag_based_on_conditions_08002848",
                "param_1": "parameters",
                "param_1[0x14]": "condition1",
                "param_1[0x11]": "value",
                "param_1[4]": "condition2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "set_byte_from_array_080028d2",
            "code": "\nundefined4 set_byte_from_array_080028d2(int *array)\n\n{\n  *(uint *)(*array + 0x10) = array_value_at_index_0x11 & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "set_byte_from_array_080028d2",
                "param_1": "array",
                "param_1[0x11]": "array_value_at_index_0x11"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "update_permissions_080028de",
            "code": "\nundefined4 updatePermissions_080028de(uint **permissions)\n\n{\n  uint *tempVar;\n  \n  tempVar = permissions[0xb];\n  if ((*(char *)((int)permissions + 0x3d) == '\\\"') &&\n     ((secondValue != (uint *)0x0 || (*(char *)((int)permissions + 0x3e) != '@')))) {\n    if ((secondValue == (uint *)0x0) && (thirdValue == (uint *)0xc000)) {\n      **permissions = **permissions | 0x100;\n      secondValue = (uint *)((int)secondValue + 1);\n    }\n    else {\n      if (*(short *)((int)permissions + 0x2a) == 0) {\n        **permissions = **permissions | 0x200;\n      }\n      else if (*(short *)((int)permissions + 0x2a) == 1) {\n        if (tempVar == (uint *)0xffff0000) {\n          **permissions = **permissions & 0xfffffbff;\n          tempVar = *permissions;\n          if ((tempVar[1] & 0x800) == 0) {\n            *tempVar = *tempVar | 0x200;\n          }\n          else {\n            *tempVar = *tempVar & 0xfffffbff;\n          }\n        }\n        else if (((tempVar == (uint *)0x4) || (tempVar == (uint *)0x8)) ||\n                (constantD == (uint *)0x12)) {\n          **permissions = **permissions & 0xfffffbff;\n          **permissions = **permissions | 0x200;\n        }\n        else if (permissions[0xb] == (uint *)0x2) {\n          **permissions = **permissions | 0x400;\n        }\n        else {\n          **permissions = **permissions & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)permissions + 0x2a) == 2) {\n        if (permissions[0xb] == (uint *)0x2) {\n          **permissions = **permissions | 0x400;\n        }\n        else {\n          **permissions = **permissions | 0x800;\n          **permissions = **permissions & 0xfffffbff;\n        }\n        tempVar = *permissions;\n        if ((tempVar[1] & 0x800) != 0) {\n          tempVar[1] = tempVar[1] | 0x1000;\n        }\n      }\n      else {\n        **permissions = **permissions | 0x400;\n        tempVar = *permissions;\n        if ((tempVar[1] & 0x800) != 0) {\n          tempVar[1] = tempVar[1] | 0x1000;\n        }\n      }\n      secondValue = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "update_permissions_080028de",
                "param_1": "permissions",
                "puVar1": "tempVar",
                "param_1[0x14]": "secondValue",
                "param_1[4]": "thirdValue",
                "param_1[0xc]": "constantD"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_parameter_08002ab8",
            "code": "\nundefined4 updateParameter_08002ab8(int *paramArray)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    bytePointer = (byte *)paramArray[9];\n    paramArray[9] = (int)(bytePointer + 1);\n    *(uint *)(*paramArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_parameter_08002ab8",
                "param_1": "paramArray",
                "pbVar1": "bytePointer",
                "param_1[9]": "paramArray[9]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_value_and_decrement_counter_08002ad8",
            "code": "\nundefined4 updateValueAndDecrementCounter_08002ad8(int *array)\n\n{\n  undefined *tempPtr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    tempPtr = (undefined *)array[9];\n    array[9] = (int)(tempPtr + 1);\n    *tempPtr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_value_and_decrement_counter_08002ad8",
                "param_1": "array",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "process_function_08002af8",
            "code": "\nundefined4 process_function_08002af8(uint **input_pointer,uint *data_pointer,int size,uint *result_pointer)\n\n{\n  undefined4 status;\n  uint *temp_pointer;\n  \n  if (*(char *)((int)input_pointer + 0x3d) == '(') {\n    if (data_pointer == (uint *)0x0) {\n      status = 1;\n    }\n    else if (size == 0) {\n      status = 1;\n    }\n    else if (*(char *)(input_pointer + 0xf) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(input_pointer + 0xf) = 1;\n      temp_pointer = *input_pointer;\n      if ((*temp_pointer & 1) == 0) {\n        *temp_pointer = *temp_pointer | 1;\n      }\n      **input_pointer = **input_pointer & 0xfffff7ff;\n      *(undefined *)((int)input_pointer + 0x3d) = 0x29;\n      *(undefined *)((int)input_pointer + 0x3e) = 0x20;\n      status = 0;\n      input_pointer[0x10] = (uint *)0x0;\n      input_pointer[9] = data_pointer;\n      *(short *)((int)input_pointer + 0x2a) = (short)size;\n      input_pointer[0xb] = result_pointer;\n      *(undefined2 *)(input_pointer + 10) = *(undefined2 *)((int)input_pointer + 0x2a);\n      *(undefined *)(input_pointer + 0xf) = 0;\n      (*input_pointer)[1] = (*input_pointer)[1] | 0x700;\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "process_function_08002af8",
                "param_1": "input_pointer",
                "param_2": "data_pointer",
                "param_3": "size",
                "param_4": "result_pointer",
                "uVar1": "status",
                "puVar2": "temp_pointer"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "parse_input_08002b84",
            "code": "\nundefined4 parse_input_08002b84(uint **input_data,uint *optional_param,int param_length,uint *output_buffer)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (optional_param == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr = *input_data;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x2a;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = optional_param;\n      *(short *)((int)input_data + 0x2a) = (short)param_length;\n      input_data[0xb] = output_buffer;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "parse_input_08002b84",
                "param_1": "input_data",
                "param_2": "optional_param",
                "param_3": "param_length",
                "param_4": "output_buffer",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "modify_param_array_08002c10",
            "code": "\nundefined4 modify_param_array_08002c10(uint **pp_param_array)\n\n{\n  uint *p_param;\n  \n  if (*(char *)((int)pp_param_array + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)pp_param_array + 0x3d) = 0x28;\n  p_param = *pp_param_array;\n  if ((*p_param & 1) == 0) {\n    *p_param = *p_param | 1;\n  }\n  **pp_param_array = **pp_param_array | 0x400;\n  (*pp_param_array)[1] = (*pp_param_array)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "modify_param_array_08002c10",
                "param_1": "pp_param_array",
                "puVar1": "p_param"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "update_data_08002c54",
            "code": "\nundefined4 updateData_08002c54(int *data)\n\n{\n  char charValue;\n  byte *bytePtr;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)data[9];\n    data[9] = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "update_data_08002c54",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "process_parameter_08002ca6",
            "code": "\nundefined4 processParameter_08002ca6(int *inputArray)\n\n{\n  char tempChar;\n  undefined *ptr;\n  \n  tempChar = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    ptr = (undefined *)ptrArray;\n    ptrArray = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*inputArray + 0x10);\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (tempChar == '*')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      value = 0x22;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "process_parameter_08002ca6",
                "param_1": "inputArray",
                "cVar1": "tempChar",
                "puVar2": "ptr",
                "param_1[9]": "ptrArray",
                "param_1[0xc]": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *dataPtr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flags;\n  \n  flags = *(uint *)(*dataPtr + 0x18);\n  if ((flags & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(dataPtr + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(dataPtr + 6);\n  }\n  FUN_08004e74(dataPtr,(*(uint *)(*dataPtr + 0x18) & 4) == 0,selectedValue,flags,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "dataPtr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "process_param_08002d1c",
            "code": "\nundefined4 processParam_08002d1c(uint **param)\n\n{\n  if (((param[0xb] == (uint *)0x4) || (param[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[0xb] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "process_param_08002d1c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_input_08002db2",
            "code": "\nundefined4 process_input_08002db2(uint **input_data)\n\n{\n  char character;\n  uint *pointer;\n  \n  character = *(char *)((int)input_data + 0x3d);\n  pointer = pointer1;\n  if ((*(short *)(input_data + 10) == 0) && (character == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n      **input_data = **input_data | 0x200;\n      pointer2 = (uint *)0x0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      if (*(char *)((int)input_data + 0x3e) == '@') {\n        *(undefined *)((int)input_data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)input_data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n      pointer2 = (uint *)0x11;\n      *(undefined *)((int)input_data + 0x3e) = 0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)input_data + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)input_data + 0x2a) == 0) {\n      (*input_data)[1] = (*input_data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)input_data + 0x3e) == '@') {\n      if (pointer3 == (uint *)0x0) {\n        if (pointer4 == (uint *)0x1) {\n          (*input_data)[4] = (uint)pointer5 & 0xff;\n          pointer3 = (uint *)((int)pointer3 + 2);\n        }\n        else {\n          (*input_data)[4] = (uint)((int)pointer5 << 0x10) >> 0x18;\n          pointer3 = (uint *)((int)pointer3 + 1);\n        }\n      }\n      else if (pointer3 == (uint *)0x1) {\n        (*input_data)[4] = (uint)pointer5 & 0xff;\n        pointer3 = (uint *)((int)pointer3 + 1);\n      }\n      else if (pointer3 == (uint *)0x2) {\n        if (*(char *)((int)input_data + 0x3d) == '\\\"') {\n          **input_data = **input_data | 0x100;\n        }\n        else if (*(char *)((int)input_data + 0x3d) == '!') {\n          pointer = input_data[9];\n          input_data[9] = (uint *)((int)pointer + 1);\n          (*input_data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = input_data[9];\n      input_data[9] = (uint *)((int)pointer + 1);\n      (*input_data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_input_08002db2",
                "param_1": "input_data",
                "cVar1": "character",
                "puVar2": "pointer",
                "param_1[0xb]": "pointer1",
                "param_1[0xc]": "pointer2",
                "param_1[0x14]": "pointer3",
                "param_1[0x13]": "pointer4",
                "param_1[0x12]": "pointer5"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_input_08002efc",
            "code": "\nundefined4 process_input_08002efc(uint **inputs)\n\n{\n  uint *value;\n  \n  value = condition_value;\n  if (*(char *)((int)inputs + 0x3d) == '!') {\n    if (*(short *)((int)inputs + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*inputs)[1] = (*inputs)[1] & 0xfffff8ff;\n        **inputs = **inputs | 0x200;\n        value_pointer = (uint *)0x0;\n        *(undefined *)((int)inputs + 0x3d) = 0x20;\n        if (*(char *)((int)inputs + 0x3e) == '@') {\n          *(undefined *)((int)inputs + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)inputs + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*inputs)[1] = (*inputs)[1] & 0xfffff8ff;\n        value_pointer = (uint *)0x11;\n        *(undefined *)((int)inputs + 0x3e) = 0;\n        *(undefined *)((int)inputs + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      value = inputs[9];\n      inputs[9] = (uint *)((int)value + 1);\n      (*inputs)[4] = (uint)*(byte *)value;\n      *(short *)((int)inputs + 0x2a) = *(short *)((int)inputs + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_input_08002efc",
                "param_1": "inputs",
                "puVar1": "value",
                "param_1[0xb]": "condition_value",
                "param_1[0xc]": "value_pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "update_flags_and_data_08002f9c",
            "code": "\nundefined4 updateFlagsAndData_08002f9c(uint **params)\n\n{\n  uint *ptr1;\n  \n  if (*(char *)((int)params + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)params + 0x2a) < 4) {\n      if (*(ushort *)((int)params + 0x2a) - 2 < 2) {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params & 0xfffffbff;\n          **params = **params | 0x800;\n        }\n        (*params)[1] = (*params)[1] & 0xfffffbff;\n      }\n      else {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params & 0xfffffbff;\n        }\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        ptr1 = params[9];\n        params[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)(*params)[4];\n        *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        params[0xc] = (uint *)0x0;\n        if (*(char *)((int)params + 0x3e) == '@') {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      ptr1 = params[9];\n      params[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*params)[4];\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "update_flags_and_data_08002f9c",
                "param_1": "params",
                "puVar1": "ptr1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **data)\n\n{\n  uint *value;\n  \n  value = ptrValue;\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = ptrData9;\n    ptrData9 = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = ptrData9;\n    ptrData9 = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = ptrData9;\n    ptrData9 = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    value = ptrData9;\n    ptrData9 = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "data",
                "puVar1": "value",
                "param_1[0xb]": "ptrValue",
                "param_1[9]": "ptrData9"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_input_0800316c",
            "code": "\nvoid processInput_0800316c(uint **inputData)\n\n{\n  int returnValue;\n  uint *charPtr;\n  uint *inputPtr;\n  \n  if (*(byte *)((int)inputData + 0x3d) - 0x29 < 2) {\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)inputData + 0x3d) != '`') && (((*inputData)[1] & 0x800) == 0)) {\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n    }\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3e) = 0;\n  }\n  **inputData = **inputData & 0xfffff7ff;\n  inputPtr = *inputData;\n  if ((inputPtr[1] & 0x800) == 0) {\n    if (*(char *)((int)inputData + 0x3d) == '`') {\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      inputData[0x10] = (uint *)0x0;\n      if ((inputPtr[5] & 0x40) != 0) {\n        charPtr = inputData[9];\n        inputData[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)inputPtr[4];\n      }\n      **inputData = **inputData & 0xfffffffe;\n      FUNC_0800316a(inputData);\n    }\n    else {\n      if ((inputPtr[5] & 0x40) != 0) {\n        charPtr = inputData[9];\n        inputData[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)inputPtr[4];\n      }\n      FUN_08004ef4(inputData);\n    }\n  }\n  else {\n    inputPtr[1] = inputPtr[1] & 0xfffff7ff;\n    if (*(char *)((int)inputData[0xd] + 0x21) == '\\x01') {\n      inputData[0xe][0xd] = (uint)&label1;\n      returnValue = FUN_0800258c(inputData[0xe]);\n      if (returnValue != 0) {\n        if (((*inputData)[5] & 0x40) != 0) {\n          inputPtr = inputData[9];\n          inputData[9] = (uint *)((int)inputPtr + 1);\n          *(char *)inputPtr = (char)(*inputData)[4];\n        }\n        **inputData = **inputData & 0xfffffffe;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        (*(code *)inputData[0xe][0xd])();\n      }\n    }\n    else {\n      inputData[0xd][0xd] = (uint)&label1;\n      returnValue = FUN_0800258c(inputData[0xd]);\n      if (returnValue != 0) {\n        **inputData = **inputData & 0xfffffffe;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        (*(code *)inputData[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)inputData + 0x3d) == '(') && (((uint)inputData[0x10] & 4) != 0)) {\n    inputData[0xb] = (uint *)0xffff0000;\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3d) = 0x20;\n    *(undefined *)((int)inputData + 0x3e) = 0;\n    FUN_08004ec4(inputData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_input_0800316c",
                "param_1": "inputData",
                "iVar1": "returnValue",
                "puVar2": "charPtr",
                "puVar3": "inputPtr",
                "LAB_080035fc_1": "label1"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_param_080032b4",
            "code": "\nundefined4 processParam_080032b4(uint **paramList)\n\n{\n  char firstChar;\n  uint *ptrVar1;\n  uint *ptrVar2;\n  \n  firstChar = *(char *)((int)paramList + 0x3d);\n  (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n  **paramList = **paramList | 1;\n  **paramList = **paramList & 0xfffffbff;\n  ptrVar1 = *paramList;\n  if ((ptrVar1[1] & 0x800) != 0) {\n    if ((*(char *)((int)paramList + 0x3d) == '\\\"') || (*(char *)((int)paramList + 0x3d) == '*')) {\n      *(short *)((int)paramList + 0x2a) = (short)*(undefined4 *)(*paramList[0xe] + 4);\n    }\n    else {\n      *(short *)((int)paramList + 0x2a) = (short)*(undefined4 *)(*paramList[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)paramList + 0x2a) != 0) {\n    if ((ptrVar1[5] & 4) != 0) {\n      ptrVar2 = paramList[9];\n      paramList[9] = (uint *)((int)ptrVar2 + 1);\n      *(char *)ptrVar2 = (char)ptrVar1[4];\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n    if (((*paramList)[5] & 0x40) != 0) {\n      ptrVar1 = paramList[9];\n      paramList[9] = (uint *)((int)ptrVar1 + 1);\n      *(char *)ptrVar1 = (char)(*paramList)[4];\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n    paramList[0x10] = (uint *)((uint)paramList[0x10] | 4);\n  }\n  if (paramList[0x10] == (uint *)0x0) {\n    if (((firstChar == '(') || (firstChar == '*')) || (firstChar == ')')) {\n      paramList[0xb] = (uint *)0xffff0000;\n      paramList[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      *(undefined *)((int)paramList + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((paramList[0xc] == (uint *)0x22) || (firstChar == '\\\"')) {\n      paramList[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      *(undefined *)((int)paramList + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_param_080032b4",
                "param_1": "paramList",
                "cVar1": "firstChar",
                "puVar2": "ptrVar1",
                "puVar3": "ptrVar2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_data_080033b8",
            "code": "\nvoid processData_080033b8(int *data)\n\n{\n  int ptr;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  ptr = *data;\n  value3 = *(uint *)(ptr + 0x18);\n  value1 = *(uint *)(ptr + 0x14);\n  value2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_080028de(data);\n        }\n      }\n      else {\n        FUN_080028d2(data);\n      }\n    }\n    else {\n      FUN_08002848(data);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002f9c(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_0800306c(data);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002db2(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002efc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_080032b4(data);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002ca6(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ad8(data);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002c54(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ab8(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_data_080033b8",
                "param_1": "data",
                "iVar1": "ptr",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "process_data_08003520",
            "code": "\nvoid processData_08003520(uint **paramArray)\n\n{\n  char charVar;\n  uint *ptrVar;\n  uint var1;\n  uint var2;\n  \n  ptrVar = *paramArray;\n  var1 = ptrVar[5];\n  var2 = ptrVar[1];\n  if (((var1 & 0x10100) != 0) && ((var2 & 0x100) != 0)) {\n    paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 1);\n    ptrVar[5] = 0xfffffeff;\n    **paramArray = **paramArray | 0x8000;\n  }\n  if (((var1 & 0x10200) != 0) && ((var2 & 0x100) != 0)) {\n    paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 2);\n    (*paramArray)[5] = 0xfffffdff;\n  }\n  if (((var1 & 0x10400) != 0) && ((var2 & 0x100) != 0)) {\n    charVar = *(char *)((int)paramArray + 0x3d);\n    if (((*(char *)((int)paramArray + 0x3e) == ' ') && (*(short *)((int)paramArray + 0x2a) == 0)) &&\n       (((charVar == '!' || (charVar == ')')) || ((charVar == '(' && (paramArray[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(paramArray);\n    }\n    else {\n      paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 4);\n      if (*(char *)((int)paramArray + 0x3e) == '\\x10') {\n        **paramArray = **paramArray | 0x200;\n      }\n      (*paramArray)[5] = 0xfffffbff;\n    }\n  }\n  if (((var1 & 0x10800) != 0) && ((var2 & 0x100) != 0)) {\n    paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 8);\n    (*paramArray)[5] = 0xfffff7ff;\n  }\n  if (paramArray[0x10] != (uint *)0x0) {\n    FUN_0800316c(paramArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "process_data_08003520",
                "param_1": "paramArray",
                "cVar1": "charVar",
                "puVar2": "ptrVar",
                "uVar3": "var1",
                "uVar4": "var2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "wait_until_zero_0800365c",
            "code": "\nvoid waitUntilZero_0800365c(int input)\n\n{\n  bool isNonZero;\n  int counter;\n  \n  counter = input * (DAT_20000084 / 8000);\n  do {\n    isNonZero = counter != 0;\n    counter = counter + -1;\n  } while (isNonZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "wait_until_zero_0800365c",
                "param_1": "input",
                "local_4": "counter",
                "bVar1": "isNonZero"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_status_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08003688(uint *statusArray)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint tempValue;\n  bool isFlagSet;\n  \n  if ((*statusArray & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (statusArray[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      tempValue = statusArray[1];\n      if (tempValue == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (tempValue == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (tempValue == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (statusArray[1] == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*statusArray & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (statusArray[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusArray[5] << 3;\n    }\n    else if (statusArray[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusArray[5] << 3;\n    }\n  }\n  if ((*statusArray & 8) != 0) {\n    if (statusArray[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*statusArray & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    tempValue = statusArray[3];\n    if (tempValue == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (tempValue == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (tempValue == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (statusArray[3] == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (statusArray[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (statusArray[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (statusArray[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | statusArray[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | statusArray[8] | statusArray[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_status_08003688",
                "param_1": "statusArray",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "tempValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_execution_time_08003a68",
            "code": "\n\n\nuint calculateExecutionTime_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 executionType;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  value4 = 0x10100f0e;\n  value3 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  value1 = 0x5040302;\n  executionType = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&value1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&executionType - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_execution_time_08003a68",
                "local_1c": "executionType",
                "uStack_18": "value1",
                "uStack_14": "value2",
                "uStack_10": "value3",
                "uStack_c": "value4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "set_data_config_08003ad4",
            "code": "\n\n\nundefined4 set_data_config_08003ad4(uint *data_config,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint status;\n  \n  if ((_DAT_40022000 & 7) < config_size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*data_config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data_config[2];\n  }\n  if ((*data_config & 1) != 0) {\n    status = data_config[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    start_time = FUN_08001cc4();\n    if (data_config[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (data_config[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (config_size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | config_size;\n    if (config_size != (config_size & 7)) {\n      return 1;\n    }\n  }\n  if ((*data_config & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data_config[3];\n  }\n  if ((*data_config & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data_config[4] << 3;\n  }\n  status = FUN_08003a68();\n  DAT_20000084 = status >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "set_data_config_08003ad4",
                "param_1": "data_config",
                "param_2": "config_size",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "update_control_value_08003afa",
            "code": "\n\n\nundefined4 updateControlValue_08003afa(uint *controlFlags,uint maxValue)\n\n{\n  int initialTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((*controlFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | controlFlags[2];\n  }\n  if ((*controlFlags & 1) != 0) {\n    tempValue = controlFlags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08001cc4();\n    if (controlFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (controlFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (maxValue < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | maxValue;\n    if (maxValue != (maxValue & 7)) {\n      return 1;\n    }\n  }\n  if ((*controlFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | controlFlags[3];\n  }\n  if ((*controlFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | controlFlags[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "update_control_value_08003afa",
                "param_1": "controlFlags",
                "param_2": "maxValue",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_data_08003c44",
            "code": "\nundefined4 getGlobalData_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_data_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_by_index_08003c50",
            "code": "\n\n\nuint shiftedValueByIndex_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_by_index_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "calculate_shifted_value_08003c70",
            "code": "\n\n\nuint calculateShiftedValue_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "calculate_shifted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "configure_hardware_08003c90",
            "code": "\n\n\nundefined4 configureHardware_08003c90(uint *hardwareSettings)\n\n{\n  uint flag1;\n  uint flag2;\n  int startTime;\n  int currentTime;\n  bool isFlagSet;\n  \n  if ((*hardwareSettings & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (hardwareSettings[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentTime = FUN_08001cc4();\n          if (5000 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | hardwareSettings[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*hardwareSettings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | hardwareSettings[2];\n  }\n  if ((*hardwareSettings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | hardwareSettings[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "configure_hardware_08003c90",
                "param_1": "hardwareSettings",
                "uVar1": "flag1",
                "uVar2": "flag2",
                "iVar3": "startTime",
                "iVar4": "currentTime",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_function_value_08003da4",
            "code": "\n\n\nuint calculateFunctionValue_08003da4(int inputValue)\n\n{\n  uint result;\n  undefined2 constantValue;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  undefined4 tempValue3;\n  undefined4 tempValue4;\n  \n  tempValue4 = 0x10100f0e;\n  tempValue3 = 0xd0c0b0a;\n  tempValue2 = 0x9080706;\n  tempValue1 = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&tempValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_function_value_08003da4",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "constantValue",
                "uStack_20": "tempValue1",
                "uStack_1c": "tempValue2",
                "uStack_18": "tempValue3",
                "uStack_14": "tempValue4"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_flags_08003ea0",
            "code": "\n\n\nvoid initializeFlags_08003ea0(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_flags_08003ea0",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_data_08003ed8",
            "code": "\nvoid updateData_08003ed8(uint **pointerToData)\n\n{\n  uint *dataPointer;\n  \n  *(undefined *)((int)pointerToData + 0x3d) = 2;\n  dataPointer = *pointerToData;\n  if ((dataPointer[8] & 0x1111) == 0) {\n    if ((dataPointer[8] & 0x444) == 0) {\n      *dataPointer = *dataPointer & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(pointerToData);\n  *(undefined *)((int)pointerToData + 0x3d) = 0;\n  *(undefined *)(pointerToData + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_data_08003ed8",
                "param_1": "pointerToData",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_flags_08003f18",
            "code": "\nvoid processFlags_08003f18(int *flags)\n\n{\n  int var1;\n  \n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 2) != 0) && ((*(uint *)(var1 + 0xc) & 2) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 4) != 0) && ((*(uint *)(var1 + 0xc) & 4) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 8) != 0) && ((*(uint *)(var1 + 0xc) & 8) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 0x10) != 0) && ((*(uint *)(var1 + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(flags);\n      FUNC_08003f14(flags);\n    }\n    else {\n      FUNC_08003f12(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 1) != 0) && ((*(uint *)(var1 + 0xc) & 1) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffe;\n    FUN_08004e12(flags);\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 0x80) != 0) && ((*(uint *)(var1 + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffff7f;\n    FUNC_0800417a(flags);\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 0x40) != 0) && ((*(uint *)(var1 + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffbf;\n    FUNC_08003f16(flags);\n  }\n  var1 = *flags;\n  if (((*(uint *)(var1 + 0x10) & 0x20) != 0) && ((*(uint *)(var1 + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffdf;\n    FUNC_08004178(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_flags_08003f18",
                "param_1": "flags",
                "iVar1": "var1"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bit_in_integer_08004092",
            "code": "\nvoid updateBitInInteger_08004092(int data,uint bitIndex,int bitValue)\n\n{\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) | bitValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bit_in_integer_08004092",
                "param_1": "data",
                "param_2": "bitIndex",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "initialize_variables_080040b0",
            "code": "\nundefined4 initializeVariables_080040b0(uint **input,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_08004092(*input,value,0);\n  if (((*input == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  pointer = *input;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)input + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "initialize_variables_080040b0",
                "param_1": "input",
                "param_2": "value",
                "puVar1": "pointer",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "set_bits_in_memory_08004110",
            "code": "\nvoid setBitsInMemory_08004110(int memoryAddress,uint bitPosition,int bitsToSet)\n\n{\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) | bitsToSet << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "set_bits_in_memory_08004110",
                "param_1": "memoryAddress",
                "param_2": "bitPosition",
                "param_3": "bitsToSet"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_flags_and_values_0800412c",
            "code": "\nundefined4 updateFlagsAndValues_0800412c(uint **input,undefined4 new_value)\n\n{\n  uint *pointer;\n  \n  FUN_08004110(*input,new_value,0);\n  pointer = *input;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    pointer[0x11] = pointer[0x11] & 0xffff7fff;\n  }\n  pointer = *input;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_0800412c",
                "param_1": "input",
                "param_2": "new_value",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "update_param_values_0800417c",
            "code": "\nvoid updateParamValues_0800417c(int *paramList)\n\n{\n  *(uint *)(*paramList + 0xc) = *(uint *)(*paramList + 0xc) & 0xfffffedf;\n  *(uint *)(*paramList + 0x14) = *(uint *)(*paramList + 0x14) & 0xfffffffe;\n  *(undefined *)((int)paramList + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "update_param_values_0800417c",
                "param_1": "paramList"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "process_data_08004198",
            "code": "\nundefined4 processData_08004198(int *inputData)\n\n{\n  short counter;\n  byte *bytePtr;\n  \n  if (*(char *)((int)inputData + 0x39) != '!') {\n    return 2;\n  }\n  if (inputData[2] == 0x1000) {\n    *(uint *)(*inputData + 4) = *(ushort *)inputData[8] & 0x1ff;\n    if (inputData[4] == 0) {\n      inputData[8] = inputData[8] + 2;\n    }\n    else {\n      inputData[8] = inputData[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)inputData[8];\n    inputData[8] = (int)(bytePtr + 1);\n    *(uint *)(*inputData + 4) = (uint)*bytePtr;\n  }\n  counter = *(short *)((int)inputData + 0x26) + -1;\n  *(short *)((int)inputData + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xffffff7f;\n    *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "inputData",
                "sVar1": "counter",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_new_values_08004204",
            "code": "\nvoid calculateNewValues_08004204(int *input)\n\n{\n  int calculation1;\n  int calculation2;\n  int calculation3;\n  int calculation4;\n  int calculation5;\n  int calculation6;\n  int calculation7;\n  int calculation8;\n  int calculation9;\n  int calculation10;\n  \n  *(uint *)(*input + 0x10) = *(uint *)(*input + 0x10) & 0xffffcfff | input[3];\n  *(uint *)(*input + 0xc) =\n       input[2] | input[4] | input[5] | *(uint *)(*input + 0xc) & 0xffffe9f3;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffcff | input[6];\n  calculation10 = *input;\n  if (calculation10 != 0x40013800) {\n    calculation1 = FUN_08003c50();\n    calculation6 = input[1];\n    calculation2 = FUN_08003c50();\n    calculation7 = input[1];\n    calculation3 = FUN_08003c50();\n    calculation8 = input[1];\n    calculation4 = FUN_08003c50();\n    calculation9 = input[1];\n    calculation5 = FUN_08003c50();\n    *(uint *)(calculation10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(calculation4 * 0x19) / (uint)(calculation9 << 2) +\n                        (int)(((ulonglong)(uint)(calculation5 * 0x19) / (ulonglong)(uint)(input[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(calculation2 * 0x19) / (uint)(calculation7 << 2) +\n           (int)(((ulonglong)(uint)(calculation3 * 0x19) / (ulonglong)(uint)(calculation8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(calculation1 * 0x19) / (ulonglong)(uint)(calculation6 << 2)) / 100) * 0x10;\n    return;\n  }\n  calculation10 = FUN_08003c70();\n  calculation5 = input[1];\n  calculation1 = FUN_08003c70();\n  calculation6 = input[1];\n  calculation2 = FUN_08003c70();\n  calculation7 = input[1];\n  calculation3 = FUN_08003c70();\n  calculation8 = input[1];\n  calculation4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(calculation3 * 0x19) / (uint)(calculation8 << 2) +\n                                (int)(((ulonglong)(uint)(calculation4 * 0x19) /\n                                      (ulonglong)(uint)(input[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(calculation1 * 0x19) / (uint)(calculation6 << 2) +\n                   (int)(((ulonglong)(uint)(calculation2 * 0x19) / (ulonglong)(uint)(calculation7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(calculation10 * 0x19) / (ulonglong)(uint)(calculation5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_new_values_08004204",
                "param_1": "input",
                "iVar1": "calculation1",
                "iVar2": "calculation2",
                "iVar3": "calculation3",
                "iVar4": "calculation4",
                "iVar5": "calculation5",
                "iVar6": "calculation6",
                "iVar7": "calculation7",
                "iVar8": "calculation8",
                "iVar9": "calculation9",
                "iVar10": "calculation10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_parameters_080043b4",
            "code": "\nundefined4 check_parameters_080043b4(uint **ptr_param,uint param_val1,uint param_val2,int param_val3,uint param_val4)\n\n{\n  int result;\n  \n  do {\n    if (((param_val1 & ~**ptr_param) == 0) != param_val2) {\n      return 0;\n    }\n  } while ((param_val4 == 0xffffffff) ||\n          ((param_val4 != 0 && (result = FUN_08001cc4(), (uint)(result - param_val3) <= param_val4))));\n  (*ptr_param)[3] = (*ptr_param)[3] & 0xfffffe5f;\n  (*ptr_param)[5] = (*ptr_param)[5] & 0xfffffffe;\n  *(undefined *)((int)ptr_param + 0x39) = 0x20;\n  *(undefined *)((int)ptr_param + 0x3a) = 0x20;\n  *(undefined *)(ptr_param + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_parameters_080043b4",
                "param_1": "ptr_param",
                "param_2": "param_val1",
                "param_3": "param_val2",
                "param_4": "param_val3",
                "param_5": "param_val4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_struct_0800441a",
            "code": "\nundefined4 initialize_data_struct_0800441a(int *data_struct)\n\n{\n  if (data_struct != (int *)0x0) {\n    if (*(char *)((int)data_struct + 0x39) == '\\0') {\n      *(undefined *)(data_struct + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)data_struct + 0x39) = 0x24;\n    *(uint *)(*data_struct + 0xc) = *(uint *)(*data_struct + 0xc) & 0xffffdfff;\n    FUN_08004204(data_struct);\n    *(uint *)(*data_struct + 0x10) = *(uint *)(*data_struct + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_struct + 0x14) = *(uint *)(*data_struct + 0x14) & 0xffffffd5;\n    *(uint *)(*data_struct + 0xc) = *(uint *)(*data_struct + 0xc) | 0x2000;\n    count = 0;\n    *(undefined *)((int)data_struct + 0x39) = 0x20;\n    *(undefined *)((int)data_struct + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_struct_0800441a",
                "param_1": "data_struct",
                "param_1[0xf]": "count"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_input_08004478",
            "code": "\nundefined4 processInput_08004478(int *inputArray,ushort *inputString,int inputSize,undefined4 param4)\n\n{\n  int result;\n  undefined4 output;\n  \n  if (*(char *)((int)inputArray + 0x39) == ' ') {\n    if (inputString == (ushort *)0x0) {\n      output = 1;\n    }\n    else if (inputSize == 0) {\n      output = 1;\n    }\n    else if (*(char *)(inputArray + 0xe) == '\\x01') {\n      output = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xe) = 1;\n      inputArray[0xf] = 0;\n      *(undefined *)((int)inputArray + 0x39) = 0x21;\n      output = FUN_08001cc4();\n      *(short *)(inputArray + 9) = (short)inputSize;\n      *(short *)((int)inputArray + 0x26) = (short)inputSize;\n      while (*(short *)((int)inputArray + 0x26) != 0) {\n        *(short *)((int)inputArray + 0x26) = *(short *)((int)inputArray + 0x26) + -1;\n        if (inputArray[2] == 0x1000) {\n          result = FUN_080043b4(inputArray,0x80,0,output,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = *inputString & 0x1ff;\n          if (inputArray[4] == 0) {\n            inputString = inputString + 1;\n          }\n          else {\n            inputString = (ushort *)((int)inputString + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(inputArray,0x80,0,output,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = (uint)*(byte *)inputString;\n          inputString = (ushort *)((int)inputString + 1);\n        }\n      }\n      result = FUN_080043b4(inputArray,0x40,0,output,param4);\n      if (result == 0) {\n        *(undefined *)((int)inputArray + 0x39) = 0x20;\n        *(undefined *)(inputArray + 0xe) = 0;\n        output = 0;\n      }\n      else {\n        output = 3;\n      }\n    }\n  }\n  else {\n    output = 2;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_input_08004478",
                "param_1": "inputArray",
                "param_2": "inputString",
                "param_3": "inputSize",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "output"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "process_params_0800455a",
            "code": "\nundefined4 processParams_0800455a(int *parameters,int value1,int value2)\n\n{\n  if (*(char *)((int)parameters + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(parameters + 0xe) != '\\x01') {\n    param8 = value1;\n    *(short *)(parameters + 9) = (short)value2;\n    *(short *)((int)parameters + 0x26) = (short)value2;\n    param15 = 0;\n    *(undefined *)((int)parameters + 0x39) = 0x21;\n    *(undefined *)(parameters + 0xe) = 0;\n    *(uint *)(*parameters + 0xc) = *(uint *)(*parameters + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "process_params_0800455a",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "param8",
                "param_1[0xf]": "param15"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_params_080045a2",
            "code": "\nundefined4 validateParams_080045a2(int *paramArray,int intParam,int shortParam)\n\n{\n  if (*(char *)((int)paramArray + 0x3a) != ' ') {\n    return 2;\n  }\n  if (intParam == 0) {\n    return 1;\n  }\n  if (shortParam == 0) {\n    return 1;\n  }\n  if (*(char *)(paramArray + 0xe) != '\\x01') {\n    paramArray[10] = intParam;\n    *(short *)(paramArray + 0xb) = (short)shortParam;\n    *(short *)((int)paramArray + 0x2e) = (short)shortParam;\n    paramArray[0xf] = 0;\n    *(undefined *)((int)paramArray + 0x3a) = 0x22;\n    *(undefined *)(paramArray + 0xe) = 0;\n    *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) | 0x100;\n    *(uint *)(*paramArray + 0x14) = *(uint *)(*paramArray + 0x14) | 1;\n    *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_params_080045a2",
                "param_1": "paramArray",
                "param_2": "intParam",
                "param_3": "shortParam",
                "param_1[10]": "paramArray[10]",
                "param_1[0xf]": "paramArray[0xf]"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "set_flag_and_invoke_function_080045fe",
            "code": "\nundefined4 setFlagAndInvokeFunction_080045fe(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)pointer + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "set_flag_and_invoke_function_080045fe",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_string_08004618",
            "code": "\nundefined4 process_string_08004618(int *input_data)\n\n{\n  byte *byte_pointer;\n  short count;\n  undefined *undefined_pointer;\n  \n  if (*(char *)((int)input_data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input_data[2] == 0x1000) {\n    if (input_data[4] == 0) {\n      *(ushort *)input_data[10] = (ushort)((uint)(*(int *)(*input_data + 4) << 0x17) >> 0x17);\n      input_data[10] = input_data[10] + 2;\n    }\n    else {\n      *(ushort *)input_data[10] = (ushort)*(undefined4 *)(*input_data + 4) & 0xff;\n      input_data[10] = input_data[10] + 1;\n    }\n  }\n  else if (input_data[4] == 0) {\n    undefined_pointer = (undefined *)input_data[10];\n    input_data[10] = (int)(undefined_pointer + 1);\n    *undefined_pointer = (char)*(undefined4 *)(*input_data + 4);\n  }\n  else {\n    byte_pointer = (byte *)input_data[10];\n    input_data[10] = (int)(byte_pointer + 1);\n    *byte_pointer = (byte)*(undefined4 *)(*input_data + 4) & 0x7f;\n  }\n  count = *(short *)((int)input_data + 0x2e) + -1;\n  *(short *)((int)input_data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xffffffdf;\n  *(uint *)(*input_data + 0xc) = *(uint *)(*input_data + 0xc) & 0xfffffeff;\n  *(uint *)(*input_data + 0x14) = *(uint *)(*input_data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input_data + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_string_08004618",
                "param_1": "input_data",
                "pbVar1": "byte_pointer",
                "sVar2": "count",
                "puVar3": "undefined_pointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_flags_080046b8",
            "code": "\nvoid processFlags_080046b8(uint **flags)\n\n{\n  int result;\n  uint flagValue;\n  uint *ptrToFlags;\n  uint flagCheck;\n  uint flag;\n  \n  ptrToFlags = *flags;\n  flag = *ptrToFlags;\n  flagValue = ptrToFlags[3];\n  if ((((flag & 0xf) == 0) && ((flag & 0x20) != 0)) && ((flagValue & 0x20) != 0)) {\n    FUN_08004618(flags);\n    return;\n  }\n  if (((flag & 0xf) == 0) || ((flagCheck = ptrToFlags[5] & 1, flagCheck == 0 && ((flagValue & 0x120) == 0)))) {\n    if (((flag & 0x80) != 0) && ((flagValue & 0x80) != 0)) {\n      FUN_08004198(flags);\n      return;\n    }\n    if (((flag & 0x40) != 0) && ((flagValue & 0x40) != 0)) {\n      FUN_080045fe(flags);\n    }\n  }\n  else {\n    if (((flag & 1) != 0) && ((flagValue & 0x100) != 0)) {\n      resultFlags = (uint *)((uint)resultFlags | 1);\n    }\n    if (((flag & 4) != 0) && (flagCheck != 0)) {\n      resultFlags = (uint *)((uint)resultFlags | 2);\n    }\n    if (((flag & 2) != 0) && (flagCheck != 0)) {\n      resultFlags = (uint *)((uint)resultFlags | 4);\n    }\n    if (((flag & 8) != 0) && (flagCheck != 0)) {\n      resultFlags = (uint *)((uint)resultFlags | 8);\n    }\n    if (resultFlags != (uint *)0x0) {\n      if (((flag & 0x20) != 0) && ((flagValue & 0x20) != 0)) {\n        FUN_08004618(flags);\n      }\n      if ((((uint)resultFlags & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_08005650(flags);\n        resultFlags = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(flags);\n      ptrToFlags = *flags;\n      if ((ptrToFlags[5] & 0x40) == 0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      ptrToFlags[5] = ptrToFlags[5] & 0xffffffbf;\n      if (ptrToData == (uint *)0x0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      ptrToData[0xd] = (uint)&label;\n      result = FUN_0800258c(ptrToData);\n      if (result != 0) {\n        (*(code *)ptrToData[0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_flags_080046b8",
                "param_1": "flags",
                "iVar1": "result",
                "uVar2": "flagValue",
                "puVar3": "ptrToFlags",
                "uVar4": "flagCheck",
                "uVar5": "flag",
                "param_1[0xf]": "resultFlags",
                "param_1[0xd]": "ptrToData",
                "param_1[0xd][0xd]": "ptrToData[0xd]",
                "LAB_080047d8_1": "label"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "read_bit_from_offset_080047f4",
            "code": "\nuint read_bit_from_offset_080047f4(uint value,int pointer)\n\n{\n  return *(uint *)(pointer + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "read_bit_from_offset_080047f4",
                "param_1": "value",
                "param_2": "pointer"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "update_bit_value_0800480a",
            "code": "\nvoid updateBitValue_0800480a(uint bitIndex,int dataArray)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(dataArray + shiftedIndex * 4) = *(uint *)(dataArray + shiftedIndex * 4) | 1 << (bitIndex & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "update_bit_value_0800480a",
                "param_1": "bitIndex",
                "param_2": "dataArray",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "clear_bit_in_array_08004828",
            "code": "\nvoid clearBitInArray_08004828(uint bitIndex,int array)\n\n{\n  uint byteIndex;\n  \n  byteIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(array + byteIndex * 4) = *(uint *)(array + byteIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "clear_bit_in_array_08004828",
                "param_1": "bitIndex",
                "param_2": "array",
                "uVar1": "byteIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_address_08004848",
            "code": "\nundefined4 getMemoryAddress_08004848(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_memory_permissions_08004884",
            "code": "\n\n\nundefined4 setMemoryPermissions_08004884(undefined4 permissionIndex)\n\n{\n  undefined4 result;\n  \n  switch(permissionIndex) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    result = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    result = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    result = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    result = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    result = 0x40011800;\n    break;\n  default:\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_memory_permissions_08004884",
                "param_1": "permissionIndex",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "get_shifted_bits_0800492c",
            "code": "\nuint getShiftedBits_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "get_shifted_bits_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "determine_return_value_08004948",
            "code": "\nundefined4 determineReturnValue_08004948(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_080074b4,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "determine_return_value_08004948",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_flags_and_call_function_08004974",
            "code": "\n\n\nvoid updateFlagsAndCallFunction_08004974(int *ptr,undefined4 value)\n\n{\n  undefined4 result;\n  uint flags;\n  int valueToCheck;\n  uint bitMask;\n  undefined4 constant3;\n  undefined4 constant0;\n  \n  valueToCheck = *ptr;\n  if (valueToCheck == 0x40012400) {\n    flags = _DAT_40021018 | 0x200;\n    valueToCheck = 0x200;\n    _DAT_40021018 = flags;\n  }\n  else {\n    flags = 0x40012800;\n    if (valueToCheck == 0x40012800) {\n      flags = _DAT_40021018 | 0x400;\n      valueToCheck = 0x400;\n      _DAT_40021018 = flags;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,value,flags,valueToCheck);\n  bitMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  constant3 = 3;\n  constant0 = 0;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_flags_and_call_function_08004974",
                "param_1": "ptr",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "flags",
                "iVar3": "valueToCheck",
                "local_18": "bitMask",
                "local_14": "constant3",
                "local_10": "constant0"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "set_control_values_080049f0",
            "code": "\n\n\nvoid setControlValues_080049f0(int *data)\n\n{\n  if (*data != 0x40012400) {\n    if (*data == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "set_control_values_080049f0",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "check_input_validity_08004a4c",
            "code": "\nundefined2 check_input_validity_08004a4c(undefined4 input_value)\n\n{\n  int result;\n  uint flags;\n  undefined2 is_valid;\n  uint string_length;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 constant;\n  undefined4 temp7;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  string_length = 0;\n  flag1 = 0;\n  flag2 = 0;\n  is_valid = 0;\n  buffer = FUN_08004c78(input_value,&DAT_08007400);\n  if (buffer == 0) {\n    is_valid = 0;\n  }\n  else {\n    temp1 = 0;\n    temp2 = 0;\n    temp3 = 0;\n    temp5 = 0;\n    constant = 0xe0000;\n    temp7 = 0;\n    temp4 = 1;\n    temp6 = 0;\n    DAT_20000080 = (undefined)input_value;\n    result = FUN_0800213c(&buffer);\n    if (result == 0) {\n      string_length = FUN_0800492c(input_value);\n      if (string_length < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_08001e48(&buffer,&string_length);\n        if (result == 0) {\n          result = FUN_08002384(&buffer);\n          if (result == 0) {\n            result = FUN_08002004(&buffer);\n            if (result == 0) {\n              result = FUN_08001cd0(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08001f80(&buffer);\n                if ((flags & 0x200) != 0) {\n                  is_valid = FUN_08001e40(&buffer);\n                }\n                result = FUN_08002348(&buffer);\n                if (result == 0) {\n                  result = FUN_0800224c(&buffer);\n                  if (result != 0) {\n                    is_valid = 0;\n                  }\n                }\n                else {\n                  is_valid = 0;\n                }\n              }\n              else {\n                is_valid = 0;\n              }\n            }\n            else {\n              is_valid = 0;\n            }\n          }\n          else {\n            is_valid = 0;\n          }\n        }\n        else {\n          is_valid = 0;\n        }\n      }\n      else {\n        is_valid = 0;\n      }\n    }\n    else {\n      is_valid = 0;\n    }\n  }\n  return is_valid;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "check_input_validity_08004a4c",
                "param_1": "input_value",
                "iVar1": "result",
                "uVar2": "flags",
                "local_46": "is_valid",
                "local_44": "string_length",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "temp1",
                "local_30": "temp2",
                "local_2c": "temp3",
                "local_28": "temp4",
                "local_24": "temp5",
                "local_20": "temp6",
                "local_1c": "constant",
                "local_10": "temp7"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_program_08004b34",
            "code": "\nvoid initializeProgram_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_program_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_binary_function_08004b3c",
            "code": "\nvoid processBinaryFunction_08004b3c(undefined4 inputParameter)\n\n{\n  int result;\n  uint flags;\n  int arrayData [17];\n  \n  arrayData[0] = FUN_08004c78(inputParameter,&DAT_080074b4);\n  if ((arrayData[0] != 0) &&\n     ((((result = FUN_08004948(inputParameter), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(inputParameter,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(arrayData,result);\n    }\n    else {\n      FUN_0800412c(arrayData,result);\n    }\n    FUN_08003ed8(arrayData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_binary_function_08004b3c",
                "param_1": "inputParameter",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "arrayData"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_08004b94",
            "code": "\nvoid initialize_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_08004b9e",
            "code": "\nvoid initialize_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "initialize_peripheral_08004bb0",
            "code": "\n\n\nvoid initializePeripheral_08004bb0(uint peripheralId,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 configValue;\n  uint bitmask;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  configValue = FUN_08004884((peripheralId << 0x18) >> 0x1c);\n  bitmask = 1 << (peripheralId & 0xf) & 0xffff;\n  localVar3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((peripheralId - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((peripheralId == 0xf) || (peripheralId == 0x13)) || (peripheralId == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVar1 = param2;\n  localVar2 = param3;\n  FUN_08002624(configValue,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "initialize_peripheral_08004bb0",
                "param_1": "peripheralId",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "configValue",
                "local_20": "bitmask",
                "local_1c": "localVar1",
                "local_18": "localVar2",
                "local_14": "localVar3"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "execute_action_based_on_parameter_08004c30",
            "code": "\nvoid executeActionBasedOnParameter_08004c30(undefined4 action,undefined2 value,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_0800281e(action,value,0,data,data);\n    return;\n  }\n  FUN_0800281e(action,value,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "execute_action_based_on_parameter_08004c30",
                "param_1": "action",
                "param_2": "value",
                "param_3": "condition",
                "param_4": "data"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_connections_08004c48",
            "code": "\nvoid initializeConnections_08004c48(undefined4 connectionPointer,undefined2 connectionID,undefined4 inputParam1,undefined4 inputParam2)\n\n{\n  FUN_08002810(connectionPointer,connectionID,inputParam1,inputParam2,inputParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_connections_08004c48",
                "param_1": "connectionPointer",
                "param_2": "connectionID",
                "param_3": "inputParam1",
                "param_4": "inputParam2"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_08004c52",
            "code": "\nvoid initialize_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_param_08004c5e",
            "code": "\nundefined4 find_param_08004c5e(int target,char *data)\n\n{\n  while( true ) {\n    if (*data == -1) {\n      return 0;\n    }\n    if (*data == target) break;\n    data = data + 0xc;\n  }\n  return *(undefined4 *)(data + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_param_08004c5e",
                "param_1": "target",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_parameter_value_and_return_value_08004c78",
            "code": "\nundefined4 checkParameterValueAndReturnValue_08004c78(int value)\n\n{\n  undefined4 returnValue;\n  \n  if (value != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_parameter_value_and_return_value_08004c78",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_value_in_list_08004c8a",
            "code": "\nint find_value_in_list_08004c8a(int value,char *list)\n\n{\n  while( true ) {\n    if (*(int *)(list + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(list + 4) == value) break;\n    list = list + 0xc;\n  }\n  return (int)*list;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_value_in_list_08004c8a",
                "param_1": "value",
                "param_2": "list"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_param_value_08004ca2",
            "code": "\nundefined4 checkParamValue_08004ca2(int value)\n\n{\n  undefined4 returnValue;\n  \n  if (value != 0) {\n    returnValue = FUN_08004c8a();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_param_value_08004ca2",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_param_value_08004cb2",
            "code": "\nundefined4 find_param_value_08004cb2(int target_value,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0xffffffff;\n    }\n    if (*data_array == target_value) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_param_value_08004cb2",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_return_value_08004cce",
            "code": "\nundefined4 checkReturnValue_08004cce(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_return_value_08004cce",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_08004ce2",
            "code": "\nundefined4 find_value_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_08004d06",
            "code": "\nint compareAndReturn_08004d06(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_function_08004d18",
            "code": "\nvoid execute_callback_function_08004d18(void)\n\n{\n  if (DAT_20000260 != (callback_function *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18",
                "code": "callback_function"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_hardware_08004d44",
            "code": "\n\n\nvoid initializeHardware_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_hardware_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_flags_08004d90",
            "code": "\n\n\nvoid updateFlags_08004d90(int *input)\n\n{\n  if (*input == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*input == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*input == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*input == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_flags_08004d90",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "decrement_08004df4",
            "code": "\nint decrement_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "decrement_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackData)\n\n{\n  int callback;\n  \n  callback = FUN_08004df4();\n  if ((*(code **)(callback + 0x4c) != (code *)0x0) && (*(char *)(callbackData + 0x1c) == '\\x01')) {\n    (**(code **)(callback + 0x4c))(callback,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackData",
                "iVar1": "callback"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "call_function_if_not_null_08004e12",
            "code": "\nvoid callFunctionIfNotNull_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(code **)(result + 0x48) != (code *)0x0) {\n    (**(code **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "call_function_if_not_null_08004e12",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_data_and_execute_08004e20",
            "code": "\nvoid checkDataAndExecute_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_data_and_execute_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtractFour_08004e70(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "process_data_08004e74",
            "code": "\nvoid processData_08004e74(int inputData,int flag,int paramValue,undefined4 param4)\n\n{\n  int tempVar;\n  \n  tempVar = FUN_08004e70();\n  if (paramValue == *(int *)(inputData + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(tempVar + 0x88) = 0;\n      *(undefined *)(tempVar + 0x5c) = 0;\n      if (*(code **)(tempVar + 100) != (code *)0x0) {\n        (**(code **)(tempVar + 100))();\n      }\n      FUN_08002af8(inputData,tempVar + 0x68,*(undefined *)(tempVar + 0x88),8);\n      return;\n    }\n    *(undefined *)(tempVar + 0x5c) = 1;\n    FUN_08002b84(inputData,tempVar + 0x68,0x20,8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "process_data_08004e74",
                "param_1": "inputData",
                "param_2": "flag",
                "param_3": "paramValue",
                "param_4": "param4",
                "iVar1": "tempVar"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_function_if_conditions_met_08004ec4",
            "code": "\nvoid execute_function_if_conditions_met_08004ec4(undefined4 input_arg)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (((*(function_type **)(result + 0x60) != (function_type *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function_type **)(result + 0x60))(result + 0x68);\n  }\n  FUN_08002c10(input_arg);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_function_if_conditions_met_08004ec4",
                "param_1": "input_arg",
                "iVar1": "result",
                "code": "function_type"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_call_function_08004ef4",
            "code": "\nvoid checkAndCallFunction_08004ef4(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_call_function_08004ef4",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "initialize_uart_08004f4c",
            "code": "\n\n\nvoid initializeUART_08004f4c(int *uartConfig)\n\n{\n  int uartPin1Configured;\n  int uartPin2Configured;\n  undefined4 uartPin1Mode;\n  uint uartPin2Mode;\n  uint pinMask;\n  uint pinConfig;\n  uint pinMode;\n  undefined4 uartPinMode;\n  \n  if (uartConfig != (int *)0x0) {\n    uartPin1Configured = FUN_08004c78((int)*(char *)(uartConfig + 0x16),&DAT_0800764c);\n    uartPin2Configured = FUN_08004c78((int)*(char *)((int)uartConfig + 0x59),&DAT_08007604);\n    if ((uartPin2Configured == 0) || (uartPin1Configured == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2Configured);\n    }\n    else {\n      uartPin1Configured = FUN_08004d06(uartPin1Configured);\n      *uartConfig = uartPin1Configured;\n      if (uartPin1Configured == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1Configured == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x25;\n        }\n        else if (uartPin1Configured == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x26;\n        }\n        else if (uartPin1Configured == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x27;\n        }\n        uartPin1Mode = FUN_08004884((uint)((int)*(char *)((int)uartConfig + 0x59) << 0x18) >> 0x1c);\n        uartPin2Mode = FUN_08004cce((int)*(char *)((int)uartConfig + 0x59),&DAT_08007604);\n        pinMask = 1 << (*(byte *)((int)uartConfig + 0x59) & 0xf) & 0xffff;\n        pinConfig = (uartPin2Mode >> 3 & 1) << 4 | uartPin2Mode & 7;\n        pinMode = (uartPin2Mode << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPin2Mode << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartPinMode = 3;\n        FUN_08002624(uartPin1Mode,&pinMask);\n        uartPin1Mode = FUN_08004884((uint)((int)*(char *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        uartPin2Mode = FUN_08004cce((int)*(char *)(uartConfig + 0x16),&DAT_0800764c);\n        pinMask = 1 << (*(byte *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        pinConfig = (uartPin2Mode >> 3 & 1) << 4 | uartPin2Mode & 7;\n        pinMode = (uartPin2Mode << 0x1a) >> 0x1e;\n        FUN_08002624(uartPin1Mode,&pinMask);\n        (&DAT_2000032c)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_0800441a(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "initialize_uart_08004f4c",
                "param_1": "uartConfig",
                "iVar1": "uartPin1Configured",
                "iVar2": "uartPin2Configured",
                "uVar3": "uartPin1Mode",
                "uVar4": "uartPin2Mode",
                "local_20": "pinMask",
                "local_1c": "pinConfig",
                "local_18": "pinMode",
                "local_14": "uartPinMode"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 ptr;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    ptr = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(ptr,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "ptr"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "validate_input_080053d4",
            "code": "\nuint validate_input_080053d4(undefined4 undefined_param,uint input_value)\n\n{\n  int result1;\n  int result2;\n  uint index;\n  \n  result1 = FUN_08001cc4();\n  result2 = FUN_08004c78(2,&DAT_0800764c);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (result2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != result2))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    result2 = FUN_08004478((&DAT_2000032c)[index],undefined_param,input_value & 0xffff,1000);\n    if (result2 == 0) {\n      return input_value;\n    }\n    result2 = FUN_08001cc4();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "validate_input_080053d4",
                "param_1": "undefined_param",
                "param_2": "input_value",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_flag_set_0800548c",
            "code": "\nbool isFlagSet_0800548c(int flag)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byt *)(flag + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_flag_set_0800548c",
                "param_1": "flag",
                "uVar1": "result",
                "byte": "byt"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "check_flag_080054b0",
            "code": "\nbool checkFlag_080054b0(int flag)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(flag + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "check_flag_080054b0",
                "param_1": "flag",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_from_binary_080054d4",
            "code": "\nundefined4 extract_data_from_binary_080054d4(int binary_offset,undefined *output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (binary_offset == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output_data = *(undefined *)(binary_offset + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(binary_offset + 0x44)],binary_offset + 0x45,1,&DAT_2000032c,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_from_binary_080054d4",
                "param_1": "binary_offset",
                "param_2": "output_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int data,undefined4 value,undefined4 unused,undefined4 context)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = value;\n      *(int *)(&DAT_200002f0 + index * 4) = data;\n      FUN_08002494((int)*(char *)(data + 0x5a),0,1,index,context);\n      FUN_080024f8((int)*(char *)(data + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "data",
                "param_2": "value",
                "param_3": "unused",
                "param_4": "context",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int pData,undefined4 newValue)\n\n{\n  byte index;\n  \n  if (pData != 0) {\n    index = *(byte *)(pData + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)index * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)index * 4) = pData;\n    FUN_08002494((int)*(char *)(pData + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(pData + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(pData + 0x44)],\n                 *(int *)(pData + 100) + (uint)*(ushort *)(pData + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "pData",
                "param_2": "newValue",
                "bVar1": "index"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_parameter_index_080055bc",
            "code": "\nuint find_parameter_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_parameter_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_based_on_condition_080055e0",
            "code": "\nvoid executeFunctionBasedOnCondition_080055e0(void)\n\n{\n  uint result;\n  \n  result = FUN_080055bc();\n  if (result < 5) {\n    (**(code **)(&DAT_200002dc + result * 4))(*(undefined4 *)(&DAT_200002f0 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_based_on_condition_080055e0",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint randomValue;\n  int result;\n  int address;\n  \n  randomValue = FUN_080055bc();\n  address = *(int *)(&DAT_20000318 + randomValue * 4);\n  if ((randomValue < 5) && (result = (**(code **)(&DAT_20000304 + randomValue * 4))(address), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(address + 0x44)],\n                 *(int *)(address + 100) + (uint)*(ushort *)(address + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "randomValue",
                "iVar2": "result",
                "iVar3": "address"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocate_memory_080056d8(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocated_memory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack_base) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocated_memory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "stack0x00000000": "stack_base"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_default_value_08005714",
            "code": "\nuint32_t get_default_value_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_default_value_08005714",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_0800571a",
            "code": "\nundefined4 initializeMemory_0800571a(undefined4 param1,int param2)\n\n{\n  *(undefined4 *)(param2 + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_0800571a",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "check_return_value_08005724",
            "code": "\nuint32_t check_return_value_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "check_return_value_08005724",
                "undefined4": "uint32_t"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nvoid initializeApplication_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_program_0800572c",
            "code": "\nundefined4 initializeProgram_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_program_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_function_08005730",
            "code": "\nvoid initializeFunction_08005730(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_080053d4(data2,data3,data3,data4,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_function_08005730",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "endless_loop_0800573c",
            "code": "\nvoid endlessLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "endless_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_program_08005750",
            "code": "\nundefined4 initializeProgram_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_program_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "get_value_after_shift_08005754",
            "code": "\nuint getValueAfterShift_08005754(uint inputValue)\n\n{\n  bool isInRange;\n  char character;\n  uint result;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = inputValue < 0x3c;\n  }\n  if (isInRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    character = (&DAT_080076f0)[inputValue];\n  }\n  else {\n    character = -1;\n  }\n  if (character == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "get_value_after_shift_08005754",
                "param_1": "inputValue",
                "bVar1": "isInRange",
                "cVar2": "character",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "execute_process_080057b4",
            "code": "\nvoid executeProcess_080057b4(uint inputIndex,undefined4 outputMode,undefined4 unusedParam,undefined *dataPtr)\n\n{\n  int result;\n  undefined *lookupTablePtr;\n  int lookupIndex;\n  \n  if (inputIndex < 0x3c) {\n    lookupIndex = (int)(char)(&DAT_080076f0)[inputIndex];\n    lookupTablePtr = &DAT_080076f0;\n  }\n  else {\n    lookupIndex = -1;\n    lookupTablePtr = dataPtr;\n  }\n  if (lookupIndex != -1) {\n    result = FUN_080047f4(lookupIndex,&DAT_20000344,unusedParam,lookupTablePtr,dataPtr);\n    if (result != 0) {\n      result = FUN_08004ce2(lookupIndex,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(lookupIndex);\n      }\n      FUN_08004828(lookupIndex,&DAT_20000344);\n    }\n    switch(outputMode) {\n    case 0:\n      FUN_08004bb0(lookupIndex,0);\n      break;\n    case 1:\n      FUN_08004bb0(lookupIndex,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(lookupIndex,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(lookupIndex,0,2);\n    }\n    FUN_0800480a(lookupIndex,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "execute_process_080057b4",
                "param_1": "inputIndex",
                "param_2": "outputMode",
                "param_3": "unusedParam",
                "param_4": "dataPtr",
                "iVar1": "result",
                "puVar2": "lookupTablePtr",
                "iVar3": "lookupIndex"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "decode_and_process_data_08005848",
            "code": "\nvoid decode_and_process_data_08005848(uint input_index,undefined4 output1,undefined4 output2,undefined *input_data)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *data_ptr;\n  uint decoded_value;\n  \n  if (input_index < 0x3c) {\n    decoded_value = (uint)(char)(&DAT_080076f0)[input_index];\n    data_ptr = &DAT_080076f0;\n  }\n  else {\n    decoded_value = 0xffffffff;\n    data_ptr = input_data;\n  }\n  if ((decoded_value != 0xffffffff) &&\n     (result = FUN_080047f4(decoded_value,&DAT_20000358,output2,data_ptr,input_data), result != 0)) {\n    shifted_value = FUN_08004848((decoded_value << 0x18) >> 0x1c);\n    FUN_08004c30(shifted_value,1 << (decoded_value & 0xf) & 0xffff,output1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "decode_and_process_data_08005848",
                "param_1": "input_index",
                "param_2": "output1",
                "param_3": "output2",
                "param_4": "input_data",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "data_ptr",
                "uVar4": "decoded_value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_character_validity_08005890",
            "code": "\nchar checkCharacterValidity_08005890(uint character)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedCharacter;\n  uint characterIndex;\n  \n  if (character < 0x3c) {\n    characterIndex = (uint)(char)(&DAT_080076f0)[character];\n  }\n  else {\n    characterIndex = 0xffffffff;\n  }\n  if (characterIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_080047f4(characterIndex,&DAT_20000358);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedCharacter = FUN_08004848((characterIndex << 0x18) >> 0x1c);\n      isValid = FUN_08004c48(shiftedCharacter,1 << (characterIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_character_validity_08005890",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedCharacter",
                "uVar4": "characterIndex"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_checksum_0800591e",
            "code": "\nushort calculateChecksum_0800591e(int address)\n\n{\n  return (*(short *)(address + 0x134) + 0x40) - *(short *)(address + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "address"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int inputPointer)\n\n{\n  int returnCode;\n  ushort updatedValue;\n  undefined newValue;\n  \n  returnCode = FUN_080054d4(inputPointer,&newValue);\n  if ((returnCode == 0) &&\n     (updatedValue = *(short *)(inputPointer + 0x60) + 1U & 0x3f, updatedValue != *(ushort *)(inputPointer + 0x62))) {\n    *(undefined *)(*(int *)(inputPointer + 0x5c) + (uint)*(ushort *)(inputPointer + 0x60)) = newValue;\n    *(ushort *)(inputPointer + 0x60) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "inputPointer",
                "iVar1": "returnCode",
                "uVar2": "updatedValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_data_structures_08005a44",
            "code": "\nvoid initializeDataStructures_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_data_structures_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_hardware_serial_08005a68",
            "code": "\nvoid initializeHardwareSerial_08005a68(int serialPortAddress,undefined4 baudRate,byte configuration)\n\n{\n  uint returnAddress;\n  char *errorMessage;\n  byte configBits;\n  int configValue;\n  byte *ptrByte;\n  char character;\n  int offset;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x140) = configuration;\n  configBits = configuration & 7;\n  if (configBits == 4) {\n    configValue = 7;\n  }\n  else if (configBits == 6) {\n    configValue = 8;\n  }\n  else if (configBits == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((configuration & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((configuration & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((configuration & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08004f4c(serialPortAddress + 0xd4);\n    FUN_08005510(serialPortAddress + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  ptrByte = *(byte **)(returnAddress + offset);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*ptrByte + 0x1e) = 0;\n  if (returnAddress < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[returnAddress];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_hardware_serial_08005a68",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "configuration",
                "extraout_r1": "returnAddress",
                "pcVar1": "errorMessage",
                "bVar2": "configBits",
                "iVar3": "configValue",
                "pbVar4": "ptrByte",
                "unaff_r4": "character",
                "unaff_r6": "offset",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "update_value_and_jump_08005b24",
            "code": "\nvoid updateValueAndJump_08005b24(int address,uint value)\n\n{\n  undefined updatedValue;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    updatedValue = (&DAT_080076f0)[value];\n  }\n  else {\n    updatedValue = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = updatedValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "update_value_and_jump_08005b24",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "updatedValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_byte_from_lookup_table_08005b3c",
            "code": "\nvoid setByteFromLookupTable_08005b3c(int address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_080076f0)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(address + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_byte_from_lookup_table_08005b3c",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_parameters_08005b54",
            "code": "\nundefined4 *\ninitializeParameters_08005b54(undefined4 *outputArray,undefined4 paramValue1,undefined4 paramValue2,undefined4 paramValue3)\n\n{\n  undefined returnValue;\n  \n  outputArray[1] = 0;\n  outputArray[2] = 1000;\n  *outputArray = &PTR_LAB_080059c8_1_08007804;\n  if (outputArray == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,paramValue2,&DAT_2000036c,paramValue3);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    returnValue = FUN_08004ca2(paramValue1,&DAT_08007604);\n    *(undefined *)((int)outputArray + 0x12d) = returnValue;\n    returnValue = FUN_08004ca2(paramValue1,&DAT_0800764c);\n    *(undefined *)(outputArray + 0x4b) = returnValue;\n  }\n  FUN_08005a44(outputArray);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_parameters_08005b54",
                "param_1": "outputArray",
                "param_2": "paramValue1",
                "param_3": "paramValue2",
                "param_4": "paramValue3",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_param_08005bb0",
            "code": "\nvoid check_param_08005bb0(int input_param,int comparison_param,undefined4 data_param_1,undefined4 data_param_2)\n\n{\n  if (input_param != 1) {\n    return;\n  }\n  if (comparison_param == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,data_param_1,0xffff,data_param_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_param_08005bb0",
                "param_1": "input_param",
                "param_2": "comparison_param",
                "param_3": "data_param_1",
                "param_4": "data_param_2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "handle_condition_08005c38",
            "code": "\nvoid handleCondition_08005c38(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "handle_condition_08005c38",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_func_with_param_and_ptr_08005c96",
            "code": "\nundefined4 executeFuncWithParamAndPtr_08005c96(int *ptr,int size,undefined4 arg1,undefined4 arg2)\n\n{\n  undefined4 result;\n  \n  if (size != 0) {\n    result = FUN_08000178(size);\n    result = (**(code **)(*ptr + 4))(ptr,size,result,*(code **)(*ptr + 4),arg2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_func_with_param_and_ptr_08005c96",
                "param_1": "ptr",
                "param_2": "size",
                "param_3": "arg1",
                "param_4": "arg2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid executeFunction_08005cb6(undefined4 *functionPointer)\n\n{\n  (**(code **)*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_callback_08005cc0",
            "code": "\nvoid executeCallback_08005cc0(int *callbackPtr,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  (**(code **)(*callbackPtr + 4))(callbackPtr,&DAT_0800786c,2,*(code **)(*callbackPtr + 4),arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_callback_08005cc0",
                "param_1": "callbackPtr",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "sum_of_functions_08005cd4",
            "code": "\nint sumOfFunctions_08005cd4(undefined4 inputValue)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(inputValue);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "sum_of_functions_08005cd4",
                "param_1": "inputValue",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_base_08005ce8",
            "code": "\nundefined4 convertBase_08005ce8(int *arr,uint num,uint base)\n\n{\n  char convertedDigit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *ptr;\n  char digits [9];\n  \n  digits[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  ptr = digits + 1;\n  do {\n    quotient = num / base;\n    remainder = (num & 0xff) - (quotient * base & 0xff) & 0xff;\n    ptr = ptr + -1;\n    convertedDigit = (char)remainder;\n    if (remainder < 10) {\n      convertedDigit = convertedDigit + '0';\n    }\n    else {\n      convertedDigit = convertedDigit + '7';\n    }\n    *ptr = convertedDigit;\n    num = quotient;\n  } while (quotient != 0);\n  if (ptr == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(ptr);\n    result = (**(code **)(*arr + 4))(arr,ptr,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_base_08005ce8",
                "param_1": "arr",
                "param_2": "num",
                "param_3": "base",
                "cVar1": "convertedDigit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "ptr",
                "local_15": "digits"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_data_08005d42",
            "code": "\nint process_data_08005d42(undefined4 *data_ptr,uint value_1,uint value_2)\n\n{\n  int result;\n  int temp;\n  \n  if (value_2 == 0) {\n    result = (**(code **)*data_ptr)(data_ptr,value_1 & 0xff);\n    return result;\n  }\n  if (value_2 != 10) {\n    result = FUN_08005ce8(data_ptr,value_1,value_2 & 0xff);\n    return result;\n  }\n  if (-1 < (int)value_1) {\n    result = FUN_08005ce8(data_ptr,value_1,10);\n    return result;\n  }\n  result = FUN_08005cb6(data_ptr,0x2d);\n  temp = FUN_08005ce8(data_ptr,-value_1,10);\n  return temp + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_data_08005d42",
                "param_1": "data_ptr",
                "param_2": "value_1",
                "param_3": "value_2",
                "iVar1": "result",
                "iVar2": "temp"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "execute_initialization_routine_08005d82",
            "code": "\nvoid executeInitializationRoutine_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "execute_initialization_routine_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "process_data_08005d8a",
            "code": "\nvoid processData_08005d8a(undefined4 *dataPointer,uint value1,uint value2,undefined4 value3)\n\n{\n  if (value2 != 0) {\n    FUN_08005ce8(dataPointer,value1,value2 & 0xff);\n    return;\n  }\n  (**(code **)*dataPointer)(dataPointer,value1 & 0xff,0,*(code **)*dataPointer,value3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "process_data_08005da8",
            "code": "\nint process_data_08005da8(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4,byte arg5)\n\n{\n  int result;\n  undefined4 temp;\n  int temp2;\n  byte counter;\n  undefined8 var1;\n  undefined8 var2;\n  \n  result = FUN_08000a2c(arg3,arg4,arg3,arg4);\n  if (result == 0) {\n    result = FUN_08000a2c(arg3,arg4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(arg3,arg4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(arg1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(arg3,arg4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(arg3,arg4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(arg3,arg4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(arg1,0x2d);\n            arg4 = arg4 + 0x80000000;\n          }\n          var1 = 0x3fe0000000000000;\n          for (counter = 0; temp = (undefined4)((ulonglong)var1 >> 0x20), counter < arg5;\n              counter = counter + 1) {\n            var1 = FUN_0800074c((int)var1,temp,0,0x40240000);\n          }\n          var1 = FUN_08000194(arg3,arg4,(int)var1,temp);\n          temp = FUN_08000aa8();\n          var2 = FUN_0800040c();\n          var1 = FUN_08000190((int)var1,(int)((ulonglong)var1 >> 0x20),(int)var2,\n                               (int)((ulonglong)var2 >> 0x20));\n          temp2 = FUN_08005d8a(arg1,temp,10);\n          result = result + temp2;\n          if (arg5 != 0) {\n            temp2 = FUN_08005c96(arg1,&DAT_08007868);\n            result = result + temp2;\n          }\n          while (arg5 != 0) {\n            var1 = FUN_080004f8((int)var1,(int)((ulonglong)var1 >> 0x20),0,0x40240000);\n            temp = FUN_08000a58();\n            temp2 = FUN_08005d82(arg1,temp,10);\n            result = result + temp2;\n            var2 = FUN_0800042c(temp);\n            var1 = FUN_08000190((int)var1,(int)((ulonglong)var1 >> 0x20),(int)var2,\n                                 (int)((ulonglong)var2 >> 0x20));\n            arg5 = arg5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(arg1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(arg1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(arg1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "process_data_08005da8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "result",
                "uVar2": "temp",
                "iVar3": "temp2",
                "bVar4": "counter",
                "uVar5": "var1",
                "uVar6": "var2"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_system_08005f2c",
            "code": "\nvoid initializeSystem_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_system_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input_param)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input_param);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input_param",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_system_08005f5e",
            "code": "\nvoid initializeSystem_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_system_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "run_infinite_loop_08005f6c",
            "code": "\nvoid runInfiniteLoop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "run_infinite_loop_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar count_set_bits_08005f8c(uint input)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "input",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_data_08005fc8",
            "code": "\nvoid initializeData_08005fc8(int flag,int value,undefined4 param1,undefined4 param2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&LAB_08005fa0_1,&DAT_20000000,&DAT_200004b8,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param1",
                "param_4": "param2"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "execute_logic_080060d4",
            "code": "\nvoid executeLogic_080060d4(int inputParam)\n\n{\n  int index;\n  \n  if (*(int *)(inputParam + 8) != 0) {\n    (**(code **)(inputParam + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    executeLogic_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "execute_logic_080060d4",
                "param_1": "inputParam",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_call_function_080060e4",
            "code": "\nvoid checkAndCallFunction_080060e4(void)\n\n{\n  int result;\n  \n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_call_function_080060e4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "initialize_function_08006112",
            "code": "\nvoid initializeFunction_08006112(undefined4 targetAddress,undefined4 sourceAddress)\n\n{\n  FUN_08006158(sourceAddress,targetAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "initialize_function_08006112",
                "param_1": "targetAddress",
                "param_2": "sourceAddress"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 assertion,undefined4 file,char *line,undefined4 function)\n\n{\n  undefined4 filePointer;\n  char *delimiter;\n  undefined8 result;\n  undefined4 functionPtr;\n  \n  filePointer = *(undefined4 *)(DAT_200000f8 + 0xc);\n  functionPtr = function;\n  if (line == (char *)0x0) goto LAB_08006140;\n  delimiter = \", function: \";\n  do {\n    FUN_08006174(filePointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,assertion,file\n                 ,delimiter,line,functionPtr);\n    result = FUN_08006ac0();\n    file = (undefined4)((ulonglong)result >> 0x20);\n    filePointer = (undefined4)result;\nLAB_08006140:\n    line = \"\";\n    delimiter = line;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "line",
                "param_4": "function",
                "uVar1": "filePointer",
                "pcVar2": "delimiter",
                "uVar3": "result",
                "uVar4": "functionPtr"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_parameter_to_long_long_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftParameterToLongLong_08006158(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_parameter_to_long_long_08006158",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "update_data_08006174",
            "code": "\nvoid updateData_08006174(undefined4 input1,undefined4 input2,undefined4 data1,undefined4 data2)\n\n{\n  undefined4 updatedData1;\n  undefined4 updatedData2;\n  \n  updatedData1 = data1;\n  updatedData2 = data2;\n  FUN_08006394(DAT_200000f8,input1,input2,&updatedData1,input1,&updatedData1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "update_data_08006174",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data1",
                "param_4": "data2",
                "uStack_8": "updatedData1",
                "uStack_4": "updatedData2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_with_value_080061e0",
            "code": "\nvoid fillMemoryWithValue_080061e0(undefined *memoryAddress,undefined value,int size)\n\n{\n  undefined *endAddress;\n  \n  endAddress = memoryAddress + size;\n  for (; memoryAddress != endAddress; memoryAddress = memoryAddress + 1) {\n    *memoryAddress = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_with_value_080061e0",
                "param_1": "memoryAddress",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "process_data_080061f0",
            "code": "\nvoid processData_080061f0(undefined4 *output_1,int input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int **extra_output;\n  int **temp_ptr_1;\n  int **temp_ptr_2;\n  int *temp_var_1;\n  int **temp_ptr_3;\n  int **temp_ptr_4;\n  \n  if (input_1 == 0) {\n    return;\n  }\n  temp_ptr_4 = (int **)(input_1 + -4);\n  if (*(int *)(input_1 + -4) < 0) {\n    temp_ptr_4 = (int **)((int)temp_ptr_4 + *(int *)(input_1 + -4));\n  }\n  FUNC_08006eac();\n  temp_ptr_2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    temp_ptr_4[1] = (int *)0x0;\n    temp_ptr_1 = extra_output;\n    DAT_200005f8 = temp_ptr_4;\n  }\n  else {\n    temp_ptr_2 = DAT_200005f8;\n    if (temp_ptr_4 < DAT_200005f8) {\n      temp_ptr_1 = (int **)*temp_ptr_4;\n      temp_ptr_2 = (int **)((int)temp_ptr_4 + (int)temp_ptr_1);\n      if (DAT_200005f8 == temp_ptr_2) {\n        temp_var_1 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp_ptr_2 = (int **)((int)temp_var_1 + (int)temp_ptr_1);\n        *temp_ptr_4 = (int *)temp_ptr_2;\n      }\n      temp_ptr_4[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = temp_ptr_4;\n    }\n    else {\n      do {\n        temp_ptr_3 = temp_ptr_2;\n        temp_ptr_2 = (int **)temp_ptr_3[1];\n        if (temp_ptr_2 == (int **)0x0) break;\n      } while (temp_ptr_2 <= temp_ptr_4);\n      temp_ptr_1 = (int **)*temp_ptr_3;\n      if ((int **)((int)temp_ptr_3 + (int)temp_ptr_1) == temp_ptr_4) {\n        temp_ptr_1 = (int **)((int)temp_ptr_1 + (int)*temp_ptr_4);\n        *temp_ptr_3 = (int *)temp_ptr_1;\n        if (temp_ptr_2 == (int **)((int)temp_ptr_3 + (int)temp_ptr_1)) {\n          temp_var_1 = *temp_ptr_2;\n          temp_ptr_2 = (int **)temp_ptr_2[1];\n          temp_ptr_1 = (int **)((int)temp_ptr_1 + (int)temp_var_1);\n          *temp_ptr_3 = (int *)temp_ptr_1;\n          temp_ptr_3[1] = (int *)temp_ptr_2;\n        }\n      }\n      else if (temp_ptr_4 < (int **)((int)temp_ptr_3 + (int)temp_ptr_1)) {\n        *output_1 = 0xc;\n      }\n      else {\n        temp_ptr_1 = (int **)((int)temp_ptr_4 + (int)*temp_ptr_4);\n        if (temp_ptr_2 == temp_ptr_1) {\n          temp_var_1 = *temp_ptr_2;\n          temp_ptr_2 = (int **)temp_ptr_2[1];\n          temp_ptr_1 = (int **)((int)temp_var_1 + (int)*temp_ptr_4);\n          *temp_ptr_4 = (int *)temp_ptr_1;\n        }\n        temp_ptr_4[1] = (int *)temp_ptr_2;\n        temp_ptr_3[1] = (int *)temp_ptr_4;\n      }\n    }\n  }\n  FUNC_08006eae(output_1,temp_ptr_1,temp_ptr_2,input_3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "process_data_080061f0",
                "param_1": "output_1",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "extraout_r1": "extra_output",
                "ppiVar1": "temp_ptr_1",
                "ppiVar2": "temp_ptr_2",
                "piVar3": "temp_var_1",
                "ppiVar4": "temp_ptr_3",
                "ppiVar5": "temp_ptr_4"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *output_buffer,uint input_size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *previous_block;\n  uint block_size;\n  uint *allocated_block;\n  uint allocated_size;\n  \n  allocated_size = (input_size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < input_size)) {\n    *output_buffer = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    allocated_block = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_size = *previous_block - allocated_size;\n      if (-1 < (int)block_size) {\n        if (block_size < 0xc) {\n          if (allocated_block == previous_block) {\n            current_block = (uint *)allocated_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (allocated_block != previous_block) {\n            allocated_block[1] = (uint)current_block;\n            allocated_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_size;\n          *(uint *)((int)previous_block + block_size) = allocated_size;\n          allocated_block = (uint *)((int)previous_block + block_size);\n        }\n        goto LAB_080062ec;\n      }\n      allocated_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(output_buffer);\n    }\n    current_block = (uint *)FUN_08006920(output_buffer,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((allocated_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == allocated_block ||\n        (difference = FUN_08006920(output_buffer,(int)allocated_block - (int)current_block), difference != -1)))) {\n      *allocated_block = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(output_buffer);\n      allocated_size = (int)allocated_block + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(allocated_block + 1);\n      if (difference != 0) {\n        *(int *)((int)allocated_block + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_buffer = 0xc;\n    FUNC_08006eae(output_buffer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "output_buffer",
                "param_2": "input_size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "previous_block",
                "uVar4": "block_size",
                "puVar5": "allocated_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int input_data,byte input_byte,byte **input_arr_ptr)\n\n{\n  int temp_var1;\n  byte *temp_var2;\n  byte *temp_var3;\n  uint output_uint;\n  \n  temp_var2 = input_arr_ptr[2] + -1;\n  input_arr_ptr[2] = temp_var2;\n  if ((-1 < (int)temp_var2) ||\n     (((int)input_arr_ptr[6] <= (int)temp_var2 && (temp_var2 = (byte *)(uint)input_byte, temp_var2 != (byte *)0xa))))\n  {\n    temp_var2 = *input_arr_ptr;\n    *input_arr_ptr = temp_var2 + 1;\n    *temp_var2 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (input_arr_ptr == (byte **)&DAT_08007904) {\n    input_arr_ptr = *(byte ***)(input_data + 4);\n  }\n  else if (input_arr_ptr == (byte **)&DAT_08007924) {\n    input_arr_ptr = *(byte ***)(input_data + 8);\n  }\n  else if (input_arr_ptr == (byte **)&DAT_080078e4) {\n    input_arr_ptr = *(byte ***)(input_data + 0xc);\n  }\n  input_arr_ptr[2] = input_arr_ptr[6];\n  temp_var3 = (byte *)(uint)*(ushort *)(input_arr_ptr + 3);\n  temp_var1 = (int)temp_var3 << 0x1c;\n  if (((temp_var1 < 0) && (temp_var3 = input_arr_ptr[4], temp_var3 != (byte *)0x0)) ||\n     (temp_var1 = FUN_080069e4(input_data,input_arr_ptr,temp_var1,temp_var3,temp_var2), temp_var1 == 0)) {\n    output_uint = (uint)input_byte;\n    temp_var1 = (int)*input_arr_ptr - (int)input_arr_ptr[4];\n    if ((temp_var1 < (int)input_arr_ptr[5]) || (temp_var1 = FUN_08006be0(input_data,input_arr_ptr), temp_var1 == 0)) {\n      input_arr_ptr[2] = input_arr_ptr[2] + -1;\n      temp_var2 = *input_arr_ptr;\n      *input_arr_ptr = temp_var2 + 1;\n      *temp_var2 = input_byte;\n      if ((byte *)(temp_var1 + 1) != input_arr_ptr[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_arr_ptr + 3) << 0x1f)) {\n          return output_uint;\n        }\n        if (output_uint != 10) {\n          return output_uint;\n        }\n      }\n      temp_var1 = FUN_08006be0(input_data,input_arr_ptr);\n      if (temp_var1 == 0) {\n        return output_uint;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "input_data",
                "param_2": "input_byte",
                "param_3": "input_arr_ptr",
                "iVar1": "temp_var1",
                "pbVar2": "temp_var2",
                "pbVar3": "temp_var3",
                "uVar4": "output_uint"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_data_08006370",
            "code": "\nint processData_08006370(undefined4 inputSize,undefined4 dataBuffer,undefined *dataArray,int arraySize)\n\n{\n  int result;\n  undefined *endPointer;\n  int currentSize;\n  \n  endPointer = dataArray + arraySize;\n  currentSize = arraySize;\n  do {\n    if (dataArray == endPointer) {\n      return 0;\n    }\n    result = FUN_08006344(inputSize,*dataArray,dataBuffer,arraySize,currentSize);\n    arraySize = result + 1;\n    dataArray = dataArray + 1;\n  } while (arraySize != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "inputSize",
                "param_2": "dataBuffer",
                "param_3": "dataArray",
                "param_4": "arraySize",
                "iVar1": "result",
                "puVar2": "endPointer",
                "iVar3": "currentSize"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "decompile_function_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint decompile_function_08006394(int arg1,undefined4 *arg2,byte *arg3,int *arg4)\n\n{\n  int result;\n  int *ptrVar1;\n  bool isDigit;\n  byte *ptr1;\n  byte *ptr2;\n  int tmpVar;\n  int index;\n  int *param4;\n  uint bitFlags;\n  int dotPrecision;\n  undefined4 local_80;\n  int asteriskWidth;\n  int totalLength;\n  byte formatSpecifier;\n  undefined local_6f;\n  undefined local_6e;\n  undefined spaceChar;\n  undefined4 local_30;\n  \n  param4 = arg4;\n  if ((arg1 != 0) && (*(int *)(arg1 + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (arg2 == &DAT_08007904) {\n    arg2 = *(undefined4 **)(arg1 + 4);\n  }\n  else if (arg2 == (undefined4 *)&DAT_08007924) {\n    arg2 = *(undefined4 **)(arg1 + 8);\n  }\n  else if (arg2 == (undefined4 *)&DAT_080078e4) {\n    arg2 = *(undefined4 **)(arg1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(arg2 + 3) << 0x1c)) || (arg2[4] == 0)) &&\n     (index = FUN_080069e4(arg1,arg2), index != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  ptr1 = arg3;\nLAB_080063d6:\n  ptr2 = ptr1;\n  if (*ptr2 != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  ptr1 = ptr2 + 1;\n  if (*ptr2 != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  index = (int)ptr2 - (int)arg3;\n  if (index != 0) {\n    result = FUN_08006370(arg1,arg2,arg3,index);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(arg2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + index;\n  }\n  if (*ptr2 == 0) goto LAB_08006580;\n  bitFlags = 0;\n  asteriskWidth = 0;\n  dotPrecision = -1;\n  local_80 = 0;\n  spaceChar = 0;\n  local_30 = 0;\n  ptr1 = ptr2 + 1;\n  while( true ) {\n    index = FUN_08006e90(\"#-0+ \",*ptr1);\n    arg3 = ptr1 + 1;\n    if (index == 0) break;\n    bitFlags = 1 << (index + 0xf7ff8750U & 0xff) | bitFlags;\n    ptr1 = arg3;\n  }\n  if ((int)(bitFlags << 0x1b) < 0) {\n    spaceChar = 0x20;\n  }\n  if ((int)(bitFlags << 0x1c) < 0) {\n    spaceChar = 0x2b;\n  }\n  if (*ptr1 == 0x2a) {\n    ptrVar1 = param4 + 1;\n    index = *param4;\n    param4 = ptrVar1;\n    if (index < 0) {\n      asteriskWidth = -index;\n      bitFlags = bitFlags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    isDigit = false;\n    index = asteriskWidth;\n    arg3 = ptr1;\n    while( true ) {\n      if (9 < *arg3 - 0x30) break;\n      index = index * 10 + (*arg3 - 0x30);\n      isDigit = true;\n      arg3 = arg3 + 1;\n    }\n    if (!isDigit) goto LAB_080064be;\n  }\n  asteriskWidth = index;\nLAB_080064be:\n  if (*arg3 == 0x2e) {\n    if (arg3[1] == 0x2a) {\n      arg3 = arg3 + 2;\n      ptrVar1 = param4 + 1;\n      dotPrecision = *param4;\n      param4 = ptrVar1;\n      if (dotPrecision < 0) {\n        dotPrecision = -1;\n      }\n    }\n    else {\n      isDigit = false;\n      index = 0;\n      dotPrecision = 0;\n      while( true ) {\n        arg3 = arg3 + 1;\n        if (9 < *arg3 - 0x30) break;\n        index = index * 10 + (*arg3 - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        dotPrecision = index;\n      }\n    }\n  }\n  index = FUN_08006e90(&DAT_080078b6,*arg3,3);\n  if (index != 0) {\n    arg3 = arg3 + 1;\n    bitFlags = bitFlags | 0x40 << (index + 0xf7ff874aU & 0xff);\n  }\n  formatSpecifier = *arg3;\n  arg3 = arg3 + 1;\n  index = FUN_08006e90(\"efgEFG\",formatSpecifier,6);\n  if (index == 0) {\n    tmpVar = FUN_080066b0(arg1,&bitFlags,arg2,0x8006371,&param4);\n    if (tmpVar == -1) goto LAB_08006580;\n  }\n  else {\n    param4 = (int *)(((int)param4 + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + tmpVar;\n  ptr1 = arg3;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "decompile_function_08006394",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "piVar2": "ptrVar1",
                "bVar3": "isDigit",
                "pbVar4": "ptr1",
                "pbVar5": "ptr2",
                "unaff_r9": "tmpVar",
                "iVar6": "index",
                "local_8c": "param4",
                "local_88": "bitFlags",
                "local_84": "dotPrecision",
                "local_7c": "asteriskWidth",
                "local_74": "totalLength",
                "local_70": "formatSpecifier",
                "local_45": "spaceChar"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocess_data_080065c0(undefined4 input_data,uint *data_array,uint *result,undefined4 additional_data,code *callback_function)\n\n{\n  int index;\n  int status;\n  uint max_value;\n  uint temp_value;\n  bool is_condition_met;\n  \n  max_value = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    max_value = data_array[2];\n  }\n  *result = max_value;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *result = max_value + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *result = *result + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index = 0; index < (int)(data_array[3] - *result); index = index + 1) {\n      status = (*callback_function)(input_data,additional_data,(int)data_array + 0x19,1);\n      if (status == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data_array + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  temp_value = max_value;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + max_value + 0x43) = 0x30;\n    temp_value = max_value + 2;\n    *(undefined *)((int)data_array + max_value + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  index = (*callback_function)(input_data,additional_data,(int)data_array + 0x43,temp_value);\n  if (index != -1) {\n    max_value = data_array[3];\n    is_condition_met = (*data_array & 6) != 4;\n    if (is_condition_met) {\n      max_value = 0;\n    }\n    temp_value = 0;\n    if (!is_condition_met) {\n      max_value = max_value - *result;\n    }\n    if (!is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      max_value = max_value + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (max_value == temp_value) {\n        return 0;\n      }\n      index = (*callback_function)(input_data,additional_data,(int)data_array + 0x1a,1);\n      if (index == -1) break;\n      temp_value = temp_value + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "input_data",
                "param_2": "data_array",
                "param_3": "result",
                "param_4": "additional_data",
                "param_5": "callback_function",
                "iVar1": "index",
                "iVar2": "status",
                "uVar3": "max_value",
                "uVar4": "temp_value",
                "bVar5": "is_condition_met"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "convert_to_string_080066b0",
            "code": "\nuint convertToString_080066b0(undefined4 input,uint *number,undefined4 size,code *convertFn,uint **convertedNumbers)\n\n{\n  byte firstByte;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex;\n  uint flag;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint length;\n  char *convertEnd;\n  char *convertStart;\n  uint localArray [2];\n  \n  firstByte = *(byte *)(number + 6);\n  convertStart = (char *)((int)number + 0x43);\n  if (firstByte != 0x6e) {\n    if (firstByte < 0x6f) {\n      if (firstByte != 99) {\n        if (firstByte < 100) {\n          if (firstByte == 0) goto LAB_0800686a;\n          if (firstByte != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)number + 0x45) = 0x58;\n          hex = \"0123456789ABCDEF\";\nLAB_080067fa:\n          flag = *number;\n          ptr = *convertedNumbers;\n          *convertedNumbers = ptr + 1;\n          if (((flag & 0x80) == 0) && ((int)(flag << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(flag << 0x1f) < 0) {\n            *number = flag | 0x20;\n          }\n          if (value == 0) {\n            *number = *number & 0xffffffdf;\n          }\n          flag = 0x10;\nLAB_08006790:\n          *(undefined *)((int)number + 0x43) = 0;\n        }\n        else {\n          if ((firstByte != 100) && (firstByte != 0x69)) goto LAB_080066e0;\n          value = *number;\n          ptr = *convertedNumbers;\n          if ((value & 0x80) == 0) {\n            *convertedNumbers = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08006700;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *convertedNumbers = ptr + 1;\nLAB_08006700:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)number + 0x43) = 0x2d;\n          }\n          hex = \"0123456789ABCDEF\";\n          flag = 10;\n        }\n        length = number[1];\n        number[2] = length;\n        convertEnd = convertStart;\n        if ((int)length < 0) {\n          if (value != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)number + 0x42) = *hex;\n          convertEnd = (char *)((int)number + 0x42);\n        }\n        else {\n          *number = *number & 0xfffffffb;\n          if (value == 0) {\n            if (length != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              length = value / flag;\n              convertEnd = convertEnd + -1;\n              *convertEnd = hex[value - flag * length];\n              value = length;\n            } while (length != 0);\n          }\n        }\n        if (((flag == 8) && ((int)(*number << 0x1f) < 0)) && ((int)number[1] <= (int)number[4]))\n        {\n          convertEnd[-1] = '0';\n          convertEnd = convertEnd + -1;\n        }\n        number[4] = (int)convertStart - (int)convertEnd;\n        convertStart = convertEnd;\n        goto LAB_080067d6;\n      }\n      ptr = *convertedNumbers;\n      *convertedNumbers = ptr + 1;\n      *(char *)((int)number + 0x42) = (char)*ptr;\nLAB_08006740:\n      convertStart = (char *)((int)number + 0x42);\n      value = 1;\n    }\n    else {\n      if (firstByte != 0x73) {\n        if (firstByte < 0x74) {\n          if (firstByte == 0x6f) {\nLAB_08006766:\n            value = *number;\n            ptr = *convertedNumbers;\n            if ((value & 0x80) == 0) {\n              *convertedNumbers = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08006774;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *convertedNumbers = ptr + 1;\nLAB_08006774:\n              value = *ptr;\n            }\n            if (firstByte == 0x6f) {\n              flag = 8;\n            }\n            else {\n              flag = 10;\n            }\n            hex = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (firstByte == 0x70) {\n            *number = *number | 0x20;\nLAB_08006726:\n            hex = \"0123456789abcdef\";\n            *(undefined *)((int)number + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (firstByte == 0x75) goto LAB_08006766;\n          if (firstByte == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)number + 0x42) = firstByte;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*convertedNumbers;\n      *convertedNumbers = (uint *)(ppcVar8 + 1);\n      convertStart = *ppcVar8;\n      index = FUN_08006e90(convertStart,0,number[1]);\n      if (index != 0) {\n        number[1] = index - (int)convertStart;\n      }\n      value = number[1];\n    }\n    number[4] = value;\n    *(undefined *)((int)number + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  value = *number;\n  ppuVar7 = (uint **)*convertedNumbers;\n  flag = number[5];\n  if ((value & 0x80) == 0) {\n    *convertedNumbers = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)flag;\n  }\n  else {\n    *convertedNumbers = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = flag;\n  }\nLAB_0800686a:\n  number[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(input,number,localArray,size,convertFn);\n  if ((index == -1) || (index = (*convertFn)(input,size,convertStart,number[4]), index == -1)) {\nLAB_080067ea:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*number << 0x1e) < 0) {\n      for (index = 0; index < (int)(number[3] - localArray[0]); index = index + 1) {\n        result = (*convertFn)(input,size,(int)number + 0x19,1);\n        if (result == -1) goto LAB_080067ea;\n      }\n    }\n    value = number[3];\n    if ((int)number[3] < (int)localArray[0]) {\n      value = localArray[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "convert_to_string_080066b0",
                "param_1": "input",
                "param_2": "number",
                "param_3": "size",
                "param_4": "convertFn",
                "param_5": "convertedNumbers",
                "bVar1": "firstByte",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "result",
                "pcVar5": "hex",
                "uVar6": "flag",
                "uVar9": "value",
                "uVar10": "length",
                "pcVar11": "convertEnd",
                "pcVar12": "convertStart",
                "local_24": "localArray"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int constant1;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  constant1 = DAT_200000f8;\n  tempVar1 = inputParam1;\n  tempVar2 = inputParam2;\n  tempVar3 = inputParam3;\n  tempVar4 = inputParam4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(constant1,*(undefined4 *)(constant1 + 8),inputParam1,&tempVar2,tempVar1,&tempVar2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "constant1",
                "uVar2": "tempVar1",
                "uStack_c": "tempVar2",
                "uStack_8": "tempVar3",
                "uStack_4": "tempVar4"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "check_and_update_value_08006920",
            "code": "\nvoid checkAndUpdateValue_08006920(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(inputValue);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputValue = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "check_and_update_value_08006920",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "check_and_update_data_080069e4",
            "code": "\nuint checkAndUpdateData_080069e4(undefined4 *dataPointer1,undefined4 *dataPointer2)\n\n{\n  int temporaryVar;\n  uint result;\n  ushort ushortValue;\n  \n  temporaryVar = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (dataPointer2 == &DAT_08007904) {\n    dataPointer2 = *(undefined4 **)(temporaryVar + 4);\n  }\n  else if (dataPointer2 == (undefined4 *)&DAT_08007924) {\n    dataPointer2 = *(undefined4 **)(temporaryVar + 8);\n  }\n  else if (dataPointer2 == (undefined4 *)&DAT_080078e4) {\n    dataPointer2 = *(undefined4 **)(temporaryVar + 0xc);\n  }\n  ushortValue = *(ushort *)(dataPointer2 + 3);\n  result = (uint)ushortValue;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *dataPointer1 = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)dataPointer2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)dataPointer2[0xd] != dataPointer2 + 0x11) {\n          FUN_080061f0(dataPointer1);\n        }\n        dataPointer2[0xd] = 0;\n      }\n      *(ushort *)(dataPointer2 + 3) = *(ushort *)(dataPointer2 + 3) & 0xffdb;\n      dataPointer2[1] = 0;\n      *dataPointer2 = dataPointer2[4];\n    }\n    *(ushort *)(dataPointer2 + 3) = *(ushort *)(dataPointer2 + 3) | 8;\n  }\n  if ((dataPointer2[4] == 0) && ((*(ushort *)(dataPointer2 + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(dataPointer1,dataPointer2);\n  }\n  ushortValue = *(ushort *)(dataPointer2 + 3);\n  result = ushortValue & 1;\n  if ((ushortValue & 1) == 0) {\n    if (-1 < (int)((uint)ushortValue << 0x1e)) {\n      result = dataPointer2[5];\n    }\n    dataPointer2[2] = result;\n  }\n  else {\n    dataPointer2[2] = 0;\n    dataPointer2[6] = -dataPointer2[5];\n  }\n  if (dataPointer2[4] == 0) {\n    ushortValue = *(ushort *)(dataPointer2 + 3);\n    result = (int)(short)ushortValue & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(dataPointer2 + 3) = ushortValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "check_and_update_data_080069e4",
                "param_1": "dataPointer1",
                "param_2": "dataPointer2",
                "iVar1": "temporaryVar",
                "uVar2": "result",
                "uVar3": "ushortValue"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_data_08006ac0",
            "code": "\nvoid processData_08006ac0(void)\n\n{\n  uint *dataPointer;\n  int offset;\n  int *pointer1;\n  int *pointer2;\n  uint uValue;\n  ushort flags;\n  int temp1;\n  code *callback;\n  int temp2;\n  uint temp3;\n  code *jumpTable;\n  bool isTrue;\n  undefined8 returnVal;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  returnVal = FUN_0800573c(1);\n  pointer1 = (int *)((ulonglong)returnVal >> 0x20);\n  dataPointer = (uint *)returnVal;\n  flags = *(ushort *)(pointer1 + 3);\n  uValue = (uint)flags;\n  if ((int)(uValue << 0x1c) < 0) {\n    offset = pointer1[4];\n    if (offset != 0) {\n      temp1 = uValue << 0x1e;\n      isTrue = temp1 != 0;\n      if (isTrue) {\n        temp1 = 0;\n      }\n      temp2 = *pointer1;\n      if (!isTrue) {\n        temp1 = pointer1[5];\n      }\n      *pointer1 = offset;\n      pointer1[2] = temp1;\n      for (temp2 = temp2 - offset; 0 < temp2; temp2 = temp2 - temp1) {\n        temp1 = (*(code *)pointer1[10])(dataPointer,pointer1[8],offset,temp2);\n        if (temp1 < 1) {\n          flags = *(ushort *)(pointer1 + 3);\n          goto LAB_08006bc6;\n        }\n        offset = offset + temp1;\n      }\n    }\n  }\n  else if (((0 < pointer1[1]) || (0 < pointer1[0x10])) &&\n          (callback = (code *)pointer1[0xb], callback != (code *)0x0)) {\n    temp3 = *dataPointer;\n    *dataPointer = 0;\n    if ((flags & 0x1000) == 0) {\n      offset = (*callback)(dataPointer,pointer1[8],uValue & 0x1000,1);\n      if ((offset == -1) && (uValue = *dataPointer, uValue != 0)) {\n        if ((uValue != 0x1d) && (uValue != 0x16)) {\n          *(ushort *)(pointer1 + 3) = *(ushort *)(pointer1 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = temp3;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      offset = pointer1[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer1 + 3) << 0x1d) < 0) &&\n       (offset = offset - pointer1[1], pointer1[0xd] != 0)) {\n      offset = offset - pointer1[0x10];\n    }\n    offset = (*(code *)pointer1[0xb])(dataPointer,pointer1[8],offset,0);\n    flags = *(ushort *)(pointer1 + 3);\n    if ((offset == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer1 + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    pointer1[1] = 0;\n    *pointer1 = pointer1[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((offset != -1 || (*dataPointer == 0)))) {\n      pointer1[0x15] = offset;\n    }\n    pointer2 = (int *)pointer1[0xd];\n    *dataPointer = temp3;\n    if (pointer2 != (int *)0x0) {\n      if (pointer2 != pointer1 + 0x11) {\n        FUN_080061f0(dataPointer);\n      }\n      pointer1[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "puVar1": "dataPointer",
                "iVar2": "offset",
                "piVar3": "pointer1",
                "piVar4": "pointer2",
                "uVar5": "uValue",
                "uVar6": "flags",
                "iVar7": "temp1",
                "pcVar8": "callback",
                "iVar9": "temp2",
                "uVar10": "temp3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "isTrue",
                "uVar12": "returnVal"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 process_data_08006be0(uint *data_ptr,int *info_ptr)\n\n{\n  undefined4 result;\n  int value;\n  int *pointer;\n  uint temp_var;\n  ushort flags;\n  int temp;\n  undefined4 unused_register4;\n  undefined4 unused_register5;\n  code *function_ptr;\n  int counter;\n  uint temp_value;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (info_ptr[4] != 0) {\n    if ((data_ptr != (uint *)0x0) && (data_ptr[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (info_ptr == &DAT_08007904) {\n      info_ptr = (int *)data_ptr[1];\n    }\n    else if (info_ptr == (int *)&DAT_08007924) {\n      info_ptr = (int *)data_ptr[2];\n    }\n    else if (info_ptr == (int *)&DAT_080078e4) {\n      info_ptr = (int *)data_ptr[3];\n    }\n    if (*(short *)(info_ptr + 3) != 0) {\n      flags = *(ushort *)(info_ptr + 3);\n      temp_var = (uint)flags;\n      if ((int)(temp_var << 0x1c) < 0) {\n        value = info_ptr[4];\n        if (value != 0) {\n          temp = temp_var << 0x1e;\n          bVar10 = temp != 0;\n          if (bVar10) {\n            temp = 0;\n          }\n          counter = *info_ptr;\n          if (!bVar10) {\n            temp = info_ptr[5];\n          }\n          *info_ptr = value;\n          info_ptr[2] = temp;\n          for (counter = counter - value; 0 < counter; counter = counter - temp) {\n            temp = (*(code *)info_ptr[10])(data_ptr,info_ptr[8],value,counter,unused_register4,unused_register5);\n            if (temp < 1) {\n              flags = *(ushort *)(info_ptr + 3);\n              goto LAB_08006bc6;\n            }\n            value = value + temp;\n          }\n        }\n      }\n      else if (((0 < info_ptr[1]) || (0 < info_ptr[0x10])) &&\n              (function_ptr = (code *)info_ptr[0xb], function_ptr != (code *)0x0)) {\n        temp_value = *data_ptr;\n        *data_ptr = 0;\n        if ((flags & 0x1000) == 0) {\n          value = (*function_ptr)(data_ptr,info_ptr[8],temp_var & 0x1000,1);\n          if ((value == -1) && (temp_var = *data_ptr, temp_var != 0)) {\n            if ((temp_var != 0x1d) && (temp_var != 0x16)) {\n              *(ushort *)(info_ptr + 3) = *(ushort *)(info_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*UNRECOVERED_JUMPTABLE_00)();\n              return result;\n            }\n            *data_ptr = temp_value;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          value = info_ptr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(info_ptr + 3) << 0x1d) < 0) &&\n           (value = value - info_ptr[1], info_ptr[0xd] != 0)) {\n          value = value - info_ptr[0x10];\n        }\n        value = (*(code *)info_ptr[0xb])(data_ptr,info_ptr[8],value,0);\n        flags = *(ushort *)(info_ptr + 3);\n        if ((value == -1) &&\n           ((0x1d < *data_ptr || (-1 < (int)((0x20400001U >> (*data_ptr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(info_ptr + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return result;\n        }\n        info_ptr[1] = 0;\n        *info_ptr = info_ptr[4];\n        if (((int)((uint)flags << 0x13) < 0) && ((value != -1 || (*data_ptr == 0)))) {\n          info_ptr[0x15] = value;\n        }\n        pointer = (int *)info_ptr[0xd];\n        *data_ptr = temp_value;\n        if (pointer != (int *)0x0) {\n          if (pointer != info_ptr + 0x11) {\n            FUN_080061f0(data_ptr);\n          }\n          info_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*UNRECOVERED_JUMPTABLE_00)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "data_ptr",
                "param_2": "info_ptr",
                "uVar1": "result",
                "iVar2": "value",
                "piVar3": "pointer",
                "uVar4": "temp_var",
                "uVar5": "flags",
                "iVar6": "temp",
                "unaff_r4": "unused_register4",
                "unaff_r5": "unused_register5",
                "pcVar7": "function_ptr",
                "iVar8": "counter",
                "uVar9": "temp_value"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initializeDataStructure_08006c40(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[25] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080061e0(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x8006f39;\n  dataStructure[10] = 0x8006f5b;\n  dataStructure[11] = 0x8006f93;\n  dataStructure[12] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "dataStructure[1]",
                "param_1[2]": "dataStructure[2]",
                "param_1[0x19]": "dataStructure[25]",
                "param_1[4]": "dataStructure[4]",
                "param_1[5]": "dataStructure[5]",
                "param_1[6]": "dataStructure[6]",
                "param_1[8]": "dataStructure[8]",
                "param_1[9]": "dataStructure[9]",
                "param_1[10]": "dataStructure[10]",
                "param_1[0xb]": "dataStructure[11]",
                "param_1[0xc]": "dataStructure[12]"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 inputData,int size)\n\n{\n  undefined4 *ptr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  ptr = (undefined4 *)FUN_08006288(inputData,offset + 0x74);\n  if (ptr != (undefined4 *)0x0) {\n    *ptr = 0;\n    ptr[1] = size;\n    ptr[2] = ptr + 3;\n    FUN_080061e0(ptr + 3,0,offset + 0x68);\n  }\n  return ptr;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "inputData",
                "param_2": "size",
                "puVar1": "ptr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_struct_08006cb4",
            "code": "\nvoid initialize_data_struct_08006cb4(undefined4 *data_struct_ptr)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data_struct_ptr[6] == 0) {\n    data_struct_ptr[0x12] = 0;\n    data_struct_ptr[0x13] = 0;\n    data_struct_ptr[0x14] = 0;\n    pointer = &DAT_200000fc;\n    data_struct_ptr[10] = &label_1;\n    if (data_struct_ptr == &DAT_200000fc) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data_struct_ptr == &DAT_200000fc) {\n      data_struct_ptr[6] = pointer;\n    }\n    result = FUN_08006d14();\n    data_struct_ptr[1] = result;\n    result = FUN_08006d14(data_struct_ptr);\n    data_struct_ptr[2] = result;\n    result = FUN_08006d14(data_struct_ptr);\n    data_struct_ptr[3] = result;\n    FUN_08006c40(data_struct_ptr[1],4,0);\n    FUN_08006c40(data_struct_ptr[2],9,1);\n    FUN_08006c40(data_struct_ptr[3],0x12,2);\n    data_struct_ptr[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_struct_08006cb4",
                "param_1": "data_struct_ptr",
                "uVar1": "result",
                "puVar2": "pointer",
                "LAB_08006c34_1": "label_1"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_structure_08006d14",
            "code": "\nint * initializeDataStructure_08006d14(undefined4 *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentElement;\n  int *nextElement;\n  int **dataStructure;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  dataStructure = (int **)&DAT_20000144;\n  do {\n    nextElement = dataStructure[2];\n    currentElement = dataStructure[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(nextElement + 3) == 0) {\n        *(undefined2 *)((int)nextElement + 0xe) = 0xffff;\n        nextElement[0x19] = 0;\n        *(undefined2 *)(nextElement + 3) = 1;\n        *nextElement = 0;\n        nextElement[2] = 0;\n        nextElement[1] = 0;\n        nextElement[4] = 0;\n        nextElement[5] = 0;\n        nextElement[6] = 0;\n        FUN_080061e0(nextElement + 0x17,0,8,1,param4);\n        nextElement[0xd] = 0;\n        nextElement[0xe] = 0;\n        nextElement[0x12] = 0;\n        nextElement[0x13] = 0;\n        return nextElement;\n      }\n      nextElement = nextElement + 0x1a;\n    }\n    if (*dataStructure == (int *)0x0) {\n      currentElement = (int *)FUN_08006c88(output,4);\n      *dataStructure = currentElement;\n      if (currentElement == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataStructure = (int **)*dataStructure;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_structure_08006d14",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentElement",
                "piVar2": "nextElement",
                "ppiVar3": "dataStructure"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_permissions_08006dc8",
            "code": "\nundefined4 checkPermissions_08006dc8(undefined4 baseAddress,int headerAddress,undefined4 *result,uint *permission)\n\n{\n  int status;\n  undefined4 permissionLevel;\n  undefined tempArray [4];\n  uint headerValue;\n  \n  if ((*(short *)(headerAddress + 0xe) < 0) ||\n     (status = FUN_08007004(baseAddress,(int)*(short *)(headerAddress + 0xe),tempArray), status < 0)) {\n    *permission = 0;\n    if ((int)((uint)*(ushort *)(headerAddress + 0xc) << 0x18) < 0) {\n      permissionLevel = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *permission = (uint)((headerValue & 0xf000) == 0x2000);\n  }\n  permissionLevel = 0x400;\nLAB_08006e08:\n  *result = permissionLevel;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_permissions_08006dc8",
                "param_1": "baseAddress",
                "param_2": "headerAddress",
                "param_3": "result",
                "param_4": "permission",
                "iVar1": "status",
                "uVar2": "permissionLevel",
                "auStack_4c": "tempArray",
                "local_48": "headerValue"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int inputValue,int *outputArray)\n\n{\n  ushort result;\n  int errorCode;\n  int tempValue1;\n  int *tempValue2;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputArray + 3) << 0x1e)) {\n    tempValue1 = inputValue;\n    tempValue2 = outputArray;\n    result = FUN_08006dc8(inputValue,outputArray,&tempValue1,&tempValue2);\n    errorCode = FUN_08006288(inputValue,tempValue1);\n    if (errorCode != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08006c34_1;\n      *outputArray = errorCode;\n      *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) | 0x80;\n      outputArray[4] = errorCode;\n      outputArray[5] = tempValue1;\n      if ((tempValue2 != (int *)0x0) &&\n         (errorCode = FUN_08007028(inputValue,(int)*(short *)((int)outputArray + 0xe)), errorCode != 0)) {\n        *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputArray + 3) = result | *(ushort *)(outputArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 2;\n  }\n  *outputArray = (int)outputArray + 0x47;\n  outputArray[4] = (int)outputArray + 0x47;\n  outputArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "inputValue",
                "param_2": "outputArray",
                "uVar1": "result",
                "iVar2": "errorCode",
                "local_18": "tempValue1",
                "local_14": "tempValue2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_in_string_08006e90",
            "code": "\nchar * find_character_in_string_08006e90(char *string,char character,int length)\n\n{\n  char *current_ptr;\n  char *next_ptr;\n  \n  current_ptr = string;\n  do {\n    next_ptr = current_ptr;\n    if (next_ptr == string + length) {\n      return (char *)0x0;\n    }\n    current_ptr = next_ptr + 1;\n  } while (*next_ptr != character);\n  return next_ptr;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_in_string_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_ptr",
                "pcVar2": "next_ptr"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "handle_function_08006f00",
            "code": "\nint handle_function_08006f00(uint input_param)\n\n{\n  int *data_array;\n  undefined4 status;\n  int function_index;\n  code *function_pointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *data_array_pointer;\n  \n  data_array = DAT_200000f8;\n  data_array_pointer = &DAT_200000f8;\n  if (0x1f < input_param) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  function_index = DAT_200000f8[0x11];\n  if ((function_index != 0) && (function_pointer = *(code **)(function_index + input_param * 4), function_pointer != (code *)0x0)) {\n    if (function_pointer != (code *)0x1) {\n      if (function_pointer == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(function_index + input_param * 4) = 0;\n      (*function_pointer)(input_param);\n    }\n    return 0;\n  }\n  status = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  function_index = FUN_08005740(status,input_param,input_param,0,data_array_pointer,unaff_r4,unaff_r5,in_lr);\n  if ((function_index == -1) && (DAT_200006a4 != 0)) {\n    *data_array = DAT_200006a4;\n  }\n  return function_index;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "handle_function_08006f00",
                "param_1": "input_param",
                "piVar1": "data_array",
                "uVar2": "status",
                "iVar3": "function_index",
                "pcVar4": "function_pointer",
                "puVar5": "data_array_pointer"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "check_returns_one_thunk_08005750",
            "code": "\nundefined4 check_returns_one_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "check_returns_one_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_parameter_value_08006f38",
            "code": "\nvoid updateParameterValue_08006f38(undefined4 inputPointer,int dataOffset)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(inputPointer,(int)*(short *)(dataOffset + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(dataOffset + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(dataOffset + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(dataOffset + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(dataOffset + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_parameter_value_08006f38",
                "param_1": "inputPointer",
                "param_2": "dataOffset",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "update_data_08006f5a",
            "code": "\nvoid updateData_08006f5a(int *data,int ptr,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if ((int)((uint)*(ushort *)(ptr + 0xc) << 0x17) < 0) {\n    FUN_08007048(data,(int)*(short *)(ptr + 0xe),0,2);\n  }\n  *(ushort *)(ptr + 0xc) = *(ushort *)(ptr + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(ptr + 0xe),value1,value2,value2,value2,temp1,\n                       temp2,temp3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *data = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "update_data_08006f5a",
                "param_1": "data",
                "param_2": "ptr",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "in_lr": "temp3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_status_08006f92",
            "code": "\nvoid updateStatus_08006f92(undefined4 data,int state)\n\n{\n  int result;\n  ushort modifiedFlag;\n  bool isError;\n  \n  result = FUN_08007048(data,(int)*(short *)(state + 0xe));\n  isError = result == -1;\n  if (isError) {\n    modifiedFlag = *(ushort *)(state + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(state + 0x54) = result;\n    modifiedFlag = *(ushort *)(state + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(state + 0xc) = modifiedFlag;\n  }\n  if (!isError) {\n    *(ushort *)(state + 0xc) = modifiedFlag;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_status_08006f92",
                "param_1": "data",
                "param_2": "state",
                "iVar1": "result",
                "uVar2": "modifiedFlag",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "find_error_and_assign_08007004",
            "code": "\nvoid findErrorAndAssign_08007004(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "find_error_and_assign_08007004",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "check_and_update_08007028",
            "code": "\nvoid checkAndUpdate_08007028(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005724(inputValue);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "check_and_update_08007028",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "update_parameter_with_result_08007048",
            "code": "\nvoid updateParameterWithResult_08007048(int *outputParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005728(inputParam1,inputParam2,inputParam3,inputParam3,inputParam3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputParam = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "update_parameter_with_result_08007048",
                "param_1": "outputParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "check_and_set_param_0800706c",
            "code": "\nvoid checkAndSetParam_0800706c(int *outputParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800572c(inputParam1,inputParam2,inputParam3,inputParam3,inputParam3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputParam = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "check_and_set_param_0800706c",
                "param_1": "outputParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initialize_data_08007090(void)\n\n{\n  code *jump_function;\n  \n  jump_function = initialize_data_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_function)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jump_function"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 175269,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}